{
  "abi": [
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        },
        {
          "internalType": "string",
          "name": "_error",
          "type": "string"
        }
      ],
      "name": "Attested",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_tokenId",
          "type": "uint256"
        },
        {
          "internalType": "string",
          "name": "_error",
          "type": "string"
        }
      ],
      "name": "NonExistent",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_address",
          "type": "address"
        }
      ],
      "name": "ZeroAddress",
      "type": "error"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "_to",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "_tokenId",
          "type": "uint256"
        }
      ],
      "name": "Attest",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "_from",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "_tokenId",
          "type": "uint256"
        }
      ],
      "name": "Revoke",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_owner",
          "type": "address"
        }
      ],
      "name": "balanceOf",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_tokenId",
          "type": "uint256"
        }
      ],
      "name": "isMinted",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_tokenId",
          "type": "uint256"
        },
        {
          "internalType": "string",
          "name": "tokenURI",
          "type": "string"
        }
      ],
      "name": "issue",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_tokenId",
          "type": "uint256"
        }
      ],
      "name": "issuerOf",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_tokenId",
          "type": "uint256"
        }
      ],
      "name": "ownerOf",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_from",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_tokenId",
          "type": "uint256"
        }
      ],
      "name": "revoke",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "allSourcePaths": {
    "1": "contracts/contracts/interfaces/ISoulbound.sol"
  },
  "ast": {
    "absolutePath": "contracts/contracts/interfaces/ISoulbound.sol",
    "exportedSymbols": {
      "ISoulbond": [
        1907
      ]
    },
    "id": 1908,
    "license": "GPL-3.0",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1815,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".7"
        ],
        "nodeType": "PragmaDirective",
        "src": "37:23:1"
      },
      {
        "abstract": false,
        "baseContracts": [],
        "canonicalName": "ISoulbond",
        "contractDependencies": [],
        "contractKind": "interface",
        "documentation": {
          "id": 1816,
          "nodeType": "StructuredDocumentation",
          "src": "64:1027:1",
          "text": " @title Soulbound Interface.\n @author Daccred.\n @dev \n Drafted from :: EIP-4973 [Ref: https://github.com/TimDaub/EIPs/blob/194f91067b8ef843467c15821ca5a5e3aa129fe6/EIPS/eip-4973.md].\n This interface will work with all tokens aimed at being Soulbound [Ref: https://www.cryptotimes.io/what-are-soulbound-tokens-sbts/].\n There are some quick information to note when implementing this interface.\n In addition to the link above, this interface ensures that a token can only be minted to an address once, minting the same token or\n transferring the same token to another address is not feasible. This is to make sure that, that particular token stays with the address,\n and CANNOT be moved around.\n The address the token is minted to is called the 'Soul Address'.\n However, this token can be revoked by the minter (whoever minted it to the Soul Address), and then, and only then\n can that token be reminted to the Soul Address.\n Also, in cases where the token is lost, the above will also apply."
        },
        "fullyImplemented": false,
        "id": 1907,
        "linearizedBaseContracts": [
          1907
        ],
        "name": "ISoulbond",
        "nameLocation": "1105:9:1",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "anonymous": false,
            "documentation": {
              "id": 1817,
              "nodeType": "StructuredDocumentation",
              "src": "1166:51:1",
              "text": "@dev Emitted when the token is minted to `_to`."
            },
            "id": 1823,
            "name": "Attest",
            "nameLocation": "1229:6:1",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 1822,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1819,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "_to",
                  "nameLocation": "1252:3:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1823,
                  "src": "1236:19:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1818,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1236:7:1",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1821,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "_tokenId",
                  "nameLocation": "1273:8:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1823,
                  "src": "1257:24:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1820,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1257:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1235:47:1"
            },
            "src": "1223:60:1"
          },
          {
            "anonymous": false,
            "documentation": {
              "id": 1824,
              "nodeType": "StructuredDocumentation",
              "src": "1289:75:1",
              "text": "@dev Emitted when the ownership of the token is withdrawn from `_from`."
            },
            "id": 1830,
            "name": "Revoke",
            "nameLocation": "1376:6:1",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 1829,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1826,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "_from",
                  "nameLocation": "1399:5:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1830,
                  "src": "1383:21:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1825,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1383:7:1",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1828,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "_tokenId",
                  "nameLocation": "1422:8:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1830,
                  "src": "1406:24:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1827,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1406:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1382:49:1"
            },
            "src": "1370:62:1"
          },
          {
            "documentation": {
              "id": 1831,
              "nodeType": "StructuredDocumentation",
              "src": "1534:40:1",
              "text": "@dev Thrown if address is 0 address."
            },
            "id": 1835,
            "name": "ZeroAddress",
            "nameLocation": "1586:11:1",
            "nodeType": "ErrorDefinition",
            "parameters": {
              "id": 1834,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1833,
                  "mutability": "mutable",
                  "name": "_address",
                  "nameLocation": "1606:8:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1835,
                  "src": "1598:16:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1832,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1598:7:1",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1597:18:1"
            },
            "src": "1580:36:1"
          },
          {
            "documentation": {
              "id": 1836,
              "nodeType": "StructuredDocumentation",
              "src": "1622:41:1",
              "text": "@dev Thrown if token is not existent."
            },
            "id": 1842,
            "name": "NonExistent",
            "nameLocation": "1675:11:1",
            "nodeType": "ErrorDefinition",
            "parameters": {
              "id": 1841,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1838,
                  "mutability": "mutable",
                  "name": "_tokenId",
                  "nameLocation": "1695:8:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1842,
                  "src": "1687:16:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1837,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1687:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1840,
                  "mutability": "mutable",
                  "name": "_error",
                  "nameLocation": "1712:6:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1842,
                  "src": "1705:13:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 1839,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1705:6:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1686:33:1"
            },
            "src": "1669:51:1"
          },
          {
            "documentation": {
              "id": 1843,
              "nodeType": "StructuredDocumentation",
              "src": "1726:49:1",
              "text": "@dev Thrown if token has already been minted."
            },
            "id": 1849,
            "name": "Attested",
            "nameLocation": "1787:8:1",
            "nodeType": "ErrorDefinition",
            "parameters": {
              "id": 1848,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1845,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nameLocation": "1804:7:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1849,
                  "src": "1796:15:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1844,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1796:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1847,
                  "mutability": "mutable",
                  "name": "_error",
                  "nameLocation": "1820:6:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1849,
                  "src": "1813:13:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 1846,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1813:6:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1795:32:1"
            },
            "src": "1781:47:1"
          },
          {
            "documentation": {
              "id": 1850,
              "nodeType": "StructuredDocumentation",
              "src": "1882:518:1",
              "text": " @dev Mints a new token `_tokenId` to `_to`, giving to ownership of token `_tokenId`.\n This function will be used hand in hand with ERC721's _mint() function.\n Emits the {Attest} event.\n @notice `_to` cannot transfer the token.\n [CONDITIONS]\n `_to` must not be a 0 address.\n `_tokenId` must be an existent token.\n @param\n _to, Address to which token `_tokenId` is minted.\n _tokenId, Token to mint.\n @return bool."
            },
            "functionSelector": "ebf469dc",
            "id": 1861,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "issue",
            "nameLocation": "2415:5:1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1857,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1852,
                  "mutability": "mutable",
                  "name": "_to",
                  "nameLocation": "2429:3:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1861,
                  "src": "2421:11:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1851,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2421:7:1",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1854,
                  "mutability": "mutable",
                  "name": "_tokenId",
                  "nameLocation": "2442:8:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1861,
                  "src": "2434:16:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1853,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2434:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1856,
                  "mutability": "mutable",
                  "name": "tokenURI",
                  "nameLocation": "2466:8:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1861,
                  "src": "2452:22:1",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 1855,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "2452:6:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2420:55:1"
            },
            "returnParameters": {
              "id": 1860,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1859,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1861,
                  "src": "2493:4:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 1858,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "2493:4:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2492:6:1"
            },
            "scope": 1907,
            "src": "2406:93:1",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "documentation": {
              "id": 1862,
              "nodeType": "StructuredDocumentation",
              "src": "2509:659:1",
              "text": " @dev Withdraws ownership of token `_tokenId` from `_From`.\n This will be done when the ERC721's _burn() function is called.\n Emits the {Revoke} event.\n @notice `_from` must own the token.\n [CONDITIONS]\n `_from` must not be a 0 address.\n `_tokenId` must be an existent token.\n The function can only be called by the issuer of the token.\n This modifier onlyIssuer will be implemented in the contract. [Modifiers cannot be made in interfaces].\n @param\n _from => Address which owns token `_tokenId`.\n _tokenId => Token to revoke.\n @return bool."
            },
            "functionSelector": "eac449d9",
            "id": 1871,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "revoke",
            "nameLocation": "3183:6:1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1867,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1864,
                  "mutability": "mutable",
                  "name": "_from",
                  "nameLocation": "3198:5:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1871,
                  "src": "3190:13:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1863,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3190:7:1",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1866,
                  "mutability": "mutable",
                  "name": "_tokenId",
                  "nameLocation": "3213:8:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1871,
                  "src": "3205:16:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1865,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3205:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3189:33:1"
            },
            "returnParameters": {
              "id": 1870,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1869,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1871,
                  "src": "3240:4:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 1868,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "3240:4:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3239:6:1"
            },
            "scope": 1907,
            "src": "3174:72:1",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "functionSelector": "6352211e",
            "id": 1878,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "ownerOf",
            "nameLocation": "3514:7:1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1874,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1873,
                  "mutability": "mutable",
                  "name": "_tokenId",
                  "nameLocation": "3530:8:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1878,
                  "src": "3522:16:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1872,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3522:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3521:18:1"
            },
            "returnParameters": {
              "id": 1877,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1876,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1878,
                  "src": "3557:7:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1875,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3557:7:1",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3556:9:1"
            },
            "scope": 1907,
            "src": "3505:61:1",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "documentation": {
              "id": 1879,
              "nodeType": "StructuredDocumentation",
              "src": "3576:406:1",
              "text": " @dev Since a token cannnot be minted twice.\n This function returns the address that minted token `_tokenId` to `_to`.\n [CONDITIONS]\n `_to` must not be a 0 address.\n `_tokenId` must be an existent token.\n @param\n _to => Address to which token `_tokenId` is minted.\n _tokenId => Token minted.\n @return address of issuer."
            },
            "functionSelector": "fb8f198d",
            "id": 1888,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "issuerOf",
            "nameLocation": "3997:8:1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1884,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1881,
                  "mutability": "mutable",
                  "name": "_to",
                  "nameLocation": "4014:3:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1888,
                  "src": "4006:11:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1880,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4006:7:1",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1883,
                  "mutability": "mutable",
                  "name": "_tokenId",
                  "nameLocation": "4027:8:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1888,
                  "src": "4019:16:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1882,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4019:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4005:31:1"
            },
            "returnParameters": {
              "id": 1887,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1886,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1888,
                  "src": "4054:7:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1885,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4054:7:1",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4053:9:1"
            },
            "scope": 1907,
            "src": "3988:75:1",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "documentation": {
              "id": 1889,
              "nodeType": "StructuredDocumentation",
              "src": "4073:341:1",
              "text": " @dev Returns true if token `_tokenId` was minted from `_from` to `_to`.\n [CONDITIONS]\n `_to` must not be a 0 address.\n `_tokenId` must be an existent token.\n @param\n _to => Address to which token `_tokenId` is minted.\n _tokenId => Token minted.\n @return bool."
            },
            "functionSelector": "5899e7b2",
            "id": 1898,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "isMinted",
            "nameLocation": "4429:8:1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1894,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1891,
                  "mutability": "mutable",
                  "name": "_to",
                  "nameLocation": "4446:3:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1898,
                  "src": "4438:11:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1890,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4438:7:1",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1893,
                  "mutability": "mutable",
                  "name": "_tokenId",
                  "nameLocation": "4459:8:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1898,
                  "src": "4451:16:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1892,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4451:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4437:31:1"
            },
            "returnParameters": {
              "id": 1897,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1896,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1898,
                  "src": "4486:4:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 1895,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "4486:4:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4485:6:1"
            },
            "scope": 1907,
            "src": "4420:72:1",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "documentation": {
              "id": 1899,
              "nodeType": "StructuredDocumentation",
              "src": "4502:236:1",
              "text": " @dev Returns 1 if isMinted returns true and 0 if otherwise.\n [CONDITIONS]\n `_owner` must not be a 0 address.\n @param\n _owner => Address to evaluate.\n @return uint256."
            },
            "functionSelector": "70a08231",
            "id": 1906,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "balanceOf",
            "nameLocation": "4753:9:1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1902,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1901,
                  "mutability": "mutable",
                  "name": "_owner",
                  "nameLocation": "4771:6:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1906,
                  "src": "4763:14:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1900,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4763:7:1",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4762:16:1"
            },
            "returnParameters": {
              "id": 1905,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1904,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1906,
                  "src": "4796:7:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1903,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4796:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4795:9:1"
            },
            "scope": 1907,
            "src": "4744:61:1",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "scope": 1908,
        "src": "1095:3713:1",
        "usedErrors": [
          1835,
          1842,
          1849
        ]
      }
    ],
    "src": "37:4773:1"
  },
  "bytecode": "",
  "bytecodeSha1": "da39a3ee5e6b4b0d3255bfef95601890afd80709",
  "compiler": {
    "evm_version": "istanbul",
    "optimizer": {
      "enabled": true,
      "runs": 200
    },
    "version": "0.8.12+commit.f00d7308"
  },
  "contractName": "ISoulbond",
  "coverageMap": {
    "branches": {},
    "statements": {}
  },
  "dependencies": [],
  "deployedBytecode": "",
  "deployedSourceMap": "",
  "language": "Solidity",
  "natspec": {
    "author": "Daccred.",
    "details": " Drafted from :: EIP-4973 [Ref: https://github.com/TimDaub/EIPs/blob/194f91067b8ef843467c15821ca5a5e3aa129fe6/EIPS/eip-4973.md]. This interface will work with all tokens aimed at being Soulbound [Ref: https://www.cryptotimes.io/what-are-soulbound-tokens-sbts/]. There are some quick information to note when implementing this interface. In addition to the link above, this interface ensures that a token can only be minted to an address once, minting the same token or transferring the same token to another address is not feasible. This is to make sure that, that particular token stays with the address, and CANNOT be moved around. The address the token is minted to is called the 'Soul Address'. However, this token can be revoked by the minter (whoever minted it to the Soul Address), and then, and only then can that token be reminted to the Soul Address. Also, in cases where the token is lost, the above will also apply.",
    "errors": {
      "Attested(uint256,string)": [
        {
          "details": "Thrown if token has already been minted."
        }
      ],
      "NonExistent(uint256,string)": [
        {
          "details": "Thrown if token is not existent."
        }
      ],
      "ZeroAddress(address)": [
        {
          "details": "Thrown if address is 0 address."
        }
      ]
    },
    "events": {
      "Attest(address,uint256)": {
        "details": "Emitted when the token is minted to `_to`."
      },
      "Revoke(address,uint256)": {
        "details": "Emitted when the ownership of the token is withdrawn from `_from`."
      }
    },
    "kind": "dev",
    "methods": {
      "balanceOf(address)": {
        "details": "Returns 1 if isMinted returns true and 0 if otherwise. [CONDITIONS] `_owner` must not be a 0 address.",
        "params": {
          "_owner": "=> Address to evaluate."
        },
        "returns": {
          "_0": "uint256."
        }
      },
      "isMinted(address,uint256)": {
        "details": "Returns true if token `_tokenId` was minted from `_from` to `_to`. [CONDITIONS] `_to` must not be a 0 address. `_tokenId` must be an existent token.",
        "params": {
          "_to": "=> Address to which token `_tokenId` is minted. _tokenId => Token minted."
        },
        "returns": {
          "_0": "bool."
        }
      },
      "issue(address,uint256,string)": {
        "details": "Mints a new token `_tokenId` to `_to`, giving to ownership of token `_tokenId`. This function will be used hand in hand with ERC721's _mint() function. Emits the {Attest} event.",
        "notice": "`_to` cannot transfer the token. [CONDITIONS] `_to` must not be a 0 address. `_tokenId` must be an existent token.",
        "params": {
          "_to": ", Address to which token `_tokenId` is minted. _tokenId, Token to mint."
        },
        "returns": {
          "_0": "bool."
        }
      },
      "issuerOf(address,uint256)": {
        "details": "Since a token cannnot be minted twice. This function returns the address that minted token `_tokenId` to `_to`. [CONDITIONS] `_to` must not be a 0 address. `_tokenId` must be an existent token.",
        "params": {
          "_to": "=> Address to which token `_tokenId` is minted. _tokenId => Token minted."
        },
        "returns": {
          "_0": "address of issuer."
        }
      },
      "revoke(address,uint256)": {
        "details": "Withdraws ownership of token `_tokenId` from `_From`. This will be done when the ERC721's _burn() function is called. Emits the {Revoke} event.",
        "notice": "`_from` must own the token. [CONDITIONS] `_from` must not be a 0 address. `_tokenId` must be an existent token. The function can only be called by the issuer of the token. This modifier onlyIssuer will be implemented in the contract. [Modifiers cannot be made in interfaces].",
        "params": {
          "_from": "=> Address which owns token `_tokenId`. _tokenId => Token to revoke."
        },
        "returns": {
          "_0": "bool."
        }
      }
    },
    "title": "Soulbound Interface.",
    "version": 1
  },
  "offset": [
    1095,
    4808
  ],
  "opcodes": "",
  "pcMap": {},
  "sha1": "fa8b227053fa1172a736bfdb85be6f1006d7617a",
  "source": "// SPDX-License-Identifier: GPL-3.0\npragma solidity ^0.8.7;\n\n/**\n* @title Soulbound Interface.\n* @author Daccred.\n* @dev \n* Drafted from :: EIP-4973 [Ref: https://github.com/TimDaub/EIPs/blob/194f91067b8ef843467c15821ca5a5e3aa129fe6/EIPS/eip-4973.md].\n*\n* This interface will work with all tokens aimed at being Soulbound [Ref: https://www.cryptotimes.io/what-are-soulbound-tokens-sbts/].\n* There are some quick information to note when implementing this interface.\n* In addition to the link above, this interface ensures that a token can only be minted to an address once, minting the same token or\n* transferring the same token to another address is not feasible. This is to make sure that, that particular token stays with the address,\n* and CANNOT be moved around.\n* The address the token is minted to is called the 'Soul Address'.\n* However, this token can be revoked by the minter (whoever minted it to the Soul Address), and then, and only then\n* can that token be reminted to the Soul Address.\n* Also, in cases where the token is lost, the above will also apply.\n*/\n\ninterface ISoulbond {\n    // ========== E V E N T S ==========\n\n    /// @dev Emitted when the token is minted to `_to`.\n    event Attest(address indexed _to, uint256 indexed _tokenId);\n    /// @dev Emitted when the ownership of the token is withdrawn from `_from`.\n    event Revoke(address indexed _from, uint256 indexed _tokenId);\n    \n    // ========== E V E N T S ==========\n\n\n    // ========== E R R O R s ==========\n\n    /// @dev Thrown if address is 0 address.\n    error ZeroAddress(address _address);\n    /// @dev Thrown if token is not existent.\n    error NonExistent(uint256 _tokenId, string _error);\n    /// @dev Thrown if token has already been minted.\n    error Attested(uint256 tokenId, string _error);\n\n    // ========== E R R O R s ==========\n\n\n    /**\n    * @dev Mints a new token `_tokenId` to `_to`, giving to ownership of token `_tokenId`.\n    * This function will be used hand in hand with ERC721's _mint() function.\n    * Emits the {Attest} event.\n    *\n    * @notice `_to` cannot transfer the token.\n    *\n    * [CONDITIONS]\n    * `_to` must not be a 0 address.\n    * `_tokenId` must be an existent token.\n    *\n    * @param\n    * _to, Address to which token `_tokenId` is minted.\n    * _tokenId, Token to mint.\n    *\n    * @return bool.\n    */\n    function issue(address _to, uint256 _tokenId, string memory tokenURI) external returns(bool);\n\n\n    /**\n    * @dev Withdraws ownership of token `_tokenId` from `_From`.\n    * This will be done when the ERC721's _burn() function is called.\n    * Emits the {Revoke} event.\n    *\n    * @notice `_from` must own the token.\n    *\n    * [CONDITIONS]\n    * `_from` must not be a 0 address.\n    * `_tokenId` must be an existent token.\n    * The function can only be called by the issuer of the token.\n    * This modifier onlyIssuer will be implemented in the contract. [Modifiers cannot be made in interfaces].\n    *\n    * @param\n    * _from => Address which owns token `_tokenId`.\n    * _tokenId => Token to revoke.\n    *\n    * @return bool.\n    */\n    function revoke(address _from, uint256 _tokenId) external returns(bool);\n\n\n    /*\n    * @dev Returns the address that owns token `_tokenId`.\n    *\n    * [CONDITIONS]\n    * `_tokenId` must be an existent token.\n    *\n    * @param _tokenId => Token minted.\n    *\n    * @return address of owner of `_tokenId`.\n    */\n    function ownerOf(uint256 _tokenId) external returns(address);\n\n\n    /**\n    * @dev Since a token cannnot be minted twice.\n    * This function returns the address that minted token `_tokenId` to `_to`.\n    *\n    * [CONDITIONS]\n    * `_to` must not be a 0 address.\n    * `_tokenId` must be an existent token.\n    *\n    * @param\n    * _to => Address to which token `_tokenId` is minted.\n    * _tokenId => Token minted.\n    *\n    * @return address of issuer.\n    */\n    function issuerOf(address _to, uint256 _tokenId) external returns(address);\n\n\n    /**\n    * @dev Returns true if token `_tokenId` was minted from `_from` to `_to`.\n    *\n    * [CONDITIONS]\n    * `_to` must not be a 0 address.\n    * `_tokenId` must be an existent token.\n    *\n    * @param\n    * _to => Address to which token `_tokenId` is minted.\n    * _tokenId => Token minted.\n    *\n    * @return bool.\n    */\n    function isMinted(address _to, uint256 _tokenId) external returns(bool);\n\n\n    /**\n    * @dev Returns 1 if isMinted returns true and 0 if otherwise.\n    *\n    * [CONDITIONS]\n    * `_owner` must not be a 0 address.\n    *\n    * @param\n    * _owner => Address to evaluate.\n    *\n    * @return uint256.\n    */\n    function balanceOf(address _owner) external returns(uint256);\n}\n",
  "sourceMap": "",
  "sourcePath": "contracts/contracts/interfaces/ISoulbound.sol",
  "type": "interface"
}