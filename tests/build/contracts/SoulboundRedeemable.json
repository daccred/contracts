{
  "abi": [
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "name",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "symbol",
          "type": "string"
        },
        {
          "internalType": "address",
          "name": "_allowlistOwner",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_totalSupply",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_priceLimit",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_tokenPrice",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_address",
          "type": "address"
        }
      ],
      "name": "Unsigned",
      "type": "error"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "Attest",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "time",
          "type": "uint256"
        }
      ],
      "name": "Extended",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "IssueWithSignature",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "extension",
          "type": "uint256"
        }
      ],
      "name": "Redeemed",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "Revoke",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "RevokeWithSignature",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "_address",
          "type": "address"
        }
      ],
      "name": "Signed",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "_address",
          "type": "address"
        }
      ],
      "name": "Verified",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "addressHash",
          "type": "bytes32"
        },
        {
          "indexed": true,
          "internalType": "bool",
          "name": "result",
          "type": "bool"
        }
      ],
      "name": "VerifySignature",
      "type": "event"
    },
    {
      "stateMutability": "payable",
      "type": "fallback"
    },
    {
      "inputs": [],
      "name": "_getBaseURI",
      "outputs": [
        {
          "internalType": "string",
          "name": "_baseURI",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        }
      ],
      "name": "balanceOf",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "burn",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "time",
          "type": "uint256"
        }
      ],
      "name": "extendExpiry",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "generateTokenURI",
      "outputs": [
        {
          "internalType": "string",
          "name": "_tokenURI",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getAllowlistOwner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "getExpiryDate",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getIndividualTokenPrice",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "_tokenPrice",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getPriceLimit",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "_priceLimit",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "getTimeLeft",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_tokenId",
          "type": "uint256"
        }
      ],
      "name": "isMinted",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "isValid",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "addr",
          "type": "address"
        },
        {
          "internalType": "bytes32",
          "name": "hash",
          "type": "bytes32"
        },
        {
          "internalType": "bytes",
          "name": "sig",
          "type": "bytes"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        },
        {
          "internalType": "string",
          "name": "tokenURI",
          "type": "string"
        }
      ],
      "name": "issueWithSignature",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_tokenId",
          "type": "uint256"
        }
      ],
      "name": "issuerOf",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_tokenExpiryDate",
          "type": "uint256"
        }
      ],
      "name": "mintPendingRedeemableToken",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "name",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "addr",
          "type": "address"
        },
        {
          "internalType": "bytes32",
          "name": "hash",
          "type": "bytes32"
        },
        {
          "internalType": "bytes",
          "name": "sig",
          "type": "bytes"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        },
        {
          "internalType": "string",
          "name": "tokenURI",
          "type": "string"
        }
      ],
      "name": "ownerIssueWithSignature",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "ownerOf",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "hash",
          "type": "bytes32"
        },
        {
          "internalType": "bytes",
          "name": "sig",
          "type": "bytes"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "ownerRevokeWithSignature",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_receiver",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "payToReceiveToken",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_receiver",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_tokenExpiryDate",
          "type": "uint256"
        }
      ],
      "name": "redeemMintedToken",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_caller",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_receiver",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_tokenExpiryDate",
          "type": "uint256"
        },
        {
          "internalType": "bytes32",
          "name": "hash",
          "type": "bytes32"
        },
        {
          "internalType": "bytes",
          "name": "sig",
          "type": "bytes"
        }
      ],
      "name": "redeemMintedTokenWithSignature",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_receiver",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_tokenExpiryDate",
          "type": "uint256"
        }
      ],
      "name": "redeemPendingToken",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_caller",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_receiver",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_tokenExpiryDate",
          "type": "uint256"
        },
        {
          "internalType": "bytes32",
          "name": "hash",
          "type": "bytes32"
        },
        {
          "internalType": "bytes",
          "name": "sig",
          "type": "bytes"
        }
      ],
      "name": "redeemPendingTokenWithSignature",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "hash",
          "type": "bytes32"
        },
        {
          "internalType": "bytes",
          "name": "sig",
          "type": "bytes"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "revokeWithSignature",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "caller",
          "type": "address"
        },
        {
          "internalType": "string",
          "name": "_baseURI",
          "type": "string"
        }
      ],
      "name": "setBaseURI",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "caller",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_price",
          "type": "uint256"
        }
      ],
      "name": "setPrice",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes4",
          "name": "interfaceId",
          "type": "bytes4"
        }
      ],
      "name": "supportsInterface",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "symbol",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "tokenURI",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "hash",
          "type": "bytes32"
        },
        {
          "internalType": "bytes",
          "name": "sig",
          "type": "bytes"
        }
      ],
      "name": "verifySignature",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_signer",
          "type": "address"
        },
        {
          "internalType": "bytes32",
          "name": "_hash",
          "type": "bytes32"
        },
        {
          "internalType": "bytes",
          "name": "_signature",
          "type": "bytes"
        }
      ],
      "name": "verifySigner",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_caller",
          "type": "address"
        }
      ],
      "name": "withdraw",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "stateMutability": "payable",
      "type": "receive"
    }
  ],
  "allSourcePaths": {
    "0": "C:/Users/antho/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.6.0/contracts/access/Ownable.sol",
    "14": "contracts/contracts/packages/common/Allowlist.sol",
    "15": "contracts/contracts/packages/common/IAllowlist.sol",
    "36": "contracts/contracts/packages/soulbound/contracts/IsValidWithDate.sol",
    "37": "contracts/contracts/packages/soulbound/contracts/Soulbound.sol",
    "38": "contracts/contracts/packages/soulbound/contracts/SoulboundCore.sol",
    "39": "contracts/contracts/packages/soulbound/contracts/SoulboundRedeemable.sol",
    "40": "contracts/contracts/packages/soulbound/contracts/SoulboundWithSignature.sol",
    "41": "contracts/contracts/packages/soulbound/contracts/eips/ERC-4973.sol",
    "5": "C:/Users/antho/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.6.0/contracts/utils/Context.sol"
  },
  "ast": {
    "absolutePath": "contracts/contracts/packages/soulbound/contracts/SoulboundRedeemable.sol",
    "exportedSymbols": {
      "Allowlist": [
        1120
      ],
      "Context": [
        6410
      ],
      "ERC165": [
        5549
      ],
      "ERC4973": [
        5876
      ],
      "IAllowlist": [
        1161
      ],
      "IERC165": [
        5528
      ],
      "IERC4973": [
        5605
      ],
      "IERC721Metadata": [
        5567
      ],
      "ISoulbond": [
        5970
      ],
      "IsValidWithDate": [
        4116
      ],
      "Ownable": [
        6075
      ],
      "Soulbound": [
        4383
      ],
      "SoulboundCore": [
        4708
      ],
      "SoulboundRedeemable": [
        5423
      ],
      "SoulboundWithSignature": [
        5516
      ]
    },
    "id": 5424,
    "license": "GPL-3.0",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 4710,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".8"
        ],
        "nodeType": "PragmaDirective",
        "src": "438:23:39"
      },
      {
        "absolutePath": "contracts/contracts/packages/soulbound/contracts/SoulboundWithSignature.sol",
        "file": "./SoulboundWithSignature.sol",
        "id": 4711,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 5424,
        "sourceUnit": 5517,
        "src": "463:38:39",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "contracts/contracts/packages/soulbound/contracts/IsValidWithDate.sol",
        "file": "./IsValidWithDate.sol",
        "id": 4712,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 5424,
        "sourceUnit": 4117,
        "src": "502:31:39",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 4714,
              "name": "IsValidWithDate",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 4116,
              "src": "858:15:39"
            },
            "id": 4715,
            "nodeType": "InheritanceSpecifier",
            "src": "858:15:39"
          },
          {
            "baseName": {
              "id": 4716,
              "name": "SoulboundWithSignature",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 5516,
              "src": "875:22:39"
            },
            "id": 4717,
            "nodeType": "InheritanceSpecifier",
            "src": "875:22:39"
          }
        ],
        "canonicalName": "SoulboundRedeemable",
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": {
          "id": 4713,
          "nodeType": "StructuredDocumentation",
          "src": "535:290:39",
          "text": " @title Soulbound Redeemable.\n @author Daccred.\n @dev  An instance of the Soulbound token with capped supply\n       and tokens having their own individual expiry date.\n       Tokens are minted to and are pendng until receivers\n       pay to receive their complete token."
        },
        "fullyImplemented": true,
        "id": 5423,
        "linearizedBaseContracts": [
          5423,
          5516,
          4708,
          1120,
          4383,
          6075,
          6410,
          1161,
          5876,
          5605,
          5567,
          5549,
          5528,
          4116
        ],
        "name": "SoulboundRedeemable",
        "nameLocation": "835:19:39",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "documentation": {
              "id": 4718,
              "nodeType": "StructuredDocumentation",
              "src": "904:55:39",
              "text": "@dev Total sales of tokens [Total tokens paid for]."
            },
            "id": 4720,
            "mutability": "mutable",
            "name": "totalSales",
            "nameLocation": "980:10:39",
            "nodeType": "VariableDeclaration",
            "scope": 5423,
            "src": "964:26:39",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 4719,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "964:7:39",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "private"
          },
          {
            "constant": false,
            "documentation": {
              "id": 4721,
              "nodeType": "StructuredDocumentation",
              "src": "996:34:39",
              "text": "@dev Total revenue from sales."
            },
            "id": 4723,
            "mutability": "mutable",
            "name": "totalRevenue",
            "nameLocation": "1051:12:39",
            "nodeType": "VariableDeclaration",
            "scope": 5423,
            "src": "1035:28:39",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 4722,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "1035:7:39",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "private"
          },
          {
            "constant": false,
            "documentation": {
              "id": 4724,
              "nodeType": "StructuredDocumentation",
              "src": "1069:56:39",
              "text": "@dev Price Limit [in eth] set by deploying contract."
            },
            "id": 4726,
            "mutability": "mutable",
            "name": "priceLimit",
            "nameLocation": "1146:10:39",
            "nodeType": "VariableDeclaration",
            "scope": 5423,
            "src": "1130:26:39",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 4725,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "1130:7:39",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "private"
          },
          {
            "constant": false,
            "documentation": {
              "id": 4727,
              "nodeType": "StructuredDocumentation",
              "src": "1162:53:39",
              "text": "@dev Price of individual tokens, set by deployer."
            },
            "id": 4729,
            "mutability": "mutable",
            "name": "tokenPrice",
            "nameLocation": "1236:10:39",
            "nodeType": "VariableDeclaration",
            "scope": 5423,
            "src": "1220:26:39",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 4728,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "1220:7:39",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "private"
          },
          {
            "constant": false,
            "documentation": {
              "id": 4730,
              "nodeType": "StructuredDocumentation",
              "src": "1252:33:39",
              "text": "@dev Pending token receivals."
            },
            "id": 4734,
            "mutability": "mutable",
            "name": "pending",
            "nameLocation": "1323:7:39",
            "nodeType": "VariableDeclaration",
            "scope": 5423,
            "src": "1290:40:39",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_uint256_$_t_bool_$",
              "typeString": "mapping(uint256 => bool)"
            },
            "typeName": {
              "id": 4733,
              "keyType": {
                "id": 4731,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "1298:7:39",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "nodeType": "Mapping",
              "src": "1290:24:39",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_uint256_$_t_bool_$",
                "typeString": "mapping(uint256 => bool)"
              },
              "valueType": {
                "id": 4732,
                "name": "bool",
                "nodeType": "ElementaryTypeName",
                "src": "1309:4:39",
                "typeDescriptions": {
                  "typeIdentifier": "t_bool",
                  "typeString": "bool"
                }
              }
            },
            "visibility": "private"
          },
          {
            "constant": false,
            "documentation": {
              "id": 4735,
              "nodeType": "StructuredDocumentation",
              "src": "1336:43:39",
              "text": "@dev Pending address to receive tokens."
            },
            "id": 4739,
            "mutability": "mutable",
            "name": "pendingReceivers",
            "nameLocation": "1420:16:39",
            "nodeType": "VariableDeclaration",
            "scope": 5423,
            "src": "1384:52:39",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
              "typeString": "mapping(uint256 => address)"
            },
            "typeName": {
              "id": 4738,
              "keyType": {
                "id": 4736,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "1392:7:39",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "nodeType": "Mapping",
              "src": "1384:27:39",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
                "typeString": "mapping(uint256 => address)"
              },
              "valueType": {
                "id": 4737,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "1403:7:39",
                "stateMutability": "nonpayable",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              }
            },
            "visibility": "private"
          },
          {
            "constant": false,
            "documentation": {
              "id": 4740,
              "nodeType": "StructuredDocumentation",
              "src": "1442:89:39",
              "text": "@dev    Tax for token redemptions.\n         15 represents 1.5% of total sales."
            },
            "id": 4743,
            "mutability": "mutable",
            "name": "tax",
            "nameLocation": "1552:3:39",
            "nodeType": "VariableDeclaration",
            "scope": 5423,
            "src": "1536:24:39",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 4741,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "1536:7:39",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "hexValue": "3135",
              "id": 4742,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "1558:2:39",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_15_by_1",
                "typeString": "int_const 15"
              },
              "value": "15"
            },
            "visibility": "private"
          },
          {
            "constant": false,
            "documentation": {
              "id": 4744,
              "nodeType": "StructuredDocumentation",
              "src": "1566:25:39",
              "text": "@dev ReEntrancy Lock."
            },
            "id": 4746,
            "mutability": "mutable",
            "name": "locked",
            "nameLocation": "1609:6:39",
            "nodeType": "VariableDeclaration",
            "scope": 5423,
            "src": "1596:19:39",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_bool",
              "typeString": "bool"
            },
            "typeName": {
              "id": 4745,
              "name": "bool",
              "nodeType": "ElementaryTypeName",
              "src": "1596:4:39",
              "typeDescriptions": {
                "typeIdentifier": "t_bool",
                "typeString": "bool"
              }
            },
            "visibility": "private"
          },
          {
            "anonymous": false,
            "documentation": {
              "id": 4747,
              "nodeType": "StructuredDocumentation",
              "src": "1622:42:39",
              "text": "@dev Emitted when a token is redeemed."
            },
            "eventSelector": "6f73b7b8d37df32ea60a45eadc8fc3d2d716d705ee099bd506817482ce847316",
            "id": 4753,
            "name": "Redeemed",
            "nameLocation": "1675:8:39",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 4752,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4749,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nameLocation": "1700:7:39",
                  "nodeType": "VariableDeclaration",
                  "scope": 4753,
                  "src": "1684:23:39",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 4748,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1684:7:39",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 4751,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "extension",
                  "nameLocation": "1725:9:39",
                  "nodeType": "VariableDeclaration",
                  "scope": 4753,
                  "src": "1709:25:39",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 4750,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1709:7:39",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1683:52:39"
            },
            "src": "1669:67:39"
          },
          {
            "body": {
              "id": 4790,
              "nodeType": "Block",
              "src": "2141:307:39",
              "statements": [
                {
                  "documentation": "@dev Ensure that limit is higher or equal to individual token price.",
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 4778,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 4776,
                          "name": "_tokenPrice",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4766,
                          "src": "2240:11:39",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<=",
                        "rightExpression": {
                          "id": 4777,
                          "name": "_priceLimit",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4764,
                          "src": "2255:11:39",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "2240:26:39",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "507269636520686967686572207468616e206c696d69742e",
                        "id": 4779,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2268:26:39",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_7b146f5a9a7ca2f626343d6bffe001d397c63c34b0f5f9411b5d9ebfbed8c9de",
                          "typeString": "literal_string \"Price higher than limit.\""
                        },
                        "value": "Price higher than limit."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_7b146f5a9a7ca2f626343d6bffe001d397c63c34b0f5f9411b5d9ebfbed8c9de",
                          "typeString": "literal_string \"Price higher than limit.\""
                        }
                      ],
                      "id": 4775,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "2232:7:39",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 4780,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2232:63:39",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 4781,
                  "nodeType": "ExpressionStatement",
                  "src": "2232:63:39"
                },
                {
                  "documentation": "@dev Set priceLimit.",
                  "expression": {
                    "id": 4784,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 4782,
                      "name": "priceLimit",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4726,
                      "src": "2338:10:39",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 4783,
                      "name": "_priceLimit",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4764,
                      "src": "2351:11:39",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "2338:24:39",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 4785,
                  "nodeType": "ExpressionStatement",
                  "src": "2338:24:39"
                },
                {
                  "documentation": "@dev Set individual token price.",
                  "expression": {
                    "id": 4788,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 4786,
                      "name": "tokenPrice",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4729,
                      "src": "2417:10:39",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 4787,
                      "name": "_tokenPrice",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4766,
                      "src": "2430:11:39",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "2417:24:39",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 4789,
                  "nodeType": "ExpressionStatement",
                  "src": "2417:24:39"
                }
              ]
            },
            "documentation": {
              "id": 4754,
              "nodeType": "StructuredDocumentation",
              "src": "1742:129:39",
              "text": "@dev    Deploy the SoulboundWithSignature with set\n         total supply, priceLimit and price of an individual token."
            },
            "id": 4791,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [
              {
                "arguments": [
                  {
                    "id": 4769,
                    "name": "name",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 4756,
                    "src": "2096:4:39",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory_ptr",
                      "typeString": "string memory"
                    }
                  },
                  {
                    "id": 4770,
                    "name": "symbol",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 4758,
                    "src": "2102:6:39",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory_ptr",
                      "typeString": "string memory"
                    }
                  },
                  {
                    "id": 4771,
                    "name": "_allowlistOwner",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 4760,
                    "src": "2110:15:39",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  {
                    "id": 4772,
                    "name": "_totalSupply",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 4762,
                    "src": "2127:12:39",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  }
                ],
                "id": 4773,
                "kind": "baseConstructorSpecifier",
                "modifierName": {
                  "id": 4768,
                  "name": "SoulboundWithSignature",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 5516,
                  "src": "2073:22:39"
                },
                "nodeType": "ModifierInvocation",
                "src": "2073:67:39"
              }
            ],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 4767,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4756,
                  "mutability": "mutable",
                  "name": "name",
                  "nameLocation": "1911:4:39",
                  "nodeType": "VariableDeclaration",
                  "scope": 4791,
                  "src": "1897:18:39",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 4755,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1897:6:39",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 4758,
                  "mutability": "mutable",
                  "name": "symbol",
                  "nameLocation": "1939:6:39",
                  "nodeType": "VariableDeclaration",
                  "scope": 4791,
                  "src": "1925:20:39",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 4757,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1925:6:39",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 4760,
                  "mutability": "mutable",
                  "name": "_allowlistOwner",
                  "nameLocation": "1963:15:39",
                  "nodeType": "VariableDeclaration",
                  "scope": 4791,
                  "src": "1955:23:39",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 4759,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1955:7:39",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 4762,
                  "mutability": "mutable",
                  "name": "_totalSupply",
                  "nameLocation": "1996:12:39",
                  "nodeType": "VariableDeclaration",
                  "scope": 4791,
                  "src": "1988:20:39",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 4761,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1988:7:39",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 4764,
                  "mutability": "mutable",
                  "name": "_priceLimit",
                  "nameLocation": "2026:11:39",
                  "nodeType": "VariableDeclaration",
                  "scope": 4791,
                  "src": "2018:19:39",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 4763,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2018:7:39",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 4766,
                  "mutability": "mutable",
                  "name": "_tokenPrice",
                  "nameLocation": "2055:11:39",
                  "nodeType": "VariableDeclaration",
                  "scope": 4791,
                  "src": "2047:19:39",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 4765,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2047:7:39",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1887:185:39"
            },
            "returnParameters": {
              "id": 4774,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2141:0:39"
            },
            "scope": 5423,
            "src": "1876:572:39",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 4795,
              "nodeType": "Block",
              "src": "2512:2:39",
              "statements": []
            },
            "documentation": {
              "id": 4792,
              "nodeType": "StructuredDocumentation",
              "src": "2454:26:39",
              "text": "@dev Receive function."
            },
            "id": 4796,
            "implemented": true,
            "kind": "receive",
            "modifiers": [],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 4793,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2492:2:39"
            },
            "returnParameters": {
              "id": 4794,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2512:0:39"
            },
            "scope": 5423,
            "src": "2485:29:39",
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 4800,
              "nodeType": "Block",
              "src": "2580:2:39",
              "statements": []
            },
            "documentation": {
              "id": 4797,
              "nodeType": "StructuredDocumentation",
              "src": "2520:27:39",
              "text": "@dev Fallback function."
            },
            "id": 4801,
            "implemented": true,
            "kind": "fallback",
            "modifiers": [],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 4798,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2560:2:39"
            },
            "returnParameters": {
              "id": 4799,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2580:0:39"
            },
            "scope": 5423,
            "src": "2552:30:39",
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 4818,
              "nodeType": "Block",
              "src": "2669:91:39",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 4806,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "UnaryOperation",
                        "operator": "!",
                        "prefix": true,
                        "src": "2687:7:39",
                        "subExpression": {
                          "id": 4805,
                          "name": "locked",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4746,
                          "src": "2688:6:39",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 4804,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "2679:7:39",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 4807,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2679:16:39",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 4808,
                  "nodeType": "ExpressionStatement",
                  "src": "2679:16:39"
                },
                {
                  "expression": {
                    "id": 4811,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 4809,
                      "name": "locked",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4746,
                      "src": "2705:6:39",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "74727565",
                      "id": 4810,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "2714:4:39",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "src": "2705:13:39",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 4812,
                  "nodeType": "ExpressionStatement",
                  "src": "2705:13:39"
                },
                {
                  "id": 4813,
                  "nodeType": "PlaceholderStatement",
                  "src": "2728:1:39"
                },
                {
                  "expression": {
                    "id": 4816,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 4814,
                      "name": "locked",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4746,
                      "src": "2739:6:39",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "66616c7365",
                      "id": 4815,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "2748:5:39",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "false"
                    },
                    "src": "2739:14:39",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 4817,
                  "nodeType": "ExpressionStatement",
                  "src": "2739:14:39"
                }
              ]
            },
            "documentation": {
              "id": 4802,
              "nodeType": "StructuredDocumentation",
              "src": "2588:52:39",
              "text": " @dev Protect against Re-Entrancy."
            },
            "id": 4819,
            "name": "nonReentrant",
            "nameLocation": "2654:12:39",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 4803,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2666:2:39"
            },
            "src": "2645:115:39",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 4829,
              "nodeType": "Block",
              "src": "3052:41:39",
              "statements": [
                {
                  "expression": {
                    "id": 4827,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 4825,
                      "name": "_tokenPrice",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4823,
                      "src": "3062:11:39",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 4826,
                      "name": "tokenPrice",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4729,
                      "src": "3076:10:39",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "3062:24:39",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 4828,
                  "nodeType": "ExpressionStatement",
                  "src": "3062:24:39"
                }
              ]
            },
            "documentation": {
              "id": 4820,
              "nodeType": "StructuredDocumentation",
              "src": "2766:176:39",
              "text": " @dev Return the price of one token, set by the deployer.\n @notice Callable by anyone.\n @return _tokenPrice Price of a single token."
            },
            "functionSelector": "fad54de7",
            "id": 4830,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getIndividualTokenPrice",
            "nameLocation": "2956:23:39",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 4821,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2979:2:39"
            },
            "returnParameters": {
              "id": 4824,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4823,
                  "mutability": "mutable",
                  "name": "_tokenPrice",
                  "nameLocation": "3035:11:39",
                  "nodeType": "VariableDeclaration",
                  "scope": 4830,
                  "src": "3027:19:39",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 4822,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3027:7:39",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3026:21:39"
            },
            "scope": 5423,
            "src": "2947:146:39",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 4840,
              "nodeType": "Block",
              "src": "3341:41:39",
              "statements": [
                {
                  "expression": {
                    "id": 4838,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 4836,
                      "name": "_priceLimit",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4834,
                      "src": "3351:11:39",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 4837,
                      "name": "priceLimit",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4726,
                      "src": "3365:10:39",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "3351:24:39",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 4839,
                  "nodeType": "ExpressionStatement",
                  "src": "3351:24:39"
                }
              ]
            },
            "documentation": {
              "id": 4831,
              "nodeType": "StructuredDocumentation",
              "src": "3099:170:39",
              "text": " @dev Return the highest possible price for a token.\n @notice Callable by anyone.\n @return _priceLimit Highest possible price."
            },
            "functionSelector": "a0b97daa",
            "id": 4841,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getPriceLimit",
            "nameLocation": "3283:13:39",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 4832,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3296:2:39"
            },
            "returnParameters": {
              "id": 4835,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4834,
                  "mutability": "mutable",
                  "name": "_priceLimit",
                  "nameLocation": "3328:11:39",
                  "nodeType": "VariableDeclaration",
                  "scope": 4841,
                  "src": "3320:19:39",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 4833,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3320:7:39",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3319:21:39"
            },
            "scope": 5423,
            "src": "3274:108:39",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 4866,
              "nodeType": "Block",
              "src": "3794:215:39",
              "statements": [
                {
                  "documentation": "@dev Ensure that the price passed isn't more than the price limit.",
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 4858,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 4855,
                          "name": "_price",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4846,
                          "src": "3891:6:39",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<=",
                        "rightExpression": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 4856,
                            "name": "getPriceLimit",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4841,
                            "src": "3901:13:39",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
                              "typeString": "function () view returns (uint256)"
                            }
                          },
                          "id": 4857,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3901:15:39",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "3891:25:39",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "507269636520686967686572207468616e206c696d69742e",
                        "id": 4859,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3918:26:39",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_7b146f5a9a7ca2f626343d6bffe001d397c63c34b0f5f9411b5d9ebfbed8c9de",
                          "typeString": "literal_string \"Price higher than limit.\""
                        },
                        "value": "Price higher than limit."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_7b146f5a9a7ca2f626343d6bffe001d397c63c34b0f5f9411b5d9ebfbed8c9de",
                          "typeString": "literal_string \"Price higher than limit.\""
                        }
                      ],
                      "id": 4854,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "3883:7:39",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 4860,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3883:62:39",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 4861,
                  "nodeType": "ExpressionStatement",
                  "src": "3883:62:39"
                },
                {
                  "documentation": "@dev Set price.",
                  "expression": {
                    "id": 4864,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 4862,
                      "name": "tokenPrice",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4729,
                      "src": "3983:10:39",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 4863,
                      "name": "_price",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4846,
                      "src": "3996:6:39",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "3983:19:39",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 4865,
                  "nodeType": "ExpressionStatement",
                  "src": "3983:19:39"
                }
              ]
            },
            "documentation": {
              "id": 4842,
              "nodeType": "StructuredDocumentation",
              "src": "3388:279:39",
              "text": " @dev Allows `caller` to set `_price` as price of one token.\n @notice   Callable by the deployer of this contract [DaccredDeployer]\n           and the allowlistOwner.\n @param caller AllowlistOwner.\n @param _price New price."
            },
            "functionSelector": "00e4768b",
            "id": 4867,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 4849,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 4848,
                  "name": "onlyOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 6017,
                  "src": "3745:9:39"
                },
                "nodeType": "ModifierInvocation",
                "src": "3745:9:39"
              },
              {
                "arguments": [
                  {
                    "id": 4851,
                    "name": "caller",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 4844,
                    "src": "3782:6:39",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  }
                ],
                "id": 4852,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 4850,
                  "name": "onlyAllowlistOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 4428,
                  "src": "3763:18:39"
                },
                "nodeType": "ModifierInvocation",
                "src": "3763:26:39"
              }
            ],
            "name": "setPrice",
            "nameLocation": "3681:8:39",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 4847,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4844,
                  "mutability": "mutable",
                  "name": "caller",
                  "nameLocation": "3698:6:39",
                  "nodeType": "VariableDeclaration",
                  "scope": 4867,
                  "src": "3690:14:39",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 4843,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3690:7:39",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 4846,
                  "mutability": "mutable",
                  "name": "_price",
                  "nameLocation": "3714:6:39",
                  "nodeType": "VariableDeclaration",
                  "scope": 4867,
                  "src": "3706:14:39",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 4845,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3706:7:39",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3689:32:39"
            },
            "returnParameters": {
              "id": 4853,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3794:0:39"
            },
            "scope": 5423,
            "src": "3672:337:39",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 4937,
              "nodeType": "Block",
              "src": "4733:1037:39",
              "statements": [
                {
                  "documentation": "@dev Ensure that the supply is not crossed.\n @dev    Should all soulbound tokens need to be limited,\n         copy this code and paste in Soulboundcore.sol\n         issueWithSignature function.",
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 4887,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 4885,
                          "name": "supply",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4401,
                          "src": "4990:6:39",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<",
                        "rightExpression": {
                          "id": 4886,
                          "name": "totalSupply",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4398,
                          "src": "4999:11:39",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "4990:20:39",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "49737375652043617020526561636865642e",
                        "id": 4888,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5012:20:39",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_c12f09333ab4a78ede2485ac6001e2180fc9f9af3ed199b4e198f266f939e331",
                          "typeString": "literal_string \"Issue Cap Reached.\""
                        },
                        "value": "Issue Cap Reached."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_c12f09333ab4a78ede2485ac6001e2180fc9f9af3ed199b4e198f266f939e331",
                          "typeString": "literal_string \"Issue Cap Reached.\""
                        }
                      ],
                      "id": 4884,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "4982:7:39",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 4889,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4982:51:39",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 4890,
                  "nodeType": "ExpressionStatement",
                  "src": "4982:51:39"
                },
                {
                  "documentation": "@dev Require `to` is not a zero address.",
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 4897,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 4892,
                          "name": "to",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4872,
                          "src": "5104:2:39",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 4895,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "5118:1:39",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 4894,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "5110:7:39",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 4893,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "5110:7:39",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 4896,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "5110:10:39",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "5104:16:39",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4d696e7420746f207a65726f20616464726573732e",
                        "id": 4898,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5122:23:39",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_b3cd0cc0adee66fdd10c0f21fe5cb0de39672daa3845cfc9b86f6248c4187fe0",
                          "typeString": "literal_string \"Mint to zero address.\""
                        },
                        "value": "Mint to zero address."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_b3cd0cc0adee66fdd10c0f21fe5cb0de39672daa3845cfc9b86f6248c4187fe0",
                          "typeString": "literal_string \"Mint to zero address.\""
                        }
                      ],
                      "id": 4891,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "5096:7:39",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 4899,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5096:50:39",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 4900,
                  "nodeType": "ExpressionStatement",
                  "src": "5096:50:39"
                },
                {
                  "documentation": "@dev Require the token does not exist already.",
                  "expression": {
                    "arguments": [
                      {
                        "id": 4905,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "UnaryOperation",
                        "operator": "!",
                        "prefix": true,
                        "src": "5223:17:39",
                        "subExpression": {
                          "arguments": [
                            {
                              "id": 4903,
                              "name": "tokenId",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4874,
                              "src": "5232:7:39",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 4902,
                            "name": "_exists",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 5797,
                            "src": "5224:7:39",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_bool_$",
                              "typeString": "function (uint256) view returns (bool)"
                            }
                          },
                          "id": 4904,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "5224:16:39",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4d696e74206f6620616c7265616479206578697374696e6720746f6b656e2e",
                        "id": 4906,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5242:33:39",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_27ad91d600ded7340a92af1e8e323e341145b457e0043d73b881842f9f40f1c5",
                          "typeString": "literal_string \"Mint of already existing token.\""
                        },
                        "value": "Mint of already existing token."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_27ad91d600ded7340a92af1e8e323e341145b457e0043d73b881842f9f40f1c5",
                          "typeString": "literal_string \"Mint of already existing token.\""
                        }
                      ],
                      "id": 4901,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "5215:7:39",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 4907,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5215:61:39",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 4908,
                  "nodeType": "ExpressionStatement",
                  "src": "5215:61:39"
                },
                {
                  "documentation": "@dev Require that the token is not on the pending list.",
                  "expression": {
                    "arguments": [
                      {
                        "id": 4913,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "UnaryOperation",
                        "operator": "!",
                        "prefix": true,
                        "src": "5362:17:39",
                        "subExpression": {
                          "baseExpression": {
                            "id": 4910,
                            "name": "pending",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4734,
                            "src": "5363:7:39",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_uint256_$_t_bool_$",
                              "typeString": "mapping(uint256 => bool)"
                            }
                          },
                          "id": 4912,
                          "indexExpression": {
                            "id": 4911,
                            "name": "tokenId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4874,
                            "src": "5371:7:39",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "5363:16:39",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4d696e74206f6620616c72656164792070656e64696e6720746f6b656e2e",
                        "id": 4914,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5381:32:39",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_f293e6d359cb146b4c3b38b2a261884788ebaefb2f9c4e33004c4a815c1569e3",
                          "typeString": "literal_string \"Mint of already pending token.\""
                        },
                        "value": "Mint of already pending token."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_f293e6d359cb146b4c3b38b2a261884788ebaefb2f9c4e33004c4a815c1569e3",
                          "typeString": "literal_string \"Mint of already pending token.\""
                        }
                      ],
                      "id": 4909,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "5354:7:39",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 4915,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5354:60:39",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 4916,
                  "nodeType": "ExpressionStatement",
                  "src": "5354:60:39"
                },
                {
                  "documentation": "@dev Set the token's pending state to true.",
                  "expression": {
                    "id": 4921,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 4917,
                        "name": "pending",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4734,
                        "src": "5480:7:39",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint256_$_t_bool_$",
                          "typeString": "mapping(uint256 => bool)"
                        }
                      },
                      "id": 4919,
                      "indexExpression": {
                        "id": 4918,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4874,
                        "src": "5488:7:39",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "5480:16:39",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "74727565",
                      "id": 4920,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "5499:4:39",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "src": "5480:23:39",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 4922,
                  "nodeType": "ExpressionStatement",
                  "src": "5480:23:39"
                },
                {
                  "documentation": "@dev Set the pending receiver of the token to `to`.",
                  "expression": {
                    "id": 4927,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 4923,
                        "name": "pendingReceivers",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4739,
                        "src": "5577:16:39",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
                          "typeString": "mapping(uint256 => address)"
                        }
                      },
                      "id": 4925,
                      "indexExpression": {
                        "id": 4924,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4874,
                        "src": "5594:7:39",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "5577:25:39",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 4926,
                      "name": "to",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4872,
                      "src": "5605:2:39",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "5577:30:39",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 4928,
                  "nodeType": "ExpressionStatement",
                  "src": "5577:30:39"
                },
                {
                  "documentation": "@dev Set a new expiry date for the token.",
                  "expression": {
                    "arguments": [
                      {
                        "id": 4930,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4874,
                        "src": "5684:7:39",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 4931,
                        "name": "_tokenExpiryDate",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4876,
                        "src": "5693:16:39",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 4929,
                      "name": "extendExpiry",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4059,
                      "src": "5671:12:39",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,uint256)"
                      }
                    },
                    "id": 4932,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5671:39:39",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 4933,
                  "nodeType": "ExpressionStatement",
                  "src": "5671:39:39"
                },
                {
                  "documentation": "@dev Increment supply.",
                  "expression": {
                    "id": 4935,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "UnaryOperation",
                    "operator": "++",
                    "prefix": false,
                    "src": "5755:8:39",
                    "subExpression": {
                      "id": 4934,
                      "name": "supply",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4401,
                      "src": "5755:6:39",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 4936,
                  "nodeType": "ExpressionStatement",
                  "src": "5755:8:39"
                }
              ]
            },
            "documentation": {
              "id": 4868,
              "nodeType": "StructuredDocumentation",
              "src": "4015:528:39",
              "text": " @dev  Mints a pending soulbound token to `to`.\n       Pending tokens are minted and the receiver pays\n       to receive and completely mint them.\n @notice   Callable by the deployer of this contract [DaccredDeployer]\n           and the allowlistOwner.\n @param from               Allowlist owner.\n @param to                 Receiver.\n @param tokenId            Id of token to be minted.\n @param _tokenExpiryDate   Set expiry date from the deployer."
            },
            "functionSelector": "bd97a6ad",
            "id": 4938,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 4879,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 4878,
                  "name": "onlyOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 6017,
                  "src": "4698:9:39"
                },
                "nodeType": "ModifierInvocation",
                "src": "4698:9:39"
              },
              {
                "arguments": [
                  {
                    "id": 4881,
                    "name": "from",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 4870,
                    "src": "4727:4:39",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  }
                ],
                "id": 4882,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 4880,
                  "name": "onlyAllowlistOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 4428,
                  "src": "4708:18:39"
                },
                "nodeType": "ModifierInvocation",
                "src": "4708:24:39"
              }
            ],
            "name": "mintPendingRedeemableToken",
            "nameLocation": "4557:26:39",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 4877,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4870,
                  "mutability": "mutable",
                  "name": "from",
                  "nameLocation": "4601:4:39",
                  "nodeType": "VariableDeclaration",
                  "scope": 4938,
                  "src": "4593:12:39",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 4869,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4593:7:39",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 4872,
                  "mutability": "mutable",
                  "name": "to",
                  "nameLocation": "4623:2:39",
                  "nodeType": "VariableDeclaration",
                  "scope": 4938,
                  "src": "4615:10:39",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 4871,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4615:7:39",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 4874,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nameLocation": "4643:7:39",
                  "nodeType": "VariableDeclaration",
                  "scope": 4938,
                  "src": "4635:15:39",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 4873,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4635:7:39",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 4876,
                  "mutability": "mutable",
                  "name": "_tokenExpiryDate",
                  "nameLocation": "4668:16:39",
                  "nodeType": "VariableDeclaration",
                  "scope": 4938,
                  "src": "4660:24:39",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 4875,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4660:7:39",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4583:107:39"
            },
            "returnParameters": {
              "id": 4883,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4733:0:39"
            },
            "scope": 5423,
            "src": "4548:1222:39",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 5055,
              "nodeType": "Block",
              "src": "6240:1830:39",
              "statements": [
                {
                  "documentation": "@dev Require that the receiver is not a zero address.",
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 4956,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 4951,
                          "name": "_receiver",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4941,
                          "src": "6324:9:39",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 4954,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "6345:1:39",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 4953,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "6337:7:39",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 4952,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "6337:7:39",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 4955,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "6337:10:39",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "6324:23:39",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4d696e7420746f207a65726f20616464726573732e",
                        "id": 4957,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "6349:23:39",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_b3cd0cc0adee66fdd10c0f21fe5cb0de39672daa3845cfc9b86f6248c4187fe0",
                          "typeString": "literal_string \"Mint to zero address.\""
                        },
                        "value": "Mint to zero address."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_b3cd0cc0adee66fdd10c0f21fe5cb0de39672daa3845cfc9b86f6248c4187fe0",
                          "typeString": "literal_string \"Mint to zero address.\""
                        }
                      ],
                      "id": 4950,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "6316:7:39",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 4958,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6316:57:39",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 4959,
                  "nodeType": "ExpressionStatement",
                  "src": "6316:57:39"
                },
                {
                  "documentation": "@dev Require that the token does not exist yet.",
                  "expression": {
                    "arguments": [
                      {
                        "id": 4964,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "UnaryOperation",
                        "operator": "!",
                        "prefix": true,
                        "src": "6451:17:39",
                        "subExpression": {
                          "arguments": [
                            {
                              "id": 4962,
                              "name": "tokenId",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4943,
                              "src": "6460:7:39",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 4961,
                            "name": "_exists",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 5797,
                            "src": "6452:7:39",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_bool_$",
                              "typeString": "function (uint256) view returns (bool)"
                            }
                          },
                          "id": 4963,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "6452:16:39",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4d696e74206f6620616c7265616479206578697374696e6720746f6b656e2e",
                        "id": 4965,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "6470:33:39",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_27ad91d600ded7340a92af1e8e323e341145b457e0043d73b881842f9f40f1c5",
                          "typeString": "literal_string \"Mint of already existing token.\""
                        },
                        "value": "Mint of already existing token."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_27ad91d600ded7340a92af1e8e323e341145b457e0043d73b881842f9f40f1c5",
                          "typeString": "literal_string \"Mint of already existing token.\""
                        }
                      ],
                      "id": 4960,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "6443:7:39",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 4966,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6443:61:39",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 4967,
                  "nodeType": "ExpressionStatement",
                  "src": "6443:61:39"
                },
                {
                  "documentation": "@dev Require that the token is indeed pending.",
                  "expression": {
                    "arguments": [
                      {
                        "baseExpression": {
                          "id": 4969,
                          "name": "pending",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4734,
                          "src": "6581:7:39",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_uint256_$_t_bool_$",
                            "typeString": "mapping(uint256 => bool)"
                          }
                        },
                        "id": 4971,
                        "indexExpression": {
                          "id": 4970,
                          "name": "tokenId",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4943,
                          "src": "6589:7:39",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "6581:16:39",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "416c726561647920726563656976656420746f6b656e2e",
                        "id": 4972,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "6599:25:39",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_12cc045ad24f383fd375b78e3f9b44570c2ab7e10a54320acd82e5dd71df5f27",
                          "typeString": "literal_string \"Already received token.\""
                        },
                        "value": "Already received token."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_12cc045ad24f383fd375b78e3f9b44570c2ab7e10a54320acd82e5dd71df5f27",
                          "typeString": "literal_string \"Already received token.\""
                        }
                      ],
                      "id": 4968,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "6573:7:39",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 4973,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6573:52:39",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 4974,
                  "nodeType": "ExpressionStatement",
                  "src": "6573:52:39"
                },
                {
                  "documentation": "@dev    Require that the expected receiver of pending\n         token is the `_receiver`.",
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 4980,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "baseExpression": {
                            "id": 4976,
                            "name": "pendingReceivers",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4739,
                            "src": "6768:16:39",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
                              "typeString": "mapping(uint256 => address)"
                            }
                          },
                          "id": 4978,
                          "indexExpression": {
                            "id": 4977,
                            "name": "tokenId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4943,
                            "src": "6785:7:39",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "6768:25:39",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "id": 4979,
                          "name": "_receiver",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4941,
                          "src": "6797:9:39",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "6768:38:39",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4e6f742070656e64696e672072656365697665722e",
                        "id": 4981,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "6820:23:39",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_a16ec8e5ff180a35a460e12ce81cf7b6dfd3872605270f5cfeb853c3e10fc874",
                          "typeString": "literal_string \"Not pending receiver.\""
                        },
                        "value": "Not pending receiver."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_a16ec8e5ff180a35a460e12ce81cf7b6dfd3872605270f5cfeb853c3e10fc874",
                          "typeString": "literal_string \"Not pending receiver.\""
                        }
                      ],
                      "id": 4975,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "6747:7:39",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 4982,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6747:106:39",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 4983,
                  "nodeType": "ExpressionStatement",
                  "src": "6747:106:39"
                },
                {
                  "documentation": "@dev Require that the token has not expired already.",
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 4986,
                            "name": "tokenId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4943,
                            "src": "6944:7:39",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "id": 4985,
                          "name": "isValid",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4088,
                          "src": "6936:7:39",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_bool_$",
                            "typeString": "function (uint256) view returns (bool)"
                          }
                        },
                        "id": 4987,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "6936:16:39",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "526563656976616c206f66206578706972656420746f6b656e2c2072656465656d20746f6b656e2e",
                        "id": 4988,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "6954:42:39",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_139167712b23610ca89c74e594394396d48fdd1707b40d47ee305fc2a27ea0b9",
                          "typeString": "literal_string \"Receival of expired token, redeem token.\""
                        },
                        "value": "Receival of expired token, redeem token."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_139167712b23610ca89c74e594394396d48fdd1707b40d47ee305fc2a27ea0b9",
                          "typeString": "literal_string \"Receival of expired token, redeem token.\""
                        }
                      ],
                      "id": 4984,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "6928:7:39",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 4989,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6928:69:39",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 4990,
                  "nodeType": "ExpressionStatement",
                  "src": "6928:69:39"
                },
                {
                  "documentation": "@dev Require that the amount sent is GTE the price of one token.",
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 4995,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 4992,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "7092:3:39",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 4993,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "value",
                          "nodeType": "MemberAccess",
                          "src": "7092:9:39",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">=",
                        "rightExpression": {
                          "id": 4994,
                          "name": "tokenPrice",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4729,
                          "src": "7105:10:39",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "7092:23:39",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "5072696365206c6f776572207468616e20746f6b656e20636f73742e",
                        "id": 4996,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "7117:30:39",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_3f582117bae28b735f149af9be0894d5dd380425ff79d8dc2f8db5a41eb0fff9",
                          "typeString": "literal_string \"Price lower than token cost.\""
                        },
                        "value": "Price lower than token cost."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_3f582117bae28b735f149af9be0894d5dd380425ff79d8dc2f8db5a41eb0fff9",
                          "typeString": "literal_string \"Price lower than token cost.\""
                        }
                      ],
                      "id": 4991,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "7084:7:39",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 4997,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7084:64:39",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 4998,
                  "nodeType": "ExpressionStatement",
                  "src": "7084:64:39"
                },
                {
                  "assignments": [
                    5001
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 5001,
                      "mutability": "mutable",
                      "name": "balance",
                      "nameLocation": "7203:7:39",
                      "nodeType": "VariableDeclaration",
                      "scope": 5055,
                      "src": "7195:15:39",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 5000,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "7195:7:39",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "documentation": "@dev Initialize balance.",
                  "id": 5002,
                  "nodeType": "VariableDeclarationStatement",
                  "src": "7195:15:39"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 5006,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "expression": {
                        "id": 5003,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -15,
                        "src": "7300:3:39",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 5004,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "value",
                      "nodeType": "MemberAccess",
                      "src": "7300:9:39",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": ">",
                    "rightExpression": {
                      "id": 5005,
                      "name": "tokenPrice",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4729,
                      "src": "7312:10:39",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "7300:22:39",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "documentation": "@dev If the amount sent is bigger than the price of one token.",
                  "id": 5023,
                  "nodeType": "IfStatement",
                  "src": "7296:252:39",
                  "trueBody": {
                    "id": 5022,
                    "nodeType": "Block",
                    "src": "7324:224:39",
                    "statements": [
                      {
                        "documentation": "@dev Calculate the balance of the `_receiver`.",
                        "expression": {
                          "id": 5012,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 5007,
                            "name": "balance",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 5001,
                            "src": "7401:7:39",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 5011,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "expression": {
                                "id": 5008,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -15,
                                "src": "7411:3:39",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 5009,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "value",
                              "nodeType": "MemberAccess",
                              "src": "7411:9:39",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "-",
                            "rightExpression": {
                              "id": 5010,
                              "name": "tokenPrice",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4729,
                              "src": "7423:10:39",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "src": "7411:22:39",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "7401:32:39",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 5013,
                        "nodeType": "ExpressionStatement",
                        "src": "7401:32:39"
                      },
                      {
                        "documentation": "@dev Pay the `_receiver` his balance.",
                        "expression": {
                          "arguments": [
                            {
                              "id": 5019,
                              "name": "balance",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 5001,
                              "src": "7529:7:39",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "arguments": [
                                {
                                  "id": 5016,
                                  "name": "_receiver",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 4941,
                                  "src": "7509:9:39",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                ],
                                "id": 5015,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "7501:8:39",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_payable_$",
                                  "typeString": "type(address payable)"
                                },
                                "typeName": {
                                  "id": 5014,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "7501:8:39",
                                  "stateMutability": "payable",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 5017,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "7501:18:39",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            },
                            "id": 5018,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "transfer",
                            "nodeType": "MemberAccess",
                            "src": "7501:27:39",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_transfer_nonpayable$_t_uint256_$returns$__$",
                              "typeString": "function (uint256)"
                            }
                          },
                          "id": 5020,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "7501:36:39",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 5021,
                        "nodeType": "ExpressionStatement",
                        "src": "7501:36:39"
                      }
                    ]
                  }
                },
                {
                  "assignments": [
                    5026
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 5026,
                      "mutability": "mutable",
                      "name": "_tokenURI",
                      "nameLocation": "7608:9:39",
                      "nodeType": "VariableDeclaration",
                      "scope": 5055,
                      "src": "7594:23:39",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string"
                      },
                      "typeName": {
                        "id": 5025,
                        "name": "string",
                        "nodeType": "ElementaryTypeName",
                        "src": "7594:6:39",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_storage_ptr",
                          "typeString": "string"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "documentation": "@dev Generate tokenURI.",
                  "id": 5030,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 5028,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4943,
                        "src": "7637:7:39",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 5027,
                      "name": "generateTokenURI",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4628,
                      "src": "7620:16:39",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_string_memory_ptr_$",
                        "typeString": "function (uint256) view returns (string memory)"
                      }
                    },
                    "id": 5029,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7620:25:39",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory_ptr",
                      "typeString": "string memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "7594:51:39"
                },
                {
                  "documentation": "@dev Finally issue the token to the `_receiver`.",
                  "expression": {
                    "arguments": [
                      {
                        "id": 5032,
                        "name": "_receiver",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4941,
                        "src": "7722:9:39",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 5033,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4943,
                        "src": "7733:7:39",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 5034,
                        "name": "_tokenURI",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5026,
                        "src": "7742:9:39",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      ],
                      "id": 5031,
                      "name": "issue",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4167,
                      "src": "7716:5:39",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_string_memory_ptr_$returns$_t_bool_$",
                        "typeString": "function (address,uint256,string memory) returns (bool)"
                      }
                    },
                    "id": 5035,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7716:36:39",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 5036,
                  "nodeType": "ExpressionStatement",
                  "src": "7716:36:39"
                },
                {
                  "documentation": "@dev Increment totalSales.",
                  "expression": {
                    "id": 5038,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "UnaryOperation",
                    "operator": "++",
                    "prefix": false,
                    "src": "7801:12:39",
                    "subExpression": {
                      "id": 5037,
                      "name": "totalSales",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4720,
                      "src": "7801:10:39",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 5039,
                  "nodeType": "ExpressionStatement",
                  "src": "7801:12:39"
                },
                {
                  "documentation": "@dev Add to the total Revenue.",
                  "expression": {
                    "id": 5042,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 5040,
                      "name": "totalRevenue",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4723,
                      "src": "7866:12:39",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "+=",
                    "rightHandSide": {
                      "id": 5041,
                      "name": "tokenPrice",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4729,
                      "src": "7882:10:39",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "7866:26:39",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 5043,
                  "nodeType": "ExpressionStatement",
                  "src": "7866:26:39"
                },
                {
                  "documentation": "@dev Set the pending token to false.",
                  "expression": {
                    "id": 5048,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 5044,
                        "name": "pending",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4734,
                        "src": "7951:7:39",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint256_$_t_bool_$",
                          "typeString": "mapping(uint256 => bool)"
                        }
                      },
                      "id": 5046,
                      "indexExpression": {
                        "id": 5045,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4943,
                        "src": "7959:7:39",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "7951:16:39",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "66616c7365",
                      "id": 5047,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "7970:5:39",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "false"
                    },
                    "src": "7951:24:39",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 5049,
                  "nodeType": "ExpressionStatement",
                  "src": "7951:24:39"
                },
                {
                  "documentation": "@dev Delete the pending receiver.",
                  "expression": {
                    "id": 5053,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "UnaryOperation",
                    "operator": "delete",
                    "prefix": true,
                    "src": "8031:32:39",
                    "subExpression": {
                      "baseExpression": {
                        "id": 5050,
                        "name": "pendingReceivers",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4739,
                        "src": "8038:16:39",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
                          "typeString": "mapping(uint256 => address)"
                        }
                      },
                      "id": 5052,
                      "indexExpression": {
                        "id": 5051,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4943,
                        "src": "8055:7:39",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "8038:25:39",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 5054,
                  "nodeType": "ExpressionStatement",
                  "src": "8031:32:39"
                }
              ]
            },
            "documentation": {
              "id": 4939,
              "nodeType": "StructuredDocumentation",
              "src": "5776:322:39",
              "text": " @dev  Allows the `_receiver` to pay the price of one token to\n       fully mint the pending token.\n @notice   Callable by the deployer of this contract [DaccredDeployer].\n @param _receiver  Receiver of the token.\n @param tokenId    Pending tokenId for the receiver."
            },
            "functionSelector": "33e085c1",
            "id": 5056,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 4946,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 4945,
                  "name": "onlyOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 6017,
                  "src": "6205:9:39"
                },
                "nodeType": "ModifierInvocation",
                "src": "6205:9:39"
              },
              {
                "id": 4948,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 4947,
                  "name": "nonReentrant",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 4819,
                  "src": "6223:12:39"
                },
                "nodeType": "ModifierInvocation",
                "src": "6223:12:39"
              }
            ],
            "name": "payToReceiveToken",
            "nameLocation": "6112:17:39",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 4944,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4941,
                  "mutability": "mutable",
                  "name": "_receiver",
                  "nameLocation": "6138:9:39",
                  "nodeType": "VariableDeclaration",
                  "scope": 5056,
                  "src": "6130:17:39",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 4940,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "6130:7:39",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 4943,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nameLocation": "6157:7:39",
                  "nodeType": "VariableDeclaration",
                  "scope": 5056,
                  "src": "6149:15:39",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 4942,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "6149:7:39",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6129:36:39"
            },
            "returnParameters": {
              "id": 4949,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "6240:0:39"
            },
            "scope": 5423,
            "src": "6103:1967:39",
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 5161,
              "nodeType": "Block",
              "src": "8751:1370:39",
              "statements": [
                {
                  "documentation": "@dev Require _receiver is not a zero address.",
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 5076,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 5071,
                          "name": "_receiver",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 5059,
                          "src": "8827:9:39",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 5074,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "8848:1:39",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 5073,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "8840:7:39",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 5072,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "8840:7:39",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 5075,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "8840:10:39",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "8827:23:39",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "526564656d7074696f6e20746f207a65726f20616464726573732e",
                        "id": 5077,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "8852:29:39",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_f8ae517d4fbdf4aa8a9a0c9b30153fe2f49b5b913f6c5df159128e1c8e765e0c",
                          "typeString": "literal_string \"Redemption to zero address.\""
                        },
                        "value": "Redemption to zero address."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_f8ae517d4fbdf4aa8a9a0c9b30153fe2f49b5b913f6c5df159128e1c8e765e0c",
                          "typeString": "literal_string \"Redemption to zero address.\""
                        }
                      ],
                      "id": 5070,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "8819:7:39",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 5078,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8819:63:39",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 5079,
                  "nodeType": "ExpressionStatement",
                  "src": "8819:63:39"
                },
                {
                  "documentation": "@dev Require tokenId is existent.",
                  "expression": {
                    "arguments": [
                      {
                        "id": 5084,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "UnaryOperation",
                        "operator": "!",
                        "prefix": true,
                        "src": "8946:17:39",
                        "subExpression": {
                          "arguments": [
                            {
                              "id": 5082,
                              "name": "tokenId",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 5061,
                              "src": "8955:7:39",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 5081,
                            "name": "_exists",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 5797,
                            "src": "8947:7:39",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_bool_$",
                              "typeString": "function (uint256) view returns (bool)"
                            }
                          },
                          "id": 5083,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "8947:16:39",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "526564656d7074696f6e206f66206578697374696e6720746f6b656e2e",
                        "id": 5085,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "8965:31:39",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_8eea3e14730fdda4b1b67df25114b765b9e055f222676279aedc274e392d5c70",
                          "typeString": "literal_string \"Redemption of existing token.\""
                        },
                        "value": "Redemption of existing token."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_8eea3e14730fdda4b1b67df25114b765b9e055f222676279aedc274e392d5c70",
                          "typeString": "literal_string \"Redemption of existing token.\""
                        }
                      ],
                      "id": 5080,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "8938:7:39",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 5086,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8938:59:39",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 5087,
                  "nodeType": "ExpressionStatement",
                  "src": "8938:59:39"
                },
                {
                  "documentation": "@dev Require that the token is still pending.",
                  "expression": {
                    "arguments": [
                      {
                        "baseExpression": {
                          "id": 5089,
                          "name": "pending",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4734,
                          "src": "9073:7:39",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_uint256_$_t_bool_$",
                            "typeString": "mapping(uint256 => bool)"
                          }
                        },
                        "id": 5091,
                        "indexExpression": {
                          "id": 5090,
                          "name": "tokenId",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 5061,
                          "src": "9081:7:39",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "9073:16:39",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "416c726561647920726563656976656420746f6b656e2e",
                        "id": 5092,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "9091:25:39",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_12cc045ad24f383fd375b78e3f9b44570c2ab7e10a54320acd82e5dd71df5f27",
                          "typeString": "literal_string \"Already received token.\""
                        },
                        "value": "Already received token."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_12cc045ad24f383fd375b78e3f9b44570c2ab7e10a54320acd82e5dd71df5f27",
                          "typeString": "literal_string \"Already received token.\""
                        }
                      ],
                      "id": 5088,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "9065:7:39",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 5093,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9065:52:39",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 5094,
                  "nodeType": "ExpressionStatement",
                  "src": "9065:52:39"
                },
                {
                  "documentation": "@dev Require that the pending receiver is the `_receiver`.",
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 5100,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "baseExpression": {
                            "id": 5096,
                            "name": "pendingReceivers",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4739,
                            "src": "9219:16:39",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
                              "typeString": "mapping(uint256 => address)"
                            }
                          },
                          "id": 5098,
                          "indexExpression": {
                            "id": 5097,
                            "name": "tokenId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 5061,
                            "src": "9236:7:39",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "9219:25:39",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "id": 5099,
                          "name": "_receiver",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 5059,
                          "src": "9248:9:39",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "9219:38:39",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4e6f742070656e64696e672072656365697665722e",
                        "id": 5101,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "9271:23:39",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_a16ec8e5ff180a35a460e12ce81cf7b6dfd3872605270f5cfeb853c3e10fc874",
                          "typeString": "literal_string \"Not pending receiver.\""
                        },
                        "value": "Not pending receiver."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_a16ec8e5ff180a35a460e12ce81cf7b6dfd3872605270f5cfeb853c3e10fc874",
                          "typeString": "literal_string \"Not pending receiver.\""
                        }
                      ],
                      "id": 5095,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "9198:7:39",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 5102,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9198:106:39",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 5103,
                  "nodeType": "ExpressionStatement",
                  "src": "9198:106:39"
                },
                {
                  "documentation": "@dev Require the token has expired.",
                  "expression": {
                    "arguments": [
                      {
                        "id": 5108,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "UnaryOperation",
                        "operator": "!",
                        "prefix": true,
                        "src": "9370:17:39",
                        "subExpression": {
                          "arguments": [
                            {
                              "id": 5106,
                              "name": "tokenId",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 5061,
                              "src": "9379:7:39",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 5105,
                            "name": "isValid",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4088,
                            "src": "9371:7:39",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_bool_$",
                              "typeString": "function (uint256) view returns (bool)"
                            }
                          },
                          "id": 5107,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "9371:16:39",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "546f6b656e20756e657870697265642e",
                        "id": 5109,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "9389:18:39",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_5ddea6342fcbf01338b6010e536f87fae8e42a6f07a6359c41895245782d6531",
                          "typeString": "literal_string \"Token unexpired.\""
                        },
                        "value": "Token unexpired."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_5ddea6342fcbf01338b6010e536f87fae8e42a6f07a6359c41895245782d6531",
                          "typeString": "literal_string \"Token unexpired.\""
                        }
                      ],
                      "id": 5104,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "9362:7:39",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 5110,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9362:46:39",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 5111,
                  "nodeType": "ExpressionStatement",
                  "src": "9362:46:39"
                },
                {
                  "assignments": [
                    5114
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 5114,
                      "mutability": "mutable",
                      "name": "_tax",
                      "nameLocation": "9458:4:39",
                      "nodeType": "VariableDeclaration",
                      "scope": 5161,
                      "src": "9450:12:39",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 5113,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "9450:7:39",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "documentation": "@dev Calculate tax.",
                  "id": 5118,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 5116,
                        "name": "tax",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4743,
                        "src": "9478:3:39",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 5115,
                      "name": "calculateTax",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 5422,
                      "src": "9465:12:39",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_uint256_$",
                        "typeString": "function (uint256) view returns (uint256)"
                      }
                    },
                    "id": 5117,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9465:17:39",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "9450:32:39"
                },
                {
                  "documentation": "@dev Require that the amount sent is GTE the tax.",
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 5123,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 5120,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "9562:3:39",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 5121,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "value",
                          "nodeType": "MemberAccess",
                          "src": "9562:9:39",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">=",
                        "rightExpression": {
                          "id": 5122,
                          "name": "_tax",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 5114,
                          "src": "9575:4:39",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "9562:17:39",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "5072696365206c6f776572207468616e20726564656d7074696f6e207461782e",
                        "id": 5124,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "9581:34:39",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_fa10b2cd99908573898b40e409d7d992862dab35683fc79ab1b58428430f440f",
                          "typeString": "literal_string \"Price lower than redemption tax.\""
                        },
                        "value": "Price lower than redemption tax."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_fa10b2cd99908573898b40e409d7d992862dab35683fc79ab1b58428430f440f",
                          "typeString": "literal_string \"Price lower than redemption tax.\""
                        }
                      ],
                      "id": 5119,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "9554:7:39",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 5125,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9554:62:39",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 5126,
                  "nodeType": "ExpressionStatement",
                  "src": "9554:62:39"
                },
                {
                  "assignments": [
                    5129
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 5129,
                      "mutability": "mutable",
                      "name": "balance",
                      "nameLocation": "9669:7:39",
                      "nodeType": "VariableDeclaration",
                      "scope": 5161,
                      "src": "9661:15:39",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 5128,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "9661:7:39",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "documentation": "@dev Initiate balance.",
                  "id": 5130,
                  "nodeType": "VariableDeclarationStatement",
                  "src": "9661:15:39"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 5133,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 5131,
                      "name": "_tax",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 5114,
                      "src": "9729:4:39",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "!=",
                    "rightExpression": {
                      "hexValue": "30",
                      "id": 5132,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "9737:1:39",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "9729:9:39",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "documentation": "@dev If the tax is not 0.",
                  "id": 5150,
                  "nodeType": "IfStatement",
                  "src": "9725:205:39",
                  "trueBody": {
                    "id": 5149,
                    "nodeType": "Block",
                    "src": "9740:190:39",
                    "statements": [
                      {
                        "documentation": "@dev Calculate receiver's balance.",
                        "expression": {
                          "id": 5139,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 5134,
                            "name": "balance",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 5129,
                            "src": "9805:7:39",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 5138,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "expression": {
                                "id": 5135,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -15,
                                "src": "9815:3:39",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 5136,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "value",
                              "nodeType": "MemberAccess",
                              "src": "9815:9:39",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "-",
                            "rightExpression": {
                              "id": 5137,
                              "name": "_tax",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 5114,
                              "src": "9827:4:39",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "src": "9815:16:39",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "9805:26:39",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 5140,
                        "nodeType": "ExpressionStatement",
                        "src": "9805:26:39"
                      },
                      {
                        "documentation": "@dev Pay to receiver.",
                        "expression": {
                          "arguments": [
                            {
                              "id": 5146,
                              "name": "balance",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 5129,
                              "src": "9911:7:39",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "arguments": [
                                {
                                  "id": 5143,
                                  "name": "_receiver",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 5059,
                                  "src": "9891:9:39",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                ],
                                "id": 5142,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "9883:8:39",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_payable_$",
                                  "typeString": "type(address payable)"
                                },
                                "typeName": {
                                  "id": 5141,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "9883:8:39",
                                  "stateMutability": "payable",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 5144,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "9883:18:39",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            },
                            "id": 5145,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "transfer",
                            "nodeType": "MemberAccess",
                            "src": "9883:27:39",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_transfer_nonpayable$_t_uint256_$returns$__$",
                              "typeString": "function (uint256)"
                            }
                          },
                          "id": 5147,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "9883:36:39",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 5148,
                        "nodeType": "ExpressionStatement",
                        "src": "9883:36:39"
                      }
                    ]
                  }
                },
                {
                  "documentation": "@dev Extend expiry of tokenId.",
                  "expression": {
                    "arguments": [
                      {
                        "id": 5152,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5061,
                        "src": "9996:7:39",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 5153,
                        "name": "_tokenExpiryDate",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5063,
                        "src": "10005:16:39",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 5151,
                      "name": "extendExpiry",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4059,
                      "src": "9983:12:39",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,uint256)"
                      }
                    },
                    "id": 5154,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9983:39:39",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 5155,
                  "nodeType": "ExpressionStatement",
                  "src": "9983:39:39"
                },
                {
                  "documentation": "@dev Emit the Redeemed event.",
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 5157,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5061,
                        "src": "10088:7:39",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 5158,
                        "name": "_tokenExpiryDate",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5063,
                        "src": "10097:16:39",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 5156,
                      "name": "Redeemed",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4753,
                      "src": "10079:8:39",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,uint256)"
                      }
                    },
                    "id": 5159,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10079:35:39",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 5160,
                  "nodeType": "EmitStatement",
                  "src": "10074:40:39"
                }
              ]
            },
            "documentation": {
              "id": 5057,
              "nodeType": "StructuredDocumentation",
              "src": "8076:512:39",
              "text": " @dev  For expired pending tokens, this function redeems them and makes\n       valid for another period of time.\n       Tokens must be expired for it to be redeemed.\n       Emits the {Redeemed} event.\n @notice   Callable by the deployer of this contract [DaccredDeployer].\n @param _receiver          Receiver of the token.\n @param tokenId            Pending tokenId for the receiver.\n @param _tokenExpiryDate   New expiry date for tokens."
            },
            "functionSelector": "ed734730",
            "id": 5162,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 5066,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 5065,
                  "name": "onlyOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 6017,
                  "src": "8728:9:39"
                },
                "nodeType": "ModifierInvocation",
                "src": "8728:9:39"
              },
              {
                "id": 5068,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 5067,
                  "name": "nonReentrant",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 4819,
                  "src": "8738:12:39"
                },
                "nodeType": "ModifierInvocation",
                "src": "8738:12:39"
              }
            ],
            "name": "redeemPendingToken",
            "nameLocation": "8602:18:39",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 5064,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 5059,
                  "mutability": "mutable",
                  "name": "_receiver",
                  "nameLocation": "8638:9:39",
                  "nodeType": "VariableDeclaration",
                  "scope": 5162,
                  "src": "8630:17:39",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 5058,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "8630:7:39",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 5061,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nameLocation": "8665:7:39",
                  "nodeType": "VariableDeclaration",
                  "scope": 5162,
                  "src": "8657:15:39",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 5060,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "8657:7:39",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 5063,
                  "mutability": "mutable",
                  "name": "_tokenExpiryDate",
                  "nameLocation": "8690:16:39",
                  "nodeType": "VariableDeclaration",
                  "scope": 5162,
                  "src": "8682:24:39",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 5062,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "8682:7:39",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "8620:92:39"
            },
            "returnParameters": {
              "id": 5069,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "8751:0:39"
            },
            "scope": 5423,
            "src": "8593:1528:39",
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 5267,
              "nodeType": "Block",
              "src": "10800:1323:39",
              "statements": [
                {
                  "documentation": "@dev Require _receiver is not a zero address.",
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 5182,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 5177,
                          "name": "_receiver",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 5165,
                          "src": "10876:9:39",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 5180,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "10897:1:39",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 5179,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "10889:7:39",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 5178,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "10889:7:39",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 5181,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "10889:10:39",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "10876:23:39",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "526564656d7074696f6e20746f207a65726f20616464726573732e",
                        "id": 5183,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "10901:29:39",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_f8ae517d4fbdf4aa8a9a0c9b30153fe2f49b5b913f6c5df159128e1c8e765e0c",
                          "typeString": "literal_string \"Redemption to zero address.\""
                        },
                        "value": "Redemption to zero address."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_f8ae517d4fbdf4aa8a9a0c9b30153fe2f49b5b913f6c5df159128e1c8e765e0c",
                          "typeString": "literal_string \"Redemption to zero address.\""
                        }
                      ],
                      "id": 5176,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "10868:7:39",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 5184,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10868:63:39",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 5185,
                  "nodeType": "ExpressionStatement",
                  "src": "10868:63:39"
                },
                {
                  "documentation": "@dev Require tokenId is existent.",
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 5188,
                            "name": "tokenId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 5167,
                            "src": "11003:7:39",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "id": 5187,
                          "name": "_exists",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 5797,
                          "src": "10995:7:39",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_bool_$",
                            "typeString": "function (uint256) view returns (bool)"
                          }
                        },
                        "id": 5189,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "10995:16:39",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "526564656d7074696f6e206f66206e6f6e2d6578697374696e6720746f6b656e2e",
                        "id": 5190,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "11013:35:39",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_cbb568e74a4e0859ba3703040914a4b98b5d188a3f26ea09cee63b8d438e279b",
                          "typeString": "literal_string \"Redemption of non-existing token.\""
                        },
                        "value": "Redemption of non-existing token."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_cbb568e74a4e0859ba3703040914a4b98b5d188a3f26ea09cee63b8d438e279b",
                          "typeString": "literal_string \"Redemption of non-existing token.\""
                        }
                      ],
                      "id": 5186,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "10987:7:39",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 5191,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10987:62:39",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 5192,
                  "nodeType": "ExpressionStatement",
                  "src": "10987:62:39"
                },
                {
                  "documentation": "@dev Require that the token is still pending.",
                  "expression": {
                    "arguments": [
                      {
                        "id": 5197,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "UnaryOperation",
                        "operator": "!",
                        "prefix": true,
                        "src": "11125:17:39",
                        "subExpression": {
                          "baseExpression": {
                            "id": 5194,
                            "name": "pending",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4734,
                            "src": "11126:7:39",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_uint256_$_t_bool_$",
                              "typeString": "mapping(uint256 => bool)"
                            }
                          },
                          "id": 5196,
                          "indexExpression": {
                            "id": 5195,
                            "name": "tokenId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 5167,
                            "src": "11134:7:39",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "11126:16:39",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "546f6b656e207374696c6c2070656e64696e672e",
                        "id": 5198,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "11144:22:39",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_2b156dcdb30e77c44e138b6c32ca50b0fb732d157e9d549e2a7b839489b59283",
                          "typeString": "literal_string \"Token still pending.\""
                        },
                        "value": "Token still pending."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_2b156dcdb30e77c44e138b6c32ca50b0fb732d157e9d549e2a7b839489b59283",
                          "typeString": "literal_string \"Token still pending.\""
                        }
                      ],
                      "id": 5193,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "11117:7:39",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 5199,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11117:50:39",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 5200,
                  "nodeType": "ExpressionStatement",
                  "src": "11117:50:39"
                },
                {
                  "documentation": "@dev Require that the pending receiver is the `_receiver`.",
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 5206,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "arguments": [
                            {
                              "id": 5203,
                              "name": "tokenId",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 5167,
                              "src": "11264:7:39",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 5202,
                            "name": "ownerOf",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 5780,
                            "src": "11256:7:39",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$",
                              "typeString": "function (uint256) view returns (address)"
                            }
                          },
                          "id": 5204,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "11256:16:39",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "id": 5205,
                          "name": "_receiver",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 5165,
                          "src": "11276:9:39",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "11256:29:39",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4e6f7420746f6b656e206f776e65722e",
                        "id": 5207,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "11287:18:39",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_01c2b96a94efb063c6ecb037e311fd4167859a7e8380231289135c1d35497ae4",
                          "typeString": "literal_string \"Not token owner.\""
                        },
                        "value": "Not token owner."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_01c2b96a94efb063c6ecb037e311fd4167859a7e8380231289135c1d35497ae4",
                          "typeString": "literal_string \"Not token owner.\""
                        }
                      ],
                      "id": 5201,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "11248:7:39",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 5208,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11248:58:39",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 5209,
                  "nodeType": "ExpressionStatement",
                  "src": "11248:58:39"
                },
                {
                  "documentation": "@dev Require the token has expired.",
                  "expression": {
                    "arguments": [
                      {
                        "id": 5214,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "UnaryOperation",
                        "operator": "!",
                        "prefix": true,
                        "src": "11372:17:39",
                        "subExpression": {
                          "arguments": [
                            {
                              "id": 5212,
                              "name": "tokenId",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 5167,
                              "src": "11381:7:39",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 5211,
                            "name": "isValid",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4088,
                            "src": "11373:7:39",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_bool_$",
                              "typeString": "function (uint256) view returns (bool)"
                            }
                          },
                          "id": 5213,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "11373:16:39",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "546f6b656e20756e657870697265642e",
                        "id": 5215,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "11391:18:39",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_5ddea6342fcbf01338b6010e536f87fae8e42a6f07a6359c41895245782d6531",
                          "typeString": "literal_string \"Token unexpired.\""
                        },
                        "value": "Token unexpired."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_5ddea6342fcbf01338b6010e536f87fae8e42a6f07a6359c41895245782d6531",
                          "typeString": "literal_string \"Token unexpired.\""
                        }
                      ],
                      "id": 5210,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "11364:7:39",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 5216,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11364:46:39",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 5217,
                  "nodeType": "ExpressionStatement",
                  "src": "11364:46:39"
                },
                {
                  "assignments": [
                    5220
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 5220,
                      "mutability": "mutable",
                      "name": "_tax",
                      "nameLocation": "11460:4:39",
                      "nodeType": "VariableDeclaration",
                      "scope": 5267,
                      "src": "11452:12:39",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 5219,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "11452:7:39",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "documentation": "@dev Calculate tax.",
                  "id": 5224,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 5222,
                        "name": "tax",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4743,
                        "src": "11480:3:39",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 5221,
                      "name": "calculateTax",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 5422,
                      "src": "11467:12:39",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_uint256_$",
                        "typeString": "function (uint256) view returns (uint256)"
                      }
                    },
                    "id": 5223,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11467:17:39",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "11452:32:39"
                },
                {
                  "documentation": "@dev Require that the amount sent is GTE the tax.",
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 5229,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 5226,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "11564:3:39",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 5227,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "value",
                          "nodeType": "MemberAccess",
                          "src": "11564:9:39",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">=",
                        "rightExpression": {
                          "id": 5228,
                          "name": "_tax",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 5220,
                          "src": "11577:4:39",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "11564:17:39",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "5072696365206c6f776572207468616e20726564656d7074696f6e207461782e",
                        "id": 5230,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "11583:34:39",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_fa10b2cd99908573898b40e409d7d992862dab35683fc79ab1b58428430f440f",
                          "typeString": "literal_string \"Price lower than redemption tax.\""
                        },
                        "value": "Price lower than redemption tax."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_fa10b2cd99908573898b40e409d7d992862dab35683fc79ab1b58428430f440f",
                          "typeString": "literal_string \"Price lower than redemption tax.\""
                        }
                      ],
                      "id": 5225,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "11556:7:39",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 5231,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11556:62:39",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 5232,
                  "nodeType": "ExpressionStatement",
                  "src": "11556:62:39"
                },
                {
                  "assignments": [
                    5235
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 5235,
                      "mutability": "mutable",
                      "name": "balance",
                      "nameLocation": "11671:7:39",
                      "nodeType": "VariableDeclaration",
                      "scope": 5267,
                      "src": "11663:15:39",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 5234,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "11663:7:39",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "documentation": "@dev Initiate balance.",
                  "id": 5236,
                  "nodeType": "VariableDeclarationStatement",
                  "src": "11663:15:39"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 5239,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 5237,
                      "name": "_tax",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 5220,
                      "src": "11731:4:39",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "!=",
                    "rightExpression": {
                      "hexValue": "30",
                      "id": 5238,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "11739:1:39",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "11731:9:39",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "documentation": "@dev If the tax is not 0.",
                  "id": 5256,
                  "nodeType": "IfStatement",
                  "src": "11727:205:39",
                  "trueBody": {
                    "id": 5255,
                    "nodeType": "Block",
                    "src": "11742:190:39",
                    "statements": [
                      {
                        "documentation": "@dev Calculate receiver's balance.",
                        "expression": {
                          "id": 5245,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 5240,
                            "name": "balance",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 5235,
                            "src": "11807:7:39",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 5244,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "expression": {
                                "id": 5241,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -15,
                                "src": "11817:3:39",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 5242,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "value",
                              "nodeType": "MemberAccess",
                              "src": "11817:9:39",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "-",
                            "rightExpression": {
                              "id": 5243,
                              "name": "_tax",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 5220,
                              "src": "11829:4:39",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "src": "11817:16:39",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "11807:26:39",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 5246,
                        "nodeType": "ExpressionStatement",
                        "src": "11807:26:39"
                      },
                      {
                        "documentation": "@dev Pay to receiver.",
                        "expression": {
                          "arguments": [
                            {
                              "id": 5252,
                              "name": "balance",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 5235,
                              "src": "11913:7:39",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "arguments": [
                                {
                                  "id": 5249,
                                  "name": "_receiver",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 5165,
                                  "src": "11893:9:39",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                ],
                                "id": 5248,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "11885:8:39",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_payable_$",
                                  "typeString": "type(address payable)"
                                },
                                "typeName": {
                                  "id": 5247,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "11885:8:39",
                                  "stateMutability": "payable",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 5250,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "11885:18:39",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            },
                            "id": 5251,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "transfer",
                            "nodeType": "MemberAccess",
                            "src": "11885:27:39",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_transfer_nonpayable$_t_uint256_$returns$__$",
                              "typeString": "function (uint256)"
                            }
                          },
                          "id": 5253,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "11885:36:39",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 5254,
                        "nodeType": "ExpressionStatement",
                        "src": "11885:36:39"
                      }
                    ]
                  }
                },
                {
                  "documentation": "@dev Extend expiry of tokenId.",
                  "expression": {
                    "arguments": [
                      {
                        "id": 5258,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5167,
                        "src": "11998:7:39",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 5259,
                        "name": "_tokenExpiryDate",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5169,
                        "src": "12007:16:39",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 5257,
                      "name": "extendExpiry",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4059,
                      "src": "11985:12:39",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,uint256)"
                      }
                    },
                    "id": 5260,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11985:39:39",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 5261,
                  "nodeType": "ExpressionStatement",
                  "src": "11985:39:39"
                },
                {
                  "documentation": "@dev Emit the Redeemed event.",
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 5263,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5167,
                        "src": "12090:7:39",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 5264,
                        "name": "_tokenExpiryDate",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5169,
                        "src": "12099:16:39",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 5262,
                      "name": "Redeemed",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4753,
                      "src": "12081:8:39",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,uint256)"
                      }
                    },
                    "id": 5265,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "12081:35:39",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 5266,
                  "nodeType": "EmitStatement",
                  "src": "12076:40:39"
                }
              ]
            },
            "documentation": {
              "id": 5163,
              "nodeType": "StructuredDocumentation",
              "src": "10127:511:39",
              "text": " @dev  For expired minted tokens, this function redeems them and makes\n       valid for another period of time.\n       Tokens must be expired for it to be redeemed.\n       Emits the {Redeemed} event.\n @notice   Callable by the deployer of this contract [DaccredDeployer].\n @param _receiver          Receiver of the token.\n @param tokenId            Pending tokenId for the receiver.\n @param _tokenExpiryDate   New expiry date for tokens."
            },
            "functionSelector": "3d1a350e",
            "id": 5268,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 5172,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 5171,
                  "name": "onlyOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 6017,
                  "src": "10777:9:39"
                },
                "nodeType": "ModifierInvocation",
                "src": "10777:9:39"
              },
              {
                "id": 5174,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 5173,
                  "name": "nonReentrant",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 4819,
                  "src": "10787:12:39"
                },
                "nodeType": "ModifierInvocation",
                "src": "10787:12:39"
              }
            ],
            "name": "redeemMintedToken",
            "nameLocation": "10652:17:39",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 5170,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 5165,
                  "mutability": "mutable",
                  "name": "_receiver",
                  "nameLocation": "10687:9:39",
                  "nodeType": "VariableDeclaration",
                  "scope": 5268,
                  "src": "10679:17:39",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 5164,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "10679:7:39",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 5167,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nameLocation": "10714:7:39",
                  "nodeType": "VariableDeclaration",
                  "scope": 5268,
                  "src": "10706:15:39",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 5166,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "10706:7:39",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 5169,
                  "mutability": "mutable",
                  "name": "_tokenExpiryDate",
                  "nameLocation": "10739:16:39",
                  "nodeType": "VariableDeclaration",
                  "scope": 5268,
                  "src": "10731:24:39",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 5168,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "10731:7:39",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "10669:92:39"
            },
            "returnParameters": {
              "id": 5175,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "10800:0:39"
            },
            "scope": 5423,
            "src": "10643:1480:39",
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 5305,
              "nodeType": "Block",
              "src": "12964:239:39",
              "statements": [
                {
                  "documentation": "@dev Require that the signer is the allowlistowner.",
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 5293,
                            "name": "hash",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 5279,
                            "src": "13062:4:39",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          {
                            "id": 5294,
                            "name": "sig",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 5281,
                            "src": "13068:3:39",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            },
                            {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            }
                          ],
                          "id": 5292,
                          "name": "verifySignature",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1007,
                          "src": "13046:15:39",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_bytes_memory_ptr_$returns$_t_bool_$",
                            "typeString": "function (bytes32,bytes memory) returns (bool)"
                          }
                        },
                        "id": 5295,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "13046:26:39",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "48617368206e6f74207369676e656420627920796f752e",
                        "id": 5296,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "13074:25:39",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_ef5f160e4668f863b4f5f0eb6838380bb3459b7b0bafc4b8dc1f326dd0a6eedf",
                          "typeString": "literal_string \"Hash not signed by you.\""
                        },
                        "value": "Hash not signed by you."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_ef5f160e4668f863b4f5f0eb6838380bb3459b7b0bafc4b8dc1f326dd0a6eedf",
                          "typeString": "literal_string \"Hash not signed by you.\""
                        }
                      ],
                      "id": 5291,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "13038:7:39",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 5297,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "13038:62:39",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 5298,
                  "nodeType": "ExpressionStatement",
                  "src": "13038:62:39"
                },
                {
                  "documentation": "@dev RedeemToken.",
                  "expression": {
                    "arguments": [
                      {
                        "id": 5300,
                        "name": "_receiver",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5273,
                        "src": "13159:9:39",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 5301,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5275,
                        "src": "13170:7:39",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 5302,
                        "name": "_tokenExpiryDate",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5277,
                        "src": "13179:16:39",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 5299,
                      "name": "redeemPendingToken",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 5162,
                      "src": "13140:18:39",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256,uint256)"
                      }
                    },
                    "id": 5303,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "13140:56:39",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 5304,
                  "nodeType": "ExpressionStatement",
                  "src": "13140:56:39"
                }
              ]
            },
            "documentation": {
              "id": 5269,
              "nodeType": "StructuredDocumentation",
              "src": "12129:558:39",
              "text": " @dev  Allows the allowlistOwner to redeem an expired pending\n       token on behalf of the tokenOwner.\n @notice   Callable by the deployer of this contract [DaccredDeployer]\n           and the allowlistOwner.\n @param _caller            Allowlist owner.\n @param _receiver          Address of receiver.\n @param tokenId            TokenId.\n @param _tokenExpiryDate   Days to extend the token.\n @param hash               Hash of message.\n @param sig                Signature."
            },
            "functionSelector": "bd131786",
            "id": 5306,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 5284,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 5283,
                  "name": "onlyOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 6017,
                  "src": "12913:9:39"
                },
                "nodeType": "ModifierInvocation",
                "src": "12913:9:39"
              },
              {
                "arguments": [
                  {
                    "id": 5286,
                    "name": "_caller",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 5271,
                    "src": "12942:7:39",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  }
                ],
                "id": 5287,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 5285,
                  "name": "onlyAllowlistOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 4428,
                  "src": "12923:18:39"
                },
                "nodeType": "ModifierInvocation",
                "src": "12923:27:39"
              },
              {
                "id": 5289,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 5288,
                  "name": "nonReentrant",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 4819,
                  "src": "12951:12:39"
                },
                "nodeType": "ModifierInvocation",
                "src": "12951:12:39"
              }
            ],
            "name": "redeemPendingTokenWithSignature",
            "nameLocation": "12701:31:39",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 5282,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 5271,
                  "mutability": "mutable",
                  "name": "_caller",
                  "nameLocation": "12750:7:39",
                  "nodeType": "VariableDeclaration",
                  "scope": 5306,
                  "src": "12742:15:39",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 5270,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "12742:7:39",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 5273,
                  "mutability": "mutable",
                  "name": "_receiver",
                  "nameLocation": "12775:9:39",
                  "nodeType": "VariableDeclaration",
                  "scope": 5306,
                  "src": "12767:17:39",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 5272,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "12767:7:39",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 5275,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nameLocation": "12802:7:39",
                  "nodeType": "VariableDeclaration",
                  "scope": 5306,
                  "src": "12794:15:39",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 5274,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "12794:7:39",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 5277,
                  "mutability": "mutable",
                  "name": "_tokenExpiryDate",
                  "nameLocation": "12827:16:39",
                  "nodeType": "VariableDeclaration",
                  "scope": 5306,
                  "src": "12819:24:39",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 5276,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "12819:7:39",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 5279,
                  "mutability": "mutable",
                  "name": "hash",
                  "nameLocation": "12861:4:39",
                  "nodeType": "VariableDeclaration",
                  "scope": 5306,
                  "src": "12853:12:39",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 5278,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "12853:7:39",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 5281,
                  "mutability": "mutable",
                  "name": "sig",
                  "nameLocation": "12888:3:39",
                  "nodeType": "VariableDeclaration",
                  "scope": 5306,
                  "src": "12875:16:39",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 5280,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "12875:5:39",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "12732:165:39"
            },
            "returnParameters": {
              "id": 5290,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "12964:0:39"
            },
            "scope": 5423,
            "src": "12692:511:39",
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 5343,
              "nodeType": "Block",
              "src": "14042:238:39",
              "statements": [
                {
                  "documentation": "@dev Require that the signer is the allowlistowner.",
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 5331,
                            "name": "hash",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 5317,
                            "src": "14140:4:39",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          {
                            "id": 5332,
                            "name": "sig",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 5319,
                            "src": "14146:3:39",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            },
                            {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            }
                          ],
                          "id": 5330,
                          "name": "verifySignature",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1007,
                          "src": "14124:15:39",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_bytes_memory_ptr_$returns$_t_bool_$",
                            "typeString": "function (bytes32,bytes memory) returns (bool)"
                          }
                        },
                        "id": 5333,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "14124:26:39",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "48617368206e6f74207369676e656420627920796f752e",
                        "id": 5334,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "14152:25:39",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_ef5f160e4668f863b4f5f0eb6838380bb3459b7b0bafc4b8dc1f326dd0a6eedf",
                          "typeString": "literal_string \"Hash not signed by you.\""
                        },
                        "value": "Hash not signed by you."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_ef5f160e4668f863b4f5f0eb6838380bb3459b7b0bafc4b8dc1f326dd0a6eedf",
                          "typeString": "literal_string \"Hash not signed by you.\""
                        }
                      ],
                      "id": 5329,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "14116:7:39",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 5335,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "14116:62:39",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 5336,
                  "nodeType": "ExpressionStatement",
                  "src": "14116:62:39"
                },
                {
                  "documentation": "@dev RedeemToken.",
                  "expression": {
                    "arguments": [
                      {
                        "id": 5338,
                        "name": "_receiver",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5311,
                        "src": "14236:9:39",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 5339,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5313,
                        "src": "14247:7:39",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 5340,
                        "name": "_tokenExpiryDate",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5315,
                        "src": "14256:16:39",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 5337,
                      "name": "redeemMintedToken",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 5268,
                      "src": "14218:17:39",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256,uint256)"
                      }
                    },
                    "id": 5341,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "14218:55:39",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 5342,
                  "nodeType": "ExpressionStatement",
                  "src": "14218:55:39"
                }
              ]
            },
            "documentation": {
              "id": 5307,
              "nodeType": "StructuredDocumentation",
              "src": "13209:557:39",
              "text": " @dev  Allows the allowlistOwner to redeem an expired minted\n       token on behalf of the tokenOwner.\n @notice   Callable by the deployer of this contract [DaccredDeployer]\n           and the allowlistOwner.\n @param _caller            Allowlist owner.\n @param _receiver          Address of receiver.\n @param tokenId            TokenId.\n @param _tokenExpiryDate   Days to extend the token.\n @param hash               Hash of message.\n @param sig                Signature."
            },
            "functionSelector": "983a8b94",
            "id": 5344,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 5322,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 5321,
                  "name": "onlyOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 6017,
                  "src": "13991:9:39"
                },
                "nodeType": "ModifierInvocation",
                "src": "13991:9:39"
              },
              {
                "arguments": [
                  {
                    "id": 5324,
                    "name": "_caller",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 5309,
                    "src": "14020:7:39",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  }
                ],
                "id": 5325,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 5323,
                  "name": "onlyAllowlistOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 4428,
                  "src": "14001:18:39"
                },
                "nodeType": "ModifierInvocation",
                "src": "14001:27:39"
              },
              {
                "id": 5327,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 5326,
                  "name": "nonReentrant",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 4819,
                  "src": "14029:12:39"
                },
                "nodeType": "ModifierInvocation",
                "src": "14029:12:39"
              }
            ],
            "name": "redeemMintedTokenWithSignature",
            "nameLocation": "13780:30:39",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 5320,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 5309,
                  "mutability": "mutable",
                  "name": "_caller",
                  "nameLocation": "13828:7:39",
                  "nodeType": "VariableDeclaration",
                  "scope": 5344,
                  "src": "13820:15:39",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 5308,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "13820:7:39",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 5311,
                  "mutability": "mutable",
                  "name": "_receiver",
                  "nameLocation": "13853:9:39",
                  "nodeType": "VariableDeclaration",
                  "scope": 5344,
                  "src": "13845:17:39",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 5310,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "13845:7:39",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 5313,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nameLocation": "13880:7:39",
                  "nodeType": "VariableDeclaration",
                  "scope": 5344,
                  "src": "13872:15:39",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 5312,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "13872:7:39",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 5315,
                  "mutability": "mutable",
                  "name": "_tokenExpiryDate",
                  "nameLocation": "13905:16:39",
                  "nodeType": "VariableDeclaration",
                  "scope": 5344,
                  "src": "13897:24:39",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 5314,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "13897:7:39",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 5317,
                  "mutability": "mutable",
                  "name": "hash",
                  "nameLocation": "13939:4:39",
                  "nodeType": "VariableDeclaration",
                  "scope": 5344,
                  "src": "13931:12:39",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 5316,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "13931:7:39",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 5319,
                  "mutability": "mutable",
                  "name": "sig",
                  "nameLocation": "13966:3:39",
                  "nodeType": "VariableDeclaration",
                  "scope": 5344,
                  "src": "13953:16:39",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 5318,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "13953:5:39",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "13810:165:39"
            },
            "returnParameters": {
              "id": 5328,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "14042:0:39"
            },
            "scope": 5423,
            "src": "13771:509:39",
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 5388,
              "nodeType": "Block",
              "src": "14667:533:39",
              "statements": [
                {
                  "documentation": "@dev Require that the allowlistowner is not a zero address.",
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 5361,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 5356,
                          "name": "_caller",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 5347,
                          "src": "14757:7:39",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 5359,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "14776:1:39",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 5358,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "14768:7:39",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 5357,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "14768:7:39",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 5360,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "14768:10:39",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "14757:21:39",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "53656e64696e6720746f207a65726f20616464726573732e",
                        "id": 5362,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "14780:26:39",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_69550820d91345eff27185892db9732301bb932a686959ef02a532beee79fc14",
                          "typeString": "literal_string \"Sending to zero address.\""
                        },
                        "value": "Sending to zero address."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_69550820d91345eff27185892db9732301bb932a686959ef02a532beee79fc14",
                          "typeString": "literal_string \"Sending to zero address.\""
                        }
                      ],
                      "id": 5355,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "14749:7:39",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 5363,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "14749:58:39",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 5364,
                  "nodeType": "ExpressionStatement",
                  "src": "14749:58:39"
                },
                {
                  "documentation": "@dev Require that the balance of this contract is GTE the totalRevenue.",
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 5372,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "arguments": [
                              {
                                "id": 5368,
                                "name": "this",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -28,
                                "src": "14930:4:39",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_SoulboundRedeemable_$5423",
                                  "typeString": "contract SoulboundRedeemable"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_SoulboundRedeemable_$5423",
                                  "typeString": "contract SoulboundRedeemable"
                                }
                              ],
                              "id": 5367,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "14922:7:39",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 5366,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "14922:7:39",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 5369,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "14922:13:39",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "id": 5370,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "balance",
                          "nodeType": "MemberAccess",
                          "src": "14922:21:39",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">=",
                        "rightExpression": {
                          "id": 5371,
                          "name": "totalRevenue",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4723,
                          "src": "14947:12:39",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "14922:37:39",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "526576656e756520213d20436f6e74726163742062616c616e63652e",
                        "id": 5373,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "14973:30:39",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_fca07585151cf995e4811867d30d75ea50f98637b078e7e8276134b3a72fcd66",
                          "typeString": "literal_string \"Revenue != Contract balance.\""
                        },
                        "value": "Revenue != Contract balance."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_fca07585151cf995e4811867d30d75ea50f98637b078e7e8276134b3a72fcd66",
                          "typeString": "literal_string \"Revenue != Contract balance.\""
                        }
                      ],
                      "id": 5365,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "14901:7:39",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 5374,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "14901:112:39",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 5375,
                  "nodeType": "ExpressionStatement",
                  "src": "14901:112:39"
                },
                {
                  "documentation": "@dev Pay the totalRevenue to the allowlistowner.",
                  "expression": {
                    "arguments": [
                      {
                        "id": 5381,
                        "name": "totalRevenue",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4723,
                        "src": "15110:12:39",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "id": 5378,
                            "name": "_caller",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 5347,
                            "src": "15092:7:39",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 5377,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "15084:8:39",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_payable_$",
                            "typeString": "type(address payable)"
                          },
                          "typeName": {
                            "id": 5376,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "15084:8:39",
                            "stateMutability": "payable",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 5379,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "15084:16:39",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      "id": 5380,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "transfer",
                      "nodeType": "MemberAccess",
                      "src": "15084:25:39",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_transfer_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 5382,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "15084:39:39",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 5383,
                  "nodeType": "ExpressionStatement",
                  "src": "15084:39:39"
                },
                {
                  "documentation": "@dev Set the totalRevenue to 0.",
                  "expression": {
                    "id": 5386,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 5384,
                      "name": "totalRevenue",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4723,
                      "src": "15177:12:39",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "30",
                      "id": 5385,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "15192:1:39",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "15177:16:39",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 5387,
                  "nodeType": "ExpressionStatement",
                  "src": "15177:16:39"
                }
              ]
            },
            "documentation": {
              "id": 5345,
              "nodeType": "StructuredDocumentation",
              "src": "14286:268:39",
              "text": " @dev  Allows the allowlistowner to withdraw his funds to his wallet.\n @notice   Callable by the deployer of this contract [DaccredDeployer]\n           and the allowlistOwner.\n @param _caller Address of allowlistowner."
            },
            "functionSelector": "51cff8d9",
            "id": 5389,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 5350,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 5349,
                  "name": "onlyOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 6017,
                  "src": "14617:9:39"
                },
                "nodeType": "ModifierInvocation",
                "src": "14617:9:39"
              },
              {
                "arguments": [
                  {
                    "id": 5352,
                    "name": "_caller",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 5347,
                    "src": "14654:7:39",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  }
                ],
                "id": 5353,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 5351,
                  "name": "onlyAllowlistOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 4428,
                  "src": "14635:18:39"
                },
                "nodeType": "ModifierInvocation",
                "src": "14635:27:39"
              }
            ],
            "name": "withdraw",
            "nameLocation": "14568:8:39",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 5348,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 5347,
                  "mutability": "mutable",
                  "name": "_caller",
                  "nameLocation": "14585:7:39",
                  "nodeType": "VariableDeclaration",
                  "scope": 5389,
                  "src": "14577:15:39",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 5346,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "14577:7:39",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "14576:17:39"
            },
            "returnParameters": {
              "id": 5354,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "14667:0:39"
            },
            "scope": 5423,
            "src": "14559:641:39",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 5421,
              "nodeType": "Block",
              "src": "15432:347:39",
              "statements": [
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "id": 5403,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 5399,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "id": 5397,
                        "name": "totalRevenue",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4723,
                        "src": "15551:12:39",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": ">=",
                      "rightExpression": {
                        "hexValue": "30",
                        "id": 5398,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "15567:1:39",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      "src": "15551:17:39",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "&&",
                    "rightExpression": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 5402,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "id": 5400,
                        "name": "totalRevenue",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4723,
                        "src": "15572:12:39",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "<",
                      "rightExpression": {
                        "hexValue": "353030",
                        "id": 5401,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "15587:8:39",
                        "subdenomination": "gwei",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_500000000000_by_1",
                          "typeString": "int_const 500000000000"
                        },
                        "value": "500"
                      },
                      "src": "15572:23:39",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "src": "15551:44:39",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "documentation": "Grant free tax if the total revenue of the contract is\n in range of 0 - 500 gwei.",
                  "id": 5409,
                  "nodeType": "IfStatement",
                  "src": "15547:118:39",
                  "trueBody": {
                    "id": 5408,
                    "nodeType": "Block",
                    "src": "15597:68:39",
                    "statements": [
                      {
                        "documentation": "@dev Set tax to 0.",
                        "expression": {
                          "id": 5406,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 5404,
                            "name": "_tax",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 5392,
                            "src": "15646:4:39",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "hexValue": "30",
                            "id": 5405,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "15653:1:39",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "src": "15646:8:39",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 5407,
                        "nodeType": "ExpressionStatement",
                        "src": "15646:8:39"
                      }
                    ]
                  }
                },
                {
                  "documentation": "Else simply calculate tax on total revenue.",
                  "expression": {
                    "id": 5419,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 5410,
                      "name": "__tax",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 5395,
                      "src": "15731:5:39",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 5418,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "components": [
                          {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 5415,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 5413,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 5411,
                                "name": "_tax",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 5392,
                                "src": "15740:4:39",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "*",
                              "rightExpression": {
                                "id": 5412,
                                "name": "totalRevenue",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 4723,
                                "src": "15747:12:39",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "15740:19:39",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "*",
                            "rightExpression": {
                              "hexValue": "3130",
                              "id": 5414,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "15762:2:39",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_10_by_1",
                                "typeString": "int_const 10"
                              },
                              "value": "10"
                            },
                            "src": "15740:24:39",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "id": 5416,
                        "isConstant": false,
                        "isInlineArray": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "TupleExpression",
                        "src": "15739:26:39",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "/",
                      "rightExpression": {
                        "hexValue": "31303030",
                        "id": 5417,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "15768:4:39",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1000_by_1",
                          "typeString": "int_const 1000"
                        },
                        "value": "1000"
                      },
                      "src": "15739:33:39",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "15731:41:39",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 5420,
                  "nodeType": "ExpressionStatement",
                  "src": "15731:41:39"
                }
              ]
            },
            "documentation": {
              "id": 5390,
              "nodeType": "StructuredDocumentation",
              "src": "15206:148:39",
              "text": " @dev Calculates the tax off the totalSales.\n @param _tax Percentage tax.\n @return __tax Tax calculated."
            },
            "id": 5422,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "calculateTax",
            "nameLocation": "15368:12:39",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 5393,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 5392,
                  "mutability": "mutable",
                  "name": "_tax",
                  "nameLocation": "15389:4:39",
                  "nodeType": "VariableDeclaration",
                  "scope": 5422,
                  "src": "15381:12:39",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 5391,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "15381:7:39",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "15380:14:39"
            },
            "returnParameters": {
              "id": 5396,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 5395,
                  "mutability": "mutable",
                  "name": "__tax",
                  "nameLocation": "15425:5:39",
                  "nodeType": "VariableDeclaration",
                  "scope": 5422,
                  "src": "15417:13:39",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 5394,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "15417:7:39",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "15416:15:39"
            },
            "scope": 5423,
            "src": "15359:420:39",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "private"
          }
        ],
        "scope": 5424,
        "src": "826:14955:39",
        "usedErrors": [
          1138
        ]
      }
    ],
    "src": "438:15344:39"
  },
  "bytecode": "6080604052600f6012553480156200001657600080fd5b50604051620033403803806200334083398101604081905262000039916200029f565b858585858383838381848481816001620000548382620003d7565b506002620000638282620003d7565b505050620000806200007a6200017c60201b60201c565b62000180565b50506001600160a01b038116620000d15760405162461bcd60e51b815260206004820152601060248201526f24b73b30b634b21020b2323932b9b99760811b60448201526064015b60405180910390fd5b600980546001600160a01b0319166001600160a01b039290921691909117905560008190036200010857620f4240600a556200010e565b600a8190555b505050505050505081811115620001685760405162461bcd60e51b815260206004820152601860248201527f507269636520686967686572207468616e206c696d69742e00000000000000006044820152606401620000c8565b600e91909155600f5550620004a392505050565b3390565b600680546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b634e487b7160e01b600052604160045260246000fd5b600082601f830112620001fa57600080fd5b81516001600160401b0380821115620002175762000217620001d2565b604051601f8301601f19908116603f01168101908282118183101715620002425762000242620001d2565b816040528381526020925086838588010111156200025f57600080fd5b600091505b8382101562000283578582018301518183018401529082019062000264565b83821115620002955760008385830101525b9695505050505050565b60008060008060008060c08789031215620002b957600080fd5b86516001600160401b0380821115620002d157600080fd5b620002df8a838b01620001e8565b97506020890151915080821115620002f657600080fd5b506200030589828a01620001e8565b604089015190965090506001600160a01b03811681146200032557600080fd5b80945050606087015192506080870151915060a087015190509295509295509295565b600181811c908216806200035d57607f821691505b6020821081036200037e57634e487b7160e01b600052602260045260246000fd5b50919050565b601f821115620003d257600081815260208120601f850160051c81016020861015620003ad5750805b601f850160051c820191505b81811015620003ce57828155600101620003b9565b5050505b505050565b81516001600160401b03811115620003f357620003f3620001d2565b6200040b8162000404845462000348565b8462000384565b602080601f8311600181146200044357600084156200042a5750858301515b600019600386901b1c1916600185901b178555620003ce565b600085815260208120601f198616915b82811015620004745788860151825594840194600190910190840162000453565b5085821015620004935787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b612e8d80620004b36000396000f3fe6080604052600436106101fa5760003560e01c806395d89b411161010c578063daca6f781161009a578063ed7347301161006c578063ed734730146105ef578063f2fde38b14610602578063f577a50014610622578063fad54de714610652578063fb8f198d1461066757005b8063daca6f781461056f578063e8c587631461058f578063e92b0842146105af578063ea5353c7146105cf57005b8063bd97a6ad116100de578063bd97a6ad146104da578063c3cab38a146104fa578063c87b56dd1461051a578063c9dd94c71461053a578063c9e4c54d1461054f57005b806395d89b411461048a578063983a8b941461049f578063a0b97daa146104b2578063bd131786146104c757005b806351cff8d9116101895780636e0a87461161015b5780636e0a8746146103f957806370a0823114610417578063715018a614610437578063884336511461044c5780638da5cb5b1461046c57005b806351cff8d9146103205780635899e7b2146103405780636352211e146103865780636833f200146103be57005b80631f04d135116101cd5780631f04d1351461029a578063210fa96b146102ba57806333e085c1146102da5780633d1a350e146102ed57806342966c681461030057005b8062e4768b1461020357806301ffc9a71461022357806306fdde031461025857806308c92e571461027a57005b3661020157005b005b34801561020f57600080fd5b5061020161021e366004612719565b610687565b34801561022f57600080fd5b5061024361023e366004612743565b610756565b60405190151581526020015b60405180910390f35b34801561026457600080fd5b5061026d6107a8565b60405161024f919061279d565b34801561028657600080fd5b50610201610295366004612873565b61083a565b3480156102a657600080fd5b506102016102b5366004612873565b610970565b3480156102c657600080fd5b5061026d6102d53660046128c3565b610a0c565b6102016102e8366004612719565b610a8e565b6102016102fb3660046128dc565b610da6565b34801561030c57600080fd5b5061020161031b3660046128c3565b611098565b34801561032c57600080fd5b5061020161033b36600461290f565b61110d565b34801561034c57600080fd5b5061024361035b366004612719565b6001600160a01b03919091166000908152600860209081526040808320938352929052205460ff1690565b34801561039257600080fd5b506103a66103a13660046128c3565b611263565b6040516001600160a01b03909116815260200161024f565b3480156103ca57600080fd5b506103eb6103d93660046128c3565b60009081526020819052604090205490565b60405190815260200161024f565b34801561040557600080fd5b506009546001600160a01b03166103a6565b34801561042357600080fd5b506103eb61043236600461290f565b6112c8565b34801561044357600080fd5b50610201611351565b34801561045857600080fd5b5061020161046736600461292a565b611387565b34801561047857600080fd5b506006546001600160a01b03166103a6565b34801561049657600080fd5b5061026d6113fd565b6102016104ad366004612978565b61140c565b3480156104be57600080fd5b50600e546103eb565b6102016104d5366004612978565b611504565b3480156104e657600080fd5b506102016104f53660046129f2565b6115e9565b34801561050657600080fd5b50610201610515366004612a34565b6117dd565b34801561052657600080fd5b5061026d6105353660046128c3565b611835565b34801561054657600080fd5b5061026d61192a565b34801561055b57600080fd5b5061020161056a366004612a56565b611987565b34801561057b57600080fd5b5061024361058a366004612ade565b611a94565b34801561059b57600080fd5b506103eb6105aa3660046128c3565b611aa7565b3480156105bb57600080fd5b506102436105ca366004612b0f565b611ae4565b3480156105db57600080fd5b506102016105ea366004612a56565b611b78565b6102016105fd3660046128dc565b611bf7565b34801561060e57600080fd5b5061020161061d36600461290f565b611da3565b34801561062e57600080fd5b5061024361063d3660046128c3565b60009081526020819052604090205442111590565b34801561065e57600080fd5b50600f546103eb565b34801561067357600080fd5b506103a6610682366004612719565b611e3b565b6006546001600160a01b031633146106ba5760405162461bcd60e51b81526004016106b190612b66565b60405180910390fd5b816106cd6009546001600160a01b031690565b6001600160a01b0316816001600160a01b0316146106fd5760405162461bcd60e51b81526004016106b190612b9b565b600e5482111561074f5760405162461bcd60e51b815260206004820152601860248201527f507269636520686967686572207468616e206c696d69742e000000000000000060448201526064016106b1565b50600f5550565b60006001600160e01b03198216635b5e139f60e01b148061078757506001600160e01b03198216635164cf4760e01b145b806107a257506301ffc9a760e01b6001600160e01b03198316145b92915050565b6060600180546107b790612bc9565b80601f01602080910402602001604051908101604052809291908181526020018280546107e390612bc9565b80156108305780601f1061080557610100808354040283529160200191610830565b820191906000526020600020905b81548152906001019060200180831161081357829003601f168201915b5050505050905090565b61084381611f4f565b61088f5760405162461bcd60e51b815260206004820152601b60248201527f5265766f6b65206f6620696e6578697374656e7420746f6b656e2e000000000060448201526064016106b1565b81516041146108db5760405162461bcd60e51b8152602060048201526018602482015277092dcecc2d8d2c840e6d2cedcc2e8eae4ca40d8cadccee8d60431b60448201526064016106b1565b6108e58383611a94565b61092d5760405162461bcd60e51b81526020600482015260196024820152782430b9b4103737ba1039b4b3b732b210313c9037bbb732b91760391b60448201526064016106b1565b61093f61093982611263565b82611f6c565b5060405181907ff947bf2266afede98f27ad2312db8b2a17921852307f979b6f14a2b41fa774bc90600090a2505050565b6006546001600160a01b0316331461099a5760405162461bcd60e51b81526004016106b190612b66565b600b54156109bc57600b80549060006109b283612c19565b91905055506109fc565b60405162461bcd60e51b81526020600482015260156024820152742637bbb2b9ba103634b6b4ba103932b0b1b432b21760591b60448201526064016106b1565b610a0783838361083a565b505050565b6060610a1661192a565b51600003610a565760405162461bcd60e51b815260206004820152600d60248201526c456d707479206261736555524960981b60448201526064016106b1565b610a5e61192a565b610a6783612034565b604051602001610a78929190612c30565b6040516020818303038152906040529050919050565b6006546001600160a01b03163314610ab85760405162461bcd60e51b81526004016106b190612b66565b60135460ff1615610ac857600080fd5b6013805460ff191660011790556001600160a01b038216610afb5760405162461bcd60e51b81526004016106b190612c5f565b610b0481611f4f565b15610b515760405162461bcd60e51b815260206004820152601f60248201527f4d696e74206f6620616c7265616479206578697374696e6720746f6b656e2e0060448201526064016106b1565b60008181526010602052604090205460ff16610ba95760405162461bcd60e51b815260206004820152601760248201527620b63932b0b23c903932b1b2b4bb32b2103a37b5b2b71760491b60448201526064016106b1565b6000818152601160205260409020546001600160a01b03838116911614610c0a5760405162461bcd60e51b81526020600482015260156024820152742737ba103832b73234b733903932b1b2b4bb32b91760591b60448201526064016106b1565b600081815260208190526040902054421115610c795760405162461bcd60e51b815260206004820152602860248201527f526563656976616c206f66206578706972656420746f6b656e2c20726564656560448201526736903a37b5b2b71760c11b60648201526084016106b1565b600f54341015610ccb5760405162461bcd60e51b815260206004820152601c60248201527f5072696365206c6f776572207468616e20746f6b656e20636f73742e0000000060448201526064016106b1565b6000600f54341115610d1f57600f54610ce49034612c8e565b6040519091506001600160a01b0384169082156108fc029083906000818181858888f19350505050158015610d1d573d6000803e3d6000fd5b505b6000610d2a83610a0c565b9050610d3784848361213d565b50600c8054906000610d4883612ca5565b9190505550600f54600d6000828254610d619190612cbe565b909155505050600091825250601060209081526040808320805460ff19908116909155601190925290912080546001600160a01b031916905560138054909116905550565b6006546001600160a01b03163314610dd05760405162461bcd60e51b81526004016106b190612b66565b60135460ff1615610de057600080fd5b6013805460ff191660011790556001600160a01b038316610e435760405162461bcd60e51b815260206004820152601b60248201527f526564656d7074696f6e20746f207a65726f20616464726573732e000000000060448201526064016106b1565b610e4c82611f4f565b610ea25760405162461bcd60e51b815260206004820152602160248201527f526564656d7074696f6e206f66206e6f6e2d6578697374696e6720746f6b656e6044820152601760f91b60648201526084016106b1565b60008281526010602052604090205460ff1615610ef85760405162461bcd60e51b81526020600482015260146024820152732a37b5b2b71039ba34b636103832b73234b7339760611b60448201526064016106b1565b826001600160a01b0316610f0b83611263565b6001600160a01b031614610f545760405162461bcd60e51b815260206004820152601060248201526f2737ba103a37b5b2b71037bbb732b91760811b60448201526064016106b1565b6000828152602081905260409020544211610fa45760405162461bcd60e51b815260206004820152601060248201526f2a37b5b2b7103ab732bc3834b932b21760811b60448201526064016106b1565b6000610fb1601254612154565b9050803410156110035760405162461bcd60e51b815260206004820181905260248201527f5072696365206c6f776572207468616e20726564656d7074696f6e207461782e60448201526064016106b1565b60008115611050576110158234612c8e565b6040519091506001600160a01b0386169082156108fc029083906000818181858888f1935050505015801561104e573d6000803e3d6000fd5b505b61105a84846117dd565b604051839085907f6f73b7b8d37df32ea60a45eadc8fc3d2d716d705ee099bd506817482ce84731690600090a350506013805460ff19169055505050565b6110a181611263565b6001600160a01b0316336001600160a01b0316146111015760405162461bcd60e51b815260206004820152601a60248201527f6275726e3a2073656e646572206d757374206265206f776e657200000000000060448201526064016106b1565b61110a81612190565b50565b6006546001600160a01b031633146111375760405162461bcd60e51b81526004016106b190612b66565b8061114a6009546001600160a01b031690565b6001600160a01b0316816001600160a01b03161461117a5760405162461bcd60e51b81526004016106b190612b9b565b6001600160a01b0382166111d05760405162461bcd60e51b815260206004820152601860248201527f53656e64696e6720746f207a65726f20616464726573732e000000000000000060448201526064016106b1565b600d544710156112225760405162461bcd60e51b815260206004820152601c60248201527f526576656e756520213d20436f6e74726163742062616c616e63652e0000000060448201526064016106b1565b600d546040516001600160a01b0384169180156108fc02916000818181858888f19350505050158015611259573d6000803e3d6000fd5b50506000600d5550565b6000818152600360205260408120546001600160a01b0316806107a25760405162461bcd60e51b815260206004820152601c60248201527f6f776e65724f663a20746f6b656e20646f65736e27742065786973740000000060448201526064016106b1565b60006001600160a01b0382166113355760405162461bcd60e51b815260206004820152602c60248201527f62616c616e63654f663a2061646472657373207a65726f206973206e6f74206160448201526b103b30b634b21037bbb732b960a11b60648201526084016106b1565b506001600160a01b031660009081526005602052604090205490565b6006546001600160a01b0316331461137b5760405162461bcd60e51b81526004016106b190612b66565b6113856000612237565b565b6006546001600160a01b031633146113b15760405162461bcd60e51b81526004016106b190612b66565b816113c46009546001600160a01b031690565b6001600160a01b0316816001600160a01b0316146113f45760405162461bcd60e51b81526004016106b190612b9b565b610a0782612289565b6060600280546107b790612bc9565b6006546001600160a01b031633146114365760405162461bcd60e51b81526004016106b190612b66565b856114496009546001600160a01b031690565b6001600160a01b0316816001600160a01b0316146114795760405162461bcd60e51b81526004016106b190612b9b565b60135460ff161561148957600080fd5b6013805460ff191660011790556114a08383611a94565b6114e65760405162461bcd60e51b81526020600482015260176024820152762430b9b4103737ba1039b4b3b732b210313c903cb7ba9760491b60448201526064016106b1565b6114f1868686610da6565b50506013805460ff191690555050505050565b6006546001600160a01b0316331461152e5760405162461bcd60e51b81526004016106b190612b66565b856115416009546001600160a01b031690565b6001600160a01b0316816001600160a01b0316146115715760405162461bcd60e51b81526004016106b190612b9b565b60135460ff161561158157600080fd5b6013805460ff191660011790556115988383611a94565b6115de5760405162461bcd60e51b81526020600482015260176024820152762430b9b4103737ba1039b4b3b732b210313c903cb7ba9760491b60448201526064016106b1565b6114f1868686611bf7565b6006546001600160a01b031633146116135760405162461bcd60e51b81526004016106b190612b66565b836116266009546001600160a01b031690565b6001600160a01b0316816001600160a01b0316146116565760405162461bcd60e51b81526004016106b190612b9b565b600a54600b541061169e5760405162461bcd60e51b815260206004820152601260248201527124b9b9bab29021b0b8102932b0b1b432b21760711b60448201526064016106b1565b6001600160a01b0384166116c45760405162461bcd60e51b81526004016106b190612c5f565b6116cd83611f4f565b1561171a5760405162461bcd60e51b815260206004820152601f60248201527f4d696e74206f6620616c7265616479206578697374696e6720746f6b656e2e0060448201526064016106b1565b60008381526010602052604090205460ff16156117795760405162461bcd60e51b815260206004820152601e60248201527f4d696e74206f6620616c72656164792070656e64696e6720746f6b656e2e000060448201526064016106b1565b6000838152601060209081526040808320805460ff191660011790556011909152902080546001600160a01b0386166001600160a01b03199091161790556117c183836117dd565b600b80549060006117d183612ca5565b91905055505050505050565b6117e78142612cbe565b600083815260208181526040918290209290925580518481529182018390527f41a73beb1018a8b63e0f451a8a4f483806142cf14be45b1a58a23776a1e9b4bc910160405180910390a15050565b606061184082611f4f565b61188c5760405162461bcd60e51b815260206004820152601d60248201527f746f6b656e5552493a20746f6b656e20646f65736e277420657869737400000060448201526064016106b1565b600082815260046020526040902080546118a590612bc9565b80601f01602080910402602001604051908101604052809291908181526020018280546118d190612bc9565b801561191e5780601f106118f35761010080835404028352916020019161191e565b820191906000526020600020905b81548152906001019060200180831161190157829003601f168201915b50505050509050919050565b60606007805461193990612bc9565b905060000361197a5760405162461bcd60e51b815260206004820152600d60248201526c456d707479206261736555524960981b60448201526064016106b1565b600780546107b790612bc9565b6001600160a01b0385166119ad5760405162461bcd60e51b81526004016106b190612c5f565b82516041146119f95760405162461bcd60e51b8152602060048201526018602482015277092dcecc2d8d2c840e6d2cedcc2e8eae4ca40d8cadccee8d60431b60448201526064016106b1565b611a038484611a94565b611a4b5760405162461bcd60e51b81526020600482015260196024820152782430b9b4103737ba1039b4b3b732b210313c9037bbb732b91760391b60448201526064016106b1565b611a5685838361213d565b5060405182906001600160a01b038716907f79af0e59b31823dd289ceebabc4d63d25f35926b8548e3a084a500c9d4e1855690600090a35050505050565b6000611aa083836122db565b9392505050565b600081815260208190526040812054421115611ac557506000919050565b6000828152602081905260409020546107a2904290612c8e565b919050565b602081810151604080840151606080860151835160008082528188018087528a905291821a81860181905292810186905260808101849052935190959293919260019260a080820193601f1981019281900390910190855afa158015611b4e573d6000803e3d6000fd5b505050602060405103516001600160a01b0316876001600160a01b03161493505050509392505050565b6006546001600160a01b03163314611ba25760405162461bcd60e51b81526004016106b190612b66565b600a54600b5410611bea5760405162461bcd60e51b815260206004820152601260248201527124b9b9bab29021b0b8102932b0b1b432b21760711b60448201526064016106b1565b6117c18585858585611987565b6006546001600160a01b03163314611c215760405162461bcd60e51b81526004016106b190612b66565b60135460ff1615611c3157600080fd5b6013805460ff191660011790556001600160a01b038316611c945760405162461bcd60e51b815260206004820152601b60248201527f526564656d7074696f6e20746f207a65726f20616464726573732e000000000060448201526064016106b1565b611c9d82611f4f565b15611cea5760405162461bcd60e51b815260206004820152601d60248201527f526564656d7074696f6e206f66206578697374696e6720746f6b656e2e00000060448201526064016106b1565b60008281526010602052604090205460ff16611d425760405162461bcd60e51b815260206004820152601760248201527620b63932b0b23c903932b1b2b4bb32b2103a37b5b2b71760491b60448201526064016106b1565b6000828152601160205260409020546001600160a01b03848116911614610f545760405162461bcd60e51b81526020600482015260156024820152742737ba103832b73234b733903932b1b2b4bb32b91760591b60448201526064016106b1565b6006546001600160a01b03163314611dcd5760405162461bcd60e51b81526004016106b190612b66565b6001600160a01b038116611e325760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b60648201526084016106b1565b61110a81612237565b60006001600160a01b038316611e935760405162461bcd60e51b815260206004820152601760248201527f517565727920666f72207a65726f20616464726573732e00000000000000000060448201526064016106b1565b611e9c82611f4f565b611ede5760405162461bcd60e51b81526020600482015260136024820152722737b716b2bc34b9ba32b73a103a37b5b2b71760691b60448201526064016106b1565b826001600160a01b0316611ef183611263565b6001600160a01b031614611f475760405162461bcd60e51b815260206004820152601a60248201527f546f6b656e206e6f74206f776e6564206279206164647265737300000000000060448201526064016106b1565b503092915050565b6000908152600360205260409020546001600160a01b0316151590565b6000611f7782611f4f565b611fb95760405162461bcd60e51b81526020600482015260136024820152722737b716b2bc34b9ba32b73a103a37b5b2b71760691b60448201526064016106b1565b826001600160a01b0316611fcc83611263565b6001600160a01b0316146120225760405162461bcd60e51b815260206004820152601a60248201527f546f6b656e206e6f74206f776e6564206279206164647265737300000000000060448201526064016106b1565b61202b82612481565b50600192915050565b60608160000361205b5750506040805180820190915260018152600360fc1b602082015290565b8160005b8115612085578061206f81612ca5565b915061207e9050600a83612cec565b915061205f565b60008167ffffffffffffffff8111156120a0576120a06127d0565b6040519080825280601f01601f1916602001820160405280156120ca576020820181803683370190505b5090505b8415612135576120df600183612c8e565b91506120ec600a86612d00565b6120f7906030612cbe565b60f81b81838151811061210c5761210c612d14565b60200101906001600160f81b031916908160001a90535061212e600a86612cec565b94506120ce565b949350505050565b600061214a848484612517565b5060019392505050565b600064746a528800600d54101561216a57600091505b6103e8600d548361217b9190612d2a565b61218690600a612d2a565b6107a29190612cec565b600061219b82611263565b6001600160a01b038116600090815260056020526040812080549293506001929091906121c9908490612c8e565b9091555050600082815260036020908152604080832080546001600160a01b0319169055600490915281206121fd916126b4565b60405182906001600160a01b038316907fec9ab91322523c899ede7830ec9bfc992b5981cdcc27b91162fb23de5791117b90600090a35050565b600680546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b80516000036122cb5760405162461bcd60e51b815260206004820152600e60248201526d092dcecc2d8d2c840d8cadccee8d60931b60448201526064016106b1565b60076122d78282612d97565b5050565b6006546000906001600160a01b031633146123085760405162461bcd60e51b81526004016106b190612b66565b6006546001600160a01b031633146123765760405162461bcd60e51b815260206004820152602b60248201527f4552433732313a3a2043616c6c20746f20636f6e7472616374206d616465206260448201526a3c903737b716b7bbb732b960a91b60648201526084016106b1565b81516041146123c75760405162461bcd60e51b815260206004820152601e60248201527f4572723a3a20496e76616c6964207369676e6174757265206c656e677468000060448201526064016106b1565b602082810151604080850151606080870151835160008082529681018086528a905290861a938101849052908101849052608081018290529293909260019060a0016020604051602081039080840390855afa15801561242b573d6000803e3d6000fd5b5050604051601f198101516009549093506001600160a01b038085169116149150819089907f7e4fe2a2a805a357593fdbdde58c02f6a53d8b4960744cd31a98697fc11c2e3690600090a3979650505050505050565b61248a81611f4f565b6124d65760405162461bcd60e51b815260206004820152601860248201527f4275726e206f6620696e6578697374656e7420746f6b656e000000000000000060448201526064016106b1565b60006124e182611263565b90506124ec82612190565b6001600160a01b0316600090815260086020908152604080832093835292905220805460ff19169055565b6001600160a01b03831661253d5760405162461bcd60e51b81526004016106b190612c5f565b80516000036125805760405162461bcd60e51b815260206004820152600f60248201526e22b6b83a3c903a37b5b2b72aa9249760891b60448201526064016106b1565b61258b8383836125bd565b50506001600160a01b03909116600090815260086020908152604080832093835292905220805460ff19166001179055565b60006125c883611f4f565b1561260c5760405162461bcd60e51b81526020600482015260146024820152736d696e743a20746f6b656e49442065786973747360601b60448201526064016106b1565b6001600160a01b0384166000908152600560205260408120805460019290612635908490612cbe565b9091555050600083815260036020908152604080832080546001600160a01b0319166001600160a01b038916179055600490915290206126758382612d97565b5060405183906001600160a01b038616907fe9274a84b19e9428826de6bae8c48329354f8f0e73f771b97cae2d9dccd45a2790600090a3509092915050565b5080546126c090612bc9565b6000825580601f106126d0575050565b601f01602090049060005260206000209081019061110a91905b808211156126fe57600081556001016126ea565b5090565b80356001600160a01b0381168114611adf57600080fd5b6000806040838503121561272c57600080fd5b61273583612702565b946020939093013593505050565b60006020828403121561275557600080fd5b81356001600160e01b031981168114611aa057600080fd5b60005b83811015612788578181015183820152602001612770565b83811115612797576000848401525b50505050565b60208152600082518060208401526127bc81604085016020870161276d565b601f01601f19169190910160400192915050565b634e487b7160e01b600052604160045260246000fd5b600082601f8301126127f757600080fd5b813567ffffffffffffffff80821115612812576128126127d0565b604051601f8301601f19908116603f0116810190828211818310171561283a5761283a6127d0565b8160405283815286602085880101111561285357600080fd5b836020870160208301376000602085830101528094505050505092915050565b60008060006060848603121561288857600080fd5b83359250602084013567ffffffffffffffff8111156128a657600080fd5b6128b2868287016127e6565b925050604084013590509250925092565b6000602082840312156128d557600080fd5b5035919050565b6000806000606084860312156128f157600080fd5b6128fa84612702565b95602085013595506040909401359392505050565b60006020828403121561292157600080fd5b611aa082612702565b6000806040838503121561293d57600080fd5b61294683612702565b9150602083013567ffffffffffffffff81111561296257600080fd5b61296e858286016127e6565b9150509250929050565b60008060008060008060c0878903121561299157600080fd5b61299a87612702565b95506129a860208801612702565b945060408701359350606087013592506080870135915060a087013567ffffffffffffffff8111156129d957600080fd5b6129e589828a016127e6565b9150509295509295509295565b60008060008060808587031215612a0857600080fd5b612a1185612702565b9350612a1f60208601612702565b93969395505050506040820135916060013590565b60008060408385031215612a4757600080fd5b50508035926020909101359150565b600080600080600060a08688031215612a6e57600080fd5b612a7786612702565b945060208601359350604086013567ffffffffffffffff80821115612a9b57600080fd5b612aa789838a016127e6565b9450606088013593506080880135915080821115612ac457600080fd5b50612ad1888289016127e6565b9150509295509295909350565b60008060408385031215612af157600080fd5b82359150602083013567ffffffffffffffff81111561296257600080fd5b600080600060608486031215612b2457600080fd5b612b2d84612702565b925060208401359150604084013567ffffffffffffffff811115612b5057600080fd5b612b5c868287016127e6565b9150509250925092565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b6020808252601490820152734e6f7420416c6c6f776c697374204f776e65722160601b604082015260600190565b600181811c90821680612bdd57607f821691505b602082108103612bfd57634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052601160045260246000fd5b600081612c2857612c28612c03565b506000190190565b60008351612c4281846020880161276d565b835190830190612c5681836020880161276d565b01949350505050565b60208082526015908201527426b4b73a103a37903d32b9379030b2323932b9b99760591b604082015260600190565b600082821015612ca057612ca0612c03565b500390565b600060018201612cb757612cb7612c03565b5060010190565b60008219821115612cd157612cd1612c03565b500190565b634e487b7160e01b600052601260045260246000fd5b600082612cfb57612cfb612cd6565b500490565b600082612d0f57612d0f612cd6565b500690565b634e487b7160e01b600052603260045260246000fd5b6000816000190483118215151615612d4457612d44612c03565b500290565b601f821115610a0757600081815260208120601f850160051c81016020861015612d705750805b601f850160051c820191505b81811015612d8f57828155600101612d7c565b505050505050565b815167ffffffffffffffff811115612db157612db16127d0565b612dc581612dbf8454612bc9565b84612d49565b602080601f831160018114612dfa5760008415612de25750858301515b600019600386901b1c1916600185901b178555612d8f565b600085815260208120601f198616915b82811015612e2957888601518255948401946001909101908401612e0a565b5085821015612e475787850151600019600388901b60f8161c191681555b5050505050600190811b0190555056fea2646970667358221220d84be31b55b9957eedec9ac513cd6049f6f334a1ebc344347050ca815bd44d6864736f6c634300080f0033",
  "bytecodeSha1": "cae05163a6e53907f9a771b99db512f3f068f731",
  "compiler": {
    "evm_version": "istanbul",
    "optimizer": {
      "enabled": true,
      "runs": 200
    },
    "version": "0.8.15+commit.e14f2714"
  },
  "contractName": "SoulboundRedeemable",
  "coverageMap": {
    "branches": {
      "0": {
        "Ownable.transferOwnership": {
          "171": [
            2006,
            2028,
            true
          ]
        }
      },
      "14": {
        "Allowlist._verifySignature": {
          "164": [
            3897,
            3920,
            true
          ],
          "165": [
            4067,
            4083,
            true
          ]
        }
      },
      "15": {},
      "36": {
        "IsValidWithDate.getTimeLeft": {
          "170": [
            2255,
            2295,
            false
          ]
        }
      },
      "37": {
        "Soulbound._getBaseURI": {
          "172": [
            7561,
            7587,
            true
          ]
        },
        "Soulbound._setBaseURI": {
          "178": [
            7152,
            7179,
            true
          ]
        },
        "Soulbound.burnSoulboundToken": {
          "179": [
            6564,
            6580,
            true
          ]
        },
        "Soulbound.issuerOf": {
          "173": [
            4479,
            4496,
            true
          ],
          "174": [
            4581,
            4598,
            true
          ],
          "175": [
            4691,
            4715,
            true
          ]
        },
        "Soulbound.mintSoulboundToken": {
          "180": [
            5816,
            5832,
            true
          ],
          "181": [
            5998,
            6025,
            true
          ]
        },
        "Soulbound.revoke": {
          "176": [
            3468,
            3485,
            true
          ],
          "177": [
            3580,
            3606,
            true
          ]
        }
      },
      "38": {
        "Allowlist.getAllowlistOwner": {
          "186": [
            1693,
            1723,
            true
          ]
        },
        "SoulboundCore.generateTokenURI": {
          "185": [
            6334,
            6366,
            true
          ]
        },
        "SoulboundCore.issueWithSignature": {
          "187": [
            3058,
            3076,
            true
          ],
          "188": [
            3337,
            3353,
            true
          ],
          "189": [
            3509,
            3535,
            true
          ]
        },
        "SoulboundCore.revokeWithSignature": {
          "182": [
            4455,
            4471,
            true
          ],
          "183": [
            4738,
            4754,
            true
          ],
          "184": [
            4910,
            4936,
            true
          ]
        },
        "SoulboundCore.toString": {
          "190": [
            6933,
            6943,
            false
          ]
        }
      },
      "39": {
        "SoulboundRedeemable.calculateTax": {
          "163": [
            15572,
            15595,
            false
          ]
        },
        "SoulboundRedeemable.mintPendingRedeemableToken": {
          "155": [
            4990,
            5010,
            true
          ],
          "156": [
            5104,
            5120,
            true
          ],
          "157": [
            5223,
            5240,
            true
          ],
          "158": [
            5362,
            5379,
            true
          ]
        },
        "SoulboundRedeemable.payToReceiveToken": {
          "139": [
            6324,
            6347,
            true
          ],
          "140": [
            6451,
            6468,
            true
          ],
          "141": [
            6581,
            6597,
            true
          ],
          "142": [
            6768,
            6806,
            true
          ],
          "143": [
            7092,
            7115,
            true
          ],
          "144": [
            7300,
            7322,
            false
          ]
        },
        "SoulboundRedeemable.redeemMintedToken": {
          "145": [
            10876,
            10899,
            true
          ],
          "146": [
            10995,
            11011,
            true
          ],
          "147": [
            11125,
            11142,
            true
          ],
          "148": [
            11256,
            11285,
            true
          ],
          "149": [
            11564,
            11581,
            true
          ],
          "150": [
            11731,
            11740,
            false
          ]
        },
        "SoulboundRedeemable.redeemMintedTokenWithSignature": {
          "153": [
            14124,
            14150,
            true
          ]
        },
        "SoulboundRedeemable.redeemPendingToken": {
          "159": [
            8827,
            8850,
            true
          ],
          "160": [
            8946,
            8963,
            true
          ],
          "161": [
            9073,
            9089,
            true
          ],
          "162": [
            9219,
            9257,
            true
          ]
        },
        "SoulboundRedeemable.redeemPendingTokenWithSignature": {
          "154": [
            13046,
            13072,
            true
          ]
        },
        "SoulboundRedeemable.setPrice": {
          "138": [
            3891,
            3916,
            true
          ]
        },
        "SoulboundRedeemable.withdraw": {
          "151": [
            14757,
            14778,
            true
          ],
          "152": [
            14922,
            14959,
            true
          ]
        }
      },
      "40": {
        "SoulboundWithSignature.ownerIssueWithSignature": {
          "192": [
            1905,
            1925,
            true
          ]
        },
        "SoulboundWithSignature.ownerRevokeWithSignature": {
          "191": [
            3272,
            3283,
            false
          ]
        }
      },
      "41": {
        "ERC4973._mint": {
          "169": [
            6201,
            6218,
            true
          ]
        },
        "ERC4973.balanceOf": {
          "167": [
            5570,
            5589,
            true
          ]
        },
        "ERC4973.burn": {
          "166": [
            5316,
            5346,
            true
          ]
        },
        "ERC4973.tokenURI": {
          "168": [
            5144,
            5160,
            true
          ]
        }
      },
      "5": {}
    },
    "statements": {
      "0": {
        "Ownable._transferOwnership": {
          "117": [
            2378,
            2395
          ],
          "118": [
            2405,
            2450
          ]
        },
        "Ownable.owner": {
          "3": [
            1101,
            1114
          ]
        },
        "Ownable.renounceOwnership": {
          "55": [
            1732,
            1762
          ]
        },
        "Ownable.transferOwnership": {
          "91": [
            1998,
            2071
          ],
          "92": [
            2081,
            2109
          ]
        }
      },
      "14": {
        "Allowlist._verifySignature": {
          "121": [
            3876,
            3989
          ],
          "122": [
            4059,
            4118
          ],
          "123": [
            4545,
            4595
          ],
          "124": [
            4641,
            4670
          ]
        },
        "Allowlist.getAllowlistOwner": {
          "2": [
            2240,
            2261
          ]
        },
        "Allowlist.verifySignature": {
          "81": [
            2604,
            2638
          ]
        },
        "Allowlist.verifySigner": {
          "84": [
            5068,
            5113
          ]
        }
      },
      "15": {},
      "36": {
        "IsValidWithDate.extendExpiry": {
          "70": [
            1028,
            1077
          ],
          "71": [
            1131,
            1159
          ]
        },
        "IsValidWithDate.getExpiryDate": {
          "1": [
            1452,
            1483
          ]
        },
        "IsValidWithDate.getTimeLeft": {
          "82": [
            2342,
            2350
          ],
          "83": [
            2453,
            2500
          ]
        },
        "IsValidWithDate.isValid": {
          "5": [
            1794,
            1842
          ]
        }
      },
      "37": {
        "Soulbound._getBaseURI": {
          "74": [
            7553,
            7605
          ],
          "75": [
            7648,
            7666
          ]
        },
        "Soulbound._setBaseURI": {
          "119": [
            7144,
            7198
          ],
          "120": [
            7238,
            7256
          ]
        },
        "Soulbound.burnSoulboundToken": {
          "125": [
            6556,
            6609
          ],
          "126": [
            6745,
            6759
          ],
          "127": [
            6816,
            6851
          ]
        },
        "Soulbound.isMinted": {
          "0": [
            5339,
            5366
          ]
        },
        "Soulbound.issue": {
          "109": [
            2400,
            2443
          ],
          "110": [
            2483,
            2494
          ]
        },
        "Soulbound.issuerOf": {
          "93": [
            4471,
            4524
          ],
          "94": [
            4573,
            4622
          ],
          "95": [
            4683,
            4746
          ],
          "96": [
            4795,
            4815
          ]
        },
        "Soulbound.mintSoulboundToken": {
          "128": [
            5808,
            5858
          ],
          "129": [
            5990,
            6045
          ],
          "130": [
            6160,
            6188
          ],
          "131": [
            6244,
            6269
          ]
        },
        "Soulbound.revoke": {
          "98": [
            3460,
            3509
          ],
          "99": [
            3572,
            3637
          ],
          "100": [
            3680,
            3708
          ],
          "101": [
            3748,
            3759
          ]
        }
      },
      "38": {
        "SoulboundCore.generateTokenURI": {
          "21": [
            6326,
            6384
          ],
          "22": [
            6444,
            6514
          ]
        },
        "SoulboundCore.issueWithSignature": {
          "76": [
            3050,
            3102
          ],
          "77": [
            3329,
            3382
          ],
          "78": [
            3501,
            3565
          ],
          "79": [
            3664,
            3694
          ],
          "80": [
            3756,
            3794
          ]
        },
        "SoulboundCore.revokeWithSignature": {
          "13": [
            4447,
            4503
          ],
          "14": [
            4730,
            4783
          ],
          "15": [
            4902,
            4966
          ],
          "16": [
            5065,
            5098
          ],
          "17": [
            5161,
            5194
          ]
        },
        "SoulboundCore.setBaseURI": {
          "56": [
            5711,
            5732
          ]
        },
        "SoulboundCore.toString": {
          "102": [
            6959,
            6969
          ],
          "103": [
            7075,
            7083
          ],
          "104": [
            7097,
            7107
          ],
          "105": [
            7209,
            7220
          ],
          "106": [
            7234,
            7290
          ],
          "107": [
            7304,
            7315
          ],
          "108": [
            7335,
            7356
          ]
        }
      },
      "39": {
        "SoulboundRedeemable.calculateTax": {
          "111": [
            15646,
            15654
          ],
          "112": [
            15731,
            15772
          ]
        },
        "SoulboundRedeemable.getIndividualTokenPrice": {
          "6": [
            3062,
            3086
          ]
        },
        "SoulboundRedeemable.getPriceLimit": {
          "4": [
            3351,
            3375
          ]
        },
        "SoulboundRedeemable.mintPendingRedeemableToken": {
          "62": [
            4982,
            5033
          ],
          "63": [
            5096,
            5146
          ],
          "64": [
            5215,
            5276
          ],
          "65": [
            5354,
            5414
          ],
          "66": [
            5480,
            5503
          ],
          "67": [
            5577,
            5607
          ],
          "68": [
            5671,
            5710
          ],
          "69": [
            5755,
            5763
          ]
        },
        "SoulboundRedeemable.payToReceiveToken": {
          "23": [
            6316,
            6373
          ],
          "24": [
            6443,
            6504
          ],
          "25": [
            6573,
            6625
          ],
          "26": [
            6747,
            6853
          ],
          "27": [
            6928,
            6997
          ],
          "28": [
            7084,
            7148
          ],
          "29": [
            7401,
            7433
          ],
          "30": [
            7501,
            7537
          ],
          "31": [
            7716,
            7752
          ],
          "32": [
            7801,
            7813
          ],
          "33": [
            7866,
            7892
          ],
          "34": [
            7951,
            7975
          ],
          "35": [
            8031,
            8063
          ]
        },
        "SoulboundRedeemable.redeemMintedToken": {
          "36": [
            10868,
            10931
          ],
          "37": [
            10987,
            11049
          ],
          "38": [
            11117,
            11167
          ],
          "39": [
            11248,
            11306
          ],
          "40": [
            11364,
            11410
          ],
          "41": [
            11556,
            11618
          ],
          "42": [
            11807,
            11833
          ],
          "43": [
            11885,
            11921
          ],
          "44": [
            11985,
            12024
          ],
          "45": [
            12076,
            12116
          ]
        },
        "SoulboundRedeemable.redeemMintedTokenWithSignature": {
          "58": [
            14116,
            14178
          ],
          "59": [
            14218,
            14273
          ]
        },
        "SoulboundRedeemable.redeemPendingToken": {
          "87": [
            8819,
            8882
          ],
          "88": [
            8938,
            8997
          ],
          "89": [
            9065,
            9117
          ],
          "90": [
            9198,
            9304
          ]
        },
        "SoulboundRedeemable.redeemPendingTokenWithSignature": {
          "60": [
            13038,
            13100
          ],
          "61": [
            13140,
            13196
          ]
        },
        "SoulboundRedeemable.setPrice": {
          "8": [
            3883,
            3945
          ],
          "9": [
            3983,
            4002
          ]
        },
        "SoulboundRedeemable.withdraw": {
          "48": [
            14749,
            14807
          ],
          "49": [
            14901,
            15013
          ],
          "50": [
            15084,
            15123
          ],
          "51": [
            15177,
            15193
          ]
        }
      },
      "40": {
        "SoulboundWithSignature.ownerIssueWithSignature": {
          "85": [
            1897,
            1948
          ],
          "86": [
            1997,
            2051
          ]
        },
        "SoulboundWithSignature.ownerRevokeWithSignature": {
          "18": [
            3338,
            3346
          ],
          "19": [
            3427,
            3458
          ],
          "20": [
            3519,
            3558
          ]
        }
      },
      "41": {
        "ERC165.supportsInterface": {
          "11": [
            1750,
            1797
          ]
        },
        "ERC4973._burn": {
          "113": [
            6510,
            6531
          ],
          "114": [
            6541,
            6564
          ],
          "115": [
            6574,
            6600
          ],
          "116": [
            6611,
            6638
          ]
        },
        "ERC4973._exists": {
          "97": [
            6005,
            6042
          ]
        },
        "ERC4973._mint": {
          "132": [
            6193,
            6243
          ],
          "133": [
            6253,
            6271
          ],
          "134": [
            6281,
            6302
          ],
          "135": [
            6312,
            6337
          ],
          "136": [
            6347,
            6371
          ],
          "137": [
            6381,
            6395
          ]
        },
        "ERC4973.balanceOf": {
          "53": [
            5549,
            5659
          ],
          "54": [
            5669,
            5692
          ]
        },
        "ERC4973.burn": {
          "46": [
            5308,
            5377
          ],
          "47": [
            5387,
            5401
          ]
        },
        "ERC4973.name": {
          "12": [
            4861,
            4873
          ]
        },
        "ERC4973.ownerOf": {
          "52": [
            5829,
            5889
          ]
        },
        "ERC4973.supportsInterface": {
          "10": [
            4593,
            4769
          ]
        },
        "ERC4973.symbol": {
          "57": [
            4967,
            4981
          ]
        },
        "ERC4973.tokenURI": {
          "72": [
            5136,
            5194
          ],
          "73": [
            5204,
            5230
          ]
        }
      },
      "5": {
        "Context._msgSender": {
          "7": [
            712,
            729
          ]
        }
      }
    }
  },
  "dependencies": [
    "Allowlist",
    "OpenZeppelin/openzeppelin-contracts@4.6.0/Context",
    "ERC165",
    "ERC4973",
    "IAllowlist",
    "IERC165",
    "IERC4973",
    "IERC721Metadata",
    "IsValidWithDate",
    "OpenZeppelin/openzeppelin-contracts@4.6.0/Ownable",
    "Soulbound",
    "SoulboundCore",
    "SoulboundWithSignature"
  ],
  "deployedBytecode": "6080604052600436106101fa5760003560e01c806395d89b411161010c578063daca6f781161009a578063ed7347301161006c578063ed734730146105ef578063f2fde38b14610602578063f577a50014610622578063fad54de714610652578063fb8f198d1461066757005b8063daca6f781461056f578063e8c587631461058f578063e92b0842146105af578063ea5353c7146105cf57005b8063bd97a6ad116100de578063bd97a6ad146104da578063c3cab38a146104fa578063c87b56dd1461051a578063c9dd94c71461053a578063c9e4c54d1461054f57005b806395d89b411461048a578063983a8b941461049f578063a0b97daa146104b2578063bd131786146104c757005b806351cff8d9116101895780636e0a87461161015b5780636e0a8746146103f957806370a0823114610417578063715018a614610437578063884336511461044c5780638da5cb5b1461046c57005b806351cff8d9146103205780635899e7b2146103405780636352211e146103865780636833f200146103be57005b80631f04d135116101cd5780631f04d1351461029a578063210fa96b146102ba57806333e085c1146102da5780633d1a350e146102ed57806342966c681461030057005b8062e4768b1461020357806301ffc9a71461022357806306fdde031461025857806308c92e571461027a57005b3661020157005b005b34801561020f57600080fd5b5061020161021e366004612719565b610687565b34801561022f57600080fd5b5061024361023e366004612743565b610756565b60405190151581526020015b60405180910390f35b34801561026457600080fd5b5061026d6107a8565b60405161024f919061279d565b34801561028657600080fd5b50610201610295366004612873565b61083a565b3480156102a657600080fd5b506102016102b5366004612873565b610970565b3480156102c657600080fd5b5061026d6102d53660046128c3565b610a0c565b6102016102e8366004612719565b610a8e565b6102016102fb3660046128dc565b610da6565b34801561030c57600080fd5b5061020161031b3660046128c3565b611098565b34801561032c57600080fd5b5061020161033b36600461290f565b61110d565b34801561034c57600080fd5b5061024361035b366004612719565b6001600160a01b03919091166000908152600860209081526040808320938352929052205460ff1690565b34801561039257600080fd5b506103a66103a13660046128c3565b611263565b6040516001600160a01b03909116815260200161024f565b3480156103ca57600080fd5b506103eb6103d93660046128c3565b60009081526020819052604090205490565b60405190815260200161024f565b34801561040557600080fd5b506009546001600160a01b03166103a6565b34801561042357600080fd5b506103eb61043236600461290f565b6112c8565b34801561044357600080fd5b50610201611351565b34801561045857600080fd5b5061020161046736600461292a565b611387565b34801561047857600080fd5b506006546001600160a01b03166103a6565b34801561049657600080fd5b5061026d6113fd565b6102016104ad366004612978565b61140c565b3480156104be57600080fd5b50600e546103eb565b6102016104d5366004612978565b611504565b3480156104e657600080fd5b506102016104f53660046129f2565b6115e9565b34801561050657600080fd5b50610201610515366004612a34565b6117dd565b34801561052657600080fd5b5061026d6105353660046128c3565b611835565b34801561054657600080fd5b5061026d61192a565b34801561055b57600080fd5b5061020161056a366004612a56565b611987565b34801561057b57600080fd5b5061024361058a366004612ade565b611a94565b34801561059b57600080fd5b506103eb6105aa3660046128c3565b611aa7565b3480156105bb57600080fd5b506102436105ca366004612b0f565b611ae4565b3480156105db57600080fd5b506102016105ea366004612a56565b611b78565b6102016105fd3660046128dc565b611bf7565b34801561060e57600080fd5b5061020161061d36600461290f565b611da3565b34801561062e57600080fd5b5061024361063d3660046128c3565b60009081526020819052604090205442111590565b34801561065e57600080fd5b50600f546103eb565b34801561067357600080fd5b506103a6610682366004612719565b611e3b565b6006546001600160a01b031633146106ba5760405162461bcd60e51b81526004016106b190612b66565b60405180910390fd5b816106cd6009546001600160a01b031690565b6001600160a01b0316816001600160a01b0316146106fd5760405162461bcd60e51b81526004016106b190612b9b565b600e5482111561074f5760405162461bcd60e51b815260206004820152601860248201527f507269636520686967686572207468616e206c696d69742e000000000000000060448201526064016106b1565b50600f5550565b60006001600160e01b03198216635b5e139f60e01b148061078757506001600160e01b03198216635164cf4760e01b145b806107a257506301ffc9a760e01b6001600160e01b03198316145b92915050565b6060600180546107b790612bc9565b80601f01602080910402602001604051908101604052809291908181526020018280546107e390612bc9565b80156108305780601f1061080557610100808354040283529160200191610830565b820191906000526020600020905b81548152906001019060200180831161081357829003601f168201915b5050505050905090565b61084381611f4f565b61088f5760405162461bcd60e51b815260206004820152601b60248201527f5265766f6b65206f6620696e6578697374656e7420746f6b656e2e000000000060448201526064016106b1565b81516041146108db5760405162461bcd60e51b8152602060048201526018602482015277092dcecc2d8d2c840e6d2cedcc2e8eae4ca40d8cadccee8d60431b60448201526064016106b1565b6108e58383611a94565b61092d5760405162461bcd60e51b81526020600482015260196024820152782430b9b4103737ba1039b4b3b732b210313c9037bbb732b91760391b60448201526064016106b1565b61093f61093982611263565b82611f6c565b5060405181907ff947bf2266afede98f27ad2312db8b2a17921852307f979b6f14a2b41fa774bc90600090a2505050565b6006546001600160a01b0316331461099a5760405162461bcd60e51b81526004016106b190612b66565b600b54156109bc57600b80549060006109b283612c19565b91905055506109fc565b60405162461bcd60e51b81526020600482015260156024820152742637bbb2b9ba103634b6b4ba103932b0b1b432b21760591b60448201526064016106b1565b610a0783838361083a565b505050565b6060610a1661192a565b51600003610a565760405162461bcd60e51b815260206004820152600d60248201526c456d707479206261736555524960981b60448201526064016106b1565b610a5e61192a565b610a6783612034565b604051602001610a78929190612c30565b6040516020818303038152906040529050919050565b6006546001600160a01b03163314610ab85760405162461bcd60e51b81526004016106b190612b66565b60135460ff1615610ac857600080fd5b6013805460ff191660011790556001600160a01b038216610afb5760405162461bcd60e51b81526004016106b190612c5f565b610b0481611f4f565b15610b515760405162461bcd60e51b815260206004820152601f60248201527f4d696e74206f6620616c7265616479206578697374696e6720746f6b656e2e0060448201526064016106b1565b60008181526010602052604090205460ff16610ba95760405162461bcd60e51b815260206004820152601760248201527620b63932b0b23c903932b1b2b4bb32b2103a37b5b2b71760491b60448201526064016106b1565b6000818152601160205260409020546001600160a01b03838116911614610c0a5760405162461bcd60e51b81526020600482015260156024820152742737ba103832b73234b733903932b1b2b4bb32b91760591b60448201526064016106b1565b600081815260208190526040902054421115610c795760405162461bcd60e51b815260206004820152602860248201527f526563656976616c206f66206578706972656420746f6b656e2c20726564656560448201526736903a37b5b2b71760c11b60648201526084016106b1565b600f54341015610ccb5760405162461bcd60e51b815260206004820152601c60248201527f5072696365206c6f776572207468616e20746f6b656e20636f73742e0000000060448201526064016106b1565b6000600f54341115610d1f57600f54610ce49034612c8e565b6040519091506001600160a01b0384169082156108fc029083906000818181858888f19350505050158015610d1d573d6000803e3d6000fd5b505b6000610d2a83610a0c565b9050610d3784848361213d565b50600c8054906000610d4883612ca5565b9190505550600f54600d6000828254610d619190612cbe565b909155505050600091825250601060209081526040808320805460ff19908116909155601190925290912080546001600160a01b031916905560138054909116905550565b6006546001600160a01b03163314610dd05760405162461bcd60e51b81526004016106b190612b66565b60135460ff1615610de057600080fd5b6013805460ff191660011790556001600160a01b038316610e435760405162461bcd60e51b815260206004820152601b60248201527f526564656d7074696f6e20746f207a65726f20616464726573732e000000000060448201526064016106b1565b610e4c82611f4f565b610ea25760405162461bcd60e51b815260206004820152602160248201527f526564656d7074696f6e206f66206e6f6e2d6578697374696e6720746f6b656e6044820152601760f91b60648201526084016106b1565b60008281526010602052604090205460ff1615610ef85760405162461bcd60e51b81526020600482015260146024820152732a37b5b2b71039ba34b636103832b73234b7339760611b60448201526064016106b1565b826001600160a01b0316610f0b83611263565b6001600160a01b031614610f545760405162461bcd60e51b815260206004820152601060248201526f2737ba103a37b5b2b71037bbb732b91760811b60448201526064016106b1565b6000828152602081905260409020544211610fa45760405162461bcd60e51b815260206004820152601060248201526f2a37b5b2b7103ab732bc3834b932b21760811b60448201526064016106b1565b6000610fb1601254612154565b9050803410156110035760405162461bcd60e51b815260206004820181905260248201527f5072696365206c6f776572207468616e20726564656d7074696f6e207461782e60448201526064016106b1565b60008115611050576110158234612c8e565b6040519091506001600160a01b0386169082156108fc029083906000818181858888f1935050505015801561104e573d6000803e3d6000fd5b505b61105a84846117dd565b604051839085907f6f73b7b8d37df32ea60a45eadc8fc3d2d716d705ee099bd506817482ce84731690600090a350506013805460ff19169055505050565b6110a181611263565b6001600160a01b0316336001600160a01b0316146111015760405162461bcd60e51b815260206004820152601a60248201527f6275726e3a2073656e646572206d757374206265206f776e657200000000000060448201526064016106b1565b61110a81612190565b50565b6006546001600160a01b031633146111375760405162461bcd60e51b81526004016106b190612b66565b8061114a6009546001600160a01b031690565b6001600160a01b0316816001600160a01b03161461117a5760405162461bcd60e51b81526004016106b190612b9b565b6001600160a01b0382166111d05760405162461bcd60e51b815260206004820152601860248201527f53656e64696e6720746f207a65726f20616464726573732e000000000000000060448201526064016106b1565b600d544710156112225760405162461bcd60e51b815260206004820152601c60248201527f526576656e756520213d20436f6e74726163742062616c616e63652e0000000060448201526064016106b1565b600d546040516001600160a01b0384169180156108fc02916000818181858888f19350505050158015611259573d6000803e3d6000fd5b50506000600d5550565b6000818152600360205260408120546001600160a01b0316806107a25760405162461bcd60e51b815260206004820152601c60248201527f6f776e65724f663a20746f6b656e20646f65736e27742065786973740000000060448201526064016106b1565b60006001600160a01b0382166113355760405162461bcd60e51b815260206004820152602c60248201527f62616c616e63654f663a2061646472657373207a65726f206973206e6f74206160448201526b103b30b634b21037bbb732b960a11b60648201526084016106b1565b506001600160a01b031660009081526005602052604090205490565b6006546001600160a01b0316331461137b5760405162461bcd60e51b81526004016106b190612b66565b6113856000612237565b565b6006546001600160a01b031633146113b15760405162461bcd60e51b81526004016106b190612b66565b816113c46009546001600160a01b031690565b6001600160a01b0316816001600160a01b0316146113f45760405162461bcd60e51b81526004016106b190612b9b565b610a0782612289565b6060600280546107b790612bc9565b6006546001600160a01b031633146114365760405162461bcd60e51b81526004016106b190612b66565b856114496009546001600160a01b031690565b6001600160a01b0316816001600160a01b0316146114795760405162461bcd60e51b81526004016106b190612b9b565b60135460ff161561148957600080fd5b6013805460ff191660011790556114a08383611a94565b6114e65760405162461bcd60e51b81526020600482015260176024820152762430b9b4103737ba1039b4b3b732b210313c903cb7ba9760491b60448201526064016106b1565b6114f1868686610da6565b50506013805460ff191690555050505050565b6006546001600160a01b0316331461152e5760405162461bcd60e51b81526004016106b190612b66565b856115416009546001600160a01b031690565b6001600160a01b0316816001600160a01b0316146115715760405162461bcd60e51b81526004016106b190612b9b565b60135460ff161561158157600080fd5b6013805460ff191660011790556115988383611a94565b6115de5760405162461bcd60e51b81526020600482015260176024820152762430b9b4103737ba1039b4b3b732b210313c903cb7ba9760491b60448201526064016106b1565b6114f1868686611bf7565b6006546001600160a01b031633146116135760405162461bcd60e51b81526004016106b190612b66565b836116266009546001600160a01b031690565b6001600160a01b0316816001600160a01b0316146116565760405162461bcd60e51b81526004016106b190612b9b565b600a54600b541061169e5760405162461bcd60e51b815260206004820152601260248201527124b9b9bab29021b0b8102932b0b1b432b21760711b60448201526064016106b1565b6001600160a01b0384166116c45760405162461bcd60e51b81526004016106b190612c5f565b6116cd83611f4f565b1561171a5760405162461bcd60e51b815260206004820152601f60248201527f4d696e74206f6620616c7265616479206578697374696e6720746f6b656e2e0060448201526064016106b1565b60008381526010602052604090205460ff16156117795760405162461bcd60e51b815260206004820152601e60248201527f4d696e74206f6620616c72656164792070656e64696e6720746f6b656e2e000060448201526064016106b1565b6000838152601060209081526040808320805460ff191660011790556011909152902080546001600160a01b0386166001600160a01b03199091161790556117c183836117dd565b600b80549060006117d183612ca5565b91905055505050505050565b6117e78142612cbe565b600083815260208181526040918290209290925580518481529182018390527f41a73beb1018a8b63e0f451a8a4f483806142cf14be45b1a58a23776a1e9b4bc910160405180910390a15050565b606061184082611f4f565b61188c5760405162461bcd60e51b815260206004820152601d60248201527f746f6b656e5552493a20746f6b656e20646f65736e277420657869737400000060448201526064016106b1565b600082815260046020526040902080546118a590612bc9565b80601f01602080910402602001604051908101604052809291908181526020018280546118d190612bc9565b801561191e5780601f106118f35761010080835404028352916020019161191e565b820191906000526020600020905b81548152906001019060200180831161190157829003601f168201915b50505050509050919050565b60606007805461193990612bc9565b905060000361197a5760405162461bcd60e51b815260206004820152600d60248201526c456d707479206261736555524960981b60448201526064016106b1565b600780546107b790612bc9565b6001600160a01b0385166119ad5760405162461bcd60e51b81526004016106b190612c5f565b82516041146119f95760405162461bcd60e51b8152602060048201526018602482015277092dcecc2d8d2c840e6d2cedcc2e8eae4ca40d8cadccee8d60431b60448201526064016106b1565b611a038484611a94565b611a4b5760405162461bcd60e51b81526020600482015260196024820152782430b9b4103737ba1039b4b3b732b210313c9037bbb732b91760391b60448201526064016106b1565b611a5685838361213d565b5060405182906001600160a01b038716907f79af0e59b31823dd289ceebabc4d63d25f35926b8548e3a084a500c9d4e1855690600090a35050505050565b6000611aa083836122db565b9392505050565b600081815260208190526040812054421115611ac557506000919050565b6000828152602081905260409020546107a2904290612c8e565b919050565b602081810151604080840151606080860151835160008082528188018087528a905291821a81860181905292810186905260808101849052935190959293919260019260a080820193601f1981019281900390910190855afa158015611b4e573d6000803e3d6000fd5b505050602060405103516001600160a01b0316876001600160a01b03161493505050509392505050565b6006546001600160a01b03163314611ba25760405162461bcd60e51b81526004016106b190612b66565b600a54600b5410611bea5760405162461bcd60e51b815260206004820152601260248201527124b9b9bab29021b0b8102932b0b1b432b21760711b60448201526064016106b1565b6117c18585858585611987565b6006546001600160a01b03163314611c215760405162461bcd60e51b81526004016106b190612b66565b60135460ff1615611c3157600080fd5b6013805460ff191660011790556001600160a01b038316611c945760405162461bcd60e51b815260206004820152601b60248201527f526564656d7074696f6e20746f207a65726f20616464726573732e000000000060448201526064016106b1565b611c9d82611f4f565b15611cea5760405162461bcd60e51b815260206004820152601d60248201527f526564656d7074696f6e206f66206578697374696e6720746f6b656e2e00000060448201526064016106b1565b60008281526010602052604090205460ff16611d425760405162461bcd60e51b815260206004820152601760248201527620b63932b0b23c903932b1b2b4bb32b2103a37b5b2b71760491b60448201526064016106b1565b6000828152601160205260409020546001600160a01b03848116911614610f545760405162461bcd60e51b81526020600482015260156024820152742737ba103832b73234b733903932b1b2b4bb32b91760591b60448201526064016106b1565b6006546001600160a01b03163314611dcd5760405162461bcd60e51b81526004016106b190612b66565b6001600160a01b038116611e325760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b60648201526084016106b1565b61110a81612237565b60006001600160a01b038316611e935760405162461bcd60e51b815260206004820152601760248201527f517565727920666f72207a65726f20616464726573732e00000000000000000060448201526064016106b1565b611e9c82611f4f565b611ede5760405162461bcd60e51b81526020600482015260136024820152722737b716b2bc34b9ba32b73a103a37b5b2b71760691b60448201526064016106b1565b826001600160a01b0316611ef183611263565b6001600160a01b031614611f475760405162461bcd60e51b815260206004820152601a60248201527f546f6b656e206e6f74206f776e6564206279206164647265737300000000000060448201526064016106b1565b503092915050565b6000908152600360205260409020546001600160a01b0316151590565b6000611f7782611f4f565b611fb95760405162461bcd60e51b81526020600482015260136024820152722737b716b2bc34b9ba32b73a103a37b5b2b71760691b60448201526064016106b1565b826001600160a01b0316611fcc83611263565b6001600160a01b0316146120225760405162461bcd60e51b815260206004820152601a60248201527f546f6b656e206e6f74206f776e6564206279206164647265737300000000000060448201526064016106b1565b61202b82612481565b50600192915050565b60608160000361205b5750506040805180820190915260018152600360fc1b602082015290565b8160005b8115612085578061206f81612ca5565b915061207e9050600a83612cec565b915061205f565b60008167ffffffffffffffff8111156120a0576120a06127d0565b6040519080825280601f01601f1916602001820160405280156120ca576020820181803683370190505b5090505b8415612135576120df600183612c8e565b91506120ec600a86612d00565b6120f7906030612cbe565b60f81b81838151811061210c5761210c612d14565b60200101906001600160f81b031916908160001a90535061212e600a86612cec565b94506120ce565b949350505050565b600061214a848484612517565b5060019392505050565b600064746a528800600d54101561216a57600091505b6103e8600d548361217b9190612d2a565b61218690600a612d2a565b6107a29190612cec565b600061219b82611263565b6001600160a01b038116600090815260056020526040812080549293506001929091906121c9908490612c8e565b9091555050600082815260036020908152604080832080546001600160a01b0319169055600490915281206121fd916126b4565b60405182906001600160a01b038316907fec9ab91322523c899ede7830ec9bfc992b5981cdcc27b91162fb23de5791117b90600090a35050565b600680546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b80516000036122cb5760405162461bcd60e51b815260206004820152600e60248201526d092dcecc2d8d2c840d8cadccee8d60931b60448201526064016106b1565b60076122d78282612d97565b5050565b6006546000906001600160a01b031633146123085760405162461bcd60e51b81526004016106b190612b66565b6006546001600160a01b031633146123765760405162461bcd60e51b815260206004820152602b60248201527f4552433732313a3a2043616c6c20746f20636f6e7472616374206d616465206260448201526a3c903737b716b7bbb732b960a91b60648201526084016106b1565b81516041146123c75760405162461bcd60e51b815260206004820152601e60248201527f4572723a3a20496e76616c6964207369676e6174757265206c656e677468000060448201526064016106b1565b602082810151604080850151606080870151835160008082529681018086528a905290861a938101849052908101849052608081018290529293909260019060a0016020604051602081039080840390855afa15801561242b573d6000803e3d6000fd5b5050604051601f198101516009549093506001600160a01b038085169116149150819089907f7e4fe2a2a805a357593fdbdde58c02f6a53d8b4960744cd31a98697fc11c2e3690600090a3979650505050505050565b61248a81611f4f565b6124d65760405162461bcd60e51b815260206004820152601860248201527f4275726e206f6620696e6578697374656e7420746f6b656e000000000000000060448201526064016106b1565b60006124e182611263565b90506124ec82612190565b6001600160a01b0316600090815260086020908152604080832093835292905220805460ff19169055565b6001600160a01b03831661253d5760405162461bcd60e51b81526004016106b190612c5f565b80516000036125805760405162461bcd60e51b815260206004820152600f60248201526e22b6b83a3c903a37b5b2b72aa9249760891b60448201526064016106b1565b61258b8383836125bd565b50506001600160a01b03909116600090815260086020908152604080832093835292905220805460ff19166001179055565b60006125c883611f4f565b1561260c5760405162461bcd60e51b81526020600482015260146024820152736d696e743a20746f6b656e49442065786973747360601b60448201526064016106b1565b6001600160a01b0384166000908152600560205260408120805460019290612635908490612cbe565b9091555050600083815260036020908152604080832080546001600160a01b0319166001600160a01b038916179055600490915290206126758382612d97565b5060405183906001600160a01b038616907fe9274a84b19e9428826de6bae8c48329354f8f0e73f771b97cae2d9dccd45a2790600090a3509092915050565b5080546126c090612bc9565b6000825580601f106126d0575050565b601f01602090049060005260206000209081019061110a91905b808211156126fe57600081556001016126ea565b5090565b80356001600160a01b0381168114611adf57600080fd5b6000806040838503121561272c57600080fd5b61273583612702565b946020939093013593505050565b60006020828403121561275557600080fd5b81356001600160e01b031981168114611aa057600080fd5b60005b83811015612788578181015183820152602001612770565b83811115612797576000848401525b50505050565b60208152600082518060208401526127bc81604085016020870161276d565b601f01601f19169190910160400192915050565b634e487b7160e01b600052604160045260246000fd5b600082601f8301126127f757600080fd5b813567ffffffffffffffff80821115612812576128126127d0565b604051601f8301601f19908116603f0116810190828211818310171561283a5761283a6127d0565b8160405283815286602085880101111561285357600080fd5b836020870160208301376000602085830101528094505050505092915050565b60008060006060848603121561288857600080fd5b83359250602084013567ffffffffffffffff8111156128a657600080fd5b6128b2868287016127e6565b925050604084013590509250925092565b6000602082840312156128d557600080fd5b5035919050565b6000806000606084860312156128f157600080fd5b6128fa84612702565b95602085013595506040909401359392505050565b60006020828403121561292157600080fd5b611aa082612702565b6000806040838503121561293d57600080fd5b61294683612702565b9150602083013567ffffffffffffffff81111561296257600080fd5b61296e858286016127e6565b9150509250929050565b60008060008060008060c0878903121561299157600080fd5b61299a87612702565b95506129a860208801612702565b945060408701359350606087013592506080870135915060a087013567ffffffffffffffff8111156129d957600080fd5b6129e589828a016127e6565b9150509295509295509295565b60008060008060808587031215612a0857600080fd5b612a1185612702565b9350612a1f60208601612702565b93969395505050506040820135916060013590565b60008060408385031215612a4757600080fd5b50508035926020909101359150565b600080600080600060a08688031215612a6e57600080fd5b612a7786612702565b945060208601359350604086013567ffffffffffffffff80821115612a9b57600080fd5b612aa789838a016127e6565b9450606088013593506080880135915080821115612ac457600080fd5b50612ad1888289016127e6565b9150509295509295909350565b60008060408385031215612af157600080fd5b82359150602083013567ffffffffffffffff81111561296257600080fd5b600080600060608486031215612b2457600080fd5b612b2d84612702565b925060208401359150604084013567ffffffffffffffff811115612b5057600080fd5b612b5c868287016127e6565b9150509250925092565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b6020808252601490820152734e6f7420416c6c6f776c697374204f776e65722160601b604082015260600190565b600181811c90821680612bdd57607f821691505b602082108103612bfd57634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052601160045260246000fd5b600081612c2857612c28612c03565b506000190190565b60008351612c4281846020880161276d565b835190830190612c5681836020880161276d565b01949350505050565b60208082526015908201527426b4b73a103a37903d32b9379030b2323932b9b99760591b604082015260600190565b600082821015612ca057612ca0612c03565b500390565b600060018201612cb757612cb7612c03565b5060010190565b60008219821115612cd157612cd1612c03565b500190565b634e487b7160e01b600052601260045260246000fd5b600082612cfb57612cfb612cd6565b500490565b600082612d0f57612d0f612cd6565b500690565b634e487b7160e01b600052603260045260246000fd5b6000816000190483118215151615612d4457612d44612c03565b500290565b601f821115610a0757600081815260208120601f850160051c81016020861015612d705750805b601f850160051c820191505b81811015612d8f57828155600101612d7c565b505050505050565b815167ffffffffffffffff811115612db157612db16127d0565b612dc581612dbf8454612bc9565b84612d49565b602080601f831160018114612dfa5760008415612de25750858301515b600019600386901b1c1916600185901b178555612d8f565b600085815260208120601f198616915b82811015612e2957888601518255948401946001909101908401612e0a565b5085821015612e475787850151600019600388901b60f8161c191681555b5050505050600190811b0190555056fea2646970667358221220d84be31b55b9957eedec9ac513cd6049f6f334a1ebc344347050ca815bd44d6864736f6c634300080f0033",
  "deployedSourceMap": "826:14955:39:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3672:337;;;;;;;;;;-1:-1:-1;3672:337:39;;;;;:::i;:::-;;:::i;4448:328:41:-;;;;;;;;;;-1:-1:-1;4448:328:41;;;;;:::i;:::-;;:::i;:::-;;;907:14:43;;900:22;882:41;;870:2;855:18;4448:328:41;;;;;;;;4782:98;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;4274:927:38:-;;;;;;;;;;-1:-1:-1;4274:927:38;;;;;:::i;:::-;;:::i;2850:715:40:-;;;;;;;;;;-1:-1:-1;2850:715:40;;;;;:::i;:::-;;:::i;6139:382:38:-;;;;;;;;;;-1:-1:-1;6139:382:38;;;;;:::i;:::-;;:::i;6103:1967:39:-;;;;;;:::i;:::-;;:::i;10643:1480::-;;;;;;:::i;:::-;;:::i;5243:165:41:-;;;;;;;;;;-1:-1:-1;5243:165:41;;;;;:::i;:::-;;:::i;14559:641:39:-;;;;;;;;;;-1:-1:-1;14559:641:39;;;;;:::i;:::-;;:::i;5225:148:37:-;;;;;;;;;;-1:-1:-1;5225:148:37;;;;;:::i;:::-;-1:-1:-1;;;;;5346:10:37;;;;5319:4;5346:10;;;:5;:10;;;;;;;;:20;;;;;;;;;;;5225:148;5705:213:41;;;;;;;;;;-1:-1:-1;5705:213:41;;;;;:::i;:::-;;:::i;:::-;;;-1:-1:-1;;;;;3768:32:43;;;3750:51;;3738:2;3723:18;5705:213:41;3604:203:43;1372:118:36;;;;;;;;;;-1:-1:-1;1372:118:36;;;;;:::i;:::-;1433:7;1459:24;;;;;;;;;;;;1372:118;;;;3958:25:43;;;3946:2;3931:18;1372:118:36;3812:177:43;2171:97:14;;;;;;;;;;-1:-1:-1;2247:14:14;;-1:-1:-1;;;;;2247:14:14;2171:97;;5414:285:41;;;;;;;;;;-1:-1:-1;5414:285:41;;;;;:::i;:::-;;:::i;1668:101:0:-;;;;;;;;;;;;;:::i;5539:200:38:-;;;;;;;;;;-1:-1:-1;5539:200:38;;;;;:::i;:::-;;:::i;1036:85:0:-;;;;;;;;;;-1:-1:-1;1108:6:0;;-1:-1:-1;;;;;1108:6:0;1036:85;;4886:102:41;;;;;;;;;;;;;:::i;13771:509:39:-;;;;;;:::i;:::-;;:::i;3274:108::-;;;;;;;;;;-1:-1:-1;3365:10:39;;3274:108;;12692:511;;;;;;:::i;:::-;;:::i;4548:1222::-;;;;;;;;;;-1:-1:-1;4548:1222:39;;;;;:::i;:::-;;:::i;917:249:36:-;;;;;;;;;;-1:-1:-1;917:249:36;;;;;:::i;:::-;;:::i;4994:243:41:-;;;;;;;;;;-1:-1:-1;4994:243:41;;;;;:::i;:::-;;:::i;7425:248:37:-;;;;;;;;;;;;;:::i;2807:994:38:-;;;;;;;;;;-1:-1:-1;2807:994:38;;;;;:::i;:::-;;:::i;2495:150:14:-;;;;;;;;;;-1:-1:-1;2495:150:14;;;;;:::i;:::-;;:::i;2069:448:36:-;;;;;;;;;;-1:-1:-1;2069:448:36;;;;;:::i;:::-;;:::i;4852:268:14:-;;;;;;;;;;-1:-1:-1;4852:268:14;;;;;:::i;:::-;;:::i;1465:666:40:-;;;;;;;;;;-1:-1:-1;1465:666:40;;;;;:::i;:::-;;:::i;8593:1528:39:-;;;;;;:::i;:::-;;:::i;1918:198:0:-;;;;;;;;;;-1:-1:-1;1918:198:0;;;;;:::i;:::-;;:::i;1723:126:36:-;;;;;;;;;;-1:-1:-1;1723:126:36;;;;;:::i;:::-;1778:4;1459:24;;;;;;;;;;;1801:15;:41;;;1723:126;2947:146:39;;;;;;;;;;-1:-1:-1;3076:10:39;;2947:146;;4302:520:37;;;;;;;;;;-1:-1:-1;4302:520:37;;;;;:::i;:::-;;:::i;3672:337:39:-;1108:6:0;;-1:-1:-1;;;;;1108:6:0;719:10:5;1248:23:0;1240:68;;;;-1:-1:-1;;;1240:68:0;;;;;;;:::i;:::-;;;;;;;;;3782:6:39::1;1704:19:38;2247:14:14::0;;-1:-1:-1;;;;;2247:14:14;;2171:97;1704:19:38::1;-1:-1:-1::0;;;;;1693:30:38::1;:7;-1:-1:-1::0;;;;;1693:30:38::1;;1685:63;;;;-1:-1:-1::0;;;1685:63:38::1;;;;;;;:::i;:::-;3365:10:39::0;;3891:6:::2;:25;;3883:62;;;::::0;-1:-1:-1;;;3883:62:39;;8258:2:43;3883:62:39::2;::::0;::::2;8240:21:43::0;8297:2;8277:18;;;8270:30;8336:26;8316:18;;;8309:54;8380:18;;3883:62:39::2;8056:348:43::0;3883:62:39::2;-1:-1:-1::0;3983:10:39::2;:19:::0;-1:-1:-1;3672:337:39:o;4448:328:41:-;4573:4;-1:-1:-1;;;;;;4612:48:41;;-1:-1:-1;;;4612:48:41;;:105;;-1:-1:-1;;;;;;;4676:41:41;;-1:-1:-1;;;4676:41:41;4612:105;:157;;;-1:-1:-1;;;;;;;;;;1757:40:41;;;4733:36;4593:176;4448:328;-1:-1:-1;;4448:328:41:o;4782:98::-;4836:13;4868:5;4861:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4782:98;:::o;4274:927:38:-;4455:16;4463:7;4455;:16::i;:::-;4447:56;;;;-1:-1:-1;;;4447:56:38;;8996:2:43;4447:56:38;;;8978:21:43;9035:2;9015:18;;;9008:30;9074:29;9054:18;;;9047:57;9121:18;;4447:56:38;8794:351:43;4447:56:38;4738:3;:10;4752:2;4738:16;4730:53;;;;-1:-1:-1;;;4730:53:38;;9694:2:43;4730:53:38;;;9676:21:43;9733:2;9713:18;;;9706:30;-1:-1:-1;;;9752:18:43;;;9745:54;9816:18;;4730:53:38;9492:348:43;4730:53:38;4910:26;4926:4;4932:3;4910:15;:26::i;:::-;4902:64;;;;-1:-1:-1;;;4902:64:38;;10047:2:43;4902:64:38;;;10029:21:43;10086:2;10066:18;;;10059:30;-1:-1:-1;;;10105:18:43;;;10098:55;10170:18;;4902:64:38;9845:349:43;4902:64:38;5065:33;5072:16;5080:7;5072;:16::i;:::-;5090:7;5065:6;:33::i;:::-;-1:-1:-1;5166:28:38;;5186:7;;5166:28;;;;;4274:927;;;:::o;2850:715:40:-;1108:6:0;;-1:-1:-1;;;;;1108:6:0;719:10:5;1248:23:0;1240:68;;;;-1:-1:-1;;;1240:68:0;;;;;;;:::i;:::-;3272:6:40::1;::::0;:11;3268:201:::1;;3338:6;:8:::0;;;:6:::1;:8;::::0;::::1;:::i;:::-;;;;;;3268:201;;;3427:31;::::0;-1:-1:-1;;;3427:31:40;;10674:2:43;3427:31:40::1;::::0;::::1;10656:21:43::0;10713:2;10693:18;;;10686:30;-1:-1:-1;;;10732:18:43;;;10725:51;10793:18;;3427:31:40::1;10472:345:43::0;3268:201:40::1;3519:39;3539:4;3545:3;3550:7;3519:19;:39::i;:::-;2850:715:::0;;;:::o;6139:382:38:-;6227:23;6340:13;:11;:13::i;:::-;6334:27;6365:1;6334:32;6326:58;;;;-1:-1:-1;;;6326:58:38;;11024:2:43;6326:58:38;;;11006:21:43;11063:2;11043:18;;;11036:30;-1:-1:-1;;;11082:18:43;;;11075:43;11135:18;;6326:58:38;10822:337:43;6326:58:38;6480:13;:11;:13::i;:::-;6495:17;6504:7;6495:8;:17::i;:::-;6463:50;;;;;;;;;:::i;:::-;;;;;;;;;;;;;6444:70;;6139:382;;;:::o;6103:1967:39:-;1108:6:0;;-1:-1:-1;;;;;1108:6:0;719:10:5;1248:23:0;1240:68;;;;-1:-1:-1;;;1240:68:0;;;;;;;:::i;:::-;2688:6:39::1;::::0;::::1;;2687:7;2679:16;;;::::0;::::1;;2705:6;:13:::0;;-1:-1:-1;;2705:13:39::1;2714:4;2705:13;::::0;;-1:-1:-1;;;;;6324:23:39;::::2;6316:57;;;;-1:-1:-1::0;;;6316:57:39::2;;;;;;;:::i;:::-;6452:16;6460:7;6452;:16::i;:::-;6451:17;6443:61;;;::::0;-1:-1:-1;;;6443:61:39;;12191:2:43;6443:61:39::2;::::0;::::2;12173:21:43::0;12230:2;12210:18;;;12203:30;12269:33;12249:18;;;12242:61;12320:18;;6443:61:39::2;11989:355:43::0;6443:61:39::2;6581:16;::::0;;;:7:::2;:16;::::0;;;;;::::2;;6573:52;;;::::0;-1:-1:-1;;;6573:52:39;;12551:2:43;6573:52:39::2;::::0;::::2;12533:21:43::0;12590:2;12570:18;;;12563:30;-1:-1:-1;;;12609:18:43;;;12602:53;12672:18;;6573:52:39::2;12349:347:43::0;6573:52:39::2;6768:25;::::0;;;:16:::2;:25;::::0;;;;;-1:-1:-1;;;;;6768:38:39;;::::2;:25:::0;::::2;:38;6747:106;;;::::0;-1:-1:-1;;;6747:106:39;;12903:2:43;6747:106:39::2;::::0;::::2;12885:21:43::0;12942:2;12922:18;;;12915:30;-1:-1:-1;;;12961:18:43;;;12954:51;13022:18;;6747:106:39::2;12701:345:43::0;6747:106:39::2;1778:4:36::0;1459:24;;;;;;;;;;;1801:15;:41;;6928:69:39::2;;;::::0;-1:-1:-1;;;6928:69:39;;13253:2:43;6928:69:39::2;::::0;::::2;13235:21:43::0;13292:2;13272:18;;;13265:30;13331:34;13311:18;;;13304:62;-1:-1:-1;;;13382:18:43;;;13375:38;13430:19;;6928:69:39::2;13051:404:43::0;6928:69:39::2;7105:10;;7092:9;:23;;7084:64;;;::::0;-1:-1:-1;;;7084:64:39;;13662:2:43;7084:64:39::2;::::0;::::2;13644:21:43::0;13701:2;13681:18;;;13674:30;13740;13720:18;;;13713:58;13788:18;;7084:64:39::2;13460:352:43::0;7084:64:39::2;7195:15;7312:10;;7300:9;:22;7296:252;;;7423:10;::::0;7411:22:::2;::::0;:9:::2;:22;:::i;:::-;7501:36;::::0;7401:32;;-1:-1:-1;;;;;;7501:27:39;::::2;::::0;:36;::::2;;;::::0;7401:32;;7501:36:::2;::::0;;;7401:32;7501:27;:36;::::2;;;;;;;;;;;;;::::0;::::2;;;;;;7296:252;7594:23;7620:25;7637:7;7620:16;:25::i;:::-;7594:51;;7716:36;7722:9;7733:7;7742:9;7716:5;:36::i;:::-;-1:-1:-1::0;7801:10:39::2;:12:::0;;;:10:::2;:12;::::0;::::2;:::i;:::-;;;;;;7882:10;;7866:12;;:26;;;;;;;:::i;:::-;::::0;;;-1:-1:-1;;;7970:5:39::2;7951:16:::0;;;-1:-1:-1;7951:7:39::2;:16;::::0;;;;;;;:24;;-1:-1:-1;;7951:24:39;;::::2;::::0;;;8038:16:::2;:25:::0;;;;;;8031:32;;-1:-1:-1;;;;;;8031:32:39::2;::::0;;2739:6:::1;:14:::0;;;;::::1;::::0;;-1:-1:-1;6103:1967:39:o;10643:1480::-;1108:6:0;;-1:-1:-1;;;;;1108:6:0;719:10:5;1248:23:0;1240:68;;;;-1:-1:-1;;;1240:68:0;;;;;;;:::i;:::-;2688:6:39::1;::::0;::::1;;2687:7;2679:16;;;::::0;::::1;;2705:6;:13:::0;;-1:-1:-1;;2705:13:39::1;2714:4;2705:13;::::0;;-1:-1:-1;;;;;10876:23:39;::::2;10868:63;;;::::0;-1:-1:-1;;;10868:63:39;;14422:2:43;10868:63:39::2;::::0;::::2;14404:21:43::0;14461:2;14441:18;;;14434:30;14500:29;14480:18;;;14473:57;14547:18;;10868:63:39::2;14220:351:43::0;10868:63:39::2;10995:16;11003:7;10995;:16::i;:::-;10987:62;;;::::0;-1:-1:-1;;;10987:62:39;;14778:2:43;10987:62:39::2;::::0;::::2;14760:21:43::0;14817:2;14797:18;;;14790:30;14856:34;14836:18;;;14829:62;-1:-1:-1;;;14907:18:43;;;14900:31;14948:19;;10987:62:39::2;14576:397:43::0;10987:62:39::2;11126:16;::::0;;;:7:::2;:16;::::0;;;;;::::2;;11125:17;11117:50;;;::::0;-1:-1:-1;;;11117:50:39;;15180:2:43;11117:50:39::2;::::0;::::2;15162:21:43::0;15219:2;15199:18;;;15192:30;-1:-1:-1;;;15238:18:43;;;15231:50;15298:18;;11117:50:39::2;14978:344:43::0;11117:50:39::2;11276:9;-1:-1:-1::0;;;;;11256:29:39::2;:16;11264:7;11256;:16::i;:::-;-1:-1:-1::0;;;;;11256:29:39::2;;11248:58;;;::::0;-1:-1:-1;;;11248:58:39;;15529:2:43;11248:58:39::2;::::0;::::2;15511:21:43::0;15568:2;15548:18;;;15541:30;-1:-1:-1;;;15587:18:43;;;15580:46;15643:18;;11248:58:39::2;15327:340:43::0;11248:58:39::2;1778:4:36::0;1459:24;;;;;;;;;;;1801:15;:41;11364:46:39::2;;;::::0;-1:-1:-1;;;11364:46:39;;15874:2:43;11364:46:39::2;::::0;::::2;15856:21:43::0;15913:2;15893:18;;;15886:30;-1:-1:-1;;;15932:18:43;;;15925:46;15988:18;;11364:46:39::2;15672:340:43::0;11364:46:39::2;11452:12;11467:17;11480:3;;11467:12;:17::i;:::-;11452:32;;11577:4;11564:9;:17;;11556:62;;;::::0;-1:-1:-1;;;11556:62:39;;16219:2:43;11556:62:39::2;::::0;::::2;16201:21:43::0;;;16238:18;;;16231:30;16297:34;16277:18;;;16270:62;16349:18;;11556:62:39::2;16017:356:43::0;11556:62:39::2;11663:15;11731:9:::0;;11727:205:::2;;11817:16;11829:4:::0;11817:9:::2;:16;:::i;:::-;11885:36;::::0;11807:26;;-1:-1:-1;;;;;;11885:27:39;::::2;::::0;:36;::::2;;;::::0;11807:26;;11885:36:::2;::::0;;;11807:26;11885:27;:36;::::2;;;;;;;;;;;;;::::0;::::2;;;;;;11727:205;11985:39;11998:7;12007:16;11985:12;:39::i;:::-;12081:35;::::0;12099:16;;12090:7;;12081:35:::2;::::0;;;::::2;-1:-1:-1::0;;2739:6:39::1;:14:::0;;-1:-1:-1;;2739:14:39::1;::::0;;-1:-1:-1;;;10643:1480:39:o;5243:165:41:-;5330:16;5338:7;5330;:16::i;:::-;-1:-1:-1;;;;;5316:30:41;:10;-1:-1:-1;;;;;5316:30:41;;5308:69;;;;-1:-1:-1;;;5308:69:41;;16580:2:43;5308:69:41;;;16562:21:43;16619:2;16599:18;;;16592:30;16658:28;16638:18;;;16631:56;16704:18;;5308:69:41;16378:350:43;5308:69:41;5387:14;5393:7;5387:5;:14::i;:::-;5243:165;:::o;14559:641:39:-;1108:6:0;;-1:-1:-1;;;;;1108:6:0;719:10:5;1248:23:0;1240:68;;;;-1:-1:-1;;;1240:68:0;;;;;;;:::i;:::-;14654:7:39::1;1704:19:38;2247:14:14::0;;-1:-1:-1;;;;;2247:14:14;;2171:97;1704:19:38::1;-1:-1:-1::0;;;;;1693:30:38::1;:7;-1:-1:-1::0;;;;;1693:30:38::1;;1685:63;;;;-1:-1:-1::0;;;1685:63:38::1;;;;;;;:::i;:::-;-1:-1:-1::0;;;;;14757:21:39;::::2;14749:58;;;::::0;-1:-1:-1;;;14749:58:39;;16935:2:43;14749:58:39::2;::::0;::::2;16917:21:43::0;16974:2;16954:18;;;16947:30;17013:26;16993:18;;;16986:54;17057:18;;14749:58:39::2;16733:348:43::0;14749:58:39::2;14947:12;;14922:21;:37;;14901:112;;;::::0;-1:-1:-1;;;14901:112:39;;17288:2:43;14901:112:39::2;::::0;::::2;17270:21:43::0;17327:2;17307:18;;;17300:30;17366;17346:18;;;17339:58;17414:18;;14901:112:39::2;17086:352:43::0;14901:112:39::2;15110:12;::::0;15084:39:::2;::::0;-1:-1:-1;;;;;15084:25:39;::::2;::::0;:39;::::2;;;::::0;::::2;::::0;;;15110:12;15084:25;:39;::::2;;;;;;;;;;;;;::::0;::::2;;;;;-1:-1:-1::0;;15192:1:39::2;15177:12;:16:::0;-1:-1:-1;14559:641:39:o;5705:213:41:-;5768:7;5803:16;;;:7;:16;;;;;;-1:-1:-1;;;;;5803:16:41;;5829:60;;;;-1:-1:-1;;;5829:60:41;;17645:2:43;5829:60:41;;;17627:21:43;17684:2;17664:18;;;17657:30;17723;17703:18;;;17696:58;17771:18;;5829:60:41;17443:352:43;5414:285:41;5526:7;-1:-1:-1;;;;;5570:19:41;;5549:110;;;;-1:-1:-1;;;5549:110:41;;18002:2:43;5549:110:41;;;17984:21:43;18041:2;18021:18;;;18014:30;18080:34;18060:18;;;18053:62;-1:-1:-1;;;18131:18:43;;;18124:42;18183:19;;5549:110:41;17800:408:43;5549:110:41;-1:-1:-1;;;;;;5676:16:41;;;;;:9;:16;;;;;;;5414:285::o;1668:101:0:-;1108:6;;-1:-1:-1;;;;;1108:6:0;719:10:5;1248:23:0;1240:68;;;;-1:-1:-1;;;1240:68:0;;;;;;;:::i;:::-;1732:30:::1;1759:1;1732:18;:30::i;:::-;1668:101::o:0;5539:200:38:-;1108:6:0;;-1:-1:-1;;;;;1108:6:0;719:10:5;1248:23:0;1240:68;;;;-1:-1:-1;;;1240:68:0;;;;;;;:::i;:::-;5659:6:38::1;1704:19;2247:14:14::0;;-1:-1:-1;;;;;2247:14:14;;2171:97;1704:19:38::1;-1:-1:-1::0;;;;;1693:30:38::1;:7;-1:-1:-1::0;;;;;1693:30:38::1;;1685:63;;;;-1:-1:-1::0;;;1685:63:38::1;;;;;;;:::i;:::-;5711:21:::2;5723:8;5711:11;:21::i;4886:102:41:-:0;4942:13;4974:7;4967:14;;;;;:::i;13771:509:39:-;1108:6:0;;-1:-1:-1;;;;;1108:6:0;719:10:5;1248:23:0;1240:68;;;;-1:-1:-1;;;1240:68:0;;;;;;;:::i;:::-;14020:7:39::1;1704:19:38;2247:14:14::0;;-1:-1:-1;;;;;2247:14:14;;2171:97;1704:19:38::1;-1:-1:-1::0;;;;;1693:30:38::1;:7;-1:-1:-1::0;;;;;1693:30:38::1;;1685:63;;;;-1:-1:-1::0;;;1685:63:38::1;;;;;;;:::i;:::-;2688:6:39::2;::::0;::::2;;2687:7;2679:16;;;::::0;::::2;;2705:6;:13:::0;;-1:-1:-1;;2705:13:39::2;2714:4;2705:13;::::0;;14124:26:::3;14140:4:::0;14146:3;14124:15:::3;:26::i;:::-;14116:62;;;::::0;-1:-1:-1;;;14116:62:39;;18415:2:43;14116:62:39::3;::::0;::::3;18397:21:43::0;18454:2;18434:18;;;18427:30;-1:-1:-1;;;18473:18:43;;;18466:53;18536:18;;14116:62:39::3;18213:347:43::0;14116:62:39::3;14218:55;14236:9;14247:7;14256:16;14218:17;:55::i;:::-;-1:-1:-1::0;;2739:6:39::2;:14:::0;;-1:-1:-1;;2739:14:39::2;::::0;;-1:-1:-1;;;;;13771:509:39:o;12692:511::-;1108:6:0;;-1:-1:-1;;;;;1108:6:0;719:10:5;1248:23:0;1240:68;;;;-1:-1:-1;;;1240:68:0;;;;;;;:::i;:::-;12942:7:39::1;1704:19:38;2247:14:14::0;;-1:-1:-1;;;;;2247:14:14;;2171:97;1704:19:38::1;-1:-1:-1::0;;;;;1693:30:38::1;:7;-1:-1:-1::0;;;;;1693:30:38::1;;1685:63;;;;-1:-1:-1::0;;;1685:63:38::1;;;;;;;:::i;:::-;2688:6:39::2;::::0;::::2;;2687:7;2679:16;;;::::0;::::2;;2705:6;:13:::0;;-1:-1:-1;;2705:13:39::2;2714:4;2705:13;::::0;;13046:26:::3;13062:4:::0;13068:3;13046:15:::3;:26::i;:::-;13038:62;;;::::0;-1:-1:-1;;;13038:62:39;;18415:2:43;13038:62:39::3;::::0;::::3;18397:21:43::0;18454:2;18434:18;;;18427:30;-1:-1:-1;;;18473:18:43;;;18466:53;18536:18;;13038:62:39::3;18213:347:43::0;13038:62:39::3;13140:56;13159:9;13170:7;13179:16;13140:18;:56::i;4548:1222::-:0;1108:6:0;;-1:-1:-1;;;;;1108:6:0;719:10:5;1248:23:0;1240:68;;;;-1:-1:-1;;;1240:68:0;;;;;;;:::i;:::-;4727:4:39::1;1704:19:38;2247:14:14::0;;-1:-1:-1;;;;;2247:14:14;;2171:97;1704:19:38::1;-1:-1:-1::0;;;;;1693:30:38::1;:7;-1:-1:-1::0;;;;;1693:30:38::1;;1685:63;;;;-1:-1:-1::0;;;1685:63:38::1;;;;;;;:::i;:::-;4999:11:39::2;;4990:6;;:20;4982:51;;;::::0;-1:-1:-1;;;4982:51:39;;18767:2:43;4982:51:39::2;::::0;::::2;18749:21:43::0;18806:2;18786:18;;;18779:30;-1:-1:-1;;;18825:18:43;;;18818:48;18883:18;;4982:51:39::2;18565:342:43::0;4982:51:39::2;-1:-1:-1::0;;;;;5104:16:39;::::2;5096:50;;;;-1:-1:-1::0;;;5096:50:39::2;;;;;;;:::i;:::-;5224:16;5232:7;5224;:16::i;:::-;5223:17;5215:61;;;::::0;-1:-1:-1;;;5215:61:39;;12191:2:43;5215:61:39::2;::::0;::::2;12173:21:43::0;12230:2;12210:18;;;12203:30;12269:33;12249:18;;;12242:61;12320:18;;5215:61:39::2;11989:355:43::0;5215:61:39::2;5363:16;::::0;;;:7:::2;:16;::::0;;;;;::::2;;5362:17;5354:60;;;::::0;-1:-1:-1;;;5354:60:39;;19114:2:43;5354:60:39::2;::::0;::::2;19096:21:43::0;19153:2;19133:18;;;19126:30;19192:32;19172:18;;;19165:60;19242:18;;5354:60:39::2;18912:354:43::0;5354:60:39::2;5480:16;::::0;;;:7:::2;:16;::::0;;;;;;;:23;;-1:-1:-1;;5480:23:39::2;5499:4;5480:23;::::0;;5577:16:::2;:25:::0;;;;;:30;;-1:-1:-1;;;;;5577:30:39;::::2;-1:-1:-1::0;;;;;;5577:30:39;;::::2;;::::0;;5671:39:::2;5488:7:::0;5693:16;5671:12:::2;:39::i;:::-;5755:6;:8:::0;;;:6:::2;:8;::::0;::::2;:::i;:::-;;;;;;1318:1:0::1;4548:1222:39::0;;;;:::o;917:249:36:-;1055:22;1073:4;1055:15;:22;:::i;:::-;1028:15;:24;;;;;;;;;;;;:49;;;;1136:23;;19445:25:43;;;19486:18;;;19479:34;;;1136:23:36;;19418:18:43;1136:23:36;;;;;;;917:249;;:::o;4994:243:41:-;5107:13;5144:16;5152:7;5144;:16::i;:::-;5136:58;;;;-1:-1:-1;;;5136:58:41;;19726:2:43;5136:58:41;;;19708:21:43;19765:2;19745:18;;;19738:30;19804:31;19784:18;;;19777:59;19853:18;;5136:58:41;19524:353:43;5136:58:41;5211:19;;;;:10;:19;;;;;5204:26;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4994:243;;;:::o;7425:248:37:-;7469:22;7567:7;7561:21;;;;;:::i;:::-;;;7586:1;7561:26;7553:52;;;;-1:-1:-1;;;7553:52:37;;11024:2:43;7553:52:37;;;11006:21:43;11063:2;11043:18;;;11036:30;-1:-1:-1;;;11082:18:43;;;11075:43;11135:18;;7553:52:37;10822:337:43;7553:52:37;7659:7;7648:18;;;;;:::i;2807:994:38:-;-1:-1:-1;;;;;3058:18:38;;3050:52;;;;-1:-1:-1;;;3050:52:38;;;;;;;:::i;:::-;3337:3;:10;3351:2;3337:16;3329:53;;;;-1:-1:-1;;;3329:53:38;;9694:2:43;3329:53:38;;;9676:21:43;9733:2;9713:18;;;9706:30;-1:-1:-1;;;9752:18:43;;;9745:54;9816:18;;3329:53:38;9492:348:43;3329:53:38;3509:26;3525:4;3531:3;3509:15;:26::i;:::-;3501:64;;;;-1:-1:-1;;;3501:64:38;;10047:2:43;3501:64:38;;;10029:21:43;10086:2;10066:18;;;10059:30;-1:-1:-1;;;10105:18:43;;;10098:55;10170:18;;3501:64:38;9845:349:43;3501:64:38;3664:30;3670:4;3676:7;3685:8;3664:5;:30::i;:::-;-1:-1:-1;3761:33:38;;3786:7;;-1:-1:-1;;;;;3761:33:38;;;;;;;;2807:994;;;;;:::o;2495:150:14:-;2584:4;2611:27;2628:4;2634:3;2611:16;:27::i;:::-;2604:34;2495:150;-1:-1:-1;;;2495:150:14:o;2069:448:36:-;2128:7;1459:24;;;;;;;;;;;2255:15;:40;2251:260;;;-1:-1:-1;2349:1:36;;2069:448;-1:-1:-1;2069:448:36:o;2251:260::-;1433:7;1459:24;;;;;;;;;;;2460:40;;2485:15;;2460:40;:::i;2251:260::-;2069:448;;;:::o;4852:268:14:-;6067:2;6058:12;;;6052:19;6142:2;6133:12;;;6127:19;6254:2;6245:12;;;6239:19;5087:25;;4982:4;5087:25;;;;;;;;;20109::43;;;6231:28:14;;;20150:18:43;;;20143:45;;;20204:18;;;20197:34;;;20247:18;;;20240:34;;;5087:25:14;;4982:4;;6127:19;;6231:28;;5087:25;;20081:19:43;;;;;-1:-1:-1;;5087:25:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;5076:36:14;:7;-1:-1:-1;;;;;5076:36:14;;5068:45;;;;;4852:268;;;;;:::o;1465:666:40:-;1108:6:0;;-1:-1:-1;;;;;1108:6:0;719:10:5;1248:23:0;1240:68;;;;-1:-1:-1;;;1240:68:0;;;;;;;:::i;:::-;1914:11:40::1;;1905:6;;:20;1897:51;;;::::0;-1:-1:-1;;;1897:51:40;;18767:2:43;1897:51:40::1;::::0;::::1;18749:21:43::0;18806:2;18786:18;;;18779:30;-1:-1:-1;;;18825:18:43;;;18818:48;18883:18;;1897:51:40::1;18565:342:43::0;1897:51:40::1;1997:54;2016:4;2022;2028:3;2033:7;2042:8;1997:18;:54::i;8593:1528:39:-:0;1108:6:0;;-1:-1:-1;;;;;1108:6:0;719:10:5;1248:23:0;1240:68;;;;-1:-1:-1;;;1240:68:0;;;;;;;:::i;:::-;2688:6:39::1;::::0;::::1;;2687:7;2679:16;;;::::0;::::1;;2705:6;:13:::0;;-1:-1:-1;;2705:13:39::1;2714:4;2705:13;::::0;;-1:-1:-1;;;;;8827:23:39;::::2;8819:63;;;::::0;-1:-1:-1;;;8819:63:39;;14422:2:43;8819:63:39::2;::::0;::::2;14404:21:43::0;14461:2;14441:18;;;14434:30;14500:29;14480:18;;;14473:57;14547:18;;8819:63:39::2;14220:351:43::0;8819:63:39::2;8947:16;8955:7;8947;:16::i;:::-;8946:17;8938:59;;;::::0;-1:-1:-1;;;8938:59:39;;20487:2:43;8938:59:39::2;::::0;::::2;20469:21:43::0;20526:2;20506:18;;;20499:30;20565:31;20545:18;;;20538:59;20614:18;;8938:59:39::2;20285:353:43::0;8938:59:39::2;9073:16;::::0;;;:7:::2;:16;::::0;;;;;::::2;;9065:52;;;::::0;-1:-1:-1;;;9065:52:39;;12551:2:43;9065:52:39::2;::::0;::::2;12533:21:43::0;12590:2;12570:18;;;12563:30;-1:-1:-1;;;12609:18:43;;;12602:53;12672:18;;9065:52:39::2;12349:347:43::0;9065:52:39::2;9219:25;::::0;;;:16:::2;:25;::::0;;;;;-1:-1:-1;;;;;9219:38:39;;::::2;:25:::0;::::2;:38;9198:106;;;::::0;-1:-1:-1;;;9198:106:39;;12903:2:43;9198:106:39::2;::::0;::::2;12885:21:43::0;12942:2;12922:18;;;12915:30;-1:-1:-1;;;12961:18:43;;;12954:51;13022:18;;9198:106:39::2;12701:345:43::0;1918:198:0;1108:6;;-1:-1:-1;;;;;1108:6:0;719:10:5;1248:23:0;1240:68;;;;-1:-1:-1;;;1240:68:0;;;;;;;:::i;:::-;-1:-1:-1;;;;;2006:22:0;::::1;1998:73;;;::::0;-1:-1:-1;;;1998:73:0;;20845:2:43;1998:73:0::1;::::0;::::1;20827:21:43::0;20884:2;20864:18;;;20857:30;20923:34;20903:18;;;20896:62;-1:-1:-1;;;20974:18:43;;;20967:36;21020:19;;1998:73:0::1;20643:402:43::0;1998:73:0::1;2081:28;2100:8;2081:18;:28::i;4302:520:37:-:0;4396:7;-1:-1:-1;;;;;4479:17:37;;4471:53;;;;-1:-1:-1;;;4471:53:37;;21252:2:43;4471:53:37;;;21234:21:43;21291:2;21271:18;;;21264:30;21330:25;21310:18;;;21303:53;21373:18;;4471:53:37;21050:347:43;4471:53:37;4581:17;4589:8;4581:7;:17::i;:::-;4573:49;;;;-1:-1:-1;;;4573:49:37;;21604:2:43;4573:49:37;;;21586:21:43;21643:2;21623:18;;;21616:30;-1:-1:-1;;;21662:18:43;;;21655:49;21721:18;;4573:49:37;21402:343:43;4573:49:37;4712:3;-1:-1:-1;;;;;4691:24:37;:17;4699:8;4691:7;:17::i;:::-;-1:-1:-1;;;;;4691:24:37;;4683:63;;;;-1:-1:-1;;;4683:63:37;;21952:2:43;4683:63:37;;;21934:21:43;21991:2;21971:18;;;21964:30;22030:28;22010:18;;;22003:56;22076:18;;4683:63:37;21750:350:43;4683:63:37;-1:-1:-1;4810:4:37;4302:520;;;;:::o;5924:125:41:-;5989:4;6012:16;;;:7;:16;;;;;;-1:-1:-1;;;;;6012:16:41;:30;;;5924:125::o;3338:428:37:-;3405:4;3468:17;3476:8;3468:7;:17::i;:::-;3460:49;;;;-1:-1:-1;;;3460:49:37;;21604:2:43;3460:49:37;;;21586:21:43;21643:2;21623:18;;;21616:30;-1:-1:-1;;;21662:18:43;;;21655:49;21721:18;;3460:49:37;21402:343:43;3460:49:37;3601:5;-1:-1:-1;;;;;3580:26:37;:17;3588:8;3580:7;:17::i;:::-;-1:-1:-1;;;;;3580:26:37;;3572:65;;;;-1:-1:-1;;;3572:65:37;;21952:2:43;3572:65:37;;;21934:21:43;21991:2;21971:18;;;21964:30;22030:28;22010:18;;;22003:56;22076:18;;3572:65:37;21750:350:43;3572:65:37;3680:28;3699:8;3680:18;:28::i;:::-;-1:-1:-1;3755:4:37;3338:428;;;;:::o;6660:703:38:-;6716:13;6933:5;6942:1;6933:10;6929:51;;-1:-1:-1;;6959:10:38;;;;;;;;;;;;-1:-1:-1;;;6959:10:38;;;;;6660:703::o;6929:51::-;7004:5;6989:12;7043:75;7050:9;;7043:75;;7075:8;;;;:::i;:::-;;-1:-1:-1;7097:10:38;;-1:-1:-1;7105:2:38;7097:10;;:::i;:::-;;;7043:75;;;7127:19;7159:6;7149:17;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;7149:17:38;;7127:39;;7176:150;7183:10;;7176:150;;7209:11;7219:1;7209:11;;:::i;:::-;;-1:-1:-1;7277:10:38;7285:2;7277:5;:10;:::i;:::-;7264:24;;:2;:24;:::i;:::-;7251:39;;7234:6;7241;7234:14;;;;;;;;:::i;:::-;;;;:56;-1:-1:-1;;;;;7234:56:38;;;;;;;;-1:-1:-1;7304:11:38;7313:2;7304:11;;:::i;:::-;;;7176:150;;;7349:6;6660:703;-1:-1:-1;;;;6660:703:38:o;2196:305:37:-;2314:4;2400:43;2419:3;2424:8;2434;2400:18;:43::i;:::-;-1:-1:-1;2490:4:37;2196:305;;;;;:::o;15359:420:39:-;15417:13;15587:8;15572:12;;:23;15547:118;;;15653:1;15646:8;;15547:118;15768:4;15747:12;;15740:4;:19;;;;:::i;:::-;:24;;15762:2;15740:24;:::i;:::-;15739:33;;;;:::i;6408:237:41:-;6467:13;6483:16;6491:7;6483;:16::i;:::-;-1:-1:-1;;;;;6510:16:41;;;;;;:9;:16;;;;;:21;;6467:32;;-1:-1:-1;6530:1:41;;6510:16;;;:21;;6530:1;;6510:21;:::i;:::-;;;;-1:-1:-1;;6548:16:41;;;;:7;:16;;;;;;;;6541:23;;-1:-1:-1;;;;;;6541:23:41;;;6581:10;:19;;;;;6574:26;;;:::i;:::-;6616:22;;6630:7;;-1:-1:-1;;;;;6616:22:41;;;;;;;;6457:188;6408:237;:::o;2270:187:0:-;2362:6;;;-1:-1:-1;;;;;2378:17:0;;;-1:-1:-1;;;;;;2378:17:0;;;;;;;2410:40;;2362:6;;;2378:17;2362:6;;2410:40;;2343:16;;2410:40;2333:124;2270:187;:::o;7029:234:37:-;7158:8;7152:22;7178:1;7152:27;7144:54;;;;-1:-1:-1;;;7144:54:37;;22986:2:43;7144:54:37;;;22968:21:43;23025:2;23005:18;;;22998:30;-1:-1:-1;;;23044:18:43;;;23037:44;23098:18;;7144:54:37;22784:338:43;7144:54:37;7238:7;:18;7248:8;7238:7;:18;:::i;:::-;;7029:234;:::o;3622:1055:14:-;1108:6:0;;3732:4:14;;-1:-1:-1;;;;;1108:6:0;719:10:5;1248:23:0;1240:68;;;;-1:-1:-1;;;1240:68:0;;;;;;;:::i;:::-;1108:6;;-1:-1:-1;;;;;1108:6:0;719:10:5;3897:23:14::1;3876:113;;;::::0;-1:-1:-1;;;3876:113:14;;25533:2:43;3876:113:14::1;::::0;::::1;25515:21:43::0;25572:2;25552:18;;;25545:30;25611:34;25591:18;;;25584:62;-1:-1:-1;;;25662:18:43;;;25655:41;25713:19;;3876:113:14::1;25331:407:43::0;3876:113:14::1;4067:3;:10;4081:2;4067:16;4059:59;;;::::0;-1:-1:-1;;;4059:59:14;;25945:2:43;4059:59:14::1;::::0;::::1;25927:21:43::0;25984:2;25964:18;;;25957:30;26023:32;26003:18;;;25996:60;26073:18;;4059:59:14::1;25743:354:43::0;4059:59:14::1;6067:2:::0;6058:12;;;6052:19;6142:2;6133:12;;;6127:19;6254:2;6245:12;;;6239:19;4331:24;;4197:9:::1;4331:24:::0;;;;;::::1;::::0;;;20109:25:43;;;6231:28:14;;;20150:18:43;;;20143:45;;;20204:18;;;20197:34;;;20247:18;;;20240:34;;;6052:19:14;;6127;;4331:24:::1;::::0;20081:19:43;;4331:24:14::1;;;;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;-1:-1:-1::0;;4331:24:14::1;::::0;-1:-1:-1;;4331:24:14;;;4469:14:::1;::::0;4331:24;;-1:-1:-1;;;;;;4459:24:14;;::::1;4469:14:::0;::::1;4459:24;::::0;-1:-1:-1;4459:24:14;;4566:4;;4550:45:::1;::::0;4428:27:::1;::::0;4550:45:::1;4648:22:::0;3622:1055;-1:-1:-1;;;;;;;3622:1055:14:o;6437:421:37:-;6564:16;6572:7;6564;:16::i;:::-;6556:53;;;;-1:-1:-1;;;6556:53:37;;26304:2:43;6556:53:37;;;26286:21:43;26343:2;26323:18;;;26316:30;26382:26;26362:18;;;26355:54;26426:18;;6556:53:37;26102:348:43;6556:53:37;6664:19;6686:16;6694:7;6686;:16::i;:::-;6664:38;;6745:14;6751:7;6745:5;:14::i;:::-;-1:-1:-1;;;;;6816:18:37;6846:5;6816:18;;;:5;:18;;;;;;;;:27;;;;;;;:35;;-1:-1:-1;;6816:35:37;;;6437:421::o;5609:667::-;-1:-1:-1;;;;;5816:16:37;;5808:50;;;;-1:-1:-1;;;5808:50:37;;;;;;;:::i;:::-;6004:8;5998:22;6024:1;5998:27;5990:55;;;;-1:-1:-1;;;5990:55:37;;26657:2:43;5990:55:37;;;26639:21:43;26696:2;26676:18;;;26669:30;-1:-1:-1;;;26715:18:43;;;26708:45;26770:18;;5990:55:37;26455:339:43;5990:55:37;6160:28;6166:2;6170:7;6179:8;6160:5;:28::i;:::-;-1:-1:-1;;;;;;;6244:9:37;;;;;;;:5;:9;;;;;;;;:18;;;;;;;:25;;-1:-1:-1;;6244:25:37;6265:4;6244:25;;;5609:667::o;6055:347:41:-;6174:7;6202:16;6210:7;6202;:16::i;:::-;6201:17;6193:50;;;;-1:-1:-1;;;6193:50:41;;27001:2:43;6193:50:41;;;26983:21:43;27040:2;27020:18;;;27013:30;-1:-1:-1;;;27059:18:43;;;27052:50;27119:18;;6193:50:41;26799:344:43;6193:50:41;-1:-1:-1;;;;;6253:13:41;;;;;;:9;:13;;;;;:18;;6270:1;;6253:13;:18;;6270:1;;6253:18;:::i;:::-;;;;-1:-1:-1;;6281:16:41;;;;:7;:16;;;;;;;;:21;;-1:-1:-1;;;;;;6281:21:41;-1:-1:-1;;;;;6281:21:41;;;;;6312:10;:19;;;;;:25;6334:3;6312:19;:25;:::i;:::-;-1:-1:-1;6352:19:41;;6363:7;;-1:-1:-1;;;;;6352:19:41;;;;;;;;-1:-1:-1;6388:7:41;;6055:347;-1:-1:-1;;6055:347:41:o;-1:-1:-1:-;;;;;;;:::i;:::-;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;14:173:43:-;82:20;;-1:-1:-1;;;;;131:31:43;;121:42;;111:70;;177:1;174;167:12;192:254;260:6;268;321:2;309:9;300:7;296:23;292:32;289:52;;;337:1;334;327:12;289:52;360:29;379:9;360:29;:::i;:::-;350:39;436:2;421:18;;;;408:32;;-1:-1:-1;;;192:254:43:o;451:286::-;509:6;562:2;550:9;541:7;537:23;533:32;530:52;;;578:1;575;568:12;530:52;604:23;;-1:-1:-1;;;;;;656:32:43;;646:43;;636:71;;703:1;700;693:12;934:258;1006:1;1016:113;1030:6;1027:1;1024:13;1016:113;;;1106:11;;;1100:18;1087:11;;;1080:39;1052:2;1045:10;1016:113;;;1147:6;1144:1;1141:13;1138:48;;;1182:1;1173:6;1168:3;1164:16;1157:27;1138:48;;934:258;;;:::o;1197:383::-;1346:2;1335:9;1328:21;1309:4;1378:6;1372:13;1421:6;1416:2;1405:9;1401:18;1394:34;1437:66;1496:6;1491:2;1480:9;1476:18;1471:2;1463:6;1459:15;1437:66;:::i;:::-;1564:2;1543:15;-1:-1:-1;;1539:29:43;1524:45;;;;1571:2;1520:54;;1197:383;-1:-1:-1;;1197:383:43:o;1585:127::-;1646:10;1641:3;1637:20;1634:1;1627:31;1677:4;1674:1;1667:15;1701:4;1698:1;1691:15;1717:718;1759:5;1812:3;1805:4;1797:6;1793:17;1789:27;1779:55;;1830:1;1827;1820:12;1779:55;1866:6;1853:20;1892:18;1929:2;1925;1922:10;1919:36;;;1935:18;;:::i;:::-;2010:2;2004:9;1978:2;2064:13;;-1:-1:-1;;2060:22:43;;;2084:2;2056:31;2052:40;2040:53;;;2108:18;;;2128:22;;;2105:46;2102:72;;;2154:18;;:::i;:::-;2194:10;2190:2;2183:22;2229:2;2221:6;2214:18;2275:3;2268:4;2263:2;2255:6;2251:15;2247:26;2244:35;2241:55;;;2292:1;2289;2282:12;2241:55;2356:2;2349:4;2341:6;2337:17;2330:4;2322:6;2318:17;2305:54;2403:1;2396:4;2391:2;2383:6;2379:15;2375:26;2368:37;2423:6;2414:15;;;;;;1717:718;;;;:::o;2440:456::-;2526:6;2534;2542;2595:2;2583:9;2574:7;2570:23;2566:32;2563:52;;;2611:1;2608;2601:12;2563:52;2647:9;2634:23;2624:33;;2708:2;2697:9;2693:18;2680:32;2735:18;2727:6;2724:30;2721:50;;;2767:1;2764;2757:12;2721:50;2790:49;2831:7;2822:6;2811:9;2807:22;2790:49;:::i;:::-;2780:59;;;2886:2;2875:9;2871:18;2858:32;2848:42;;2440:456;;;;;:::o;2901:180::-;2960:6;3013:2;3001:9;2992:7;2988:23;2984:32;2981:52;;;3029:1;3026;3019:12;2981:52;-1:-1:-1;3052:23:43;;2901:180;-1:-1:-1;2901:180:43:o;3086:322::-;3163:6;3171;3179;3232:2;3220:9;3211:7;3207:23;3203:32;3200:52;;;3248:1;3245;3238:12;3200:52;3271:29;3290:9;3271:29;:::i;:::-;3261:39;3347:2;3332:18;;3319:32;;-1:-1:-1;3398:2:43;3383:18;;;3370:32;;3086:322;-1:-1:-1;;;3086:322:43:o;3413:186::-;3472:6;3525:2;3513:9;3504:7;3500:23;3496:32;3493:52;;;3541:1;3538;3531:12;3493:52;3564:29;3583:9;3564:29;:::i;3994:395::-;4072:6;4080;4133:2;4121:9;4112:7;4108:23;4104:32;4101:52;;;4149:1;4146;4139:12;4101:52;4172:29;4191:9;4172:29;:::i;:::-;4162:39;;4252:2;4241:9;4237:18;4224:32;4279:18;4271:6;4268:30;4265:50;;;4311:1;4308;4301:12;4265:50;4334:49;4375:7;4366:6;4355:9;4351:22;4334:49;:::i;:::-;4324:59;;;3994:395;;;;;:::o;4394:675::-;4507:6;4515;4523;4531;4539;4547;4600:3;4588:9;4579:7;4575:23;4571:33;4568:53;;;4617:1;4614;4607:12;4568:53;4640:29;4659:9;4640:29;:::i;:::-;4630:39;;4688:38;4722:2;4711:9;4707:18;4688:38;:::i;:::-;4678:48;;4773:2;4762:9;4758:18;4745:32;4735:42;;4824:2;4813:9;4809:18;4796:32;4786:42;;4875:3;4864:9;4860:19;4847:33;4837:43;;4931:3;4920:9;4916:19;4903:33;4959:18;4951:6;4948:30;4945:50;;;4991:1;4988;4981:12;4945:50;5014:49;5055:7;5046:6;5035:9;5031:22;5014:49;:::i;:::-;5004:59;;;4394:675;;;;;;;;:::o;5074:397::-;5160:6;5168;5176;5184;5237:3;5225:9;5216:7;5212:23;5208:33;5205:53;;;5254:1;5251;5244:12;5205:53;5277:29;5296:9;5277:29;:::i;:::-;5267:39;;5325:38;5359:2;5348:9;5344:18;5325:38;:::i;:::-;5074:397;;5315:48;;-1:-1:-1;;;;5410:2:43;5395:18;;5382:32;;5461:2;5446:18;5433:32;;5074:397::o;5476:248::-;5544:6;5552;5605:2;5593:9;5584:7;5580:23;5576:32;5573:52;;;5621:1;5618;5611:12;5573:52;-1:-1:-1;;5644:23:43;;;5714:2;5699:18;;;5686:32;;-1:-1:-1;5476:248:43:o;5729:752::-;5843:6;5851;5859;5867;5875;5928:3;5916:9;5907:7;5903:23;5899:33;5896:53;;;5945:1;5942;5935:12;5896:53;5968:29;5987:9;5968:29;:::i;:::-;5958:39;;6044:2;6033:9;6029:18;6016:32;6006:42;;6099:2;6088:9;6084:18;6071:32;6122:18;6163:2;6155:6;6152:14;6149:34;;;6179:1;6176;6169:12;6149:34;6202:49;6243:7;6234:6;6223:9;6219:22;6202:49;:::i;:::-;6192:59;;6298:2;6287:9;6283:18;6270:32;6260:42;;6355:3;6344:9;6340:19;6327:33;6311:49;;6385:2;6375:8;6372:16;6369:36;;;6401:1;6398;6391:12;6369:36;;6424:51;6467:7;6456:8;6445:9;6441:24;6424:51;:::i;:::-;6414:61;;;5729:752;;;;;;;;:::o;6486:388::-;6563:6;6571;6624:2;6612:9;6603:7;6599:23;6595:32;6592:52;;;6640:1;6637;6630:12;6592:52;6676:9;6663:23;6653:33;;6737:2;6726:9;6722:18;6709:32;6764:18;6756:6;6753:30;6750:50;;;6796:1;6793;6786:12;6879:462;6965:6;6973;6981;7034:2;7022:9;7013:7;7009:23;7005:32;7002:52;;;7050:1;7047;7040:12;7002:52;7073:29;7092:9;7073:29;:::i;:::-;7063:39;;7149:2;7138:9;7134:18;7121:32;7111:42;;7204:2;7193:9;7189:18;7176:32;7231:18;7223:6;7220:30;7217:50;;;7263:1;7260;7253:12;7217:50;7286:49;7327:7;7318:6;7307:9;7303:22;7286:49;:::i;:::-;7276:59;;;6879:462;;;;;:::o;7346:356::-;7548:2;7530:21;;;7567:18;;;7560:30;7626:34;7621:2;7606:18;;7599:62;7693:2;7678:18;;7346:356::o;7707:344::-;7909:2;7891:21;;;7948:2;7928:18;;;7921:30;-1:-1:-1;;;7982:2:43;7967:18;;7960:50;8042:2;8027:18;;7707:344::o;8409:380::-;8488:1;8484:12;;;;8531;;;8552:61;;8606:4;8598:6;8594:17;8584:27;;8552:61;8659:2;8651:6;8648:14;8628:18;8625:38;8622:161;;8705:10;8700:3;8696:20;8693:1;8686:31;8740:4;8737:1;8730:15;8768:4;8765:1;8758:15;8622:161;;8409:380;;;:::o;10199:127::-;10260:10;10255:3;10251:20;10248:1;10241:31;10291:4;10288:1;10281:15;10315:4;10312:1;10305:15;10331:136;10370:3;10398:5;10388:39;;10407:18;;:::i;:::-;-1:-1:-1;;;10443:18:43;;10331:136::o;11164:470::-;11343:3;11381:6;11375:13;11397:53;11443:6;11438:3;11431:4;11423:6;11419:17;11397:53;:::i;:::-;11513:13;;11472:16;;;;11535:57;11513:13;11472:16;11569:4;11557:17;;11535:57;:::i;:::-;11608:20;;11164:470;-1:-1:-1;;;;11164:470:43:o;11639:345::-;11841:2;11823:21;;;11880:2;11860:18;;;11853:30;-1:-1:-1;;;11914:2:43;11899:18;;11892:51;11975:2;11960:18;;11639:345::o;13817:125::-;13857:4;13885:1;13882;13879:8;13876:34;;;13890:18;;:::i;:::-;-1:-1:-1;13927:9:43;;13817:125::o;13947:135::-;13986:3;14007:17;;;14004:43;;14027:18;;:::i;:::-;-1:-1:-1;14074:1:43;14063:13;;13947:135::o;14087:128::-;14127:3;14158:1;14154:6;14151:1;14148:13;14145:39;;;14164:18;;:::i;:::-;-1:-1:-1;14200:9:43;;14087:128::o;22105:127::-;22166:10;22161:3;22157:20;22154:1;22147:31;22197:4;22194:1;22187:15;22221:4;22218:1;22211:15;22237:120;22277:1;22303;22293:35;;22308:18;;:::i;:::-;-1:-1:-1;22342:9:43;;22237:120::o;22362:112::-;22394:1;22420;22410:35;;22425:18;;:::i;:::-;-1:-1:-1;22459:9:43;;22362:112::o;22479:127::-;22540:10;22535:3;22531:20;22528:1;22521:31;22571:4;22568:1;22561:15;22595:4;22592:1;22585:15;22611:168;22651:7;22717:1;22713;22709:6;22705:14;22702:1;22699:21;22694:1;22687:9;22680:17;22676:45;22673:71;;;22724:18;;:::i;:::-;-1:-1:-1;22764:9:43;;22611:168::o;23253:545::-;23355:2;23350:3;23347:11;23344:448;;;23391:1;23416:5;23412:2;23405:17;23461:4;23457:2;23447:19;23531:2;23519:10;23515:19;23512:1;23508:27;23502:4;23498:38;23567:4;23555:10;23552:20;23549:47;;;-1:-1:-1;23590:4:43;23549:47;23645:2;23640:3;23636:12;23633:1;23629:20;23623:4;23619:31;23609:41;;23700:82;23718:2;23711:5;23708:13;23700:82;;;23763:17;;;23744:1;23733:13;23700:82;;;23704:3;;;23253:545;;;:::o;23974:1352::-;24100:3;24094:10;24127:18;24119:6;24116:30;24113:56;;;24149:18;;:::i;:::-;24178:97;24268:6;24228:38;24260:4;24254:11;24228:38;:::i;:::-;24222:4;24178:97;:::i;:::-;24330:4;;24394:2;24383:14;;24411:1;24406:663;;;;25113:1;25130:6;25127:89;;;-1:-1:-1;25182:19:43;;;25176:26;25127:89;-1:-1:-1;;23931:1:43;23927:11;;;23923:24;23919:29;23909:40;23955:1;23951:11;;;23906:57;25229:81;;24376:944;;24406:663;23200:1;23193:14;;;23237:4;23224:18;;-1:-1:-1;;24442:20:43;;;24560:236;24574:7;24571:1;24568:14;24560:236;;;24663:19;;;24657:26;24642:42;;24755:27;;;;24723:1;24711:14;;;;24590:19;;24560:236;;;24564:3;24824:6;24815:7;24812:19;24809:201;;;24885:19;;;24879:26;-1:-1:-1;;24968:1:43;24964:14;;;24980:3;24960:24;24956:37;24952:42;24937:58;24922:74;;24809:201;-1:-1:-1;;;;;25056:1:43;25040:14;;;25036:22;25023:36;;-1:-1:-1;23974:1352:43:o",
  "language": "Solidity",
  "natspec": {
    "author": "Daccred.",
    "details": "An instance of the Soulbound token with capped supply       and tokens having their own individual expiry date.       Tokens are minted to and are pendng until receivers       pay to receive their complete token.",
    "errors": {
      "Unsigned(address)": [
        {
          "details": "Thrown when the address passed to the verify function is not signed."
        }
      ]
    },
    "events": {
      "Redeemed(uint256,uint256)": {
        "details": "Emitted when a token is redeemed."
      }
    },
    "kind": "dev",
    "methods": {
      "_getBaseURI()": {
        "details": "Returns already set baseURI if it exists.",
        "notice": "Callable by anyone.",
        "returns": {
          "_baseURI": "baseURI set."
        }
      },
      "balanceOf(address)": {
        "details": "ABTs assigned to the zero address are considered invalid, and this  function throws for queries about the zero address.",
        "notice": "Count all ABTs assigned to an owner",
        "params": {
          "owner": "An address for whom to query the balance"
        },
        "returns": {
          "_0": "The number of ABTs owned by `owner`, possibly zero"
        }
      },
      "burn(uint256)": {
        "details": "Must emit a `event Revoke` with the `address to` field pointing to  the zero address.",
        "notice": "Destroys `tokenId`. At any time, an ABT receiver must be able to  disassociate themselves from an ABT publicly through calling this  function.",
        "params": {
          "tokenId": "The identifier for an ABT"
        }
      },
      "constructor": {
        "details": "Deploy the SoulboundWithSignature with set         total supply, priceLimit and price of an individual token."
      },
      "extendExpiry(uint256,uint256)": {
        "details": "On every successful redemption or mint of token the       expiry of the token is extended by the duration passed       in the contract.       This should be called on expired tokens.",
        "notice": "This function is expected to be called by the           SoulboundRedeemable on every mint.",
        "params": {
          "time": "Length of time to extend it with.",
          "tokenId": "Token to extend its expiry."
        }
      },
      "generateTokenURI(uint256)": {
        "details": "Using the `tokenId` passed, it generates a `stringified` tokenURI,       packing the baseURI and the current tokenId.       Makes use of OpenZeppelin's uint to string function.",
        "notice": "Callable by anyone.",
        "params": {
          "tokenId": "ID of token whose tokenURI is desired."
        },
        "returns": {
          "_tokenURI": "TokenURI of the passed tokenId."
        }
      },
      "getAllowlistOwner()": {
        "details": "Return the allowlistOwner.",
        "notice": "Callable by anyone.",
        "returns": {
          "_0": "address of allowlistOwner."
        }
      },
      "getExpiryDate(uint256)": {
        "details": "Returns the expiry date of `tokenId`.",
        "notice": "Callable by anyone.",
        "params": {
          "tokenId": "Token to get its expiry."
        },
        "returns": {
          "_0": "time of expiry."
        }
      },
      "getIndividualTokenPrice()": {
        "details": "Return the price of one token, set by the deployer.",
        "notice": "Callable by anyone.",
        "returns": {
          "_tokenPrice": "Price of a single token."
        }
      },
      "getPriceLimit()": {
        "details": "Return the highest possible price for a token.",
        "notice": "Callable by anyone.",
        "returns": {
          "_priceLimit": "Highest possible price."
        }
      },
      "getTimeLeft(uint256)": {
        "details": "Returns the time left for a token to expire.",
        "notice": "Callable by anyone.",
        "params": {
          "tokenId": "Token to get its expiry."
        },
        "returns": {
          "_0": "time left till expiry."
        }
      },
      "isMinted(address,uint256)": {
        "details": "Returns true if token `_tokenId` was minted from this contract to `_to`.       `_to` must not be a 0 address.       `_tokenId` must be an existent token.",
        "notice": "Callable by anyone.",
        "params": {
          "_to": "Address to which token `_tokenId` is minted.",
          "_tokenId": "Token minted."
        },
        "returns": {
          "_0": "bool true or false."
        }
      },
      "isValid(uint256)": {
        "details": "Return true if the token is expired or false if otherwise.",
        "notice": "Callable by anyone.",
        "params": {
          "tokenId": "Token to check if expired."
        },
        "returns": {
          "_0": "bool true or false."
        }
      },
      "issueWithSignature(address,bytes32,bytes,uint256,string)": {
        "details": "Mints a particular quantity of tokens to `to`,       on the condition that the address has been       signed by the allowlistOwner off-chain.       This will emit the {MintSoulboundToken} event       from the Soulbound.sol.",
        "notice": "Callable by anyone.",
        "params": {
          "addr": "Address to mint tokens to.",
          "hash": "Hashed message by the allowlistOwner.",
          "sig": "Signature, signed by the allowlistOwner.",
          "tokenId": "Id of the tokens to mint to the `addr`.",
          "tokenURI": "URI of the token to be minted."
        }
      },
      "issuerOf(address,uint256)": {
        "details": "Since a token cannnot be minted twice.       This function returns the address that minted token `_tokenId` to `_to`,       otherwise this contract.       `_to` must not be a 0 address.       `_tokenId` must be an existent token.       Owner of _tokenId must be _to.",
        "notice": "Callable by anyone.",
        "params": {
          "_to": "Address to which token `_tokenId` is minted.",
          "_tokenId": "Token minted."
        },
        "returns": {
          "_0": "address of issuer."
        }
      },
      "mintPendingRedeemableToken(address,address,uint256,uint256)": {
        "details": "Mints a pending soulbound token to `to`.       Pending tokens are minted and the receiver pays       to receive and completely mint them.",
        "notice": "Callable by the deployer of this contract [DaccredDeployer]           and the allowlistOwner.",
        "params": {
          "_tokenExpiryDate": "Set expiry date from the deployer.",
          "from": "Allowlist owner.",
          "to": "Receiver.",
          "tokenId": "Id of token to be minted."
        }
      },
      "owner()": {
        "details": "Returns the address of the current owner."
      },
      "ownerIssueWithSignature(address,bytes32,bytes,uint256,string)": {
        "details": "Ref SoulboundCore.sol issueWithSignature       This function grants the access to only the       deployer of the contract, unlike the core       that allows the function for anyone who has a       signature signed by the allowlistOwner.       This contract can be called by the deployer of the       contract [DaccredDeployer] but is also protected       as to the allowlistOwner must be the signer of the `sig.`",
        "notice": "Callable by the deployer of this contract [DaccredDeployer].",
        "params": {
          "addr": "Address to be minted to.",
          "hash": "Hash of message signed.",
          "sig": "Signature.",
          "tokenId": "TokenId to be issued.",
          "tokenURI": "URI of token to be issued."
        }
      },
      "ownerOf(uint256)": {
        "details": "ABTs assigned to zero address are considered invalid, and queries  about them do throw.",
        "notice": "Find the address bound to an ERC4973 account-bound token",
        "params": {
          "tokenId": "The identifier for an ABT"
        },
        "returns": {
          "_0": "The address of the owner bound to the ABT"
        }
      },
      "ownerRevokeWithSignature(bytes32,bytes,uint256)": {
        "details": "Ref SoulboundCore.sol revokeWithSignature       This function grants the access to only the       deployer of the contract, unlike the core       that allows the function for anyone who has a       signature signed by the allowlistOwner.       This contract can be called by the deployer of the       contract [DaccredDeployer] but is also protected       as to the allowlistOwner must be the signer of the `sig.`",
        "notice": "Callable by the deployer of this contract [DaccredDeployer].",
        "params": {
          "hash": "Hash of message signed.",
          "sig": "Signature.",
          "tokenId": "TokenId to be issued."
        }
      },
      "payToReceiveToken(address,uint256)": {
        "details": "Allows the `_receiver` to pay the price of one token to       fully mint the pending token.",
        "notice": "Callable by the deployer of this contract [DaccredDeployer].",
        "params": {
          "_receiver": "Receiver of the token.",
          "tokenId": "Pending tokenId for the receiver."
        }
      },
      "redeemMintedToken(address,uint256,uint256)": {
        "details": "For expired minted tokens, this function redeems them and makes       valid for another period of time.       Tokens must be expired for it to be redeemed.       Emits the {Redeemed} event.",
        "notice": "Callable by the deployer of this contract [DaccredDeployer].",
        "params": {
          "_receiver": "Receiver of the token.",
          "_tokenExpiryDate": "New expiry date for tokens.",
          "tokenId": "Pending tokenId for the receiver."
        }
      },
      "redeemMintedTokenWithSignature(address,address,uint256,uint256,bytes32,bytes)": {
        "details": "Allows the allowlistOwner to redeem an expired minted       token on behalf of the tokenOwner.",
        "notice": "Callable by the deployer of this contract [DaccredDeployer]           and the allowlistOwner.",
        "params": {
          "_caller": "Allowlist owner.",
          "_receiver": "Address of receiver.",
          "_tokenExpiryDate": "Days to extend the token.",
          "hash": "Hash of message.",
          "sig": "Signature.",
          "tokenId": "TokenId."
        }
      },
      "redeemPendingToken(address,uint256,uint256)": {
        "details": "For expired pending tokens, this function redeems them and makes       valid for another period of time.       Tokens must be expired for it to be redeemed.       Emits the {Redeemed} event.",
        "notice": "Callable by the deployer of this contract [DaccredDeployer].",
        "params": {
          "_receiver": "Receiver of the token.",
          "_tokenExpiryDate": "New expiry date for tokens.",
          "tokenId": "Pending tokenId for the receiver."
        }
      },
      "redeemPendingTokenWithSignature(address,address,uint256,uint256,bytes32,bytes)": {
        "details": "Allows the allowlistOwner to redeem an expired pending       token on behalf of the tokenOwner.",
        "notice": "Callable by the deployer of this contract [DaccredDeployer]           and the allowlistOwner.",
        "params": {
          "_caller": "Allowlist owner.",
          "_receiver": "Address of receiver.",
          "_tokenExpiryDate": "Days to extend the token.",
          "hash": "Hash of message.",
          "sig": "Signature.",
          "tokenId": "TokenId."
        }
      },
      "renounceOwnership()": {
        "details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
      },
      "revokeWithSignature(bytes32,bytes,uint256)": {
        "details": "Revokes the ownership of `tokenId` from the owner.       The token must exist and the signature must be signed the       allowlistOwner.       This emits the {RevokeWithSignature} event.",
        "notice": "Callable by anyone.",
        "params": {
          "hash": "Hashed message by the allowlistOwner.",
          "sig": "Signature, signed by the allowlistOwner.",
          "tokenId": "Id of the token to revoke."
        }
      },
      "setBaseURI(address,string)": {
        "details": "Allows the `caller` (allowlistOwner) to set the baseURI.       This is really important when the caller wants to mint       Multiple tokens with the same base URI.",
        "notice": "Callable by the deployer of this contract [DaccredDeployer]           and the allowlistOwner."
      },
      "setPrice(address,uint256)": {
        "details": "Allows `caller` to set `_price` as price of one token.",
        "notice": "Callable by the deployer of this contract [DaccredDeployer]           and the allowlistOwner.",
        "params": {
          "_price": "New price.",
          "caller": "AllowlistOwner."
        }
      },
      "supportsInterface(bytes4)": {
        "details": "See {IERC165-supportsInterface}."
      },
      "transferOwnership(address)": {
        "details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
      },
      "verifySignature(bytes32,bytes)": {
        "details": "Returns true if the signer of signature `sig` is the `allowlistOwner`.       And false if otherwise.",
        "notice": "Callable by anyone.",
        "returns": {
          "_0": "bool true or false."
        }
      },
      "verifySigner(address,bytes32,bytes)": {
        "details": "Returns true if the signer of `_signature` is `_signer`.",
        "notice": "Callable by anyone.",
        "returns": {
          "_0": "bool true or false."
        }
      },
      "withdraw(address)": {
        "details": "Allows the allowlistowner to withdraw his funds to his wallet.",
        "notice": "Callable by the deployer of this contract [DaccredDeployer]           and the allowlistOwner.",
        "params": {
          "_caller": "Address of allowlistowner."
        }
      }
    },
    "stateVariables": {
      "locked": {
        "details": "ReEntrancy Lock."
      },
      "pending": {
        "details": "Pending token receivals."
      },
      "pendingReceivers": {
        "details": "Pending address to receive tokens."
      },
      "priceLimit": {
        "details": "Price Limit [in eth] set by deploying contract."
      },
      "tax": {
        "details": "Tax for token redemptions.         15 represents 1.5% of total sales."
      },
      "tokenPrice": {
        "details": "Price of individual tokens, set by deployer."
      },
      "totalRevenue": {
        "details": "Total revenue from sales."
      },
      "totalSales": {
        "details": "Total sales of tokens [Total tokens paid for]."
      }
    },
    "title": "Soulbound Redeemable.",
    "version": 1
  },
  "offset": [
    826,
    15781
  ],
  "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x1FA JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x95D89B41 GT PUSH2 0x10C JUMPI DUP1 PUSH4 0xDACA6F78 GT PUSH2 0x9A JUMPI DUP1 PUSH4 0xED734730 GT PUSH2 0x6C JUMPI DUP1 PUSH4 0xED734730 EQ PUSH2 0x5EF JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x602 JUMPI DUP1 PUSH4 0xF577A500 EQ PUSH2 0x622 JUMPI DUP1 PUSH4 0xFAD54DE7 EQ PUSH2 0x652 JUMPI DUP1 PUSH4 0xFB8F198D EQ PUSH2 0x667 JUMPI STOP JUMPDEST DUP1 PUSH4 0xDACA6F78 EQ PUSH2 0x56F JUMPI DUP1 PUSH4 0xE8C58763 EQ PUSH2 0x58F JUMPI DUP1 PUSH4 0xE92B0842 EQ PUSH2 0x5AF JUMPI DUP1 PUSH4 0xEA5353C7 EQ PUSH2 0x5CF JUMPI STOP JUMPDEST DUP1 PUSH4 0xBD97A6AD GT PUSH2 0xDE JUMPI DUP1 PUSH4 0xBD97A6AD EQ PUSH2 0x4DA JUMPI DUP1 PUSH4 0xC3CAB38A EQ PUSH2 0x4FA JUMPI DUP1 PUSH4 0xC87B56DD EQ PUSH2 0x51A JUMPI DUP1 PUSH4 0xC9DD94C7 EQ PUSH2 0x53A JUMPI DUP1 PUSH4 0xC9E4C54D EQ PUSH2 0x54F JUMPI STOP JUMPDEST DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x48A JUMPI DUP1 PUSH4 0x983A8B94 EQ PUSH2 0x49F JUMPI DUP1 PUSH4 0xA0B97DAA EQ PUSH2 0x4B2 JUMPI DUP1 PUSH4 0xBD131786 EQ PUSH2 0x4C7 JUMPI STOP JUMPDEST DUP1 PUSH4 0x51CFF8D9 GT PUSH2 0x189 JUMPI DUP1 PUSH4 0x6E0A8746 GT PUSH2 0x15B JUMPI DUP1 PUSH4 0x6E0A8746 EQ PUSH2 0x3F9 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x417 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x437 JUMPI DUP1 PUSH4 0x88433651 EQ PUSH2 0x44C JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x46C JUMPI STOP JUMPDEST DUP1 PUSH4 0x51CFF8D9 EQ PUSH2 0x320 JUMPI DUP1 PUSH4 0x5899E7B2 EQ PUSH2 0x340 JUMPI DUP1 PUSH4 0x6352211E EQ PUSH2 0x386 JUMPI DUP1 PUSH4 0x6833F200 EQ PUSH2 0x3BE JUMPI STOP JUMPDEST DUP1 PUSH4 0x1F04D135 GT PUSH2 0x1CD JUMPI DUP1 PUSH4 0x1F04D135 EQ PUSH2 0x29A JUMPI DUP1 PUSH4 0x210FA96B EQ PUSH2 0x2BA JUMPI DUP1 PUSH4 0x33E085C1 EQ PUSH2 0x2DA JUMPI DUP1 PUSH4 0x3D1A350E EQ PUSH2 0x2ED JUMPI DUP1 PUSH4 0x42966C68 EQ PUSH2 0x300 JUMPI STOP JUMPDEST DUP1 PUSH3 0xE4768B EQ PUSH2 0x203 JUMPI DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0x223 JUMPI DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x258 JUMPI DUP1 PUSH4 0x8C92E57 EQ PUSH2 0x27A JUMPI STOP JUMPDEST CALLDATASIZE PUSH2 0x201 JUMPI STOP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x20F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x201 PUSH2 0x21E CALLDATASIZE PUSH1 0x4 PUSH2 0x2719 JUMP JUMPDEST PUSH2 0x687 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x22F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x243 PUSH2 0x23E CALLDATASIZE PUSH1 0x4 PUSH2 0x2743 JUMP JUMPDEST PUSH2 0x756 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x264 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x26D PUSH2 0x7A8 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x24F SWAP2 SWAP1 PUSH2 0x279D JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x286 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x201 PUSH2 0x295 CALLDATASIZE PUSH1 0x4 PUSH2 0x2873 JUMP JUMPDEST PUSH2 0x83A JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2A6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x201 PUSH2 0x2B5 CALLDATASIZE PUSH1 0x4 PUSH2 0x2873 JUMP JUMPDEST PUSH2 0x970 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2C6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x26D PUSH2 0x2D5 CALLDATASIZE PUSH1 0x4 PUSH2 0x28C3 JUMP JUMPDEST PUSH2 0xA0C JUMP JUMPDEST PUSH2 0x201 PUSH2 0x2E8 CALLDATASIZE PUSH1 0x4 PUSH2 0x2719 JUMP JUMPDEST PUSH2 0xA8E JUMP JUMPDEST PUSH2 0x201 PUSH2 0x2FB CALLDATASIZE PUSH1 0x4 PUSH2 0x28DC JUMP JUMPDEST PUSH2 0xDA6 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x30C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x201 PUSH2 0x31B CALLDATASIZE PUSH1 0x4 PUSH2 0x28C3 JUMP JUMPDEST PUSH2 0x1098 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x32C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x201 PUSH2 0x33B CALLDATASIZE PUSH1 0x4 PUSH2 0x290F JUMP JUMPDEST PUSH2 0x110D JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x34C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x243 PUSH2 0x35B CALLDATASIZE PUSH1 0x4 PUSH2 0x2719 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 SWAP1 SWAP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x8 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 DUP4 MSTORE SWAP3 SWAP1 MSTORE KECCAK256 SLOAD PUSH1 0xFF AND SWAP1 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x392 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x3A6 PUSH2 0x3A1 CALLDATASIZE PUSH1 0x4 PUSH2 0x28C3 JUMP JUMPDEST PUSH2 0x1263 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x24F JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3CA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x3EB PUSH2 0x3D9 CALLDATASIZE PUSH1 0x4 PUSH2 0x28C3 JUMP JUMPDEST PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x24F JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x405 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x9 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x3A6 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x423 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x3EB PUSH2 0x432 CALLDATASIZE PUSH1 0x4 PUSH2 0x290F JUMP JUMPDEST PUSH2 0x12C8 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x443 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x201 PUSH2 0x1351 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x458 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x201 PUSH2 0x467 CALLDATASIZE PUSH1 0x4 PUSH2 0x292A JUMP JUMPDEST PUSH2 0x1387 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x478 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x6 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x3A6 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x496 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x26D PUSH2 0x13FD JUMP JUMPDEST PUSH2 0x201 PUSH2 0x4AD CALLDATASIZE PUSH1 0x4 PUSH2 0x2978 JUMP JUMPDEST PUSH2 0x140C JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4BE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0xE SLOAD PUSH2 0x3EB JUMP JUMPDEST PUSH2 0x201 PUSH2 0x4D5 CALLDATASIZE PUSH1 0x4 PUSH2 0x2978 JUMP JUMPDEST PUSH2 0x1504 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4E6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x201 PUSH2 0x4F5 CALLDATASIZE PUSH1 0x4 PUSH2 0x29F2 JUMP JUMPDEST PUSH2 0x15E9 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x506 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x201 PUSH2 0x515 CALLDATASIZE PUSH1 0x4 PUSH2 0x2A34 JUMP JUMPDEST PUSH2 0x17DD JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x526 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x26D PUSH2 0x535 CALLDATASIZE PUSH1 0x4 PUSH2 0x28C3 JUMP JUMPDEST PUSH2 0x1835 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x546 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x26D PUSH2 0x192A JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x55B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x201 PUSH2 0x56A CALLDATASIZE PUSH1 0x4 PUSH2 0x2A56 JUMP JUMPDEST PUSH2 0x1987 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x57B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x243 PUSH2 0x58A CALLDATASIZE PUSH1 0x4 PUSH2 0x2ADE JUMP JUMPDEST PUSH2 0x1A94 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x59B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x3EB PUSH2 0x5AA CALLDATASIZE PUSH1 0x4 PUSH2 0x28C3 JUMP JUMPDEST PUSH2 0x1AA7 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x5BB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x243 PUSH2 0x5CA CALLDATASIZE PUSH1 0x4 PUSH2 0x2B0F JUMP JUMPDEST PUSH2 0x1AE4 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x5DB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x201 PUSH2 0x5EA CALLDATASIZE PUSH1 0x4 PUSH2 0x2A56 JUMP JUMPDEST PUSH2 0x1B78 JUMP JUMPDEST PUSH2 0x201 PUSH2 0x5FD CALLDATASIZE PUSH1 0x4 PUSH2 0x28DC JUMP JUMPDEST PUSH2 0x1BF7 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x60E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x201 PUSH2 0x61D CALLDATASIZE PUSH1 0x4 PUSH2 0x290F JUMP JUMPDEST PUSH2 0x1DA3 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x62E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x243 PUSH2 0x63D CALLDATASIZE PUSH1 0x4 PUSH2 0x28C3 JUMP JUMPDEST PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD TIMESTAMP GT ISZERO SWAP1 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x65E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0xF SLOAD PUSH2 0x3EB JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x673 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x3A6 PUSH2 0x682 CALLDATASIZE PUSH1 0x4 PUSH2 0x2719 JUMP JUMPDEST PUSH2 0x1E3B JUMP JUMPDEST PUSH1 0x6 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x6BA JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x6B1 SWAP1 PUSH2 0x2B66 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 PUSH2 0x6CD PUSH1 0x9 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0x6FD JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x6B1 SWAP1 PUSH2 0x2B9B JUMP JUMPDEST PUSH1 0xE SLOAD DUP3 GT ISZERO PUSH2 0x74F JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x18 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x507269636520686967686572207468616E206C696D69742E0000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x6B1 JUMP JUMPDEST POP PUSH1 0xF SSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND PUSH4 0x5B5E139F PUSH1 0xE0 SHL EQ DUP1 PUSH2 0x787 JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND PUSH4 0x5164CF47 PUSH1 0xE0 SHL EQ JUMPDEST DUP1 PUSH2 0x7A2 JUMPI POP PUSH4 0x1FFC9A7 PUSH1 0xE0 SHL PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP4 AND EQ JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x1 DUP1 SLOAD PUSH2 0x7B7 SWAP1 PUSH2 0x2BC9 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x7E3 SWAP1 PUSH2 0x2BC9 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x830 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x805 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x830 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x813 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x843 DUP2 PUSH2 0x1F4F JUMP JUMPDEST PUSH2 0x88F JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5265766F6B65206F6620696E6578697374656E7420746F6B656E2E0000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x6B1 JUMP JUMPDEST DUP2 MLOAD PUSH1 0x41 EQ PUSH2 0x8DB JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x18 PUSH1 0x24 DUP3 ADD MSTORE PUSH24 0x92DCECC2D8D2C840E6D2CEDCC2E8EAE4CA40D8CADCCEE8D PUSH1 0x43 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x6B1 JUMP JUMPDEST PUSH2 0x8E5 DUP4 DUP4 PUSH2 0x1A94 JUMP JUMPDEST PUSH2 0x92D JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x19 PUSH1 0x24 DUP3 ADD MSTORE PUSH25 0x2430B9B4103737BA1039B4B3B732B210313C9037BBB732B917 PUSH1 0x39 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x6B1 JUMP JUMPDEST PUSH2 0x93F PUSH2 0x939 DUP3 PUSH2 0x1263 JUMP JUMPDEST DUP3 PUSH2 0x1F6C JUMP JUMPDEST POP PUSH1 0x40 MLOAD DUP2 SWAP1 PUSH32 0xF947BF2266AFEDE98F27AD2312DB8B2A17921852307F979B6F14A2B41FA774BC SWAP1 PUSH1 0x0 SWAP1 LOG2 POP POP POP JUMP JUMPDEST PUSH1 0x6 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x99A JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x6B1 SWAP1 PUSH2 0x2B66 JUMP JUMPDEST PUSH1 0xB SLOAD ISZERO PUSH2 0x9BC JUMPI PUSH1 0xB DUP1 SLOAD SWAP1 PUSH1 0x0 PUSH2 0x9B2 DUP4 PUSH2 0x2C19 JUMP JUMPDEST SWAP2 SWAP1 POP SSTORE POP PUSH2 0x9FC JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x15 PUSH1 0x24 DUP3 ADD MSTORE PUSH21 0x2637BBB2B9BA103634B6B4BA103932B0B1B432B217 PUSH1 0x59 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x6B1 JUMP JUMPDEST PUSH2 0xA07 DUP4 DUP4 DUP4 PUSH2 0x83A JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH2 0xA16 PUSH2 0x192A JUMP JUMPDEST MLOAD PUSH1 0x0 SUB PUSH2 0xA56 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xD PUSH1 0x24 DUP3 ADD MSTORE PUSH13 0x456D7074792062617365555249 PUSH1 0x98 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x6B1 JUMP JUMPDEST PUSH2 0xA5E PUSH2 0x192A JUMP JUMPDEST PUSH2 0xA67 DUP4 PUSH2 0x2034 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0xA78 SWAP3 SWAP2 SWAP1 PUSH2 0x2C30 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x6 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0xAB8 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x6B1 SWAP1 PUSH2 0x2B66 JUMP JUMPDEST PUSH1 0x13 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0xAC8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x13 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0xAFB JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x6B1 SWAP1 PUSH2 0x2C5F JUMP JUMPDEST PUSH2 0xB04 DUP2 PUSH2 0x1F4F JUMP JUMPDEST ISZERO PUSH2 0xB51 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4D696E74206F6620616C7265616479206578697374696E6720746F6B656E2E00 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x6B1 JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x10 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND PUSH2 0xBA9 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x17 PUSH1 0x24 DUP3 ADD MSTORE PUSH23 0x20B63932B0B23C903932B1B2B4BB32B2103A37B5B2B717 PUSH1 0x49 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x6B1 JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x11 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND SWAP2 AND EQ PUSH2 0xC0A JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x15 PUSH1 0x24 DUP3 ADD MSTORE PUSH21 0x2737BA103832B73234B733903932B1B2B4BB32B917 PUSH1 0x59 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x6B1 JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD TIMESTAMP GT ISZERO PUSH2 0xC79 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x28 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x526563656976616C206F66206578706972656420746F6B656E2C207265646565 PUSH1 0x44 DUP3 ADD MSTORE PUSH8 0x36903A37B5B2B717 PUSH1 0xC1 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x6B1 JUMP JUMPDEST PUSH1 0xF SLOAD CALLVALUE LT ISZERO PUSH2 0xCCB JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1C PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5072696365206C6F776572207468616E20746F6B656E20636F73742E00000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x6B1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0xF SLOAD CALLVALUE GT ISZERO PUSH2 0xD1F JUMPI PUSH1 0xF SLOAD PUSH2 0xCE4 SWAP1 CALLVALUE PUSH2 0x2C8E JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 SWAP2 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND SWAP1 DUP3 ISZERO PUSH2 0x8FC MUL SWAP1 DUP4 SWAP1 PUSH1 0x0 DUP2 DUP2 DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0xD1D JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP JUMPDEST PUSH1 0x0 PUSH2 0xD2A DUP4 PUSH2 0xA0C JUMP JUMPDEST SWAP1 POP PUSH2 0xD37 DUP5 DUP5 DUP4 PUSH2 0x213D JUMP JUMPDEST POP PUSH1 0xC DUP1 SLOAD SWAP1 PUSH1 0x0 PUSH2 0xD48 DUP4 PUSH2 0x2CA5 JUMP JUMPDEST SWAP2 SWAP1 POP SSTORE POP PUSH1 0xF SLOAD PUSH1 0xD PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0xD61 SWAP2 SWAP1 PUSH2 0x2CBE JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP POP PUSH1 0x0 SWAP2 DUP3 MSTORE POP PUSH1 0x10 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT SWAP1 DUP2 AND SWAP1 SWAP2 SSTORE PUSH1 0x11 SWAP1 SWAP3 MSTORE SWAP1 SWAP2 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND SWAP1 SSTORE PUSH1 0x13 DUP1 SLOAD SWAP1 SWAP2 AND SWAP1 SSTORE POP JUMP JUMPDEST PUSH1 0x6 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0xDD0 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x6B1 SWAP1 PUSH2 0x2B66 JUMP JUMPDEST PUSH1 0x13 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0xDE0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x13 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0xE43 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x526564656D7074696F6E20746F207A65726F20616464726573732E0000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x6B1 JUMP JUMPDEST PUSH2 0xE4C DUP3 PUSH2 0x1F4F JUMP JUMPDEST PUSH2 0xEA2 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x21 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x526564656D7074696F6E206F66206E6F6E2D6578697374696E6720746F6B656E PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x17 PUSH1 0xF9 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x6B1 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x10 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0xEF8 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x14 PUSH1 0x24 DUP3 ADD MSTORE PUSH20 0x2A37B5B2B71039BA34B636103832B73234B73397 PUSH1 0x61 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x6B1 JUMP JUMPDEST DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0xF0B DUP4 PUSH2 0x1263 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0xF54 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x10 PUSH1 0x24 DUP3 ADD MSTORE PUSH16 0x2737BA103A37B5B2B71037BBB732B917 PUSH1 0x81 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x6B1 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD TIMESTAMP GT PUSH2 0xFA4 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x10 PUSH1 0x24 DUP3 ADD MSTORE PUSH16 0x2A37B5B2B7103AB732BC3834B932B217 PUSH1 0x81 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x6B1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0xFB1 PUSH1 0x12 SLOAD PUSH2 0x2154 JUMP JUMPDEST SWAP1 POP DUP1 CALLVALUE LT ISZERO PUSH2 0x1003 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5072696365206C6F776572207468616E20726564656D7074696F6E207461782E PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x6B1 JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO PUSH2 0x1050 JUMPI PUSH2 0x1015 DUP3 CALLVALUE PUSH2 0x2C8E JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 SWAP2 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND SWAP1 DUP3 ISZERO PUSH2 0x8FC MUL SWAP1 DUP4 SWAP1 PUSH1 0x0 DUP2 DUP2 DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0x104E JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP JUMPDEST PUSH2 0x105A DUP5 DUP5 PUSH2 0x17DD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP4 SWAP1 DUP6 SWAP1 PUSH32 0x6F73B7B8D37DF32EA60A45EADC8FC3D2D716D705EE099BD506817482CE847316 SWAP1 PUSH1 0x0 SWAP1 LOG3 POP POP PUSH1 0x13 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SSTORE POP POP POP JUMP JUMPDEST PUSH2 0x10A1 DUP2 PUSH2 0x1263 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0x1101 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x6275726E3A2073656E646572206D757374206265206F776E6572000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x6B1 JUMP JUMPDEST PUSH2 0x110A DUP2 PUSH2 0x2190 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x6 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x1137 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x6B1 SWAP1 PUSH2 0x2B66 JUMP JUMPDEST DUP1 PUSH2 0x114A PUSH1 0x9 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0x117A JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x6B1 SWAP1 PUSH2 0x2B9B JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x11D0 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x18 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x53656E64696E6720746F207A65726F20616464726573732E0000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x6B1 JUMP JUMPDEST PUSH1 0xD SLOAD SELFBALANCE LT ISZERO PUSH2 0x1222 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1C PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x526576656E756520213D20436F6E74726163742062616C616E63652E00000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x6B1 JUMP JUMPDEST PUSH1 0xD SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND SWAP2 DUP1 ISZERO PUSH2 0x8FC MUL SWAP2 PUSH1 0x0 DUP2 DUP2 DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0x1259 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP PUSH1 0x0 PUSH1 0xD SSTORE POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP1 PUSH2 0x7A2 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1C PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x6F776E65724F663A20746F6B656E20646F65736E277420657869737400000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x6B1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x1335 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2C PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x62616C616E63654F663A2061646472657373207A65726F206973206E6F742061 PUSH1 0x44 DUP3 ADD MSTORE PUSH12 0x103B30B634B21037BBB732B9 PUSH1 0xA1 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x6B1 JUMP JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x6 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x137B JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x6B1 SWAP1 PUSH2 0x2B66 JUMP JUMPDEST PUSH2 0x1385 PUSH1 0x0 PUSH2 0x2237 JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x6 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x13B1 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x6B1 SWAP1 PUSH2 0x2B66 JUMP JUMPDEST DUP2 PUSH2 0x13C4 PUSH1 0x9 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0x13F4 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x6B1 SWAP1 PUSH2 0x2B9B JUMP JUMPDEST PUSH2 0xA07 DUP3 PUSH2 0x2289 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x2 DUP1 SLOAD PUSH2 0x7B7 SWAP1 PUSH2 0x2BC9 JUMP JUMPDEST PUSH1 0x6 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x1436 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x6B1 SWAP1 PUSH2 0x2B66 JUMP JUMPDEST DUP6 PUSH2 0x1449 PUSH1 0x9 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0x1479 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x6B1 SWAP1 PUSH2 0x2B9B JUMP JUMPDEST PUSH1 0x13 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x1489 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x13 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE PUSH2 0x14A0 DUP4 DUP4 PUSH2 0x1A94 JUMP JUMPDEST PUSH2 0x14E6 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x17 PUSH1 0x24 DUP3 ADD MSTORE PUSH23 0x2430B9B4103737BA1039B4B3B732B210313C903CB7BA97 PUSH1 0x49 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x6B1 JUMP JUMPDEST PUSH2 0x14F1 DUP7 DUP7 DUP7 PUSH2 0xDA6 JUMP JUMPDEST POP POP PUSH1 0x13 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SSTORE POP POP POP POP POP JUMP JUMPDEST PUSH1 0x6 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x152E JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x6B1 SWAP1 PUSH2 0x2B66 JUMP JUMPDEST DUP6 PUSH2 0x1541 PUSH1 0x9 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0x1571 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x6B1 SWAP1 PUSH2 0x2B9B JUMP JUMPDEST PUSH1 0x13 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x1581 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x13 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE PUSH2 0x1598 DUP4 DUP4 PUSH2 0x1A94 JUMP JUMPDEST PUSH2 0x15DE JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x17 PUSH1 0x24 DUP3 ADD MSTORE PUSH23 0x2430B9B4103737BA1039B4B3B732B210313C903CB7BA97 PUSH1 0x49 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x6B1 JUMP JUMPDEST PUSH2 0x14F1 DUP7 DUP7 DUP7 PUSH2 0x1BF7 JUMP JUMPDEST PUSH1 0x6 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x1613 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x6B1 SWAP1 PUSH2 0x2B66 JUMP JUMPDEST DUP4 PUSH2 0x1626 PUSH1 0x9 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0x1656 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x6B1 SWAP1 PUSH2 0x2B9B JUMP JUMPDEST PUSH1 0xA SLOAD PUSH1 0xB SLOAD LT PUSH2 0x169E JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x12 PUSH1 0x24 DUP3 ADD MSTORE PUSH18 0x24B9B9BAB29021B0B8102932B0B1B432B217 PUSH1 0x71 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x6B1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH2 0x16C4 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x6B1 SWAP1 PUSH2 0x2C5F JUMP JUMPDEST PUSH2 0x16CD DUP4 PUSH2 0x1F4F JUMP JUMPDEST ISZERO PUSH2 0x171A JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4D696E74206F6620616C7265616479206578697374696E6720746F6B656E2E00 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x6B1 JUMP JUMPDEST PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x10 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x1779 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1E PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4D696E74206F6620616C72656164792070656E64696E6720746F6B656E2E0000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x6B1 JUMP JUMPDEST PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x10 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE PUSH1 0x11 SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT SWAP1 SWAP2 AND OR SWAP1 SSTORE PUSH2 0x17C1 DUP4 DUP4 PUSH2 0x17DD JUMP JUMPDEST PUSH1 0xB DUP1 SLOAD SWAP1 PUSH1 0x0 PUSH2 0x17D1 DUP4 PUSH2 0x2CA5 JUMP JUMPDEST SWAP2 SWAP1 POP SSTORE POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0x17E7 DUP2 TIMESTAMP PUSH2 0x2CBE JUMP JUMPDEST PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 SWAP2 DUP3 SWAP1 KECCAK256 SWAP3 SWAP1 SWAP3 SSTORE DUP1 MLOAD DUP5 DUP2 MSTORE SWAP2 DUP3 ADD DUP4 SWAP1 MSTORE PUSH32 0x41A73BEB1018A8B63E0F451A8A4F483806142CF14BE45B1A58A23776A1E9B4BC SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP JUMP JUMPDEST PUSH1 0x60 PUSH2 0x1840 DUP3 PUSH2 0x1F4F JUMP JUMPDEST PUSH2 0x188C JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x746F6B656E5552493A20746F6B656E20646F65736E2774206578697374000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x6B1 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH2 0x18A5 SWAP1 PUSH2 0x2BC9 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x18D1 SWAP1 PUSH2 0x2BC9 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x191E JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x18F3 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x191E JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x1901 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x7 DUP1 SLOAD PUSH2 0x1939 SWAP1 PUSH2 0x2BC9 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 SUB PUSH2 0x197A JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xD PUSH1 0x24 DUP3 ADD MSTORE PUSH13 0x456D7074792062617365555249 PUSH1 0x98 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x6B1 JUMP JUMPDEST PUSH1 0x7 DUP1 SLOAD PUSH2 0x7B7 SWAP1 PUSH2 0x2BC9 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH2 0x19AD JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x6B1 SWAP1 PUSH2 0x2C5F JUMP JUMPDEST DUP3 MLOAD PUSH1 0x41 EQ PUSH2 0x19F9 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x18 PUSH1 0x24 DUP3 ADD MSTORE PUSH24 0x92DCECC2D8D2C840E6D2CEDCC2E8EAE4CA40D8CADCCEE8D PUSH1 0x43 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x6B1 JUMP JUMPDEST PUSH2 0x1A03 DUP5 DUP5 PUSH2 0x1A94 JUMP JUMPDEST PUSH2 0x1A4B JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x19 PUSH1 0x24 DUP3 ADD MSTORE PUSH25 0x2430B9B4103737BA1039B4B3B732B210313C9037BBB732B917 PUSH1 0x39 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x6B1 JUMP JUMPDEST PUSH2 0x1A56 DUP6 DUP4 DUP4 PUSH2 0x213D JUMP JUMPDEST POP PUSH1 0x40 MLOAD DUP3 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 AND SWAP1 PUSH32 0x79AF0E59B31823DD289CEEBABC4D63D25F35926B8548E3A084A500C9D4E18556 SWAP1 PUSH1 0x0 SWAP1 LOG3 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1AA0 DUP4 DUP4 PUSH2 0x22DB JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD TIMESTAMP GT ISZERO PUSH2 0x1AC5 JUMPI POP PUSH1 0x0 SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH2 0x7A2 SWAP1 TIMESTAMP SWAP1 PUSH2 0x2C8E JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x20 DUP2 DUP2 ADD MLOAD PUSH1 0x40 DUP1 DUP5 ADD MLOAD PUSH1 0x60 DUP1 DUP7 ADD MLOAD DUP4 MLOAD PUSH1 0x0 DUP1 DUP3 MSTORE DUP2 DUP9 ADD DUP1 DUP8 MSTORE DUP11 SWAP1 MSTORE SWAP2 DUP3 BYTE DUP2 DUP7 ADD DUP2 SWAP1 MSTORE SWAP3 DUP2 ADD DUP7 SWAP1 MSTORE PUSH1 0x80 DUP2 ADD DUP5 SWAP1 MSTORE SWAP4 MLOAD SWAP1 SWAP6 SWAP3 SWAP4 SWAP2 SWAP3 PUSH1 0x1 SWAP3 PUSH1 0xA0 DUP1 DUP3 ADD SWAP4 PUSH1 0x1F NOT DUP2 ADD SWAP3 DUP2 SWAP1 SUB SWAP1 SWAP2 ADD SWAP1 DUP6 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1B4E JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP PUSH1 0x20 PUSH1 0x40 MLOAD SUB MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP8 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ SWAP4 POP POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x6 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x1BA2 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x6B1 SWAP1 PUSH2 0x2B66 JUMP JUMPDEST PUSH1 0xA SLOAD PUSH1 0xB SLOAD LT PUSH2 0x1BEA JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x12 PUSH1 0x24 DUP3 ADD MSTORE PUSH18 0x24B9B9BAB29021B0B8102932B0B1B432B217 PUSH1 0x71 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x6B1 JUMP JUMPDEST PUSH2 0x17C1 DUP6 DUP6 DUP6 DUP6 DUP6 PUSH2 0x1987 JUMP JUMPDEST PUSH1 0x6 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x1C21 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x6B1 SWAP1 PUSH2 0x2B66 JUMP JUMPDEST PUSH1 0x13 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x1C31 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x13 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x1C94 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x526564656D7074696F6E20746F207A65726F20616464726573732E0000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x6B1 JUMP JUMPDEST PUSH2 0x1C9D DUP3 PUSH2 0x1F4F JUMP JUMPDEST ISZERO PUSH2 0x1CEA JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x526564656D7074696F6E206F66206578697374696E6720746F6B656E2E000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x6B1 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x10 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND PUSH2 0x1D42 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x17 PUSH1 0x24 DUP3 ADD MSTORE PUSH23 0x20B63932B0B23C903932B1B2B4BB32B2103A37B5B2B717 PUSH1 0x49 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x6B1 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x11 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 DUP2 AND SWAP2 AND EQ PUSH2 0xF54 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x15 PUSH1 0x24 DUP3 ADD MSTORE PUSH21 0x2737BA103832B73234B733903932B1B2B4BB32B917 PUSH1 0x59 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x6B1 JUMP JUMPDEST PUSH1 0x6 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x1DCD JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x6B1 SWAP1 PUSH2 0x2B66 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x1E32 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x646472657373 PUSH1 0xD0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x6B1 JUMP JUMPDEST PUSH2 0x110A DUP2 PUSH2 0x2237 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x1E93 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x17 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x517565727920666F72207A65726F20616464726573732E000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x6B1 JUMP JUMPDEST PUSH2 0x1E9C DUP3 PUSH2 0x1F4F JUMP JUMPDEST PUSH2 0x1EDE JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x13 PUSH1 0x24 DUP3 ADD MSTORE PUSH19 0x2737B716B2BC34B9BA32B73A103A37B5B2B717 PUSH1 0x69 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x6B1 JUMP JUMPDEST DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x1EF1 DUP4 PUSH2 0x1263 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0x1F47 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x546F6B656E206E6F74206F776E65642062792061646472657373000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x6B1 JUMP JUMPDEST POP ADDRESS SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND ISZERO ISZERO SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1F77 DUP3 PUSH2 0x1F4F JUMP JUMPDEST PUSH2 0x1FB9 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x13 PUSH1 0x24 DUP3 ADD MSTORE PUSH19 0x2737B716B2BC34B9BA32B73A103A37B5B2B717 PUSH1 0x69 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x6B1 JUMP JUMPDEST DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x1FCC DUP4 PUSH2 0x1263 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0x2022 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x546F6B656E206E6F74206F776E65642062792061646472657373000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x6B1 JUMP JUMPDEST PUSH2 0x202B DUP3 PUSH2 0x2481 JUMP JUMPDEST POP PUSH1 0x1 SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x60 DUP2 PUSH1 0x0 SUB PUSH2 0x205B JUMPI POP POP PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD SWAP1 SWAP2 MSTORE PUSH1 0x1 DUP2 MSTORE PUSH1 0x3 PUSH1 0xFC SHL PUSH1 0x20 DUP3 ADD MSTORE SWAP1 JUMP JUMPDEST DUP2 PUSH1 0x0 JUMPDEST DUP2 ISZERO PUSH2 0x2085 JUMPI DUP1 PUSH2 0x206F DUP2 PUSH2 0x2CA5 JUMP JUMPDEST SWAP2 POP PUSH2 0x207E SWAP1 POP PUSH1 0xA DUP4 PUSH2 0x2CEC JUMP JUMPDEST SWAP2 POP PUSH2 0x205F JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x20A0 JUMPI PUSH2 0x20A0 PUSH2 0x27D0 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x1F ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x20CA JUMPI PUSH1 0x20 DUP3 ADD DUP2 DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP JUMPDEST POP SWAP1 POP JUMPDEST DUP5 ISZERO PUSH2 0x2135 JUMPI PUSH2 0x20DF PUSH1 0x1 DUP4 PUSH2 0x2C8E JUMP JUMPDEST SWAP2 POP PUSH2 0x20EC PUSH1 0xA DUP7 PUSH2 0x2D00 JUMP JUMPDEST PUSH2 0x20F7 SWAP1 PUSH1 0x30 PUSH2 0x2CBE JUMP JUMPDEST PUSH1 0xF8 SHL DUP2 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0x210C JUMPI PUSH2 0x210C PUSH2 0x2D14 JUMP JUMPDEST PUSH1 0x20 ADD ADD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xF8 SHL SUB NOT AND SWAP1 DUP2 PUSH1 0x0 BYTE SWAP1 MSTORE8 POP PUSH2 0x212E PUSH1 0xA DUP7 PUSH2 0x2CEC JUMP JUMPDEST SWAP5 POP PUSH2 0x20CE JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x214A DUP5 DUP5 DUP5 PUSH2 0x2517 JUMP JUMPDEST POP PUSH1 0x1 SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH5 0x746A528800 PUSH1 0xD SLOAD LT ISZERO PUSH2 0x216A JUMPI PUSH1 0x0 SWAP2 POP JUMPDEST PUSH2 0x3E8 PUSH1 0xD SLOAD DUP4 PUSH2 0x217B SWAP2 SWAP1 PUSH2 0x2D2A JUMP JUMPDEST PUSH2 0x2186 SWAP1 PUSH1 0xA PUSH2 0x2D2A JUMP JUMPDEST PUSH2 0x7A2 SWAP2 SWAP1 PUSH2 0x2CEC JUMP JUMPDEST PUSH1 0x0 PUSH2 0x219B DUP3 PUSH2 0x1263 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD SWAP3 SWAP4 POP PUSH1 0x1 SWAP3 SWAP1 SWAP2 SWAP1 PUSH2 0x21C9 SWAP1 DUP5 SWAP1 PUSH2 0x2C8E JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND SWAP1 SSTORE PUSH1 0x4 SWAP1 SWAP2 MSTORE DUP2 KECCAK256 PUSH2 0x21FD SWAP2 PUSH2 0x26B4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP3 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND SWAP1 PUSH32 0xEC9AB91322523C899EDE7830EC9BFC992B5981CDCC27B91162FB23DE5791117B SWAP1 PUSH1 0x0 SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x6 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR SWAP1 SWAP4 SSTORE PUSH1 0x40 MLOAD SWAP2 AND SWAP2 SWAP1 DUP3 SWAP1 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP1 PUSH1 0x0 SWAP1 LOG3 POP POP JUMP JUMPDEST DUP1 MLOAD PUSH1 0x0 SUB PUSH2 0x22CB JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xE PUSH1 0x24 DUP3 ADD MSTORE PUSH14 0x92DCECC2D8D2C840D8CADCCEE8D PUSH1 0x93 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x6B1 JUMP JUMPDEST PUSH1 0x7 PUSH2 0x22D7 DUP3 DUP3 PUSH2 0x2D97 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x6 SLOAD PUSH1 0x0 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x2308 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x6B1 SWAP1 PUSH2 0x2B66 JUMP JUMPDEST PUSH1 0x6 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x2376 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433732313A3A2043616C6C20746F20636F6E7472616374206D6164652062 PUSH1 0x44 DUP3 ADD MSTORE PUSH11 0x3C903737B716B7BBB732B9 PUSH1 0xA9 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x6B1 JUMP JUMPDEST DUP2 MLOAD PUSH1 0x41 EQ PUSH2 0x23C7 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1E PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4572723A3A20496E76616C6964207369676E6174757265206C656E6774680000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x6B1 JUMP JUMPDEST PUSH1 0x20 DUP3 DUP2 ADD MLOAD PUSH1 0x40 DUP1 DUP6 ADD MLOAD PUSH1 0x60 DUP1 DUP8 ADD MLOAD DUP4 MLOAD PUSH1 0x0 DUP1 DUP3 MSTORE SWAP7 DUP2 ADD DUP1 DUP7 MSTORE DUP11 SWAP1 MSTORE SWAP1 DUP7 BYTE SWAP4 DUP2 ADD DUP5 SWAP1 MSTORE SWAP1 DUP2 ADD DUP5 SWAP1 MSTORE PUSH1 0x80 DUP2 ADD DUP3 SWAP1 MSTORE SWAP3 SWAP4 SWAP1 SWAP3 PUSH1 0x1 SWAP1 PUSH1 0xA0 ADD PUSH1 0x20 PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 SUB SWAP1 DUP1 DUP5 SUB SWAP1 DUP6 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x242B JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP PUSH1 0x40 MLOAD PUSH1 0x1F NOT DUP2 ADD MLOAD PUSH1 0x9 SLOAD SWAP1 SWAP4 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP6 AND SWAP2 AND EQ SWAP2 POP DUP2 SWAP1 DUP10 SWAP1 PUSH32 0x7E4FE2A2A805A357593FDBDDE58C02F6A53D8B4960744CD31A98697FC11C2E36 SWAP1 PUSH1 0x0 SWAP1 LOG3 SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0x248A DUP2 PUSH2 0x1F4F JUMP JUMPDEST PUSH2 0x24D6 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x18 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4275726E206F6620696E6578697374656E7420746F6B656E0000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x6B1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x24E1 DUP3 PUSH2 0x1263 JUMP JUMPDEST SWAP1 POP PUSH2 0x24EC DUP3 PUSH2 0x2190 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x8 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 DUP4 MSTORE SWAP3 SWAP1 MSTORE KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x253D JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x6B1 SWAP1 PUSH2 0x2C5F JUMP JUMPDEST DUP1 MLOAD PUSH1 0x0 SUB PUSH2 0x2580 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xF PUSH1 0x24 DUP3 ADD MSTORE PUSH15 0x22B6B83A3C903A37B5B2B72AA92497 PUSH1 0x89 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x6B1 JUMP JUMPDEST PUSH2 0x258B DUP4 DUP4 DUP4 PUSH2 0x25BD JUMP JUMPDEST POP POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x8 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 DUP4 MSTORE SWAP3 SWAP1 MSTORE KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x0 PUSH2 0x25C8 DUP4 PUSH2 0x1F4F JUMP JUMPDEST ISZERO PUSH2 0x260C JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x14 PUSH1 0x24 DUP3 ADD MSTORE PUSH20 0x6D696E743A20746F6B656E494420657869737473 PUSH1 0x60 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x6B1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD PUSH1 0x1 SWAP3 SWAP1 PUSH2 0x2635 SWAP1 DUP5 SWAP1 PUSH2 0x2CBE JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP10 AND OR SWAP1 SSTORE PUSH1 0x4 SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 PUSH2 0x2675 DUP4 DUP3 PUSH2 0x2D97 JUMP JUMPDEST POP PUSH1 0x40 MLOAD DUP4 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND SWAP1 PUSH32 0xE9274A84B19E9428826DE6BAE8C48329354F8F0E73F771B97CAE2D9DCCD45A27 SWAP1 PUSH1 0x0 SWAP1 LOG3 POP SWAP1 SWAP3 SWAP2 POP POP JUMP JUMPDEST POP DUP1 SLOAD PUSH2 0x26C0 SWAP1 PUSH2 0x2BC9 JUMP JUMPDEST PUSH1 0x0 DUP3 SSTORE DUP1 PUSH1 0x1F LT PUSH2 0x26D0 JUMPI POP POP JUMP JUMPDEST PUSH1 0x1F ADD PUSH1 0x20 SWAP1 DIV SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 DUP2 ADD SWAP1 PUSH2 0x110A SWAP2 SWAP1 JUMPDEST DUP1 DUP3 GT ISZERO PUSH2 0x26FE JUMPI PUSH1 0x0 DUP2 SSTORE PUSH1 0x1 ADD PUSH2 0x26EA JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x1ADF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x272C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x2735 DUP4 PUSH2 0x2702 JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2755 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP2 AND DUP2 EQ PUSH2 0x1AA0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x2788 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x2770 JUMP JUMPDEST DUP4 DUP2 GT ISZERO PUSH2 0x2797 JUMPI PUSH1 0x0 DUP5 DUP5 ADD MSTORE JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH1 0x0 DUP3 MLOAD DUP1 PUSH1 0x20 DUP5 ADD MSTORE PUSH2 0x27BC DUP2 PUSH1 0x40 DUP6 ADD PUSH1 0x20 DUP8 ADD PUSH2 0x276D JUMP JUMPDEST PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP2 SWAP1 SWAP2 ADD PUSH1 0x40 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x27F7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x2812 JUMPI PUSH2 0x2812 PUSH2 0x27D0 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1F DUP4 ADD PUSH1 0x1F NOT SWAP1 DUP2 AND PUSH1 0x3F ADD AND DUP2 ADD SWAP1 DUP3 DUP3 GT DUP2 DUP4 LT OR ISZERO PUSH2 0x283A JUMPI PUSH2 0x283A PUSH2 0x27D0 JUMP JUMPDEST DUP2 PUSH1 0x40 MSTORE DUP4 DUP2 MSTORE DUP7 PUSH1 0x20 DUP6 DUP9 ADD ADD GT ISZERO PUSH2 0x2853 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP4 PUSH1 0x20 DUP8 ADD PUSH1 0x20 DUP4 ADD CALLDATACOPY PUSH1 0x0 PUSH1 0x20 DUP6 DUP4 ADD ADD MSTORE DUP1 SWAP5 POP POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x2888 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP4 CALLDATALOAD SWAP3 POP PUSH1 0x20 DUP5 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x28A6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x28B2 DUP7 DUP3 DUP8 ADD PUSH2 0x27E6 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 DUP5 ADD CALLDATALOAD SWAP1 POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x28D5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x28F1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x28FA DUP5 PUSH2 0x2702 JUMP JUMPDEST SWAP6 PUSH1 0x20 DUP6 ADD CALLDATALOAD SWAP6 POP PUSH1 0x40 SWAP1 SWAP5 ADD CALLDATALOAD SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2921 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1AA0 DUP3 PUSH2 0x2702 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x293D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x2946 DUP4 PUSH2 0x2702 JUMP JUMPDEST SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x2962 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x296E DUP6 DUP3 DUP7 ADD PUSH2 0x27E6 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0xC0 DUP8 DUP10 SUB SLT ISZERO PUSH2 0x2991 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x299A DUP8 PUSH2 0x2702 JUMP JUMPDEST SWAP6 POP PUSH2 0x29A8 PUSH1 0x20 DUP9 ADD PUSH2 0x2702 JUMP JUMPDEST SWAP5 POP PUSH1 0x40 DUP8 ADD CALLDATALOAD SWAP4 POP PUSH1 0x60 DUP8 ADD CALLDATALOAD SWAP3 POP PUSH1 0x80 DUP8 ADD CALLDATALOAD SWAP2 POP PUSH1 0xA0 DUP8 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x29D9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x29E5 DUP10 DUP3 DUP11 ADD PUSH2 0x27E6 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 POP SWAP3 SWAP6 POP SWAP3 SWAP6 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x2A08 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x2A11 DUP6 PUSH2 0x2702 JUMP JUMPDEST SWAP4 POP PUSH2 0x2A1F PUSH1 0x20 DUP7 ADD PUSH2 0x2702 JUMP JUMPDEST SWAP4 SWAP7 SWAP4 SWAP6 POP POP POP POP PUSH1 0x40 DUP3 ADD CALLDATALOAD SWAP2 PUSH1 0x60 ADD CALLDATALOAD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x2A47 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP POP DUP1 CALLDATALOAD SWAP3 PUSH1 0x20 SWAP1 SWAP2 ADD CALLDATALOAD SWAP2 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xA0 DUP7 DUP9 SUB SLT ISZERO PUSH2 0x2A6E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x2A77 DUP7 PUSH2 0x2702 JUMP JUMPDEST SWAP5 POP PUSH1 0x20 DUP7 ADD CALLDATALOAD SWAP4 POP PUSH1 0x40 DUP7 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x2A9B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x2AA7 DUP10 DUP4 DUP11 ADD PUSH2 0x27E6 JUMP JUMPDEST SWAP5 POP PUSH1 0x60 DUP9 ADD CALLDATALOAD SWAP4 POP PUSH1 0x80 DUP9 ADD CALLDATALOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH2 0x2AC4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2AD1 DUP9 DUP3 DUP10 ADD PUSH2 0x27E6 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 POP SWAP3 SWAP6 SWAP1 SWAP4 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x2AF1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x2962 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x2B24 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x2B2D DUP5 PUSH2 0x2702 JUMP JUMPDEST SWAP3 POP PUSH1 0x20 DUP5 ADD CALLDATALOAD SWAP2 POP PUSH1 0x40 DUP5 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x2B50 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x2B5C DUP7 DUP3 DUP8 ADD PUSH2 0x27E6 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE DUP2 DUP2 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x14 SWAP1 DUP3 ADD MSTORE PUSH20 0x4E6F7420416C6C6F776C697374204F776E657221 PUSH1 0x60 SHL PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0x2BDD JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x2BFD JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP2 PUSH2 0x2C28 JUMPI PUSH2 0x2C28 PUSH2 0x2C03 JUMP JUMPDEST POP PUSH1 0x0 NOT ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP4 MLOAD PUSH2 0x2C42 DUP2 DUP5 PUSH1 0x20 DUP9 ADD PUSH2 0x276D JUMP JUMPDEST DUP4 MLOAD SWAP1 DUP4 ADD SWAP1 PUSH2 0x2C56 DUP2 DUP4 PUSH1 0x20 DUP9 ADD PUSH2 0x276D JUMP JUMPDEST ADD SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x15 SWAP1 DUP3 ADD MSTORE PUSH21 0x26B4B73A103A37903D32B9379030B2323932B9B997 PUSH1 0x59 SHL PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 LT ISZERO PUSH2 0x2CA0 JUMPI PUSH2 0x2CA0 PUSH2 0x2C03 JUMP JUMPDEST POP SUB SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 DUP3 ADD PUSH2 0x2CB7 JUMPI PUSH2 0x2CB7 PUSH2 0x2C03 JUMP JUMPDEST POP PUSH1 0x1 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 NOT DUP3 GT ISZERO PUSH2 0x2CD1 JUMPI PUSH2 0x2CD1 PUSH2 0x2C03 JUMP JUMPDEST POP ADD SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x2CFB JUMPI PUSH2 0x2CFB PUSH2 0x2CD6 JUMP JUMPDEST POP DIV SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x2D0F JUMPI PUSH2 0x2D0F PUSH2 0x2CD6 JUMP JUMPDEST POP MOD SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x0 NOT DIV DUP4 GT DUP3 ISZERO ISZERO AND ISZERO PUSH2 0x2D44 JUMPI PUSH2 0x2D44 PUSH2 0x2C03 JUMP JUMPDEST POP MUL SWAP1 JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH2 0xA07 JUMPI PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x20 DUP2 KECCAK256 PUSH1 0x1F DUP6 ADD PUSH1 0x5 SHR DUP2 ADD PUSH1 0x20 DUP7 LT ISZERO PUSH2 0x2D70 JUMPI POP DUP1 JUMPDEST PUSH1 0x1F DUP6 ADD PUSH1 0x5 SHR DUP3 ADD SWAP2 POP JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x2D8F JUMPI DUP3 DUP2 SSTORE PUSH1 0x1 ADD PUSH2 0x2D7C JUMP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST DUP2 MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x2DB1 JUMPI PUSH2 0x2DB1 PUSH2 0x27D0 JUMP JUMPDEST PUSH2 0x2DC5 DUP2 PUSH2 0x2DBF DUP5 SLOAD PUSH2 0x2BC9 JUMP JUMPDEST DUP5 PUSH2 0x2D49 JUMP JUMPDEST PUSH1 0x20 DUP1 PUSH1 0x1F DUP4 GT PUSH1 0x1 DUP2 EQ PUSH2 0x2DFA JUMPI PUSH1 0x0 DUP5 ISZERO PUSH2 0x2DE2 JUMPI POP DUP6 DUP4 ADD MLOAD JUMPDEST PUSH1 0x0 NOT PUSH1 0x3 DUP7 SWAP1 SHL SHR NOT AND PUSH1 0x1 DUP6 SWAP1 SHL OR DUP6 SSTORE PUSH2 0x2D8F JUMP JUMPDEST PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 DUP2 KECCAK256 PUSH1 0x1F NOT DUP7 AND SWAP2 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x2E29 JUMPI DUP9 DUP7 ADD MLOAD DUP3 SSTORE SWAP5 DUP5 ADD SWAP5 PUSH1 0x1 SWAP1 SWAP2 ADD SWAP1 DUP5 ADD PUSH2 0x2E0A JUMP JUMPDEST POP DUP6 DUP3 LT ISZERO PUSH2 0x2E47 JUMPI DUP8 DUP6 ADD MLOAD PUSH1 0x0 NOT PUSH1 0x3 DUP9 SWAP1 SHL PUSH1 0xF8 AND SHR NOT AND DUP2 SSTORE JUMPDEST POP POP POP POP POP PUSH1 0x1 SWAP1 DUP2 SHL ADD SWAP1 SSTORE POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xD8 0x4B 0xE3 SHL SSTORE 0xB9 SWAP6 PUSH31 0xEDEC9AC513CD6049F6F334A1EBC344347050CA815BD44D6864736F6C634300 ADDMOD 0xF STOP CALLER ",
  "pcMap": {
    "0": {
      "offset": [
        826,
        15781
      ],
      "op": "PUSH1",
      "path": "39",
      "value": "0x80"
    },
    "2": {
      "fn": null,
      "offset": [
        826,
        15781
      ],
      "op": "PUSH1",
      "path": "39",
      "value": "0x40"
    },
    "4": {
      "fn": null,
      "offset": [
        826,
        15781
      ],
      "op": "MSTORE",
      "path": "39"
    },
    "5": {
      "fn": null,
      "offset": [
        826,
        15781
      ],
      "op": "PUSH1",
      "path": "39",
      "value": "0x4"
    },
    "7": {
      "fn": null,
      "offset": [
        826,
        15781
      ],
      "op": "CALLDATASIZE",
      "path": "39"
    },
    "8": {
      "fn": null,
      "offset": [
        826,
        15781
      ],
      "op": "LT",
      "path": "39"
    },
    "9": {
      "fn": null,
      "offset": [
        826,
        15781
      ],
      "op": "PUSH2",
      "path": "39",
      "value": "0x1FA"
    },
    "12": {
      "fn": null,
      "offset": [
        826,
        15781
      ],
      "op": "JUMPI",
      "path": "39"
    },
    "13": {
      "fn": null,
      "offset": [
        826,
        15781
      ],
      "op": "PUSH1",
      "path": "39",
      "value": "0x0"
    },
    "15": {
      "fn": null,
      "offset": [
        826,
        15781
      ],
      "op": "CALLDATALOAD",
      "path": "39"
    },
    "16": {
      "fn": null,
      "offset": [
        826,
        15781
      ],
      "op": "PUSH1",
      "path": "39",
      "value": "0xE0"
    },
    "18": {
      "fn": null,
      "offset": [
        826,
        15781
      ],
      "op": "SHR",
      "path": "39"
    },
    "19": {
      "fn": null,
      "offset": [
        826,
        15781
      ],
      "op": "DUP1",
      "path": "39"
    },
    "20": {
      "fn": null,
      "offset": [
        826,
        15781
      ],
      "op": "PUSH4",
      "path": "39",
      "value": "0x95D89B41"
    },
    "25": {
      "fn": null,
      "offset": [
        826,
        15781
      ],
      "op": "GT",
      "path": "39"
    },
    "26": {
      "fn": null,
      "offset": [
        826,
        15781
      ],
      "op": "PUSH2",
      "path": "39",
      "value": "0x10C"
    },
    "29": {
      "fn": null,
      "offset": [
        826,
        15781
      ],
      "op": "JUMPI",
      "path": "39"
    },
    "30": {
      "fn": null,
      "offset": [
        826,
        15781
      ],
      "op": "DUP1",
      "path": "39"
    },
    "31": {
      "fn": null,
      "offset": [
        826,
        15781
      ],
      "op": "PUSH4",
      "path": "39",
      "value": "0xDACA6F78"
    },
    "36": {
      "fn": null,
      "offset": [
        826,
        15781
      ],
      "op": "GT",
      "path": "39"
    },
    "37": {
      "fn": null,
      "offset": [
        826,
        15781
      ],
      "op": "PUSH2",
      "path": "39",
      "value": "0x9A"
    },
    "40": {
      "fn": null,
      "offset": [
        826,
        15781
      ],
      "op": "JUMPI",
      "path": "39"
    },
    "41": {
      "fn": null,
      "offset": [
        826,
        15781
      ],
      "op": "DUP1",
      "path": "39"
    },
    "42": {
      "fn": null,
      "offset": [
        826,
        15781
      ],
      "op": "PUSH4",
      "path": "39",
      "value": "0xED734730"
    },
    "47": {
      "fn": null,
      "offset": [
        826,
        15781
      ],
      "op": "GT",
      "path": "39"
    },
    "48": {
      "fn": null,
      "offset": [
        826,
        15781
      ],
      "op": "PUSH2",
      "path": "39",
      "value": "0x6C"
    },
    "51": {
      "fn": null,
      "offset": [
        826,
        15781
      ],
      "op": "JUMPI",
      "path": "39"
    },
    "52": {
      "fn": null,
      "offset": [
        826,
        15781
      ],
      "op": "DUP1",
      "path": "39"
    },
    "53": {
      "fn": null,
      "offset": [
        826,
        15781
      ],
      "op": "PUSH4",
      "path": "39",
      "value": "0xED734730"
    },
    "58": {
      "fn": null,
      "offset": [
        826,
        15781
      ],
      "op": "EQ",
      "path": "39"
    },
    "59": {
      "fn": null,
      "offset": [
        826,
        15781
      ],
      "op": "PUSH2",
      "path": "39",
      "value": "0x5EF"
    },
    "62": {
      "fn": null,
      "offset": [
        826,
        15781
      ],
      "op": "JUMPI",
      "path": "39"
    },
    "63": {
      "fn": null,
      "offset": [
        826,
        15781
      ],
      "op": "DUP1",
      "path": "39"
    },
    "64": {
      "fn": null,
      "offset": [
        826,
        15781
      ],
      "op": "PUSH4",
      "path": "39",
      "value": "0xF2FDE38B"
    },
    "69": {
      "fn": null,
      "offset": [
        826,
        15781
      ],
      "op": "EQ",
      "path": "39"
    },
    "70": {
      "fn": null,
      "offset": [
        826,
        15781
      ],
      "op": "PUSH2",
      "path": "39",
      "value": "0x602"
    },
    "73": {
      "fn": null,
      "offset": [
        826,
        15781
      ],
      "op": "JUMPI",
      "path": "39"
    },
    "74": {
      "fn": null,
      "offset": [
        826,
        15781
      ],
      "op": "DUP1",
      "path": "39"
    },
    "75": {
      "fn": null,
      "offset": [
        826,
        15781
      ],
      "op": "PUSH4",
      "path": "39",
      "value": "0xF577A500"
    },
    "80": {
      "fn": null,
      "offset": [
        826,
        15781
      ],
      "op": "EQ",
      "path": "39"
    },
    "81": {
      "fn": null,
      "offset": [
        826,
        15781
      ],
      "op": "PUSH2",
      "path": "39",
      "value": "0x622"
    },
    "84": {
      "fn": null,
      "offset": [
        826,
        15781
      ],
      "op": "JUMPI",
      "path": "39"
    },
    "85": {
      "fn": null,
      "offset": [
        826,
        15781
      ],
      "op": "DUP1",
      "path": "39"
    },
    "86": {
      "fn": null,
      "offset": [
        826,
        15781
      ],
      "op": "PUSH4",
      "path": "39",
      "value": "0xFAD54DE7"
    },
    "91": {
      "fn": null,
      "offset": [
        826,
        15781
      ],
      "op": "EQ",
      "path": "39"
    },
    "92": {
      "fn": null,
      "offset": [
        826,
        15781
      ],
      "op": "PUSH2",
      "path": "39",
      "value": "0x652"
    },
    "95": {
      "fn": null,
      "offset": [
        826,
        15781
      ],
      "op": "JUMPI",
      "path": "39"
    },
    "96": {
      "fn": null,
      "offset": [
        826,
        15781
      ],
      "op": "DUP1",
      "path": "39"
    },
    "97": {
      "fn": null,
      "offset": [
        826,
        15781
      ],
      "op": "PUSH4",
      "path": "39",
      "value": "0xFB8F198D"
    },
    "102": {
      "fn": null,
      "offset": [
        826,
        15781
      ],
      "op": "EQ",
      "path": "39"
    },
    "103": {
      "fn": null,
      "offset": [
        826,
        15781
      ],
      "op": "PUSH2",
      "path": "39",
      "value": "0x667"
    },
    "106": {
      "fn": null,
      "offset": [
        826,
        15781
      ],
      "op": "JUMPI",
      "path": "39"
    },
    "107": {
      "fn": null,
      "offset": [
        826,
        15781
      ],
      "op": "STOP",
      "path": "39"
    },
    "108": {
      "fn": null,
      "offset": [
        826,
        15781
      ],
      "op": "JUMPDEST",
      "path": "39"
    },
    "109": {
      "fn": null,
      "offset": [
        826,
        15781
      ],
      "op": "DUP1",
      "path": "39"
    },
    "110": {
      "fn": null,
      "offset": [
        826,
        15781
      ],
      "op": "PUSH4",
      "path": "39",
      "value": "0xDACA6F78"
    },
    "115": {
      "fn": null,
      "offset": [
        826,
        15781
      ],
      "op": "EQ",
      "path": "39"
    },
    "116": {
      "fn": null,
      "offset": [
        826,
        15781
      ],
      "op": "PUSH2",
      "path": "39",
      "value": "0x56F"
    },
    "119": {
      "fn": null,
      "offset": [
        826,
        15781
      ],
      "op": "JUMPI",
      "path": "39"
    },
    "120": {
      "fn": null,
      "offset": [
        826,
        15781
      ],
      "op": "DUP1",
      "path": "39"
    },
    "121": {
      "fn": null,
      "offset": [
        826,
        15781
      ],
      "op": "PUSH4",
      "path": "39",
      "value": "0xE8C58763"
    },
    "126": {
      "fn": null,
      "offset": [
        826,
        15781
      ],
      "op": "EQ",
      "path": "39"
    },
    "127": {
      "fn": null,
      "offset": [
        826,
        15781
      ],
      "op": "PUSH2",
      "path": "39",
      "value": "0x58F"
    },
    "130": {
      "fn": null,
      "offset": [
        826,
        15781
      ],
      "op": "JUMPI",
      "path": "39"
    },
    "131": {
      "fn": null,
      "offset": [
        826,
        15781
      ],
      "op": "DUP1",
      "path": "39"
    },
    "132": {
      "fn": null,
      "offset": [
        826,
        15781
      ],
      "op": "PUSH4",
      "path": "39",
      "value": "0xE92B0842"
    },
    "137": {
      "fn": null,
      "offset": [
        826,
        15781
      ],
      "op": "EQ",
      "path": "39"
    },
    "138": {
      "fn": null,
      "offset": [
        826,
        15781
      ],
      "op": "PUSH2",
      "path": "39",
      "value": "0x5AF"
    },
    "141": {
      "fn": null,
      "offset": [
        826,
        15781
      ],
      "op": "JUMPI",
      "path": "39"
    },
    "142": {
      "fn": null,
      "offset": [
        826,
        15781
      ],
      "op": "DUP1",
      "path": "39"
    },
    "143": {
      "fn": null,
      "offset": [
        826,
        15781
      ],
      "op": "PUSH4",
      "path": "39",
      "value": "0xEA5353C7"
    },
    "148": {
      "fn": null,
      "offset": [
        826,
        15781
      ],
      "op": "EQ",
      "path": "39"
    },
    "149": {
      "fn": null,
      "offset": [
        826,
        15781
      ],
      "op": "PUSH2",
      "path": "39",
      "value": "0x5CF"
    },
    "152": {
      "fn": null,
      "offset": [
        826,
        15781
      ],
      "op": "JUMPI",
      "path": "39"
    },
    "153": {
      "fn": null,
      "offset": [
        826,
        15781
      ],
      "op": "STOP",
      "path": "39"
    },
    "154": {
      "fn": null,
      "offset": [
        826,
        15781
      ],
      "op": "JUMPDEST",
      "path": "39"
    },
    "155": {
      "fn": null,
      "offset": [
        826,
        15781
      ],
      "op": "DUP1",
      "path": "39"
    },
    "156": {
      "fn": null,
      "offset": [
        826,
        15781
      ],
      "op": "PUSH4",
      "path": "39",
      "value": "0xBD97A6AD"
    },
    "161": {
      "fn": null,
      "offset": [
        826,
        15781
      ],
      "op": "GT",
      "path": "39"
    },
    "162": {
      "fn": null,
      "offset": [
        826,
        15781
      ],
      "op": "PUSH2",
      "path": "39",
      "value": "0xDE"
    },
    "165": {
      "fn": null,
      "offset": [
        826,
        15781
      ],
      "op": "JUMPI",
      "path": "39"
    },
    "166": {
      "fn": null,
      "offset": [
        826,
        15781
      ],
      "op": "DUP1",
      "path": "39"
    },
    "167": {
      "fn": null,
      "offset": [
        826,
        15781
      ],
      "op": "PUSH4",
      "path": "39",
      "value": "0xBD97A6AD"
    },
    "172": {
      "fn": null,
      "offset": [
        826,
        15781
      ],
      "op": "EQ",
      "path": "39"
    },
    "173": {
      "fn": null,
      "offset": [
        826,
        15781
      ],
      "op": "PUSH2",
      "path": "39",
      "value": "0x4DA"
    },
    "176": {
      "fn": null,
      "offset": [
        826,
        15781
      ],
      "op": "JUMPI",
      "path": "39"
    },
    "177": {
      "fn": null,
      "offset": [
        826,
        15781
      ],
      "op": "DUP1",
      "path": "39"
    },
    "178": {
      "fn": null,
      "offset": [
        826,
        15781
      ],
      "op": "PUSH4",
      "path": "39",
      "value": "0xC3CAB38A"
    },
    "183": {
      "fn": null,
      "offset": [
        826,
        15781
      ],
      "op": "EQ",
      "path": "39"
    },
    "184": {
      "fn": null,
      "offset": [
        826,
        15781
      ],
      "op": "PUSH2",
      "path": "39",
      "value": "0x4FA"
    },
    "187": {
      "fn": null,
      "offset": [
        826,
        15781
      ],
      "op": "JUMPI",
      "path": "39"
    },
    "188": {
      "fn": null,
      "offset": [
        826,
        15781
      ],
      "op": "DUP1",
      "path": "39"
    },
    "189": {
      "fn": null,
      "offset": [
        826,
        15781
      ],
      "op": "PUSH4",
      "path": "39",
      "value": "0xC87B56DD"
    },
    "194": {
      "fn": null,
      "offset": [
        826,
        15781
      ],
      "op": "EQ",
      "path": "39"
    },
    "195": {
      "fn": null,
      "offset": [
        826,
        15781
      ],
      "op": "PUSH2",
      "path": "39",
      "value": "0x51A"
    },
    "198": {
      "fn": null,
      "offset": [
        826,
        15781
      ],
      "op": "JUMPI",
      "path": "39"
    },
    "199": {
      "fn": null,
      "offset": [
        826,
        15781
      ],
      "op": "DUP1",
      "path": "39"
    },
    "200": {
      "fn": null,
      "offset": [
        826,
        15781
      ],
      "op": "PUSH4",
      "path": "39",
      "value": "0xC9DD94C7"
    },
    "205": {
      "fn": null,
      "offset": [
        826,
        15781
      ],
      "op": "EQ",
      "path": "39"
    },
    "206": {
      "fn": null,
      "offset": [
        826,
        15781
      ],
      "op": "PUSH2",
      "path": "39",
      "value": "0x53A"
    },
    "209": {
      "fn": null,
      "offset": [
        826,
        15781
      ],
      "op": "JUMPI",
      "path": "39"
    },
    "210": {
      "fn": null,
      "offset": [
        826,
        15781
      ],
      "op": "DUP1",
      "path": "39"
    },
    "211": {
      "fn": null,
      "offset": [
        826,
        15781
      ],
      "op": "PUSH4",
      "path": "39",
      "value": "0xC9E4C54D"
    },
    "216": {
      "fn": null,
      "offset": [
        826,
        15781
      ],
      "op": "EQ",
      "path": "39"
    },
    "217": {
      "fn": null,
      "offset": [
        826,
        15781
      ],
      "op": "PUSH2",
      "path": "39",
      "value": "0x54F"
    },
    "220": {
      "fn": null,
      "offset": [
        826,
        15781
      ],
      "op": "JUMPI",
      "path": "39"
    },
    "221": {
      "fn": null,
      "offset": [
        826,
        15781
      ],
      "op": "STOP",
      "path": "39"
    },
    "222": {
      "fn": null,
      "offset": [
        826,
        15781
      ],
      "op": "JUMPDEST",
      "path": "39"
    },
    "223": {
      "fn": null,
      "offset": [
        826,
        15781
      ],
      "op": "DUP1",
      "path": "39"
    },
    "224": {
      "fn": null,
      "offset": [
        826,
        15781
      ],
      "op": "PUSH4",
      "path": "39",
      "value": "0x95D89B41"
    },
    "229": {
      "fn": null,
      "offset": [
        826,
        15781
      ],
      "op": "EQ",
      "path": "39"
    },
    "230": {
      "fn": null,
      "offset": [
        826,
        15781
      ],
      "op": "PUSH2",
      "path": "39",
      "value": "0x48A"
    },
    "233": {
      "fn": null,
      "offset": [
        826,
        15781
      ],
      "op": "JUMPI",
      "path": "39"
    },
    "234": {
      "fn": null,
      "offset": [
        826,
        15781
      ],
      "op": "DUP1",
      "path": "39"
    },
    "235": {
      "fn": null,
      "offset": [
        826,
        15781
      ],
      "op": "PUSH4",
      "path": "39",
      "value": "0x983A8B94"
    },
    "240": {
      "fn": null,
      "offset": [
        826,
        15781
      ],
      "op": "EQ",
      "path": "39"
    },
    "241": {
      "fn": null,
      "offset": [
        826,
        15781
      ],
      "op": "PUSH2",
      "path": "39",
      "value": "0x49F"
    },
    "244": {
      "fn": null,
      "offset": [
        826,
        15781
      ],
      "op": "JUMPI",
      "path": "39"
    },
    "245": {
      "fn": null,
      "offset": [
        826,
        15781
      ],
      "op": "DUP1",
      "path": "39"
    },
    "246": {
      "fn": null,
      "offset": [
        826,
        15781
      ],
      "op": "PUSH4",
      "path": "39",
      "value": "0xA0B97DAA"
    },
    "251": {
      "fn": null,
      "offset": [
        826,
        15781
      ],
      "op": "EQ",
      "path": "39"
    },
    "252": {
      "fn": null,
      "offset": [
        826,
        15781
      ],
      "op": "PUSH2",
      "path": "39",
      "value": "0x4B2"
    },
    "255": {
      "fn": null,
      "offset": [
        826,
        15781
      ],
      "op": "JUMPI",
      "path": "39"
    },
    "256": {
      "fn": null,
      "offset": [
        826,
        15781
      ],
      "op": "DUP1",
      "path": "39"
    },
    "257": {
      "fn": null,
      "offset": [
        826,
        15781
      ],
      "op": "PUSH4",
      "path": "39",
      "value": "0xBD131786"
    },
    "262": {
      "fn": null,
      "offset": [
        826,
        15781
      ],
      "op": "EQ",
      "path": "39"
    },
    "263": {
      "fn": null,
      "offset": [
        826,
        15781
      ],
      "op": "PUSH2",
      "path": "39",
      "value": "0x4C7"
    },
    "266": {
      "fn": null,
      "offset": [
        826,
        15781
      ],
      "op": "JUMPI",
      "path": "39"
    },
    "267": {
      "fn": null,
      "offset": [
        826,
        15781
      ],
      "op": "STOP",
      "path": "39"
    },
    "268": {
      "fn": null,
      "offset": [
        826,
        15781
      ],
      "op": "JUMPDEST",
      "path": "39"
    },
    "269": {
      "fn": null,
      "offset": [
        826,
        15781
      ],
      "op": "DUP1",
      "path": "39"
    },
    "270": {
      "fn": null,
      "offset": [
        826,
        15781
      ],
      "op": "PUSH4",
      "path": "39",
      "value": "0x51CFF8D9"
    },
    "275": {
      "fn": null,
      "offset": [
        826,
        15781
      ],
      "op": "GT",
      "path": "39"
    },
    "276": {
      "fn": null,
      "offset": [
        826,
        15781
      ],
      "op": "PUSH2",
      "path": "39",
      "value": "0x189"
    },
    "279": {
      "fn": null,
      "offset": [
        826,
        15781
      ],
      "op": "JUMPI",
      "path": "39"
    },
    "280": {
      "fn": null,
      "offset": [
        826,
        15781
      ],
      "op": "DUP1",
      "path": "39"
    },
    "281": {
      "fn": null,
      "offset": [
        826,
        15781
      ],
      "op": "PUSH4",
      "path": "39",
      "value": "0x6E0A8746"
    },
    "286": {
      "fn": null,
      "offset": [
        826,
        15781
      ],
      "op": "GT",
      "path": "39"
    },
    "287": {
      "fn": null,
      "offset": [
        826,
        15781
      ],
      "op": "PUSH2",
      "path": "39",
      "value": "0x15B"
    },
    "290": {
      "fn": null,
      "offset": [
        826,
        15781
      ],
      "op": "JUMPI",
      "path": "39"
    },
    "291": {
      "fn": null,
      "offset": [
        826,
        15781
      ],
      "op": "DUP1",
      "path": "39"
    },
    "292": {
      "fn": null,
      "offset": [
        826,
        15781
      ],
      "op": "PUSH4",
      "path": "39",
      "value": "0x6E0A8746"
    },
    "297": {
      "fn": null,
      "offset": [
        826,
        15781
      ],
      "op": "EQ",
      "path": "39"
    },
    "298": {
      "fn": null,
      "offset": [
        826,
        15781
      ],
      "op": "PUSH2",
      "path": "39",
      "value": "0x3F9"
    },
    "301": {
      "fn": null,
      "offset": [
        826,
        15781
      ],
      "op": "JUMPI",
      "path": "39"
    },
    "302": {
      "fn": null,
      "offset": [
        826,
        15781
      ],
      "op": "DUP1",
      "path": "39"
    },
    "303": {
      "fn": null,
      "offset": [
        826,
        15781
      ],
      "op": "PUSH4",
      "path": "39",
      "value": "0x70A08231"
    },
    "308": {
      "fn": null,
      "offset": [
        826,
        15781
      ],
      "op": "EQ",
      "path": "39"
    },
    "309": {
      "fn": null,
      "offset": [
        826,
        15781
      ],
      "op": "PUSH2",
      "path": "39",
      "value": "0x417"
    },
    "312": {
      "fn": null,
      "offset": [
        826,
        15781
      ],
      "op": "JUMPI",
      "path": "39"
    },
    "313": {
      "fn": null,
      "offset": [
        826,
        15781
      ],
      "op": "DUP1",
      "path": "39"
    },
    "314": {
      "fn": null,
      "offset": [
        826,
        15781
      ],
      "op": "PUSH4",
      "path": "39",
      "value": "0x715018A6"
    },
    "319": {
      "fn": null,
      "offset": [
        826,
        15781
      ],
      "op": "EQ",
      "path": "39"
    },
    "320": {
      "fn": null,
      "offset": [
        826,
        15781
      ],
      "op": "PUSH2",
      "path": "39",
      "value": "0x437"
    },
    "323": {
      "fn": null,
      "offset": [
        826,
        15781
      ],
      "op": "JUMPI",
      "path": "39"
    },
    "324": {
      "fn": null,
      "offset": [
        826,
        15781
      ],
      "op": "DUP1",
      "path": "39"
    },
    "325": {
      "fn": null,
      "offset": [
        826,
        15781
      ],
      "op": "PUSH4",
      "path": "39",
      "value": "0x88433651"
    },
    "330": {
      "fn": null,
      "offset": [
        826,
        15781
      ],
      "op": "EQ",
      "path": "39"
    },
    "331": {
      "fn": null,
      "offset": [
        826,
        15781
      ],
      "op": "PUSH2",
      "path": "39",
      "value": "0x44C"
    },
    "334": {
      "fn": null,
      "offset": [
        826,
        15781
      ],
      "op": "JUMPI",
      "path": "39"
    },
    "335": {
      "fn": null,
      "offset": [
        826,
        15781
      ],
      "op": "DUP1",
      "path": "39"
    },
    "336": {
      "fn": null,
      "offset": [
        826,
        15781
      ],
      "op": "PUSH4",
      "path": "39",
      "value": "0x8DA5CB5B"
    },
    "341": {
      "fn": null,
      "offset": [
        826,
        15781
      ],
      "op": "EQ",
      "path": "39"
    },
    "342": {
      "fn": null,
      "offset": [
        826,
        15781
      ],
      "op": "PUSH2",
      "path": "39",
      "value": "0x46C"
    },
    "345": {
      "fn": null,
      "offset": [
        826,
        15781
      ],
      "op": "JUMPI",
      "path": "39"
    },
    "346": {
      "fn": null,
      "offset": [
        826,
        15781
      ],
      "op": "STOP",
      "path": "39"
    },
    "347": {
      "fn": null,
      "offset": [
        826,
        15781
      ],
      "op": "JUMPDEST",
      "path": "39"
    },
    "348": {
      "fn": null,
      "offset": [
        826,
        15781
      ],
      "op": "DUP1",
      "path": "39"
    },
    "349": {
      "fn": null,
      "offset": [
        826,
        15781
      ],
      "op": "PUSH4",
      "path": "39",
      "value": "0x51CFF8D9"
    },
    "354": {
      "fn": null,
      "offset": [
        826,
        15781
      ],
      "op": "EQ",
      "path": "39"
    },
    "355": {
      "fn": null,
      "offset": [
        826,
        15781
      ],
      "op": "PUSH2",
      "path": "39",
      "value": "0x320"
    },
    "358": {
      "fn": null,
      "offset": [
        826,
        15781
      ],
      "op": "JUMPI",
      "path": "39"
    },
    "359": {
      "fn": null,
      "offset": [
        826,
        15781
      ],
      "op": "DUP1",
      "path": "39"
    },
    "360": {
      "fn": null,
      "offset": [
        826,
        15781
      ],
      "op": "PUSH4",
      "path": "39",
      "value": "0x5899E7B2"
    },
    "365": {
      "fn": null,
      "offset": [
        826,
        15781
      ],
      "op": "EQ",
      "path": "39"
    },
    "366": {
      "fn": null,
      "offset": [
        826,
        15781
      ],
      "op": "PUSH2",
      "path": "39",
      "value": "0x340"
    },
    "369": {
      "fn": null,
      "offset": [
        826,
        15781
      ],
      "op": "JUMPI",
      "path": "39"
    },
    "370": {
      "fn": null,
      "offset": [
        826,
        15781
      ],
      "op": "DUP1",
      "path": "39"
    },
    "371": {
      "fn": null,
      "offset": [
        826,
        15781
      ],
      "op": "PUSH4",
      "path": "39",
      "value": "0x6352211E"
    },
    "376": {
      "fn": null,
      "offset": [
        826,
        15781
      ],
      "op": "EQ",
      "path": "39"
    },
    "377": {
      "fn": null,
      "offset": [
        826,
        15781
      ],
      "op": "PUSH2",
      "path": "39",
      "value": "0x386"
    },
    "380": {
      "fn": null,
      "offset": [
        826,
        15781
      ],
      "op": "JUMPI",
      "path": "39"
    },
    "381": {
      "fn": null,
      "offset": [
        826,
        15781
      ],
      "op": "DUP1",
      "path": "39"
    },
    "382": {
      "fn": null,
      "offset": [
        826,
        15781
      ],
      "op": "PUSH4",
      "path": "39",
      "value": "0x6833F200"
    },
    "387": {
      "fn": null,
      "offset": [
        826,
        15781
      ],
      "op": "EQ",
      "path": "39"
    },
    "388": {
      "fn": null,
      "offset": [
        826,
        15781
      ],
      "op": "PUSH2",
      "path": "39",
      "value": "0x3BE"
    },
    "391": {
      "fn": null,
      "offset": [
        826,
        15781
      ],
      "op": "JUMPI",
      "path": "39"
    },
    "392": {
      "fn": null,
      "offset": [
        826,
        15781
      ],
      "op": "STOP",
      "path": "39"
    },
    "393": {
      "fn": null,
      "offset": [
        826,
        15781
      ],
      "op": "JUMPDEST",
      "path": "39"
    },
    "394": {
      "fn": null,
      "offset": [
        826,
        15781
      ],
      "op": "DUP1",
      "path": "39"
    },
    "395": {
      "fn": null,
      "offset": [
        826,
        15781
      ],
      "op": "PUSH4",
      "path": "39",
      "value": "0x1F04D135"
    },
    "400": {
      "fn": null,
      "offset": [
        826,
        15781
      ],
      "op": "GT",
      "path": "39"
    },
    "401": {
      "fn": null,
      "offset": [
        826,
        15781
      ],
      "op": "PUSH2",
      "path": "39",
      "value": "0x1CD"
    },
    "404": {
      "fn": null,
      "offset": [
        826,
        15781
      ],
      "op": "JUMPI",
      "path": "39"
    },
    "405": {
      "fn": null,
      "offset": [
        826,
        15781
      ],
      "op": "DUP1",
      "path": "39"
    },
    "406": {
      "fn": null,
      "offset": [
        826,
        15781
      ],
      "op": "PUSH4",
      "path": "39",
      "value": "0x1F04D135"
    },
    "411": {
      "fn": null,
      "offset": [
        826,
        15781
      ],
      "op": "EQ",
      "path": "39"
    },
    "412": {
      "fn": null,
      "offset": [
        826,
        15781
      ],
      "op": "PUSH2",
      "path": "39",
      "value": "0x29A"
    },
    "415": {
      "fn": null,
      "offset": [
        826,
        15781
      ],
      "op": "JUMPI",
      "path": "39"
    },
    "416": {
      "fn": null,
      "offset": [
        826,
        15781
      ],
      "op": "DUP1",
      "path": "39"
    },
    "417": {
      "fn": null,
      "offset": [
        826,
        15781
      ],
      "op": "PUSH4",
      "path": "39",
      "value": "0x210FA96B"
    },
    "422": {
      "fn": null,
      "offset": [
        826,
        15781
      ],
      "op": "EQ",
      "path": "39"
    },
    "423": {
      "fn": null,
      "offset": [
        826,
        15781
      ],
      "op": "PUSH2",
      "path": "39",
      "value": "0x2BA"
    },
    "426": {
      "fn": null,
      "offset": [
        826,
        15781
      ],
      "op": "JUMPI",
      "path": "39"
    },
    "427": {
      "fn": null,
      "offset": [
        826,
        15781
      ],
      "op": "DUP1",
      "path": "39"
    },
    "428": {
      "fn": null,
      "offset": [
        826,
        15781
      ],
      "op": "PUSH4",
      "path": "39",
      "value": "0x33E085C1"
    },
    "433": {
      "fn": null,
      "offset": [
        826,
        15781
      ],
      "op": "EQ",
      "path": "39"
    },
    "434": {
      "fn": null,
      "offset": [
        826,
        15781
      ],
      "op": "PUSH2",
      "path": "39",
      "value": "0x2DA"
    },
    "437": {
      "fn": null,
      "offset": [
        826,
        15781
      ],
      "op": "JUMPI",
      "path": "39"
    },
    "438": {
      "fn": null,
      "offset": [
        826,
        15781
      ],
      "op": "DUP1",
      "path": "39"
    },
    "439": {
      "fn": null,
      "offset": [
        826,
        15781
      ],
      "op": "PUSH4",
      "path": "39",
      "value": "0x3D1A350E"
    },
    "444": {
      "fn": null,
      "offset": [
        826,
        15781
      ],
      "op": "EQ",
      "path": "39"
    },
    "445": {
      "fn": null,
      "offset": [
        826,
        15781
      ],
      "op": "PUSH2",
      "path": "39",
      "value": "0x2ED"
    },
    "448": {
      "fn": null,
      "offset": [
        826,
        15781
      ],
      "op": "JUMPI",
      "path": "39"
    },
    "449": {
      "fn": null,
      "offset": [
        826,
        15781
      ],
      "op": "DUP1",
      "path": "39"
    },
    "450": {
      "fn": null,
      "offset": [
        826,
        15781
      ],
      "op": "PUSH4",
      "path": "39",
      "value": "0x42966C68"
    },
    "455": {
      "fn": null,
      "offset": [
        826,
        15781
      ],
      "op": "EQ",
      "path": "39"
    },
    "456": {
      "fn": null,
      "offset": [
        826,
        15781
      ],
      "op": "PUSH2",
      "path": "39",
      "value": "0x300"
    },
    "459": {
      "fn": null,
      "offset": [
        826,
        15781
      ],
      "op": "JUMPI",
      "path": "39"
    },
    "460": {
      "fn": null,
      "offset": [
        826,
        15781
      ],
      "op": "STOP",
      "path": "39"
    },
    "461": {
      "fn": null,
      "offset": [
        826,
        15781
      ],
      "op": "JUMPDEST",
      "path": "39"
    },
    "462": {
      "fn": null,
      "offset": [
        826,
        15781
      ],
      "op": "DUP1",
      "path": "39"
    },
    "463": {
      "fn": null,
      "offset": [
        826,
        15781
      ],
      "op": "PUSH3",
      "path": "39",
      "value": "0xE4768B"
    },
    "467": {
      "fn": null,
      "offset": [
        826,
        15781
      ],
      "op": "EQ",
      "path": "39"
    },
    "468": {
      "fn": null,
      "offset": [
        826,
        15781
      ],
      "op": "PUSH2",
      "path": "39",
      "value": "0x203"
    },
    "471": {
      "fn": null,
      "offset": [
        826,
        15781
      ],
      "op": "JUMPI",
      "path": "39"
    },
    "472": {
      "fn": null,
      "offset": [
        826,
        15781
      ],
      "op": "DUP1",
      "path": "39"
    },
    "473": {
      "fn": null,
      "offset": [
        826,
        15781
      ],
      "op": "PUSH4",
      "path": "39",
      "value": "0x1FFC9A7"
    },
    "478": {
      "fn": null,
      "offset": [
        826,
        15781
      ],
      "op": "EQ",
      "path": "39"
    },
    "479": {
      "fn": null,
      "offset": [
        826,
        15781
      ],
      "op": "PUSH2",
      "path": "39",
      "value": "0x223"
    },
    "482": {
      "fn": null,
      "offset": [
        826,
        15781
      ],
      "op": "JUMPI",
      "path": "39"
    },
    "483": {
      "fn": null,
      "offset": [
        826,
        15781
      ],
      "op": "DUP1",
      "path": "39"
    },
    "484": {
      "fn": null,
      "offset": [
        826,
        15781
      ],
      "op": "PUSH4",
      "path": "39",
      "value": "0x6FDDE03"
    },
    "489": {
      "fn": null,
      "offset": [
        826,
        15781
      ],
      "op": "EQ",
      "path": "39"
    },
    "490": {
      "fn": null,
      "offset": [
        826,
        15781
      ],
      "op": "PUSH2",
      "path": "39",
      "value": "0x258"
    },
    "493": {
      "fn": null,
      "offset": [
        826,
        15781
      ],
      "op": "JUMPI",
      "path": "39"
    },
    "494": {
      "fn": null,
      "offset": [
        826,
        15781
      ],
      "op": "DUP1",
      "path": "39"
    },
    "495": {
      "fn": null,
      "offset": [
        826,
        15781
      ],
      "op": "PUSH4",
      "path": "39",
      "value": "0x8C92E57"
    },
    "500": {
      "fn": null,
      "offset": [
        826,
        15781
      ],
      "op": "EQ",
      "path": "39"
    },
    "501": {
      "fn": null,
      "offset": [
        826,
        15781
      ],
      "op": "PUSH2",
      "path": "39",
      "value": "0x27A"
    },
    "504": {
      "fn": null,
      "offset": [
        826,
        15781
      ],
      "op": "JUMPI",
      "path": "39"
    },
    "505": {
      "fn": null,
      "offset": [
        826,
        15781
      ],
      "op": "STOP",
      "path": "39"
    },
    "506": {
      "fn": null,
      "offset": [
        826,
        15781
      ],
      "op": "JUMPDEST",
      "path": "39"
    },
    "507": {
      "fn": null,
      "offset": [
        826,
        15781
      ],
      "op": "CALLDATASIZE",
      "path": "39"
    },
    "508": {
      "fn": null,
      "offset": [
        826,
        15781
      ],
      "op": "PUSH2",
      "path": "39",
      "value": "0x201"
    },
    "511": {
      "fn": null,
      "offset": [
        826,
        15781
      ],
      "op": "JUMPI",
      "path": "39"
    },
    "512": {
      "fn": null,
      "offset": [
        826,
        15781
      ],
      "op": "STOP",
      "path": "39"
    },
    "513": {
      "fn": null,
      "offset": [
        826,
        15781
      ],
      "op": "JUMPDEST",
      "path": "39"
    },
    "514": {
      "fn": null,
      "offset": [
        826,
        15781
      ],
      "op": "STOP",
      "path": "39"
    },
    "515": {
      "fn": "SoulboundRedeemable.setPrice",
      "offset": [
        3672,
        4009
      ],
      "op": "JUMPDEST",
      "path": "39"
    },
    "516": {
      "fn": "SoulboundRedeemable.setPrice",
      "offset": [
        3672,
        4009
      ],
      "op": "CALLVALUE",
      "path": "39"
    },
    "517": {
      "fn": "SoulboundRedeemable.setPrice",
      "offset": [
        3672,
        4009
      ],
      "op": "DUP1",
      "path": "39"
    },
    "518": {
      "fn": "SoulboundRedeemable.setPrice",
      "offset": [
        3672,
        4009
      ],
      "op": "ISZERO",
      "path": "39"
    },
    "519": {
      "fn": "SoulboundRedeemable.setPrice",
      "offset": [
        3672,
        4009
      ],
      "op": "PUSH2",
      "path": "39",
      "value": "0x20F"
    },
    "522": {
      "fn": "SoulboundRedeemable.setPrice",
      "offset": [
        3672,
        4009
      ],
      "op": "JUMPI",
      "path": "39"
    },
    "523": {
      "fn": "SoulboundRedeemable.setPrice",
      "offset": [
        3672,
        4009
      ],
      "op": "PUSH1",
      "path": "39",
      "value": "0x0"
    },
    "525": {
      "fn": "SoulboundRedeemable.setPrice",
      "offset": [
        3672,
        4009
      ],
      "op": "DUP1",
      "path": "39"
    },
    "526": {
      "fn": "SoulboundRedeemable.setPrice",
      "offset": [
        3672,
        4009
      ],
      "op": "REVERT",
      "path": "39"
    },
    "527": {
      "fn": "SoulboundRedeemable.setPrice",
      "offset": [
        3672,
        4009
      ],
      "op": "JUMPDEST",
      "path": "39"
    },
    "528": {
      "op": "POP"
    },
    "529": {
      "fn": "SoulboundRedeemable.setPrice",
      "offset": [
        3672,
        4009
      ],
      "op": "PUSH2",
      "path": "39",
      "value": "0x201"
    },
    "532": {
      "fn": "SoulboundRedeemable.setPrice",
      "offset": [
        3672,
        4009
      ],
      "op": "PUSH2",
      "path": "39",
      "value": "0x21E"
    },
    "535": {
      "fn": "SoulboundRedeemable.setPrice",
      "offset": [
        3672,
        4009
      ],
      "op": "CALLDATASIZE",
      "path": "39"
    },
    "536": {
      "fn": "SoulboundRedeemable.setPrice",
      "offset": [
        3672,
        4009
      ],
      "op": "PUSH1",
      "path": "39",
      "value": "0x4"
    },
    "538": {
      "fn": "SoulboundRedeemable.setPrice",
      "offset": [
        3672,
        4009
      ],
      "op": "PUSH2",
      "path": "39",
      "value": "0x2719"
    },
    "541": {
      "fn": "SoulboundRedeemable.setPrice",
      "jump": "i",
      "offset": [
        3672,
        4009
      ],
      "op": "JUMP",
      "path": "39"
    },
    "542": {
      "fn": "SoulboundRedeemable.setPrice",
      "offset": [
        3672,
        4009
      ],
      "op": "JUMPDEST",
      "path": "39"
    },
    "543": {
      "fn": "SoulboundRedeemable.setPrice",
      "offset": [
        3672,
        4009
      ],
      "op": "PUSH2",
      "path": "39",
      "value": "0x687"
    },
    "546": {
      "fn": "SoulboundRedeemable.setPrice",
      "jump": "i",
      "offset": [
        3672,
        4009
      ],
      "op": "JUMP",
      "path": "39"
    },
    "547": {
      "fn": "ERC4973.supportsInterface",
      "offset": [
        4448,
        4776
      ],
      "op": "JUMPDEST",
      "path": "41"
    },
    "548": {
      "fn": "ERC4973.supportsInterface",
      "offset": [
        4448,
        4776
      ],
      "op": "CALLVALUE",
      "path": "41"
    },
    "549": {
      "fn": "ERC4973.supportsInterface",
      "offset": [
        4448,
        4776
      ],
      "op": "DUP1",
      "path": "41"
    },
    "550": {
      "fn": "ERC4973.supportsInterface",
      "offset": [
        4448,
        4776
      ],
      "op": "ISZERO",
      "path": "41"
    },
    "551": {
      "fn": "ERC4973.supportsInterface",
      "offset": [
        4448,
        4776
      ],
      "op": "PUSH2",
      "path": "41",
      "value": "0x22F"
    },
    "554": {
      "fn": "ERC4973.supportsInterface",
      "offset": [
        4448,
        4776
      ],
      "op": "JUMPI",
      "path": "41"
    },
    "555": {
      "fn": "ERC4973.supportsInterface",
      "offset": [
        4448,
        4776
      ],
      "op": "PUSH1",
      "path": "41",
      "value": "0x0"
    },
    "557": {
      "fn": "ERC4973.supportsInterface",
      "offset": [
        4448,
        4776
      ],
      "op": "DUP1",
      "path": "41"
    },
    "558": {
      "fn": "ERC4973.supportsInterface",
      "offset": [
        4448,
        4776
      ],
      "op": "REVERT",
      "path": "41"
    },
    "559": {
      "fn": "ERC4973.supportsInterface",
      "offset": [
        4448,
        4776
      ],
      "op": "JUMPDEST",
      "path": "41"
    },
    "560": {
      "op": "POP"
    },
    "561": {
      "fn": "ERC4973.supportsInterface",
      "offset": [
        4448,
        4776
      ],
      "op": "PUSH2",
      "path": "41",
      "value": "0x243"
    },
    "564": {
      "fn": "ERC4973.supportsInterface",
      "offset": [
        4448,
        4776
      ],
      "op": "PUSH2",
      "path": "41",
      "value": "0x23E"
    },
    "567": {
      "fn": "ERC4973.supportsInterface",
      "offset": [
        4448,
        4776
      ],
      "op": "CALLDATASIZE",
      "path": "41"
    },
    "568": {
      "fn": "ERC4973.supportsInterface",
      "offset": [
        4448,
        4776
      ],
      "op": "PUSH1",
      "path": "41",
      "value": "0x4"
    },
    "570": {
      "fn": "ERC4973.supportsInterface",
      "offset": [
        4448,
        4776
      ],
      "op": "PUSH2",
      "path": "41",
      "value": "0x2743"
    },
    "573": {
      "fn": "ERC4973.supportsInterface",
      "jump": "i",
      "offset": [
        4448,
        4776
      ],
      "op": "JUMP",
      "path": "41"
    },
    "574": {
      "fn": "ERC4973.supportsInterface",
      "offset": [
        4448,
        4776
      ],
      "op": "JUMPDEST",
      "path": "41"
    },
    "575": {
      "fn": "ERC4973.supportsInterface",
      "offset": [
        4448,
        4776
      ],
      "op": "PUSH2",
      "path": "41",
      "value": "0x756"
    },
    "578": {
      "fn": "ERC4973.supportsInterface",
      "jump": "i",
      "offset": [
        4448,
        4776
      ],
      "op": "JUMP",
      "path": "41"
    },
    "579": {
      "fn": "ERC4973.supportsInterface",
      "offset": [
        4448,
        4776
      ],
      "op": "JUMPDEST",
      "path": "41"
    },
    "580": {
      "fn": "ERC4973.supportsInterface",
      "offset": [
        4448,
        4776
      ],
      "op": "PUSH1",
      "path": "41",
      "value": "0x40"
    },
    "582": {
      "fn": "ERC4973.supportsInterface",
      "offset": [
        4448,
        4776
      ],
      "op": "MLOAD",
      "path": "41"
    },
    "583": {
      "op": "SWAP1"
    },
    "584": {
      "op": "ISZERO"
    },
    "585": {
      "op": "ISZERO"
    },
    "586": {
      "op": "DUP2"
    },
    "587": {
      "op": "MSTORE"
    },
    "588": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "590": {
      "op": "ADD"
    },
    "591": {
      "fn": "ERC4973.supportsInterface",
      "offset": [
        4448,
        4776
      ],
      "op": "JUMPDEST",
      "path": "41"
    },
    "592": {
      "fn": "ERC4973.supportsInterface",
      "offset": [
        4448,
        4776
      ],
      "op": "PUSH1",
      "path": "41",
      "value": "0x40"
    },
    "594": {
      "fn": "ERC4973.supportsInterface",
      "offset": [
        4448,
        4776
      ],
      "op": "MLOAD",
      "path": "41"
    },
    "595": {
      "fn": "ERC4973.supportsInterface",
      "offset": [
        4448,
        4776
      ],
      "op": "DUP1",
      "path": "41"
    },
    "596": {
      "fn": "ERC4973.supportsInterface",
      "offset": [
        4448,
        4776
      ],
      "op": "SWAP2",
      "path": "41"
    },
    "597": {
      "fn": "ERC4973.supportsInterface",
      "offset": [
        4448,
        4776
      ],
      "op": "SUB",
      "path": "41"
    },
    "598": {
      "fn": "ERC4973.supportsInterface",
      "offset": [
        4448,
        4776
      ],
      "op": "SWAP1",
      "path": "41"
    },
    "599": {
      "fn": "ERC4973.supportsInterface",
      "offset": [
        4448,
        4776
      ],
      "op": "RETURN",
      "path": "41"
    },
    "600": {
      "fn": "ERC4973.name",
      "offset": [
        4782,
        4880
      ],
      "op": "JUMPDEST",
      "path": "41"
    },
    "601": {
      "fn": "ERC4973.name",
      "offset": [
        4782,
        4880
      ],
      "op": "CALLVALUE",
      "path": "41"
    },
    "602": {
      "fn": "ERC4973.name",
      "offset": [
        4782,
        4880
      ],
      "op": "DUP1",
      "path": "41"
    },
    "603": {
      "fn": "ERC4973.name",
      "offset": [
        4782,
        4880
      ],
      "op": "ISZERO",
      "path": "41"
    },
    "604": {
      "fn": "ERC4973.name",
      "offset": [
        4782,
        4880
      ],
      "op": "PUSH2",
      "path": "41",
      "value": "0x264"
    },
    "607": {
      "fn": "ERC4973.name",
      "offset": [
        4782,
        4880
      ],
      "op": "JUMPI",
      "path": "41"
    },
    "608": {
      "fn": "ERC4973.name",
      "offset": [
        4782,
        4880
      ],
      "op": "PUSH1",
      "path": "41",
      "value": "0x0"
    },
    "610": {
      "fn": "ERC4973.name",
      "offset": [
        4782,
        4880
      ],
      "op": "DUP1",
      "path": "41"
    },
    "611": {
      "fn": "ERC4973.name",
      "offset": [
        4782,
        4880
      ],
      "op": "REVERT",
      "path": "41"
    },
    "612": {
      "fn": "ERC4973.name",
      "offset": [
        4782,
        4880
      ],
      "op": "JUMPDEST",
      "path": "41"
    },
    "613": {
      "fn": "ERC4973.name",
      "offset": [
        4782,
        4880
      ],
      "op": "POP",
      "path": "41"
    },
    "614": {
      "fn": "ERC4973.name",
      "offset": [
        4782,
        4880
      ],
      "op": "PUSH2",
      "path": "41",
      "value": "0x26D"
    },
    "617": {
      "fn": "ERC4973.name",
      "offset": [
        4782,
        4880
      ],
      "op": "PUSH2",
      "path": "41",
      "value": "0x7A8"
    },
    "620": {
      "fn": "ERC4973.name",
      "jump": "i",
      "offset": [
        4782,
        4880
      ],
      "op": "JUMP",
      "path": "41"
    },
    "621": {
      "fn": "ERC4973.name",
      "offset": [
        4782,
        4880
      ],
      "op": "JUMPDEST",
      "path": "41"
    },
    "622": {
      "fn": "ERC4973.name",
      "offset": [
        4782,
        4880
      ],
      "op": "PUSH1",
      "path": "41",
      "value": "0x40"
    },
    "624": {
      "fn": "ERC4973.name",
      "offset": [
        4782,
        4880
      ],
      "op": "MLOAD",
      "path": "41"
    },
    "625": {
      "fn": "ERC4973.name",
      "offset": [
        4782,
        4880
      ],
      "op": "PUSH2",
      "path": "41",
      "value": "0x24F"
    },
    "628": {
      "fn": "ERC4973.name",
      "offset": [
        4782,
        4880
      ],
      "op": "SWAP2",
      "path": "41"
    },
    "629": {
      "fn": "ERC4973.name",
      "offset": [
        4782,
        4880
      ],
      "op": "SWAP1",
      "path": "41"
    },
    "630": {
      "fn": "ERC4973.name",
      "offset": [
        4782,
        4880
      ],
      "op": "PUSH2",
      "path": "41",
      "value": "0x279D"
    },
    "633": {
      "fn": "ERC4973.name",
      "jump": "i",
      "offset": [
        4782,
        4880
      ],
      "op": "JUMP",
      "path": "41"
    },
    "634": {
      "fn": "SoulboundCore.revokeWithSignature",
      "offset": [
        4274,
        5201
      ],
      "op": "JUMPDEST",
      "path": "38"
    },
    "635": {
      "fn": "SoulboundCore.revokeWithSignature",
      "offset": [
        4274,
        5201
      ],
      "op": "CALLVALUE",
      "path": "38"
    },
    "636": {
      "fn": "SoulboundCore.revokeWithSignature",
      "offset": [
        4274,
        5201
      ],
      "op": "DUP1",
      "path": "38"
    },
    "637": {
      "fn": "SoulboundCore.revokeWithSignature",
      "offset": [
        4274,
        5201
      ],
      "op": "ISZERO",
      "path": "38"
    },
    "638": {
      "fn": "SoulboundCore.revokeWithSignature",
      "offset": [
        4274,
        5201
      ],
      "op": "PUSH2",
      "path": "38",
      "value": "0x286"
    },
    "641": {
      "fn": "SoulboundCore.revokeWithSignature",
      "offset": [
        4274,
        5201
      ],
      "op": "JUMPI",
      "path": "38"
    },
    "642": {
      "fn": "SoulboundCore.revokeWithSignature",
      "offset": [
        4274,
        5201
      ],
      "op": "PUSH1",
      "path": "38",
      "value": "0x0"
    },
    "644": {
      "fn": "SoulboundCore.revokeWithSignature",
      "offset": [
        4274,
        5201
      ],
      "op": "DUP1",
      "path": "38"
    },
    "645": {
      "fn": "SoulboundCore.revokeWithSignature",
      "offset": [
        4274,
        5201
      ],
      "op": "REVERT",
      "path": "38"
    },
    "646": {
      "fn": "SoulboundCore.revokeWithSignature",
      "offset": [
        4274,
        5201
      ],
      "op": "JUMPDEST",
      "path": "38"
    },
    "647": {
      "op": "POP"
    },
    "648": {
      "fn": "SoulboundCore.revokeWithSignature",
      "offset": [
        4274,
        5201
      ],
      "op": "PUSH2",
      "path": "38",
      "value": "0x201"
    },
    "651": {
      "fn": "SoulboundCore.revokeWithSignature",
      "offset": [
        4274,
        5201
      ],
      "op": "PUSH2",
      "path": "38",
      "value": "0x295"
    },
    "654": {
      "fn": "SoulboundCore.revokeWithSignature",
      "offset": [
        4274,
        5201
      ],
      "op": "CALLDATASIZE",
      "path": "38"
    },
    "655": {
      "fn": "SoulboundCore.revokeWithSignature",
      "offset": [
        4274,
        5201
      ],
      "op": "PUSH1",
      "path": "38",
      "value": "0x4"
    },
    "657": {
      "fn": "SoulboundCore.revokeWithSignature",
      "offset": [
        4274,
        5201
      ],
      "op": "PUSH2",
      "path": "38",
      "value": "0x2873"
    },
    "660": {
      "fn": "SoulboundCore.revokeWithSignature",
      "jump": "i",
      "offset": [
        4274,
        5201
      ],
      "op": "JUMP",
      "path": "38"
    },
    "661": {
      "fn": "SoulboundCore.revokeWithSignature",
      "offset": [
        4274,
        5201
      ],
      "op": "JUMPDEST",
      "path": "38"
    },
    "662": {
      "fn": "SoulboundCore.revokeWithSignature",
      "offset": [
        4274,
        5201
      ],
      "op": "PUSH2",
      "path": "38",
      "value": "0x83A"
    },
    "665": {
      "fn": "SoulboundCore.revokeWithSignature",
      "jump": "i",
      "offset": [
        4274,
        5201
      ],
      "op": "JUMP",
      "path": "38"
    },
    "666": {
      "fn": "SoulboundWithSignature.ownerRevokeWithSignature",
      "offset": [
        2850,
        3565
      ],
      "op": "JUMPDEST",
      "path": "40"
    },
    "667": {
      "fn": "SoulboundWithSignature.ownerRevokeWithSignature",
      "offset": [
        2850,
        3565
      ],
      "op": "CALLVALUE",
      "path": "40"
    },
    "668": {
      "fn": "SoulboundWithSignature.ownerRevokeWithSignature",
      "offset": [
        2850,
        3565
      ],
      "op": "DUP1",
      "path": "40"
    },
    "669": {
      "fn": "SoulboundWithSignature.ownerRevokeWithSignature",
      "offset": [
        2850,
        3565
      ],
      "op": "ISZERO",
      "path": "40"
    },
    "670": {
      "fn": "SoulboundWithSignature.ownerRevokeWithSignature",
      "offset": [
        2850,
        3565
      ],
      "op": "PUSH2",
      "path": "40",
      "value": "0x2A6"
    },
    "673": {
      "fn": "SoulboundWithSignature.ownerRevokeWithSignature",
      "offset": [
        2850,
        3565
      ],
      "op": "JUMPI",
      "path": "40"
    },
    "674": {
      "fn": "SoulboundWithSignature.ownerRevokeWithSignature",
      "offset": [
        2850,
        3565
      ],
      "op": "PUSH1",
      "path": "40",
      "value": "0x0"
    },
    "676": {
      "fn": "SoulboundWithSignature.ownerRevokeWithSignature",
      "offset": [
        2850,
        3565
      ],
      "op": "DUP1",
      "path": "40"
    },
    "677": {
      "fn": "SoulboundWithSignature.ownerRevokeWithSignature",
      "offset": [
        2850,
        3565
      ],
      "op": "REVERT",
      "path": "40"
    },
    "678": {
      "fn": "SoulboundWithSignature.ownerRevokeWithSignature",
      "offset": [
        2850,
        3565
      ],
      "op": "JUMPDEST",
      "path": "40"
    },
    "679": {
      "op": "POP"
    },
    "680": {
      "fn": "SoulboundWithSignature.ownerRevokeWithSignature",
      "offset": [
        2850,
        3565
      ],
      "op": "PUSH2",
      "path": "40",
      "value": "0x201"
    },
    "683": {
      "fn": "SoulboundWithSignature.ownerRevokeWithSignature",
      "offset": [
        2850,
        3565
      ],
      "op": "PUSH2",
      "path": "40",
      "value": "0x2B5"
    },
    "686": {
      "fn": "SoulboundWithSignature.ownerRevokeWithSignature",
      "offset": [
        2850,
        3565
      ],
      "op": "CALLDATASIZE",
      "path": "40"
    },
    "687": {
      "fn": "SoulboundWithSignature.ownerRevokeWithSignature",
      "offset": [
        2850,
        3565
      ],
      "op": "PUSH1",
      "path": "40",
      "value": "0x4"
    },
    "689": {
      "fn": "SoulboundWithSignature.ownerRevokeWithSignature",
      "offset": [
        2850,
        3565
      ],
      "op": "PUSH2",
      "path": "40",
      "value": "0x2873"
    },
    "692": {
      "fn": "SoulboundWithSignature.ownerRevokeWithSignature",
      "jump": "i",
      "offset": [
        2850,
        3565
      ],
      "op": "JUMP",
      "path": "40"
    },
    "693": {
      "fn": "SoulboundWithSignature.ownerRevokeWithSignature",
      "offset": [
        2850,
        3565
      ],
      "op": "JUMPDEST",
      "path": "40"
    },
    "694": {
      "fn": "SoulboundWithSignature.ownerRevokeWithSignature",
      "offset": [
        2850,
        3565
      ],
      "op": "PUSH2",
      "path": "40",
      "value": "0x970"
    },
    "697": {
      "fn": "SoulboundWithSignature.ownerRevokeWithSignature",
      "jump": "i",
      "offset": [
        2850,
        3565
      ],
      "op": "JUMP",
      "path": "40"
    },
    "698": {
      "fn": "SoulboundCore.generateTokenURI",
      "offset": [
        6139,
        6521
      ],
      "op": "JUMPDEST",
      "path": "38"
    },
    "699": {
      "fn": "SoulboundCore.generateTokenURI",
      "offset": [
        6139,
        6521
      ],
      "op": "CALLVALUE",
      "path": "38"
    },
    "700": {
      "fn": "SoulboundCore.generateTokenURI",
      "offset": [
        6139,
        6521
      ],
      "op": "DUP1",
      "path": "38"
    },
    "701": {
      "fn": "SoulboundCore.generateTokenURI",
      "offset": [
        6139,
        6521
      ],
      "op": "ISZERO",
      "path": "38"
    },
    "702": {
      "fn": "SoulboundCore.generateTokenURI",
      "offset": [
        6139,
        6521
      ],
      "op": "PUSH2",
      "path": "38",
      "value": "0x2C6"
    },
    "705": {
      "fn": "SoulboundCore.generateTokenURI",
      "offset": [
        6139,
        6521
      ],
      "op": "JUMPI",
      "path": "38"
    },
    "706": {
      "fn": "SoulboundCore.generateTokenURI",
      "offset": [
        6139,
        6521
      ],
      "op": "PUSH1",
      "path": "38",
      "value": "0x0"
    },
    "708": {
      "fn": "SoulboundCore.generateTokenURI",
      "offset": [
        6139,
        6521
      ],
      "op": "DUP1",
      "path": "38"
    },
    "709": {
      "fn": "SoulboundCore.generateTokenURI",
      "offset": [
        6139,
        6521
      ],
      "op": "REVERT",
      "path": "38"
    },
    "710": {
      "fn": "SoulboundCore.generateTokenURI",
      "offset": [
        6139,
        6521
      ],
      "op": "JUMPDEST",
      "path": "38"
    },
    "711": {
      "op": "POP"
    },
    "712": {
      "fn": "SoulboundCore.generateTokenURI",
      "offset": [
        6139,
        6521
      ],
      "op": "PUSH2",
      "path": "38",
      "value": "0x26D"
    },
    "715": {
      "fn": "SoulboundCore.generateTokenURI",
      "offset": [
        6139,
        6521
      ],
      "op": "PUSH2",
      "path": "38",
      "value": "0x2D5"
    },
    "718": {
      "fn": "SoulboundCore.generateTokenURI",
      "offset": [
        6139,
        6521
      ],
      "op": "CALLDATASIZE",
      "path": "38"
    },
    "719": {
      "fn": "SoulboundCore.generateTokenURI",
      "offset": [
        6139,
        6521
      ],
      "op": "PUSH1",
      "path": "38",
      "value": "0x4"
    },
    "721": {
      "fn": "SoulboundCore.generateTokenURI",
      "offset": [
        6139,
        6521
      ],
      "op": "PUSH2",
      "path": "38",
      "value": "0x28C3"
    },
    "724": {
      "fn": "SoulboundCore.generateTokenURI",
      "jump": "i",
      "offset": [
        6139,
        6521
      ],
      "op": "JUMP",
      "path": "38"
    },
    "725": {
      "fn": "SoulboundCore.generateTokenURI",
      "offset": [
        6139,
        6521
      ],
      "op": "JUMPDEST",
      "path": "38"
    },
    "726": {
      "fn": "SoulboundCore.generateTokenURI",
      "offset": [
        6139,
        6521
      ],
      "op": "PUSH2",
      "path": "38",
      "value": "0xA0C"
    },
    "729": {
      "fn": "SoulboundCore.generateTokenURI",
      "jump": "i",
      "offset": [
        6139,
        6521
      ],
      "op": "JUMP",
      "path": "38"
    },
    "730": {
      "fn": "SoulboundRedeemable.payToReceiveToken",
      "offset": [
        6103,
        8070
      ],
      "op": "JUMPDEST",
      "path": "39"
    },
    "731": {
      "fn": "SoulboundRedeemable.payToReceiveToken",
      "offset": [
        6103,
        8070
      ],
      "op": "PUSH2",
      "path": "39",
      "value": "0x201"
    },
    "734": {
      "fn": "SoulboundRedeemable.payToReceiveToken",
      "offset": [
        6103,
        8070
      ],
      "op": "PUSH2",
      "path": "39",
      "value": "0x2E8"
    },
    "737": {
      "fn": "SoulboundRedeemable.payToReceiveToken",
      "offset": [
        6103,
        8070
      ],
      "op": "CALLDATASIZE",
      "path": "39"
    },
    "738": {
      "fn": "SoulboundRedeemable.payToReceiveToken",
      "offset": [
        6103,
        8070
      ],
      "op": "PUSH1",
      "path": "39",
      "value": "0x4"
    },
    "740": {
      "fn": "SoulboundRedeemable.payToReceiveToken",
      "offset": [
        6103,
        8070
      ],
      "op": "PUSH2",
      "path": "39",
      "value": "0x2719"
    },
    "743": {
      "fn": "SoulboundRedeemable.payToReceiveToken",
      "jump": "i",
      "offset": [
        6103,
        8070
      ],
      "op": "JUMP",
      "path": "39"
    },
    "744": {
      "fn": "SoulboundRedeemable.payToReceiveToken",
      "offset": [
        6103,
        8070
      ],
      "op": "JUMPDEST",
      "path": "39"
    },
    "745": {
      "fn": "SoulboundRedeemable.payToReceiveToken",
      "offset": [
        6103,
        8070
      ],
      "op": "PUSH2",
      "path": "39",
      "value": "0xA8E"
    },
    "748": {
      "fn": "SoulboundRedeemable.payToReceiveToken",
      "jump": "i",
      "offset": [
        6103,
        8070
      ],
      "op": "JUMP",
      "path": "39"
    },
    "749": {
      "fn": "SoulboundRedeemable.redeemMintedToken",
      "offset": [
        10643,
        12123
      ],
      "op": "JUMPDEST",
      "path": "39"
    },
    "750": {
      "fn": "SoulboundRedeemable.redeemMintedToken",
      "offset": [
        10643,
        12123
      ],
      "op": "PUSH2",
      "path": "39",
      "value": "0x201"
    },
    "753": {
      "fn": "SoulboundRedeemable.redeemMintedToken",
      "offset": [
        10643,
        12123
      ],
      "op": "PUSH2",
      "path": "39",
      "value": "0x2FB"
    },
    "756": {
      "fn": "SoulboundRedeemable.redeemMintedToken",
      "offset": [
        10643,
        12123
      ],
      "op": "CALLDATASIZE",
      "path": "39"
    },
    "757": {
      "fn": "SoulboundRedeemable.redeemMintedToken",
      "offset": [
        10643,
        12123
      ],
      "op": "PUSH1",
      "path": "39",
      "value": "0x4"
    },
    "759": {
      "fn": "SoulboundRedeemable.redeemMintedToken",
      "offset": [
        10643,
        12123
      ],
      "op": "PUSH2",
      "path": "39",
      "value": "0x28DC"
    },
    "762": {
      "fn": "SoulboundRedeemable.redeemMintedToken",
      "jump": "i",
      "offset": [
        10643,
        12123
      ],
      "op": "JUMP",
      "path": "39"
    },
    "763": {
      "fn": "SoulboundRedeemable.redeemMintedToken",
      "offset": [
        10643,
        12123
      ],
      "op": "JUMPDEST",
      "path": "39"
    },
    "764": {
      "fn": "SoulboundRedeemable.redeemMintedToken",
      "offset": [
        10643,
        12123
      ],
      "op": "PUSH2",
      "path": "39",
      "value": "0xDA6"
    },
    "767": {
      "fn": "SoulboundRedeemable.redeemMintedToken",
      "jump": "i",
      "offset": [
        10643,
        12123
      ],
      "op": "JUMP",
      "path": "39"
    },
    "768": {
      "fn": "ERC4973.burn",
      "offset": [
        5243,
        5408
      ],
      "op": "JUMPDEST",
      "path": "41"
    },
    "769": {
      "fn": "ERC4973.burn",
      "offset": [
        5243,
        5408
      ],
      "op": "CALLVALUE",
      "path": "41"
    },
    "770": {
      "fn": "ERC4973.burn",
      "offset": [
        5243,
        5408
      ],
      "op": "DUP1",
      "path": "41"
    },
    "771": {
      "fn": "ERC4973.burn",
      "offset": [
        5243,
        5408
      ],
      "op": "ISZERO",
      "path": "41"
    },
    "772": {
      "fn": "ERC4973.burn",
      "offset": [
        5243,
        5408
      ],
      "op": "PUSH2",
      "path": "41",
      "value": "0x30C"
    },
    "775": {
      "fn": "ERC4973.burn",
      "offset": [
        5243,
        5408
      ],
      "op": "JUMPI",
      "path": "41"
    },
    "776": {
      "fn": "ERC4973.burn",
      "offset": [
        5243,
        5408
      ],
      "op": "PUSH1",
      "path": "41",
      "value": "0x0"
    },
    "778": {
      "fn": "ERC4973.burn",
      "offset": [
        5243,
        5408
      ],
      "op": "DUP1",
      "path": "41"
    },
    "779": {
      "fn": "ERC4973.burn",
      "offset": [
        5243,
        5408
      ],
      "op": "REVERT",
      "path": "41"
    },
    "780": {
      "fn": "ERC4973.burn",
      "offset": [
        5243,
        5408
      ],
      "op": "JUMPDEST",
      "path": "41"
    },
    "781": {
      "op": "POP"
    },
    "782": {
      "fn": "ERC4973.burn",
      "offset": [
        5243,
        5408
      ],
      "op": "PUSH2",
      "path": "41",
      "value": "0x201"
    },
    "785": {
      "fn": "ERC4973.burn",
      "offset": [
        5243,
        5408
      ],
      "op": "PUSH2",
      "path": "41",
      "value": "0x31B"
    },
    "788": {
      "fn": "ERC4973.burn",
      "offset": [
        5243,
        5408
      ],
      "op": "CALLDATASIZE",
      "path": "41"
    },
    "789": {
      "fn": "ERC4973.burn",
      "offset": [
        5243,
        5408
      ],
      "op": "PUSH1",
      "path": "41",
      "value": "0x4"
    },
    "791": {
      "fn": "ERC4973.burn",
      "offset": [
        5243,
        5408
      ],
      "op": "PUSH2",
      "path": "41",
      "value": "0x28C3"
    },
    "794": {
      "fn": "ERC4973.burn",
      "jump": "i",
      "offset": [
        5243,
        5408
      ],
      "op": "JUMP",
      "path": "41"
    },
    "795": {
      "fn": "ERC4973.burn",
      "offset": [
        5243,
        5408
      ],
      "op": "JUMPDEST",
      "path": "41"
    },
    "796": {
      "fn": "ERC4973.burn",
      "offset": [
        5243,
        5408
      ],
      "op": "PUSH2",
      "path": "41",
      "value": "0x1098"
    },
    "799": {
      "fn": "ERC4973.burn",
      "jump": "i",
      "offset": [
        5243,
        5408
      ],
      "op": "JUMP",
      "path": "41"
    },
    "800": {
      "fn": "SoulboundRedeemable.withdraw",
      "offset": [
        14559,
        15200
      ],
      "op": "JUMPDEST",
      "path": "39"
    },
    "801": {
      "fn": "SoulboundRedeemable.withdraw",
      "offset": [
        14559,
        15200
      ],
      "op": "CALLVALUE",
      "path": "39"
    },
    "802": {
      "fn": "SoulboundRedeemable.withdraw",
      "offset": [
        14559,
        15200
      ],
      "op": "DUP1",
      "path": "39"
    },
    "803": {
      "fn": "SoulboundRedeemable.withdraw",
      "offset": [
        14559,
        15200
      ],
      "op": "ISZERO",
      "path": "39"
    },
    "804": {
      "fn": "SoulboundRedeemable.withdraw",
      "offset": [
        14559,
        15200
      ],
      "op": "PUSH2",
      "path": "39",
      "value": "0x32C"
    },
    "807": {
      "fn": "SoulboundRedeemable.withdraw",
      "offset": [
        14559,
        15200
      ],
      "op": "JUMPI",
      "path": "39"
    },
    "808": {
      "fn": "SoulboundRedeemable.withdraw",
      "offset": [
        14559,
        15200
      ],
      "op": "PUSH1",
      "path": "39",
      "value": "0x0"
    },
    "810": {
      "fn": "SoulboundRedeemable.withdraw",
      "offset": [
        14559,
        15200
      ],
      "op": "DUP1",
      "path": "39"
    },
    "811": {
      "fn": "SoulboundRedeemable.withdraw",
      "offset": [
        14559,
        15200
      ],
      "op": "REVERT",
      "path": "39"
    },
    "812": {
      "fn": "SoulboundRedeemable.withdraw",
      "offset": [
        14559,
        15200
      ],
      "op": "JUMPDEST",
      "path": "39"
    },
    "813": {
      "op": "POP"
    },
    "814": {
      "fn": "SoulboundRedeemable.withdraw",
      "offset": [
        14559,
        15200
      ],
      "op": "PUSH2",
      "path": "39",
      "value": "0x201"
    },
    "817": {
      "fn": "SoulboundRedeemable.withdraw",
      "offset": [
        14559,
        15200
      ],
      "op": "PUSH2",
      "path": "39",
      "value": "0x33B"
    },
    "820": {
      "fn": "SoulboundRedeemable.withdraw",
      "offset": [
        14559,
        15200
      ],
      "op": "CALLDATASIZE",
      "path": "39"
    },
    "821": {
      "fn": "SoulboundRedeemable.withdraw",
      "offset": [
        14559,
        15200
      ],
      "op": "PUSH1",
      "path": "39",
      "value": "0x4"
    },
    "823": {
      "fn": "SoulboundRedeemable.withdraw",
      "offset": [
        14559,
        15200
      ],
      "op": "PUSH2",
      "path": "39",
      "value": "0x290F"
    },
    "826": {
      "fn": "SoulboundRedeemable.withdraw",
      "jump": "i",
      "offset": [
        14559,
        15200
      ],
      "op": "JUMP",
      "path": "39"
    },
    "827": {
      "fn": "SoulboundRedeemable.withdraw",
      "offset": [
        14559,
        15200
      ],
      "op": "JUMPDEST",
      "path": "39"
    },
    "828": {
      "fn": "SoulboundRedeemable.withdraw",
      "offset": [
        14559,
        15200
      ],
      "op": "PUSH2",
      "path": "39",
      "value": "0x110D"
    },
    "831": {
      "fn": "SoulboundRedeemable.withdraw",
      "jump": "i",
      "offset": [
        14559,
        15200
      ],
      "op": "JUMP",
      "path": "39"
    },
    "832": {
      "fn": "Soulbound.isMinted",
      "offset": [
        5225,
        5373
      ],
      "op": "JUMPDEST",
      "path": "37"
    },
    "833": {
      "fn": "Soulbound.isMinted",
      "offset": [
        5225,
        5373
      ],
      "op": "CALLVALUE",
      "path": "37"
    },
    "834": {
      "fn": "Soulbound.isMinted",
      "offset": [
        5225,
        5373
      ],
      "op": "DUP1",
      "path": "37"
    },
    "835": {
      "fn": "Soulbound.isMinted",
      "offset": [
        5225,
        5373
      ],
      "op": "ISZERO",
      "path": "37"
    },
    "836": {
      "fn": "Soulbound.isMinted",
      "offset": [
        5225,
        5373
      ],
      "op": "PUSH2",
      "path": "37",
      "value": "0x34C"
    },
    "839": {
      "fn": "Soulbound.isMinted",
      "offset": [
        5225,
        5373
      ],
      "op": "JUMPI",
      "path": "37"
    },
    "840": {
      "fn": "Soulbound.isMinted",
      "offset": [
        5225,
        5373
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0x0"
    },
    "842": {
      "fn": "Soulbound.isMinted",
      "offset": [
        5225,
        5373
      ],
      "op": "DUP1",
      "path": "37"
    },
    "843": {
      "fn": "Soulbound.isMinted",
      "offset": [
        5225,
        5373
      ],
      "op": "REVERT",
      "path": "37"
    },
    "844": {
      "fn": "Soulbound.isMinted",
      "offset": [
        5225,
        5373
      ],
      "op": "JUMPDEST",
      "path": "37"
    },
    "845": {
      "op": "POP"
    },
    "846": {
      "fn": "Soulbound.isMinted",
      "offset": [
        5225,
        5373
      ],
      "op": "PUSH2",
      "path": "37",
      "value": "0x243"
    },
    "849": {
      "fn": "Soulbound.isMinted",
      "offset": [
        5225,
        5373
      ],
      "op": "PUSH2",
      "path": "37",
      "value": "0x35B"
    },
    "852": {
      "fn": "Soulbound.isMinted",
      "offset": [
        5225,
        5373
      ],
      "op": "CALLDATASIZE",
      "path": "37"
    },
    "853": {
      "fn": "Soulbound.isMinted",
      "offset": [
        5225,
        5373
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0x4"
    },
    "855": {
      "fn": "Soulbound.isMinted",
      "offset": [
        5225,
        5373
      ],
      "op": "PUSH2",
      "path": "37",
      "value": "0x2719"
    },
    "858": {
      "fn": "Soulbound.isMinted",
      "jump": "i",
      "offset": [
        5225,
        5373
      ],
      "op": "JUMP",
      "path": "37"
    },
    "859": {
      "fn": "Soulbound.isMinted",
      "offset": [
        5225,
        5373
      ],
      "op": "JUMPDEST",
      "path": "37"
    },
    "860": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "862": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "864": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "866": {
      "op": "SHL"
    },
    "867": {
      "op": "SUB"
    },
    "868": {
      "fn": "Soulbound.isMinted",
      "offset": [
        5346,
        5356
      ],
      "op": "SWAP2",
      "path": "37",
      "statement": 0
    },
    "869": {
      "fn": "Soulbound.isMinted",
      "offset": [
        5346,
        5356
      ],
      "op": "SWAP1",
      "path": "37"
    },
    "870": {
      "fn": "Soulbound.isMinted",
      "offset": [
        5346,
        5356
      ],
      "op": "SWAP2",
      "path": "37"
    },
    "871": {
      "fn": "Soulbound.isMinted",
      "offset": [
        5346,
        5356
      ],
      "op": "AND",
      "path": "37"
    },
    "872": {
      "fn": "Soulbound.isMinted",
      "offset": [
        5319,
        5323
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0x0"
    },
    "874": {
      "fn": "Soulbound.isMinted",
      "offset": [
        5346,
        5356
      ],
      "op": "SWAP1",
      "path": "37"
    },
    "875": {
      "fn": "Soulbound.isMinted",
      "offset": [
        5346,
        5356
      ],
      "op": "DUP2",
      "path": "37"
    },
    "876": {
      "fn": "Soulbound.isMinted",
      "offset": [
        5346,
        5356
      ],
      "op": "MSTORE",
      "path": "37"
    },
    "877": {
      "fn": "Soulbound.isMinted",
      "offset": [
        5346,
        5351
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0x8"
    },
    "879": {
      "fn": "Soulbound.isMinted",
      "offset": [
        5346,
        5356
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0x20"
    },
    "881": {
      "fn": "Soulbound.isMinted",
      "offset": [
        5346,
        5356
      ],
      "op": "SWAP1",
      "path": "37"
    },
    "882": {
      "fn": "Soulbound.isMinted",
      "offset": [
        5346,
        5356
      ],
      "op": "DUP2",
      "path": "37"
    },
    "883": {
      "fn": "Soulbound.isMinted",
      "offset": [
        5346,
        5356
      ],
      "op": "MSTORE",
      "path": "37"
    },
    "884": {
      "fn": "Soulbound.isMinted",
      "offset": [
        5346,
        5356
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0x40"
    },
    "886": {
      "fn": "Soulbound.isMinted",
      "offset": [
        5346,
        5356
      ],
      "op": "DUP1",
      "path": "37"
    },
    "887": {
      "fn": "Soulbound.isMinted",
      "offset": [
        5346,
        5356
      ],
      "op": "DUP4",
      "path": "37"
    },
    "888": {
      "fn": "Soulbound.isMinted",
      "offset": [
        5346,
        5356
      ],
      "op": "KECCAK256",
      "path": "37"
    },
    "889": {
      "fn": "Soulbound.isMinted",
      "offset": [
        5346,
        5366
      ],
      "op": "SWAP4",
      "path": "37"
    },
    "890": {
      "fn": "Soulbound.isMinted",
      "offset": [
        5346,
        5366
      ],
      "op": "DUP4",
      "path": "37"
    },
    "891": {
      "fn": "Soulbound.isMinted",
      "offset": [
        5346,
        5366
      ],
      "op": "MSTORE",
      "path": "37"
    },
    "892": {
      "fn": "Soulbound.isMinted",
      "offset": [
        5346,
        5366
      ],
      "op": "SWAP3",
      "path": "37"
    },
    "893": {
      "fn": "Soulbound.isMinted",
      "offset": [
        5346,
        5366
      ],
      "op": "SWAP1",
      "path": "37"
    },
    "894": {
      "fn": "Soulbound.isMinted",
      "offset": [
        5346,
        5366
      ],
      "op": "MSTORE",
      "path": "37"
    },
    "895": {
      "fn": "Soulbound.isMinted",
      "offset": [
        5346,
        5366
      ],
      "op": "KECCAK256",
      "path": "37"
    },
    "896": {
      "fn": "Soulbound.isMinted",
      "offset": [
        5346,
        5366
      ],
      "op": "SLOAD",
      "path": "37"
    },
    "897": {
      "fn": "Soulbound.isMinted",
      "offset": [
        5346,
        5366
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0xFF"
    },
    "899": {
      "fn": "Soulbound.isMinted",
      "offset": [
        5346,
        5366
      ],
      "op": "AND",
      "path": "37"
    },
    "900": {
      "fn": "Soulbound.isMinted",
      "offset": [
        5346,
        5366
      ],
      "op": "SWAP1",
      "path": "37"
    },
    "901": {
      "fn": "Soulbound.isMinted",
      "offset": [
        5225,
        5373
      ],
      "op": "JUMP",
      "path": "37"
    },
    "902": {
      "fn": "ERC4973.ownerOf",
      "offset": [
        5705,
        5918
      ],
      "op": "JUMPDEST",
      "path": "41"
    },
    "903": {
      "fn": "ERC4973.ownerOf",
      "offset": [
        5705,
        5918
      ],
      "op": "CALLVALUE",
      "path": "41"
    },
    "904": {
      "fn": "ERC4973.ownerOf",
      "offset": [
        5705,
        5918
      ],
      "op": "DUP1",
      "path": "41"
    },
    "905": {
      "fn": "ERC4973.ownerOf",
      "offset": [
        5705,
        5918
      ],
      "op": "ISZERO",
      "path": "41"
    },
    "906": {
      "fn": "ERC4973.ownerOf",
      "offset": [
        5705,
        5918
      ],
      "op": "PUSH2",
      "path": "41",
      "value": "0x392"
    },
    "909": {
      "fn": "ERC4973.ownerOf",
      "offset": [
        5705,
        5918
      ],
      "op": "JUMPI",
      "path": "41"
    },
    "910": {
      "fn": "ERC4973.ownerOf",
      "offset": [
        5705,
        5918
      ],
      "op": "PUSH1",
      "path": "41",
      "value": "0x0"
    },
    "912": {
      "fn": "ERC4973.ownerOf",
      "offset": [
        5705,
        5918
      ],
      "op": "DUP1",
      "path": "41"
    },
    "913": {
      "fn": "ERC4973.ownerOf",
      "offset": [
        5705,
        5918
      ],
      "op": "REVERT",
      "path": "41"
    },
    "914": {
      "fn": "ERC4973.ownerOf",
      "offset": [
        5705,
        5918
      ],
      "op": "JUMPDEST",
      "path": "41"
    },
    "915": {
      "op": "POP"
    },
    "916": {
      "fn": "ERC4973.ownerOf",
      "offset": [
        5705,
        5918
      ],
      "op": "PUSH2",
      "path": "41",
      "value": "0x3A6"
    },
    "919": {
      "fn": "ERC4973.ownerOf",
      "offset": [
        5705,
        5918
      ],
      "op": "PUSH2",
      "path": "41",
      "value": "0x3A1"
    },
    "922": {
      "fn": "ERC4973.ownerOf",
      "offset": [
        5705,
        5918
      ],
      "op": "CALLDATASIZE",
      "path": "41"
    },
    "923": {
      "fn": "ERC4973.ownerOf",
      "offset": [
        5705,
        5918
      ],
      "op": "PUSH1",
      "path": "41",
      "value": "0x4"
    },
    "925": {
      "fn": "ERC4973.ownerOf",
      "offset": [
        5705,
        5918
      ],
      "op": "PUSH2",
      "path": "41",
      "value": "0x28C3"
    },
    "928": {
      "fn": "ERC4973.ownerOf",
      "jump": "i",
      "offset": [
        5705,
        5918
      ],
      "op": "JUMP",
      "path": "41"
    },
    "929": {
      "fn": "ERC4973.ownerOf",
      "offset": [
        5705,
        5918
      ],
      "op": "JUMPDEST",
      "path": "41"
    },
    "930": {
      "fn": "ERC4973.ownerOf",
      "offset": [
        5705,
        5918
      ],
      "op": "PUSH2",
      "path": "41",
      "value": "0x1263"
    },
    "933": {
      "fn": "ERC4973.ownerOf",
      "jump": "i",
      "offset": [
        5705,
        5918
      ],
      "op": "JUMP",
      "path": "41"
    },
    "934": {
      "fn": "ERC4973.ownerOf",
      "offset": [
        5705,
        5918
      ],
      "op": "JUMPDEST",
      "path": "41"
    },
    "935": {
      "fn": "ERC4973.ownerOf",
      "offset": [
        5705,
        5918
      ],
      "op": "PUSH1",
      "path": "41",
      "value": "0x40"
    },
    "937": {
      "fn": "ERC4973.ownerOf",
      "offset": [
        5705,
        5918
      ],
      "op": "MLOAD",
      "path": "41"
    },
    "938": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "940": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "942": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "944": {
      "op": "SHL"
    },
    "945": {
      "op": "SUB"
    },
    "946": {
      "op": "SWAP1"
    },
    "947": {
      "op": "SWAP2"
    },
    "948": {
      "op": "AND"
    },
    "949": {
      "op": "DUP2"
    },
    "950": {
      "op": "MSTORE"
    },
    "951": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "953": {
      "op": "ADD"
    },
    "954": {
      "fn": "ERC4973.ownerOf",
      "offset": [
        5705,
        5918
      ],
      "op": "PUSH2",
      "path": "41",
      "value": "0x24F"
    },
    "957": {
      "op": "JUMP"
    },
    "958": {
      "fn": "IsValidWithDate.getExpiryDate",
      "offset": [
        1372,
        1490
      ],
      "op": "JUMPDEST",
      "path": "36"
    },
    "959": {
      "fn": "IsValidWithDate.getExpiryDate",
      "offset": [
        1372,
        1490
      ],
      "op": "CALLVALUE",
      "path": "36"
    },
    "960": {
      "fn": "IsValidWithDate.getExpiryDate",
      "offset": [
        1372,
        1490
      ],
      "op": "DUP1",
      "path": "36"
    },
    "961": {
      "fn": "IsValidWithDate.getExpiryDate",
      "offset": [
        1372,
        1490
      ],
      "op": "ISZERO",
      "path": "36"
    },
    "962": {
      "fn": "IsValidWithDate.getExpiryDate",
      "offset": [
        1372,
        1490
      ],
      "op": "PUSH2",
      "path": "36",
      "value": "0x3CA"
    },
    "965": {
      "fn": "IsValidWithDate.getExpiryDate",
      "offset": [
        1372,
        1490
      ],
      "op": "JUMPI",
      "path": "36"
    },
    "966": {
      "fn": "IsValidWithDate.getExpiryDate",
      "offset": [
        1372,
        1490
      ],
      "op": "PUSH1",
      "path": "36",
      "value": "0x0"
    },
    "968": {
      "fn": "IsValidWithDate.getExpiryDate",
      "offset": [
        1372,
        1490
      ],
      "op": "DUP1",
      "path": "36"
    },
    "969": {
      "fn": "IsValidWithDate.getExpiryDate",
      "offset": [
        1372,
        1490
      ],
      "op": "REVERT",
      "path": "36"
    },
    "970": {
      "fn": "IsValidWithDate.getExpiryDate",
      "offset": [
        1372,
        1490
      ],
      "op": "JUMPDEST",
      "path": "36"
    },
    "971": {
      "op": "POP"
    },
    "972": {
      "fn": "IsValidWithDate.getExpiryDate",
      "offset": [
        1372,
        1490
      ],
      "op": "PUSH2",
      "path": "36",
      "value": "0x3EB"
    },
    "975": {
      "fn": "IsValidWithDate.getExpiryDate",
      "offset": [
        1372,
        1490
      ],
      "op": "PUSH2",
      "path": "36",
      "value": "0x3D9"
    },
    "978": {
      "fn": "IsValidWithDate.getExpiryDate",
      "offset": [
        1372,
        1490
      ],
      "op": "CALLDATASIZE",
      "path": "36"
    },
    "979": {
      "fn": "IsValidWithDate.getExpiryDate",
      "offset": [
        1372,
        1490
      ],
      "op": "PUSH1",
      "path": "36",
      "value": "0x4"
    },
    "981": {
      "fn": "IsValidWithDate.getExpiryDate",
      "offset": [
        1372,
        1490
      ],
      "op": "PUSH2",
      "path": "36",
      "value": "0x28C3"
    },
    "984": {
      "fn": "IsValidWithDate.getExpiryDate",
      "jump": "i",
      "offset": [
        1372,
        1490
      ],
      "op": "JUMP",
      "path": "36"
    },
    "985": {
      "fn": "IsValidWithDate.getExpiryDate",
      "offset": [
        1372,
        1490
      ],
      "op": "JUMPDEST",
      "path": "36"
    },
    "986": {
      "fn": "IsValidWithDate.getExpiryDate",
      "offset": [
        1433,
        1440
      ],
      "op": "PUSH1",
      "path": "36",
      "value": "0x0"
    },
    "988": {
      "fn": "IsValidWithDate.getExpiryDate",
      "offset": [
        1459,
        1483
      ],
      "op": "SWAP1",
      "path": "36",
      "statement": 1
    },
    "989": {
      "fn": "IsValidWithDate.getExpiryDate",
      "offset": [
        1459,
        1483
      ],
      "op": "DUP2",
      "path": "36"
    },
    "990": {
      "fn": "IsValidWithDate.getExpiryDate",
      "offset": [
        1459,
        1483
      ],
      "op": "MSTORE",
      "path": "36"
    },
    "991": {
      "fn": "IsValidWithDate.getExpiryDate",
      "offset": [
        1459,
        1483
      ],
      "op": "PUSH1",
      "path": "36",
      "value": "0x20"
    },
    "993": {
      "fn": "IsValidWithDate.getExpiryDate",
      "offset": [
        1459,
        1483
      ],
      "op": "DUP2",
      "path": "36"
    },
    "994": {
      "fn": "IsValidWithDate.getExpiryDate",
      "offset": [
        1459,
        1483
      ],
      "op": "SWAP1",
      "path": "36"
    },
    "995": {
      "fn": "IsValidWithDate.getExpiryDate",
      "offset": [
        1459,
        1483
      ],
      "op": "MSTORE",
      "path": "36"
    },
    "996": {
      "fn": "IsValidWithDate.getExpiryDate",
      "offset": [
        1459,
        1483
      ],
      "op": "PUSH1",
      "path": "36",
      "value": "0x40"
    },
    "998": {
      "fn": "IsValidWithDate.getExpiryDate",
      "offset": [
        1459,
        1483
      ],
      "op": "SWAP1",
      "path": "36"
    },
    "999": {
      "fn": "IsValidWithDate.getExpiryDate",
      "offset": [
        1459,
        1483
      ],
      "op": "KECCAK256",
      "path": "36"
    },
    "1000": {
      "fn": "IsValidWithDate.getExpiryDate",
      "offset": [
        1459,
        1483
      ],
      "op": "SLOAD",
      "path": "36"
    },
    "1001": {
      "fn": "IsValidWithDate.getExpiryDate",
      "offset": [
        1459,
        1483
      ],
      "op": "SWAP1",
      "path": "36"
    },
    "1002": {
      "fn": "IsValidWithDate.getExpiryDate",
      "offset": [
        1372,
        1490
      ],
      "op": "JUMP",
      "path": "36"
    },
    "1003": {
      "fn": "IsValidWithDate.getExpiryDate",
      "offset": [
        1372,
        1490
      ],
      "op": "JUMPDEST",
      "path": "36"
    },
    "1004": {
      "fn": "IsValidWithDate.getExpiryDate",
      "offset": [
        1372,
        1490
      ],
      "op": "PUSH1",
      "path": "36",
      "value": "0x40"
    },
    "1006": {
      "fn": "IsValidWithDate.getExpiryDate",
      "offset": [
        1372,
        1490
      ],
      "op": "MLOAD",
      "path": "36"
    },
    "1007": {
      "op": "SWAP1"
    },
    "1008": {
      "op": "DUP2"
    },
    "1009": {
      "op": "MSTORE"
    },
    "1010": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1012": {
      "op": "ADD"
    },
    "1013": {
      "fn": "IsValidWithDate.getExpiryDate",
      "offset": [
        1372,
        1490
      ],
      "op": "PUSH2",
      "path": "36",
      "value": "0x24F"
    },
    "1016": {
      "op": "JUMP"
    },
    "1017": {
      "fn": "Allowlist.getAllowlistOwner",
      "offset": [
        2171,
        2268
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "1018": {
      "fn": "Allowlist.getAllowlistOwner",
      "offset": [
        2171,
        2268
      ],
      "op": "CALLVALUE",
      "path": "14"
    },
    "1019": {
      "fn": "Allowlist.getAllowlistOwner",
      "offset": [
        2171,
        2268
      ],
      "op": "DUP1",
      "path": "14"
    },
    "1020": {
      "fn": "Allowlist.getAllowlistOwner",
      "offset": [
        2171,
        2268
      ],
      "op": "ISZERO",
      "path": "14"
    },
    "1021": {
      "fn": "Allowlist.getAllowlistOwner",
      "offset": [
        2171,
        2268
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x405"
    },
    "1024": {
      "fn": "Allowlist.getAllowlistOwner",
      "offset": [
        2171,
        2268
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "1025": {
      "fn": "Allowlist.getAllowlistOwner",
      "offset": [
        2171,
        2268
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x0"
    },
    "1027": {
      "fn": "Allowlist.getAllowlistOwner",
      "offset": [
        2171,
        2268
      ],
      "op": "DUP1",
      "path": "14"
    },
    "1028": {
      "fn": "Allowlist.getAllowlistOwner",
      "offset": [
        2171,
        2268
      ],
      "op": "REVERT",
      "path": "14"
    },
    "1029": {
      "fn": "Allowlist.getAllowlistOwner",
      "offset": [
        2171,
        2268
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "1030": {
      "op": "POP"
    },
    "1031": {
      "fn": "Allowlist.getAllowlistOwner",
      "offset": [
        2247,
        2261
      ],
      "op": "PUSH1",
      "path": "14",
      "statement": 2,
      "value": "0x9"
    },
    "1033": {
      "fn": "Allowlist.getAllowlistOwner",
      "offset": [
        2247,
        2261
      ],
      "op": "SLOAD",
      "path": "14"
    },
    "1034": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1036": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1038": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1040": {
      "op": "SHL"
    },
    "1041": {
      "op": "SUB"
    },
    "1042": {
      "fn": "Allowlist.getAllowlistOwner",
      "offset": [
        2247,
        2261
      ],
      "op": "AND",
      "path": "14"
    },
    "1043": {
      "fn": "Allowlist.getAllowlistOwner",
      "offset": [
        2171,
        2268
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x3A6"
    },
    "1046": {
      "fn": "Allowlist.getAllowlistOwner",
      "offset": [
        2171,
        2268
      ],
      "op": "JUMP",
      "path": "14"
    },
    "1047": {
      "fn": "ERC4973.balanceOf",
      "offset": [
        5414,
        5699
      ],
      "op": "JUMPDEST",
      "path": "41"
    },
    "1048": {
      "fn": "ERC4973.balanceOf",
      "offset": [
        5414,
        5699
      ],
      "op": "CALLVALUE",
      "path": "41"
    },
    "1049": {
      "fn": "ERC4973.balanceOf",
      "offset": [
        5414,
        5699
      ],
      "op": "DUP1",
      "path": "41"
    },
    "1050": {
      "fn": "ERC4973.balanceOf",
      "offset": [
        5414,
        5699
      ],
      "op": "ISZERO",
      "path": "41"
    },
    "1051": {
      "fn": "ERC4973.balanceOf",
      "offset": [
        5414,
        5699
      ],
      "op": "PUSH2",
      "path": "41",
      "value": "0x423"
    },
    "1054": {
      "fn": "ERC4973.balanceOf",
      "offset": [
        5414,
        5699
      ],
      "op": "JUMPI",
      "path": "41"
    },
    "1055": {
      "fn": "ERC4973.balanceOf",
      "offset": [
        5414,
        5699
      ],
      "op": "PUSH1",
      "path": "41",
      "value": "0x0"
    },
    "1057": {
      "fn": "ERC4973.balanceOf",
      "offset": [
        5414,
        5699
      ],
      "op": "DUP1",
      "path": "41"
    },
    "1058": {
      "fn": "ERC4973.balanceOf",
      "offset": [
        5414,
        5699
      ],
      "op": "REVERT",
      "path": "41"
    },
    "1059": {
      "fn": "ERC4973.balanceOf",
      "offset": [
        5414,
        5699
      ],
      "op": "JUMPDEST",
      "path": "41"
    },
    "1060": {
      "op": "POP"
    },
    "1061": {
      "fn": "ERC4973.balanceOf",
      "offset": [
        5414,
        5699
      ],
      "op": "PUSH2",
      "path": "41",
      "value": "0x3EB"
    },
    "1064": {
      "fn": "ERC4973.balanceOf",
      "offset": [
        5414,
        5699
      ],
      "op": "PUSH2",
      "path": "41",
      "value": "0x432"
    },
    "1067": {
      "fn": "ERC4973.balanceOf",
      "offset": [
        5414,
        5699
      ],
      "op": "CALLDATASIZE",
      "path": "41"
    },
    "1068": {
      "fn": "ERC4973.balanceOf",
      "offset": [
        5414,
        5699
      ],
      "op": "PUSH1",
      "path": "41",
      "value": "0x4"
    },
    "1070": {
      "fn": "ERC4973.balanceOf",
      "offset": [
        5414,
        5699
      ],
      "op": "PUSH2",
      "path": "41",
      "value": "0x290F"
    },
    "1073": {
      "fn": "ERC4973.balanceOf",
      "jump": "i",
      "offset": [
        5414,
        5699
      ],
      "op": "JUMP",
      "path": "41"
    },
    "1074": {
      "fn": "ERC4973.balanceOf",
      "offset": [
        5414,
        5699
      ],
      "op": "JUMPDEST",
      "path": "41"
    },
    "1075": {
      "fn": "ERC4973.balanceOf",
      "offset": [
        5414,
        5699
      ],
      "op": "PUSH2",
      "path": "41",
      "value": "0x12C8"
    },
    "1078": {
      "fn": "ERC4973.balanceOf",
      "jump": "i",
      "offset": [
        5414,
        5699
      ],
      "op": "JUMP",
      "path": "41"
    },
    "1079": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1668,
        1769
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1080": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1668,
        1769
      ],
      "op": "CALLVALUE",
      "path": "0"
    },
    "1081": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1668,
        1769
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1082": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1668,
        1769
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "1083": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1668,
        1769
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x443"
    },
    "1086": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1668,
        1769
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "1087": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1668,
        1769
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1089": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1668,
        1769
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1090": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1668,
        1769
      ],
      "op": "REVERT",
      "path": "0"
    },
    "1091": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1668,
        1769
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1092": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1668,
        1769
      ],
      "op": "POP",
      "path": "0"
    },
    "1093": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1668,
        1769
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x201"
    },
    "1096": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1668,
        1769
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1351"
    },
    "1099": {
      "fn": "Ownable.renounceOwnership",
      "jump": "i",
      "offset": [
        1668,
        1769
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1100": {
      "fn": "SoulboundCore.setBaseURI",
      "offset": [
        5539,
        5739
      ],
      "op": "JUMPDEST",
      "path": "38"
    },
    "1101": {
      "fn": "SoulboundCore.setBaseURI",
      "offset": [
        5539,
        5739
      ],
      "op": "CALLVALUE",
      "path": "38"
    },
    "1102": {
      "fn": "SoulboundCore.setBaseURI",
      "offset": [
        5539,
        5739
      ],
      "op": "DUP1",
      "path": "38"
    },
    "1103": {
      "fn": "SoulboundCore.setBaseURI",
      "offset": [
        5539,
        5739
      ],
      "op": "ISZERO",
      "path": "38"
    },
    "1104": {
      "fn": "SoulboundCore.setBaseURI",
      "offset": [
        5539,
        5739
      ],
      "op": "PUSH2",
      "path": "38",
      "value": "0x458"
    },
    "1107": {
      "fn": "SoulboundCore.setBaseURI",
      "offset": [
        5539,
        5739
      ],
      "op": "JUMPI",
      "path": "38"
    },
    "1108": {
      "fn": "SoulboundCore.setBaseURI",
      "offset": [
        5539,
        5739
      ],
      "op": "PUSH1",
      "path": "38",
      "value": "0x0"
    },
    "1110": {
      "fn": "SoulboundCore.setBaseURI",
      "offset": [
        5539,
        5739
      ],
      "op": "DUP1",
      "path": "38"
    },
    "1111": {
      "fn": "SoulboundCore.setBaseURI",
      "offset": [
        5539,
        5739
      ],
      "op": "REVERT",
      "path": "38"
    },
    "1112": {
      "fn": "SoulboundCore.setBaseURI",
      "offset": [
        5539,
        5739
      ],
      "op": "JUMPDEST",
      "path": "38"
    },
    "1113": {
      "op": "POP"
    },
    "1114": {
      "fn": "SoulboundCore.setBaseURI",
      "offset": [
        5539,
        5739
      ],
      "op": "PUSH2",
      "path": "38",
      "value": "0x201"
    },
    "1117": {
      "fn": "SoulboundCore.setBaseURI",
      "offset": [
        5539,
        5739
      ],
      "op": "PUSH2",
      "path": "38",
      "value": "0x467"
    },
    "1120": {
      "fn": "SoulboundCore.setBaseURI",
      "offset": [
        5539,
        5739
      ],
      "op": "CALLDATASIZE",
      "path": "38"
    },
    "1121": {
      "fn": "SoulboundCore.setBaseURI",
      "offset": [
        5539,
        5739
      ],
      "op": "PUSH1",
      "path": "38",
      "value": "0x4"
    },
    "1123": {
      "fn": "SoulboundCore.setBaseURI",
      "offset": [
        5539,
        5739
      ],
      "op": "PUSH2",
      "path": "38",
      "value": "0x292A"
    },
    "1126": {
      "fn": "SoulboundCore.setBaseURI",
      "jump": "i",
      "offset": [
        5539,
        5739
      ],
      "op": "JUMP",
      "path": "38"
    },
    "1127": {
      "fn": "SoulboundCore.setBaseURI",
      "offset": [
        5539,
        5739
      ],
      "op": "JUMPDEST",
      "path": "38"
    },
    "1128": {
      "fn": "SoulboundCore.setBaseURI",
      "offset": [
        5539,
        5739
      ],
      "op": "PUSH2",
      "path": "38",
      "value": "0x1387"
    },
    "1131": {
      "fn": "SoulboundCore.setBaseURI",
      "jump": "i",
      "offset": [
        5539,
        5739
      ],
      "op": "JUMP",
      "path": "38"
    },
    "1132": {
      "fn": "Ownable.owner",
      "offset": [
        1036,
        1121
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1133": {
      "fn": "Ownable.owner",
      "offset": [
        1036,
        1121
      ],
      "op": "CALLVALUE",
      "path": "0"
    },
    "1134": {
      "fn": "Ownable.owner",
      "offset": [
        1036,
        1121
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1135": {
      "fn": "Ownable.owner",
      "offset": [
        1036,
        1121
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "1136": {
      "fn": "Ownable.owner",
      "offset": [
        1036,
        1121
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x478"
    },
    "1139": {
      "fn": "Ownable.owner",
      "offset": [
        1036,
        1121
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "1140": {
      "fn": "Ownable.owner",
      "offset": [
        1036,
        1121
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1142": {
      "fn": "Ownable.owner",
      "offset": [
        1036,
        1121
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1143": {
      "fn": "Ownable.owner",
      "offset": [
        1036,
        1121
      ],
      "op": "REVERT",
      "path": "0"
    },
    "1144": {
      "fn": "Ownable.owner",
      "offset": [
        1036,
        1121
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1145": {
      "op": "POP"
    },
    "1146": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 3,
      "value": "0x6"
    },
    "1148": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "1149": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1151": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1153": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1155": {
      "op": "SHL"
    },
    "1156": {
      "op": "SUB"
    },
    "1157": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "AND",
      "path": "0"
    },
    "1158": {
      "fn": "Ownable.owner",
      "offset": [
        1036,
        1121
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x3A6"
    },
    "1161": {
      "fn": "Ownable.owner",
      "offset": [
        1036,
        1121
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1162": {
      "fn": "ERC4973.symbol",
      "offset": [
        4886,
        4988
      ],
      "op": "JUMPDEST",
      "path": "41"
    },
    "1163": {
      "fn": "ERC4973.symbol",
      "offset": [
        4886,
        4988
      ],
      "op": "CALLVALUE",
      "path": "41"
    },
    "1164": {
      "fn": "ERC4973.symbol",
      "offset": [
        4886,
        4988
      ],
      "op": "DUP1",
      "path": "41"
    },
    "1165": {
      "fn": "ERC4973.symbol",
      "offset": [
        4886,
        4988
      ],
      "op": "ISZERO",
      "path": "41"
    },
    "1166": {
      "fn": "ERC4973.symbol",
      "offset": [
        4886,
        4988
      ],
      "op": "PUSH2",
      "path": "41",
      "value": "0x496"
    },
    "1169": {
      "fn": "ERC4973.symbol",
      "offset": [
        4886,
        4988
      ],
      "op": "JUMPI",
      "path": "41"
    },
    "1170": {
      "fn": "ERC4973.symbol",
      "offset": [
        4886,
        4988
      ],
      "op": "PUSH1",
      "path": "41",
      "value": "0x0"
    },
    "1172": {
      "fn": "ERC4973.symbol",
      "offset": [
        4886,
        4988
      ],
      "op": "DUP1",
      "path": "41"
    },
    "1173": {
      "fn": "ERC4973.symbol",
      "offset": [
        4886,
        4988
      ],
      "op": "REVERT",
      "path": "41"
    },
    "1174": {
      "fn": "ERC4973.symbol",
      "offset": [
        4886,
        4988
      ],
      "op": "JUMPDEST",
      "path": "41"
    },
    "1175": {
      "fn": "ERC4973.symbol",
      "offset": [
        4886,
        4988
      ],
      "op": "POP",
      "path": "41"
    },
    "1176": {
      "fn": "ERC4973.symbol",
      "offset": [
        4886,
        4988
      ],
      "op": "PUSH2",
      "path": "41",
      "value": "0x26D"
    },
    "1179": {
      "fn": "ERC4973.symbol",
      "offset": [
        4886,
        4988
      ],
      "op": "PUSH2",
      "path": "41",
      "value": "0x13FD"
    },
    "1182": {
      "fn": "ERC4973.symbol",
      "jump": "i",
      "offset": [
        4886,
        4988
      ],
      "op": "JUMP",
      "path": "41"
    },
    "1183": {
      "fn": "SoulboundRedeemable.redeemMintedTokenWithSignature",
      "offset": [
        13771,
        14280
      ],
      "op": "JUMPDEST",
      "path": "39"
    },
    "1184": {
      "fn": "SoulboundRedeemable.redeemMintedTokenWithSignature",
      "offset": [
        13771,
        14280
      ],
      "op": "PUSH2",
      "path": "39",
      "value": "0x201"
    },
    "1187": {
      "fn": "SoulboundRedeemable.redeemMintedTokenWithSignature",
      "offset": [
        13771,
        14280
      ],
      "op": "PUSH2",
      "path": "39",
      "value": "0x4AD"
    },
    "1190": {
      "fn": "SoulboundRedeemable.redeemMintedTokenWithSignature",
      "offset": [
        13771,
        14280
      ],
      "op": "CALLDATASIZE",
      "path": "39"
    },
    "1191": {
      "fn": "SoulboundRedeemable.redeemMintedTokenWithSignature",
      "offset": [
        13771,
        14280
      ],
      "op": "PUSH1",
      "path": "39",
      "value": "0x4"
    },
    "1193": {
      "fn": "SoulboundRedeemable.redeemMintedTokenWithSignature",
      "offset": [
        13771,
        14280
      ],
      "op": "PUSH2",
      "path": "39",
      "value": "0x2978"
    },
    "1196": {
      "fn": "SoulboundRedeemable.redeemMintedTokenWithSignature",
      "jump": "i",
      "offset": [
        13771,
        14280
      ],
      "op": "JUMP",
      "path": "39"
    },
    "1197": {
      "fn": "SoulboundRedeemable.redeemMintedTokenWithSignature",
      "offset": [
        13771,
        14280
      ],
      "op": "JUMPDEST",
      "path": "39"
    },
    "1198": {
      "fn": "SoulboundRedeemable.redeemMintedTokenWithSignature",
      "offset": [
        13771,
        14280
      ],
      "op": "PUSH2",
      "path": "39",
      "value": "0x140C"
    },
    "1201": {
      "fn": "SoulboundRedeemable.redeemMintedTokenWithSignature",
      "jump": "i",
      "offset": [
        13771,
        14280
      ],
      "op": "JUMP",
      "path": "39"
    },
    "1202": {
      "fn": "SoulboundRedeemable.getPriceLimit",
      "offset": [
        3274,
        3382
      ],
      "op": "JUMPDEST",
      "path": "39"
    },
    "1203": {
      "fn": "SoulboundRedeemable.getPriceLimit",
      "offset": [
        3274,
        3382
      ],
      "op": "CALLVALUE",
      "path": "39"
    },
    "1204": {
      "fn": "SoulboundRedeemable.getPriceLimit",
      "offset": [
        3274,
        3382
      ],
      "op": "DUP1",
      "path": "39"
    },
    "1205": {
      "fn": "SoulboundRedeemable.getPriceLimit",
      "offset": [
        3274,
        3382
      ],
      "op": "ISZERO",
      "path": "39"
    },
    "1206": {
      "fn": "SoulboundRedeemable.getPriceLimit",
      "offset": [
        3274,
        3382
      ],
      "op": "PUSH2",
      "path": "39",
      "value": "0x4BE"
    },
    "1209": {
      "fn": "SoulboundRedeemable.getPriceLimit",
      "offset": [
        3274,
        3382
      ],
      "op": "JUMPI",
      "path": "39"
    },
    "1210": {
      "fn": "SoulboundRedeemable.getPriceLimit",
      "offset": [
        3274,
        3382
      ],
      "op": "PUSH1",
      "path": "39",
      "value": "0x0"
    },
    "1212": {
      "fn": "SoulboundRedeemable.getPriceLimit",
      "offset": [
        3274,
        3382
      ],
      "op": "DUP1",
      "path": "39"
    },
    "1213": {
      "fn": "SoulboundRedeemable.getPriceLimit",
      "offset": [
        3274,
        3382
      ],
      "op": "REVERT",
      "path": "39"
    },
    "1214": {
      "fn": "SoulboundRedeemable.getPriceLimit",
      "offset": [
        3274,
        3382
      ],
      "op": "JUMPDEST",
      "path": "39"
    },
    "1215": {
      "op": "POP"
    },
    "1216": {
      "fn": "SoulboundRedeemable.getPriceLimit",
      "offset": [
        3365,
        3375
      ],
      "op": "PUSH1",
      "path": "39",
      "statement": 4,
      "value": "0xE"
    },
    "1218": {
      "fn": "SoulboundRedeemable.getPriceLimit",
      "offset": [
        3365,
        3375
      ],
      "op": "SLOAD",
      "path": "39"
    },
    "1219": {
      "fn": "SoulboundRedeemable.getPriceLimit",
      "offset": [
        3274,
        3382
      ],
      "op": "PUSH2",
      "path": "39",
      "value": "0x3EB"
    },
    "1222": {
      "fn": "SoulboundRedeemable.getPriceLimit",
      "offset": [
        3274,
        3382
      ],
      "op": "JUMP",
      "path": "39"
    },
    "1223": {
      "fn": "SoulboundRedeemable.redeemPendingTokenWithSignature",
      "offset": [
        12692,
        13203
      ],
      "op": "JUMPDEST",
      "path": "39"
    },
    "1224": {
      "fn": "SoulboundRedeemable.redeemPendingTokenWithSignature",
      "offset": [
        12692,
        13203
      ],
      "op": "PUSH2",
      "path": "39",
      "value": "0x201"
    },
    "1227": {
      "fn": "SoulboundRedeemable.redeemPendingTokenWithSignature",
      "offset": [
        12692,
        13203
      ],
      "op": "PUSH2",
      "path": "39",
      "value": "0x4D5"
    },
    "1230": {
      "fn": "SoulboundRedeemable.redeemPendingTokenWithSignature",
      "offset": [
        12692,
        13203
      ],
      "op": "CALLDATASIZE",
      "path": "39"
    },
    "1231": {
      "fn": "SoulboundRedeemable.redeemPendingTokenWithSignature",
      "offset": [
        12692,
        13203
      ],
      "op": "PUSH1",
      "path": "39",
      "value": "0x4"
    },
    "1233": {
      "fn": "SoulboundRedeemable.redeemPendingTokenWithSignature",
      "offset": [
        12692,
        13203
      ],
      "op": "PUSH2",
      "path": "39",
      "value": "0x2978"
    },
    "1236": {
      "fn": "SoulboundRedeemable.redeemPendingTokenWithSignature",
      "jump": "i",
      "offset": [
        12692,
        13203
      ],
      "op": "JUMP",
      "path": "39"
    },
    "1237": {
      "fn": "SoulboundRedeemable.redeemPendingTokenWithSignature",
      "offset": [
        12692,
        13203
      ],
      "op": "JUMPDEST",
      "path": "39"
    },
    "1238": {
      "fn": "SoulboundRedeemable.redeemPendingTokenWithSignature",
      "offset": [
        12692,
        13203
      ],
      "op": "PUSH2",
      "path": "39",
      "value": "0x1504"
    },
    "1241": {
      "fn": "SoulboundRedeemable.redeemPendingTokenWithSignature",
      "jump": "i",
      "offset": [
        12692,
        13203
      ],
      "op": "JUMP",
      "path": "39"
    },
    "1242": {
      "fn": "SoulboundRedeemable.mintPendingRedeemableToken",
      "offset": [
        4548,
        5770
      ],
      "op": "JUMPDEST",
      "path": "39"
    },
    "1243": {
      "fn": "SoulboundRedeemable.mintPendingRedeemableToken",
      "offset": [
        4548,
        5770
      ],
      "op": "CALLVALUE",
      "path": "39"
    },
    "1244": {
      "fn": "SoulboundRedeemable.mintPendingRedeemableToken",
      "offset": [
        4548,
        5770
      ],
      "op": "DUP1",
      "path": "39"
    },
    "1245": {
      "fn": "SoulboundRedeemable.mintPendingRedeemableToken",
      "offset": [
        4548,
        5770
      ],
      "op": "ISZERO",
      "path": "39"
    },
    "1246": {
      "fn": "SoulboundRedeemable.mintPendingRedeemableToken",
      "offset": [
        4548,
        5770
      ],
      "op": "PUSH2",
      "path": "39",
      "value": "0x4E6"
    },
    "1249": {
      "fn": "SoulboundRedeemable.mintPendingRedeemableToken",
      "offset": [
        4548,
        5770
      ],
      "op": "JUMPI",
      "path": "39"
    },
    "1250": {
      "fn": "SoulboundRedeemable.mintPendingRedeemableToken",
      "offset": [
        4548,
        5770
      ],
      "op": "PUSH1",
      "path": "39",
      "value": "0x0"
    },
    "1252": {
      "fn": "SoulboundRedeemable.mintPendingRedeemableToken",
      "offset": [
        4548,
        5770
      ],
      "op": "DUP1",
      "path": "39"
    },
    "1253": {
      "fn": "SoulboundRedeemable.mintPendingRedeemableToken",
      "offset": [
        4548,
        5770
      ],
      "op": "REVERT",
      "path": "39"
    },
    "1254": {
      "fn": "SoulboundRedeemable.mintPendingRedeemableToken",
      "offset": [
        4548,
        5770
      ],
      "op": "JUMPDEST",
      "path": "39"
    },
    "1255": {
      "op": "POP"
    },
    "1256": {
      "fn": "SoulboundRedeemable.mintPendingRedeemableToken",
      "offset": [
        4548,
        5770
      ],
      "op": "PUSH2",
      "path": "39",
      "value": "0x201"
    },
    "1259": {
      "fn": "SoulboundRedeemable.mintPendingRedeemableToken",
      "offset": [
        4548,
        5770
      ],
      "op": "PUSH2",
      "path": "39",
      "value": "0x4F5"
    },
    "1262": {
      "fn": "SoulboundRedeemable.mintPendingRedeemableToken",
      "offset": [
        4548,
        5770
      ],
      "op": "CALLDATASIZE",
      "path": "39"
    },
    "1263": {
      "fn": "SoulboundRedeemable.mintPendingRedeemableToken",
      "offset": [
        4548,
        5770
      ],
      "op": "PUSH1",
      "path": "39",
      "value": "0x4"
    },
    "1265": {
      "fn": "SoulboundRedeemable.mintPendingRedeemableToken",
      "offset": [
        4548,
        5770
      ],
      "op": "PUSH2",
      "path": "39",
      "value": "0x29F2"
    },
    "1268": {
      "fn": "SoulboundRedeemable.mintPendingRedeemableToken",
      "jump": "i",
      "offset": [
        4548,
        5770
      ],
      "op": "JUMP",
      "path": "39"
    },
    "1269": {
      "fn": "SoulboundRedeemable.mintPendingRedeemableToken",
      "offset": [
        4548,
        5770
      ],
      "op": "JUMPDEST",
      "path": "39"
    },
    "1270": {
      "fn": "SoulboundRedeemable.mintPendingRedeemableToken",
      "offset": [
        4548,
        5770
      ],
      "op": "PUSH2",
      "path": "39",
      "value": "0x15E9"
    },
    "1273": {
      "fn": "SoulboundRedeemable.mintPendingRedeemableToken",
      "jump": "i",
      "offset": [
        4548,
        5770
      ],
      "op": "JUMP",
      "path": "39"
    },
    "1274": {
      "fn": "IsValidWithDate.extendExpiry",
      "offset": [
        917,
        1166
      ],
      "op": "JUMPDEST",
      "path": "36"
    },
    "1275": {
      "fn": "IsValidWithDate.extendExpiry",
      "offset": [
        917,
        1166
      ],
      "op": "CALLVALUE",
      "path": "36"
    },
    "1276": {
      "fn": "IsValidWithDate.extendExpiry",
      "offset": [
        917,
        1166
      ],
      "op": "DUP1",
      "path": "36"
    },
    "1277": {
      "fn": "IsValidWithDate.extendExpiry",
      "offset": [
        917,
        1166
      ],
      "op": "ISZERO",
      "path": "36"
    },
    "1278": {
      "fn": "IsValidWithDate.extendExpiry",
      "offset": [
        917,
        1166
      ],
      "op": "PUSH2",
      "path": "36",
      "value": "0x506"
    },
    "1281": {
      "fn": "IsValidWithDate.extendExpiry",
      "offset": [
        917,
        1166
      ],
      "op": "JUMPI",
      "path": "36"
    },
    "1282": {
      "fn": "IsValidWithDate.extendExpiry",
      "offset": [
        917,
        1166
      ],
      "op": "PUSH1",
      "path": "36",
      "value": "0x0"
    },
    "1284": {
      "fn": "IsValidWithDate.extendExpiry",
      "offset": [
        917,
        1166
      ],
      "op": "DUP1",
      "path": "36"
    },
    "1285": {
      "fn": "IsValidWithDate.extendExpiry",
      "offset": [
        917,
        1166
      ],
      "op": "REVERT",
      "path": "36"
    },
    "1286": {
      "fn": "IsValidWithDate.extendExpiry",
      "offset": [
        917,
        1166
      ],
      "op": "JUMPDEST",
      "path": "36"
    },
    "1287": {
      "op": "POP"
    },
    "1288": {
      "fn": "IsValidWithDate.extendExpiry",
      "offset": [
        917,
        1166
      ],
      "op": "PUSH2",
      "path": "36",
      "value": "0x201"
    },
    "1291": {
      "fn": "IsValidWithDate.extendExpiry",
      "offset": [
        917,
        1166
      ],
      "op": "PUSH2",
      "path": "36",
      "value": "0x515"
    },
    "1294": {
      "fn": "IsValidWithDate.extendExpiry",
      "offset": [
        917,
        1166
      ],
      "op": "CALLDATASIZE",
      "path": "36"
    },
    "1295": {
      "fn": "IsValidWithDate.extendExpiry",
      "offset": [
        917,
        1166
      ],
      "op": "PUSH1",
      "path": "36",
      "value": "0x4"
    },
    "1297": {
      "fn": "IsValidWithDate.extendExpiry",
      "offset": [
        917,
        1166
      ],
      "op": "PUSH2",
      "path": "36",
      "value": "0x2A34"
    },
    "1300": {
      "fn": "IsValidWithDate.extendExpiry",
      "jump": "i",
      "offset": [
        917,
        1166
      ],
      "op": "JUMP",
      "path": "36"
    },
    "1301": {
      "fn": "IsValidWithDate.extendExpiry",
      "offset": [
        917,
        1166
      ],
      "op": "JUMPDEST",
      "path": "36"
    },
    "1302": {
      "fn": "IsValidWithDate.extendExpiry",
      "offset": [
        917,
        1166
      ],
      "op": "PUSH2",
      "path": "36",
      "value": "0x17DD"
    },
    "1305": {
      "fn": "IsValidWithDate.extendExpiry",
      "jump": "i",
      "offset": [
        917,
        1166
      ],
      "op": "JUMP",
      "path": "36"
    },
    "1306": {
      "fn": "ERC4973.tokenURI",
      "offset": [
        4994,
        5237
      ],
      "op": "JUMPDEST",
      "path": "41"
    },
    "1307": {
      "fn": "ERC4973.tokenURI",
      "offset": [
        4994,
        5237
      ],
      "op": "CALLVALUE",
      "path": "41"
    },
    "1308": {
      "fn": "ERC4973.tokenURI",
      "offset": [
        4994,
        5237
      ],
      "op": "DUP1",
      "path": "41"
    },
    "1309": {
      "fn": "ERC4973.tokenURI",
      "offset": [
        4994,
        5237
      ],
      "op": "ISZERO",
      "path": "41"
    },
    "1310": {
      "fn": "ERC4973.tokenURI",
      "offset": [
        4994,
        5237
      ],
      "op": "PUSH2",
      "path": "41",
      "value": "0x526"
    },
    "1313": {
      "fn": "ERC4973.tokenURI",
      "offset": [
        4994,
        5237
      ],
      "op": "JUMPI",
      "path": "41"
    },
    "1314": {
      "fn": "ERC4973.tokenURI",
      "offset": [
        4994,
        5237
      ],
      "op": "PUSH1",
      "path": "41",
      "value": "0x0"
    },
    "1316": {
      "fn": "ERC4973.tokenURI",
      "offset": [
        4994,
        5237
      ],
      "op": "DUP1",
      "path": "41"
    },
    "1317": {
      "fn": "ERC4973.tokenURI",
      "offset": [
        4994,
        5237
      ],
      "op": "REVERT",
      "path": "41"
    },
    "1318": {
      "fn": "ERC4973.tokenURI",
      "offset": [
        4994,
        5237
      ],
      "op": "JUMPDEST",
      "path": "41"
    },
    "1319": {
      "op": "POP"
    },
    "1320": {
      "fn": "ERC4973.tokenURI",
      "offset": [
        4994,
        5237
      ],
      "op": "PUSH2",
      "path": "41",
      "value": "0x26D"
    },
    "1323": {
      "fn": "ERC4973.tokenURI",
      "offset": [
        4994,
        5237
      ],
      "op": "PUSH2",
      "path": "41",
      "value": "0x535"
    },
    "1326": {
      "fn": "ERC4973.tokenURI",
      "offset": [
        4994,
        5237
      ],
      "op": "CALLDATASIZE",
      "path": "41"
    },
    "1327": {
      "fn": "ERC4973.tokenURI",
      "offset": [
        4994,
        5237
      ],
      "op": "PUSH1",
      "path": "41",
      "value": "0x4"
    },
    "1329": {
      "fn": "ERC4973.tokenURI",
      "offset": [
        4994,
        5237
      ],
      "op": "PUSH2",
      "path": "41",
      "value": "0x28C3"
    },
    "1332": {
      "fn": "ERC4973.tokenURI",
      "jump": "i",
      "offset": [
        4994,
        5237
      ],
      "op": "JUMP",
      "path": "41"
    },
    "1333": {
      "fn": "ERC4973.tokenURI",
      "offset": [
        4994,
        5237
      ],
      "op": "JUMPDEST",
      "path": "41"
    },
    "1334": {
      "fn": "ERC4973.tokenURI",
      "offset": [
        4994,
        5237
      ],
      "op": "PUSH2",
      "path": "41",
      "value": "0x1835"
    },
    "1337": {
      "fn": "ERC4973.tokenURI",
      "jump": "i",
      "offset": [
        4994,
        5237
      ],
      "op": "JUMP",
      "path": "41"
    },
    "1338": {
      "fn": "Soulbound._getBaseURI",
      "offset": [
        7425,
        7673
      ],
      "op": "JUMPDEST",
      "path": "37"
    },
    "1339": {
      "fn": "Soulbound._getBaseURI",
      "offset": [
        7425,
        7673
      ],
      "op": "CALLVALUE",
      "path": "37"
    },
    "1340": {
      "fn": "Soulbound._getBaseURI",
      "offset": [
        7425,
        7673
      ],
      "op": "DUP1",
      "path": "37"
    },
    "1341": {
      "fn": "Soulbound._getBaseURI",
      "offset": [
        7425,
        7673
      ],
      "op": "ISZERO",
      "path": "37"
    },
    "1342": {
      "fn": "Soulbound._getBaseURI",
      "offset": [
        7425,
        7673
      ],
      "op": "PUSH2",
      "path": "37",
      "value": "0x546"
    },
    "1345": {
      "fn": "Soulbound._getBaseURI",
      "offset": [
        7425,
        7673
      ],
      "op": "JUMPI",
      "path": "37"
    },
    "1346": {
      "fn": "Soulbound._getBaseURI",
      "offset": [
        7425,
        7673
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0x0"
    },
    "1348": {
      "fn": "Soulbound._getBaseURI",
      "offset": [
        7425,
        7673
      ],
      "op": "DUP1",
      "path": "37"
    },
    "1349": {
      "fn": "Soulbound._getBaseURI",
      "offset": [
        7425,
        7673
      ],
      "op": "REVERT",
      "path": "37"
    },
    "1350": {
      "fn": "Soulbound._getBaseURI",
      "offset": [
        7425,
        7673
      ],
      "op": "JUMPDEST",
      "path": "37"
    },
    "1351": {
      "fn": "Soulbound._getBaseURI",
      "offset": [
        7425,
        7673
      ],
      "op": "POP",
      "path": "37"
    },
    "1352": {
      "fn": "Soulbound._getBaseURI",
      "offset": [
        7425,
        7673
      ],
      "op": "PUSH2",
      "path": "37",
      "value": "0x26D"
    },
    "1355": {
      "fn": "Soulbound._getBaseURI",
      "offset": [
        7425,
        7673
      ],
      "op": "PUSH2",
      "path": "37",
      "value": "0x192A"
    },
    "1358": {
      "fn": "Soulbound._getBaseURI",
      "jump": "i",
      "offset": [
        7425,
        7673
      ],
      "op": "JUMP",
      "path": "37"
    },
    "1359": {
      "fn": "SoulboundCore.issueWithSignature",
      "offset": [
        2807,
        3801
      ],
      "op": "JUMPDEST",
      "path": "38"
    },
    "1360": {
      "fn": "SoulboundCore.issueWithSignature",
      "offset": [
        2807,
        3801
      ],
      "op": "CALLVALUE",
      "path": "38"
    },
    "1361": {
      "fn": "SoulboundCore.issueWithSignature",
      "offset": [
        2807,
        3801
      ],
      "op": "DUP1",
      "path": "38"
    },
    "1362": {
      "fn": "SoulboundCore.issueWithSignature",
      "offset": [
        2807,
        3801
      ],
      "op": "ISZERO",
      "path": "38"
    },
    "1363": {
      "fn": "SoulboundCore.issueWithSignature",
      "offset": [
        2807,
        3801
      ],
      "op": "PUSH2",
      "path": "38",
      "value": "0x55B"
    },
    "1366": {
      "fn": "SoulboundCore.issueWithSignature",
      "offset": [
        2807,
        3801
      ],
      "op": "JUMPI",
      "path": "38"
    },
    "1367": {
      "fn": "SoulboundCore.issueWithSignature",
      "offset": [
        2807,
        3801
      ],
      "op": "PUSH1",
      "path": "38",
      "value": "0x0"
    },
    "1369": {
      "fn": "SoulboundCore.issueWithSignature",
      "offset": [
        2807,
        3801
      ],
      "op": "DUP1",
      "path": "38"
    },
    "1370": {
      "fn": "SoulboundCore.issueWithSignature",
      "offset": [
        2807,
        3801
      ],
      "op": "REVERT",
      "path": "38"
    },
    "1371": {
      "fn": "SoulboundCore.issueWithSignature",
      "offset": [
        2807,
        3801
      ],
      "op": "JUMPDEST",
      "path": "38"
    },
    "1372": {
      "op": "POP"
    },
    "1373": {
      "fn": "SoulboundCore.issueWithSignature",
      "offset": [
        2807,
        3801
      ],
      "op": "PUSH2",
      "path": "38",
      "value": "0x201"
    },
    "1376": {
      "fn": "SoulboundCore.issueWithSignature",
      "offset": [
        2807,
        3801
      ],
      "op": "PUSH2",
      "path": "38",
      "value": "0x56A"
    },
    "1379": {
      "fn": "SoulboundCore.issueWithSignature",
      "offset": [
        2807,
        3801
      ],
      "op": "CALLDATASIZE",
      "path": "38"
    },
    "1380": {
      "fn": "SoulboundCore.issueWithSignature",
      "offset": [
        2807,
        3801
      ],
      "op": "PUSH1",
      "path": "38",
      "value": "0x4"
    },
    "1382": {
      "fn": "SoulboundCore.issueWithSignature",
      "offset": [
        2807,
        3801
      ],
      "op": "PUSH2",
      "path": "38",
      "value": "0x2A56"
    },
    "1385": {
      "fn": "SoulboundCore.issueWithSignature",
      "jump": "i",
      "offset": [
        2807,
        3801
      ],
      "op": "JUMP",
      "path": "38"
    },
    "1386": {
      "fn": "SoulboundCore.issueWithSignature",
      "offset": [
        2807,
        3801
      ],
      "op": "JUMPDEST",
      "path": "38"
    },
    "1387": {
      "fn": "SoulboundCore.issueWithSignature",
      "offset": [
        2807,
        3801
      ],
      "op": "PUSH2",
      "path": "38",
      "value": "0x1987"
    },
    "1390": {
      "fn": "SoulboundCore.issueWithSignature",
      "jump": "i",
      "offset": [
        2807,
        3801
      ],
      "op": "JUMP",
      "path": "38"
    },
    "1391": {
      "fn": "Allowlist.verifySignature",
      "offset": [
        2495,
        2645
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "1392": {
      "fn": "Allowlist.verifySignature",
      "offset": [
        2495,
        2645
      ],
      "op": "CALLVALUE",
      "path": "14"
    },
    "1393": {
      "fn": "Allowlist.verifySignature",
      "offset": [
        2495,
        2645
      ],
      "op": "DUP1",
      "path": "14"
    },
    "1394": {
      "fn": "Allowlist.verifySignature",
      "offset": [
        2495,
        2645
      ],
      "op": "ISZERO",
      "path": "14"
    },
    "1395": {
      "fn": "Allowlist.verifySignature",
      "offset": [
        2495,
        2645
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x57B"
    },
    "1398": {
      "fn": "Allowlist.verifySignature",
      "offset": [
        2495,
        2645
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "1399": {
      "fn": "Allowlist.verifySignature",
      "offset": [
        2495,
        2645
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x0"
    },
    "1401": {
      "fn": "Allowlist.verifySignature",
      "offset": [
        2495,
        2645
      ],
      "op": "DUP1",
      "path": "14"
    },
    "1402": {
      "fn": "Allowlist.verifySignature",
      "offset": [
        2495,
        2645
      ],
      "op": "REVERT",
      "path": "14"
    },
    "1403": {
      "fn": "Allowlist.verifySignature",
      "offset": [
        2495,
        2645
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "1404": {
      "op": "POP"
    },
    "1405": {
      "fn": "Allowlist.verifySignature",
      "offset": [
        2495,
        2645
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x243"
    },
    "1408": {
      "fn": "Allowlist.verifySignature",
      "offset": [
        2495,
        2645
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x58A"
    },
    "1411": {
      "fn": "Allowlist.verifySignature",
      "offset": [
        2495,
        2645
      ],
      "op": "CALLDATASIZE",
      "path": "14"
    },
    "1412": {
      "fn": "Allowlist.verifySignature",
      "offset": [
        2495,
        2645
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x4"
    },
    "1414": {
      "fn": "Allowlist.verifySignature",
      "offset": [
        2495,
        2645
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x2ADE"
    },
    "1417": {
      "fn": "Allowlist.verifySignature",
      "jump": "i",
      "offset": [
        2495,
        2645
      ],
      "op": "JUMP",
      "path": "14"
    },
    "1418": {
      "fn": "Allowlist.verifySignature",
      "offset": [
        2495,
        2645
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "1419": {
      "fn": "Allowlist.verifySignature",
      "offset": [
        2495,
        2645
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x1A94"
    },
    "1422": {
      "fn": "Allowlist.verifySignature",
      "jump": "i",
      "offset": [
        2495,
        2645
      ],
      "op": "JUMP",
      "path": "14"
    },
    "1423": {
      "fn": "IsValidWithDate.getTimeLeft",
      "offset": [
        2069,
        2517
      ],
      "op": "JUMPDEST",
      "path": "36"
    },
    "1424": {
      "fn": "IsValidWithDate.getTimeLeft",
      "offset": [
        2069,
        2517
      ],
      "op": "CALLVALUE",
      "path": "36"
    },
    "1425": {
      "fn": "IsValidWithDate.getTimeLeft",
      "offset": [
        2069,
        2517
      ],
      "op": "DUP1",
      "path": "36"
    },
    "1426": {
      "fn": "IsValidWithDate.getTimeLeft",
      "offset": [
        2069,
        2517
      ],
      "op": "ISZERO",
      "path": "36"
    },
    "1427": {
      "fn": "IsValidWithDate.getTimeLeft",
      "offset": [
        2069,
        2517
      ],
      "op": "PUSH2",
      "path": "36",
      "value": "0x59B"
    },
    "1430": {
      "fn": "IsValidWithDate.getTimeLeft",
      "offset": [
        2069,
        2517
      ],
      "op": "JUMPI",
      "path": "36"
    },
    "1431": {
      "fn": "IsValidWithDate.getTimeLeft",
      "offset": [
        2069,
        2517
      ],
      "op": "PUSH1",
      "path": "36",
      "value": "0x0"
    },
    "1433": {
      "fn": "IsValidWithDate.getTimeLeft",
      "offset": [
        2069,
        2517
      ],
      "op": "DUP1",
      "path": "36"
    },
    "1434": {
      "fn": "IsValidWithDate.getTimeLeft",
      "offset": [
        2069,
        2517
      ],
      "op": "REVERT",
      "path": "36"
    },
    "1435": {
      "fn": "IsValidWithDate.getTimeLeft",
      "offset": [
        2069,
        2517
      ],
      "op": "JUMPDEST",
      "path": "36"
    },
    "1436": {
      "op": "POP"
    },
    "1437": {
      "fn": "IsValidWithDate.getTimeLeft",
      "offset": [
        2069,
        2517
      ],
      "op": "PUSH2",
      "path": "36",
      "value": "0x3EB"
    },
    "1440": {
      "fn": "IsValidWithDate.getTimeLeft",
      "offset": [
        2069,
        2517
      ],
      "op": "PUSH2",
      "path": "36",
      "value": "0x5AA"
    },
    "1443": {
      "fn": "IsValidWithDate.getTimeLeft",
      "offset": [
        2069,
        2517
      ],
      "op": "CALLDATASIZE",
      "path": "36"
    },
    "1444": {
      "fn": "IsValidWithDate.getTimeLeft",
      "offset": [
        2069,
        2517
      ],
      "op": "PUSH1",
      "path": "36",
      "value": "0x4"
    },
    "1446": {
      "fn": "IsValidWithDate.getTimeLeft",
      "offset": [
        2069,
        2517
      ],
      "op": "PUSH2",
      "path": "36",
      "value": "0x28C3"
    },
    "1449": {
      "fn": "IsValidWithDate.getTimeLeft",
      "jump": "i",
      "offset": [
        2069,
        2517
      ],
      "op": "JUMP",
      "path": "36"
    },
    "1450": {
      "fn": "IsValidWithDate.getTimeLeft",
      "offset": [
        2069,
        2517
      ],
      "op": "JUMPDEST",
      "path": "36"
    },
    "1451": {
      "fn": "IsValidWithDate.getTimeLeft",
      "offset": [
        2069,
        2517
      ],
      "op": "PUSH2",
      "path": "36",
      "value": "0x1AA7"
    },
    "1454": {
      "fn": "IsValidWithDate.getTimeLeft",
      "jump": "i",
      "offset": [
        2069,
        2517
      ],
      "op": "JUMP",
      "path": "36"
    },
    "1455": {
      "fn": "Allowlist.verifySigner",
      "offset": [
        4852,
        5120
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "1456": {
      "fn": "Allowlist.verifySigner",
      "offset": [
        4852,
        5120
      ],
      "op": "CALLVALUE",
      "path": "14"
    },
    "1457": {
      "fn": "Allowlist.verifySigner",
      "offset": [
        4852,
        5120
      ],
      "op": "DUP1",
      "path": "14"
    },
    "1458": {
      "fn": "Allowlist.verifySigner",
      "offset": [
        4852,
        5120
      ],
      "op": "ISZERO",
      "path": "14"
    },
    "1459": {
      "fn": "Allowlist.verifySigner",
      "offset": [
        4852,
        5120
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x5BB"
    },
    "1462": {
      "fn": "Allowlist.verifySigner",
      "offset": [
        4852,
        5120
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "1463": {
      "fn": "Allowlist.verifySigner",
      "offset": [
        4852,
        5120
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x0"
    },
    "1465": {
      "fn": "Allowlist.verifySigner",
      "offset": [
        4852,
        5120
      ],
      "op": "DUP1",
      "path": "14"
    },
    "1466": {
      "fn": "Allowlist.verifySigner",
      "offset": [
        4852,
        5120
      ],
      "op": "REVERT",
      "path": "14"
    },
    "1467": {
      "fn": "Allowlist.verifySigner",
      "offset": [
        4852,
        5120
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "1468": {
      "op": "POP"
    },
    "1469": {
      "fn": "Allowlist.verifySigner",
      "offset": [
        4852,
        5120
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x243"
    },
    "1472": {
      "fn": "Allowlist.verifySigner",
      "offset": [
        4852,
        5120
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x5CA"
    },
    "1475": {
      "fn": "Allowlist.verifySigner",
      "offset": [
        4852,
        5120
      ],
      "op": "CALLDATASIZE",
      "path": "14"
    },
    "1476": {
      "fn": "Allowlist.verifySigner",
      "offset": [
        4852,
        5120
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x4"
    },
    "1478": {
      "fn": "Allowlist.verifySigner",
      "offset": [
        4852,
        5120
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x2B0F"
    },
    "1481": {
      "fn": "Allowlist.verifySigner",
      "jump": "i",
      "offset": [
        4852,
        5120
      ],
      "op": "JUMP",
      "path": "14"
    },
    "1482": {
      "fn": "Allowlist.verifySigner",
      "offset": [
        4852,
        5120
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "1483": {
      "fn": "Allowlist.verifySigner",
      "offset": [
        4852,
        5120
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x1AE4"
    },
    "1486": {
      "fn": "Allowlist.verifySigner",
      "jump": "i",
      "offset": [
        4852,
        5120
      ],
      "op": "JUMP",
      "path": "14"
    },
    "1487": {
      "fn": "SoulboundWithSignature.ownerIssueWithSignature",
      "offset": [
        1465,
        2131
      ],
      "op": "JUMPDEST",
      "path": "40"
    },
    "1488": {
      "fn": "SoulboundWithSignature.ownerIssueWithSignature",
      "offset": [
        1465,
        2131
      ],
      "op": "CALLVALUE",
      "path": "40"
    },
    "1489": {
      "fn": "SoulboundWithSignature.ownerIssueWithSignature",
      "offset": [
        1465,
        2131
      ],
      "op": "DUP1",
      "path": "40"
    },
    "1490": {
      "fn": "SoulboundWithSignature.ownerIssueWithSignature",
      "offset": [
        1465,
        2131
      ],
      "op": "ISZERO",
      "path": "40"
    },
    "1491": {
      "fn": "SoulboundWithSignature.ownerIssueWithSignature",
      "offset": [
        1465,
        2131
      ],
      "op": "PUSH2",
      "path": "40",
      "value": "0x5DB"
    },
    "1494": {
      "fn": "SoulboundWithSignature.ownerIssueWithSignature",
      "offset": [
        1465,
        2131
      ],
      "op": "JUMPI",
      "path": "40"
    },
    "1495": {
      "fn": "SoulboundWithSignature.ownerIssueWithSignature",
      "offset": [
        1465,
        2131
      ],
      "op": "PUSH1",
      "path": "40",
      "value": "0x0"
    },
    "1497": {
      "fn": "SoulboundWithSignature.ownerIssueWithSignature",
      "offset": [
        1465,
        2131
      ],
      "op": "DUP1",
      "path": "40"
    },
    "1498": {
      "fn": "SoulboundWithSignature.ownerIssueWithSignature",
      "offset": [
        1465,
        2131
      ],
      "op": "REVERT",
      "path": "40"
    },
    "1499": {
      "fn": "SoulboundWithSignature.ownerIssueWithSignature",
      "offset": [
        1465,
        2131
      ],
      "op": "JUMPDEST",
      "path": "40"
    },
    "1500": {
      "op": "POP"
    },
    "1501": {
      "fn": "SoulboundWithSignature.ownerIssueWithSignature",
      "offset": [
        1465,
        2131
      ],
      "op": "PUSH2",
      "path": "40",
      "value": "0x201"
    },
    "1504": {
      "fn": "SoulboundWithSignature.ownerIssueWithSignature",
      "offset": [
        1465,
        2131
      ],
      "op": "PUSH2",
      "path": "40",
      "value": "0x5EA"
    },
    "1507": {
      "fn": "SoulboundWithSignature.ownerIssueWithSignature",
      "offset": [
        1465,
        2131
      ],
      "op": "CALLDATASIZE",
      "path": "40"
    },
    "1508": {
      "fn": "SoulboundWithSignature.ownerIssueWithSignature",
      "offset": [
        1465,
        2131
      ],
      "op": "PUSH1",
      "path": "40",
      "value": "0x4"
    },
    "1510": {
      "fn": "SoulboundWithSignature.ownerIssueWithSignature",
      "offset": [
        1465,
        2131
      ],
      "op": "PUSH2",
      "path": "40",
      "value": "0x2A56"
    },
    "1513": {
      "fn": "SoulboundWithSignature.ownerIssueWithSignature",
      "jump": "i",
      "offset": [
        1465,
        2131
      ],
      "op": "JUMP",
      "path": "40"
    },
    "1514": {
      "fn": "SoulboundWithSignature.ownerIssueWithSignature",
      "offset": [
        1465,
        2131
      ],
      "op": "JUMPDEST",
      "path": "40"
    },
    "1515": {
      "fn": "SoulboundWithSignature.ownerIssueWithSignature",
      "offset": [
        1465,
        2131
      ],
      "op": "PUSH2",
      "path": "40",
      "value": "0x1B78"
    },
    "1518": {
      "fn": "SoulboundWithSignature.ownerIssueWithSignature",
      "jump": "i",
      "offset": [
        1465,
        2131
      ],
      "op": "JUMP",
      "path": "40"
    },
    "1519": {
      "fn": "SoulboundRedeemable.redeemPendingToken",
      "offset": [
        8593,
        10121
      ],
      "op": "JUMPDEST",
      "path": "39"
    },
    "1520": {
      "fn": "SoulboundRedeemable.redeemPendingToken",
      "offset": [
        8593,
        10121
      ],
      "op": "PUSH2",
      "path": "39",
      "value": "0x201"
    },
    "1523": {
      "fn": "SoulboundRedeemable.redeemPendingToken",
      "offset": [
        8593,
        10121
      ],
      "op": "PUSH2",
      "path": "39",
      "value": "0x5FD"
    },
    "1526": {
      "fn": "SoulboundRedeemable.redeemPendingToken",
      "offset": [
        8593,
        10121
      ],
      "op": "CALLDATASIZE",
      "path": "39"
    },
    "1527": {
      "fn": "SoulboundRedeemable.redeemPendingToken",
      "offset": [
        8593,
        10121
      ],
      "op": "PUSH1",
      "path": "39",
      "value": "0x4"
    },
    "1529": {
      "fn": "SoulboundRedeemable.redeemPendingToken",
      "offset": [
        8593,
        10121
      ],
      "op": "PUSH2",
      "path": "39",
      "value": "0x28DC"
    },
    "1532": {
      "fn": "SoulboundRedeemable.redeemPendingToken",
      "jump": "i",
      "offset": [
        8593,
        10121
      ],
      "op": "JUMP",
      "path": "39"
    },
    "1533": {
      "fn": "SoulboundRedeemable.redeemPendingToken",
      "offset": [
        8593,
        10121
      ],
      "op": "JUMPDEST",
      "path": "39"
    },
    "1534": {
      "fn": "SoulboundRedeemable.redeemPendingToken",
      "offset": [
        8593,
        10121
      ],
      "op": "PUSH2",
      "path": "39",
      "value": "0x1BF7"
    },
    "1537": {
      "fn": "SoulboundRedeemable.redeemPendingToken",
      "jump": "i",
      "offset": [
        8593,
        10121
      ],
      "op": "JUMP",
      "path": "39"
    },
    "1538": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1918,
        2116
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1539": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1918,
        2116
      ],
      "op": "CALLVALUE",
      "path": "0"
    },
    "1540": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1918,
        2116
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1541": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1918,
        2116
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "1542": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1918,
        2116
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x60E"
    },
    "1545": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1918,
        2116
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "1546": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1918,
        2116
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1548": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1918,
        2116
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1549": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1918,
        2116
      ],
      "op": "REVERT",
      "path": "0"
    },
    "1550": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1918,
        2116
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1551": {
      "op": "POP"
    },
    "1552": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1918,
        2116
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x201"
    },
    "1555": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1918,
        2116
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x61D"
    },
    "1558": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1918,
        2116
      ],
      "op": "CALLDATASIZE",
      "path": "0"
    },
    "1559": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1918,
        2116
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "1561": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1918,
        2116
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x290F"
    },
    "1564": {
      "fn": "Ownable.transferOwnership",
      "jump": "i",
      "offset": [
        1918,
        2116
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1565": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1918,
        2116
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1566": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1918,
        2116
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1DA3"
    },
    "1569": {
      "fn": "Ownable.transferOwnership",
      "jump": "i",
      "offset": [
        1918,
        2116
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1570": {
      "fn": "IsValidWithDate.isValid",
      "offset": [
        1723,
        1849
      ],
      "op": "JUMPDEST",
      "path": "36"
    },
    "1571": {
      "fn": "IsValidWithDate.isValid",
      "offset": [
        1723,
        1849
      ],
      "op": "CALLVALUE",
      "path": "36"
    },
    "1572": {
      "fn": "IsValidWithDate.isValid",
      "offset": [
        1723,
        1849
      ],
      "op": "DUP1",
      "path": "36"
    },
    "1573": {
      "fn": "IsValidWithDate.isValid",
      "offset": [
        1723,
        1849
      ],
      "op": "ISZERO",
      "path": "36"
    },
    "1574": {
      "fn": "IsValidWithDate.isValid",
      "offset": [
        1723,
        1849
      ],
      "op": "PUSH2",
      "path": "36",
      "value": "0x62E"
    },
    "1577": {
      "fn": "IsValidWithDate.isValid",
      "offset": [
        1723,
        1849
      ],
      "op": "JUMPI",
      "path": "36"
    },
    "1578": {
      "fn": "IsValidWithDate.isValid",
      "offset": [
        1723,
        1849
      ],
      "op": "PUSH1",
      "path": "36",
      "value": "0x0"
    },
    "1580": {
      "fn": "IsValidWithDate.isValid",
      "offset": [
        1723,
        1849
      ],
      "op": "DUP1",
      "path": "36"
    },
    "1581": {
      "fn": "IsValidWithDate.isValid",
      "offset": [
        1723,
        1849
      ],
      "op": "REVERT",
      "path": "36"
    },
    "1582": {
      "fn": "IsValidWithDate.isValid",
      "offset": [
        1723,
        1849
      ],
      "op": "JUMPDEST",
      "path": "36"
    },
    "1583": {
      "op": "POP"
    },
    "1584": {
      "fn": "IsValidWithDate.isValid",
      "offset": [
        1723,
        1849
      ],
      "op": "PUSH2",
      "path": "36",
      "value": "0x243"
    },
    "1587": {
      "fn": "IsValidWithDate.isValid",
      "offset": [
        1723,
        1849
      ],
      "op": "PUSH2",
      "path": "36",
      "value": "0x63D"
    },
    "1590": {
      "fn": "IsValidWithDate.isValid",
      "offset": [
        1723,
        1849
      ],
      "op": "CALLDATASIZE",
      "path": "36"
    },
    "1591": {
      "fn": "IsValidWithDate.isValid",
      "offset": [
        1723,
        1849
      ],
      "op": "PUSH1",
      "path": "36",
      "value": "0x4"
    },
    "1593": {
      "fn": "IsValidWithDate.isValid",
      "offset": [
        1723,
        1849
      ],
      "op": "PUSH2",
      "path": "36",
      "value": "0x28C3"
    },
    "1596": {
      "fn": "IsValidWithDate.isValid",
      "jump": "i",
      "offset": [
        1723,
        1849
      ],
      "op": "JUMP",
      "path": "36"
    },
    "1597": {
      "fn": "IsValidWithDate.isValid",
      "offset": [
        1723,
        1849
      ],
      "op": "JUMPDEST",
      "path": "36"
    },
    "1598": {
      "fn": "IsValidWithDate.isValid",
      "offset": [
        1778,
        1782
      ],
      "op": "PUSH1",
      "path": "36",
      "value": "0x0"
    },
    "1600": {
      "fn": "IsValidWithDate.getExpiryDate",
      "offset": [
        1459,
        1483
      ],
      "op": "SWAP1",
      "path": "36"
    },
    "1601": {
      "fn": "IsValidWithDate.getExpiryDate",
      "offset": [
        1459,
        1483
      ],
      "op": "DUP2",
      "path": "36"
    },
    "1602": {
      "fn": "IsValidWithDate.getExpiryDate",
      "offset": [
        1459,
        1483
      ],
      "op": "MSTORE",
      "path": "36"
    },
    "1603": {
      "fn": "IsValidWithDate.getExpiryDate",
      "offset": [
        1459,
        1483
      ],
      "op": "PUSH1",
      "path": "36",
      "value": "0x20"
    },
    "1605": {
      "fn": "IsValidWithDate.getExpiryDate",
      "offset": [
        1459,
        1483
      ],
      "op": "DUP2",
      "path": "36"
    },
    "1606": {
      "fn": "IsValidWithDate.getExpiryDate",
      "offset": [
        1459,
        1483
      ],
      "op": "SWAP1",
      "path": "36"
    },
    "1607": {
      "fn": "IsValidWithDate.getExpiryDate",
      "offset": [
        1459,
        1483
      ],
      "op": "MSTORE",
      "path": "36"
    },
    "1608": {
      "fn": "IsValidWithDate.getExpiryDate",
      "offset": [
        1459,
        1483
      ],
      "op": "PUSH1",
      "path": "36",
      "value": "0x40"
    },
    "1610": {
      "fn": "IsValidWithDate.getExpiryDate",
      "offset": [
        1459,
        1483
      ],
      "op": "SWAP1",
      "path": "36"
    },
    "1611": {
      "fn": "IsValidWithDate.getExpiryDate",
      "offset": [
        1459,
        1483
      ],
      "op": "KECCAK256",
      "path": "36"
    },
    "1612": {
      "fn": "IsValidWithDate.getExpiryDate",
      "offset": [
        1459,
        1483
      ],
      "op": "SLOAD",
      "path": "36"
    },
    "1613": {
      "fn": "IsValidWithDate.isValid",
      "offset": [
        1801,
        1816
      ],
      "op": "TIMESTAMP",
      "path": "36",
      "statement": 5
    },
    "1614": {
      "fn": "IsValidWithDate.isValid",
      "offset": [
        1801,
        1842
      ],
      "op": "GT",
      "path": "36"
    },
    "1615": {
      "fn": "IsValidWithDate.isValid",
      "offset": [
        1801,
        1842
      ],
      "op": "ISZERO",
      "path": "36"
    },
    "1616": {
      "fn": "IsValidWithDate.isValid",
      "offset": [
        1801,
        1842
      ],
      "op": "SWAP1",
      "path": "36"
    },
    "1617": {
      "fn": "IsValidWithDate.isValid",
      "offset": [
        1723,
        1849
      ],
      "op": "JUMP",
      "path": "36"
    },
    "1618": {
      "fn": "SoulboundRedeemable.getIndividualTokenPrice",
      "offset": [
        2947,
        3093
      ],
      "op": "JUMPDEST",
      "path": "39"
    },
    "1619": {
      "fn": "SoulboundRedeemable.getIndividualTokenPrice",
      "offset": [
        2947,
        3093
      ],
      "op": "CALLVALUE",
      "path": "39"
    },
    "1620": {
      "fn": "SoulboundRedeemable.getIndividualTokenPrice",
      "offset": [
        2947,
        3093
      ],
      "op": "DUP1",
      "path": "39"
    },
    "1621": {
      "fn": "SoulboundRedeemable.getIndividualTokenPrice",
      "offset": [
        2947,
        3093
      ],
      "op": "ISZERO",
      "path": "39"
    },
    "1622": {
      "fn": "SoulboundRedeemable.getIndividualTokenPrice",
      "offset": [
        2947,
        3093
      ],
      "op": "PUSH2",
      "path": "39",
      "value": "0x65E"
    },
    "1625": {
      "fn": "SoulboundRedeemable.getIndividualTokenPrice",
      "offset": [
        2947,
        3093
      ],
      "op": "JUMPI",
      "path": "39"
    },
    "1626": {
      "fn": "SoulboundRedeemable.getIndividualTokenPrice",
      "offset": [
        2947,
        3093
      ],
      "op": "PUSH1",
      "path": "39",
      "value": "0x0"
    },
    "1628": {
      "fn": "SoulboundRedeemable.getIndividualTokenPrice",
      "offset": [
        2947,
        3093
      ],
      "op": "DUP1",
      "path": "39"
    },
    "1629": {
      "fn": "SoulboundRedeemable.getIndividualTokenPrice",
      "offset": [
        2947,
        3093
      ],
      "op": "REVERT",
      "path": "39"
    },
    "1630": {
      "fn": "SoulboundRedeemable.getIndividualTokenPrice",
      "offset": [
        2947,
        3093
      ],
      "op": "JUMPDEST",
      "path": "39"
    },
    "1631": {
      "op": "POP"
    },
    "1632": {
      "fn": "SoulboundRedeemable.getIndividualTokenPrice",
      "offset": [
        3076,
        3086
      ],
      "op": "PUSH1",
      "path": "39",
      "statement": 6,
      "value": "0xF"
    },
    "1634": {
      "fn": "SoulboundRedeemable.getIndividualTokenPrice",
      "offset": [
        3076,
        3086
      ],
      "op": "SLOAD",
      "path": "39"
    },
    "1635": {
      "fn": "SoulboundRedeemable.getIndividualTokenPrice",
      "offset": [
        2947,
        3093
      ],
      "op": "PUSH2",
      "path": "39",
      "value": "0x3EB"
    },
    "1638": {
      "fn": "SoulboundRedeemable.getIndividualTokenPrice",
      "offset": [
        2947,
        3093
      ],
      "op": "JUMP",
      "path": "39"
    },
    "1639": {
      "fn": "Soulbound.issuerOf",
      "offset": [
        4302,
        4822
      ],
      "op": "JUMPDEST",
      "path": "37"
    },
    "1640": {
      "fn": "Soulbound.issuerOf",
      "offset": [
        4302,
        4822
      ],
      "op": "CALLVALUE",
      "path": "37"
    },
    "1641": {
      "fn": "Soulbound.issuerOf",
      "offset": [
        4302,
        4822
      ],
      "op": "DUP1",
      "path": "37"
    },
    "1642": {
      "fn": "Soulbound.issuerOf",
      "offset": [
        4302,
        4822
      ],
      "op": "ISZERO",
      "path": "37"
    },
    "1643": {
      "fn": "Soulbound.issuerOf",
      "offset": [
        4302,
        4822
      ],
      "op": "PUSH2",
      "path": "37",
      "value": "0x673"
    },
    "1646": {
      "fn": "Soulbound.issuerOf",
      "offset": [
        4302,
        4822
      ],
      "op": "JUMPI",
      "path": "37"
    },
    "1647": {
      "fn": "Soulbound.issuerOf",
      "offset": [
        4302,
        4822
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0x0"
    },
    "1649": {
      "fn": "Soulbound.issuerOf",
      "offset": [
        4302,
        4822
      ],
      "op": "DUP1",
      "path": "37"
    },
    "1650": {
      "fn": "Soulbound.issuerOf",
      "offset": [
        4302,
        4822
      ],
      "op": "REVERT",
      "path": "37"
    },
    "1651": {
      "fn": "Soulbound.issuerOf",
      "offset": [
        4302,
        4822
      ],
      "op": "JUMPDEST",
      "path": "37"
    },
    "1652": {
      "op": "POP"
    },
    "1653": {
      "fn": "Soulbound.issuerOf",
      "offset": [
        4302,
        4822
      ],
      "op": "PUSH2",
      "path": "37",
      "value": "0x3A6"
    },
    "1656": {
      "fn": "Soulbound.issuerOf",
      "offset": [
        4302,
        4822
      ],
      "op": "PUSH2",
      "path": "37",
      "value": "0x682"
    },
    "1659": {
      "fn": "Soulbound.issuerOf",
      "offset": [
        4302,
        4822
      ],
      "op": "CALLDATASIZE",
      "path": "37"
    },
    "1660": {
      "fn": "Soulbound.issuerOf",
      "offset": [
        4302,
        4822
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0x4"
    },
    "1662": {
      "fn": "Soulbound.issuerOf",
      "offset": [
        4302,
        4822
      ],
      "op": "PUSH2",
      "path": "37",
      "value": "0x2719"
    },
    "1665": {
      "fn": "Soulbound.issuerOf",
      "jump": "i",
      "offset": [
        4302,
        4822
      ],
      "op": "JUMP",
      "path": "37"
    },
    "1666": {
      "fn": "Soulbound.issuerOf",
      "offset": [
        4302,
        4822
      ],
      "op": "JUMPDEST",
      "path": "37"
    },
    "1667": {
      "fn": "Soulbound.issuerOf",
      "offset": [
        4302,
        4822
      ],
      "op": "PUSH2",
      "path": "37",
      "value": "0x1E3B"
    },
    "1670": {
      "fn": "Soulbound.issuerOf",
      "jump": "i",
      "offset": [
        4302,
        4822
      ],
      "op": "JUMP",
      "path": "37"
    },
    "1671": {
      "fn": "SoulboundRedeemable.setPrice",
      "offset": [
        3672,
        4009
      ],
      "op": "JUMPDEST",
      "path": "39"
    },
    "1672": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x6"
    },
    "1674": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "1675": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1677": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1679": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1681": {
      "op": "SHL"
    },
    "1682": {
      "op": "SUB"
    },
    "1683": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "AND",
      "path": "0"
    },
    "1684": {
      "fn": "Context._msgSender",
      "offset": [
        719,
        729
      ],
      "op": "CALLER",
      "path": "5",
      "statement": 7
    },
    "1685": {
      "offset": [
        1248,
        1271
      ],
      "op": "EQ",
      "path": "0"
    },
    "1686": {
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x6BA"
    },
    "1689": {
      "offset": [
        1240,
        1308
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "1690": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "1692": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "1693": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1697": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1699": {
      "op": "SHL"
    },
    "1700": {
      "offset": [
        1240,
        1308
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1701": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1702": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "1704": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "ADD",
      "path": "0"
    },
    "1705": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x6B1"
    },
    "1708": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1709": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2B66"
    },
    "1712": {
      "fn": "Context._msgSender",
      "jump": "i",
      "offset": [
        1240,
        1308
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1713": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1714": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "1716": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "1717": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1718": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "1719": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "SUB",
      "path": "0"
    },
    "1720": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1721": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "REVERT",
      "optimizer_revert": true,
      "path": "0"
    },
    "1722": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1723": {
      "fn": "SoulboundRedeemable.setPrice",
      "offset": [
        3782,
        3788
      ],
      "op": "DUP2",
      "path": "39"
    },
    "1724": {
      "offset": [
        1704,
        1723
      ],
      "op": "PUSH2",
      "path": "38",
      "value": "0x6CD"
    },
    "1727": {
      "fn": "Allowlist.getAllowlistOwner",
      "offset": [
        2247,
        2261
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x9"
    },
    "1729": {
      "fn": "Allowlist.getAllowlistOwner",
      "offset": [
        2247,
        2261
      ],
      "op": "SLOAD",
      "path": "14"
    },
    "1730": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1732": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1734": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1736": {
      "op": "SHL"
    },
    "1737": {
      "op": "SUB"
    },
    "1738": {
      "fn": "Allowlist.getAllowlistOwner",
      "offset": [
        2247,
        2261
      ],
      "op": "AND",
      "path": "14"
    },
    "1739": {
      "fn": "Allowlist.getAllowlistOwner",
      "offset": [
        2247,
        2261
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "1740": {
      "fn": "Allowlist.getAllowlistOwner",
      "offset": [
        2171,
        2268
      ],
      "op": "JUMP",
      "path": "14"
    },
    "1741": {
      "offset": [
        1704,
        1723
      ],
      "op": "JUMPDEST",
      "path": "38"
    },
    "1742": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1744": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1746": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1748": {
      "op": "SHL"
    },
    "1749": {
      "op": "SUB"
    },
    "1750": {
      "offset": [
        1693,
        1723
      ],
      "op": "AND",
      "path": "38"
    },
    "1751": {
      "offset": [
        1693,
        1700
      ],
      "op": "DUP2",
      "path": "38"
    },
    "1752": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1754": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1756": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1758": {
      "op": "SHL"
    },
    "1759": {
      "op": "SUB"
    },
    "1760": {
      "offset": [
        1693,
        1723
      ],
      "op": "AND",
      "path": "38"
    },
    "1761": {
      "fn": "Allowlist.getAllowlistOwner",
      "offset": [
        1693,
        1723
      ],
      "op": "EQ",
      "path": "38"
    },
    "1762": {
      "offset": [
        1685,
        1748
      ],
      "op": "PUSH2",
      "path": "38",
      "value": "0x6FD"
    },
    "1765": {
      "offset": [
        1685,
        1748
      ],
      "op": "JUMPI",
      "path": "38"
    },
    "1766": {
      "fn": "Allowlist.getAllowlistOwner",
      "offset": [
        1685,
        1748
      ],
      "op": "PUSH1",
      "path": "38",
      "value": "0x40"
    },
    "1768": {
      "fn": "Allowlist.getAllowlistOwner",
      "offset": [
        1685,
        1748
      ],
      "op": "MLOAD",
      "path": "38"
    },
    "1769": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1773": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1775": {
      "op": "SHL"
    },
    "1776": {
      "offset": [
        1685,
        1748
      ],
      "op": "DUP2",
      "path": "38"
    },
    "1777": {
      "fn": "Allowlist.getAllowlistOwner",
      "offset": [
        1685,
        1748
      ],
      "op": "MSTORE",
      "path": "38"
    },
    "1778": {
      "fn": "Allowlist.getAllowlistOwner",
      "offset": [
        1685,
        1748
      ],
      "op": "PUSH1",
      "path": "38",
      "value": "0x4"
    },
    "1780": {
      "fn": "Allowlist.getAllowlistOwner",
      "offset": [
        1685,
        1748
      ],
      "op": "ADD",
      "path": "38"
    },
    "1781": {
      "fn": "Allowlist.getAllowlistOwner",
      "offset": [
        1685,
        1748
      ],
      "op": "PUSH2",
      "path": "38",
      "value": "0x6B1"
    },
    "1784": {
      "fn": "Allowlist.getAllowlistOwner",
      "offset": [
        1685,
        1748
      ],
      "op": "SWAP1",
      "path": "38"
    },
    "1785": {
      "fn": "Allowlist.getAllowlistOwner",
      "offset": [
        1685,
        1748
      ],
      "op": "PUSH2",
      "path": "38",
      "value": "0x2B9B"
    },
    "1788": {
      "fn": "Allowlist.getAllowlistOwner",
      "jump": "i",
      "offset": [
        1685,
        1748
      ],
      "op": "JUMP",
      "path": "38"
    },
    "1789": {
      "fn": "Allowlist.getAllowlistOwner",
      "offset": [
        1685,
        1748
      ],
      "op": "JUMPDEST",
      "path": "38"
    },
    "1790": {
      "fn": "SoulboundRedeemable.getPriceLimit",
      "offset": [
        3365,
        3375
      ],
      "op": "PUSH1",
      "path": "39",
      "value": "0xE"
    },
    "1792": {
      "fn": "SoulboundRedeemable.getPriceLimit",
      "offset": [
        3365,
        3375
      ],
      "op": "SLOAD",
      "path": "39"
    },
    "1793": {
      "fn": "SoulboundRedeemable.setPrice",
      "offset": [
        3891,
        3897
      ],
      "op": "DUP3",
      "path": "39",
      "statement": 8
    },
    "1794": {
      "fn": "SoulboundRedeemable.setPrice",
      "offset": [
        3891,
        3916
      ],
      "op": "GT",
      "path": "39"
    },
    "1795": {
      "branch": 138,
      "fn": "SoulboundRedeemable.setPrice",
      "offset": [
        3891,
        3916
      ],
      "op": "ISZERO",
      "path": "39"
    },
    "1796": {
      "fn": "SoulboundRedeemable.setPrice",
      "offset": [
        3883,
        3945
      ],
      "op": "PUSH2",
      "path": "39",
      "value": "0x74F"
    },
    "1799": {
      "branch": 138,
      "fn": "SoulboundRedeemable.setPrice",
      "offset": [
        3883,
        3945
      ],
      "op": "JUMPI",
      "path": "39"
    },
    "1800": {
      "fn": "SoulboundRedeemable.setPrice",
      "offset": [
        3883,
        3945
      ],
      "op": "PUSH1",
      "path": "39",
      "value": "0x40"
    },
    "1802": {
      "fn": "SoulboundRedeemable.setPrice",
      "offset": [
        3883,
        3945
      ],
      "op": "MLOAD",
      "path": "39"
    },
    "1803": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1807": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1809": {
      "op": "SHL"
    },
    "1810": {
      "fn": "SoulboundRedeemable.setPrice",
      "offset": [
        3883,
        3945
      ],
      "op": "DUP2",
      "path": "39"
    },
    "1811": {
      "fn": "SoulboundRedeemable.setPrice",
      "offset": [
        3883,
        3945
      ],
      "op": "MSTORE",
      "path": "39"
    },
    "1812": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1814": {
      "fn": "SoulboundRedeemable.setPrice",
      "offset": [
        3883,
        3945
      ],
      "op": "PUSH1",
      "path": "39",
      "value": "0x4"
    },
    "1816": {
      "fn": "SoulboundRedeemable.setPrice",
      "offset": [
        3883,
        3945
      ],
      "op": "DUP3",
      "path": "39"
    },
    "1817": {
      "fn": "SoulboundRedeemable.setPrice",
      "offset": [
        3883,
        3945
      ],
      "op": "ADD",
      "path": "39"
    },
    "1818": {
      "op": "MSTORE"
    },
    "1819": {
      "op": "PUSH1",
      "value": "0x18"
    },
    "1821": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "1823": {
      "op": "DUP3"
    },
    "1824": {
      "op": "ADD"
    },
    "1825": {
      "op": "MSTORE"
    },
    "1826": {
      "op": "PUSH32",
      "value": "0x507269636520686967686572207468616E206C696D69742E0000000000000000"
    },
    "1859": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "1861": {
      "op": "DUP3"
    },
    "1862": {
      "op": "ADD"
    },
    "1863": {
      "op": "MSTORE"
    },
    "1864": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "1866": {
      "op": "ADD"
    },
    "1867": {
      "fn": "SoulboundRedeemable.setPrice",
      "offset": [
        3883,
        3945
      ],
      "op": "PUSH2",
      "path": "39",
      "value": "0x6B1"
    },
    "1870": {
      "op": "JUMP"
    },
    "1871": {
      "fn": "SoulboundRedeemable.setPrice",
      "offset": [
        3883,
        3945
      ],
      "op": "JUMPDEST",
      "path": "39"
    },
    "1872": {
      "op": "POP"
    },
    "1873": {
      "fn": "SoulboundRedeemable.setPrice",
      "offset": [
        3983,
        3993
      ],
      "op": "PUSH1",
      "path": "39",
      "statement": 9,
      "value": "0xF"
    },
    "1875": {
      "fn": "SoulboundRedeemable.setPrice",
      "offset": [
        3983,
        4002
      ],
      "op": "SSTORE",
      "path": "39"
    },
    "1876": {
      "op": "POP"
    },
    "1877": {
      "fn": "SoulboundRedeemable.setPrice",
      "jump": "o",
      "offset": [
        3672,
        4009
      ],
      "op": "JUMP",
      "path": "39"
    },
    "1878": {
      "fn": "ERC4973.supportsInterface",
      "offset": [
        4448,
        4776
      ],
      "op": "JUMPDEST",
      "path": "41"
    },
    "1879": {
      "fn": "ERC4973.supportsInterface",
      "offset": [
        4573,
        4577
      ],
      "op": "PUSH1",
      "path": "41",
      "value": "0x0"
    },
    "1881": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1883": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1885": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "1887": {
      "op": "SHL"
    },
    "1888": {
      "op": "SUB"
    },
    "1889": {
      "op": "NOT"
    },
    "1890": {
      "fn": "ERC4973.supportsInterface",
      "offset": [
        4612,
        4660
      ],
      "op": "DUP3",
      "path": "41",
      "statement": 10
    },
    "1891": {
      "fn": "ERC4973.supportsInterface",
      "offset": [
        4612,
        4660
      ],
      "op": "AND",
      "path": "41"
    },
    "1892": {
      "op": "PUSH4",
      "value": "0x5B5E139F"
    },
    "1897": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "1899": {
      "op": "SHL"
    },
    "1900": {
      "fn": "ERC4973.supportsInterface",
      "offset": [
        4612,
        4660
      ],
      "op": "EQ",
      "path": "41"
    },
    "1901": {
      "fn": "ERC4973.supportsInterface",
      "offset": [
        4612,
        4660
      ],
      "op": "DUP1",
      "path": "41"
    },
    "1902": {
      "fn": "ERC4973.supportsInterface",
      "offset": [
        4612,
        4717
      ],
      "op": "PUSH2",
      "path": "41",
      "value": "0x787"
    },
    "1905": {
      "fn": "ERC4973.supportsInterface",
      "offset": [
        4612,
        4717
      ],
      "op": "JUMPI",
      "path": "41"
    },
    "1906": {
      "op": "POP"
    },
    "1907": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1909": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1911": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "1913": {
      "op": "SHL"
    },
    "1914": {
      "op": "SUB"
    },
    "1915": {
      "op": "NOT"
    },
    "1916": {
      "fn": "ERC4973.supportsInterface",
      "offset": [
        4676,
        4717
      ],
      "op": "DUP3",
      "path": "41"
    },
    "1917": {
      "fn": "ERC4973.supportsInterface",
      "offset": [
        4676,
        4717
      ],
      "op": "AND",
      "path": "41"
    },
    "1918": {
      "op": "PUSH4",
      "value": "0x5164CF47"
    },
    "1923": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "1925": {
      "op": "SHL"
    },
    "1926": {
      "fn": "ERC4973.supportsInterface",
      "offset": [
        4676,
        4717
      ],
      "op": "EQ",
      "path": "41"
    },
    "1927": {
      "fn": "ERC4973.supportsInterface",
      "offset": [
        4612,
        4717
      ],
      "op": "JUMPDEST",
      "path": "41"
    },
    "1928": {
      "fn": "ERC4973.supportsInterface",
      "offset": [
        4612,
        4769
      ],
      "op": "DUP1",
      "path": "41"
    },
    "1929": {
      "fn": "ERC4973.supportsInterface",
      "offset": [
        4612,
        4769
      ],
      "op": "PUSH2",
      "path": "41",
      "value": "0x7A2"
    },
    "1932": {
      "fn": "ERC4973.supportsInterface",
      "offset": [
        4612,
        4769
      ],
      "op": "JUMPI",
      "path": "41"
    },
    "1933": {
      "op": "POP"
    },
    "1934": {
      "op": "PUSH4",
      "value": "0x1FFC9A7"
    },
    "1939": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "1941": {
      "op": "SHL"
    },
    "1942": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1944": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1946": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "1948": {
      "op": "SHL"
    },
    "1949": {
      "op": "SUB"
    },
    "1950": {
      "op": "NOT"
    },
    "1951": {
      "fn": "ERC165.supportsInterface",
      "offset": [
        1757,
        1797
      ],
      "op": "DUP4",
      "path": "41",
      "statement": 11
    },
    "1952": {
      "fn": "ERC165.supportsInterface",
      "offset": [
        1757,
        1797
      ],
      "op": "AND",
      "path": "41"
    },
    "1953": {
      "fn": "ERC165.supportsInterface",
      "offset": [
        1757,
        1797
      ],
      "op": "EQ",
      "path": "41"
    },
    "1954": {
      "fn": "ERC4973.supportsInterface",
      "offset": [
        4733,
        4769
      ],
      "op": "JUMPDEST",
      "path": "41"
    },
    "1955": {
      "fn": "ERC4973.supportsInterface",
      "offset": [
        4593,
        4769
      ],
      "op": "SWAP3",
      "path": "41"
    },
    "1956": {
      "fn": "ERC4973.supportsInterface",
      "offset": [
        4448,
        4776
      ],
      "op": "SWAP2",
      "path": "41"
    },
    "1957": {
      "op": "POP"
    },
    "1958": {
      "op": "POP"
    },
    "1959": {
      "fn": "ERC4973.supportsInterface",
      "jump": "o",
      "offset": [
        4448,
        4776
      ],
      "op": "JUMP",
      "path": "41"
    },
    "1960": {
      "fn": "ERC4973.name",
      "offset": [
        4782,
        4880
      ],
      "op": "JUMPDEST",
      "path": "41"
    },
    "1961": {
      "fn": "ERC4973.name",
      "offset": [
        4836,
        4849
      ],
      "op": "PUSH1",
      "path": "41",
      "value": "0x60"
    },
    "1963": {
      "fn": "ERC4973.name",
      "offset": [
        4868,
        4873
      ],
      "op": "PUSH1",
      "path": "41",
      "statement": 12,
      "value": "0x1"
    },
    "1965": {
      "fn": "ERC4973.name",
      "offset": [
        4861,
        4873
      ],
      "op": "DUP1",
      "path": "41"
    },
    "1966": {
      "fn": "ERC4973.name",
      "offset": [
        4861,
        4873
      ],
      "op": "SLOAD",
      "path": "41"
    },
    "1967": {
      "fn": "ERC4973.name",
      "offset": [
        4861,
        4873
      ],
      "op": "PUSH2",
      "path": "41",
      "value": "0x7B7"
    },
    "1970": {
      "fn": "ERC4973.name",
      "offset": [
        4861,
        4873
      ],
      "op": "SWAP1",
      "path": "41"
    },
    "1971": {
      "fn": "ERC4973.name",
      "offset": [
        4861,
        4873
      ],
      "op": "PUSH2",
      "path": "41",
      "value": "0x2BC9"
    },
    "1974": {
      "fn": "ERC4973.name",
      "jump": "i",
      "offset": [
        4861,
        4873
      ],
      "op": "JUMP",
      "path": "41"
    },
    "1975": {
      "fn": "ERC4973.name",
      "offset": [
        4861,
        4873
      ],
      "op": "JUMPDEST",
      "path": "41"
    },
    "1976": {
      "fn": "ERC4973.name",
      "offset": [
        4861,
        4873
      ],
      "op": "DUP1",
      "path": "41"
    },
    "1977": {
      "fn": "ERC4973.name",
      "offset": [
        4861,
        4873
      ],
      "op": "PUSH1",
      "path": "41",
      "value": "0x1F"
    },
    "1979": {
      "fn": "ERC4973.name",
      "offset": [
        4861,
        4873
      ],
      "op": "ADD",
      "path": "41"
    },
    "1980": {
      "fn": "ERC4973.name",
      "offset": [
        4861,
        4873
      ],
      "op": "PUSH1",
      "path": "41",
      "value": "0x20"
    },
    "1982": {
      "fn": "ERC4973.name",
      "offset": [
        4861,
        4873
      ],
      "op": "DUP1",
      "path": "41"
    },
    "1983": {
      "fn": "ERC4973.name",
      "offset": [
        4861,
        4873
      ],
      "op": "SWAP2",
      "path": "41"
    },
    "1984": {
      "fn": "ERC4973.name",
      "offset": [
        4861,
        4873
      ],
      "op": "DIV",
      "path": "41"
    },
    "1985": {
      "fn": "ERC4973.name",
      "offset": [
        4861,
        4873
      ],
      "op": "MUL",
      "path": "41"
    },
    "1986": {
      "fn": "ERC4973.name",
      "offset": [
        4861,
        4873
      ],
      "op": "PUSH1",
      "path": "41",
      "value": "0x20"
    },
    "1988": {
      "fn": "ERC4973.name",
      "offset": [
        4861,
        4873
      ],
      "op": "ADD",
      "path": "41"
    },
    "1989": {
      "fn": "ERC4973.name",
      "offset": [
        4861,
        4873
      ],
      "op": "PUSH1",
      "path": "41",
      "value": "0x40"
    },
    "1991": {
      "fn": "ERC4973.name",
      "offset": [
        4861,
        4873
      ],
      "op": "MLOAD",
      "path": "41"
    },
    "1992": {
      "fn": "ERC4973.name",
      "offset": [
        4861,
        4873
      ],
      "op": "SWAP1",
      "path": "41"
    },
    "1993": {
      "fn": "ERC4973.name",
      "offset": [
        4861,
        4873
      ],
      "op": "DUP2",
      "path": "41"
    },
    "1994": {
      "fn": "ERC4973.name",
      "offset": [
        4861,
        4873
      ],
      "op": "ADD",
      "path": "41"
    },
    "1995": {
      "fn": "ERC4973.name",
      "offset": [
        4861,
        4873
      ],
      "op": "PUSH1",
      "path": "41",
      "value": "0x40"
    },
    "1997": {
      "fn": "ERC4973.name",
      "offset": [
        4861,
        4873
      ],
      "op": "MSTORE",
      "path": "41"
    },
    "1998": {
      "fn": "ERC4973.name",
      "offset": [
        4861,
        4873
      ],
      "op": "DUP1",
      "path": "41"
    },
    "1999": {
      "fn": "ERC4973.name",
      "offset": [
        4861,
        4873
      ],
      "op": "SWAP3",
      "path": "41"
    },
    "2000": {
      "fn": "ERC4973.name",
      "offset": [
        4861,
        4873
      ],
      "op": "SWAP2",
      "path": "41"
    },
    "2001": {
      "fn": "ERC4973.name",
      "offset": [
        4861,
        4873
      ],
      "op": "SWAP1",
      "path": "41"
    },
    "2002": {
      "fn": "ERC4973.name",
      "offset": [
        4861,
        4873
      ],
      "op": "DUP2",
      "path": "41"
    },
    "2003": {
      "fn": "ERC4973.name",
      "offset": [
        4861,
        4873
      ],
      "op": "DUP2",
      "path": "41"
    },
    "2004": {
      "fn": "ERC4973.name",
      "offset": [
        4861,
        4873
      ],
      "op": "MSTORE",
      "path": "41"
    },
    "2005": {
      "fn": "ERC4973.name",
      "offset": [
        4861,
        4873
      ],
      "op": "PUSH1",
      "path": "41",
      "value": "0x20"
    },
    "2007": {
      "fn": "ERC4973.name",
      "offset": [
        4861,
        4873
      ],
      "op": "ADD",
      "path": "41"
    },
    "2008": {
      "fn": "ERC4973.name",
      "offset": [
        4861,
        4873
      ],
      "op": "DUP3",
      "path": "41"
    },
    "2009": {
      "fn": "ERC4973.name",
      "offset": [
        4861,
        4873
      ],
      "op": "DUP1",
      "path": "41"
    },
    "2010": {
      "fn": "ERC4973.name",
      "offset": [
        4861,
        4873
      ],
      "op": "SLOAD",
      "path": "41"
    },
    "2011": {
      "fn": "ERC4973.name",
      "offset": [
        4861,
        4873
      ],
      "op": "PUSH2",
      "path": "41",
      "value": "0x7E3"
    },
    "2014": {
      "fn": "ERC4973.name",
      "offset": [
        4861,
        4873
      ],
      "op": "SWAP1",
      "path": "41"
    },
    "2015": {
      "fn": "ERC4973.name",
      "offset": [
        4861,
        4873
      ],
      "op": "PUSH2",
      "path": "41",
      "value": "0x2BC9"
    },
    "2018": {
      "fn": "ERC4973.name",
      "jump": "i",
      "offset": [
        4861,
        4873
      ],
      "op": "JUMP",
      "path": "41"
    },
    "2019": {
      "fn": "ERC4973.name",
      "offset": [
        4861,
        4873
      ],
      "op": "JUMPDEST",
      "path": "41"
    },
    "2020": {
      "fn": "ERC4973.name",
      "offset": [
        4861,
        4873
      ],
      "op": "DUP1",
      "path": "41"
    },
    "2021": {
      "fn": "ERC4973.name",
      "offset": [
        4861,
        4873
      ],
      "op": "ISZERO",
      "path": "41"
    },
    "2022": {
      "fn": "ERC4973.name",
      "offset": [
        4861,
        4873
      ],
      "op": "PUSH2",
      "path": "41",
      "value": "0x830"
    },
    "2025": {
      "fn": "ERC4973.name",
      "offset": [
        4861,
        4873
      ],
      "op": "JUMPI",
      "path": "41"
    },
    "2026": {
      "fn": "ERC4973.name",
      "offset": [
        4861,
        4873
      ],
      "op": "DUP1",
      "path": "41"
    },
    "2027": {
      "fn": "ERC4973.name",
      "offset": [
        4861,
        4873
      ],
      "op": "PUSH1",
      "path": "41",
      "value": "0x1F"
    },
    "2029": {
      "fn": "ERC4973.name",
      "offset": [
        4861,
        4873
      ],
      "op": "LT",
      "path": "41"
    },
    "2030": {
      "fn": "ERC4973.name",
      "offset": [
        4861,
        4873
      ],
      "op": "PUSH2",
      "path": "41",
      "value": "0x805"
    },
    "2033": {
      "fn": "ERC4973.name",
      "offset": [
        4861,
        4873
      ],
      "op": "JUMPI",
      "path": "41"
    },
    "2034": {
      "fn": "ERC4973.name",
      "offset": [
        4861,
        4873
      ],
      "op": "PUSH2",
      "path": "41",
      "value": "0x100"
    },
    "2037": {
      "fn": "ERC4973.name",
      "offset": [
        4861,
        4873
      ],
      "op": "DUP1",
      "path": "41"
    },
    "2038": {
      "fn": "ERC4973.name",
      "offset": [
        4861,
        4873
      ],
      "op": "DUP4",
      "path": "41"
    },
    "2039": {
      "fn": "ERC4973.name",
      "offset": [
        4861,
        4873
      ],
      "op": "SLOAD",
      "path": "41"
    },
    "2040": {
      "fn": "ERC4973.name",
      "offset": [
        4861,
        4873
      ],
      "op": "DIV",
      "path": "41"
    },
    "2041": {
      "fn": "ERC4973.name",
      "offset": [
        4861,
        4873
      ],
      "op": "MUL",
      "path": "41"
    },
    "2042": {
      "fn": "ERC4973.name",
      "offset": [
        4861,
        4873
      ],
      "op": "DUP4",
      "path": "41"
    },
    "2043": {
      "fn": "ERC4973.name",
      "offset": [
        4861,
        4873
      ],
      "op": "MSTORE",
      "path": "41"
    },
    "2044": {
      "fn": "ERC4973.name",
      "offset": [
        4861,
        4873
      ],
      "op": "SWAP2",
      "path": "41"
    },
    "2045": {
      "fn": "ERC4973.name",
      "offset": [
        4861,
        4873
      ],
      "op": "PUSH1",
      "path": "41",
      "value": "0x20"
    },
    "2047": {
      "fn": "ERC4973.name",
      "offset": [
        4861,
        4873
      ],
      "op": "ADD",
      "path": "41"
    },
    "2048": {
      "fn": "ERC4973.name",
      "offset": [
        4861,
        4873
      ],
      "op": "SWAP2",
      "path": "41"
    },
    "2049": {
      "fn": "ERC4973.name",
      "offset": [
        4861,
        4873
      ],
      "op": "PUSH2",
      "path": "41",
      "value": "0x830"
    },
    "2052": {
      "fn": "ERC4973.name",
      "offset": [
        4861,
        4873
      ],
      "op": "JUMP",
      "path": "41"
    },
    "2053": {
      "fn": "ERC4973.name",
      "offset": [
        4861,
        4873
      ],
      "op": "JUMPDEST",
      "path": "41"
    },
    "2054": {
      "fn": "ERC4973.name",
      "offset": [
        4861,
        4873
      ],
      "op": "DUP3",
      "path": "41"
    },
    "2055": {
      "fn": "ERC4973.name",
      "offset": [
        4861,
        4873
      ],
      "op": "ADD",
      "path": "41"
    },
    "2056": {
      "fn": "ERC4973.name",
      "offset": [
        4861,
        4873
      ],
      "op": "SWAP2",
      "path": "41"
    },
    "2057": {
      "fn": "ERC4973.name",
      "offset": [
        4861,
        4873
      ],
      "op": "SWAP1",
      "path": "41"
    },
    "2058": {
      "fn": "ERC4973.name",
      "offset": [
        4861,
        4873
      ],
      "op": "PUSH1",
      "path": "41",
      "value": "0x0"
    },
    "2060": {
      "fn": "ERC4973.name",
      "offset": [
        4861,
        4873
      ],
      "op": "MSTORE",
      "path": "41"
    },
    "2061": {
      "fn": "ERC4973.name",
      "offset": [
        4861,
        4873
      ],
      "op": "PUSH1",
      "path": "41",
      "value": "0x20"
    },
    "2063": {
      "fn": "ERC4973.name",
      "offset": [
        4861,
        4873
      ],
      "op": "PUSH1",
      "path": "41",
      "value": "0x0"
    },
    "2065": {
      "fn": "ERC4973.name",
      "offset": [
        4861,
        4873
      ],
      "op": "KECCAK256",
      "path": "41"
    },
    "2066": {
      "fn": "ERC4973.name",
      "offset": [
        4861,
        4873
      ],
      "op": "SWAP1",
      "path": "41"
    },
    "2067": {
      "fn": "ERC4973.name",
      "offset": [
        4861,
        4873
      ],
      "op": "JUMPDEST",
      "path": "41"
    },
    "2068": {
      "fn": "ERC4973.name",
      "offset": [
        4861,
        4873
      ],
      "op": "DUP2",
      "path": "41"
    },
    "2069": {
      "fn": "ERC4973.name",
      "offset": [
        4861,
        4873
      ],
      "op": "SLOAD",
      "path": "41"
    },
    "2070": {
      "fn": "ERC4973.name",
      "offset": [
        4861,
        4873
      ],
      "op": "DUP2",
      "path": "41"
    },
    "2071": {
      "fn": "ERC4973.name",
      "offset": [
        4861,
        4873
      ],
      "op": "MSTORE",
      "path": "41"
    },
    "2072": {
      "fn": "ERC4973.name",
      "offset": [
        4861,
        4873
      ],
      "op": "SWAP1",
      "path": "41"
    },
    "2073": {
      "fn": "ERC4973.name",
      "offset": [
        4861,
        4873
      ],
      "op": "PUSH1",
      "path": "41",
      "value": "0x1"
    },
    "2075": {
      "fn": "ERC4973.name",
      "offset": [
        4861,
        4873
      ],
      "op": "ADD",
      "path": "41"
    },
    "2076": {
      "fn": "ERC4973.name",
      "offset": [
        4861,
        4873
      ],
      "op": "SWAP1",
      "path": "41"
    },
    "2077": {
      "fn": "ERC4973.name",
      "offset": [
        4861,
        4873
      ],
      "op": "PUSH1",
      "path": "41",
      "value": "0x20"
    },
    "2079": {
      "fn": "ERC4973.name",
      "offset": [
        4861,
        4873
      ],
      "op": "ADD",
      "path": "41"
    },
    "2080": {
      "fn": "ERC4973.name",
      "offset": [
        4861,
        4873
      ],
      "op": "DUP1",
      "path": "41"
    },
    "2081": {
      "fn": "ERC4973.name",
      "offset": [
        4861,
        4873
      ],
      "op": "DUP4",
      "path": "41"
    },
    "2082": {
      "fn": "ERC4973.name",
      "offset": [
        4861,
        4873
      ],
      "op": "GT",
      "path": "41"
    },
    "2083": {
      "fn": "ERC4973.name",
      "offset": [
        4861,
        4873
      ],
      "op": "PUSH2",
      "path": "41",
      "value": "0x813"
    },
    "2086": {
      "fn": "ERC4973.name",
      "offset": [
        4861,
        4873
      ],
      "op": "JUMPI",
      "path": "41"
    },
    "2087": {
      "fn": "ERC4973.name",
      "offset": [
        4861,
        4873
      ],
      "op": "DUP3",
      "path": "41"
    },
    "2088": {
      "fn": "ERC4973.name",
      "offset": [
        4861,
        4873
      ],
      "op": "SWAP1",
      "path": "41"
    },
    "2089": {
      "fn": "ERC4973.name",
      "offset": [
        4861,
        4873
      ],
      "op": "SUB",
      "path": "41"
    },
    "2090": {
      "fn": "ERC4973.name",
      "offset": [
        4861,
        4873
      ],
      "op": "PUSH1",
      "path": "41",
      "value": "0x1F"
    },
    "2092": {
      "fn": "ERC4973.name",
      "offset": [
        4861,
        4873
      ],
      "op": "AND",
      "path": "41"
    },
    "2093": {
      "fn": "ERC4973.name",
      "offset": [
        4861,
        4873
      ],
      "op": "DUP3",
      "path": "41"
    },
    "2094": {
      "fn": "ERC4973.name",
      "offset": [
        4861,
        4873
      ],
      "op": "ADD",
      "path": "41"
    },
    "2095": {
      "fn": "ERC4973.name",
      "offset": [
        4861,
        4873
      ],
      "op": "SWAP2",
      "path": "41"
    },
    "2096": {
      "fn": "ERC4973.name",
      "offset": [
        4861,
        4873
      ],
      "op": "JUMPDEST",
      "path": "41"
    },
    "2097": {
      "fn": "ERC4973.name",
      "offset": [
        4861,
        4873
      ],
      "op": "POP",
      "path": "41"
    },
    "2098": {
      "fn": "ERC4973.name",
      "offset": [
        4861,
        4873
      ],
      "op": "POP",
      "path": "41"
    },
    "2099": {
      "fn": "ERC4973.name",
      "offset": [
        4861,
        4873
      ],
      "op": "POP",
      "path": "41"
    },
    "2100": {
      "fn": "ERC4973.name",
      "offset": [
        4861,
        4873
      ],
      "op": "POP",
      "path": "41"
    },
    "2101": {
      "fn": "ERC4973.name",
      "offset": [
        4861,
        4873
      ],
      "op": "POP",
      "path": "41"
    },
    "2102": {
      "fn": "ERC4973.name",
      "offset": [
        4861,
        4873
      ],
      "op": "SWAP1",
      "path": "41"
    },
    "2103": {
      "fn": "ERC4973.name",
      "offset": [
        4861,
        4873
      ],
      "op": "POP",
      "path": "41"
    },
    "2104": {
      "fn": "ERC4973.name",
      "offset": [
        4782,
        4880
      ],
      "op": "SWAP1",
      "path": "41"
    },
    "2105": {
      "fn": "ERC4973.name",
      "jump": "o",
      "offset": [
        4782,
        4880
      ],
      "op": "JUMP",
      "path": "41"
    },
    "2106": {
      "fn": "SoulboundCore.revokeWithSignature",
      "offset": [
        4274,
        5201
      ],
      "op": "JUMPDEST",
      "path": "38"
    },
    "2107": {
      "fn": "SoulboundCore.revokeWithSignature",
      "offset": [
        4455,
        4471
      ],
      "op": "PUSH2",
      "path": "38",
      "statement": 13,
      "value": "0x843"
    },
    "2110": {
      "fn": "SoulboundCore.revokeWithSignature",
      "offset": [
        4463,
        4470
      ],
      "op": "DUP2",
      "path": "38"
    },
    "2111": {
      "fn": "SoulboundCore.revokeWithSignature",
      "offset": [
        4455,
        4462
      ],
      "op": "PUSH2",
      "path": "38",
      "value": "0x1F4F"
    },
    "2114": {
      "fn": "SoulboundCore.revokeWithSignature",
      "jump": "i",
      "offset": [
        4455,
        4471
      ],
      "op": "JUMP",
      "path": "38"
    },
    "2115": {
      "branch": 182,
      "fn": "SoulboundCore.revokeWithSignature",
      "offset": [
        4455,
        4471
      ],
      "op": "JUMPDEST",
      "path": "38"
    },
    "2116": {
      "fn": "SoulboundCore.revokeWithSignature",
      "offset": [
        4447,
        4503
      ],
      "op": "PUSH2",
      "path": "38",
      "value": "0x88F"
    },
    "2119": {
      "branch": 182,
      "fn": "SoulboundCore.revokeWithSignature",
      "offset": [
        4447,
        4503
      ],
      "op": "JUMPI",
      "path": "38"
    },
    "2120": {
      "fn": "SoulboundCore.revokeWithSignature",
      "offset": [
        4447,
        4503
      ],
      "op": "PUSH1",
      "path": "38",
      "value": "0x40"
    },
    "2122": {
      "fn": "SoulboundCore.revokeWithSignature",
      "offset": [
        4447,
        4503
      ],
      "op": "MLOAD",
      "path": "38"
    },
    "2123": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "2127": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "2129": {
      "op": "SHL"
    },
    "2130": {
      "fn": "SoulboundCore.revokeWithSignature",
      "offset": [
        4447,
        4503
      ],
      "op": "DUP2",
      "path": "38"
    },
    "2131": {
      "fn": "SoulboundCore.revokeWithSignature",
      "offset": [
        4447,
        4503
      ],
      "op": "MSTORE",
      "path": "38"
    },
    "2132": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2134": {
      "fn": "SoulboundCore.revokeWithSignature",
      "offset": [
        4447,
        4503
      ],
      "op": "PUSH1",
      "path": "38",
      "value": "0x4"
    },
    "2136": {
      "fn": "SoulboundCore.revokeWithSignature",
      "offset": [
        4447,
        4503
      ],
      "op": "DUP3",
      "path": "38"
    },
    "2137": {
      "fn": "SoulboundCore.revokeWithSignature",
      "offset": [
        4447,
        4503
      ],
      "op": "ADD",
      "path": "38"
    },
    "2138": {
      "op": "MSTORE"
    },
    "2139": {
      "op": "PUSH1",
      "value": "0x1B"
    },
    "2141": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "2143": {
      "op": "DUP3"
    },
    "2144": {
      "op": "ADD"
    },
    "2145": {
      "op": "MSTORE"
    },
    "2146": {
      "op": "PUSH32",
      "value": "0x5265766F6B65206F6620696E6578697374656E7420746F6B656E2E0000000000"
    },
    "2179": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "2181": {
      "op": "DUP3"
    },
    "2182": {
      "op": "ADD"
    },
    "2183": {
      "op": "MSTORE"
    },
    "2184": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "2186": {
      "op": "ADD"
    },
    "2187": {
      "fn": "SoulboundCore.revokeWithSignature",
      "offset": [
        4447,
        4503
      ],
      "op": "PUSH2",
      "path": "38",
      "value": "0x6B1"
    },
    "2190": {
      "op": "JUMP"
    },
    "2191": {
      "fn": "SoulboundCore.revokeWithSignature",
      "offset": [
        4447,
        4503
      ],
      "op": "JUMPDEST",
      "path": "38"
    },
    "2192": {
      "fn": "SoulboundCore.revokeWithSignature",
      "offset": [
        4738,
        4741
      ],
      "op": "DUP2",
      "path": "38",
      "statement": 14
    },
    "2193": {
      "fn": "SoulboundCore.revokeWithSignature",
      "offset": [
        4738,
        4748
      ],
      "op": "MLOAD",
      "path": "38"
    },
    "2194": {
      "fn": "SoulboundCore.revokeWithSignature",
      "offset": [
        4752,
        4754
      ],
      "op": "PUSH1",
      "path": "38",
      "value": "0x41"
    },
    "2196": {
      "branch": 183,
      "fn": "SoulboundCore.revokeWithSignature",
      "offset": [
        4738,
        4754
      ],
      "op": "EQ",
      "path": "38"
    },
    "2197": {
      "fn": "SoulboundCore.revokeWithSignature",
      "offset": [
        4730,
        4783
      ],
      "op": "PUSH2",
      "path": "38",
      "value": "0x8DB"
    },
    "2200": {
      "branch": 183,
      "fn": "SoulboundCore.revokeWithSignature",
      "offset": [
        4730,
        4783
      ],
      "op": "JUMPI",
      "path": "38"
    },
    "2201": {
      "fn": "SoulboundCore.revokeWithSignature",
      "offset": [
        4730,
        4783
      ],
      "op": "PUSH1",
      "path": "38",
      "value": "0x40"
    },
    "2203": {
      "fn": "SoulboundCore.revokeWithSignature",
      "offset": [
        4730,
        4783
      ],
      "op": "MLOAD",
      "path": "38"
    },
    "2204": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "2208": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "2210": {
      "op": "SHL"
    },
    "2211": {
      "fn": "SoulboundCore.revokeWithSignature",
      "offset": [
        4730,
        4783
      ],
      "op": "DUP2",
      "path": "38"
    },
    "2212": {
      "fn": "SoulboundCore.revokeWithSignature",
      "offset": [
        4730,
        4783
      ],
      "op": "MSTORE",
      "path": "38"
    },
    "2213": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2215": {
      "fn": "SoulboundCore.revokeWithSignature",
      "offset": [
        4730,
        4783
      ],
      "op": "PUSH1",
      "path": "38",
      "value": "0x4"
    },
    "2217": {
      "fn": "SoulboundCore.revokeWithSignature",
      "offset": [
        4730,
        4783
      ],
      "op": "DUP3",
      "path": "38"
    },
    "2218": {
      "fn": "SoulboundCore.revokeWithSignature",
      "offset": [
        4730,
        4783
      ],
      "op": "ADD",
      "path": "38"
    },
    "2219": {
      "op": "MSTORE"
    },
    "2220": {
      "op": "PUSH1",
      "value": "0x18"
    },
    "2222": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "2224": {
      "op": "DUP3"
    },
    "2225": {
      "op": "ADD"
    },
    "2226": {
      "op": "MSTORE"
    },
    "2227": {
      "op": "PUSH24",
      "value": "0x92DCECC2D8D2C840E6D2CEDCC2E8EAE4CA40D8CADCCEE8D"
    },
    "2252": {
      "op": "PUSH1",
      "value": "0x43"
    },
    "2254": {
      "op": "SHL"
    },
    "2255": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "2257": {
      "op": "DUP3"
    },
    "2258": {
      "op": "ADD"
    },
    "2259": {
      "op": "MSTORE"
    },
    "2260": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "2262": {
      "op": "ADD"
    },
    "2263": {
      "fn": "SoulboundCore.revokeWithSignature",
      "offset": [
        4730,
        4783
      ],
      "op": "PUSH2",
      "path": "38",
      "value": "0x6B1"
    },
    "2266": {
      "op": "JUMP"
    },
    "2267": {
      "fn": "SoulboundCore.revokeWithSignature",
      "offset": [
        4730,
        4783
      ],
      "op": "JUMPDEST",
      "path": "38"
    },
    "2268": {
      "fn": "SoulboundCore.revokeWithSignature",
      "offset": [
        4910,
        4936
      ],
      "op": "PUSH2",
      "path": "38",
      "statement": 15,
      "value": "0x8E5"
    },
    "2271": {
      "fn": "SoulboundCore.revokeWithSignature",
      "offset": [
        4926,
        4930
      ],
      "op": "DUP4",
      "path": "38"
    },
    "2272": {
      "fn": "SoulboundCore.revokeWithSignature",
      "offset": [
        4932,
        4935
      ],
      "op": "DUP4",
      "path": "38"
    },
    "2273": {
      "fn": "SoulboundCore.revokeWithSignature",
      "offset": [
        4910,
        4925
      ],
      "op": "PUSH2",
      "path": "38",
      "value": "0x1A94"
    },
    "2276": {
      "fn": "SoulboundCore.revokeWithSignature",
      "jump": "i",
      "offset": [
        4910,
        4936
      ],
      "op": "JUMP",
      "path": "38"
    },
    "2277": {
      "branch": 184,
      "fn": "SoulboundCore.revokeWithSignature",
      "offset": [
        4910,
        4936
      ],
      "op": "JUMPDEST",
      "path": "38"
    },
    "2278": {
      "fn": "SoulboundCore.revokeWithSignature",
      "offset": [
        4902,
        4966
      ],
      "op": "PUSH2",
      "path": "38",
      "value": "0x92D"
    },
    "2281": {
      "branch": 184,
      "fn": "SoulboundCore.revokeWithSignature",
      "offset": [
        4902,
        4966
      ],
      "op": "JUMPI",
      "path": "38"
    },
    "2282": {
      "fn": "SoulboundCore.revokeWithSignature",
      "offset": [
        4902,
        4966
      ],
      "op": "PUSH1",
      "path": "38",
      "value": "0x40"
    },
    "2284": {
      "fn": "SoulboundCore.revokeWithSignature",
      "offset": [
        4902,
        4966
      ],
      "op": "MLOAD",
      "path": "38"
    },
    "2285": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "2289": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "2291": {
      "op": "SHL"
    },
    "2292": {
      "fn": "SoulboundCore.revokeWithSignature",
      "offset": [
        4902,
        4966
      ],
      "op": "DUP2",
      "path": "38"
    },
    "2293": {
      "fn": "SoulboundCore.revokeWithSignature",
      "offset": [
        4902,
        4966
      ],
      "op": "MSTORE",
      "path": "38"
    },
    "2294": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2296": {
      "fn": "SoulboundCore.revokeWithSignature",
      "offset": [
        4902,
        4966
      ],
      "op": "PUSH1",
      "path": "38",
      "value": "0x4"
    },
    "2298": {
      "fn": "SoulboundCore.revokeWithSignature",
      "offset": [
        4902,
        4966
      ],
      "op": "DUP3",
      "path": "38"
    },
    "2299": {
      "fn": "SoulboundCore.revokeWithSignature",
      "offset": [
        4902,
        4966
      ],
      "op": "ADD",
      "path": "38"
    },
    "2300": {
      "op": "MSTORE"
    },
    "2301": {
      "op": "PUSH1",
      "value": "0x19"
    },
    "2303": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "2305": {
      "op": "DUP3"
    },
    "2306": {
      "op": "ADD"
    },
    "2307": {
      "op": "MSTORE"
    },
    "2308": {
      "op": "PUSH25",
      "value": "0x2430B9B4103737BA1039B4B3B732B210313C9037BBB732B917"
    },
    "2334": {
      "op": "PUSH1",
      "value": "0x39"
    },
    "2336": {
      "op": "SHL"
    },
    "2337": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "2339": {
      "op": "DUP3"
    },
    "2340": {
      "op": "ADD"
    },
    "2341": {
      "op": "MSTORE"
    },
    "2342": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "2344": {
      "op": "ADD"
    },
    "2345": {
      "fn": "SoulboundCore.revokeWithSignature",
      "offset": [
        4902,
        4966
      ],
      "op": "PUSH2",
      "path": "38",
      "value": "0x6B1"
    },
    "2348": {
      "op": "JUMP"
    },
    "2349": {
      "fn": "SoulboundCore.revokeWithSignature",
      "offset": [
        4902,
        4966
      ],
      "op": "JUMPDEST",
      "path": "38"
    },
    "2350": {
      "fn": "SoulboundCore.revokeWithSignature",
      "offset": [
        5065,
        5098
      ],
      "op": "PUSH2",
      "path": "38",
      "statement": 16,
      "value": "0x93F"
    },
    "2353": {
      "fn": "SoulboundCore.revokeWithSignature",
      "offset": [
        5072,
        5088
      ],
      "op": "PUSH2",
      "path": "38",
      "value": "0x939"
    },
    "2356": {
      "fn": "SoulboundCore.revokeWithSignature",
      "offset": [
        5080,
        5087
      ],
      "op": "DUP3",
      "path": "38"
    },
    "2357": {
      "fn": "SoulboundCore.revokeWithSignature",
      "offset": [
        5072,
        5079
      ],
      "op": "PUSH2",
      "path": "38",
      "value": "0x1263"
    },
    "2360": {
      "fn": "SoulboundCore.revokeWithSignature",
      "jump": "i",
      "offset": [
        5072,
        5088
      ],
      "op": "JUMP",
      "path": "38"
    },
    "2361": {
      "fn": "SoulboundCore.revokeWithSignature",
      "offset": [
        5072,
        5088
      ],
      "op": "JUMPDEST",
      "path": "38"
    },
    "2362": {
      "fn": "SoulboundCore.revokeWithSignature",
      "offset": [
        5090,
        5097
      ],
      "op": "DUP3",
      "path": "38"
    },
    "2363": {
      "fn": "SoulboundCore.revokeWithSignature",
      "offset": [
        5065,
        5071
      ],
      "op": "PUSH2",
      "path": "38",
      "value": "0x1F6C"
    },
    "2366": {
      "fn": "SoulboundCore.revokeWithSignature",
      "jump": "i",
      "offset": [
        5065,
        5098
      ],
      "op": "JUMP",
      "path": "38"
    },
    "2367": {
      "fn": "SoulboundCore.revokeWithSignature",
      "offset": [
        5065,
        5098
      ],
      "op": "JUMPDEST",
      "path": "38"
    },
    "2368": {
      "op": "POP"
    },
    "2369": {
      "fn": "SoulboundCore.revokeWithSignature",
      "offset": [
        5166,
        5194
      ],
      "op": "PUSH1",
      "path": "38",
      "statement": 17,
      "value": "0x40"
    },
    "2371": {
      "fn": "SoulboundCore.revokeWithSignature",
      "offset": [
        5166,
        5194
      ],
      "op": "MLOAD",
      "path": "38"
    },
    "2372": {
      "fn": "SoulboundCore.revokeWithSignature",
      "offset": [
        5186,
        5193
      ],
      "op": "DUP2",
      "path": "38"
    },
    "2373": {
      "fn": "SoulboundCore.revokeWithSignature",
      "offset": [
        5186,
        5193
      ],
      "op": "SWAP1",
      "path": "38"
    },
    "2374": {
      "fn": "SoulboundCore.revokeWithSignature",
      "offset": [
        5166,
        5194
      ],
      "op": "PUSH32",
      "path": "38",
      "value": "0xF947BF2266AFEDE98F27AD2312DB8B2A17921852307F979B6F14A2B41FA774BC"
    },
    "2407": {
      "fn": "SoulboundCore.revokeWithSignature",
      "offset": [
        5166,
        5194
      ],
      "op": "SWAP1",
      "path": "38"
    },
    "2408": {
      "fn": "SoulboundCore.revokeWithSignature",
      "offset": [
        5166,
        5194
      ],
      "op": "PUSH1",
      "path": "38",
      "value": "0x0"
    },
    "2410": {
      "fn": "SoulboundCore.revokeWithSignature",
      "offset": [
        5166,
        5194
      ],
      "op": "SWAP1",
      "path": "38"
    },
    "2411": {
      "fn": "SoulboundCore.revokeWithSignature",
      "offset": [
        5166,
        5194
      ],
      "op": "LOG2",
      "path": "38"
    },
    "2412": {
      "fn": "SoulboundCore.revokeWithSignature",
      "offset": [
        4274,
        5201
      ],
      "op": "POP",
      "path": "38"
    },
    "2413": {
      "fn": "SoulboundCore.revokeWithSignature",
      "offset": [
        4274,
        5201
      ],
      "op": "POP",
      "path": "38"
    },
    "2414": {
      "fn": "SoulboundCore.revokeWithSignature",
      "offset": [
        4274,
        5201
      ],
      "op": "POP",
      "path": "38"
    },
    "2415": {
      "fn": "SoulboundCore.revokeWithSignature",
      "jump": "o",
      "offset": [
        4274,
        5201
      ],
      "op": "JUMP",
      "path": "38"
    },
    "2416": {
      "fn": "SoulboundWithSignature.ownerRevokeWithSignature",
      "offset": [
        2850,
        3565
      ],
      "op": "JUMPDEST",
      "path": "40"
    },
    "2417": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x6"
    },
    "2419": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "2420": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2422": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2424": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2426": {
      "op": "SHL"
    },
    "2427": {
      "op": "SUB"
    },
    "2428": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "AND",
      "path": "0"
    },
    "2429": {
      "fn": "Context._msgSender",
      "offset": [
        719,
        729
      ],
      "op": "CALLER",
      "path": "5"
    },
    "2430": {
      "offset": [
        1248,
        1271
      ],
      "op": "EQ",
      "path": "0"
    },
    "2431": {
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x99A"
    },
    "2434": {
      "offset": [
        1240,
        1308
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "2435": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "2437": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "2438": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "2442": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "2444": {
      "op": "SHL"
    },
    "2445": {
      "offset": [
        1240,
        1308
      ],
      "op": "DUP2",
      "path": "0"
    },
    "2446": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "2447": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "2449": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "ADD",
      "path": "0"
    },
    "2450": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x6B1"
    },
    "2453": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2454": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2B66"
    },
    "2457": {
      "fn": "Context._msgSender",
      "jump": "i",
      "offset": [
        1240,
        1308
      ],
      "op": "JUMP",
      "path": "0"
    },
    "2458": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2459": {
      "fn": "SoulboundWithSignature.ownerRevokeWithSignature",
      "offset": [
        3272,
        3278
      ],
      "op": "PUSH1",
      "path": "40",
      "value": "0xB"
    },
    "2461": {
      "fn": "SoulboundWithSignature.ownerRevokeWithSignature",
      "offset": [
        3272,
        3278
      ],
      "op": "SLOAD",
      "path": "40"
    },
    "2462": {
      "branch": 191,
      "fn": "SoulboundWithSignature.ownerRevokeWithSignature",
      "offset": [
        3272,
        3283
      ],
      "op": "ISZERO",
      "path": "40"
    },
    "2463": {
      "fn": "SoulboundWithSignature.ownerRevokeWithSignature",
      "offset": [
        3268,
        3469
      ],
      "op": "PUSH2",
      "path": "40",
      "value": "0x9BC"
    },
    "2466": {
      "branch": 191,
      "fn": "SoulboundWithSignature.ownerRevokeWithSignature",
      "offset": [
        3268,
        3469
      ],
      "op": "JUMPI",
      "path": "40"
    },
    "2467": {
      "fn": "SoulboundWithSignature.ownerRevokeWithSignature",
      "offset": [
        3338,
        3344
      ],
      "op": "PUSH1",
      "path": "40",
      "statement": 18,
      "value": "0xB"
    },
    "2469": {
      "fn": "SoulboundWithSignature.ownerRevokeWithSignature",
      "offset": [
        3338,
        3346
      ],
      "op": "DUP1",
      "path": "40"
    },
    "2470": {
      "fn": "SoulboundWithSignature.ownerRevokeWithSignature",
      "offset": [
        3338,
        3346
      ],
      "op": "SLOAD",
      "path": "40"
    },
    "2471": {
      "fn": "SoulboundWithSignature.ownerRevokeWithSignature",
      "offset": [
        3338,
        3346
      ],
      "op": "SWAP1",
      "path": "40"
    },
    "2472": {
      "fn": "SoulboundWithSignature.ownerRevokeWithSignature",
      "offset": [
        3338,
        3344
      ],
      "op": "PUSH1",
      "path": "40",
      "value": "0x0"
    },
    "2474": {
      "fn": "SoulboundWithSignature.ownerRevokeWithSignature",
      "offset": [
        3338,
        3346
      ],
      "op": "PUSH2",
      "path": "40",
      "value": "0x9B2"
    },
    "2477": {
      "fn": "SoulboundWithSignature.ownerRevokeWithSignature",
      "offset": [
        3338,
        3346
      ],
      "op": "DUP4",
      "path": "40"
    },
    "2478": {
      "fn": "SoulboundWithSignature.ownerRevokeWithSignature",
      "offset": [
        3338,
        3346
      ],
      "op": "PUSH2",
      "path": "40",
      "value": "0x2C19"
    },
    "2481": {
      "fn": "SoulboundWithSignature.ownerRevokeWithSignature",
      "jump": "i",
      "offset": [
        3338,
        3346
      ],
      "op": "JUMP",
      "path": "40"
    },
    "2482": {
      "fn": "SoulboundWithSignature.ownerRevokeWithSignature",
      "offset": [
        3338,
        3346
      ],
      "op": "JUMPDEST",
      "path": "40"
    },
    "2483": {
      "fn": "SoulboundWithSignature.ownerRevokeWithSignature",
      "offset": [
        3338,
        3346
      ],
      "op": "SWAP2",
      "path": "40"
    },
    "2484": {
      "fn": "SoulboundWithSignature.ownerRevokeWithSignature",
      "offset": [
        3338,
        3346
      ],
      "op": "SWAP1",
      "path": "40"
    },
    "2485": {
      "fn": "SoulboundWithSignature.ownerRevokeWithSignature",
      "offset": [
        3338,
        3346
      ],
      "op": "POP",
      "path": "40"
    },
    "2486": {
      "fn": "SoulboundWithSignature.ownerRevokeWithSignature",
      "offset": [
        3338,
        3346
      ],
      "op": "SSTORE",
      "path": "40"
    },
    "2487": {
      "fn": "SoulboundWithSignature.ownerRevokeWithSignature",
      "offset": [
        3338,
        3346
      ],
      "op": "POP",
      "path": "40"
    },
    "2488": {
      "fn": "SoulboundWithSignature.ownerRevokeWithSignature",
      "offset": [
        3268,
        3469
      ],
      "op": "PUSH2",
      "path": "40",
      "value": "0x9FC"
    },
    "2491": {
      "fn": "SoulboundWithSignature.ownerRevokeWithSignature",
      "offset": [
        3268,
        3469
      ],
      "op": "JUMP",
      "path": "40"
    },
    "2492": {
      "fn": "SoulboundWithSignature.ownerRevokeWithSignature",
      "offset": [
        3268,
        3469
      ],
      "op": "JUMPDEST",
      "path": "40"
    },
    "2493": {
      "fn": "SoulboundWithSignature.ownerRevokeWithSignature",
      "offset": [
        3427,
        3458
      ],
      "op": "PUSH1",
      "path": "40",
      "statement": 19,
      "value": "0x40"
    },
    "2495": {
      "fn": "SoulboundWithSignature.ownerRevokeWithSignature",
      "offset": [
        3427,
        3458
      ],
      "op": "MLOAD",
      "path": "40"
    },
    "2496": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "2500": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "2502": {
      "op": "SHL"
    },
    "2503": {
      "fn": "SoulboundWithSignature.ownerRevokeWithSignature",
      "offset": [
        3427,
        3458
      ],
      "op": "DUP2",
      "path": "40"
    },
    "2504": {
      "fn": "SoulboundWithSignature.ownerRevokeWithSignature",
      "offset": [
        3427,
        3458
      ],
      "op": "MSTORE",
      "path": "40"
    },
    "2505": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2507": {
      "fn": "SoulboundWithSignature.ownerRevokeWithSignature",
      "offset": [
        3427,
        3458
      ],
      "op": "PUSH1",
      "path": "40",
      "value": "0x4"
    },
    "2509": {
      "fn": "SoulboundWithSignature.ownerRevokeWithSignature",
      "offset": [
        3427,
        3458
      ],
      "op": "DUP3",
      "path": "40"
    },
    "2510": {
      "fn": "SoulboundWithSignature.ownerRevokeWithSignature",
      "offset": [
        3427,
        3458
      ],
      "op": "ADD",
      "path": "40"
    },
    "2511": {
      "op": "MSTORE"
    },
    "2512": {
      "op": "PUSH1",
      "value": "0x15"
    },
    "2514": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "2516": {
      "op": "DUP3"
    },
    "2517": {
      "op": "ADD"
    },
    "2518": {
      "op": "MSTORE"
    },
    "2519": {
      "op": "PUSH21",
      "value": "0x2637BBB2B9BA103634B6B4BA103932B0B1B432B217"
    },
    "2541": {
      "op": "PUSH1",
      "value": "0x59"
    },
    "2543": {
      "op": "SHL"
    },
    "2544": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "2546": {
      "op": "DUP3"
    },
    "2547": {
      "op": "ADD"
    },
    "2548": {
      "op": "MSTORE"
    },
    "2549": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "2551": {
      "op": "ADD"
    },
    "2552": {
      "fn": "SoulboundWithSignature.ownerRevokeWithSignature",
      "offset": [
        3427,
        3458
      ],
      "op": "PUSH2",
      "path": "40",
      "value": "0x6B1"
    },
    "2555": {
      "op": "JUMP"
    },
    "2556": {
      "fn": "SoulboundWithSignature.ownerRevokeWithSignature",
      "offset": [
        3268,
        3469
      ],
      "op": "JUMPDEST",
      "path": "40"
    },
    "2557": {
      "fn": "SoulboundWithSignature.ownerRevokeWithSignature",
      "offset": [
        3519,
        3558
      ],
      "op": "PUSH2",
      "path": "40",
      "statement": 20,
      "value": "0xA07"
    },
    "2560": {
      "fn": "SoulboundWithSignature.ownerRevokeWithSignature",
      "offset": [
        3539,
        3543
      ],
      "op": "DUP4",
      "path": "40"
    },
    "2561": {
      "fn": "SoulboundWithSignature.ownerRevokeWithSignature",
      "offset": [
        3545,
        3548
      ],
      "op": "DUP4",
      "path": "40"
    },
    "2562": {
      "fn": "SoulboundWithSignature.ownerRevokeWithSignature",
      "offset": [
        3550,
        3557
      ],
      "op": "DUP4",
      "path": "40"
    },
    "2563": {
      "fn": "SoulboundWithSignature.ownerRevokeWithSignature",
      "offset": [
        3519,
        3538
      ],
      "op": "PUSH2",
      "path": "40",
      "value": "0x83A"
    },
    "2566": {
      "fn": "SoulboundWithSignature.ownerRevokeWithSignature",
      "jump": "i",
      "offset": [
        3519,
        3558
      ],
      "op": "JUMP",
      "path": "40"
    },
    "2567": {
      "fn": "SoulboundWithSignature.ownerRevokeWithSignature",
      "offset": [
        3519,
        3558
      ],
      "op": "JUMPDEST",
      "path": "40"
    },
    "2568": {
      "fn": "SoulboundWithSignature.ownerRevokeWithSignature",
      "offset": [
        2850,
        3565
      ],
      "op": "POP",
      "path": "40"
    },
    "2569": {
      "fn": "SoulboundWithSignature.ownerRevokeWithSignature",
      "offset": [
        2850,
        3565
      ],
      "op": "POP",
      "path": "40"
    },
    "2570": {
      "fn": "SoulboundWithSignature.ownerRevokeWithSignature",
      "offset": [
        2850,
        3565
      ],
      "op": "POP",
      "path": "40"
    },
    "2571": {
      "fn": "SoulboundWithSignature.ownerRevokeWithSignature",
      "jump": "o",
      "offset": [
        2850,
        3565
      ],
      "op": "JUMP",
      "path": "40"
    },
    "2572": {
      "fn": "SoulboundCore.generateTokenURI",
      "offset": [
        6139,
        6521
      ],
      "op": "JUMPDEST",
      "path": "38"
    },
    "2573": {
      "fn": "SoulboundCore.generateTokenURI",
      "offset": [
        6227,
        6250
      ],
      "op": "PUSH1",
      "path": "38",
      "value": "0x60"
    },
    "2575": {
      "fn": "SoulboundCore.generateTokenURI",
      "offset": [
        6340,
        6353
      ],
      "op": "PUSH2",
      "path": "38",
      "statement": 21,
      "value": "0xA16"
    },
    "2578": {
      "fn": "SoulboundCore.generateTokenURI",
      "offset": [
        6340,
        6351
      ],
      "op": "PUSH2",
      "path": "38",
      "value": "0x192A"
    },
    "2581": {
      "fn": "SoulboundCore.generateTokenURI",
      "jump": "i",
      "offset": [
        6340,
        6353
      ],
      "op": "JUMP",
      "path": "38"
    },
    "2582": {
      "fn": "SoulboundCore.generateTokenURI",
      "offset": [
        6340,
        6353
      ],
      "op": "JUMPDEST",
      "path": "38"
    },
    "2583": {
      "fn": "SoulboundCore.generateTokenURI",
      "offset": [
        6334,
        6361
      ],
      "op": "MLOAD",
      "path": "38"
    },
    "2584": {
      "fn": "SoulboundCore.generateTokenURI",
      "offset": [
        6365,
        6366
      ],
      "op": "PUSH1",
      "path": "38",
      "value": "0x0"
    },
    "2586": {
      "branch": 185,
      "fn": "SoulboundCore.generateTokenURI",
      "offset": [
        6334,
        6366
      ],
      "op": "SUB",
      "path": "38"
    },
    "2587": {
      "fn": "SoulboundCore.generateTokenURI",
      "offset": [
        6326,
        6384
      ],
      "op": "PUSH2",
      "path": "38",
      "value": "0xA56"
    },
    "2590": {
      "branch": 185,
      "fn": "SoulboundCore.generateTokenURI",
      "offset": [
        6326,
        6384
      ],
      "op": "JUMPI",
      "path": "38"
    },
    "2591": {
      "fn": "SoulboundCore.generateTokenURI",
      "offset": [
        6326,
        6384
      ],
      "op": "PUSH1",
      "path": "38",
      "value": "0x40"
    },
    "2593": {
      "fn": "SoulboundCore.generateTokenURI",
      "offset": [
        6326,
        6384
      ],
      "op": "MLOAD",
      "path": "38"
    },
    "2594": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "2598": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "2600": {
      "op": "SHL"
    },
    "2601": {
      "fn": "SoulboundCore.generateTokenURI",
      "offset": [
        6326,
        6384
      ],
      "op": "DUP2",
      "path": "38"
    },
    "2602": {
      "fn": "SoulboundCore.generateTokenURI",
      "offset": [
        6326,
        6384
      ],
      "op": "MSTORE",
      "path": "38"
    },
    "2603": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2605": {
      "fn": "SoulboundCore.generateTokenURI",
      "offset": [
        6326,
        6384
      ],
      "op": "PUSH1",
      "path": "38",
      "value": "0x4"
    },
    "2607": {
      "fn": "SoulboundCore.generateTokenURI",
      "offset": [
        6326,
        6384
      ],
      "op": "DUP3",
      "path": "38"
    },
    "2608": {
      "fn": "SoulboundCore.generateTokenURI",
      "offset": [
        6326,
        6384
      ],
      "op": "ADD",
      "path": "38"
    },
    "2609": {
      "op": "MSTORE"
    },
    "2610": {
      "op": "PUSH1",
      "value": "0xD"
    },
    "2612": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "2614": {
      "op": "DUP3"
    },
    "2615": {
      "op": "ADD"
    },
    "2616": {
      "op": "MSTORE"
    },
    "2617": {
      "op": "PUSH13",
      "value": "0x456D7074792062617365555249"
    },
    "2631": {
      "op": "PUSH1",
      "value": "0x98"
    },
    "2633": {
      "op": "SHL"
    },
    "2634": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "2636": {
      "op": "DUP3"
    },
    "2637": {
      "op": "ADD"
    },
    "2638": {
      "op": "MSTORE"
    },
    "2639": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "2641": {
      "op": "ADD"
    },
    "2642": {
      "fn": "SoulboundCore.generateTokenURI",
      "offset": [
        6326,
        6384
      ],
      "op": "PUSH2",
      "path": "38",
      "value": "0x6B1"
    },
    "2645": {
      "op": "JUMP"
    },
    "2646": {
      "fn": "SoulboundCore.generateTokenURI",
      "offset": [
        6326,
        6384
      ],
      "op": "JUMPDEST",
      "path": "38"
    },
    "2647": {
      "fn": "SoulboundCore.generateTokenURI",
      "offset": [
        6480,
        6493
      ],
      "op": "PUSH2",
      "path": "38",
      "statement": 22,
      "value": "0xA5E"
    },
    "2650": {
      "fn": "SoulboundCore.generateTokenURI",
      "offset": [
        6480,
        6491
      ],
      "op": "PUSH2",
      "path": "38",
      "value": "0x192A"
    },
    "2653": {
      "fn": "SoulboundCore.generateTokenURI",
      "jump": "i",
      "offset": [
        6480,
        6493
      ],
      "op": "JUMP",
      "path": "38"
    },
    "2654": {
      "fn": "SoulboundCore.generateTokenURI",
      "offset": [
        6480,
        6493
      ],
      "op": "JUMPDEST",
      "path": "38"
    },
    "2655": {
      "fn": "SoulboundCore.generateTokenURI",
      "offset": [
        6495,
        6512
      ],
      "op": "PUSH2",
      "path": "38",
      "value": "0xA67"
    },
    "2658": {
      "fn": "SoulboundCore.generateTokenURI",
      "offset": [
        6504,
        6511
      ],
      "op": "DUP4",
      "path": "38"
    },
    "2659": {
      "fn": "SoulboundCore.generateTokenURI",
      "offset": [
        6495,
        6503
      ],
      "op": "PUSH2",
      "path": "38",
      "value": "0x2034"
    },
    "2662": {
      "fn": "SoulboundCore.generateTokenURI",
      "jump": "i",
      "offset": [
        6495,
        6512
      ],
      "op": "JUMP",
      "path": "38"
    },
    "2663": {
      "fn": "SoulboundCore.generateTokenURI",
      "offset": [
        6495,
        6512
      ],
      "op": "JUMPDEST",
      "path": "38"
    },
    "2664": {
      "fn": "SoulboundCore.generateTokenURI",
      "offset": [
        6463,
        6513
      ],
      "op": "PUSH1",
      "path": "38",
      "value": "0x40"
    },
    "2666": {
      "fn": "SoulboundCore.generateTokenURI",
      "offset": [
        6463,
        6513
      ],
      "op": "MLOAD",
      "path": "38"
    },
    "2667": {
      "fn": "SoulboundCore.generateTokenURI",
      "offset": [
        6463,
        6513
      ],
      "op": "PUSH1",
      "path": "38",
      "value": "0x20"
    },
    "2669": {
      "fn": "SoulboundCore.generateTokenURI",
      "offset": [
        6463,
        6513
      ],
      "op": "ADD",
      "path": "38"
    },
    "2670": {
      "fn": "SoulboundCore.generateTokenURI",
      "offset": [
        6463,
        6513
      ],
      "op": "PUSH2",
      "path": "38",
      "value": "0xA78"
    },
    "2673": {
      "fn": "SoulboundCore.generateTokenURI",
      "offset": [
        6463,
        6513
      ],
      "op": "SWAP3",
      "path": "38"
    },
    "2674": {
      "fn": "SoulboundCore.generateTokenURI",
      "offset": [
        6463,
        6513
      ],
      "op": "SWAP2",
      "path": "38"
    },
    "2675": {
      "fn": "SoulboundCore.generateTokenURI",
      "offset": [
        6463,
        6513
      ],
      "op": "SWAP1",
      "path": "38"
    },
    "2676": {
      "fn": "SoulboundCore.generateTokenURI",
      "offset": [
        6463,
        6513
      ],
      "op": "PUSH2",
      "path": "38",
      "value": "0x2C30"
    },
    "2679": {
      "fn": "SoulboundCore.generateTokenURI",
      "jump": "i",
      "offset": [
        6463,
        6513
      ],
      "op": "JUMP",
      "path": "38"
    },
    "2680": {
      "fn": "SoulboundCore.generateTokenURI",
      "offset": [
        6463,
        6513
      ],
      "op": "JUMPDEST",
      "path": "38"
    },
    "2681": {
      "fn": "SoulboundCore.generateTokenURI",
      "offset": [
        6463,
        6513
      ],
      "op": "PUSH1",
      "path": "38",
      "value": "0x40"
    },
    "2683": {
      "fn": "SoulboundCore.generateTokenURI",
      "offset": [
        6463,
        6513
      ],
      "op": "MLOAD",
      "path": "38"
    },
    "2684": {
      "fn": "SoulboundCore.generateTokenURI",
      "offset": [
        6463,
        6513
      ],
      "op": "PUSH1",
      "path": "38",
      "value": "0x20"
    },
    "2686": {
      "fn": "SoulboundCore.generateTokenURI",
      "offset": [
        6463,
        6513
      ],
      "op": "DUP2",
      "path": "38"
    },
    "2687": {
      "fn": "SoulboundCore.generateTokenURI",
      "offset": [
        6463,
        6513
      ],
      "op": "DUP4",
      "path": "38"
    },
    "2688": {
      "fn": "SoulboundCore.generateTokenURI",
      "offset": [
        6463,
        6513
      ],
      "op": "SUB",
      "path": "38"
    },
    "2689": {
      "fn": "SoulboundCore.generateTokenURI",
      "offset": [
        6463,
        6513
      ],
      "op": "SUB",
      "path": "38"
    },
    "2690": {
      "fn": "SoulboundCore.generateTokenURI",
      "offset": [
        6463,
        6513
      ],
      "op": "DUP2",
      "path": "38"
    },
    "2691": {
      "fn": "SoulboundCore.generateTokenURI",
      "offset": [
        6463,
        6513
      ],
      "op": "MSTORE",
      "path": "38"
    },
    "2692": {
      "fn": "SoulboundCore.generateTokenURI",
      "offset": [
        6463,
        6513
      ],
      "op": "SWAP1",
      "path": "38"
    },
    "2693": {
      "fn": "SoulboundCore.generateTokenURI",
      "offset": [
        6463,
        6513
      ],
      "op": "PUSH1",
      "path": "38",
      "value": "0x40"
    },
    "2695": {
      "fn": "SoulboundCore.generateTokenURI",
      "offset": [
        6463,
        6513
      ],
      "op": "MSTORE",
      "path": "38"
    },
    "2696": {
      "fn": "SoulboundCore.generateTokenURI",
      "offset": [
        6444,
        6514
      ],
      "op": "SWAP1",
      "path": "38"
    },
    "2697": {
      "fn": "SoulboundCore.generateTokenURI",
      "offset": [
        6444,
        6514
      ],
      "op": "POP",
      "path": "38"
    },
    "2698": {
      "fn": "SoulboundCore.generateTokenURI",
      "offset": [
        6139,
        6521
      ],
      "op": "SWAP2",
      "path": "38"
    },
    "2699": {
      "fn": "SoulboundCore.generateTokenURI",
      "offset": [
        6139,
        6521
      ],
      "op": "SWAP1",
      "path": "38"
    },
    "2700": {
      "fn": "SoulboundCore.generateTokenURI",
      "offset": [
        6139,
        6521
      ],
      "op": "POP",
      "path": "38"
    },
    "2701": {
      "fn": "SoulboundCore.generateTokenURI",
      "jump": "o",
      "offset": [
        6139,
        6521
      ],
      "op": "JUMP",
      "path": "38"
    },
    "2702": {
      "fn": "SoulboundRedeemable.payToReceiveToken",
      "offset": [
        6103,
        8070
      ],
      "op": "JUMPDEST",
      "path": "39"
    },
    "2703": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x6"
    },
    "2705": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "2706": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2708": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2710": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2712": {
      "op": "SHL"
    },
    "2713": {
      "op": "SUB"
    },
    "2714": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "AND",
      "path": "0"
    },
    "2715": {
      "fn": "Context._msgSender",
      "offset": [
        719,
        729
      ],
      "op": "CALLER",
      "path": "5"
    },
    "2716": {
      "offset": [
        1248,
        1271
      ],
      "op": "EQ",
      "path": "0"
    },
    "2717": {
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xAB8"
    },
    "2720": {
      "offset": [
        1240,
        1308
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "2721": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "2723": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "2724": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "2728": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "2730": {
      "op": "SHL"
    },
    "2731": {
      "offset": [
        1240,
        1308
      ],
      "op": "DUP2",
      "path": "0"
    },
    "2732": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "2733": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "2735": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "ADD",
      "path": "0"
    },
    "2736": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x6B1"
    },
    "2739": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2740": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2B66"
    },
    "2743": {
      "fn": "Context._msgSender",
      "jump": "i",
      "offset": [
        1240,
        1308
      ],
      "op": "JUMP",
      "path": "0"
    },
    "2744": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2745": {
      "offset": [
        2688,
        2694
      ],
      "op": "PUSH1",
      "path": "39",
      "value": "0x13"
    },
    "2747": {
      "fn": "Context._msgSender",
      "offset": [
        2688,
        2694
      ],
      "op": "SLOAD",
      "path": "39"
    },
    "2748": {
      "fn": "Context._msgSender",
      "offset": [
        2688,
        2694
      ],
      "op": "PUSH1",
      "path": "39",
      "value": "0xFF"
    },
    "2750": {
      "fn": "Context._msgSender",
      "offset": [
        2688,
        2694
      ],
      "op": "AND",
      "path": "39"
    },
    "2751": {
      "offset": [
        2687,
        2694
      ],
      "op": "ISZERO",
      "path": "39"
    },
    "2752": {
      "offset": [
        2679,
        2695
      ],
      "op": "PUSH2",
      "path": "39",
      "value": "0xAC8"
    },
    "2755": {
      "offset": [
        2679,
        2695
      ],
      "op": "JUMPI",
      "path": "39"
    },
    "2756": {
      "fn": "Context._msgSender",
      "offset": [
        2679,
        2695
      ],
      "op": "PUSH1",
      "path": "39",
      "value": "0x0"
    },
    "2758": {
      "fn": "Context._msgSender",
      "offset": [
        2679,
        2695
      ],
      "op": "DUP1",
      "path": "39"
    },
    "2759": {
      "fn": "Context._msgSender",
      "offset": [
        2679,
        2695
      ],
      "op": "REVERT",
      "path": "39"
    },
    "2760": {
      "fn": "Context._msgSender",
      "offset": [
        2679,
        2695
      ],
      "op": "JUMPDEST",
      "path": "39"
    },
    "2761": {
      "offset": [
        2705,
        2711
      ],
      "op": "PUSH1",
      "path": "39",
      "value": "0x13"
    },
    "2763": {
      "offset": [
        2705,
        2718
      ],
      "op": "DUP1",
      "path": "39"
    },
    "2764": {
      "fn": "Context._msgSender",
      "offset": [
        2705,
        2718
      ],
      "op": "SLOAD",
      "path": "39"
    },
    "2765": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "2767": {
      "op": "NOT"
    },
    "2768": {
      "offset": [
        2705,
        2718
      ],
      "op": "AND",
      "path": "39"
    },
    "2769": {
      "offset": [
        2714,
        2718
      ],
      "op": "PUSH1",
      "path": "39",
      "value": "0x1"
    },
    "2771": {
      "offset": [
        2705,
        2718
      ],
      "op": "OR",
      "path": "39"
    },
    "2772": {
      "fn": "Context._msgSender",
      "offset": [
        2705,
        2718
      ],
      "op": "SWAP1",
      "path": "39"
    },
    "2773": {
      "fn": "Context._msgSender",
      "offset": [
        2705,
        2718
      ],
      "op": "SSTORE",
      "path": "39"
    },
    "2774": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2776": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2778": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2780": {
      "op": "SHL"
    },
    "2781": {
      "op": "SUB"
    },
    "2782": {
      "fn": "SoulboundRedeemable.payToReceiveToken",
      "offset": [
        6324,
        6347
      ],
      "op": "DUP3",
      "path": "39",
      "statement": 23
    },
    "2783": {
      "branch": 139,
      "fn": "SoulboundRedeemable.payToReceiveToken",
      "offset": [
        6324,
        6347
      ],
      "op": "AND",
      "path": "39"
    },
    "2784": {
      "fn": "SoulboundRedeemable.payToReceiveToken",
      "offset": [
        6316,
        6373
      ],
      "op": "PUSH2",
      "path": "39",
      "value": "0xAFB"
    },
    "2787": {
      "branch": 139,
      "fn": "SoulboundRedeemable.payToReceiveToken",
      "offset": [
        6316,
        6373
      ],
      "op": "JUMPI",
      "path": "39"
    },
    "2788": {
      "fn": "SoulboundRedeemable.payToReceiveToken",
      "offset": [
        6316,
        6373
      ],
      "op": "PUSH1",
      "path": "39",
      "value": "0x40"
    },
    "2790": {
      "fn": "SoulboundRedeemable.payToReceiveToken",
      "offset": [
        6316,
        6373
      ],
      "op": "MLOAD",
      "path": "39"
    },
    "2791": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "2795": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "2797": {
      "op": "SHL"
    },
    "2798": {
      "fn": "SoulboundRedeemable.payToReceiveToken",
      "offset": [
        6316,
        6373
      ],
      "op": "DUP2",
      "path": "39"
    },
    "2799": {
      "fn": "SoulboundRedeemable.payToReceiveToken",
      "offset": [
        6316,
        6373
      ],
      "op": "MSTORE",
      "path": "39"
    },
    "2800": {
      "fn": "SoulboundRedeemable.payToReceiveToken",
      "offset": [
        6316,
        6373
      ],
      "op": "PUSH1",
      "path": "39",
      "value": "0x4"
    },
    "2802": {
      "fn": "SoulboundRedeemable.payToReceiveToken",
      "offset": [
        6316,
        6373
      ],
      "op": "ADD",
      "path": "39"
    },
    "2803": {
      "fn": "SoulboundRedeemable.payToReceiveToken",
      "offset": [
        6316,
        6373
      ],
      "op": "PUSH2",
      "path": "39",
      "value": "0x6B1"
    },
    "2806": {
      "fn": "SoulboundRedeemable.payToReceiveToken",
      "offset": [
        6316,
        6373
      ],
      "op": "SWAP1",
      "path": "39"
    },
    "2807": {
      "fn": "SoulboundRedeemable.payToReceiveToken",
      "offset": [
        6316,
        6373
      ],
      "op": "PUSH2",
      "path": "39",
      "value": "0x2C5F"
    },
    "2810": {
      "fn": "SoulboundRedeemable.payToReceiveToken",
      "jump": "i",
      "offset": [
        6316,
        6373
      ],
      "op": "JUMP",
      "path": "39"
    },
    "2811": {
      "fn": "SoulboundRedeemable.payToReceiveToken",
      "offset": [
        6316,
        6373
      ],
      "op": "JUMPDEST",
      "path": "39"
    },
    "2812": {
      "fn": "SoulboundRedeemable.payToReceiveToken",
      "offset": [
        6452,
        6468
      ],
      "op": "PUSH2",
      "path": "39",
      "statement": 24,
      "value": "0xB04"
    },
    "2815": {
      "fn": "SoulboundRedeemable.payToReceiveToken",
      "offset": [
        6460,
        6467
      ],
      "op": "DUP2",
      "path": "39"
    },
    "2816": {
      "fn": "SoulboundRedeemable.payToReceiveToken",
      "offset": [
        6452,
        6459
      ],
      "op": "PUSH2",
      "path": "39",
      "value": "0x1F4F"
    },
    "2819": {
      "fn": "SoulboundRedeemable.payToReceiveToken",
      "jump": "i",
      "offset": [
        6452,
        6468
      ],
      "op": "JUMP",
      "path": "39"
    },
    "2820": {
      "fn": "SoulboundRedeemable.payToReceiveToken",
      "offset": [
        6452,
        6468
      ],
      "op": "JUMPDEST",
      "path": "39"
    },
    "2821": {
      "branch": 140,
      "fn": "SoulboundRedeemable.payToReceiveToken",
      "offset": [
        6451,
        6468
      ],
      "op": "ISZERO",
      "path": "39"
    },
    "2822": {
      "fn": "SoulboundRedeemable.payToReceiveToken",
      "offset": [
        6443,
        6504
      ],
      "op": "PUSH2",
      "path": "39",
      "value": "0xB51"
    },
    "2825": {
      "branch": 140,
      "fn": "SoulboundRedeemable.payToReceiveToken",
      "offset": [
        6443,
        6504
      ],
      "op": "JUMPI",
      "path": "39"
    },
    "2826": {
      "fn": "SoulboundRedeemable.payToReceiveToken",
      "offset": [
        6443,
        6504
      ],
      "op": "PUSH1",
      "path": "39",
      "value": "0x40"
    },
    "2828": {
      "fn": "SoulboundRedeemable.payToReceiveToken",
      "offset": [
        6443,
        6504
      ],
      "op": "MLOAD",
      "path": "39"
    },
    "2829": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "2833": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "2835": {
      "op": "SHL"
    },
    "2836": {
      "fn": "SoulboundRedeemable.payToReceiveToken",
      "offset": [
        6443,
        6504
      ],
      "op": "DUP2",
      "path": "39"
    },
    "2837": {
      "fn": "SoulboundRedeemable.payToReceiveToken",
      "offset": [
        6443,
        6504
      ],
      "op": "MSTORE",
      "path": "39"
    },
    "2838": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2840": {
      "fn": "SoulboundRedeemable.payToReceiveToken",
      "offset": [
        6443,
        6504
      ],
      "op": "PUSH1",
      "path": "39",
      "value": "0x4"
    },
    "2842": {
      "fn": "SoulboundRedeemable.payToReceiveToken",
      "offset": [
        6443,
        6504
      ],
      "op": "DUP3",
      "path": "39"
    },
    "2843": {
      "fn": "SoulboundRedeemable.payToReceiveToken",
      "offset": [
        6443,
        6504
      ],
      "op": "ADD",
      "path": "39"
    },
    "2844": {
      "op": "MSTORE"
    },
    "2845": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "2847": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "2849": {
      "op": "DUP3"
    },
    "2850": {
      "op": "ADD"
    },
    "2851": {
      "op": "MSTORE"
    },
    "2852": {
      "op": "PUSH32",
      "value": "0x4D696E74206F6620616C7265616479206578697374696E6720746F6B656E2E00"
    },
    "2885": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "2887": {
      "op": "DUP3"
    },
    "2888": {
      "op": "ADD"
    },
    "2889": {
      "op": "MSTORE"
    },
    "2890": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "2892": {
      "op": "ADD"
    },
    "2893": {
      "fn": "SoulboundRedeemable.payToReceiveToken",
      "offset": [
        6443,
        6504
      ],
      "op": "PUSH2",
      "path": "39",
      "value": "0x6B1"
    },
    "2896": {
      "op": "JUMP"
    },
    "2897": {
      "fn": "SoulboundRedeemable.payToReceiveToken",
      "offset": [
        6443,
        6504
      ],
      "op": "JUMPDEST",
      "path": "39"
    },
    "2898": {
      "fn": "SoulboundRedeemable.payToReceiveToken",
      "offset": [
        6581,
        6597
      ],
      "op": "PUSH1",
      "path": "39",
      "statement": 25,
      "value": "0x0"
    },
    "2900": {
      "fn": "SoulboundRedeemable.payToReceiveToken",
      "offset": [
        6581,
        6597
      ],
      "op": "DUP2",
      "path": "39"
    },
    "2901": {
      "fn": "SoulboundRedeemable.payToReceiveToken",
      "offset": [
        6581,
        6597
      ],
      "op": "DUP2",
      "path": "39"
    },
    "2902": {
      "fn": "SoulboundRedeemable.payToReceiveToken",
      "offset": [
        6581,
        6597
      ],
      "op": "MSTORE",
      "path": "39"
    },
    "2903": {
      "fn": "SoulboundRedeemable.payToReceiveToken",
      "offset": [
        6581,
        6588
      ],
      "op": "PUSH1",
      "path": "39",
      "value": "0x10"
    },
    "2905": {
      "fn": "SoulboundRedeemable.payToReceiveToken",
      "offset": [
        6581,
        6597
      ],
      "op": "PUSH1",
      "path": "39",
      "value": "0x20"
    },
    "2907": {
      "fn": "SoulboundRedeemable.payToReceiveToken",
      "offset": [
        6581,
        6597
      ],
      "op": "MSTORE",
      "path": "39"
    },
    "2908": {
      "fn": "SoulboundRedeemable.payToReceiveToken",
      "offset": [
        6581,
        6597
      ],
      "op": "PUSH1",
      "path": "39",
      "value": "0x40"
    },
    "2910": {
      "fn": "SoulboundRedeemable.payToReceiveToken",
      "offset": [
        6581,
        6597
      ],
      "op": "SWAP1",
      "path": "39"
    },
    "2911": {
      "fn": "SoulboundRedeemable.payToReceiveToken",
      "offset": [
        6581,
        6597
      ],
      "op": "KECCAK256",
      "path": "39"
    },
    "2912": {
      "fn": "SoulboundRedeemable.payToReceiveToken",
      "offset": [
        6581,
        6597
      ],
      "op": "SLOAD",
      "path": "39"
    },
    "2913": {
      "fn": "SoulboundRedeemable.payToReceiveToken",
      "offset": [
        6581,
        6597
      ],
      "op": "PUSH1",
      "path": "39",
      "value": "0xFF"
    },
    "2915": {
      "branch": 141,
      "fn": "SoulboundRedeemable.payToReceiveToken",
      "offset": [
        6581,
        6597
      ],
      "op": "AND",
      "path": "39"
    },
    "2916": {
      "fn": "SoulboundRedeemable.payToReceiveToken",
      "offset": [
        6573,
        6625
      ],
      "op": "PUSH2",
      "path": "39",
      "value": "0xBA9"
    },
    "2919": {
      "branch": 141,
      "fn": "SoulboundRedeemable.payToReceiveToken",
      "offset": [
        6573,
        6625
      ],
      "op": "JUMPI",
      "path": "39"
    },
    "2920": {
      "fn": "SoulboundRedeemable.payToReceiveToken",
      "offset": [
        6573,
        6625
      ],
      "op": "PUSH1",
      "path": "39",
      "value": "0x40"
    },
    "2922": {
      "fn": "SoulboundRedeemable.payToReceiveToken",
      "offset": [
        6573,
        6625
      ],
      "op": "MLOAD",
      "path": "39"
    },
    "2923": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "2927": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "2929": {
      "op": "SHL"
    },
    "2930": {
      "fn": "SoulboundRedeemable.payToReceiveToken",
      "offset": [
        6573,
        6625
      ],
      "op": "DUP2",
      "path": "39"
    },
    "2931": {
      "fn": "SoulboundRedeemable.payToReceiveToken",
      "offset": [
        6573,
        6625
      ],
      "op": "MSTORE",
      "path": "39"
    },
    "2932": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2934": {
      "fn": "SoulboundRedeemable.payToReceiveToken",
      "offset": [
        6573,
        6625
      ],
      "op": "PUSH1",
      "path": "39",
      "value": "0x4"
    },
    "2936": {
      "fn": "SoulboundRedeemable.payToReceiveToken",
      "offset": [
        6573,
        6625
      ],
      "op": "DUP3",
      "path": "39"
    },
    "2937": {
      "fn": "SoulboundRedeemable.payToReceiveToken",
      "offset": [
        6573,
        6625
      ],
      "op": "ADD",
      "path": "39"
    },
    "2938": {
      "op": "MSTORE"
    },
    "2939": {
      "op": "PUSH1",
      "value": "0x17"
    },
    "2941": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "2943": {
      "op": "DUP3"
    },
    "2944": {
      "op": "ADD"
    },
    "2945": {
      "op": "MSTORE"
    },
    "2946": {
      "op": "PUSH23",
      "value": "0x20B63932B0B23C903932B1B2B4BB32B2103A37B5B2B717"
    },
    "2970": {
      "op": "PUSH1",
      "value": "0x49"
    },
    "2972": {
      "op": "SHL"
    },
    "2973": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "2975": {
      "op": "DUP3"
    },
    "2976": {
      "op": "ADD"
    },
    "2977": {
      "op": "MSTORE"
    },
    "2978": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "2980": {
      "op": "ADD"
    },
    "2981": {
      "fn": "SoulboundRedeemable.payToReceiveToken",
      "offset": [
        6573,
        6625
      ],
      "op": "PUSH2",
      "path": "39",
      "value": "0x6B1"
    },
    "2984": {
      "op": "JUMP"
    },
    "2985": {
      "fn": "SoulboundRedeemable.payToReceiveToken",
      "offset": [
        6573,
        6625
      ],
      "op": "JUMPDEST",
      "path": "39"
    },
    "2986": {
      "fn": "SoulboundRedeemable.payToReceiveToken",
      "offset": [
        6768,
        6793
      ],
      "op": "PUSH1",
      "path": "39",
      "statement": 26,
      "value": "0x0"
    },
    "2988": {
      "fn": "SoulboundRedeemable.payToReceiveToken",
      "offset": [
        6768,
        6793
      ],
      "op": "DUP2",
      "path": "39"
    },
    "2989": {
      "fn": "SoulboundRedeemable.payToReceiveToken",
      "offset": [
        6768,
        6793
      ],
      "op": "DUP2",
      "path": "39"
    },
    "2990": {
      "fn": "SoulboundRedeemable.payToReceiveToken",
      "offset": [
        6768,
        6793
      ],
      "op": "MSTORE",
      "path": "39"
    },
    "2991": {
      "fn": "SoulboundRedeemable.payToReceiveToken",
      "offset": [
        6768,
        6784
      ],
      "op": "PUSH1",
      "path": "39",
      "value": "0x11"
    },
    "2993": {
      "fn": "SoulboundRedeemable.payToReceiveToken",
      "offset": [
        6768,
        6793
      ],
      "op": "PUSH1",
      "path": "39",
      "value": "0x20"
    },
    "2995": {
      "fn": "SoulboundRedeemable.payToReceiveToken",
      "offset": [
        6768,
        6793
      ],
      "op": "MSTORE",
      "path": "39"
    },
    "2996": {
      "fn": "SoulboundRedeemable.payToReceiveToken",
      "offset": [
        6768,
        6793
      ],
      "op": "PUSH1",
      "path": "39",
      "value": "0x40"
    },
    "2998": {
      "fn": "SoulboundRedeemable.payToReceiveToken",
      "offset": [
        6768,
        6793
      ],
      "op": "SWAP1",
      "path": "39"
    },
    "2999": {
      "fn": "SoulboundRedeemable.payToReceiveToken",
      "offset": [
        6768,
        6793
      ],
      "op": "KECCAK256",
      "path": "39"
    },
    "3000": {
      "fn": "SoulboundRedeemable.payToReceiveToken",
      "offset": [
        6768,
        6793
      ],
      "op": "SLOAD",
      "path": "39"
    },
    "3001": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3003": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3005": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3007": {
      "op": "SHL"
    },
    "3008": {
      "op": "SUB"
    },
    "3009": {
      "fn": "SoulboundRedeemable.payToReceiveToken",
      "offset": [
        6768,
        6806
      ],
      "op": "DUP4",
      "path": "39"
    },
    "3010": {
      "fn": "SoulboundRedeemable.payToReceiveToken",
      "offset": [
        6768,
        6806
      ],
      "op": "DUP2",
      "path": "39"
    },
    "3011": {
      "fn": "SoulboundRedeemable.payToReceiveToken",
      "offset": [
        6768,
        6806
      ],
      "op": "AND",
      "path": "39"
    },
    "3012": {
      "fn": "SoulboundRedeemable.payToReceiveToken",
      "offset": [
        6768,
        6793
      ],
      "op": "SWAP2",
      "path": "39"
    },
    "3013": {
      "fn": "SoulboundRedeemable.payToReceiveToken",
      "offset": [
        6768,
        6793
      ],
      "op": "AND",
      "path": "39"
    },
    "3014": {
      "branch": 142,
      "fn": "SoulboundRedeemable.payToReceiveToken",
      "offset": [
        6768,
        6806
      ],
      "op": "EQ",
      "path": "39"
    },
    "3015": {
      "fn": "SoulboundRedeemable.payToReceiveToken",
      "offset": [
        6747,
        6853
      ],
      "op": "PUSH2",
      "path": "39",
      "value": "0xC0A"
    },
    "3018": {
      "branch": 142,
      "fn": "SoulboundRedeemable.payToReceiveToken",
      "offset": [
        6747,
        6853
      ],
      "op": "JUMPI",
      "path": "39"
    },
    "3019": {
      "fn": "SoulboundRedeemable.payToReceiveToken",
      "offset": [
        6747,
        6853
      ],
      "op": "PUSH1",
      "path": "39",
      "value": "0x40"
    },
    "3021": {
      "fn": "SoulboundRedeemable.payToReceiveToken",
      "offset": [
        6747,
        6853
      ],
      "op": "MLOAD",
      "path": "39"
    },
    "3022": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "3026": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "3028": {
      "op": "SHL"
    },
    "3029": {
      "fn": "SoulboundRedeemable.payToReceiveToken",
      "offset": [
        6747,
        6853
      ],
      "op": "DUP2",
      "path": "39"
    },
    "3030": {
      "fn": "SoulboundRedeemable.payToReceiveToken",
      "offset": [
        6747,
        6853
      ],
      "op": "MSTORE",
      "path": "39"
    },
    "3031": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3033": {
      "fn": "SoulboundRedeemable.payToReceiveToken",
      "offset": [
        6747,
        6853
      ],
      "op": "PUSH1",
      "path": "39",
      "value": "0x4"
    },
    "3035": {
      "fn": "SoulboundRedeemable.payToReceiveToken",
      "offset": [
        6747,
        6853
      ],
      "op": "DUP3",
      "path": "39"
    },
    "3036": {
      "fn": "SoulboundRedeemable.payToReceiveToken",
      "offset": [
        6747,
        6853
      ],
      "op": "ADD",
      "path": "39"
    },
    "3037": {
      "op": "MSTORE"
    },
    "3038": {
      "op": "PUSH1",
      "value": "0x15"
    },
    "3040": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "3042": {
      "op": "DUP3"
    },
    "3043": {
      "op": "ADD"
    },
    "3044": {
      "op": "MSTORE"
    },
    "3045": {
      "op": "PUSH21",
      "value": "0x2737BA103832B73234B733903932B1B2B4BB32B917"
    },
    "3067": {
      "op": "PUSH1",
      "value": "0x59"
    },
    "3069": {
      "op": "SHL"
    },
    "3070": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "3072": {
      "op": "DUP3"
    },
    "3073": {
      "op": "ADD"
    },
    "3074": {
      "op": "MSTORE"
    },
    "3075": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "3077": {
      "op": "ADD"
    },
    "3078": {
      "fn": "SoulboundRedeemable.payToReceiveToken",
      "offset": [
        6747,
        6853
      ],
      "op": "PUSH2",
      "path": "39",
      "value": "0x6B1"
    },
    "3081": {
      "op": "JUMP"
    },
    "3082": {
      "fn": "SoulboundRedeemable.payToReceiveToken",
      "offset": [
        6747,
        6853
      ],
      "op": "JUMPDEST",
      "path": "39"
    },
    "3083": {
      "fn": "IsValidWithDate.isValid",
      "offset": [
        1778,
        1782
      ],
      "op": "PUSH1",
      "path": "36",
      "value": "0x0"
    },
    "3085": {
      "fn": "IsValidWithDate.getExpiryDate",
      "offset": [
        1459,
        1483
      ],
      "op": "DUP2",
      "path": "36"
    },
    "3086": {
      "fn": "IsValidWithDate.getExpiryDate",
      "offset": [
        1459,
        1483
      ],
      "op": "DUP2",
      "path": "36"
    },
    "3087": {
      "fn": "IsValidWithDate.getExpiryDate",
      "offset": [
        1459,
        1483
      ],
      "op": "MSTORE",
      "path": "36"
    },
    "3088": {
      "fn": "IsValidWithDate.getExpiryDate",
      "offset": [
        1459,
        1483
      ],
      "op": "PUSH1",
      "path": "36",
      "value": "0x20"
    },
    "3090": {
      "fn": "IsValidWithDate.getExpiryDate",
      "offset": [
        1459,
        1483
      ],
      "op": "DUP2",
      "path": "36"
    },
    "3091": {
      "fn": "IsValidWithDate.getExpiryDate",
      "offset": [
        1459,
        1483
      ],
      "op": "SWAP1",
      "path": "36"
    },
    "3092": {
      "fn": "IsValidWithDate.getExpiryDate",
      "offset": [
        1459,
        1483
      ],
      "op": "MSTORE",
      "path": "36"
    },
    "3093": {
      "fn": "IsValidWithDate.getExpiryDate",
      "offset": [
        1459,
        1483
      ],
      "op": "PUSH1",
      "path": "36",
      "value": "0x40"
    },
    "3095": {
      "fn": "IsValidWithDate.getExpiryDate",
      "offset": [
        1459,
        1483
      ],
      "op": "SWAP1",
      "path": "36"
    },
    "3096": {
      "fn": "IsValidWithDate.getExpiryDate",
      "offset": [
        1459,
        1483
      ],
      "op": "KECCAK256",
      "path": "36"
    },
    "3097": {
      "fn": "IsValidWithDate.getExpiryDate",
      "offset": [
        1459,
        1483
      ],
      "op": "SLOAD",
      "path": "36"
    },
    "3098": {
      "fn": "IsValidWithDate.isValid",
      "offset": [
        1801,
        1816
      ],
      "op": "TIMESTAMP",
      "path": "36"
    },
    "3099": {
      "fn": "IsValidWithDate.isValid",
      "offset": [
        1801,
        1842
      ],
      "op": "GT",
      "path": "36"
    },
    "3100": {
      "fn": "IsValidWithDate.isValid",
      "offset": [
        1801,
        1842
      ],
      "op": "ISZERO",
      "path": "36"
    },
    "3101": {
      "fn": "SoulboundRedeemable.payToReceiveToken",
      "offset": [
        6928,
        6997
      ],
      "op": "PUSH2",
      "path": "39",
      "statement": 27,
      "value": "0xC79"
    },
    "3104": {
      "fn": "SoulboundRedeemable.payToReceiveToken",
      "offset": [
        6928,
        6997
      ],
      "op": "JUMPI",
      "path": "39"
    },
    "3105": {
      "fn": "SoulboundRedeemable.payToReceiveToken",
      "offset": [
        6928,
        6997
      ],
      "op": "PUSH1",
      "path": "39",
      "value": "0x40"
    },
    "3107": {
      "fn": "SoulboundRedeemable.payToReceiveToken",
      "offset": [
        6928,
        6997
      ],
      "op": "MLOAD",
      "path": "39"
    },
    "3108": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "3112": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "3114": {
      "op": "SHL"
    },
    "3115": {
      "fn": "SoulboundRedeemable.payToReceiveToken",
      "offset": [
        6928,
        6997
      ],
      "op": "DUP2",
      "path": "39"
    },
    "3116": {
      "fn": "SoulboundRedeemable.payToReceiveToken",
      "offset": [
        6928,
        6997
      ],
      "op": "MSTORE",
      "path": "39"
    },
    "3117": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3119": {
      "fn": "SoulboundRedeemable.payToReceiveToken",
      "offset": [
        6928,
        6997
      ],
      "op": "PUSH1",
      "path": "39",
      "value": "0x4"
    },
    "3121": {
      "fn": "SoulboundRedeemable.payToReceiveToken",
      "offset": [
        6928,
        6997
      ],
      "op": "DUP3",
      "path": "39"
    },
    "3122": {
      "fn": "SoulboundRedeemable.payToReceiveToken",
      "offset": [
        6928,
        6997
      ],
      "op": "ADD",
      "path": "39"
    },
    "3123": {
      "op": "MSTORE"
    },
    "3124": {
      "op": "PUSH1",
      "value": "0x28"
    },
    "3126": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "3128": {
      "op": "DUP3"
    },
    "3129": {
      "op": "ADD"
    },
    "3130": {
      "op": "MSTORE"
    },
    "3131": {
      "op": "PUSH32",
      "value": "0x526563656976616C206F66206578706972656420746F6B656E2C207265646565"
    },
    "3164": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "3166": {
      "op": "DUP3"
    },
    "3167": {
      "op": "ADD"
    },
    "3168": {
      "op": "MSTORE"
    },
    "3169": {
      "op": "PUSH8",
      "value": "0x36903A37B5B2B717"
    },
    "3178": {
      "op": "PUSH1",
      "value": "0xC1"
    },
    "3180": {
      "op": "SHL"
    },
    "3181": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "3183": {
      "op": "DUP3"
    },
    "3184": {
      "op": "ADD"
    },
    "3185": {
      "op": "MSTORE"
    },
    "3186": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "3188": {
      "op": "ADD"
    },
    "3189": {
      "fn": "SoulboundRedeemable.payToReceiveToken",
      "offset": [
        6928,
        6997
      ],
      "op": "PUSH2",
      "path": "39",
      "value": "0x6B1"
    },
    "3192": {
      "op": "JUMP"
    },
    "3193": {
      "fn": "SoulboundRedeemable.payToReceiveToken",
      "offset": [
        6928,
        6997
      ],
      "op": "JUMPDEST",
      "path": "39"
    },
    "3194": {
      "fn": "SoulboundRedeemable.payToReceiveToken",
      "offset": [
        7105,
        7115
      ],
      "op": "PUSH1",
      "path": "39",
      "statement": 28,
      "value": "0xF"
    },
    "3196": {
      "fn": "SoulboundRedeemable.payToReceiveToken",
      "offset": [
        7105,
        7115
      ],
      "op": "SLOAD",
      "path": "39"
    },
    "3197": {
      "fn": "SoulboundRedeemable.payToReceiveToken",
      "offset": [
        7092,
        7101
      ],
      "op": "CALLVALUE",
      "path": "39"
    },
    "3198": {
      "fn": "SoulboundRedeemable.payToReceiveToken",
      "offset": [
        7092,
        7115
      ],
      "op": "LT",
      "path": "39"
    },
    "3199": {
      "branch": 143,
      "fn": "SoulboundRedeemable.payToReceiveToken",
      "offset": [
        7092,
        7115
      ],
      "op": "ISZERO",
      "path": "39"
    },
    "3200": {
      "fn": "SoulboundRedeemable.payToReceiveToken",
      "offset": [
        7084,
        7148
      ],
      "op": "PUSH2",
      "path": "39",
      "value": "0xCCB"
    },
    "3203": {
      "branch": 143,
      "fn": "SoulboundRedeemable.payToReceiveToken",
      "offset": [
        7084,
        7148
      ],
      "op": "JUMPI",
      "path": "39"
    },
    "3204": {
      "fn": "SoulboundRedeemable.payToReceiveToken",
      "offset": [
        7084,
        7148
      ],
      "op": "PUSH1",
      "path": "39",
      "value": "0x40"
    },
    "3206": {
      "fn": "SoulboundRedeemable.payToReceiveToken",
      "offset": [
        7084,
        7148
      ],
      "op": "MLOAD",
      "path": "39"
    },
    "3207": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "3211": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "3213": {
      "op": "SHL"
    },
    "3214": {
      "fn": "SoulboundRedeemable.payToReceiveToken",
      "offset": [
        7084,
        7148
      ],
      "op": "DUP2",
      "path": "39"
    },
    "3215": {
      "fn": "SoulboundRedeemable.payToReceiveToken",
      "offset": [
        7084,
        7148
      ],
      "op": "MSTORE",
      "path": "39"
    },
    "3216": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3218": {
      "fn": "SoulboundRedeemable.payToReceiveToken",
      "offset": [
        7084,
        7148
      ],
      "op": "PUSH1",
      "path": "39",
      "value": "0x4"
    },
    "3220": {
      "fn": "SoulboundRedeemable.payToReceiveToken",
      "offset": [
        7084,
        7148
      ],
      "op": "DUP3",
      "path": "39"
    },
    "3221": {
      "fn": "SoulboundRedeemable.payToReceiveToken",
      "offset": [
        7084,
        7148
      ],
      "op": "ADD",
      "path": "39"
    },
    "3222": {
      "op": "MSTORE"
    },
    "3223": {
      "op": "PUSH1",
      "value": "0x1C"
    },
    "3225": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "3227": {
      "op": "DUP3"
    },
    "3228": {
      "op": "ADD"
    },
    "3229": {
      "op": "MSTORE"
    },
    "3230": {
      "op": "PUSH32",
      "value": "0x5072696365206C6F776572207468616E20746F6B656E20636F73742E00000000"
    },
    "3263": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "3265": {
      "op": "DUP3"
    },
    "3266": {
      "op": "ADD"
    },
    "3267": {
      "op": "MSTORE"
    },
    "3268": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "3270": {
      "op": "ADD"
    },
    "3271": {
      "fn": "SoulboundRedeemable.payToReceiveToken",
      "offset": [
        7084,
        7148
      ],
      "op": "PUSH2",
      "path": "39",
      "value": "0x6B1"
    },
    "3274": {
      "op": "JUMP"
    },
    "3275": {
      "fn": "SoulboundRedeemable.payToReceiveToken",
      "offset": [
        7084,
        7148
      ],
      "op": "JUMPDEST",
      "path": "39"
    },
    "3276": {
      "fn": "SoulboundRedeemable.payToReceiveToken",
      "offset": [
        7195,
        7210
      ],
      "op": "PUSH1",
      "path": "39",
      "value": "0x0"
    },
    "3278": {
      "fn": "SoulboundRedeemable.payToReceiveToken",
      "offset": [
        7312,
        7322
      ],
      "op": "PUSH1",
      "path": "39",
      "value": "0xF"
    },
    "3280": {
      "fn": "SoulboundRedeemable.payToReceiveToken",
      "offset": [
        7312,
        7322
      ],
      "op": "SLOAD",
      "path": "39"
    },
    "3281": {
      "fn": "SoulboundRedeemable.payToReceiveToken",
      "offset": [
        7300,
        7309
      ],
      "op": "CALLVALUE",
      "path": "39"
    },
    "3282": {
      "branch": 144,
      "fn": "SoulboundRedeemable.payToReceiveToken",
      "offset": [
        7300,
        7322
      ],
      "op": "GT",
      "path": "39"
    },
    "3283": {
      "fn": "SoulboundRedeemable.payToReceiveToken",
      "offset": [
        7296,
        7548
      ],
      "op": "ISZERO",
      "path": "39"
    },
    "3284": {
      "fn": "SoulboundRedeemable.payToReceiveToken",
      "offset": [
        7296,
        7548
      ],
      "op": "PUSH2",
      "path": "39",
      "value": "0xD1F"
    },
    "3287": {
      "branch": 144,
      "fn": "SoulboundRedeemable.payToReceiveToken",
      "offset": [
        7296,
        7548
      ],
      "op": "JUMPI",
      "path": "39"
    },
    "3288": {
      "fn": "SoulboundRedeemable.payToReceiveToken",
      "offset": [
        7423,
        7433
      ],
      "op": "PUSH1",
      "path": "39",
      "statement": 29,
      "value": "0xF"
    },
    "3290": {
      "fn": "SoulboundRedeemable.payToReceiveToken",
      "offset": [
        7423,
        7433
      ],
      "op": "SLOAD",
      "path": "39"
    },
    "3291": {
      "fn": "SoulboundRedeemable.payToReceiveToken",
      "offset": [
        7411,
        7433
      ],
      "op": "PUSH2",
      "path": "39",
      "value": "0xCE4"
    },
    "3294": {
      "fn": "SoulboundRedeemable.payToReceiveToken",
      "offset": [
        7411,
        7433
      ],
      "op": "SWAP1",
      "path": "39"
    },
    "3295": {
      "fn": "SoulboundRedeemable.payToReceiveToken",
      "offset": [
        7411,
        7420
      ],
      "op": "CALLVALUE",
      "path": "39"
    },
    "3296": {
      "fn": "SoulboundRedeemable.payToReceiveToken",
      "offset": [
        7411,
        7433
      ],
      "op": "PUSH2",
      "path": "39",
      "value": "0x2C8E"
    },
    "3299": {
      "fn": "SoulboundRedeemable.payToReceiveToken",
      "jump": "i",
      "offset": [
        7411,
        7433
      ],
      "op": "JUMP",
      "path": "39"
    },
    "3300": {
      "fn": "SoulboundRedeemable.payToReceiveToken",
      "offset": [
        7411,
        7433
      ],
      "op": "JUMPDEST",
      "path": "39"
    },
    "3301": {
      "fn": "SoulboundRedeemable.payToReceiveToken",
      "offset": [
        7501,
        7537
      ],
      "op": "PUSH1",
      "path": "39",
      "statement": 30,
      "value": "0x40"
    },
    "3303": {
      "fn": "SoulboundRedeemable.payToReceiveToken",
      "offset": [
        7501,
        7537
      ],
      "op": "MLOAD",
      "path": "39"
    },
    "3304": {
      "fn": "SoulboundRedeemable.payToReceiveToken",
      "offset": [
        7401,
        7433
      ],
      "op": "SWAP1",
      "path": "39"
    },
    "3305": {
      "fn": "SoulboundRedeemable.payToReceiveToken",
      "offset": [
        7401,
        7433
      ],
      "op": "SWAP2",
      "path": "39"
    },
    "3306": {
      "op": "POP"
    },
    "3307": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3309": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3311": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3313": {
      "op": "SHL"
    },
    "3314": {
      "op": "SUB"
    },
    "3315": {
      "fn": "SoulboundRedeemable.payToReceiveToken",
      "offset": [
        7501,
        7528
      ],
      "op": "DUP5",
      "path": "39"
    },
    "3316": {
      "fn": "SoulboundRedeemable.payToReceiveToken",
      "offset": [
        7501,
        7528
      ],
      "op": "AND",
      "path": "39"
    },
    "3317": {
      "fn": "SoulboundRedeemable.payToReceiveToken",
      "offset": [
        7501,
        7528
      ],
      "op": "SWAP1",
      "path": "39"
    },
    "3318": {
      "fn": "SoulboundRedeemable.payToReceiveToken",
      "offset": [
        7501,
        7537
      ],
      "op": "DUP3",
      "path": "39"
    },
    "3319": {
      "fn": "SoulboundRedeemable.payToReceiveToken",
      "offset": [
        7501,
        7537
      ],
      "op": "ISZERO",
      "path": "39"
    },
    "3320": {
      "fn": "SoulboundRedeemable.payToReceiveToken",
      "offset": [
        7501,
        7537
      ],
      "op": "PUSH2",
      "path": "39",
      "value": "0x8FC"
    },
    "3323": {
      "fn": "SoulboundRedeemable.payToReceiveToken",
      "offset": [
        7501,
        7537
      ],
      "op": "MUL",
      "path": "39"
    },
    "3324": {
      "fn": "SoulboundRedeemable.payToReceiveToken",
      "offset": [
        7501,
        7537
      ],
      "op": "SWAP1",
      "path": "39"
    },
    "3325": {
      "fn": "SoulboundRedeemable.payToReceiveToken",
      "offset": [
        7401,
        7433
      ],
      "op": "DUP4",
      "path": "39"
    },
    "3326": {
      "fn": "SoulboundRedeemable.payToReceiveToken",
      "offset": [
        7401,
        7433
      ],
      "op": "SWAP1",
      "path": "39"
    },
    "3327": {
      "fn": "SoulboundRedeemable.payToReceiveToken",
      "offset": [
        7501,
        7537
      ],
      "op": "PUSH1",
      "path": "39",
      "value": "0x0"
    },
    "3329": {
      "fn": "SoulboundRedeemable.payToReceiveToken",
      "offset": [
        7501,
        7537
      ],
      "op": "DUP2",
      "path": "39"
    },
    "3330": {
      "fn": "SoulboundRedeemable.payToReceiveToken",
      "offset": [
        7501,
        7537
      ],
      "op": "DUP2",
      "path": "39"
    },
    "3331": {
      "fn": "SoulboundRedeemable.payToReceiveToken",
      "offset": [
        7501,
        7537
      ],
      "op": "DUP2",
      "path": "39"
    },
    "3332": {
      "fn": "SoulboundRedeemable.payToReceiveToken",
      "offset": [
        7401,
        7433
      ],
      "op": "DUP6",
      "path": "39"
    },
    "3333": {
      "fn": "SoulboundRedeemable.payToReceiveToken",
      "offset": [
        7501,
        7528
      ],
      "op": "DUP9",
      "path": "39"
    },
    "3334": {
      "fn": "SoulboundRedeemable.payToReceiveToken",
      "offset": [
        7501,
        7537
      ],
      "op": "DUP9",
      "path": "39"
    },
    "3335": {
      "fn": "SoulboundRedeemable.payToReceiveToken",
      "offset": [
        7501,
        7537
      ],
      "op": "CALL",
      "path": "39"
    },
    "3336": {
      "fn": "SoulboundRedeemable.payToReceiveToken",
      "offset": [
        7501,
        7537
      ],
      "op": "SWAP4",
      "path": "39"
    },
    "3337": {
      "fn": "SoulboundRedeemable.payToReceiveToken",
      "offset": [
        7501,
        7537
      ],
      "op": "POP",
      "path": "39"
    },
    "3338": {
      "fn": "SoulboundRedeemable.payToReceiveToken",
      "offset": [
        7501,
        7537
      ],
      "op": "POP",
      "path": "39"
    },
    "3339": {
      "fn": "SoulboundRedeemable.payToReceiveToken",
      "offset": [
        7501,
        7537
      ],
      "op": "POP",
      "path": "39"
    },
    "3340": {
      "fn": "SoulboundRedeemable.payToReceiveToken",
      "offset": [
        7501,
        7537
      ],
      "op": "POP",
      "path": "39"
    },
    "3341": {
      "fn": "SoulboundRedeemable.payToReceiveToken",
      "offset": [
        7501,
        7537
      ],
      "op": "ISZERO",
      "path": "39"
    },
    "3342": {
      "fn": "SoulboundRedeemable.payToReceiveToken",
      "offset": [
        7501,
        7537
      ],
      "op": "DUP1",
      "path": "39"
    },
    "3343": {
      "fn": "SoulboundRedeemable.payToReceiveToken",
      "offset": [
        7501,
        7537
      ],
      "op": "ISZERO",
      "path": "39"
    },
    "3344": {
      "fn": "SoulboundRedeemable.payToReceiveToken",
      "offset": [
        7501,
        7537
      ],
      "op": "PUSH2",
      "path": "39",
      "value": "0xD1D"
    },
    "3347": {
      "fn": "SoulboundRedeemable.payToReceiveToken",
      "offset": [
        7501,
        7537
      ],
      "op": "JUMPI",
      "path": "39"
    },
    "3348": {
      "fn": "SoulboundRedeemable.payToReceiveToken",
      "offset": [
        7501,
        7537
      ],
      "op": "RETURNDATASIZE",
      "path": "39"
    },
    "3349": {
      "fn": "SoulboundRedeemable.payToReceiveToken",
      "offset": [
        7501,
        7537
      ],
      "op": "PUSH1",
      "path": "39",
      "value": "0x0"
    },
    "3351": {
      "fn": "SoulboundRedeemable.payToReceiveToken",
      "offset": [
        7501,
        7537
      ],
      "op": "DUP1",
      "path": "39"
    },
    "3352": {
      "fn": "SoulboundRedeemable.payToReceiveToken",
      "offset": [
        7501,
        7537
      ],
      "op": "RETURNDATACOPY",
      "path": "39"
    },
    "3353": {
      "fn": "SoulboundRedeemable.payToReceiveToken",
      "offset": [
        7501,
        7537
      ],
      "op": "RETURNDATASIZE",
      "path": "39"
    },
    "3354": {
      "fn": "SoulboundRedeemable.payToReceiveToken",
      "offset": [
        7501,
        7537
      ],
      "op": "PUSH1",
      "path": "39",
      "value": "0x0"
    },
    "3356": {
      "fn": "SoulboundRedeemable.payToReceiveToken",
      "offset": [
        7501,
        7537
      ],
      "op": "REVERT",
      "path": "39"
    },
    "3357": {
      "fn": "SoulboundRedeemable.payToReceiveToken",
      "offset": [
        7501,
        7537
      ],
      "op": "JUMPDEST",
      "path": "39"
    },
    "3358": {
      "fn": "SoulboundRedeemable.payToReceiveToken",
      "offset": [
        7501,
        7537
      ],
      "op": "POP",
      "path": "39"
    },
    "3359": {
      "fn": "SoulboundRedeemable.payToReceiveToken",
      "offset": [
        7296,
        7548
      ],
      "op": "JUMPDEST",
      "path": "39"
    },
    "3360": {
      "fn": "SoulboundRedeemable.payToReceiveToken",
      "offset": [
        7594,
        7617
      ],
      "op": "PUSH1",
      "path": "39",
      "value": "0x0"
    },
    "3362": {
      "fn": "SoulboundRedeemable.payToReceiveToken",
      "offset": [
        7620,
        7645
      ],
      "op": "PUSH2",
      "path": "39",
      "value": "0xD2A"
    },
    "3365": {
      "fn": "SoulboundRedeemable.payToReceiveToken",
      "offset": [
        7637,
        7644
      ],
      "op": "DUP4",
      "path": "39"
    },
    "3366": {
      "fn": "SoulboundRedeemable.payToReceiveToken",
      "offset": [
        7620,
        7636
      ],
      "op": "PUSH2",
      "path": "39",
      "value": "0xA0C"
    },
    "3369": {
      "fn": "SoulboundRedeemable.payToReceiveToken",
      "jump": "i",
      "offset": [
        7620,
        7645
      ],
      "op": "JUMP",
      "path": "39"
    },
    "3370": {
      "fn": "SoulboundRedeemable.payToReceiveToken",
      "offset": [
        7620,
        7645
      ],
      "op": "JUMPDEST",
      "path": "39"
    },
    "3371": {
      "fn": "SoulboundRedeemable.payToReceiveToken",
      "offset": [
        7594,
        7645
      ],
      "op": "SWAP1",
      "path": "39"
    },
    "3372": {
      "fn": "SoulboundRedeemable.payToReceiveToken",
      "offset": [
        7594,
        7645
      ],
      "op": "POP",
      "path": "39"
    },
    "3373": {
      "fn": "SoulboundRedeemable.payToReceiveToken",
      "offset": [
        7716,
        7752
      ],
      "op": "PUSH2",
      "path": "39",
      "statement": 31,
      "value": "0xD37"
    },
    "3376": {
      "fn": "SoulboundRedeemable.payToReceiveToken",
      "offset": [
        7722,
        7731
      ],
      "op": "DUP5",
      "path": "39"
    },
    "3377": {
      "fn": "SoulboundRedeemable.payToReceiveToken",
      "offset": [
        7733,
        7740
      ],
      "op": "DUP5",
      "path": "39"
    },
    "3378": {
      "fn": "SoulboundRedeemable.payToReceiveToken",
      "offset": [
        7742,
        7751
      ],
      "op": "DUP4",
      "path": "39"
    },
    "3379": {
      "fn": "SoulboundRedeemable.payToReceiveToken",
      "offset": [
        7716,
        7721
      ],
      "op": "PUSH2",
      "path": "39",
      "value": "0x213D"
    },
    "3382": {
      "fn": "SoulboundRedeemable.payToReceiveToken",
      "jump": "i",
      "offset": [
        7716,
        7752
      ],
      "op": "JUMP",
      "path": "39"
    },
    "3383": {
      "fn": "SoulboundRedeemable.payToReceiveToken",
      "offset": [
        7716,
        7752
      ],
      "op": "JUMPDEST",
      "path": "39"
    },
    "3384": {
      "op": "POP"
    },
    "3385": {
      "fn": "SoulboundRedeemable.payToReceiveToken",
      "offset": [
        7801,
        7811
      ],
      "op": "PUSH1",
      "path": "39",
      "statement": 32,
      "value": "0xC"
    },
    "3387": {
      "fn": "SoulboundRedeemable.payToReceiveToken",
      "offset": [
        7801,
        7813
      ],
      "op": "DUP1",
      "path": "39"
    },
    "3388": {
      "fn": "SoulboundRedeemable.payToReceiveToken",
      "offset": [
        7801,
        7813
      ],
      "op": "SLOAD",
      "path": "39"
    },
    "3389": {
      "fn": "SoulboundRedeemable.payToReceiveToken",
      "offset": [
        7801,
        7813
      ],
      "op": "SWAP1",
      "path": "39"
    },
    "3390": {
      "fn": "SoulboundRedeemable.payToReceiveToken",
      "offset": [
        7801,
        7811
      ],
      "op": "PUSH1",
      "path": "39",
      "value": "0x0"
    },
    "3392": {
      "fn": "SoulboundRedeemable.payToReceiveToken",
      "offset": [
        7801,
        7813
      ],
      "op": "PUSH2",
      "path": "39",
      "value": "0xD48"
    },
    "3395": {
      "fn": "SoulboundRedeemable.payToReceiveToken",
      "offset": [
        7801,
        7813
      ],
      "op": "DUP4",
      "path": "39"
    },
    "3396": {
      "fn": "SoulboundRedeemable.payToReceiveToken",
      "offset": [
        7801,
        7813
      ],
      "op": "PUSH2",
      "path": "39",
      "value": "0x2CA5"
    },
    "3399": {
      "fn": "SoulboundRedeemable.payToReceiveToken",
      "jump": "i",
      "offset": [
        7801,
        7813
      ],
      "op": "JUMP",
      "path": "39"
    },
    "3400": {
      "fn": "SoulboundRedeemable.payToReceiveToken",
      "offset": [
        7801,
        7813
      ],
      "op": "JUMPDEST",
      "path": "39"
    },
    "3401": {
      "fn": "SoulboundRedeemable.payToReceiveToken",
      "offset": [
        7801,
        7813
      ],
      "op": "SWAP2",
      "path": "39"
    },
    "3402": {
      "fn": "SoulboundRedeemable.payToReceiveToken",
      "offset": [
        7801,
        7813
      ],
      "op": "SWAP1",
      "path": "39"
    },
    "3403": {
      "fn": "SoulboundRedeemable.payToReceiveToken",
      "offset": [
        7801,
        7813
      ],
      "op": "POP",
      "path": "39"
    },
    "3404": {
      "fn": "SoulboundRedeemable.payToReceiveToken",
      "offset": [
        7801,
        7813
      ],
      "op": "SSTORE",
      "path": "39"
    },
    "3405": {
      "fn": "SoulboundRedeemable.payToReceiveToken",
      "offset": [
        7801,
        7813
      ],
      "op": "POP",
      "path": "39"
    },
    "3406": {
      "fn": "SoulboundRedeemable.payToReceiveToken",
      "offset": [
        7882,
        7892
      ],
      "op": "PUSH1",
      "path": "39",
      "statement": 33,
      "value": "0xF"
    },
    "3408": {
      "fn": "SoulboundRedeemable.payToReceiveToken",
      "offset": [
        7882,
        7892
      ],
      "op": "SLOAD",
      "path": "39"
    },
    "3409": {
      "fn": "SoulboundRedeemable.payToReceiveToken",
      "offset": [
        7866,
        7878
      ],
      "op": "PUSH1",
      "path": "39",
      "value": "0xD"
    },
    "3411": {
      "fn": "SoulboundRedeemable.payToReceiveToken",
      "offset": [
        7866,
        7878
      ],
      "op": "PUSH1",
      "path": "39",
      "value": "0x0"
    },
    "3413": {
      "fn": "SoulboundRedeemable.payToReceiveToken",
      "offset": [
        7866,
        7892
      ],
      "op": "DUP3",
      "path": "39"
    },
    "3414": {
      "fn": "SoulboundRedeemable.payToReceiveToken",
      "offset": [
        7866,
        7892
      ],
      "op": "DUP3",
      "path": "39"
    },
    "3415": {
      "fn": "SoulboundRedeemable.payToReceiveToken",
      "offset": [
        7866,
        7892
      ],
      "op": "SLOAD",
      "path": "39"
    },
    "3416": {
      "fn": "SoulboundRedeemable.payToReceiveToken",
      "offset": [
        7866,
        7892
      ],
      "op": "PUSH2",
      "path": "39",
      "value": "0xD61"
    },
    "3419": {
      "fn": "SoulboundRedeemable.payToReceiveToken",
      "offset": [
        7866,
        7892
      ],
      "op": "SWAP2",
      "path": "39"
    },
    "3420": {
      "fn": "SoulboundRedeemable.payToReceiveToken",
      "offset": [
        7866,
        7892
      ],
      "op": "SWAP1",
      "path": "39"
    },
    "3421": {
      "fn": "SoulboundRedeemable.payToReceiveToken",
      "offset": [
        7866,
        7892
      ],
      "op": "PUSH2",
      "path": "39",
      "value": "0x2CBE"
    },
    "3424": {
      "fn": "SoulboundRedeemable.payToReceiveToken",
      "jump": "i",
      "offset": [
        7866,
        7892
      ],
      "op": "JUMP",
      "path": "39"
    },
    "3425": {
      "fn": "SoulboundRedeemable.payToReceiveToken",
      "offset": [
        7866,
        7892
      ],
      "op": "JUMPDEST",
      "path": "39"
    },
    "3426": {
      "fn": "SoulboundRedeemable.payToReceiveToken",
      "offset": [
        7866,
        7892
      ],
      "op": "SWAP1",
      "path": "39"
    },
    "3427": {
      "fn": "SoulboundRedeemable.payToReceiveToken",
      "offset": [
        7866,
        7892
      ],
      "op": "SWAP2",
      "path": "39"
    },
    "3428": {
      "fn": "SoulboundRedeemable.payToReceiveToken",
      "offset": [
        7866,
        7892
      ],
      "op": "SSTORE",
      "path": "39"
    },
    "3429": {
      "op": "POP"
    },
    "3430": {
      "op": "POP"
    },
    "3431": {
      "op": "POP"
    },
    "3432": {
      "fn": "SoulboundRedeemable.payToReceiveToken",
      "offset": [
        7970,
        7975
      ],
      "op": "PUSH1",
      "path": "39",
      "statement": 34,
      "value": "0x0"
    },
    "3434": {
      "fn": "SoulboundRedeemable.payToReceiveToken",
      "offset": [
        7951,
        7967
      ],
      "op": "SWAP2",
      "path": "39"
    },
    "3435": {
      "fn": "SoulboundRedeemable.payToReceiveToken",
      "offset": [
        7951,
        7967
      ],
      "op": "DUP3",
      "path": "39"
    },
    "3436": {
      "fn": "SoulboundRedeemable.payToReceiveToken",
      "offset": [
        7951,
        7967
      ],
      "op": "MSTORE",
      "path": "39"
    },
    "3437": {
      "op": "POP"
    },
    "3438": {
      "fn": "SoulboundRedeemable.payToReceiveToken",
      "offset": [
        7951,
        7958
      ],
      "op": "PUSH1",
      "path": "39",
      "value": "0x10"
    },
    "3440": {
      "fn": "SoulboundRedeemable.payToReceiveToken",
      "offset": [
        7951,
        7967
      ],
      "op": "PUSH1",
      "path": "39",
      "value": "0x20"
    },
    "3442": {
      "fn": "SoulboundRedeemable.payToReceiveToken",
      "offset": [
        7951,
        7967
      ],
      "op": "SWAP1",
      "path": "39"
    },
    "3443": {
      "fn": "SoulboundRedeemable.payToReceiveToken",
      "offset": [
        7951,
        7967
      ],
      "op": "DUP2",
      "path": "39"
    },
    "3444": {
      "fn": "SoulboundRedeemable.payToReceiveToken",
      "offset": [
        7951,
        7967
      ],
      "op": "MSTORE",
      "path": "39"
    },
    "3445": {
      "fn": "SoulboundRedeemable.payToReceiveToken",
      "offset": [
        7951,
        7967
      ],
      "op": "PUSH1",
      "path": "39",
      "value": "0x40"
    },
    "3447": {
      "fn": "SoulboundRedeemable.payToReceiveToken",
      "offset": [
        7951,
        7967
      ],
      "op": "DUP1",
      "path": "39"
    },
    "3448": {
      "fn": "SoulboundRedeemable.payToReceiveToken",
      "offset": [
        7951,
        7967
      ],
      "op": "DUP4",
      "path": "39"
    },
    "3449": {
      "fn": "SoulboundRedeemable.payToReceiveToken",
      "offset": [
        7951,
        7967
      ],
      "op": "KECCAK256",
      "path": "39"
    },
    "3450": {
      "fn": "SoulboundRedeemable.payToReceiveToken",
      "offset": [
        7951,
        7975
      ],
      "op": "DUP1",
      "path": "39"
    },
    "3451": {
      "fn": "SoulboundRedeemable.payToReceiveToken",
      "offset": [
        7951,
        7975
      ],
      "op": "SLOAD",
      "path": "39"
    },
    "3452": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "3454": {
      "op": "NOT"
    },
    "3455": {
      "fn": "SoulboundRedeemable.payToReceiveToken",
      "offset": [
        7951,
        7975
      ],
      "op": "SWAP1",
      "path": "39"
    },
    "3456": {
      "fn": "SoulboundRedeemable.payToReceiveToken",
      "offset": [
        7951,
        7975
      ],
      "op": "DUP2",
      "path": "39"
    },
    "3457": {
      "fn": "SoulboundRedeemable.payToReceiveToken",
      "offset": [
        7951,
        7975
      ],
      "op": "AND",
      "path": "39"
    },
    "3458": {
      "fn": "SoulboundRedeemable.payToReceiveToken",
      "offset": [
        7951,
        7975
      ],
      "op": "SWAP1",
      "path": "39"
    },
    "3459": {
      "fn": "SoulboundRedeemable.payToReceiveToken",
      "offset": [
        7951,
        7975
      ],
      "op": "SWAP2",
      "path": "39"
    },
    "3460": {
      "fn": "SoulboundRedeemable.payToReceiveToken",
      "offset": [
        7951,
        7975
      ],
      "op": "SSTORE",
      "path": "39"
    },
    "3461": {
      "fn": "SoulboundRedeemable.payToReceiveToken",
      "offset": [
        8038,
        8054
      ],
      "op": "PUSH1",
      "path": "39",
      "statement": 35,
      "value": "0x11"
    },
    "3463": {
      "fn": "SoulboundRedeemable.payToReceiveToken",
      "offset": [
        8038,
        8063
      ],
      "op": "SWAP1",
      "path": "39"
    },
    "3464": {
      "fn": "SoulboundRedeemable.payToReceiveToken",
      "offset": [
        8038,
        8063
      ],
      "op": "SWAP3",
      "path": "39"
    },
    "3465": {
      "fn": "SoulboundRedeemable.payToReceiveToken",
      "offset": [
        8038,
        8063
      ],
      "op": "MSTORE",
      "path": "39"
    },
    "3466": {
      "fn": "SoulboundRedeemable.payToReceiveToken",
      "offset": [
        8038,
        8063
      ],
      "op": "SWAP1",
      "path": "39"
    },
    "3467": {
      "fn": "SoulboundRedeemable.payToReceiveToken",
      "offset": [
        8038,
        8063
      ],
      "op": "SWAP2",
      "path": "39"
    },
    "3468": {
      "fn": "SoulboundRedeemable.payToReceiveToken",
      "offset": [
        8038,
        8063
      ],
      "op": "KECCAK256",
      "path": "39"
    },
    "3469": {
      "fn": "SoulboundRedeemable.payToReceiveToken",
      "offset": [
        8031,
        8063
      ],
      "op": "DUP1",
      "path": "39"
    },
    "3470": {
      "fn": "SoulboundRedeemable.payToReceiveToken",
      "offset": [
        8031,
        8063
      ],
      "op": "SLOAD",
      "path": "39"
    },
    "3471": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3473": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3475": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3477": {
      "op": "SHL"
    },
    "3478": {
      "op": "SUB"
    },
    "3479": {
      "op": "NOT"
    },
    "3480": {
      "fn": "SoulboundRedeemable.payToReceiveToken",
      "offset": [
        8031,
        8063
      ],
      "op": "AND",
      "path": "39"
    },
    "3481": {
      "fn": "SoulboundRedeemable.payToReceiveToken",
      "offset": [
        8031,
        8063
      ],
      "op": "SWAP1",
      "path": "39"
    },
    "3482": {
      "fn": "SoulboundRedeemable.payToReceiveToken",
      "offset": [
        8031,
        8063
      ],
      "op": "SSTORE",
      "path": "39"
    },
    "3483": {
      "offset": [
        2739,
        2745
      ],
      "op": "PUSH1",
      "path": "39",
      "value": "0x13"
    },
    "3485": {
      "offset": [
        2739,
        2753
      ],
      "op": "DUP1",
      "path": "39"
    },
    "3486": {
      "fn": "SoulboundRedeemable.payToReceiveToken",
      "offset": [
        2739,
        2753
      ],
      "op": "SLOAD",
      "path": "39"
    },
    "3487": {
      "fn": "SoulboundRedeemable.payToReceiveToken",
      "offset": [
        2739,
        2753
      ],
      "op": "SWAP1",
      "path": "39"
    },
    "3488": {
      "fn": "SoulboundRedeemable.payToReceiveToken",
      "offset": [
        2739,
        2753
      ],
      "op": "SWAP2",
      "path": "39"
    },
    "3489": {
      "fn": "SoulboundRedeemable.payToReceiveToken",
      "offset": [
        2739,
        2753
      ],
      "op": "AND",
      "path": "39"
    },
    "3490": {
      "fn": "SoulboundRedeemable.payToReceiveToken",
      "offset": [
        2739,
        2753
      ],
      "op": "SWAP1",
      "path": "39"
    },
    "3491": {
      "fn": "SoulboundRedeemable.payToReceiveToken",
      "offset": [
        2739,
        2753
      ],
      "op": "SSTORE",
      "path": "39"
    },
    "3492": {
      "op": "POP"
    },
    "3493": {
      "fn": "SoulboundRedeemable.payToReceiveToken",
      "jump": "o",
      "offset": [
        6103,
        8070
      ],
      "op": "JUMP",
      "path": "39"
    },
    "3494": {
      "fn": "SoulboundRedeemable.redeemMintedToken",
      "offset": [
        10643,
        12123
      ],
      "op": "JUMPDEST",
      "path": "39"
    },
    "3495": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x6"
    },
    "3497": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "3498": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3500": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3502": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3504": {
      "op": "SHL"
    },
    "3505": {
      "op": "SUB"
    },
    "3506": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "AND",
      "path": "0"
    },
    "3507": {
      "fn": "Context._msgSender",
      "offset": [
        719,
        729
      ],
      "op": "CALLER",
      "path": "5"
    },
    "3508": {
      "offset": [
        1248,
        1271
      ],
      "op": "EQ",
      "path": "0"
    },
    "3509": {
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xDD0"
    },
    "3512": {
      "offset": [
        1240,
        1308
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "3513": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "3515": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "3516": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "3520": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "3522": {
      "op": "SHL"
    },
    "3523": {
      "offset": [
        1240,
        1308
      ],
      "op": "DUP2",
      "path": "0"
    },
    "3524": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "3525": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "3527": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "ADD",
      "path": "0"
    },
    "3528": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x6B1"
    },
    "3531": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3532": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2B66"
    },
    "3535": {
      "fn": "Context._msgSender",
      "jump": "i",
      "offset": [
        1240,
        1308
      ],
      "op": "JUMP",
      "path": "0"
    },
    "3536": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "3537": {
      "offset": [
        2688,
        2694
      ],
      "op": "PUSH1",
      "path": "39",
      "value": "0x13"
    },
    "3539": {
      "fn": "Context._msgSender",
      "offset": [
        2688,
        2694
      ],
      "op": "SLOAD",
      "path": "39"
    },
    "3540": {
      "fn": "Context._msgSender",
      "offset": [
        2688,
        2694
      ],
      "op": "PUSH1",
      "path": "39",
      "value": "0xFF"
    },
    "3542": {
      "fn": "Context._msgSender",
      "offset": [
        2688,
        2694
      ],
      "op": "AND",
      "path": "39"
    },
    "3543": {
      "offset": [
        2687,
        2694
      ],
      "op": "ISZERO",
      "path": "39"
    },
    "3544": {
      "offset": [
        2679,
        2695
      ],
      "op": "PUSH2",
      "path": "39",
      "value": "0xDE0"
    },
    "3547": {
      "offset": [
        2679,
        2695
      ],
      "op": "JUMPI",
      "path": "39"
    },
    "3548": {
      "fn": "Context._msgSender",
      "offset": [
        2679,
        2695
      ],
      "op": "PUSH1",
      "path": "39",
      "value": "0x0"
    },
    "3550": {
      "fn": "Context._msgSender",
      "offset": [
        2679,
        2695
      ],
      "op": "DUP1",
      "path": "39"
    },
    "3551": {
      "fn": "Context._msgSender",
      "offset": [
        2679,
        2695
      ],
      "op": "REVERT",
      "path": "39"
    },
    "3552": {
      "fn": "Context._msgSender",
      "offset": [
        2679,
        2695
      ],
      "op": "JUMPDEST",
      "path": "39"
    },
    "3553": {
      "offset": [
        2705,
        2711
      ],
      "op": "PUSH1",
      "path": "39",
      "value": "0x13"
    },
    "3555": {
      "offset": [
        2705,
        2718
      ],
      "op": "DUP1",
      "path": "39"
    },
    "3556": {
      "fn": "Context._msgSender",
      "offset": [
        2705,
        2718
      ],
      "op": "SLOAD",
      "path": "39"
    },
    "3557": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "3559": {
      "op": "NOT"
    },
    "3560": {
      "offset": [
        2705,
        2718
      ],
      "op": "AND",
      "path": "39"
    },
    "3561": {
      "offset": [
        2714,
        2718
      ],
      "op": "PUSH1",
      "path": "39",
      "value": "0x1"
    },
    "3563": {
      "offset": [
        2705,
        2718
      ],
      "op": "OR",
      "path": "39"
    },
    "3564": {
      "fn": "Context._msgSender",
      "offset": [
        2705,
        2718
      ],
      "op": "SWAP1",
      "path": "39"
    },
    "3565": {
      "fn": "Context._msgSender",
      "offset": [
        2705,
        2718
      ],
      "op": "SSTORE",
      "path": "39"
    },
    "3566": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3568": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3570": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3572": {
      "op": "SHL"
    },
    "3573": {
      "op": "SUB"
    },
    "3574": {
      "fn": "SoulboundRedeemable.redeemMintedToken",
      "offset": [
        10876,
        10899
      ],
      "op": "DUP4",
      "path": "39",
      "statement": 36
    },
    "3575": {
      "branch": 145,
      "fn": "SoulboundRedeemable.redeemMintedToken",
      "offset": [
        10876,
        10899
      ],
      "op": "AND",
      "path": "39"
    },
    "3576": {
      "fn": "SoulboundRedeemable.redeemMintedToken",
      "offset": [
        10868,
        10931
      ],
      "op": "PUSH2",
      "path": "39",
      "value": "0xE43"
    },
    "3579": {
      "branch": 145,
      "fn": "SoulboundRedeemable.redeemMintedToken",
      "offset": [
        10868,
        10931
      ],
      "op": "JUMPI",
      "path": "39"
    },
    "3580": {
      "fn": "SoulboundRedeemable.redeemMintedToken",
      "offset": [
        10868,
        10931
      ],
      "op": "PUSH1",
      "path": "39",
      "value": "0x40"
    },
    "3582": {
      "fn": "SoulboundRedeemable.redeemMintedToken",
      "offset": [
        10868,
        10931
      ],
      "op": "MLOAD",
      "path": "39"
    },
    "3583": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "3587": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "3589": {
      "op": "SHL"
    },
    "3590": {
      "fn": "SoulboundRedeemable.redeemMintedToken",
      "offset": [
        10868,
        10931
      ],
      "op": "DUP2",
      "path": "39"
    },
    "3591": {
      "fn": "SoulboundRedeemable.redeemMintedToken",
      "offset": [
        10868,
        10931
      ],
      "op": "MSTORE",
      "path": "39"
    },
    "3592": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3594": {
      "fn": "SoulboundRedeemable.redeemMintedToken",
      "offset": [
        10868,
        10931
      ],
      "op": "PUSH1",
      "path": "39",
      "value": "0x4"
    },
    "3596": {
      "fn": "SoulboundRedeemable.redeemMintedToken",
      "offset": [
        10868,
        10931
      ],
      "op": "DUP3",
      "path": "39"
    },
    "3597": {
      "fn": "SoulboundRedeemable.redeemMintedToken",
      "offset": [
        10868,
        10931
      ],
      "op": "ADD",
      "path": "39"
    },
    "3598": {
      "op": "MSTORE"
    },
    "3599": {
      "op": "PUSH1",
      "value": "0x1B"
    },
    "3601": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "3603": {
      "op": "DUP3"
    },
    "3604": {
      "op": "ADD"
    },
    "3605": {
      "op": "MSTORE"
    },
    "3606": {
      "op": "PUSH32",
      "value": "0x526564656D7074696F6E20746F207A65726F20616464726573732E0000000000"
    },
    "3639": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "3641": {
      "op": "DUP3"
    },
    "3642": {
      "op": "ADD"
    },
    "3643": {
      "op": "MSTORE"
    },
    "3644": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "3646": {
      "op": "ADD"
    },
    "3647": {
      "fn": "SoulboundRedeemable.redeemMintedToken",
      "offset": [
        10868,
        10931
      ],
      "op": "PUSH2",
      "path": "39",
      "value": "0x6B1"
    },
    "3650": {
      "op": "JUMP"
    },
    "3651": {
      "fn": "SoulboundRedeemable.redeemMintedToken",
      "offset": [
        10868,
        10931
      ],
      "op": "JUMPDEST",
      "path": "39"
    },
    "3652": {
      "fn": "SoulboundRedeemable.redeemMintedToken",
      "offset": [
        10995,
        11011
      ],
      "op": "PUSH2",
      "path": "39",
      "statement": 37,
      "value": "0xE4C"
    },
    "3655": {
      "fn": "SoulboundRedeemable.redeemMintedToken",
      "offset": [
        11003,
        11010
      ],
      "op": "DUP3",
      "path": "39"
    },
    "3656": {
      "fn": "SoulboundRedeemable.redeemMintedToken",
      "offset": [
        10995,
        11002
      ],
      "op": "PUSH2",
      "path": "39",
      "value": "0x1F4F"
    },
    "3659": {
      "fn": "SoulboundRedeemable.redeemMintedToken",
      "jump": "i",
      "offset": [
        10995,
        11011
      ],
      "op": "JUMP",
      "path": "39"
    },
    "3660": {
      "branch": 146,
      "fn": "SoulboundRedeemable.redeemMintedToken",
      "offset": [
        10995,
        11011
      ],
      "op": "JUMPDEST",
      "path": "39"
    },
    "3661": {
      "fn": "SoulboundRedeemable.redeemMintedToken",
      "offset": [
        10987,
        11049
      ],
      "op": "PUSH2",
      "path": "39",
      "value": "0xEA2"
    },
    "3664": {
      "branch": 146,
      "fn": "SoulboundRedeemable.redeemMintedToken",
      "offset": [
        10987,
        11049
      ],
      "op": "JUMPI",
      "path": "39"
    },
    "3665": {
      "fn": "SoulboundRedeemable.redeemMintedToken",
      "offset": [
        10987,
        11049
      ],
      "op": "PUSH1",
      "path": "39",
      "value": "0x40"
    },
    "3667": {
      "fn": "SoulboundRedeemable.redeemMintedToken",
      "offset": [
        10987,
        11049
      ],
      "op": "MLOAD",
      "path": "39"
    },
    "3668": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "3672": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "3674": {
      "op": "SHL"
    },
    "3675": {
      "fn": "SoulboundRedeemable.redeemMintedToken",
      "offset": [
        10987,
        11049
      ],
      "op": "DUP2",
      "path": "39"
    },
    "3676": {
      "fn": "SoulboundRedeemable.redeemMintedToken",
      "offset": [
        10987,
        11049
      ],
      "op": "MSTORE",
      "path": "39"
    },
    "3677": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3679": {
      "fn": "SoulboundRedeemable.redeemMintedToken",
      "offset": [
        10987,
        11049
      ],
      "op": "PUSH1",
      "path": "39",
      "value": "0x4"
    },
    "3681": {
      "fn": "SoulboundRedeemable.redeemMintedToken",
      "offset": [
        10987,
        11049
      ],
      "op": "DUP3",
      "path": "39"
    },
    "3682": {
      "fn": "SoulboundRedeemable.redeemMintedToken",
      "offset": [
        10987,
        11049
      ],
      "op": "ADD",
      "path": "39"
    },
    "3683": {
      "op": "MSTORE"
    },
    "3684": {
      "op": "PUSH1",
      "value": "0x21"
    },
    "3686": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "3688": {
      "op": "DUP3"
    },
    "3689": {
      "op": "ADD"
    },
    "3690": {
      "op": "MSTORE"
    },
    "3691": {
      "op": "PUSH32",
      "value": "0x526564656D7074696F6E206F66206E6F6E2D6578697374696E6720746F6B656E"
    },
    "3724": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "3726": {
      "op": "DUP3"
    },
    "3727": {
      "op": "ADD"
    },
    "3728": {
      "op": "MSTORE"
    },
    "3729": {
      "op": "PUSH1",
      "value": "0x17"
    },
    "3731": {
      "op": "PUSH1",
      "value": "0xF9"
    },
    "3733": {
      "op": "SHL"
    },
    "3734": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "3736": {
      "op": "DUP3"
    },
    "3737": {
      "op": "ADD"
    },
    "3738": {
      "op": "MSTORE"
    },
    "3739": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "3741": {
      "op": "ADD"
    },
    "3742": {
      "fn": "SoulboundRedeemable.redeemMintedToken",
      "offset": [
        10987,
        11049
      ],
      "op": "PUSH2",
      "path": "39",
      "value": "0x6B1"
    },
    "3745": {
      "op": "JUMP"
    },
    "3746": {
      "fn": "SoulboundRedeemable.redeemMintedToken",
      "offset": [
        10987,
        11049
      ],
      "op": "JUMPDEST",
      "path": "39"
    },
    "3747": {
      "fn": "SoulboundRedeemable.redeemMintedToken",
      "offset": [
        11126,
        11142
      ],
      "op": "PUSH1",
      "path": "39",
      "statement": 38,
      "value": "0x0"
    },
    "3749": {
      "fn": "SoulboundRedeemable.redeemMintedToken",
      "offset": [
        11126,
        11142
      ],
      "op": "DUP3",
      "path": "39"
    },
    "3750": {
      "fn": "SoulboundRedeemable.redeemMintedToken",
      "offset": [
        11126,
        11142
      ],
      "op": "DUP2",
      "path": "39"
    },
    "3751": {
      "fn": "SoulboundRedeemable.redeemMintedToken",
      "offset": [
        11126,
        11142
      ],
      "op": "MSTORE",
      "path": "39"
    },
    "3752": {
      "fn": "SoulboundRedeemable.redeemMintedToken",
      "offset": [
        11126,
        11133
      ],
      "op": "PUSH1",
      "path": "39",
      "value": "0x10"
    },
    "3754": {
      "fn": "SoulboundRedeemable.redeemMintedToken",
      "offset": [
        11126,
        11142
      ],
      "op": "PUSH1",
      "path": "39",
      "value": "0x20"
    },
    "3756": {
      "fn": "SoulboundRedeemable.redeemMintedToken",
      "offset": [
        11126,
        11142
      ],
      "op": "MSTORE",
      "path": "39"
    },
    "3757": {
      "fn": "SoulboundRedeemable.redeemMintedToken",
      "offset": [
        11126,
        11142
      ],
      "op": "PUSH1",
      "path": "39",
      "value": "0x40"
    },
    "3759": {
      "fn": "SoulboundRedeemable.redeemMintedToken",
      "offset": [
        11126,
        11142
      ],
      "op": "SWAP1",
      "path": "39"
    },
    "3760": {
      "fn": "SoulboundRedeemable.redeemMintedToken",
      "offset": [
        11126,
        11142
      ],
      "op": "KECCAK256",
      "path": "39"
    },
    "3761": {
      "fn": "SoulboundRedeemable.redeemMintedToken",
      "offset": [
        11126,
        11142
      ],
      "op": "SLOAD",
      "path": "39"
    },
    "3762": {
      "fn": "SoulboundRedeemable.redeemMintedToken",
      "offset": [
        11126,
        11142
      ],
      "op": "PUSH1",
      "path": "39",
      "value": "0xFF"
    },
    "3764": {
      "fn": "SoulboundRedeemable.redeemMintedToken",
      "offset": [
        11126,
        11142
      ],
      "op": "AND",
      "path": "39"
    },
    "3765": {
      "branch": 147,
      "fn": "SoulboundRedeemable.redeemMintedToken",
      "offset": [
        11125,
        11142
      ],
      "op": "ISZERO",
      "path": "39"
    },
    "3766": {
      "fn": "SoulboundRedeemable.redeemMintedToken",
      "offset": [
        11117,
        11167
      ],
      "op": "PUSH2",
      "path": "39",
      "value": "0xEF8"
    },
    "3769": {
      "branch": 147,
      "fn": "SoulboundRedeemable.redeemMintedToken",
      "offset": [
        11117,
        11167
      ],
      "op": "JUMPI",
      "path": "39"
    },
    "3770": {
      "fn": "SoulboundRedeemable.redeemMintedToken",
      "offset": [
        11117,
        11167
      ],
      "op": "PUSH1",
      "path": "39",
      "value": "0x40"
    },
    "3772": {
      "fn": "SoulboundRedeemable.redeemMintedToken",
      "offset": [
        11117,
        11167
      ],
      "op": "MLOAD",
      "path": "39"
    },
    "3773": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "3777": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "3779": {
      "op": "SHL"
    },
    "3780": {
      "fn": "SoulboundRedeemable.redeemMintedToken",
      "offset": [
        11117,
        11167
      ],
      "op": "DUP2",
      "path": "39"
    },
    "3781": {
      "fn": "SoulboundRedeemable.redeemMintedToken",
      "offset": [
        11117,
        11167
      ],
      "op": "MSTORE",
      "path": "39"
    },
    "3782": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3784": {
      "fn": "SoulboundRedeemable.redeemMintedToken",
      "offset": [
        11117,
        11167
      ],
      "op": "PUSH1",
      "path": "39",
      "value": "0x4"
    },
    "3786": {
      "fn": "SoulboundRedeemable.redeemMintedToken",
      "offset": [
        11117,
        11167
      ],
      "op": "DUP3",
      "path": "39"
    },
    "3787": {
      "fn": "SoulboundRedeemable.redeemMintedToken",
      "offset": [
        11117,
        11167
      ],
      "op": "ADD",
      "path": "39"
    },
    "3788": {
      "op": "MSTORE"
    },
    "3789": {
      "op": "PUSH1",
      "value": "0x14"
    },
    "3791": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "3793": {
      "op": "DUP3"
    },
    "3794": {
      "op": "ADD"
    },
    "3795": {
      "op": "MSTORE"
    },
    "3796": {
      "op": "PUSH20",
      "value": "0x2A37B5B2B71039BA34B636103832B73234B73397"
    },
    "3817": {
      "op": "PUSH1",
      "value": "0x61"
    },
    "3819": {
      "op": "SHL"
    },
    "3820": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "3822": {
      "op": "DUP3"
    },
    "3823": {
      "op": "ADD"
    },
    "3824": {
      "op": "MSTORE"
    },
    "3825": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "3827": {
      "op": "ADD"
    },
    "3828": {
      "fn": "SoulboundRedeemable.redeemMintedToken",
      "offset": [
        11117,
        11167
      ],
      "op": "PUSH2",
      "path": "39",
      "value": "0x6B1"
    },
    "3831": {
      "op": "JUMP"
    },
    "3832": {
      "fn": "SoulboundRedeemable.redeemMintedToken",
      "offset": [
        11117,
        11167
      ],
      "op": "JUMPDEST",
      "path": "39"
    },
    "3833": {
      "fn": "SoulboundRedeemable.redeemMintedToken",
      "offset": [
        11276,
        11285
      ],
      "op": "DUP3",
      "path": "39",
      "statement": 39
    },
    "3834": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3836": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3838": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3840": {
      "op": "SHL"
    },
    "3841": {
      "op": "SUB"
    },
    "3842": {
      "fn": "SoulboundRedeemable.redeemMintedToken",
      "offset": [
        11256,
        11285
      ],
      "op": "AND",
      "path": "39"
    },
    "3843": {
      "fn": "SoulboundRedeemable.redeemMintedToken",
      "offset": [
        11256,
        11272
      ],
      "op": "PUSH2",
      "path": "39",
      "value": "0xF0B"
    },
    "3846": {
      "fn": "SoulboundRedeemable.redeemMintedToken",
      "offset": [
        11264,
        11271
      ],
      "op": "DUP4",
      "path": "39"
    },
    "3847": {
      "fn": "SoulboundRedeemable.redeemMintedToken",
      "offset": [
        11256,
        11263
      ],
      "op": "PUSH2",
      "path": "39",
      "value": "0x1263"
    },
    "3850": {
      "fn": "SoulboundRedeemable.redeemMintedToken",
      "jump": "i",
      "offset": [
        11256,
        11272
      ],
      "op": "JUMP",
      "path": "39"
    },
    "3851": {
      "fn": "SoulboundRedeemable.redeemMintedToken",
      "offset": [
        11256,
        11272
      ],
      "op": "JUMPDEST",
      "path": "39"
    },
    "3852": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3854": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3856": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3858": {
      "op": "SHL"
    },
    "3859": {
      "op": "SUB"
    },
    "3860": {
      "fn": "SoulboundRedeemable.redeemMintedToken",
      "offset": [
        11256,
        11285
      ],
      "op": "AND",
      "path": "39"
    },
    "3861": {
      "branch": 148,
      "fn": "SoulboundRedeemable.redeemMintedToken",
      "offset": [
        11256,
        11285
      ],
      "op": "EQ",
      "path": "39"
    },
    "3862": {
      "fn": "SoulboundRedeemable.redeemMintedToken",
      "offset": [
        11248,
        11306
      ],
      "op": "PUSH2",
      "path": "39",
      "value": "0xF54"
    },
    "3865": {
      "branch": 148,
      "fn": "SoulboundRedeemable.redeemMintedToken",
      "offset": [
        11248,
        11306
      ],
      "op": "JUMPI",
      "path": "39"
    },
    "3866": {
      "fn": "SoulboundRedeemable.redeemMintedToken",
      "offset": [
        11248,
        11306
      ],
      "op": "PUSH1",
      "path": "39",
      "value": "0x40"
    },
    "3868": {
      "fn": "SoulboundRedeemable.redeemMintedToken",
      "offset": [
        11248,
        11306
      ],
      "op": "MLOAD",
      "path": "39"
    },
    "3869": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "3873": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "3875": {
      "op": "SHL"
    },
    "3876": {
      "fn": "SoulboundRedeemable.redeemMintedToken",
      "offset": [
        11248,
        11306
      ],
      "op": "DUP2",
      "path": "39"
    },
    "3877": {
      "fn": "SoulboundRedeemable.redeemMintedToken",
      "offset": [
        11248,
        11306
      ],
      "op": "MSTORE",
      "path": "39"
    },
    "3878": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3880": {
      "fn": "SoulboundRedeemable.redeemMintedToken",
      "offset": [
        11248,
        11306
      ],
      "op": "PUSH1",
      "path": "39",
      "value": "0x4"
    },
    "3882": {
      "fn": "SoulboundRedeemable.redeemMintedToken",
      "offset": [
        11248,
        11306
      ],
      "op": "DUP3",
      "path": "39"
    },
    "3883": {
      "fn": "SoulboundRedeemable.redeemMintedToken",
      "offset": [
        11248,
        11306
      ],
      "op": "ADD",
      "path": "39"
    },
    "3884": {
      "op": "MSTORE"
    },
    "3885": {
      "op": "PUSH1",
      "value": "0x10"
    },
    "3887": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "3889": {
      "op": "DUP3"
    },
    "3890": {
      "op": "ADD"
    },
    "3891": {
      "op": "MSTORE"
    },
    "3892": {
      "op": "PUSH16",
      "value": "0x2737BA103A37B5B2B71037BBB732B917"
    },
    "3909": {
      "op": "PUSH1",
      "value": "0x81"
    },
    "3911": {
      "op": "SHL"
    },
    "3912": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "3914": {
      "op": "DUP3"
    },
    "3915": {
      "op": "ADD"
    },
    "3916": {
      "op": "MSTORE"
    },
    "3917": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "3919": {
      "op": "ADD"
    },
    "3920": {
      "fn": "SoulboundRedeemable.redeemMintedToken",
      "offset": [
        11248,
        11306
      ],
      "op": "PUSH2",
      "path": "39",
      "value": "0x6B1"
    },
    "3923": {
      "op": "JUMP"
    },
    "3924": {
      "fn": "SoulboundRedeemable.redeemMintedToken",
      "offset": [
        11248,
        11306
      ],
      "op": "JUMPDEST",
      "path": "39"
    },
    "3925": {
      "fn": "IsValidWithDate.isValid",
      "offset": [
        1778,
        1782
      ],
      "op": "PUSH1",
      "path": "36",
      "value": "0x0"
    },
    "3927": {
      "fn": "IsValidWithDate.getExpiryDate",
      "offset": [
        1459,
        1483
      ],
      "op": "DUP3",
      "path": "36"
    },
    "3928": {
      "fn": "IsValidWithDate.getExpiryDate",
      "offset": [
        1459,
        1483
      ],
      "op": "DUP2",
      "path": "36"
    },
    "3929": {
      "fn": "IsValidWithDate.getExpiryDate",
      "offset": [
        1459,
        1483
      ],
      "op": "MSTORE",
      "path": "36"
    },
    "3930": {
      "fn": "IsValidWithDate.getExpiryDate",
      "offset": [
        1459,
        1483
      ],
      "op": "PUSH1",
      "path": "36",
      "value": "0x20"
    },
    "3932": {
      "fn": "IsValidWithDate.getExpiryDate",
      "offset": [
        1459,
        1483
      ],
      "op": "DUP2",
      "path": "36"
    },
    "3933": {
      "fn": "IsValidWithDate.getExpiryDate",
      "offset": [
        1459,
        1483
      ],
      "op": "SWAP1",
      "path": "36"
    },
    "3934": {
      "fn": "IsValidWithDate.getExpiryDate",
      "offset": [
        1459,
        1483
      ],
      "op": "MSTORE",
      "path": "36"
    },
    "3935": {
      "fn": "IsValidWithDate.getExpiryDate",
      "offset": [
        1459,
        1483
      ],
      "op": "PUSH1",
      "path": "36",
      "value": "0x40"
    },
    "3937": {
      "fn": "IsValidWithDate.getExpiryDate",
      "offset": [
        1459,
        1483
      ],
      "op": "SWAP1",
      "path": "36"
    },
    "3938": {
      "fn": "IsValidWithDate.getExpiryDate",
      "offset": [
        1459,
        1483
      ],
      "op": "KECCAK256",
      "path": "36"
    },
    "3939": {
      "fn": "IsValidWithDate.getExpiryDate",
      "offset": [
        1459,
        1483
      ],
      "op": "SLOAD",
      "path": "36"
    },
    "3940": {
      "fn": "IsValidWithDate.isValid",
      "offset": [
        1801,
        1816
      ],
      "op": "TIMESTAMP",
      "path": "36"
    },
    "3941": {
      "fn": "IsValidWithDate.isValid",
      "offset": [
        1801,
        1842
      ],
      "op": "GT",
      "path": "36"
    },
    "3942": {
      "fn": "SoulboundRedeemable.redeemMintedToken",
      "offset": [
        11364,
        11410
      ],
      "op": "PUSH2",
      "path": "39",
      "statement": 40,
      "value": "0xFA4"
    },
    "3945": {
      "fn": "SoulboundRedeemable.redeemMintedToken",
      "offset": [
        11364,
        11410
      ],
      "op": "JUMPI",
      "path": "39"
    },
    "3946": {
      "fn": "SoulboundRedeemable.redeemMintedToken",
      "offset": [
        11364,
        11410
      ],
      "op": "PUSH1",
      "path": "39",
      "value": "0x40"
    },
    "3948": {
      "fn": "SoulboundRedeemable.redeemMintedToken",
      "offset": [
        11364,
        11410
      ],
      "op": "MLOAD",
      "path": "39"
    },
    "3949": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "3953": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "3955": {
      "op": "SHL"
    },
    "3956": {
      "fn": "SoulboundRedeemable.redeemMintedToken",
      "offset": [
        11364,
        11410
      ],
      "op": "DUP2",
      "path": "39"
    },
    "3957": {
      "fn": "SoulboundRedeemable.redeemMintedToken",
      "offset": [
        11364,
        11410
      ],
      "op": "MSTORE",
      "path": "39"
    },
    "3958": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3960": {
      "fn": "SoulboundRedeemable.redeemMintedToken",
      "offset": [
        11364,
        11410
      ],
      "op": "PUSH1",
      "path": "39",
      "value": "0x4"
    },
    "3962": {
      "fn": "SoulboundRedeemable.redeemMintedToken",
      "offset": [
        11364,
        11410
      ],
      "op": "DUP3",
      "path": "39"
    },
    "3963": {
      "fn": "SoulboundRedeemable.redeemMintedToken",
      "offset": [
        11364,
        11410
      ],
      "op": "ADD",
      "path": "39"
    },
    "3964": {
      "op": "MSTORE"
    },
    "3965": {
      "op": "PUSH1",
      "value": "0x10"
    },
    "3967": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "3969": {
      "op": "DUP3"
    },
    "3970": {
      "op": "ADD"
    },
    "3971": {
      "op": "MSTORE"
    },
    "3972": {
      "op": "PUSH16",
      "value": "0x2A37B5B2B7103AB732BC3834B932B217"
    },
    "3989": {
      "op": "PUSH1",
      "value": "0x81"
    },
    "3991": {
      "op": "SHL"
    },
    "3992": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "3994": {
      "op": "DUP3"
    },
    "3995": {
      "op": "ADD"
    },
    "3996": {
      "op": "MSTORE"
    },
    "3997": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "3999": {
      "op": "ADD"
    },
    "4000": {
      "fn": "SoulboundRedeemable.redeemMintedToken",
      "offset": [
        11364,
        11410
      ],
      "op": "PUSH2",
      "path": "39",
      "value": "0x6B1"
    },
    "4003": {
      "op": "JUMP"
    },
    "4004": {
      "fn": "SoulboundRedeemable.redeemMintedToken",
      "offset": [
        11364,
        11410
      ],
      "op": "JUMPDEST",
      "path": "39"
    },
    "4005": {
      "fn": "SoulboundRedeemable.redeemMintedToken",
      "offset": [
        11452,
        11464
      ],
      "op": "PUSH1",
      "path": "39",
      "value": "0x0"
    },
    "4007": {
      "fn": "SoulboundRedeemable.redeemMintedToken",
      "offset": [
        11467,
        11484
      ],
      "op": "PUSH2",
      "path": "39",
      "value": "0xFB1"
    },
    "4010": {
      "fn": "SoulboundRedeemable.redeemMintedToken",
      "offset": [
        11480,
        11483
      ],
      "op": "PUSH1",
      "path": "39",
      "value": "0x12"
    },
    "4012": {
      "fn": "SoulboundRedeemable.redeemMintedToken",
      "offset": [
        11480,
        11483
      ],
      "op": "SLOAD",
      "path": "39"
    },
    "4013": {
      "fn": "SoulboundRedeemable.redeemMintedToken",
      "offset": [
        11467,
        11479
      ],
      "op": "PUSH2",
      "path": "39",
      "value": "0x2154"
    },
    "4016": {
      "fn": "SoulboundRedeemable.redeemMintedToken",
      "jump": "i",
      "offset": [
        11467,
        11484
      ],
      "op": "JUMP",
      "path": "39"
    },
    "4017": {
      "fn": "SoulboundRedeemable.redeemMintedToken",
      "offset": [
        11467,
        11484
      ],
      "op": "JUMPDEST",
      "path": "39"
    },
    "4018": {
      "fn": "SoulboundRedeemable.redeemMintedToken",
      "offset": [
        11452,
        11484
      ],
      "op": "SWAP1",
      "path": "39"
    },
    "4019": {
      "fn": "SoulboundRedeemable.redeemMintedToken",
      "offset": [
        11452,
        11484
      ],
      "op": "POP",
      "path": "39"
    },
    "4020": {
      "fn": "SoulboundRedeemable.redeemMintedToken",
      "offset": [
        11577,
        11581
      ],
      "op": "DUP1",
      "path": "39",
      "statement": 41
    },
    "4021": {
      "fn": "SoulboundRedeemable.redeemMintedToken",
      "offset": [
        11564,
        11573
      ],
      "op": "CALLVALUE",
      "path": "39"
    },
    "4022": {
      "fn": "SoulboundRedeemable.redeemMintedToken",
      "offset": [
        11564,
        11581
      ],
      "op": "LT",
      "path": "39"
    },
    "4023": {
      "branch": 149,
      "fn": "SoulboundRedeemable.redeemMintedToken",
      "offset": [
        11564,
        11581
      ],
      "op": "ISZERO",
      "path": "39"
    },
    "4024": {
      "fn": "SoulboundRedeemable.redeemMintedToken",
      "offset": [
        11556,
        11618
      ],
      "op": "PUSH2",
      "path": "39",
      "value": "0x1003"
    },
    "4027": {
      "branch": 149,
      "fn": "SoulboundRedeemable.redeemMintedToken",
      "offset": [
        11556,
        11618
      ],
      "op": "JUMPI",
      "path": "39"
    },
    "4028": {
      "fn": "SoulboundRedeemable.redeemMintedToken",
      "offset": [
        11556,
        11618
      ],
      "op": "PUSH1",
      "path": "39",
      "value": "0x40"
    },
    "4030": {
      "fn": "SoulboundRedeemable.redeemMintedToken",
      "offset": [
        11556,
        11618
      ],
      "op": "MLOAD",
      "path": "39"
    },
    "4031": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "4035": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "4037": {
      "op": "SHL"
    },
    "4038": {
      "fn": "SoulboundRedeemable.redeemMintedToken",
      "offset": [
        11556,
        11618
      ],
      "op": "DUP2",
      "path": "39"
    },
    "4039": {
      "fn": "SoulboundRedeemable.redeemMintedToken",
      "offset": [
        11556,
        11618
      ],
      "op": "MSTORE",
      "path": "39"
    },
    "4040": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4042": {
      "fn": "SoulboundRedeemable.redeemMintedToken",
      "offset": [
        11556,
        11618
      ],
      "op": "PUSH1",
      "path": "39",
      "value": "0x4"
    },
    "4044": {
      "fn": "SoulboundRedeemable.redeemMintedToken",
      "offset": [
        11556,
        11618
      ],
      "op": "DUP3",
      "path": "39"
    },
    "4045": {
      "fn": "SoulboundRedeemable.redeemMintedToken",
      "offset": [
        11556,
        11618
      ],
      "op": "ADD",
      "path": "39"
    },
    "4046": {
      "op": "DUP2"
    },
    "4047": {
      "op": "SWAP1"
    },
    "4048": {
      "op": "MSTORE"
    },
    "4049": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "4051": {
      "op": "DUP3"
    },
    "4052": {
      "op": "ADD"
    },
    "4053": {
      "op": "MSTORE"
    },
    "4054": {
      "op": "PUSH32",
      "value": "0x5072696365206C6F776572207468616E20726564656D7074696F6E207461782E"
    },
    "4087": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "4089": {
      "op": "DUP3"
    },
    "4090": {
      "op": "ADD"
    },
    "4091": {
      "op": "MSTORE"
    },
    "4092": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "4094": {
      "op": "ADD"
    },
    "4095": {
      "fn": "SoulboundRedeemable.redeemMintedToken",
      "offset": [
        11556,
        11618
      ],
      "op": "PUSH2",
      "path": "39",
      "value": "0x6B1"
    },
    "4098": {
      "op": "JUMP"
    },
    "4099": {
      "fn": "SoulboundRedeemable.redeemMintedToken",
      "offset": [
        11556,
        11618
      ],
      "op": "JUMPDEST",
      "path": "39"
    },
    "4100": {
      "fn": "SoulboundRedeemable.redeemMintedToken",
      "offset": [
        11663,
        11678
      ],
      "op": "PUSH1",
      "path": "39",
      "value": "0x0"
    },
    "4102": {
      "fn": "SoulboundRedeemable.redeemMintedToken",
      "offset": [
        11731,
        11740
      ],
      "op": "DUP2",
      "path": "39"
    },
    "4103": {
      "branch": 150,
      "fn": "SoulboundRedeemable.redeemMintedToken",
      "offset": [
        11731,
        11740
      ],
      "op": "ISZERO",
      "path": "39"
    },
    "4104": {
      "fn": "SoulboundRedeemable.redeemMintedToken",
      "offset": [
        11727,
        11932
      ],
      "op": "PUSH2",
      "path": "39",
      "value": "0x1050"
    },
    "4107": {
      "branch": 150,
      "fn": "SoulboundRedeemable.redeemMintedToken",
      "offset": [
        11727,
        11932
      ],
      "op": "JUMPI",
      "path": "39"
    },
    "4108": {
      "fn": "SoulboundRedeemable.redeemMintedToken",
      "offset": [
        11817,
        11833
      ],
      "op": "PUSH2",
      "path": "39",
      "statement": 42,
      "value": "0x1015"
    },
    "4111": {
      "fn": "SoulboundRedeemable.redeemMintedToken",
      "offset": [
        11829,
        11833
      ],
      "op": "DUP3",
      "path": "39"
    },
    "4112": {
      "fn": "SoulboundRedeemable.redeemMintedToken",
      "offset": [
        11817,
        11826
      ],
      "op": "CALLVALUE",
      "path": "39"
    },
    "4113": {
      "fn": "SoulboundRedeemable.redeemMintedToken",
      "offset": [
        11817,
        11833
      ],
      "op": "PUSH2",
      "path": "39",
      "value": "0x2C8E"
    },
    "4116": {
      "fn": "SoulboundRedeemable.redeemMintedToken",
      "jump": "i",
      "offset": [
        11817,
        11833
      ],
      "op": "JUMP",
      "path": "39"
    },
    "4117": {
      "fn": "SoulboundRedeemable.redeemMintedToken",
      "offset": [
        11817,
        11833
      ],
      "op": "JUMPDEST",
      "path": "39"
    },
    "4118": {
      "fn": "SoulboundRedeemable.redeemMintedToken",
      "offset": [
        11885,
        11921
      ],
      "op": "PUSH1",
      "path": "39",
      "statement": 43,
      "value": "0x40"
    },
    "4120": {
      "fn": "SoulboundRedeemable.redeemMintedToken",
      "offset": [
        11885,
        11921
      ],
      "op": "MLOAD",
      "path": "39"
    },
    "4121": {
      "fn": "SoulboundRedeemable.redeemMintedToken",
      "offset": [
        11807,
        11833
      ],
      "op": "SWAP1",
      "path": "39"
    },
    "4122": {
      "fn": "SoulboundRedeemable.redeemMintedToken",
      "offset": [
        11807,
        11833
      ],
      "op": "SWAP2",
      "path": "39"
    },
    "4123": {
      "op": "POP"
    },
    "4124": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4126": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4128": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4130": {
      "op": "SHL"
    },
    "4131": {
      "op": "SUB"
    },
    "4132": {
      "fn": "SoulboundRedeemable.redeemMintedToken",
      "offset": [
        11885,
        11912
      ],
      "op": "DUP7",
      "path": "39"
    },
    "4133": {
      "fn": "SoulboundRedeemable.redeemMintedToken",
      "offset": [
        11885,
        11912
      ],
      "op": "AND",
      "path": "39"
    },
    "4134": {
      "fn": "SoulboundRedeemable.redeemMintedToken",
      "offset": [
        11885,
        11912
      ],
      "op": "SWAP1",
      "path": "39"
    },
    "4135": {
      "fn": "SoulboundRedeemable.redeemMintedToken",
      "offset": [
        11885,
        11921
      ],
      "op": "DUP3",
      "path": "39"
    },
    "4136": {
      "fn": "SoulboundRedeemable.redeemMintedToken",
      "offset": [
        11885,
        11921
      ],
      "op": "ISZERO",
      "path": "39"
    },
    "4137": {
      "fn": "SoulboundRedeemable.redeemMintedToken",
      "offset": [
        11885,
        11921
      ],
      "op": "PUSH2",
      "path": "39",
      "value": "0x8FC"
    },
    "4140": {
      "fn": "SoulboundRedeemable.redeemMintedToken",
      "offset": [
        11885,
        11921
      ],
      "op": "MUL",
      "path": "39"
    },
    "4141": {
      "fn": "SoulboundRedeemable.redeemMintedToken",
      "offset": [
        11885,
        11921
      ],
      "op": "SWAP1",
      "path": "39"
    },
    "4142": {
      "fn": "SoulboundRedeemable.redeemMintedToken",
      "offset": [
        11807,
        11833
      ],
      "op": "DUP4",
      "path": "39"
    },
    "4143": {
      "fn": "SoulboundRedeemable.redeemMintedToken",
      "offset": [
        11807,
        11833
      ],
      "op": "SWAP1",
      "path": "39"
    },
    "4144": {
      "fn": "SoulboundRedeemable.redeemMintedToken",
      "offset": [
        11885,
        11921
      ],
      "op": "PUSH1",
      "path": "39",
      "value": "0x0"
    },
    "4146": {
      "fn": "SoulboundRedeemable.redeemMintedToken",
      "offset": [
        11885,
        11921
      ],
      "op": "DUP2",
      "path": "39"
    },
    "4147": {
      "fn": "SoulboundRedeemable.redeemMintedToken",
      "offset": [
        11885,
        11921
      ],
      "op": "DUP2",
      "path": "39"
    },
    "4148": {
      "fn": "SoulboundRedeemable.redeemMintedToken",
      "offset": [
        11885,
        11921
      ],
      "op": "DUP2",
      "path": "39"
    },
    "4149": {
      "fn": "SoulboundRedeemable.redeemMintedToken",
      "offset": [
        11807,
        11833
      ],
      "op": "DUP6",
      "path": "39"
    },
    "4150": {
      "fn": "SoulboundRedeemable.redeemMintedToken",
      "offset": [
        11885,
        11912
      ],
      "op": "DUP9",
      "path": "39"
    },
    "4151": {
      "fn": "SoulboundRedeemable.redeemMintedToken",
      "offset": [
        11885,
        11921
      ],
      "op": "DUP9",
      "path": "39"
    },
    "4152": {
      "fn": "SoulboundRedeemable.redeemMintedToken",
      "offset": [
        11885,
        11921
      ],
      "op": "CALL",
      "path": "39"
    },
    "4153": {
      "fn": "SoulboundRedeemable.redeemMintedToken",
      "offset": [
        11885,
        11921
      ],
      "op": "SWAP4",
      "path": "39"
    },
    "4154": {
      "fn": "SoulboundRedeemable.redeemMintedToken",
      "offset": [
        11885,
        11921
      ],
      "op": "POP",
      "path": "39"
    },
    "4155": {
      "fn": "SoulboundRedeemable.redeemMintedToken",
      "offset": [
        11885,
        11921
      ],
      "op": "POP",
      "path": "39"
    },
    "4156": {
      "fn": "SoulboundRedeemable.redeemMintedToken",
      "offset": [
        11885,
        11921
      ],
      "op": "POP",
      "path": "39"
    },
    "4157": {
      "fn": "SoulboundRedeemable.redeemMintedToken",
      "offset": [
        11885,
        11921
      ],
      "op": "POP",
      "path": "39"
    },
    "4158": {
      "fn": "SoulboundRedeemable.redeemMintedToken",
      "offset": [
        11885,
        11921
      ],
      "op": "ISZERO",
      "path": "39"
    },
    "4159": {
      "fn": "SoulboundRedeemable.redeemMintedToken",
      "offset": [
        11885,
        11921
      ],
      "op": "DUP1",
      "path": "39"
    },
    "4160": {
      "fn": "SoulboundRedeemable.redeemMintedToken",
      "offset": [
        11885,
        11921
      ],
      "op": "ISZERO",
      "path": "39"
    },
    "4161": {
      "fn": "SoulboundRedeemable.redeemMintedToken",
      "offset": [
        11885,
        11921
      ],
      "op": "PUSH2",
      "path": "39",
      "value": "0x104E"
    },
    "4164": {
      "fn": "SoulboundRedeemable.redeemMintedToken",
      "offset": [
        11885,
        11921
      ],
      "op": "JUMPI",
      "path": "39"
    },
    "4165": {
      "fn": "SoulboundRedeemable.redeemMintedToken",
      "offset": [
        11885,
        11921
      ],
      "op": "RETURNDATASIZE",
      "path": "39"
    },
    "4166": {
      "fn": "SoulboundRedeemable.redeemMintedToken",
      "offset": [
        11885,
        11921
      ],
      "op": "PUSH1",
      "path": "39",
      "value": "0x0"
    },
    "4168": {
      "fn": "SoulboundRedeemable.redeemMintedToken",
      "offset": [
        11885,
        11921
      ],
      "op": "DUP1",
      "path": "39"
    },
    "4169": {
      "fn": "SoulboundRedeemable.redeemMintedToken",
      "offset": [
        11885,
        11921
      ],
      "op": "RETURNDATACOPY",
      "path": "39"
    },
    "4170": {
      "fn": "SoulboundRedeemable.redeemMintedToken",
      "offset": [
        11885,
        11921
      ],
      "op": "RETURNDATASIZE",
      "path": "39"
    },
    "4171": {
      "fn": "SoulboundRedeemable.redeemMintedToken",
      "offset": [
        11885,
        11921
      ],
      "op": "PUSH1",
      "path": "39",
      "value": "0x0"
    },
    "4173": {
      "fn": "SoulboundRedeemable.redeemMintedToken",
      "offset": [
        11885,
        11921
      ],
      "op": "REVERT",
      "path": "39"
    },
    "4174": {
      "fn": "SoulboundRedeemable.redeemMintedToken",
      "offset": [
        11885,
        11921
      ],
      "op": "JUMPDEST",
      "path": "39"
    },
    "4175": {
      "fn": "SoulboundRedeemable.redeemMintedToken",
      "offset": [
        11885,
        11921
      ],
      "op": "POP",
      "path": "39"
    },
    "4176": {
      "fn": "SoulboundRedeemable.redeemMintedToken",
      "offset": [
        11727,
        11932
      ],
      "op": "JUMPDEST",
      "path": "39"
    },
    "4177": {
      "fn": "SoulboundRedeemable.redeemMintedToken",
      "offset": [
        11985,
        12024
      ],
      "op": "PUSH2",
      "path": "39",
      "statement": 44,
      "value": "0x105A"
    },
    "4180": {
      "fn": "SoulboundRedeemable.redeemMintedToken",
      "offset": [
        11998,
        12005
      ],
      "op": "DUP5",
      "path": "39"
    },
    "4181": {
      "fn": "SoulboundRedeemable.redeemMintedToken",
      "offset": [
        12007,
        12023
      ],
      "op": "DUP5",
      "path": "39"
    },
    "4182": {
      "fn": "SoulboundRedeemable.redeemMintedToken",
      "offset": [
        11985,
        11997
      ],
      "op": "PUSH2",
      "path": "39",
      "value": "0x17DD"
    },
    "4185": {
      "fn": "SoulboundRedeemable.redeemMintedToken",
      "jump": "i",
      "offset": [
        11985,
        12024
      ],
      "op": "JUMP",
      "path": "39"
    },
    "4186": {
      "fn": "SoulboundRedeemable.redeemMintedToken",
      "offset": [
        11985,
        12024
      ],
      "op": "JUMPDEST",
      "path": "39"
    },
    "4187": {
      "fn": "SoulboundRedeemable.redeemMintedToken",
      "offset": [
        12081,
        12116
      ],
      "op": "PUSH1",
      "path": "39",
      "statement": 45,
      "value": "0x40"
    },
    "4189": {
      "fn": "SoulboundRedeemable.redeemMintedToken",
      "offset": [
        12081,
        12116
      ],
      "op": "MLOAD",
      "path": "39"
    },
    "4190": {
      "fn": "SoulboundRedeemable.redeemMintedToken",
      "offset": [
        12099,
        12115
      ],
      "op": "DUP4",
      "path": "39"
    },
    "4191": {
      "fn": "SoulboundRedeemable.redeemMintedToken",
      "offset": [
        12099,
        12115
      ],
      "op": "SWAP1",
      "path": "39"
    },
    "4192": {
      "fn": "SoulboundRedeemable.redeemMintedToken",
      "offset": [
        12090,
        12097
      ],
      "op": "DUP6",
      "path": "39"
    },
    "4193": {
      "fn": "SoulboundRedeemable.redeemMintedToken",
      "offset": [
        12090,
        12097
      ],
      "op": "SWAP1",
      "path": "39"
    },
    "4194": {
      "fn": "SoulboundRedeemable.redeemMintedToken",
      "offset": [
        12081,
        12116
      ],
      "op": "PUSH32",
      "path": "39",
      "value": "0x6F73B7B8D37DF32EA60A45EADC8FC3D2D716D705EE099BD506817482CE847316"
    },
    "4227": {
      "fn": "SoulboundRedeemable.redeemMintedToken",
      "offset": [
        12081,
        12116
      ],
      "op": "SWAP1",
      "path": "39"
    },
    "4228": {
      "fn": "SoulboundRedeemable.redeemMintedToken",
      "offset": [
        12081,
        12116
      ],
      "op": "PUSH1",
      "path": "39",
      "value": "0x0"
    },
    "4230": {
      "fn": "SoulboundRedeemable.redeemMintedToken",
      "offset": [
        12081,
        12116
      ],
      "op": "SWAP1",
      "path": "39"
    },
    "4231": {
      "fn": "SoulboundRedeemable.redeemMintedToken",
      "offset": [
        12081,
        12116
      ],
      "op": "LOG3",
      "path": "39"
    },
    "4232": {
      "op": "POP"
    },
    "4233": {
      "op": "POP"
    },
    "4234": {
      "offset": [
        2739,
        2745
      ],
      "op": "PUSH1",
      "path": "39",
      "value": "0x13"
    },
    "4236": {
      "offset": [
        2739,
        2753
      ],
      "op": "DUP1",
      "path": "39"
    },
    "4237": {
      "fn": "SoulboundRedeemable.redeemMintedToken",
      "offset": [
        2739,
        2753
      ],
      "op": "SLOAD",
      "path": "39"
    },
    "4238": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "4240": {
      "op": "NOT"
    },
    "4241": {
      "offset": [
        2739,
        2753
      ],
      "op": "AND",
      "path": "39"
    },
    "4242": {
      "fn": "SoulboundRedeemable.redeemMintedToken",
      "offset": [
        2739,
        2753
      ],
      "op": "SWAP1",
      "path": "39"
    },
    "4243": {
      "fn": "SoulboundRedeemable.redeemMintedToken",
      "offset": [
        2739,
        2753
      ],
      "op": "SSTORE",
      "path": "39"
    },
    "4244": {
      "op": "POP"
    },
    "4245": {
      "op": "POP"
    },
    "4246": {
      "op": "POP"
    },
    "4247": {
      "fn": "SoulboundRedeemable.redeemMintedToken",
      "jump": "o",
      "offset": [
        10643,
        12123
      ],
      "op": "JUMP",
      "path": "39"
    },
    "4248": {
      "fn": "ERC4973.burn",
      "offset": [
        5243,
        5408
      ],
      "op": "JUMPDEST",
      "path": "41"
    },
    "4249": {
      "fn": "ERC4973.burn",
      "offset": [
        5330,
        5346
      ],
      "op": "PUSH2",
      "path": "41",
      "statement": 46,
      "value": "0x10A1"
    },
    "4252": {
      "fn": "ERC4973.burn",
      "offset": [
        5338,
        5345
      ],
      "op": "DUP2",
      "path": "41"
    },
    "4253": {
      "fn": "ERC4973.burn",
      "offset": [
        5330,
        5337
      ],
      "op": "PUSH2",
      "path": "41",
      "value": "0x1263"
    },
    "4256": {
      "fn": "ERC4973.burn",
      "jump": "i",
      "offset": [
        5330,
        5346
      ],
      "op": "JUMP",
      "path": "41"
    },
    "4257": {
      "fn": "ERC4973.burn",
      "offset": [
        5330,
        5346
      ],
      "op": "JUMPDEST",
      "path": "41"
    },
    "4258": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4260": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4262": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4264": {
      "op": "SHL"
    },
    "4265": {
      "op": "SUB"
    },
    "4266": {
      "fn": "ERC4973.burn",
      "offset": [
        5316,
        5346
      ],
      "op": "AND",
      "path": "41"
    },
    "4267": {
      "fn": "ERC4973.burn",
      "offset": [
        5316,
        5326
      ],
      "op": "CALLER",
      "path": "41"
    },
    "4268": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4270": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4272": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4274": {
      "op": "SHL"
    },
    "4275": {
      "op": "SUB"
    },
    "4276": {
      "fn": "ERC4973.burn",
      "offset": [
        5316,
        5346
      ],
      "op": "AND",
      "path": "41"
    },
    "4277": {
      "branch": 166,
      "fn": "ERC4973.burn",
      "offset": [
        5316,
        5346
      ],
      "op": "EQ",
      "path": "41"
    },
    "4278": {
      "fn": "ERC4973.burn",
      "offset": [
        5308,
        5377
      ],
      "op": "PUSH2",
      "path": "41",
      "value": "0x1101"
    },
    "4281": {
      "branch": 166,
      "fn": "ERC4973.burn",
      "offset": [
        5308,
        5377
      ],
      "op": "JUMPI",
      "path": "41"
    },
    "4282": {
      "fn": "ERC4973.burn",
      "offset": [
        5308,
        5377
      ],
      "op": "PUSH1",
      "path": "41",
      "value": "0x40"
    },
    "4284": {
      "fn": "ERC4973.burn",
      "offset": [
        5308,
        5377
      ],
      "op": "MLOAD",
      "path": "41"
    },
    "4285": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "4289": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "4291": {
      "op": "SHL"
    },
    "4292": {
      "fn": "ERC4973.burn",
      "offset": [
        5308,
        5377
      ],
      "op": "DUP2",
      "path": "41"
    },
    "4293": {
      "fn": "ERC4973.burn",
      "offset": [
        5308,
        5377
      ],
      "op": "MSTORE",
      "path": "41"
    },
    "4294": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4296": {
      "fn": "ERC4973.burn",
      "offset": [
        5308,
        5377
      ],
      "op": "PUSH1",
      "path": "41",
      "value": "0x4"
    },
    "4298": {
      "fn": "ERC4973.burn",
      "offset": [
        5308,
        5377
      ],
      "op": "DUP3",
      "path": "41"
    },
    "4299": {
      "fn": "ERC4973.burn",
      "offset": [
        5308,
        5377
      ],
      "op": "ADD",
      "path": "41"
    },
    "4300": {
      "op": "MSTORE"
    },
    "4301": {
      "op": "PUSH1",
      "value": "0x1A"
    },
    "4303": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "4305": {
      "op": "DUP3"
    },
    "4306": {
      "op": "ADD"
    },
    "4307": {
      "op": "MSTORE"
    },
    "4308": {
      "op": "PUSH32",
      "value": "0x6275726E3A2073656E646572206D757374206265206F776E6572000000000000"
    },
    "4341": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "4343": {
      "op": "DUP3"
    },
    "4344": {
      "op": "ADD"
    },
    "4345": {
      "op": "MSTORE"
    },
    "4346": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "4348": {
      "op": "ADD"
    },
    "4349": {
      "fn": "ERC4973.burn",
      "offset": [
        5308,
        5377
      ],
      "op": "PUSH2",
      "path": "41",
      "value": "0x6B1"
    },
    "4352": {
      "op": "JUMP"
    },
    "4353": {
      "fn": "ERC4973.burn",
      "offset": [
        5308,
        5377
      ],
      "op": "JUMPDEST",
      "path": "41"
    },
    "4354": {
      "fn": "ERC4973.burn",
      "offset": [
        5387,
        5401
      ],
      "op": "PUSH2",
      "path": "41",
      "statement": 47,
      "value": "0x110A"
    },
    "4357": {
      "fn": "ERC4973.burn",
      "offset": [
        5393,
        5400
      ],
      "op": "DUP2",
      "path": "41"
    },
    "4358": {
      "fn": "ERC4973.burn",
      "offset": [
        5387,
        5392
      ],
      "op": "PUSH2",
      "path": "41",
      "value": "0x2190"
    },
    "4361": {
      "fn": "ERC4973.burn",
      "jump": "i",
      "offset": [
        5387,
        5401
      ],
      "op": "JUMP",
      "path": "41"
    },
    "4362": {
      "fn": "ERC4973.burn",
      "offset": [
        5387,
        5401
      ],
      "op": "JUMPDEST",
      "path": "41"
    },
    "4363": {
      "fn": "ERC4973.burn",
      "offset": [
        5243,
        5408
      ],
      "op": "POP",
      "path": "41"
    },
    "4364": {
      "fn": "ERC4973.burn",
      "jump": "o",
      "offset": [
        5243,
        5408
      ],
      "op": "JUMP",
      "path": "41"
    },
    "4365": {
      "fn": "SoulboundRedeemable.withdraw",
      "offset": [
        14559,
        15200
      ],
      "op": "JUMPDEST",
      "path": "39"
    },
    "4366": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x6"
    },
    "4368": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "4369": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4371": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4373": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4375": {
      "op": "SHL"
    },
    "4376": {
      "op": "SUB"
    },
    "4377": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "AND",
      "path": "0"
    },
    "4378": {
      "fn": "Context._msgSender",
      "offset": [
        719,
        729
      ],
      "op": "CALLER",
      "path": "5"
    },
    "4379": {
      "offset": [
        1248,
        1271
      ],
      "op": "EQ",
      "path": "0"
    },
    "4380": {
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1137"
    },
    "4383": {
      "offset": [
        1240,
        1308
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "4384": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "4386": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "4387": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "4391": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "4393": {
      "op": "SHL"
    },
    "4394": {
      "offset": [
        1240,
        1308
      ],
      "op": "DUP2",
      "path": "0"
    },
    "4395": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "4396": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "4398": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "ADD",
      "path": "0"
    },
    "4399": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x6B1"
    },
    "4402": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "4403": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2B66"
    },
    "4406": {
      "fn": "Context._msgSender",
      "jump": "i",
      "offset": [
        1240,
        1308
      ],
      "op": "JUMP",
      "path": "0"
    },
    "4407": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "4408": {
      "fn": "SoulboundRedeemable.withdraw",
      "offset": [
        14654,
        14661
      ],
      "op": "DUP1",
      "path": "39"
    },
    "4409": {
      "offset": [
        1704,
        1723
      ],
      "op": "PUSH2",
      "path": "38",
      "value": "0x114A"
    },
    "4412": {
      "fn": "Allowlist.getAllowlistOwner",
      "offset": [
        2247,
        2261
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x9"
    },
    "4414": {
      "fn": "Allowlist.getAllowlistOwner",
      "offset": [
        2247,
        2261
      ],
      "op": "SLOAD",
      "path": "14"
    },
    "4415": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4417": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4419": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4421": {
      "op": "SHL"
    },
    "4422": {
      "op": "SUB"
    },
    "4423": {
      "fn": "Allowlist.getAllowlistOwner",
      "offset": [
        2247,
        2261
      ],
      "op": "AND",
      "path": "14"
    },
    "4424": {
      "fn": "Allowlist.getAllowlistOwner",
      "offset": [
        2247,
        2261
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "4425": {
      "fn": "Allowlist.getAllowlistOwner",
      "offset": [
        2171,
        2268
      ],
      "op": "JUMP",
      "path": "14"
    },
    "4426": {
      "offset": [
        1704,
        1723
      ],
      "op": "JUMPDEST",
      "path": "38"
    },
    "4427": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4429": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4431": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4433": {
      "op": "SHL"
    },
    "4434": {
      "op": "SUB"
    },
    "4435": {
      "offset": [
        1693,
        1723
      ],
      "op": "AND",
      "path": "38"
    },
    "4436": {
      "offset": [
        1693,
        1700
      ],
      "op": "DUP2",
      "path": "38"
    },
    "4437": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4439": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4441": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4443": {
      "op": "SHL"
    },
    "4444": {
      "op": "SUB"
    },
    "4445": {
      "offset": [
        1693,
        1723
      ],
      "op": "AND",
      "path": "38"
    },
    "4446": {
      "fn": "Allowlist.getAllowlistOwner",
      "offset": [
        1693,
        1723
      ],
      "op": "EQ",
      "path": "38"
    },
    "4447": {
      "offset": [
        1685,
        1748
      ],
      "op": "PUSH2",
      "path": "38",
      "value": "0x117A"
    },
    "4450": {
      "offset": [
        1685,
        1748
      ],
      "op": "JUMPI",
      "path": "38"
    },
    "4451": {
      "fn": "Allowlist.getAllowlistOwner",
      "offset": [
        1685,
        1748
      ],
      "op": "PUSH1",
      "path": "38",
      "value": "0x40"
    },
    "4453": {
      "fn": "Allowlist.getAllowlistOwner",
      "offset": [
        1685,
        1748
      ],
      "op": "MLOAD",
      "path": "38"
    },
    "4454": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "4458": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "4460": {
      "op": "SHL"
    },
    "4461": {
      "offset": [
        1685,
        1748
      ],
      "op": "DUP2",
      "path": "38"
    },
    "4462": {
      "fn": "Allowlist.getAllowlistOwner",
      "offset": [
        1685,
        1748
      ],
      "op": "MSTORE",
      "path": "38"
    },
    "4463": {
      "fn": "Allowlist.getAllowlistOwner",
      "offset": [
        1685,
        1748
      ],
      "op": "PUSH1",
      "path": "38",
      "value": "0x4"
    },
    "4465": {
      "fn": "Allowlist.getAllowlistOwner",
      "offset": [
        1685,
        1748
      ],
      "op": "ADD",
      "path": "38"
    },
    "4466": {
      "fn": "Allowlist.getAllowlistOwner",
      "offset": [
        1685,
        1748
      ],
      "op": "PUSH2",
      "path": "38",
      "value": "0x6B1"
    },
    "4469": {
      "fn": "Allowlist.getAllowlistOwner",
      "offset": [
        1685,
        1748
      ],
      "op": "SWAP1",
      "path": "38"
    },
    "4470": {
      "fn": "Allowlist.getAllowlistOwner",
      "offset": [
        1685,
        1748
      ],
      "op": "PUSH2",
      "path": "38",
      "value": "0x2B9B"
    },
    "4473": {
      "fn": "Allowlist.getAllowlistOwner",
      "jump": "i",
      "offset": [
        1685,
        1748
      ],
      "op": "JUMP",
      "path": "38"
    },
    "4474": {
      "fn": "Allowlist.getAllowlistOwner",
      "offset": [
        1685,
        1748
      ],
      "op": "JUMPDEST",
      "path": "38"
    },
    "4475": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4477": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4479": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4481": {
      "op": "SHL"
    },
    "4482": {
      "op": "SUB"
    },
    "4483": {
      "fn": "SoulboundRedeemable.withdraw",
      "offset": [
        14757,
        14778
      ],
      "op": "DUP3",
      "path": "39",
      "statement": 48
    },
    "4484": {
      "branch": 151,
      "fn": "SoulboundRedeemable.withdraw",
      "offset": [
        14757,
        14778
      ],
      "op": "AND",
      "path": "39"
    },
    "4485": {
      "fn": "SoulboundRedeemable.withdraw",
      "offset": [
        14749,
        14807
      ],
      "op": "PUSH2",
      "path": "39",
      "value": "0x11D0"
    },
    "4488": {
      "branch": 151,
      "fn": "SoulboundRedeemable.withdraw",
      "offset": [
        14749,
        14807
      ],
      "op": "JUMPI",
      "path": "39"
    },
    "4489": {
      "fn": "SoulboundRedeemable.withdraw",
      "offset": [
        14749,
        14807
      ],
      "op": "PUSH1",
      "path": "39",
      "value": "0x40"
    },
    "4491": {
      "fn": "SoulboundRedeemable.withdraw",
      "offset": [
        14749,
        14807
      ],
      "op": "MLOAD",
      "path": "39"
    },
    "4492": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "4496": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "4498": {
      "op": "SHL"
    },
    "4499": {
      "fn": "SoulboundRedeemable.withdraw",
      "offset": [
        14749,
        14807
      ],
      "op": "DUP2",
      "path": "39"
    },
    "4500": {
      "fn": "SoulboundRedeemable.withdraw",
      "offset": [
        14749,
        14807
      ],
      "op": "MSTORE",
      "path": "39"
    },
    "4501": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4503": {
      "fn": "SoulboundRedeemable.withdraw",
      "offset": [
        14749,
        14807
      ],
      "op": "PUSH1",
      "path": "39",
      "value": "0x4"
    },
    "4505": {
      "fn": "SoulboundRedeemable.withdraw",
      "offset": [
        14749,
        14807
      ],
      "op": "DUP3",
      "path": "39"
    },
    "4506": {
      "fn": "SoulboundRedeemable.withdraw",
      "offset": [
        14749,
        14807
      ],
      "op": "ADD",
      "path": "39"
    },
    "4507": {
      "op": "MSTORE"
    },
    "4508": {
      "op": "PUSH1",
      "value": "0x18"
    },
    "4510": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "4512": {
      "op": "DUP3"
    },
    "4513": {
      "op": "ADD"
    },
    "4514": {
      "op": "MSTORE"
    },
    "4515": {
      "op": "PUSH32",
      "value": "0x53656E64696E6720746F207A65726F20616464726573732E0000000000000000"
    },
    "4548": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "4550": {
      "op": "DUP3"
    },
    "4551": {
      "op": "ADD"
    },
    "4552": {
      "op": "MSTORE"
    },
    "4553": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "4555": {
      "op": "ADD"
    },
    "4556": {
      "fn": "SoulboundRedeemable.withdraw",
      "offset": [
        14749,
        14807
      ],
      "op": "PUSH2",
      "path": "39",
      "value": "0x6B1"
    },
    "4559": {
      "op": "JUMP"
    },
    "4560": {
      "fn": "SoulboundRedeemable.withdraw",
      "offset": [
        14749,
        14807
      ],
      "op": "JUMPDEST",
      "path": "39"
    },
    "4561": {
      "fn": "SoulboundRedeemable.withdraw",
      "offset": [
        14947,
        14959
      ],
      "op": "PUSH1",
      "path": "39",
      "statement": 49,
      "value": "0xD"
    },
    "4563": {
      "fn": "SoulboundRedeemable.withdraw",
      "offset": [
        14947,
        14959
      ],
      "op": "SLOAD",
      "path": "39"
    },
    "4564": {
      "fn": "SoulboundRedeemable.withdraw",
      "offset": [
        14922,
        14943
      ],
      "op": "SELFBALANCE",
      "path": "39"
    },
    "4565": {
      "fn": "SoulboundRedeemable.withdraw",
      "offset": [
        14922,
        14959
      ],
      "op": "LT",
      "path": "39"
    },
    "4566": {
      "branch": 152,
      "fn": "SoulboundRedeemable.withdraw",
      "offset": [
        14922,
        14959
      ],
      "op": "ISZERO",
      "path": "39"
    },
    "4567": {
      "fn": "SoulboundRedeemable.withdraw",
      "offset": [
        14901,
        15013
      ],
      "op": "PUSH2",
      "path": "39",
      "value": "0x1222"
    },
    "4570": {
      "branch": 152,
      "fn": "SoulboundRedeemable.withdraw",
      "offset": [
        14901,
        15013
      ],
      "op": "JUMPI",
      "path": "39"
    },
    "4571": {
      "fn": "SoulboundRedeemable.withdraw",
      "offset": [
        14901,
        15013
      ],
      "op": "PUSH1",
      "path": "39",
      "value": "0x40"
    },
    "4573": {
      "fn": "SoulboundRedeemable.withdraw",
      "offset": [
        14901,
        15013
      ],
      "op": "MLOAD",
      "path": "39"
    },
    "4574": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "4578": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "4580": {
      "op": "SHL"
    },
    "4581": {
      "fn": "SoulboundRedeemable.withdraw",
      "offset": [
        14901,
        15013
      ],
      "op": "DUP2",
      "path": "39"
    },
    "4582": {
      "fn": "SoulboundRedeemable.withdraw",
      "offset": [
        14901,
        15013
      ],
      "op": "MSTORE",
      "path": "39"
    },
    "4583": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4585": {
      "fn": "SoulboundRedeemable.withdraw",
      "offset": [
        14901,
        15013
      ],
      "op": "PUSH1",
      "path": "39",
      "value": "0x4"
    },
    "4587": {
      "fn": "SoulboundRedeemable.withdraw",
      "offset": [
        14901,
        15013
      ],
      "op": "DUP3",
      "path": "39"
    },
    "4588": {
      "fn": "SoulboundRedeemable.withdraw",
      "offset": [
        14901,
        15013
      ],
      "op": "ADD",
      "path": "39"
    },
    "4589": {
      "op": "MSTORE"
    },
    "4590": {
      "op": "PUSH1",
      "value": "0x1C"
    },
    "4592": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "4594": {
      "op": "DUP3"
    },
    "4595": {
      "op": "ADD"
    },
    "4596": {
      "op": "MSTORE"
    },
    "4597": {
      "op": "PUSH32",
      "value": "0x526576656E756520213D20436F6E74726163742062616C616E63652E00000000"
    },
    "4630": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "4632": {
      "op": "DUP3"
    },
    "4633": {
      "op": "ADD"
    },
    "4634": {
      "op": "MSTORE"
    },
    "4635": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "4637": {
      "op": "ADD"
    },
    "4638": {
      "fn": "SoulboundRedeemable.withdraw",
      "offset": [
        14901,
        15013
      ],
      "op": "PUSH2",
      "path": "39",
      "value": "0x6B1"
    },
    "4641": {
      "op": "JUMP"
    },
    "4642": {
      "fn": "SoulboundRedeemable.withdraw",
      "offset": [
        14901,
        15013
      ],
      "op": "JUMPDEST",
      "path": "39"
    },
    "4643": {
      "fn": "SoulboundRedeemable.withdraw",
      "offset": [
        15110,
        15122
      ],
      "op": "PUSH1",
      "path": "39",
      "statement": 50,
      "value": "0xD"
    },
    "4645": {
      "fn": "SoulboundRedeemable.withdraw",
      "offset": [
        15110,
        15122
      ],
      "op": "SLOAD",
      "path": "39"
    },
    "4646": {
      "fn": "SoulboundRedeemable.withdraw",
      "offset": [
        15084,
        15123
      ],
      "op": "PUSH1",
      "path": "39",
      "value": "0x40"
    },
    "4648": {
      "fn": "SoulboundRedeemable.withdraw",
      "offset": [
        15084,
        15123
      ],
      "op": "MLOAD",
      "path": "39"
    },
    "4649": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4651": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4653": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4655": {
      "op": "SHL"
    },
    "4656": {
      "op": "SUB"
    },
    "4657": {
      "fn": "SoulboundRedeemable.withdraw",
      "offset": [
        15084,
        15109
      ],
      "op": "DUP5",
      "path": "39"
    },
    "4658": {
      "fn": "SoulboundRedeemable.withdraw",
      "offset": [
        15084,
        15109
      ],
      "op": "AND",
      "path": "39"
    },
    "4659": {
      "fn": "SoulboundRedeemable.withdraw",
      "offset": [
        15084,
        15109
      ],
      "op": "SWAP2",
      "path": "39"
    },
    "4660": {
      "fn": "SoulboundRedeemable.withdraw",
      "offset": [
        15084,
        15123
      ],
      "op": "DUP1",
      "path": "39"
    },
    "4661": {
      "fn": "SoulboundRedeemable.withdraw",
      "offset": [
        15084,
        15123
      ],
      "op": "ISZERO",
      "path": "39"
    },
    "4662": {
      "fn": "SoulboundRedeemable.withdraw",
      "offset": [
        15084,
        15123
      ],
      "op": "PUSH2",
      "path": "39",
      "value": "0x8FC"
    },
    "4665": {
      "fn": "SoulboundRedeemable.withdraw",
      "offset": [
        15084,
        15123
      ],
      "op": "MUL",
      "path": "39"
    },
    "4666": {
      "fn": "SoulboundRedeemable.withdraw",
      "offset": [
        15084,
        15123
      ],
      "op": "SWAP2",
      "path": "39"
    },
    "4667": {
      "fn": "SoulboundRedeemable.withdraw",
      "offset": [
        15084,
        15123
      ],
      "op": "PUSH1",
      "path": "39",
      "value": "0x0"
    },
    "4669": {
      "fn": "SoulboundRedeemable.withdraw",
      "offset": [
        15084,
        15123
      ],
      "op": "DUP2",
      "path": "39"
    },
    "4670": {
      "fn": "SoulboundRedeemable.withdraw",
      "offset": [
        15084,
        15123
      ],
      "op": "DUP2",
      "path": "39"
    },
    "4671": {
      "fn": "SoulboundRedeemable.withdraw",
      "offset": [
        15084,
        15123
      ],
      "op": "DUP2",
      "path": "39"
    },
    "4672": {
      "fn": "SoulboundRedeemable.withdraw",
      "offset": [
        15110,
        15122
      ],
      "op": "DUP6",
      "path": "39"
    },
    "4673": {
      "fn": "SoulboundRedeemable.withdraw",
      "offset": [
        15084,
        15109
      ],
      "op": "DUP9",
      "path": "39"
    },
    "4674": {
      "fn": "SoulboundRedeemable.withdraw",
      "offset": [
        15084,
        15123
      ],
      "op": "DUP9",
      "path": "39"
    },
    "4675": {
      "fn": "SoulboundRedeemable.withdraw",
      "offset": [
        15084,
        15123
      ],
      "op": "CALL",
      "path": "39"
    },
    "4676": {
      "fn": "SoulboundRedeemable.withdraw",
      "offset": [
        15084,
        15123
      ],
      "op": "SWAP4",
      "path": "39"
    },
    "4677": {
      "fn": "SoulboundRedeemable.withdraw",
      "offset": [
        15084,
        15123
      ],
      "op": "POP",
      "path": "39"
    },
    "4678": {
      "fn": "SoulboundRedeemable.withdraw",
      "offset": [
        15084,
        15123
      ],
      "op": "POP",
      "path": "39"
    },
    "4679": {
      "fn": "SoulboundRedeemable.withdraw",
      "offset": [
        15084,
        15123
      ],
      "op": "POP",
      "path": "39"
    },
    "4680": {
      "fn": "SoulboundRedeemable.withdraw",
      "offset": [
        15084,
        15123
      ],
      "op": "POP",
      "path": "39"
    },
    "4681": {
      "fn": "SoulboundRedeemable.withdraw",
      "offset": [
        15084,
        15123
      ],
      "op": "ISZERO",
      "path": "39"
    },
    "4682": {
      "fn": "SoulboundRedeemable.withdraw",
      "offset": [
        15084,
        15123
      ],
      "op": "DUP1",
      "path": "39"
    },
    "4683": {
      "fn": "SoulboundRedeemable.withdraw",
      "offset": [
        15084,
        15123
      ],
      "op": "ISZERO",
      "path": "39"
    },
    "4684": {
      "fn": "SoulboundRedeemable.withdraw",
      "offset": [
        15084,
        15123
      ],
      "op": "PUSH2",
      "path": "39",
      "value": "0x1259"
    },
    "4687": {
      "fn": "SoulboundRedeemable.withdraw",
      "offset": [
        15084,
        15123
      ],
      "op": "JUMPI",
      "path": "39"
    },
    "4688": {
      "fn": "SoulboundRedeemable.withdraw",
      "offset": [
        15084,
        15123
      ],
      "op": "RETURNDATASIZE",
      "path": "39"
    },
    "4689": {
      "fn": "SoulboundRedeemable.withdraw",
      "offset": [
        15084,
        15123
      ],
      "op": "PUSH1",
      "path": "39",
      "value": "0x0"
    },
    "4691": {
      "fn": "SoulboundRedeemable.withdraw",
      "offset": [
        15084,
        15123
      ],
      "op": "DUP1",
      "path": "39"
    },
    "4692": {
      "fn": "SoulboundRedeemable.withdraw",
      "offset": [
        15084,
        15123
      ],
      "op": "RETURNDATACOPY",
      "path": "39"
    },
    "4693": {
      "fn": "SoulboundRedeemable.withdraw",
      "offset": [
        15084,
        15123
      ],
      "op": "RETURNDATASIZE",
      "path": "39"
    },
    "4694": {
      "fn": "SoulboundRedeemable.withdraw",
      "offset": [
        15084,
        15123
      ],
      "op": "PUSH1",
      "path": "39",
      "value": "0x0"
    },
    "4696": {
      "fn": "SoulboundRedeemable.withdraw",
      "offset": [
        15084,
        15123
      ],
      "op": "REVERT",
      "path": "39"
    },
    "4697": {
      "fn": "SoulboundRedeemable.withdraw",
      "offset": [
        15084,
        15123
      ],
      "op": "JUMPDEST",
      "path": "39"
    },
    "4698": {
      "op": "POP"
    },
    "4699": {
      "op": "POP"
    },
    "4700": {
      "fn": "SoulboundRedeemable.withdraw",
      "offset": [
        15192,
        15193
      ],
      "op": "PUSH1",
      "path": "39",
      "statement": 51,
      "value": "0x0"
    },
    "4702": {
      "fn": "SoulboundRedeemable.withdraw",
      "offset": [
        15177,
        15189
      ],
      "op": "PUSH1",
      "path": "39",
      "value": "0xD"
    },
    "4704": {
      "fn": "SoulboundRedeemable.withdraw",
      "offset": [
        15177,
        15193
      ],
      "op": "SSTORE",
      "path": "39"
    },
    "4705": {
      "op": "POP"
    },
    "4706": {
      "fn": "SoulboundRedeemable.withdraw",
      "jump": "o",
      "offset": [
        14559,
        15200
      ],
      "op": "JUMP",
      "path": "39"
    },
    "4707": {
      "fn": "ERC4973.ownerOf",
      "offset": [
        5705,
        5918
      ],
      "op": "JUMPDEST",
      "path": "41"
    },
    "4708": {
      "fn": "ERC4973.ownerOf",
      "offset": [
        5768,
        5775
      ],
      "op": "PUSH1",
      "path": "41",
      "value": "0x0"
    },
    "4710": {
      "fn": "ERC4973.ownerOf",
      "offset": [
        5803,
        5819
      ],
      "op": "DUP2",
      "path": "41"
    },
    "4711": {
      "fn": "ERC4973.ownerOf",
      "offset": [
        5803,
        5819
      ],
      "op": "DUP2",
      "path": "41"
    },
    "4712": {
      "fn": "ERC4973.ownerOf",
      "offset": [
        5803,
        5819
      ],
      "op": "MSTORE",
      "path": "41"
    },
    "4713": {
      "fn": "ERC4973.ownerOf",
      "offset": [
        5803,
        5810
      ],
      "op": "PUSH1",
      "path": "41",
      "value": "0x3"
    },
    "4715": {
      "fn": "ERC4973.ownerOf",
      "offset": [
        5803,
        5819
      ],
      "op": "PUSH1",
      "path": "41",
      "value": "0x20"
    },
    "4717": {
      "fn": "ERC4973.ownerOf",
      "offset": [
        5803,
        5819
      ],
      "op": "MSTORE",
      "path": "41"
    },
    "4718": {
      "fn": "ERC4973.ownerOf",
      "offset": [
        5803,
        5819
      ],
      "op": "PUSH1",
      "path": "41",
      "value": "0x40"
    },
    "4720": {
      "fn": "ERC4973.ownerOf",
      "offset": [
        5803,
        5819
      ],
      "op": "DUP2",
      "path": "41"
    },
    "4721": {
      "fn": "ERC4973.ownerOf",
      "offset": [
        5803,
        5819
      ],
      "op": "KECCAK256",
      "path": "41"
    },
    "4722": {
      "fn": "ERC4973.ownerOf",
      "offset": [
        5803,
        5819
      ],
      "op": "SLOAD",
      "path": "41"
    },
    "4723": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4725": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4727": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4729": {
      "op": "SHL"
    },
    "4730": {
      "op": "SUB"
    },
    "4731": {
      "fn": "ERC4973.ownerOf",
      "offset": [
        5803,
        5819
      ],
      "op": "AND",
      "path": "41"
    },
    "4732": {
      "fn": "ERC4973.ownerOf",
      "offset": [
        5803,
        5819
      ],
      "op": "DUP1",
      "path": "41"
    },
    "4733": {
      "fn": "ERC4973.ownerOf",
      "offset": [
        5829,
        5889
      ],
      "op": "PUSH2",
      "path": "41",
      "statement": 52,
      "value": "0x7A2"
    },
    "4736": {
      "fn": "ERC4973.ownerOf",
      "offset": [
        5829,
        5889
      ],
      "op": "JUMPI",
      "path": "41"
    },
    "4737": {
      "fn": "ERC4973.ownerOf",
      "offset": [
        5829,
        5889
      ],
      "op": "PUSH1",
      "path": "41",
      "value": "0x40"
    },
    "4739": {
      "fn": "ERC4973.ownerOf",
      "offset": [
        5829,
        5889
      ],
      "op": "MLOAD",
      "path": "41"
    },
    "4740": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "4744": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "4746": {
      "op": "SHL"
    },
    "4747": {
      "fn": "ERC4973.ownerOf",
      "offset": [
        5829,
        5889
      ],
      "op": "DUP2",
      "path": "41"
    },
    "4748": {
      "fn": "ERC4973.ownerOf",
      "offset": [
        5829,
        5889
      ],
      "op": "MSTORE",
      "path": "41"
    },
    "4749": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4751": {
      "fn": "ERC4973.ownerOf",
      "offset": [
        5829,
        5889
      ],
      "op": "PUSH1",
      "path": "41",
      "value": "0x4"
    },
    "4753": {
      "fn": "ERC4973.ownerOf",
      "offset": [
        5829,
        5889
      ],
      "op": "DUP3",
      "path": "41"
    },
    "4754": {
      "fn": "ERC4973.ownerOf",
      "offset": [
        5829,
        5889
      ],
      "op": "ADD",
      "path": "41"
    },
    "4755": {
      "op": "MSTORE"
    },
    "4756": {
      "op": "PUSH1",
      "value": "0x1C"
    },
    "4758": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "4760": {
      "op": "DUP3"
    },
    "4761": {
      "op": "ADD"
    },
    "4762": {
      "op": "MSTORE"
    },
    "4763": {
      "op": "PUSH32",
      "value": "0x6F776E65724F663A20746F6B656E20646F65736E277420657869737400000000"
    },
    "4796": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "4798": {
      "op": "DUP3"
    },
    "4799": {
      "op": "ADD"
    },
    "4800": {
      "op": "MSTORE"
    },
    "4801": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "4803": {
      "op": "ADD"
    },
    "4804": {
      "fn": "ERC4973.ownerOf",
      "offset": [
        5829,
        5889
      ],
      "op": "PUSH2",
      "path": "41",
      "value": "0x6B1"
    },
    "4807": {
      "op": "JUMP"
    },
    "4808": {
      "fn": "ERC4973.balanceOf",
      "offset": [
        5414,
        5699
      ],
      "op": "JUMPDEST",
      "path": "41"
    },
    "4809": {
      "fn": "ERC4973.balanceOf",
      "offset": [
        5526,
        5533
      ],
      "op": "PUSH1",
      "path": "41",
      "value": "0x0"
    },
    "4811": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4813": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4815": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4817": {
      "op": "SHL"
    },
    "4818": {
      "op": "SUB"
    },
    "4819": {
      "fn": "ERC4973.balanceOf",
      "offset": [
        5570,
        5589
      ],
      "op": "DUP3",
      "path": "41",
      "statement": 53
    },
    "4820": {
      "branch": 167,
      "fn": "ERC4973.balanceOf",
      "offset": [
        5570,
        5589
      ],
      "op": "AND",
      "path": "41"
    },
    "4821": {
      "fn": "ERC4973.balanceOf",
      "offset": [
        5549,
        5659
      ],
      "op": "PUSH2",
      "path": "41",
      "value": "0x1335"
    },
    "4824": {
      "branch": 167,
      "fn": "ERC4973.balanceOf",
      "offset": [
        5549,
        5659
      ],
      "op": "JUMPI",
      "path": "41"
    },
    "4825": {
      "fn": "ERC4973.balanceOf",
      "offset": [
        5549,
        5659
      ],
      "op": "PUSH1",
      "path": "41",
      "value": "0x40"
    },
    "4827": {
      "fn": "ERC4973.balanceOf",
      "offset": [
        5549,
        5659
      ],
      "op": "MLOAD",
      "path": "41"
    },
    "4828": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "4832": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "4834": {
      "op": "SHL"
    },
    "4835": {
      "fn": "ERC4973.balanceOf",
      "offset": [
        5549,
        5659
      ],
      "op": "DUP2",
      "path": "41"
    },
    "4836": {
      "fn": "ERC4973.balanceOf",
      "offset": [
        5549,
        5659
      ],
      "op": "MSTORE",
      "path": "41"
    },
    "4837": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4839": {
      "fn": "ERC4973.balanceOf",
      "offset": [
        5549,
        5659
      ],
      "op": "PUSH1",
      "path": "41",
      "value": "0x4"
    },
    "4841": {
      "fn": "ERC4973.balanceOf",
      "offset": [
        5549,
        5659
      ],
      "op": "DUP3",
      "path": "41"
    },
    "4842": {
      "fn": "ERC4973.balanceOf",
      "offset": [
        5549,
        5659
      ],
      "op": "ADD",
      "path": "41"
    },
    "4843": {
      "op": "MSTORE"
    },
    "4844": {
      "op": "PUSH1",
      "value": "0x2C"
    },
    "4846": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "4848": {
      "op": "DUP3"
    },
    "4849": {
      "op": "ADD"
    },
    "4850": {
      "op": "MSTORE"
    },
    "4851": {
      "op": "PUSH32",
      "value": "0x62616C616E63654F663A2061646472657373207A65726F206973206E6F742061"
    },
    "4884": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "4886": {
      "op": "DUP3"
    },
    "4887": {
      "op": "ADD"
    },
    "4888": {
      "op": "MSTORE"
    },
    "4889": {
      "op": "PUSH12",
      "value": "0x103B30B634B21037BBB732B9"
    },
    "4902": {
      "op": "PUSH1",
      "value": "0xA1"
    },
    "4904": {
      "op": "SHL"
    },
    "4905": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "4907": {
      "op": "DUP3"
    },
    "4908": {
      "op": "ADD"
    },
    "4909": {
      "op": "MSTORE"
    },
    "4910": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "4912": {
      "op": "ADD"
    },
    "4913": {
      "fn": "ERC4973.balanceOf",
      "offset": [
        5549,
        5659
      ],
      "op": "PUSH2",
      "path": "41",
      "value": "0x6B1"
    },
    "4916": {
      "op": "JUMP"
    },
    "4917": {
      "fn": "ERC4973.balanceOf",
      "offset": [
        5549,
        5659
      ],
      "op": "JUMPDEST",
      "path": "41"
    },
    "4918": {
      "op": "POP"
    },
    "4919": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4921": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4923": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4925": {
      "op": "SHL"
    },
    "4926": {
      "op": "SUB"
    },
    "4927": {
      "fn": "ERC4973.balanceOf",
      "offset": [
        5676,
        5692
      ],
      "op": "AND",
      "path": "41",
      "statement": 54
    },
    "4928": {
      "fn": "ERC4973.balanceOf",
      "offset": [
        5676,
        5692
      ],
      "op": "PUSH1",
      "path": "41",
      "value": "0x0"
    },
    "4930": {
      "fn": "ERC4973.balanceOf",
      "offset": [
        5676,
        5692
      ],
      "op": "SWAP1",
      "path": "41"
    },
    "4931": {
      "fn": "ERC4973.balanceOf",
      "offset": [
        5676,
        5692
      ],
      "op": "DUP2",
      "path": "41"
    },
    "4932": {
      "fn": "ERC4973.balanceOf",
      "offset": [
        5676,
        5692
      ],
      "op": "MSTORE",
      "path": "41"
    },
    "4933": {
      "fn": "ERC4973.balanceOf",
      "offset": [
        5676,
        5685
      ],
      "op": "PUSH1",
      "path": "41",
      "value": "0x5"
    },
    "4935": {
      "fn": "ERC4973.balanceOf",
      "offset": [
        5676,
        5692
      ],
      "op": "PUSH1",
      "path": "41",
      "value": "0x20"
    },
    "4937": {
      "fn": "ERC4973.balanceOf",
      "offset": [
        5676,
        5692
      ],
      "op": "MSTORE",
      "path": "41"
    },
    "4938": {
      "fn": "ERC4973.balanceOf",
      "offset": [
        5676,
        5692
      ],
      "op": "PUSH1",
      "path": "41",
      "value": "0x40"
    },
    "4940": {
      "fn": "ERC4973.balanceOf",
      "offset": [
        5676,
        5692
      ],
      "op": "SWAP1",
      "path": "41"
    },
    "4941": {
      "fn": "ERC4973.balanceOf",
      "offset": [
        5676,
        5692
      ],
      "op": "KECCAK256",
      "path": "41"
    },
    "4942": {
      "fn": "ERC4973.balanceOf",
      "offset": [
        5676,
        5692
      ],
      "op": "SLOAD",
      "path": "41"
    },
    "4943": {
      "fn": "ERC4973.balanceOf",
      "offset": [
        5676,
        5692
      ],
      "op": "SWAP1",
      "path": "41"
    },
    "4944": {
      "fn": "ERC4973.balanceOf",
      "jump": "o",
      "offset": [
        5414,
        5699
      ],
      "op": "JUMP",
      "path": "41"
    },
    "4945": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1668,
        1769
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "4946": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x6"
    },
    "4948": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "4949": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4951": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4953": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4955": {
      "op": "SHL"
    },
    "4956": {
      "op": "SUB"
    },
    "4957": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "AND",
      "path": "0"
    },
    "4958": {
      "fn": "Context._msgSender",
      "offset": [
        719,
        729
      ],
      "op": "CALLER",
      "path": "5"
    },
    "4959": {
      "offset": [
        1248,
        1271
      ],
      "op": "EQ",
      "path": "0"
    },
    "4960": {
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x137B"
    },
    "4963": {
      "offset": [
        1240,
        1308
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "4964": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "4966": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "4967": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "4971": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "4973": {
      "op": "SHL"
    },
    "4974": {
      "offset": [
        1240,
        1308
      ],
      "op": "DUP2",
      "path": "0"
    },
    "4975": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "4976": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "4978": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "ADD",
      "path": "0"
    },
    "4979": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x6B1"
    },
    "4982": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "4983": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2B66"
    },
    "4986": {
      "fn": "Context._msgSender",
      "jump": "i",
      "offset": [
        1240,
        1308
      ],
      "op": "JUMP",
      "path": "0"
    },
    "4987": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "4988": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1732,
        1762
      ],
      "op": "PUSH2",
      "path": "0",
      "statement": 55,
      "value": "0x1385"
    },
    "4991": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1759,
        1760
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "4993": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1732,
        1750
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2237"
    },
    "4996": {
      "fn": "Ownable.renounceOwnership",
      "jump": "i",
      "offset": [
        1732,
        1762
      ],
      "op": "JUMP",
      "path": "0"
    },
    "4997": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1732,
        1762
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "4998": {
      "fn": "Ownable.renounceOwnership",
      "jump": "o",
      "offset": [
        1668,
        1769
      ],
      "op": "JUMP",
      "path": "0"
    },
    "4999": {
      "fn": "SoulboundCore.setBaseURI",
      "offset": [
        5539,
        5739
      ],
      "op": "JUMPDEST",
      "path": "38"
    },
    "5000": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x6"
    },
    "5002": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "5003": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5005": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5007": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5009": {
      "op": "SHL"
    },
    "5010": {
      "op": "SUB"
    },
    "5011": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "AND",
      "path": "0"
    },
    "5012": {
      "fn": "Context._msgSender",
      "offset": [
        719,
        729
      ],
      "op": "CALLER",
      "path": "5"
    },
    "5013": {
      "offset": [
        1248,
        1271
      ],
      "op": "EQ",
      "path": "0"
    },
    "5014": {
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x13B1"
    },
    "5017": {
      "offset": [
        1240,
        1308
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "5018": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "5020": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "5021": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "5025": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "5027": {
      "op": "SHL"
    },
    "5028": {
      "offset": [
        1240,
        1308
      ],
      "op": "DUP2",
      "path": "0"
    },
    "5029": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "5030": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "5032": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "ADD",
      "path": "0"
    },
    "5033": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x6B1"
    },
    "5036": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "5037": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2B66"
    },
    "5040": {
      "fn": "Context._msgSender",
      "jump": "i",
      "offset": [
        1240,
        1308
      ],
      "op": "JUMP",
      "path": "0"
    },
    "5041": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "5042": {
      "fn": "SoulboundCore.setBaseURI",
      "offset": [
        5659,
        5665
      ],
      "op": "DUP2",
      "path": "38"
    },
    "5043": {
      "offset": [
        1704,
        1723
      ],
      "op": "PUSH2",
      "path": "38",
      "value": "0x13C4"
    },
    "5046": {
      "fn": "Allowlist.getAllowlistOwner",
      "offset": [
        2247,
        2261
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x9"
    },
    "5048": {
      "fn": "Allowlist.getAllowlistOwner",
      "offset": [
        2247,
        2261
      ],
      "op": "SLOAD",
      "path": "14"
    },
    "5049": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5051": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5053": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5055": {
      "op": "SHL"
    },
    "5056": {
      "op": "SUB"
    },
    "5057": {
      "fn": "Allowlist.getAllowlistOwner",
      "offset": [
        2247,
        2261
      ],
      "op": "AND",
      "path": "14"
    },
    "5058": {
      "fn": "Allowlist.getAllowlistOwner",
      "offset": [
        2247,
        2261
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "5059": {
      "fn": "Allowlist.getAllowlistOwner",
      "offset": [
        2171,
        2268
      ],
      "op": "JUMP",
      "path": "14"
    },
    "5060": {
      "offset": [
        1704,
        1723
      ],
      "op": "JUMPDEST",
      "path": "38"
    },
    "5061": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5063": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5065": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5067": {
      "op": "SHL"
    },
    "5068": {
      "op": "SUB"
    },
    "5069": {
      "offset": [
        1693,
        1723
      ],
      "op": "AND",
      "path": "38"
    },
    "5070": {
      "offset": [
        1693,
        1700
      ],
      "op": "DUP2",
      "path": "38"
    },
    "5071": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5073": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5075": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5077": {
      "op": "SHL"
    },
    "5078": {
      "op": "SUB"
    },
    "5079": {
      "offset": [
        1693,
        1723
      ],
      "op": "AND",
      "path": "38"
    },
    "5080": {
      "fn": "Allowlist.getAllowlistOwner",
      "offset": [
        1693,
        1723
      ],
      "op": "EQ",
      "path": "38"
    },
    "5081": {
      "offset": [
        1685,
        1748
      ],
      "op": "PUSH2",
      "path": "38",
      "value": "0x13F4"
    },
    "5084": {
      "offset": [
        1685,
        1748
      ],
      "op": "JUMPI",
      "path": "38"
    },
    "5085": {
      "fn": "Allowlist.getAllowlistOwner",
      "offset": [
        1685,
        1748
      ],
      "op": "PUSH1",
      "path": "38",
      "value": "0x40"
    },
    "5087": {
      "fn": "Allowlist.getAllowlistOwner",
      "offset": [
        1685,
        1748
      ],
      "op": "MLOAD",
      "path": "38"
    },
    "5088": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "5092": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "5094": {
      "op": "SHL"
    },
    "5095": {
      "offset": [
        1685,
        1748
      ],
      "op": "DUP2",
      "path": "38"
    },
    "5096": {
      "fn": "Allowlist.getAllowlistOwner",
      "offset": [
        1685,
        1748
      ],
      "op": "MSTORE",
      "path": "38"
    },
    "5097": {
      "fn": "Allowlist.getAllowlistOwner",
      "offset": [
        1685,
        1748
      ],
      "op": "PUSH1",
      "path": "38",
      "value": "0x4"
    },
    "5099": {
      "fn": "Allowlist.getAllowlistOwner",
      "offset": [
        1685,
        1748
      ],
      "op": "ADD",
      "path": "38"
    },
    "5100": {
      "fn": "Allowlist.getAllowlistOwner",
      "offset": [
        1685,
        1748
      ],
      "op": "PUSH2",
      "path": "38",
      "value": "0x6B1"
    },
    "5103": {
      "fn": "Allowlist.getAllowlistOwner",
      "offset": [
        1685,
        1748
      ],
      "op": "SWAP1",
      "path": "38"
    },
    "5104": {
      "fn": "Allowlist.getAllowlistOwner",
      "offset": [
        1685,
        1748
      ],
      "op": "PUSH2",
      "path": "38",
      "value": "0x2B9B"
    },
    "5107": {
      "fn": "Allowlist.getAllowlistOwner",
      "jump": "i",
      "offset": [
        1685,
        1748
      ],
      "op": "JUMP",
      "path": "38"
    },
    "5108": {
      "fn": "Allowlist.getAllowlistOwner",
      "offset": [
        1685,
        1748
      ],
      "op": "JUMPDEST",
      "path": "38"
    },
    "5109": {
      "fn": "SoulboundCore.setBaseURI",
      "offset": [
        5711,
        5732
      ],
      "op": "PUSH2",
      "path": "38",
      "statement": 56,
      "value": "0xA07"
    },
    "5112": {
      "fn": "SoulboundCore.setBaseURI",
      "offset": [
        5723,
        5731
      ],
      "op": "DUP3",
      "path": "38"
    },
    "5113": {
      "fn": "SoulboundCore.setBaseURI",
      "offset": [
        5711,
        5722
      ],
      "op": "PUSH2",
      "path": "38",
      "value": "0x2289"
    },
    "5116": {
      "fn": "SoulboundCore.setBaseURI",
      "jump": "i",
      "offset": [
        5711,
        5732
      ],
      "op": "JUMP",
      "path": "38"
    },
    "5117": {
      "fn": "ERC4973.symbol",
      "offset": [
        4886,
        4988
      ],
      "op": "JUMPDEST",
      "path": "41"
    },
    "5118": {
      "fn": "ERC4973.symbol",
      "offset": [
        4942,
        4955
      ],
      "op": "PUSH1",
      "path": "41",
      "value": "0x60"
    },
    "5120": {
      "fn": "ERC4973.symbol",
      "offset": [
        4974,
        4981
      ],
      "op": "PUSH1",
      "path": "41",
      "statement": 57,
      "value": "0x2"
    },
    "5122": {
      "fn": "ERC4973.symbol",
      "offset": [
        4967,
        4981
      ],
      "op": "DUP1",
      "path": "41"
    },
    "5123": {
      "fn": "ERC4973.symbol",
      "offset": [
        4967,
        4981
      ],
      "op": "SLOAD",
      "path": "41"
    },
    "5124": {
      "fn": "ERC4973.symbol",
      "offset": [
        4967,
        4981
      ],
      "op": "PUSH2",
      "path": "41",
      "value": "0x7B7"
    },
    "5127": {
      "fn": "ERC4973.symbol",
      "offset": [
        4967,
        4981
      ],
      "op": "SWAP1",
      "path": "41"
    },
    "5128": {
      "fn": "ERC4973.symbol",
      "offset": [
        4967,
        4981
      ],
      "op": "PUSH2",
      "path": "41",
      "value": "0x2BC9"
    },
    "5131": {
      "fn": "ERC4973.symbol",
      "jump": "i",
      "offset": [
        4967,
        4981
      ],
      "op": "JUMP",
      "path": "41"
    },
    "5132": {
      "fn": "SoulboundRedeemable.redeemMintedTokenWithSignature",
      "offset": [
        13771,
        14280
      ],
      "op": "JUMPDEST",
      "path": "39"
    },
    "5133": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x6"
    },
    "5135": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "5136": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5138": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5140": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5142": {
      "op": "SHL"
    },
    "5143": {
      "op": "SUB"
    },
    "5144": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "AND",
      "path": "0"
    },
    "5145": {
      "fn": "Context._msgSender",
      "offset": [
        719,
        729
      ],
      "op": "CALLER",
      "path": "5"
    },
    "5146": {
      "offset": [
        1248,
        1271
      ],
      "op": "EQ",
      "path": "0"
    },
    "5147": {
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1436"
    },
    "5150": {
      "offset": [
        1240,
        1308
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "5151": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "5153": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "5154": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "5158": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "5160": {
      "op": "SHL"
    },
    "5161": {
      "offset": [
        1240,
        1308
      ],
      "op": "DUP2",
      "path": "0"
    },
    "5162": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "5163": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "5165": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "ADD",
      "path": "0"
    },
    "5166": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x6B1"
    },
    "5169": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "5170": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2B66"
    },
    "5173": {
      "fn": "Context._msgSender",
      "jump": "i",
      "offset": [
        1240,
        1308
      ],
      "op": "JUMP",
      "path": "0"
    },
    "5174": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "5175": {
      "fn": "SoulboundRedeemable.redeemMintedTokenWithSignature",
      "offset": [
        14020,
        14027
      ],
      "op": "DUP6",
      "path": "39"
    },
    "5176": {
      "offset": [
        1704,
        1723
      ],
      "op": "PUSH2",
      "path": "38",
      "value": "0x1449"
    },
    "5179": {
      "fn": "Allowlist.getAllowlistOwner",
      "offset": [
        2247,
        2261
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x9"
    },
    "5181": {
      "fn": "Allowlist.getAllowlistOwner",
      "offset": [
        2247,
        2261
      ],
      "op": "SLOAD",
      "path": "14"
    },
    "5182": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5184": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5186": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5188": {
      "op": "SHL"
    },
    "5189": {
      "op": "SUB"
    },
    "5190": {
      "fn": "Allowlist.getAllowlistOwner",
      "offset": [
        2247,
        2261
      ],
      "op": "AND",
      "path": "14"
    },
    "5191": {
      "fn": "Allowlist.getAllowlistOwner",
      "offset": [
        2247,
        2261
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "5192": {
      "fn": "Allowlist.getAllowlistOwner",
      "offset": [
        2171,
        2268
      ],
      "op": "JUMP",
      "path": "14"
    },
    "5193": {
      "offset": [
        1704,
        1723
      ],
      "op": "JUMPDEST",
      "path": "38"
    },
    "5194": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5196": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5198": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5200": {
      "op": "SHL"
    },
    "5201": {
      "op": "SUB"
    },
    "5202": {
      "offset": [
        1693,
        1723
      ],
      "op": "AND",
      "path": "38"
    },
    "5203": {
      "offset": [
        1693,
        1700
      ],
      "op": "DUP2",
      "path": "38"
    },
    "5204": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5206": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5208": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5210": {
      "op": "SHL"
    },
    "5211": {
      "op": "SUB"
    },
    "5212": {
      "offset": [
        1693,
        1723
      ],
      "op": "AND",
      "path": "38"
    },
    "5213": {
      "fn": "Allowlist.getAllowlistOwner",
      "offset": [
        1693,
        1723
      ],
      "op": "EQ",
      "path": "38"
    },
    "5214": {
      "offset": [
        1685,
        1748
      ],
      "op": "PUSH2",
      "path": "38",
      "value": "0x1479"
    },
    "5217": {
      "offset": [
        1685,
        1748
      ],
      "op": "JUMPI",
      "path": "38"
    },
    "5218": {
      "fn": "Allowlist.getAllowlistOwner",
      "offset": [
        1685,
        1748
      ],
      "op": "PUSH1",
      "path": "38",
      "value": "0x40"
    },
    "5220": {
      "fn": "Allowlist.getAllowlistOwner",
      "offset": [
        1685,
        1748
      ],
      "op": "MLOAD",
      "path": "38"
    },
    "5221": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "5225": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "5227": {
      "op": "SHL"
    },
    "5228": {
      "offset": [
        1685,
        1748
      ],
      "op": "DUP2",
      "path": "38"
    },
    "5229": {
      "fn": "Allowlist.getAllowlistOwner",
      "offset": [
        1685,
        1748
      ],
      "op": "MSTORE",
      "path": "38"
    },
    "5230": {
      "fn": "Allowlist.getAllowlistOwner",
      "offset": [
        1685,
        1748
      ],
      "op": "PUSH1",
      "path": "38",
      "value": "0x4"
    },
    "5232": {
      "fn": "Allowlist.getAllowlistOwner",
      "offset": [
        1685,
        1748
      ],
      "op": "ADD",
      "path": "38"
    },
    "5233": {
      "fn": "Allowlist.getAllowlistOwner",
      "offset": [
        1685,
        1748
      ],
      "op": "PUSH2",
      "path": "38",
      "value": "0x6B1"
    },
    "5236": {
      "fn": "Allowlist.getAllowlistOwner",
      "offset": [
        1685,
        1748
      ],
      "op": "SWAP1",
      "path": "38"
    },
    "5237": {
      "fn": "Allowlist.getAllowlistOwner",
      "offset": [
        1685,
        1748
      ],
      "op": "PUSH2",
      "path": "38",
      "value": "0x2B9B"
    },
    "5240": {
      "fn": "Allowlist.getAllowlistOwner",
      "jump": "i",
      "offset": [
        1685,
        1748
      ],
      "op": "JUMP",
      "path": "38"
    },
    "5241": {
      "fn": "Allowlist.getAllowlistOwner",
      "offset": [
        1685,
        1748
      ],
      "op": "JUMPDEST",
      "path": "38"
    },
    "5242": {
      "offset": [
        2688,
        2694
      ],
      "op": "PUSH1",
      "path": "39",
      "value": "0x13"
    },
    "5244": {
      "fn": "Allowlist.getAllowlistOwner",
      "offset": [
        2688,
        2694
      ],
      "op": "SLOAD",
      "path": "39"
    },
    "5245": {
      "fn": "Allowlist.getAllowlistOwner",
      "offset": [
        2688,
        2694
      ],
      "op": "PUSH1",
      "path": "39",
      "value": "0xFF"
    },
    "5247": {
      "fn": "Allowlist.getAllowlistOwner",
      "offset": [
        2688,
        2694
      ],
      "op": "AND",
      "path": "39"
    },
    "5248": {
      "offset": [
        2687,
        2694
      ],
      "op": "ISZERO",
      "path": "39"
    },
    "5249": {
      "offset": [
        2679,
        2695
      ],
      "op": "PUSH2",
      "path": "39",
      "value": "0x1489"
    },
    "5252": {
      "offset": [
        2679,
        2695
      ],
      "op": "JUMPI",
      "path": "39"
    },
    "5253": {
      "fn": "Allowlist.getAllowlistOwner",
      "offset": [
        2679,
        2695
      ],
      "op": "PUSH1",
      "path": "39",
      "value": "0x0"
    },
    "5255": {
      "fn": "Allowlist.getAllowlistOwner",
      "offset": [
        2679,
        2695
      ],
      "op": "DUP1",
      "path": "39"
    },
    "5256": {
      "fn": "Allowlist.getAllowlistOwner",
      "offset": [
        2679,
        2695
      ],
      "op": "REVERT",
      "path": "39"
    },
    "5257": {
      "fn": "Allowlist.getAllowlistOwner",
      "offset": [
        2679,
        2695
      ],
      "op": "JUMPDEST",
      "path": "39"
    },
    "5258": {
      "offset": [
        2705,
        2711
      ],
      "op": "PUSH1",
      "path": "39",
      "value": "0x13"
    },
    "5260": {
      "offset": [
        2705,
        2718
      ],
      "op": "DUP1",
      "path": "39"
    },
    "5261": {
      "fn": "Allowlist.getAllowlistOwner",
      "offset": [
        2705,
        2718
      ],
      "op": "SLOAD",
      "path": "39"
    },
    "5262": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "5264": {
      "op": "NOT"
    },
    "5265": {
      "offset": [
        2705,
        2718
      ],
      "op": "AND",
      "path": "39"
    },
    "5266": {
      "offset": [
        2714,
        2718
      ],
      "op": "PUSH1",
      "path": "39",
      "value": "0x1"
    },
    "5268": {
      "offset": [
        2705,
        2718
      ],
      "op": "OR",
      "path": "39"
    },
    "5269": {
      "fn": "Allowlist.getAllowlistOwner",
      "offset": [
        2705,
        2718
      ],
      "op": "SWAP1",
      "path": "39"
    },
    "5270": {
      "fn": "Allowlist.getAllowlistOwner",
      "offset": [
        2705,
        2718
      ],
      "op": "SSTORE",
      "path": "39"
    },
    "5271": {
      "fn": "SoulboundRedeemable.redeemMintedTokenWithSignature",
      "offset": [
        14124,
        14150
      ],
      "op": "PUSH2",
      "path": "39",
      "statement": 58,
      "value": "0x14A0"
    },
    "5274": {
      "fn": "SoulboundRedeemable.redeemMintedTokenWithSignature",
      "offset": [
        14140,
        14144
      ],
      "op": "DUP4",
      "path": "39"
    },
    "5275": {
      "fn": "SoulboundRedeemable.redeemMintedTokenWithSignature",
      "offset": [
        14146,
        14149
      ],
      "op": "DUP4",
      "path": "39"
    },
    "5276": {
      "fn": "SoulboundRedeemable.redeemMintedTokenWithSignature",
      "offset": [
        14124,
        14139
      ],
      "op": "PUSH2",
      "path": "39",
      "value": "0x1A94"
    },
    "5279": {
      "fn": "SoulboundRedeemable.redeemMintedTokenWithSignature",
      "jump": "i",
      "offset": [
        14124,
        14150
      ],
      "op": "JUMP",
      "path": "39"
    },
    "5280": {
      "branch": 153,
      "fn": "SoulboundRedeemable.redeemMintedTokenWithSignature",
      "offset": [
        14124,
        14150
      ],
      "op": "JUMPDEST",
      "path": "39"
    },
    "5281": {
      "fn": "SoulboundRedeemable.redeemMintedTokenWithSignature",
      "offset": [
        14116,
        14178
      ],
      "op": "PUSH2",
      "path": "39",
      "value": "0x14E6"
    },
    "5284": {
      "branch": 153,
      "fn": "SoulboundRedeemable.redeemMintedTokenWithSignature",
      "offset": [
        14116,
        14178
      ],
      "op": "JUMPI",
      "path": "39"
    },
    "5285": {
      "fn": "SoulboundRedeemable.redeemMintedTokenWithSignature",
      "offset": [
        14116,
        14178
      ],
      "op": "PUSH1",
      "path": "39",
      "value": "0x40"
    },
    "5287": {
      "fn": "SoulboundRedeemable.redeemMintedTokenWithSignature",
      "offset": [
        14116,
        14178
      ],
      "op": "MLOAD",
      "path": "39"
    },
    "5288": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "5292": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "5294": {
      "op": "SHL"
    },
    "5295": {
      "fn": "SoulboundRedeemable.redeemMintedTokenWithSignature",
      "offset": [
        14116,
        14178
      ],
      "op": "DUP2",
      "path": "39"
    },
    "5296": {
      "fn": "SoulboundRedeemable.redeemMintedTokenWithSignature",
      "offset": [
        14116,
        14178
      ],
      "op": "MSTORE",
      "path": "39"
    },
    "5297": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5299": {
      "fn": "SoulboundRedeemable.redeemMintedTokenWithSignature",
      "offset": [
        14116,
        14178
      ],
      "op": "PUSH1",
      "path": "39",
      "value": "0x4"
    },
    "5301": {
      "fn": "SoulboundRedeemable.redeemMintedTokenWithSignature",
      "offset": [
        14116,
        14178
      ],
      "op": "DUP3",
      "path": "39"
    },
    "5302": {
      "fn": "SoulboundRedeemable.redeemMintedTokenWithSignature",
      "offset": [
        14116,
        14178
      ],
      "op": "ADD",
      "path": "39"
    },
    "5303": {
      "op": "MSTORE"
    },
    "5304": {
      "op": "PUSH1",
      "value": "0x17"
    },
    "5306": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "5308": {
      "op": "DUP3"
    },
    "5309": {
      "op": "ADD"
    },
    "5310": {
      "op": "MSTORE"
    },
    "5311": {
      "op": "PUSH23",
      "value": "0x2430B9B4103737BA1039B4B3B732B210313C903CB7BA97"
    },
    "5335": {
      "op": "PUSH1",
      "value": "0x49"
    },
    "5337": {
      "op": "SHL"
    },
    "5338": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "5340": {
      "op": "DUP3"
    },
    "5341": {
      "op": "ADD"
    },
    "5342": {
      "op": "MSTORE"
    },
    "5343": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "5345": {
      "op": "ADD"
    },
    "5346": {
      "fn": "SoulboundRedeemable.redeemMintedTokenWithSignature",
      "offset": [
        14116,
        14178
      ],
      "op": "PUSH2",
      "path": "39",
      "value": "0x6B1"
    },
    "5349": {
      "op": "JUMP"
    },
    "5350": {
      "fn": "SoulboundRedeemable.redeemMintedTokenWithSignature",
      "offset": [
        14116,
        14178
      ],
      "op": "JUMPDEST",
      "path": "39"
    },
    "5351": {
      "fn": "SoulboundRedeemable.redeemMintedTokenWithSignature",
      "offset": [
        14218,
        14273
      ],
      "op": "PUSH2",
      "path": "39",
      "statement": 59,
      "value": "0x14F1"
    },
    "5354": {
      "fn": "SoulboundRedeemable.redeemMintedTokenWithSignature",
      "offset": [
        14236,
        14245
      ],
      "op": "DUP7",
      "path": "39"
    },
    "5355": {
      "fn": "SoulboundRedeemable.redeemMintedTokenWithSignature",
      "offset": [
        14247,
        14254
      ],
      "op": "DUP7",
      "path": "39"
    },
    "5356": {
      "fn": "SoulboundRedeemable.redeemMintedTokenWithSignature",
      "offset": [
        14256,
        14272
      ],
      "op": "DUP7",
      "path": "39"
    },
    "5357": {
      "fn": "SoulboundRedeemable.redeemMintedTokenWithSignature",
      "offset": [
        14218,
        14235
      ],
      "op": "PUSH2",
      "path": "39",
      "value": "0xDA6"
    },
    "5360": {
      "fn": "SoulboundRedeemable.redeemMintedTokenWithSignature",
      "jump": "i",
      "offset": [
        14218,
        14273
      ],
      "op": "JUMP",
      "path": "39"
    },
    "5361": {
      "fn": "SoulboundRedeemable.redeemMintedTokenWithSignature",
      "offset": [
        14218,
        14273
      ],
      "op": "JUMPDEST",
      "path": "39"
    },
    "5362": {
      "op": "POP"
    },
    "5363": {
      "op": "POP"
    },
    "5364": {
      "offset": [
        2739,
        2745
      ],
      "op": "PUSH1",
      "path": "39",
      "value": "0x13"
    },
    "5366": {
      "offset": [
        2739,
        2753
      ],
      "op": "DUP1",
      "path": "39"
    },
    "5367": {
      "fn": "SoulboundRedeemable.redeemMintedTokenWithSignature",
      "offset": [
        2739,
        2753
      ],
      "op": "SLOAD",
      "path": "39"
    },
    "5368": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "5370": {
      "op": "NOT"
    },
    "5371": {
      "offset": [
        2739,
        2753
      ],
      "op": "AND",
      "path": "39"
    },
    "5372": {
      "fn": "SoulboundRedeemable.redeemMintedTokenWithSignature",
      "offset": [
        2739,
        2753
      ],
      "op": "SWAP1",
      "path": "39"
    },
    "5373": {
      "fn": "SoulboundRedeemable.redeemMintedTokenWithSignature",
      "offset": [
        2739,
        2753
      ],
      "op": "SSTORE",
      "path": "39"
    },
    "5374": {
      "op": "POP"
    },
    "5375": {
      "op": "POP"
    },
    "5376": {
      "op": "POP"
    },
    "5377": {
      "op": "POP"
    },
    "5378": {
      "op": "POP"
    },
    "5379": {
      "fn": "SoulboundRedeemable.redeemMintedTokenWithSignature",
      "jump": "o",
      "offset": [
        13771,
        14280
      ],
      "op": "JUMP",
      "path": "39"
    },
    "5380": {
      "fn": "SoulboundRedeemable.redeemPendingTokenWithSignature",
      "offset": [
        12692,
        13203
      ],
      "op": "JUMPDEST",
      "path": "39"
    },
    "5381": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x6"
    },
    "5383": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "5384": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5386": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5388": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5390": {
      "op": "SHL"
    },
    "5391": {
      "op": "SUB"
    },
    "5392": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "AND",
      "path": "0"
    },
    "5393": {
      "fn": "Context._msgSender",
      "offset": [
        719,
        729
      ],
      "op": "CALLER",
      "path": "5"
    },
    "5394": {
      "offset": [
        1248,
        1271
      ],
      "op": "EQ",
      "path": "0"
    },
    "5395": {
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x152E"
    },
    "5398": {
      "offset": [
        1240,
        1308
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "5399": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "5401": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "5402": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "5406": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "5408": {
      "op": "SHL"
    },
    "5409": {
      "offset": [
        1240,
        1308
      ],
      "op": "DUP2",
      "path": "0"
    },
    "5410": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "5411": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "5413": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "ADD",
      "path": "0"
    },
    "5414": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x6B1"
    },
    "5417": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "5418": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2B66"
    },
    "5421": {
      "fn": "Context._msgSender",
      "jump": "i",
      "offset": [
        1240,
        1308
      ],
      "op": "JUMP",
      "path": "0"
    },
    "5422": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "5423": {
      "fn": "SoulboundRedeemable.redeemPendingTokenWithSignature",
      "offset": [
        12942,
        12949
      ],
      "op": "DUP6",
      "path": "39"
    },
    "5424": {
      "offset": [
        1704,
        1723
      ],
      "op": "PUSH2",
      "path": "38",
      "value": "0x1541"
    },
    "5427": {
      "fn": "Allowlist.getAllowlistOwner",
      "offset": [
        2247,
        2261
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x9"
    },
    "5429": {
      "fn": "Allowlist.getAllowlistOwner",
      "offset": [
        2247,
        2261
      ],
      "op": "SLOAD",
      "path": "14"
    },
    "5430": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5432": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5434": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5436": {
      "op": "SHL"
    },
    "5437": {
      "op": "SUB"
    },
    "5438": {
      "fn": "Allowlist.getAllowlistOwner",
      "offset": [
        2247,
        2261
      ],
      "op": "AND",
      "path": "14"
    },
    "5439": {
      "fn": "Allowlist.getAllowlistOwner",
      "offset": [
        2247,
        2261
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "5440": {
      "fn": "Allowlist.getAllowlistOwner",
      "offset": [
        2171,
        2268
      ],
      "op": "JUMP",
      "path": "14"
    },
    "5441": {
      "offset": [
        1704,
        1723
      ],
      "op": "JUMPDEST",
      "path": "38"
    },
    "5442": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5444": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5446": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5448": {
      "op": "SHL"
    },
    "5449": {
      "op": "SUB"
    },
    "5450": {
      "offset": [
        1693,
        1723
      ],
      "op": "AND",
      "path": "38"
    },
    "5451": {
      "offset": [
        1693,
        1700
      ],
      "op": "DUP2",
      "path": "38"
    },
    "5452": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5454": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5456": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5458": {
      "op": "SHL"
    },
    "5459": {
      "op": "SUB"
    },
    "5460": {
      "offset": [
        1693,
        1723
      ],
      "op": "AND",
      "path": "38"
    },
    "5461": {
      "fn": "Allowlist.getAllowlistOwner",
      "offset": [
        1693,
        1723
      ],
      "op": "EQ",
      "path": "38"
    },
    "5462": {
      "offset": [
        1685,
        1748
      ],
      "op": "PUSH2",
      "path": "38",
      "value": "0x1571"
    },
    "5465": {
      "offset": [
        1685,
        1748
      ],
      "op": "JUMPI",
      "path": "38"
    },
    "5466": {
      "fn": "Allowlist.getAllowlistOwner",
      "offset": [
        1685,
        1748
      ],
      "op": "PUSH1",
      "path": "38",
      "value": "0x40"
    },
    "5468": {
      "fn": "Allowlist.getAllowlistOwner",
      "offset": [
        1685,
        1748
      ],
      "op": "MLOAD",
      "path": "38"
    },
    "5469": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "5473": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "5475": {
      "op": "SHL"
    },
    "5476": {
      "offset": [
        1685,
        1748
      ],
      "op": "DUP2",
      "path": "38"
    },
    "5477": {
      "fn": "Allowlist.getAllowlistOwner",
      "offset": [
        1685,
        1748
      ],
      "op": "MSTORE",
      "path": "38"
    },
    "5478": {
      "fn": "Allowlist.getAllowlistOwner",
      "offset": [
        1685,
        1748
      ],
      "op": "PUSH1",
      "path": "38",
      "value": "0x4"
    },
    "5480": {
      "fn": "Allowlist.getAllowlistOwner",
      "offset": [
        1685,
        1748
      ],
      "op": "ADD",
      "path": "38"
    },
    "5481": {
      "fn": "Allowlist.getAllowlistOwner",
      "offset": [
        1685,
        1748
      ],
      "op": "PUSH2",
      "path": "38",
      "value": "0x6B1"
    },
    "5484": {
      "fn": "Allowlist.getAllowlistOwner",
      "offset": [
        1685,
        1748
      ],
      "op": "SWAP1",
      "path": "38"
    },
    "5485": {
      "fn": "Allowlist.getAllowlistOwner",
      "offset": [
        1685,
        1748
      ],
      "op": "PUSH2",
      "path": "38",
      "value": "0x2B9B"
    },
    "5488": {
      "fn": "Allowlist.getAllowlistOwner",
      "jump": "i",
      "offset": [
        1685,
        1748
      ],
      "op": "JUMP",
      "path": "38"
    },
    "5489": {
      "fn": "Allowlist.getAllowlistOwner",
      "offset": [
        1685,
        1748
      ],
      "op": "JUMPDEST",
      "path": "38"
    },
    "5490": {
      "offset": [
        2688,
        2694
      ],
      "op": "PUSH1",
      "path": "39",
      "value": "0x13"
    },
    "5492": {
      "fn": "Allowlist.getAllowlistOwner",
      "offset": [
        2688,
        2694
      ],
      "op": "SLOAD",
      "path": "39"
    },
    "5493": {
      "fn": "Allowlist.getAllowlistOwner",
      "offset": [
        2688,
        2694
      ],
      "op": "PUSH1",
      "path": "39",
      "value": "0xFF"
    },
    "5495": {
      "fn": "Allowlist.getAllowlistOwner",
      "offset": [
        2688,
        2694
      ],
      "op": "AND",
      "path": "39"
    },
    "5496": {
      "offset": [
        2687,
        2694
      ],
      "op": "ISZERO",
      "path": "39"
    },
    "5497": {
      "offset": [
        2679,
        2695
      ],
      "op": "PUSH2",
      "path": "39",
      "value": "0x1581"
    },
    "5500": {
      "offset": [
        2679,
        2695
      ],
      "op": "JUMPI",
      "path": "39"
    },
    "5501": {
      "fn": "Allowlist.getAllowlistOwner",
      "offset": [
        2679,
        2695
      ],
      "op": "PUSH1",
      "path": "39",
      "value": "0x0"
    },
    "5503": {
      "fn": "Allowlist.getAllowlistOwner",
      "offset": [
        2679,
        2695
      ],
      "op": "DUP1",
      "path": "39"
    },
    "5504": {
      "fn": "Allowlist.getAllowlistOwner",
      "offset": [
        2679,
        2695
      ],
      "op": "REVERT",
      "path": "39"
    },
    "5505": {
      "fn": "Allowlist.getAllowlistOwner",
      "offset": [
        2679,
        2695
      ],
      "op": "JUMPDEST",
      "path": "39"
    },
    "5506": {
      "offset": [
        2705,
        2711
      ],
      "op": "PUSH1",
      "path": "39",
      "value": "0x13"
    },
    "5508": {
      "offset": [
        2705,
        2718
      ],
      "op": "DUP1",
      "path": "39"
    },
    "5509": {
      "fn": "Allowlist.getAllowlistOwner",
      "offset": [
        2705,
        2718
      ],
      "op": "SLOAD",
      "path": "39"
    },
    "5510": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "5512": {
      "op": "NOT"
    },
    "5513": {
      "offset": [
        2705,
        2718
      ],
      "op": "AND",
      "path": "39"
    },
    "5514": {
      "offset": [
        2714,
        2718
      ],
      "op": "PUSH1",
      "path": "39",
      "value": "0x1"
    },
    "5516": {
      "offset": [
        2705,
        2718
      ],
      "op": "OR",
      "path": "39"
    },
    "5517": {
      "fn": "Allowlist.getAllowlistOwner",
      "offset": [
        2705,
        2718
      ],
      "op": "SWAP1",
      "path": "39"
    },
    "5518": {
      "fn": "Allowlist.getAllowlistOwner",
      "offset": [
        2705,
        2718
      ],
      "op": "SSTORE",
      "path": "39"
    },
    "5519": {
      "fn": "SoulboundRedeemable.redeemPendingTokenWithSignature",
      "offset": [
        13046,
        13072
      ],
      "op": "PUSH2",
      "path": "39",
      "statement": 60,
      "value": "0x1598"
    },
    "5522": {
      "fn": "SoulboundRedeemable.redeemPendingTokenWithSignature",
      "offset": [
        13062,
        13066
      ],
      "op": "DUP4",
      "path": "39"
    },
    "5523": {
      "fn": "SoulboundRedeemable.redeemPendingTokenWithSignature",
      "offset": [
        13068,
        13071
      ],
      "op": "DUP4",
      "path": "39"
    },
    "5524": {
      "fn": "SoulboundRedeemable.redeemPendingTokenWithSignature",
      "offset": [
        13046,
        13061
      ],
      "op": "PUSH2",
      "path": "39",
      "value": "0x1A94"
    },
    "5527": {
      "fn": "SoulboundRedeemable.redeemPendingTokenWithSignature",
      "jump": "i",
      "offset": [
        13046,
        13072
      ],
      "op": "JUMP",
      "path": "39"
    },
    "5528": {
      "branch": 154,
      "fn": "SoulboundRedeemable.redeemPendingTokenWithSignature",
      "offset": [
        13046,
        13072
      ],
      "op": "JUMPDEST",
      "path": "39"
    },
    "5529": {
      "fn": "SoulboundRedeemable.redeemPendingTokenWithSignature",
      "offset": [
        13038,
        13100
      ],
      "op": "PUSH2",
      "path": "39",
      "value": "0x15DE"
    },
    "5532": {
      "branch": 154,
      "fn": "SoulboundRedeemable.redeemPendingTokenWithSignature",
      "offset": [
        13038,
        13100
      ],
      "op": "JUMPI",
      "path": "39"
    },
    "5533": {
      "fn": "SoulboundRedeemable.redeemPendingTokenWithSignature",
      "offset": [
        13038,
        13100
      ],
      "op": "PUSH1",
      "path": "39",
      "value": "0x40"
    },
    "5535": {
      "fn": "SoulboundRedeemable.redeemPendingTokenWithSignature",
      "offset": [
        13038,
        13100
      ],
      "op": "MLOAD",
      "path": "39"
    },
    "5536": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "5540": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "5542": {
      "op": "SHL"
    },
    "5543": {
      "fn": "SoulboundRedeemable.redeemPendingTokenWithSignature",
      "offset": [
        13038,
        13100
      ],
      "op": "DUP2",
      "path": "39"
    },
    "5544": {
      "fn": "SoulboundRedeemable.redeemPendingTokenWithSignature",
      "offset": [
        13038,
        13100
      ],
      "op": "MSTORE",
      "path": "39"
    },
    "5545": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5547": {
      "fn": "SoulboundRedeemable.redeemPendingTokenWithSignature",
      "offset": [
        13038,
        13100
      ],
      "op": "PUSH1",
      "path": "39",
      "value": "0x4"
    },
    "5549": {
      "fn": "SoulboundRedeemable.redeemPendingTokenWithSignature",
      "offset": [
        13038,
        13100
      ],
      "op": "DUP3",
      "path": "39"
    },
    "5550": {
      "fn": "SoulboundRedeemable.redeemPendingTokenWithSignature",
      "offset": [
        13038,
        13100
      ],
      "op": "ADD",
      "path": "39"
    },
    "5551": {
      "op": "MSTORE"
    },
    "5552": {
      "op": "PUSH1",
      "value": "0x17"
    },
    "5554": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "5556": {
      "op": "DUP3"
    },
    "5557": {
      "op": "ADD"
    },
    "5558": {
      "op": "MSTORE"
    },
    "5559": {
      "op": "PUSH23",
      "value": "0x2430B9B4103737BA1039B4B3B732B210313C903CB7BA97"
    },
    "5583": {
      "op": "PUSH1",
      "value": "0x49"
    },
    "5585": {
      "op": "SHL"
    },
    "5586": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "5588": {
      "op": "DUP3"
    },
    "5589": {
      "op": "ADD"
    },
    "5590": {
      "op": "MSTORE"
    },
    "5591": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "5593": {
      "op": "ADD"
    },
    "5594": {
      "fn": "SoulboundRedeemable.redeemPendingTokenWithSignature",
      "offset": [
        13038,
        13100
      ],
      "op": "PUSH2",
      "path": "39",
      "value": "0x6B1"
    },
    "5597": {
      "op": "JUMP"
    },
    "5598": {
      "fn": "SoulboundRedeemable.redeemPendingTokenWithSignature",
      "offset": [
        13038,
        13100
      ],
      "op": "JUMPDEST",
      "path": "39"
    },
    "5599": {
      "fn": "SoulboundRedeemable.redeemPendingTokenWithSignature",
      "offset": [
        13140,
        13196
      ],
      "op": "PUSH2",
      "path": "39",
      "statement": 61,
      "value": "0x14F1"
    },
    "5602": {
      "fn": "SoulboundRedeemable.redeemPendingTokenWithSignature",
      "offset": [
        13159,
        13168
      ],
      "op": "DUP7",
      "path": "39"
    },
    "5603": {
      "fn": "SoulboundRedeemable.redeemPendingTokenWithSignature",
      "offset": [
        13170,
        13177
      ],
      "op": "DUP7",
      "path": "39"
    },
    "5604": {
      "fn": "SoulboundRedeemable.redeemPendingTokenWithSignature",
      "offset": [
        13179,
        13195
      ],
      "op": "DUP7",
      "path": "39"
    },
    "5605": {
      "fn": "SoulboundRedeemable.redeemPendingTokenWithSignature",
      "offset": [
        13140,
        13158
      ],
      "op": "PUSH2",
      "path": "39",
      "value": "0x1BF7"
    },
    "5608": {
      "fn": "SoulboundRedeemable.redeemPendingTokenWithSignature",
      "jump": "i",
      "offset": [
        13140,
        13196
      ],
      "op": "JUMP",
      "path": "39"
    },
    "5609": {
      "fn": "SoulboundRedeemable.mintPendingRedeemableToken",
      "offset": [
        4548,
        5770
      ],
      "op": "JUMPDEST",
      "path": "39"
    },
    "5610": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x6"
    },
    "5612": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "5613": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5615": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5617": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5619": {
      "op": "SHL"
    },
    "5620": {
      "op": "SUB"
    },
    "5621": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "AND",
      "path": "0"
    },
    "5622": {
      "fn": "Context._msgSender",
      "offset": [
        719,
        729
      ],
      "op": "CALLER",
      "path": "5"
    },
    "5623": {
      "offset": [
        1248,
        1271
      ],
      "op": "EQ",
      "path": "0"
    },
    "5624": {
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1613"
    },
    "5627": {
      "offset": [
        1240,
        1308
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "5628": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "5630": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "5631": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "5635": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "5637": {
      "op": "SHL"
    },
    "5638": {
      "offset": [
        1240,
        1308
      ],
      "op": "DUP2",
      "path": "0"
    },
    "5639": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "5640": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "5642": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "ADD",
      "path": "0"
    },
    "5643": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x6B1"
    },
    "5646": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "5647": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2B66"
    },
    "5650": {
      "fn": "Context._msgSender",
      "jump": "i",
      "offset": [
        1240,
        1308
      ],
      "op": "JUMP",
      "path": "0"
    },
    "5651": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "5652": {
      "fn": "SoulboundRedeemable.mintPendingRedeemableToken",
      "offset": [
        4727,
        4731
      ],
      "op": "DUP4",
      "path": "39"
    },
    "5653": {
      "offset": [
        1704,
        1723
      ],
      "op": "PUSH2",
      "path": "38",
      "value": "0x1626"
    },
    "5656": {
      "fn": "Allowlist.getAllowlistOwner",
      "offset": [
        2247,
        2261
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x9"
    },
    "5658": {
      "fn": "Allowlist.getAllowlistOwner",
      "offset": [
        2247,
        2261
      ],
      "op": "SLOAD",
      "path": "14"
    },
    "5659": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5661": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5663": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5665": {
      "op": "SHL"
    },
    "5666": {
      "op": "SUB"
    },
    "5667": {
      "fn": "Allowlist.getAllowlistOwner",
      "offset": [
        2247,
        2261
      ],
      "op": "AND",
      "path": "14"
    },
    "5668": {
      "fn": "Allowlist.getAllowlistOwner",
      "offset": [
        2247,
        2261
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "5669": {
      "fn": "Allowlist.getAllowlistOwner",
      "offset": [
        2171,
        2268
      ],
      "op": "JUMP",
      "path": "14"
    },
    "5670": {
      "offset": [
        1704,
        1723
      ],
      "op": "JUMPDEST",
      "path": "38"
    },
    "5671": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5673": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5675": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5677": {
      "op": "SHL"
    },
    "5678": {
      "op": "SUB"
    },
    "5679": {
      "offset": [
        1693,
        1723
      ],
      "op": "AND",
      "path": "38"
    },
    "5680": {
      "offset": [
        1693,
        1700
      ],
      "op": "DUP2",
      "path": "38"
    },
    "5681": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5683": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5685": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5687": {
      "op": "SHL"
    },
    "5688": {
      "op": "SUB"
    },
    "5689": {
      "offset": [
        1693,
        1723
      ],
      "op": "AND",
      "path": "38"
    },
    "5690": {
      "branch": 186,
      "fn": "Allowlist.getAllowlistOwner",
      "offset": [
        1693,
        1723
      ],
      "op": "EQ",
      "path": "38"
    },
    "5691": {
      "offset": [
        1685,
        1748
      ],
      "op": "PUSH2",
      "path": "38",
      "value": "0x1656"
    },
    "5694": {
      "branch": 186,
      "offset": [
        1685,
        1748
      ],
      "op": "JUMPI",
      "path": "38"
    },
    "5695": {
      "fn": "Allowlist.getAllowlistOwner",
      "offset": [
        1685,
        1748
      ],
      "op": "PUSH1",
      "path": "38",
      "value": "0x40"
    },
    "5697": {
      "fn": "Allowlist.getAllowlistOwner",
      "offset": [
        1685,
        1748
      ],
      "op": "MLOAD",
      "path": "38"
    },
    "5698": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "5702": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "5704": {
      "op": "SHL"
    },
    "5705": {
      "offset": [
        1685,
        1748
      ],
      "op": "DUP2",
      "path": "38"
    },
    "5706": {
      "fn": "Allowlist.getAllowlistOwner",
      "offset": [
        1685,
        1748
      ],
      "op": "MSTORE",
      "path": "38"
    },
    "5707": {
      "fn": "Allowlist.getAllowlistOwner",
      "offset": [
        1685,
        1748
      ],
      "op": "PUSH1",
      "path": "38",
      "value": "0x4"
    },
    "5709": {
      "fn": "Allowlist.getAllowlistOwner",
      "offset": [
        1685,
        1748
      ],
      "op": "ADD",
      "path": "38"
    },
    "5710": {
      "fn": "Allowlist.getAllowlistOwner",
      "offset": [
        1685,
        1748
      ],
      "op": "PUSH2",
      "path": "38",
      "value": "0x6B1"
    },
    "5713": {
      "fn": "Allowlist.getAllowlistOwner",
      "offset": [
        1685,
        1748
      ],
      "op": "SWAP1",
      "path": "38"
    },
    "5714": {
      "fn": "Allowlist.getAllowlistOwner",
      "offset": [
        1685,
        1748
      ],
      "op": "PUSH2",
      "path": "38",
      "value": "0x2B9B"
    },
    "5717": {
      "fn": "Allowlist.getAllowlistOwner",
      "jump": "i",
      "offset": [
        1685,
        1748
      ],
      "op": "JUMP",
      "path": "38"
    },
    "5718": {
      "fn": "Allowlist.getAllowlistOwner",
      "offset": [
        1685,
        1748
      ],
      "op": "JUMPDEST",
      "path": "38"
    },
    "5719": {
      "fn": "SoulboundRedeemable.mintPendingRedeemableToken",
      "offset": [
        4999,
        5010
      ],
      "op": "PUSH1",
      "path": "39",
      "statement": 62,
      "value": "0xA"
    },
    "5721": {
      "fn": "SoulboundRedeemable.mintPendingRedeemableToken",
      "offset": [
        4999,
        5010
      ],
      "op": "SLOAD",
      "path": "39"
    },
    "5722": {
      "fn": "SoulboundRedeemable.mintPendingRedeemableToken",
      "offset": [
        4990,
        4996
      ],
      "op": "PUSH1",
      "path": "39",
      "value": "0xB"
    },
    "5724": {
      "fn": "SoulboundRedeemable.mintPendingRedeemableToken",
      "offset": [
        4990,
        4996
      ],
      "op": "SLOAD",
      "path": "39"
    },
    "5725": {
      "branch": 155,
      "fn": "SoulboundRedeemable.mintPendingRedeemableToken",
      "offset": [
        4990,
        5010
      ],
      "op": "LT",
      "path": "39"
    },
    "5726": {
      "fn": "SoulboundRedeemable.mintPendingRedeemableToken",
      "offset": [
        4982,
        5033
      ],
      "op": "PUSH2",
      "path": "39",
      "value": "0x169E"
    },
    "5729": {
      "branch": 155,
      "fn": "SoulboundRedeemable.mintPendingRedeemableToken",
      "offset": [
        4982,
        5033
      ],
      "op": "JUMPI",
      "path": "39"
    },
    "5730": {
      "fn": "SoulboundRedeemable.mintPendingRedeemableToken",
      "offset": [
        4982,
        5033
      ],
      "op": "PUSH1",
      "path": "39",
      "value": "0x40"
    },
    "5732": {
      "fn": "SoulboundRedeemable.mintPendingRedeemableToken",
      "offset": [
        4982,
        5033
      ],
      "op": "MLOAD",
      "path": "39"
    },
    "5733": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "5737": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "5739": {
      "op": "SHL"
    },
    "5740": {
      "fn": "SoulboundRedeemable.mintPendingRedeemableToken",
      "offset": [
        4982,
        5033
      ],
      "op": "DUP2",
      "path": "39"
    },
    "5741": {
      "fn": "SoulboundRedeemable.mintPendingRedeemableToken",
      "offset": [
        4982,
        5033
      ],
      "op": "MSTORE",
      "path": "39"
    },
    "5742": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5744": {
      "fn": "SoulboundRedeemable.mintPendingRedeemableToken",
      "offset": [
        4982,
        5033
      ],
      "op": "PUSH1",
      "path": "39",
      "value": "0x4"
    },
    "5746": {
      "fn": "SoulboundRedeemable.mintPendingRedeemableToken",
      "offset": [
        4982,
        5033
      ],
      "op": "DUP3",
      "path": "39"
    },
    "5747": {
      "fn": "SoulboundRedeemable.mintPendingRedeemableToken",
      "offset": [
        4982,
        5033
      ],
      "op": "ADD",
      "path": "39"
    },
    "5748": {
      "op": "MSTORE"
    },
    "5749": {
      "op": "PUSH1",
      "value": "0x12"
    },
    "5751": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "5753": {
      "op": "DUP3"
    },
    "5754": {
      "op": "ADD"
    },
    "5755": {
      "op": "MSTORE"
    },
    "5756": {
      "op": "PUSH18",
      "value": "0x24B9B9BAB29021B0B8102932B0B1B432B217"
    },
    "5775": {
      "op": "PUSH1",
      "value": "0x71"
    },
    "5777": {
      "op": "SHL"
    },
    "5778": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "5780": {
      "op": "DUP3"
    },
    "5781": {
      "op": "ADD"
    },
    "5782": {
      "op": "MSTORE"
    },
    "5783": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "5785": {
      "op": "ADD"
    },
    "5786": {
      "fn": "SoulboundRedeemable.mintPendingRedeemableToken",
      "offset": [
        4982,
        5033
      ],
      "op": "PUSH2",
      "path": "39",
      "value": "0x6B1"
    },
    "5789": {
      "op": "JUMP"
    },
    "5790": {
      "fn": "SoulboundRedeemable.mintPendingRedeemableToken",
      "offset": [
        4982,
        5033
      ],
      "op": "JUMPDEST",
      "path": "39"
    },
    "5791": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5793": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5795": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5797": {
      "op": "SHL"
    },
    "5798": {
      "op": "SUB"
    },
    "5799": {
      "fn": "SoulboundRedeemable.mintPendingRedeemableToken",
      "offset": [
        5104,
        5120
      ],
      "op": "DUP5",
      "path": "39",
      "statement": 63
    },
    "5800": {
      "branch": 156,
      "fn": "SoulboundRedeemable.mintPendingRedeemableToken",
      "offset": [
        5104,
        5120
      ],
      "op": "AND",
      "path": "39"
    },
    "5801": {
      "fn": "SoulboundRedeemable.mintPendingRedeemableToken",
      "offset": [
        5096,
        5146
      ],
      "op": "PUSH2",
      "path": "39",
      "value": "0x16C4"
    },
    "5804": {
      "branch": 156,
      "fn": "SoulboundRedeemable.mintPendingRedeemableToken",
      "offset": [
        5096,
        5146
      ],
      "op": "JUMPI",
      "path": "39"
    },
    "5805": {
      "fn": "SoulboundRedeemable.mintPendingRedeemableToken",
      "offset": [
        5096,
        5146
      ],
      "op": "PUSH1",
      "path": "39",
      "value": "0x40"
    },
    "5807": {
      "fn": "SoulboundRedeemable.mintPendingRedeemableToken",
      "offset": [
        5096,
        5146
      ],
      "op": "MLOAD",
      "path": "39"
    },
    "5808": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "5812": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "5814": {
      "op": "SHL"
    },
    "5815": {
      "fn": "SoulboundRedeemable.mintPendingRedeemableToken",
      "offset": [
        5096,
        5146
      ],
      "op": "DUP2",
      "path": "39"
    },
    "5816": {
      "fn": "SoulboundRedeemable.mintPendingRedeemableToken",
      "offset": [
        5096,
        5146
      ],
      "op": "MSTORE",
      "path": "39"
    },
    "5817": {
      "fn": "SoulboundRedeemable.mintPendingRedeemableToken",
      "offset": [
        5096,
        5146
      ],
      "op": "PUSH1",
      "path": "39",
      "value": "0x4"
    },
    "5819": {
      "fn": "SoulboundRedeemable.mintPendingRedeemableToken",
      "offset": [
        5096,
        5146
      ],
      "op": "ADD",
      "path": "39"
    },
    "5820": {
      "fn": "SoulboundRedeemable.mintPendingRedeemableToken",
      "offset": [
        5096,
        5146
      ],
      "op": "PUSH2",
      "path": "39",
      "value": "0x6B1"
    },
    "5823": {
      "fn": "SoulboundRedeemable.mintPendingRedeemableToken",
      "offset": [
        5096,
        5146
      ],
      "op": "SWAP1",
      "path": "39"
    },
    "5824": {
      "fn": "SoulboundRedeemable.mintPendingRedeemableToken",
      "offset": [
        5096,
        5146
      ],
      "op": "PUSH2",
      "path": "39",
      "value": "0x2C5F"
    },
    "5827": {
      "fn": "SoulboundRedeemable.mintPendingRedeemableToken",
      "jump": "i",
      "offset": [
        5096,
        5146
      ],
      "op": "JUMP",
      "path": "39"
    },
    "5828": {
      "fn": "SoulboundRedeemable.mintPendingRedeemableToken",
      "offset": [
        5096,
        5146
      ],
      "op": "JUMPDEST",
      "path": "39"
    },
    "5829": {
      "fn": "SoulboundRedeemable.mintPendingRedeemableToken",
      "offset": [
        5224,
        5240
      ],
      "op": "PUSH2",
      "path": "39",
      "statement": 64,
      "value": "0x16CD"
    },
    "5832": {
      "fn": "SoulboundRedeemable.mintPendingRedeemableToken",
      "offset": [
        5232,
        5239
      ],
      "op": "DUP4",
      "path": "39"
    },
    "5833": {
      "fn": "SoulboundRedeemable.mintPendingRedeemableToken",
      "offset": [
        5224,
        5231
      ],
      "op": "PUSH2",
      "path": "39",
      "value": "0x1F4F"
    },
    "5836": {
      "fn": "SoulboundRedeemable.mintPendingRedeemableToken",
      "jump": "i",
      "offset": [
        5224,
        5240
      ],
      "op": "JUMP",
      "path": "39"
    },
    "5837": {
      "fn": "SoulboundRedeemable.mintPendingRedeemableToken",
      "offset": [
        5224,
        5240
      ],
      "op": "JUMPDEST",
      "path": "39"
    },
    "5838": {
      "branch": 157,
      "fn": "SoulboundRedeemable.mintPendingRedeemableToken",
      "offset": [
        5223,
        5240
      ],
      "op": "ISZERO",
      "path": "39"
    },
    "5839": {
      "fn": "SoulboundRedeemable.mintPendingRedeemableToken",
      "offset": [
        5215,
        5276
      ],
      "op": "PUSH2",
      "path": "39",
      "value": "0x171A"
    },
    "5842": {
      "branch": 157,
      "fn": "SoulboundRedeemable.mintPendingRedeemableToken",
      "offset": [
        5215,
        5276
      ],
      "op": "JUMPI",
      "path": "39"
    },
    "5843": {
      "fn": "SoulboundRedeemable.mintPendingRedeemableToken",
      "offset": [
        5215,
        5276
      ],
      "op": "PUSH1",
      "path": "39",
      "value": "0x40"
    },
    "5845": {
      "fn": "SoulboundRedeemable.mintPendingRedeemableToken",
      "offset": [
        5215,
        5276
      ],
      "op": "MLOAD",
      "path": "39"
    },
    "5846": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "5850": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "5852": {
      "op": "SHL"
    },
    "5853": {
      "fn": "SoulboundRedeemable.mintPendingRedeemableToken",
      "offset": [
        5215,
        5276
      ],
      "op": "DUP2",
      "path": "39"
    },
    "5854": {
      "fn": "SoulboundRedeemable.mintPendingRedeemableToken",
      "offset": [
        5215,
        5276
      ],
      "op": "MSTORE",
      "path": "39"
    },
    "5855": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5857": {
      "fn": "SoulboundRedeemable.mintPendingRedeemableToken",
      "offset": [
        5215,
        5276
      ],
      "op": "PUSH1",
      "path": "39",
      "value": "0x4"
    },
    "5859": {
      "fn": "SoulboundRedeemable.mintPendingRedeemableToken",
      "offset": [
        5215,
        5276
      ],
      "op": "DUP3",
      "path": "39"
    },
    "5860": {
      "fn": "SoulboundRedeemable.mintPendingRedeemableToken",
      "offset": [
        5215,
        5276
      ],
      "op": "ADD",
      "path": "39"
    },
    "5861": {
      "op": "MSTORE"
    },
    "5862": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "5864": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "5866": {
      "op": "DUP3"
    },
    "5867": {
      "op": "ADD"
    },
    "5868": {
      "op": "MSTORE"
    },
    "5869": {
      "op": "PUSH32",
      "value": "0x4D696E74206F6620616C7265616479206578697374696E6720746F6B656E2E00"
    },
    "5902": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "5904": {
      "op": "DUP3"
    },
    "5905": {
      "op": "ADD"
    },
    "5906": {
      "op": "MSTORE"
    },
    "5907": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "5909": {
      "op": "ADD"
    },
    "5910": {
      "fn": "SoulboundRedeemable.mintPendingRedeemableToken",
      "offset": [
        5215,
        5276
      ],
      "op": "PUSH2",
      "path": "39",
      "value": "0x6B1"
    },
    "5913": {
      "op": "JUMP"
    },
    "5914": {
      "fn": "SoulboundRedeemable.mintPendingRedeemableToken",
      "offset": [
        5215,
        5276
      ],
      "op": "JUMPDEST",
      "path": "39"
    },
    "5915": {
      "fn": "SoulboundRedeemable.mintPendingRedeemableToken",
      "offset": [
        5363,
        5379
      ],
      "op": "PUSH1",
      "path": "39",
      "statement": 65,
      "value": "0x0"
    },
    "5917": {
      "fn": "SoulboundRedeemable.mintPendingRedeemableToken",
      "offset": [
        5363,
        5379
      ],
      "op": "DUP4",
      "path": "39"
    },
    "5918": {
      "fn": "SoulboundRedeemable.mintPendingRedeemableToken",
      "offset": [
        5363,
        5379
      ],
      "op": "DUP2",
      "path": "39"
    },
    "5919": {
      "fn": "SoulboundRedeemable.mintPendingRedeemableToken",
      "offset": [
        5363,
        5379
      ],
      "op": "MSTORE",
      "path": "39"
    },
    "5920": {
      "fn": "SoulboundRedeemable.mintPendingRedeemableToken",
      "offset": [
        5363,
        5370
      ],
      "op": "PUSH1",
      "path": "39",
      "value": "0x10"
    },
    "5922": {
      "fn": "SoulboundRedeemable.mintPendingRedeemableToken",
      "offset": [
        5363,
        5379
      ],
      "op": "PUSH1",
      "path": "39",
      "value": "0x20"
    },
    "5924": {
      "fn": "SoulboundRedeemable.mintPendingRedeemableToken",
      "offset": [
        5363,
        5379
      ],
      "op": "MSTORE",
      "path": "39"
    },
    "5925": {
      "fn": "SoulboundRedeemable.mintPendingRedeemableToken",
      "offset": [
        5363,
        5379
      ],
      "op": "PUSH1",
      "path": "39",
      "value": "0x40"
    },
    "5927": {
      "fn": "SoulboundRedeemable.mintPendingRedeemableToken",
      "offset": [
        5363,
        5379
      ],
      "op": "SWAP1",
      "path": "39"
    },
    "5928": {
      "fn": "SoulboundRedeemable.mintPendingRedeemableToken",
      "offset": [
        5363,
        5379
      ],
      "op": "KECCAK256",
      "path": "39"
    },
    "5929": {
      "fn": "SoulboundRedeemable.mintPendingRedeemableToken",
      "offset": [
        5363,
        5379
      ],
      "op": "SLOAD",
      "path": "39"
    },
    "5930": {
      "fn": "SoulboundRedeemable.mintPendingRedeemableToken",
      "offset": [
        5363,
        5379
      ],
      "op": "PUSH1",
      "path": "39",
      "value": "0xFF"
    },
    "5932": {
      "fn": "SoulboundRedeemable.mintPendingRedeemableToken",
      "offset": [
        5363,
        5379
      ],
      "op": "AND",
      "path": "39"
    },
    "5933": {
      "branch": 158,
      "fn": "SoulboundRedeemable.mintPendingRedeemableToken",
      "offset": [
        5362,
        5379
      ],
      "op": "ISZERO",
      "path": "39"
    },
    "5934": {
      "fn": "SoulboundRedeemable.mintPendingRedeemableToken",
      "offset": [
        5354,
        5414
      ],
      "op": "PUSH2",
      "path": "39",
      "value": "0x1779"
    },
    "5937": {
      "branch": 158,
      "fn": "SoulboundRedeemable.mintPendingRedeemableToken",
      "offset": [
        5354,
        5414
      ],
      "op": "JUMPI",
      "path": "39"
    },
    "5938": {
      "fn": "SoulboundRedeemable.mintPendingRedeemableToken",
      "offset": [
        5354,
        5414
      ],
      "op": "PUSH1",
      "path": "39",
      "value": "0x40"
    },
    "5940": {
      "fn": "SoulboundRedeemable.mintPendingRedeemableToken",
      "offset": [
        5354,
        5414
      ],
      "op": "MLOAD",
      "path": "39"
    },
    "5941": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "5945": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "5947": {
      "op": "SHL"
    },
    "5948": {
      "fn": "SoulboundRedeemable.mintPendingRedeemableToken",
      "offset": [
        5354,
        5414
      ],
      "op": "DUP2",
      "path": "39"
    },
    "5949": {
      "fn": "SoulboundRedeemable.mintPendingRedeemableToken",
      "offset": [
        5354,
        5414
      ],
      "op": "MSTORE",
      "path": "39"
    },
    "5950": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5952": {
      "fn": "SoulboundRedeemable.mintPendingRedeemableToken",
      "offset": [
        5354,
        5414
      ],
      "op": "PUSH1",
      "path": "39",
      "value": "0x4"
    },
    "5954": {
      "fn": "SoulboundRedeemable.mintPendingRedeemableToken",
      "offset": [
        5354,
        5414
      ],
      "op": "DUP3",
      "path": "39"
    },
    "5955": {
      "fn": "SoulboundRedeemable.mintPendingRedeemableToken",
      "offset": [
        5354,
        5414
      ],
      "op": "ADD",
      "path": "39"
    },
    "5956": {
      "op": "MSTORE"
    },
    "5957": {
      "op": "PUSH1",
      "value": "0x1E"
    },
    "5959": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "5961": {
      "op": "DUP3"
    },
    "5962": {
      "op": "ADD"
    },
    "5963": {
      "op": "MSTORE"
    },
    "5964": {
      "op": "PUSH32",
      "value": "0x4D696E74206F6620616C72656164792070656E64696E6720746F6B656E2E0000"
    },
    "5997": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "5999": {
      "op": "DUP3"
    },
    "6000": {
      "op": "ADD"
    },
    "6001": {
      "op": "MSTORE"
    },
    "6002": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "6004": {
      "op": "ADD"
    },
    "6005": {
      "fn": "SoulboundRedeemable.mintPendingRedeemableToken",
      "offset": [
        5354,
        5414
      ],
      "op": "PUSH2",
      "path": "39",
      "value": "0x6B1"
    },
    "6008": {
      "op": "JUMP"
    },
    "6009": {
      "fn": "SoulboundRedeemable.mintPendingRedeemableToken",
      "offset": [
        5354,
        5414
      ],
      "op": "JUMPDEST",
      "path": "39"
    },
    "6010": {
      "fn": "SoulboundRedeemable.mintPendingRedeemableToken",
      "offset": [
        5480,
        5496
      ],
      "op": "PUSH1",
      "path": "39",
      "statement": 66,
      "value": "0x0"
    },
    "6012": {
      "fn": "SoulboundRedeemable.mintPendingRedeemableToken",
      "offset": [
        5480,
        5496
      ],
      "op": "DUP4",
      "path": "39"
    },
    "6013": {
      "fn": "SoulboundRedeemable.mintPendingRedeemableToken",
      "offset": [
        5480,
        5496
      ],
      "op": "DUP2",
      "path": "39"
    },
    "6014": {
      "fn": "SoulboundRedeemable.mintPendingRedeemableToken",
      "offset": [
        5480,
        5496
      ],
      "op": "MSTORE",
      "path": "39"
    },
    "6015": {
      "fn": "SoulboundRedeemable.mintPendingRedeemableToken",
      "offset": [
        5480,
        5487
      ],
      "op": "PUSH1",
      "path": "39",
      "value": "0x10"
    },
    "6017": {
      "fn": "SoulboundRedeemable.mintPendingRedeemableToken",
      "offset": [
        5480,
        5496
      ],
      "op": "PUSH1",
      "path": "39",
      "value": "0x20"
    },
    "6019": {
      "fn": "SoulboundRedeemable.mintPendingRedeemableToken",
      "offset": [
        5480,
        5496
      ],
      "op": "SWAP1",
      "path": "39"
    },
    "6020": {
      "fn": "SoulboundRedeemable.mintPendingRedeemableToken",
      "offset": [
        5480,
        5496
      ],
      "op": "DUP2",
      "path": "39"
    },
    "6021": {
      "fn": "SoulboundRedeemable.mintPendingRedeemableToken",
      "offset": [
        5480,
        5496
      ],
      "op": "MSTORE",
      "path": "39"
    },
    "6022": {
      "fn": "SoulboundRedeemable.mintPendingRedeemableToken",
      "offset": [
        5480,
        5496
      ],
      "op": "PUSH1",
      "path": "39",
      "value": "0x40"
    },
    "6024": {
      "fn": "SoulboundRedeemable.mintPendingRedeemableToken",
      "offset": [
        5480,
        5496
      ],
      "op": "DUP1",
      "path": "39"
    },
    "6025": {
      "fn": "SoulboundRedeemable.mintPendingRedeemableToken",
      "offset": [
        5480,
        5496
      ],
      "op": "DUP4",
      "path": "39"
    },
    "6026": {
      "fn": "SoulboundRedeemable.mintPendingRedeemableToken",
      "offset": [
        5480,
        5496
      ],
      "op": "KECCAK256",
      "path": "39"
    },
    "6027": {
      "fn": "SoulboundRedeemable.mintPendingRedeemableToken",
      "offset": [
        5480,
        5503
      ],
      "op": "DUP1",
      "path": "39"
    },
    "6028": {
      "fn": "SoulboundRedeemable.mintPendingRedeemableToken",
      "offset": [
        5480,
        5503
      ],
      "op": "SLOAD",
      "path": "39"
    },
    "6029": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "6031": {
      "op": "NOT"
    },
    "6032": {
      "fn": "SoulboundRedeemable.mintPendingRedeemableToken",
      "offset": [
        5480,
        5503
      ],
      "op": "AND",
      "path": "39"
    },
    "6033": {
      "fn": "SoulboundRedeemable.mintPendingRedeemableToken",
      "offset": [
        5499,
        5503
      ],
      "op": "PUSH1",
      "path": "39",
      "value": "0x1"
    },
    "6035": {
      "fn": "SoulboundRedeemable.mintPendingRedeemableToken",
      "offset": [
        5480,
        5503
      ],
      "op": "OR",
      "path": "39"
    },
    "6036": {
      "fn": "SoulboundRedeemable.mintPendingRedeemableToken",
      "offset": [
        5480,
        5503
      ],
      "op": "SWAP1",
      "path": "39"
    },
    "6037": {
      "fn": "SoulboundRedeemable.mintPendingRedeemableToken",
      "offset": [
        5480,
        5503
      ],
      "op": "SSTORE",
      "path": "39"
    },
    "6038": {
      "fn": "SoulboundRedeemable.mintPendingRedeemableToken",
      "offset": [
        5577,
        5593
      ],
      "op": "PUSH1",
      "path": "39",
      "statement": 67,
      "value": "0x11"
    },
    "6040": {
      "fn": "SoulboundRedeemable.mintPendingRedeemableToken",
      "offset": [
        5577,
        5602
      ],
      "op": "SWAP1",
      "path": "39"
    },
    "6041": {
      "fn": "SoulboundRedeemable.mintPendingRedeemableToken",
      "offset": [
        5577,
        5602
      ],
      "op": "SWAP2",
      "path": "39"
    },
    "6042": {
      "fn": "SoulboundRedeemable.mintPendingRedeemableToken",
      "offset": [
        5577,
        5602
      ],
      "op": "MSTORE",
      "path": "39"
    },
    "6043": {
      "fn": "SoulboundRedeemable.mintPendingRedeemableToken",
      "offset": [
        5577,
        5602
      ],
      "op": "SWAP1",
      "path": "39"
    },
    "6044": {
      "fn": "SoulboundRedeemable.mintPendingRedeemableToken",
      "offset": [
        5577,
        5602
      ],
      "op": "KECCAK256",
      "path": "39"
    },
    "6045": {
      "fn": "SoulboundRedeemable.mintPendingRedeemableToken",
      "offset": [
        5577,
        5607
      ],
      "op": "DUP1",
      "path": "39"
    },
    "6046": {
      "fn": "SoulboundRedeemable.mintPendingRedeemableToken",
      "offset": [
        5577,
        5607
      ],
      "op": "SLOAD",
      "path": "39"
    },
    "6047": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6049": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6051": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "6053": {
      "op": "SHL"
    },
    "6054": {
      "op": "SUB"
    },
    "6055": {
      "fn": "SoulboundRedeemable.mintPendingRedeemableToken",
      "offset": [
        5577,
        5607
      ],
      "op": "DUP7",
      "path": "39"
    },
    "6056": {
      "fn": "SoulboundRedeemable.mintPendingRedeemableToken",
      "offset": [
        5577,
        5607
      ],
      "op": "AND",
      "path": "39"
    },
    "6057": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6059": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6061": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "6063": {
      "op": "SHL"
    },
    "6064": {
      "op": "SUB"
    },
    "6065": {
      "op": "NOT"
    },
    "6066": {
      "fn": "SoulboundRedeemable.mintPendingRedeemableToken",
      "offset": [
        5577,
        5607
      ],
      "op": "SWAP1",
      "path": "39"
    },
    "6067": {
      "fn": "SoulboundRedeemable.mintPendingRedeemableToken",
      "offset": [
        5577,
        5607
      ],
      "op": "SWAP2",
      "path": "39"
    },
    "6068": {
      "fn": "SoulboundRedeemable.mintPendingRedeemableToken",
      "offset": [
        5577,
        5607
      ],
      "op": "AND",
      "path": "39"
    },
    "6069": {
      "fn": "SoulboundRedeemable.mintPendingRedeemableToken",
      "offset": [
        5577,
        5607
      ],
      "op": "OR",
      "path": "39"
    },
    "6070": {
      "fn": "SoulboundRedeemable.mintPendingRedeemableToken",
      "offset": [
        5577,
        5607
      ],
      "op": "SWAP1",
      "path": "39"
    },
    "6071": {
      "fn": "SoulboundRedeemable.mintPendingRedeemableToken",
      "offset": [
        5577,
        5607
      ],
      "op": "SSTORE",
      "path": "39"
    },
    "6072": {
      "fn": "SoulboundRedeemable.mintPendingRedeemableToken",
      "offset": [
        5671,
        5710
      ],
      "op": "PUSH2",
      "path": "39",
      "statement": 68,
      "value": "0x17C1"
    },
    "6075": {
      "fn": "SoulboundRedeemable.mintPendingRedeemableToken",
      "offset": [
        5488,
        5495
      ],
      "op": "DUP4",
      "path": "39"
    },
    "6076": {
      "fn": "SoulboundRedeemable.mintPendingRedeemableToken",
      "offset": [
        5693,
        5709
      ],
      "op": "DUP4",
      "path": "39"
    },
    "6077": {
      "fn": "SoulboundRedeemable.mintPendingRedeemableToken",
      "offset": [
        5671,
        5683
      ],
      "op": "PUSH2",
      "path": "39",
      "value": "0x17DD"
    },
    "6080": {
      "fn": "SoulboundRedeemable.mintPendingRedeemableToken",
      "jump": "i",
      "offset": [
        5671,
        5710
      ],
      "op": "JUMP",
      "path": "39"
    },
    "6081": {
      "fn": "SoulboundRedeemable.mintPendingRedeemableToken",
      "offset": [
        5671,
        5710
      ],
      "op": "JUMPDEST",
      "path": "39"
    },
    "6082": {
      "fn": "SoulboundRedeemable.mintPendingRedeemableToken",
      "offset": [
        5755,
        5761
      ],
      "op": "PUSH1",
      "path": "39",
      "statement": 69,
      "value": "0xB"
    },
    "6084": {
      "fn": "SoulboundRedeemable.mintPendingRedeemableToken",
      "offset": [
        5755,
        5763
      ],
      "op": "DUP1",
      "path": "39"
    },
    "6085": {
      "fn": "SoulboundRedeemable.mintPendingRedeemableToken",
      "offset": [
        5755,
        5763
      ],
      "op": "SLOAD",
      "path": "39"
    },
    "6086": {
      "fn": "SoulboundRedeemable.mintPendingRedeemableToken",
      "offset": [
        5755,
        5763
      ],
      "op": "SWAP1",
      "path": "39"
    },
    "6087": {
      "fn": "SoulboundRedeemable.mintPendingRedeemableToken",
      "offset": [
        5755,
        5761
      ],
      "op": "PUSH1",
      "path": "39",
      "value": "0x0"
    },
    "6089": {
      "fn": "SoulboundRedeemable.mintPendingRedeemableToken",
      "offset": [
        5755,
        5763
      ],
      "op": "PUSH2",
      "path": "39",
      "value": "0x17D1"
    },
    "6092": {
      "fn": "SoulboundRedeemable.mintPendingRedeemableToken",
      "offset": [
        5755,
        5763
      ],
      "op": "DUP4",
      "path": "39"
    },
    "6093": {
      "fn": "SoulboundRedeemable.mintPendingRedeemableToken",
      "offset": [
        5755,
        5763
      ],
      "op": "PUSH2",
      "path": "39",
      "value": "0x2CA5"
    },
    "6096": {
      "fn": "SoulboundRedeemable.mintPendingRedeemableToken",
      "jump": "i",
      "offset": [
        5755,
        5763
      ],
      "op": "JUMP",
      "path": "39"
    },
    "6097": {
      "fn": "SoulboundRedeemable.mintPendingRedeemableToken",
      "offset": [
        5755,
        5763
      ],
      "op": "JUMPDEST",
      "path": "39"
    },
    "6098": {
      "fn": "SoulboundRedeemable.mintPendingRedeemableToken",
      "offset": [
        5755,
        5763
      ],
      "op": "SWAP2",
      "path": "39"
    },
    "6099": {
      "fn": "SoulboundRedeemable.mintPendingRedeemableToken",
      "offset": [
        5755,
        5763
      ],
      "op": "SWAP1",
      "path": "39"
    },
    "6100": {
      "fn": "SoulboundRedeemable.mintPendingRedeemableToken",
      "offset": [
        5755,
        5763
      ],
      "op": "POP",
      "path": "39"
    },
    "6101": {
      "fn": "SoulboundRedeemable.mintPendingRedeemableToken",
      "offset": [
        5755,
        5763
      ],
      "op": "SSTORE",
      "path": "39"
    },
    "6102": {
      "fn": "SoulboundRedeemable.mintPendingRedeemableToken",
      "offset": [
        5755,
        5763
      ],
      "op": "POP",
      "path": "39"
    },
    "6103": {
      "offset": [
        1318,
        1319
      ],
      "op": "POP",
      "path": "0"
    },
    "6104": {
      "fn": "SoulboundRedeemable.mintPendingRedeemableToken",
      "offset": [
        4548,
        5770
      ],
      "op": "POP",
      "path": "39"
    },
    "6105": {
      "fn": "SoulboundRedeemable.mintPendingRedeemableToken",
      "offset": [
        4548,
        5770
      ],
      "op": "POP",
      "path": "39"
    },
    "6106": {
      "fn": "SoulboundRedeemable.mintPendingRedeemableToken",
      "offset": [
        4548,
        5770
      ],
      "op": "POP",
      "path": "39"
    },
    "6107": {
      "fn": "SoulboundRedeemable.mintPendingRedeemableToken",
      "offset": [
        4548,
        5770
      ],
      "op": "POP",
      "path": "39"
    },
    "6108": {
      "fn": "SoulboundRedeemable.mintPendingRedeemableToken",
      "jump": "o",
      "offset": [
        4548,
        5770
      ],
      "op": "JUMP",
      "path": "39"
    },
    "6109": {
      "fn": "IsValidWithDate.extendExpiry",
      "offset": [
        917,
        1166
      ],
      "op": "JUMPDEST",
      "path": "36"
    },
    "6110": {
      "fn": "IsValidWithDate.extendExpiry",
      "offset": [
        1055,
        1077
      ],
      "op": "PUSH2",
      "path": "36",
      "statement": 70,
      "value": "0x17E7"
    },
    "6113": {
      "fn": "IsValidWithDate.extendExpiry",
      "offset": [
        1073,
        1077
      ],
      "op": "DUP2",
      "path": "36"
    },
    "6114": {
      "fn": "IsValidWithDate.extendExpiry",
      "offset": [
        1055,
        1070
      ],
      "op": "TIMESTAMP",
      "path": "36"
    },
    "6115": {
      "fn": "IsValidWithDate.extendExpiry",
      "offset": [
        1055,
        1077
      ],
      "op": "PUSH2",
      "path": "36",
      "value": "0x2CBE"
    },
    "6118": {
      "fn": "IsValidWithDate.extendExpiry",
      "jump": "i",
      "offset": [
        1055,
        1077
      ],
      "op": "JUMP",
      "path": "36"
    },
    "6119": {
      "fn": "IsValidWithDate.extendExpiry",
      "offset": [
        1055,
        1077
      ],
      "op": "JUMPDEST",
      "path": "36"
    },
    "6120": {
      "fn": "IsValidWithDate.extendExpiry",
      "offset": [
        1028,
        1043
      ],
      "op": "PUSH1",
      "path": "36",
      "value": "0x0"
    },
    "6122": {
      "fn": "IsValidWithDate.extendExpiry",
      "offset": [
        1028,
        1052
      ],
      "op": "DUP4",
      "path": "36"
    },
    "6123": {
      "fn": "IsValidWithDate.extendExpiry",
      "offset": [
        1028,
        1052
      ],
      "op": "DUP2",
      "path": "36"
    },
    "6124": {
      "fn": "IsValidWithDate.extendExpiry",
      "offset": [
        1028,
        1052
      ],
      "op": "MSTORE",
      "path": "36"
    },
    "6125": {
      "fn": "IsValidWithDate.extendExpiry",
      "offset": [
        1028,
        1052
      ],
      "op": "PUSH1",
      "path": "36",
      "value": "0x20"
    },
    "6127": {
      "fn": "IsValidWithDate.extendExpiry",
      "offset": [
        1028,
        1052
      ],
      "op": "DUP2",
      "path": "36"
    },
    "6128": {
      "fn": "IsValidWithDate.extendExpiry",
      "offset": [
        1028,
        1052
      ],
      "op": "DUP2",
      "path": "36"
    },
    "6129": {
      "fn": "IsValidWithDate.extendExpiry",
      "offset": [
        1028,
        1052
      ],
      "op": "MSTORE",
      "path": "36"
    },
    "6130": {
      "fn": "IsValidWithDate.extendExpiry",
      "offset": [
        1028,
        1052
      ],
      "op": "PUSH1",
      "path": "36",
      "value": "0x40"
    },
    "6132": {
      "fn": "IsValidWithDate.extendExpiry",
      "offset": [
        1028,
        1052
      ],
      "op": "SWAP2",
      "path": "36"
    },
    "6133": {
      "fn": "IsValidWithDate.extendExpiry",
      "offset": [
        1028,
        1052
      ],
      "op": "DUP3",
      "path": "36"
    },
    "6134": {
      "fn": "IsValidWithDate.extendExpiry",
      "offset": [
        1028,
        1052
      ],
      "op": "SWAP1",
      "path": "36"
    },
    "6135": {
      "fn": "IsValidWithDate.extendExpiry",
      "offset": [
        1028,
        1052
      ],
      "op": "KECCAK256",
      "path": "36"
    },
    "6136": {
      "fn": "IsValidWithDate.extendExpiry",
      "offset": [
        1028,
        1077
      ],
      "op": "SWAP3",
      "path": "36"
    },
    "6137": {
      "fn": "IsValidWithDate.extendExpiry",
      "offset": [
        1028,
        1077
      ],
      "op": "SWAP1",
      "path": "36"
    },
    "6138": {
      "fn": "IsValidWithDate.extendExpiry",
      "offset": [
        1028,
        1077
      ],
      "op": "SWAP3",
      "path": "36"
    },
    "6139": {
      "fn": "IsValidWithDate.extendExpiry",
      "offset": [
        1028,
        1077
      ],
      "op": "SSTORE",
      "path": "36"
    },
    "6140": {
      "fn": "IsValidWithDate.extendExpiry",
      "offset": [
        1136,
        1159
      ],
      "op": "DUP1",
      "path": "36",
      "statement": 71
    },
    "6141": {
      "fn": "IsValidWithDate.extendExpiry",
      "offset": [
        1136,
        1159
      ],
      "op": "MLOAD",
      "path": "36"
    },
    "6142": {
      "op": "DUP5"
    },
    "6143": {
      "op": "DUP2"
    },
    "6144": {
      "op": "MSTORE"
    },
    "6145": {
      "op": "SWAP2"
    },
    "6146": {
      "op": "DUP3"
    },
    "6147": {
      "op": "ADD"
    },
    "6148": {
      "op": "DUP4"
    },
    "6149": {
      "op": "SWAP1"
    },
    "6150": {
      "op": "MSTORE"
    },
    "6151": {
      "fn": "IsValidWithDate.extendExpiry",
      "offset": [
        1136,
        1159
      ],
      "op": "PUSH32",
      "path": "36",
      "value": "0x41A73BEB1018A8B63E0F451A8A4F483806142CF14BE45B1A58A23776A1E9B4BC"
    },
    "6184": {
      "fn": "IsValidWithDate.extendExpiry",
      "offset": [
        1136,
        1159
      ],
      "op": "SWAP2",
      "path": "36"
    },
    "6185": {
      "op": "ADD"
    },
    "6186": {
      "fn": "IsValidWithDate.extendExpiry",
      "offset": [
        1136,
        1159
      ],
      "op": "PUSH1",
      "path": "36",
      "value": "0x40"
    },
    "6188": {
      "fn": "IsValidWithDate.extendExpiry",
      "offset": [
        1136,
        1159
      ],
      "op": "MLOAD",
      "path": "36"
    },
    "6189": {
      "fn": "IsValidWithDate.extendExpiry",
      "offset": [
        1136,
        1159
      ],
      "op": "DUP1",
      "path": "36"
    },
    "6190": {
      "fn": "IsValidWithDate.extendExpiry",
      "offset": [
        1136,
        1159
      ],
      "op": "SWAP2",
      "path": "36"
    },
    "6191": {
      "fn": "IsValidWithDate.extendExpiry",
      "offset": [
        1136,
        1159
      ],
      "op": "SUB",
      "path": "36"
    },
    "6192": {
      "fn": "IsValidWithDate.extendExpiry",
      "offset": [
        1136,
        1159
      ],
      "op": "SWAP1",
      "path": "36"
    },
    "6193": {
      "fn": "IsValidWithDate.extendExpiry",
      "offset": [
        1136,
        1159
      ],
      "op": "LOG1",
      "path": "36"
    },
    "6194": {
      "fn": "IsValidWithDate.extendExpiry",
      "offset": [
        917,
        1166
      ],
      "op": "POP",
      "path": "36"
    },
    "6195": {
      "fn": "IsValidWithDate.extendExpiry",
      "offset": [
        917,
        1166
      ],
      "op": "POP",
      "path": "36"
    },
    "6196": {
      "fn": "IsValidWithDate.extendExpiry",
      "jump": "o",
      "offset": [
        917,
        1166
      ],
      "op": "JUMP",
      "path": "36"
    },
    "6197": {
      "fn": "ERC4973.tokenURI",
      "offset": [
        4994,
        5237
      ],
      "op": "JUMPDEST",
      "path": "41"
    },
    "6198": {
      "fn": "ERC4973.tokenURI",
      "offset": [
        5107,
        5120
      ],
      "op": "PUSH1",
      "path": "41",
      "value": "0x60"
    },
    "6200": {
      "fn": "ERC4973.tokenURI",
      "offset": [
        5144,
        5160
      ],
      "op": "PUSH2",
      "path": "41",
      "statement": 72,
      "value": "0x1840"
    },
    "6203": {
      "fn": "ERC4973.tokenURI",
      "offset": [
        5152,
        5159
      ],
      "op": "DUP3",
      "path": "41"
    },
    "6204": {
      "fn": "ERC4973.tokenURI",
      "offset": [
        5144,
        5151
      ],
      "op": "PUSH2",
      "path": "41",
      "value": "0x1F4F"
    },
    "6207": {
      "fn": "ERC4973.tokenURI",
      "jump": "i",
      "offset": [
        5144,
        5160
      ],
      "op": "JUMP",
      "path": "41"
    },
    "6208": {
      "branch": 168,
      "fn": "ERC4973.tokenURI",
      "offset": [
        5144,
        5160
      ],
      "op": "JUMPDEST",
      "path": "41"
    },
    "6209": {
      "fn": "ERC4973.tokenURI",
      "offset": [
        5136,
        5194
      ],
      "op": "PUSH2",
      "path": "41",
      "value": "0x188C"
    },
    "6212": {
      "branch": 168,
      "fn": "ERC4973.tokenURI",
      "offset": [
        5136,
        5194
      ],
      "op": "JUMPI",
      "path": "41"
    },
    "6213": {
      "fn": "ERC4973.tokenURI",
      "offset": [
        5136,
        5194
      ],
      "op": "PUSH1",
      "path": "41",
      "value": "0x40"
    },
    "6215": {
      "fn": "ERC4973.tokenURI",
      "offset": [
        5136,
        5194
      ],
      "op": "MLOAD",
      "path": "41"
    },
    "6216": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "6220": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "6222": {
      "op": "SHL"
    },
    "6223": {
      "fn": "ERC4973.tokenURI",
      "offset": [
        5136,
        5194
      ],
      "op": "DUP2",
      "path": "41"
    },
    "6224": {
      "fn": "ERC4973.tokenURI",
      "offset": [
        5136,
        5194
      ],
      "op": "MSTORE",
      "path": "41"
    },
    "6225": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "6227": {
      "fn": "ERC4973.tokenURI",
      "offset": [
        5136,
        5194
      ],
      "op": "PUSH1",
      "path": "41",
      "value": "0x4"
    },
    "6229": {
      "fn": "ERC4973.tokenURI",
      "offset": [
        5136,
        5194
      ],
      "op": "DUP3",
      "path": "41"
    },
    "6230": {
      "fn": "ERC4973.tokenURI",
      "offset": [
        5136,
        5194
      ],
      "op": "ADD",
      "path": "41"
    },
    "6231": {
      "op": "MSTORE"
    },
    "6232": {
      "op": "PUSH1",
      "value": "0x1D"
    },
    "6234": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "6236": {
      "op": "DUP3"
    },
    "6237": {
      "op": "ADD"
    },
    "6238": {
      "op": "MSTORE"
    },
    "6239": {
      "op": "PUSH32",
      "value": "0x746F6B656E5552493A20746F6B656E20646F65736E2774206578697374000000"
    },
    "6272": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "6274": {
      "op": "DUP3"
    },
    "6275": {
      "op": "ADD"
    },
    "6276": {
      "op": "MSTORE"
    },
    "6277": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "6279": {
      "op": "ADD"
    },
    "6280": {
      "fn": "ERC4973.tokenURI",
      "offset": [
        5136,
        5194
      ],
      "op": "PUSH2",
      "path": "41",
      "value": "0x6B1"
    },
    "6283": {
      "op": "JUMP"
    },
    "6284": {
      "fn": "ERC4973.tokenURI",
      "offset": [
        5136,
        5194
      ],
      "op": "JUMPDEST",
      "path": "41"
    },
    "6285": {
      "fn": "ERC4973.tokenURI",
      "offset": [
        5211,
        5230
      ],
      "op": "PUSH1",
      "path": "41",
      "statement": 73,
      "value": "0x0"
    },
    "6287": {
      "fn": "ERC4973.tokenURI",
      "offset": [
        5211,
        5230
      ],
      "op": "DUP3",
      "path": "41"
    },
    "6288": {
      "fn": "ERC4973.tokenURI",
      "offset": [
        5211,
        5230
      ],
      "op": "DUP2",
      "path": "41"
    },
    "6289": {
      "fn": "ERC4973.tokenURI",
      "offset": [
        5211,
        5230
      ],
      "op": "MSTORE",
      "path": "41"
    },
    "6290": {
      "fn": "ERC4973.tokenURI",
      "offset": [
        5211,
        5221
      ],
      "op": "PUSH1",
      "path": "41",
      "value": "0x4"
    },
    "6292": {
      "fn": "ERC4973.tokenURI",
      "offset": [
        5211,
        5230
      ],
      "op": "PUSH1",
      "path": "41",
      "value": "0x20"
    },
    "6294": {
      "fn": "ERC4973.tokenURI",
      "offset": [
        5211,
        5230
      ],
      "op": "MSTORE",
      "path": "41"
    },
    "6295": {
      "fn": "ERC4973.tokenURI",
      "offset": [
        5211,
        5230
      ],
      "op": "PUSH1",
      "path": "41",
      "value": "0x40"
    },
    "6297": {
      "fn": "ERC4973.tokenURI",
      "offset": [
        5211,
        5230
      ],
      "op": "SWAP1",
      "path": "41"
    },
    "6298": {
      "fn": "ERC4973.tokenURI",
      "offset": [
        5211,
        5230
      ],
      "op": "KECCAK256",
      "path": "41"
    },
    "6299": {
      "fn": "ERC4973.tokenURI",
      "offset": [
        5204,
        5230
      ],
      "op": "DUP1",
      "path": "41"
    },
    "6300": {
      "fn": "ERC4973.tokenURI",
      "offset": [
        5204,
        5230
      ],
      "op": "SLOAD",
      "path": "41"
    },
    "6301": {
      "fn": "ERC4973.tokenURI",
      "offset": [
        5204,
        5230
      ],
      "op": "PUSH2",
      "path": "41",
      "value": "0x18A5"
    },
    "6304": {
      "fn": "ERC4973.tokenURI",
      "offset": [
        5204,
        5230
      ],
      "op": "SWAP1",
      "path": "41"
    },
    "6305": {
      "fn": "ERC4973.tokenURI",
      "offset": [
        5204,
        5230
      ],
      "op": "PUSH2",
      "path": "41",
      "value": "0x2BC9"
    },
    "6308": {
      "fn": "ERC4973.tokenURI",
      "jump": "i",
      "offset": [
        5204,
        5230
      ],
      "op": "JUMP",
      "path": "41"
    },
    "6309": {
      "fn": "ERC4973.tokenURI",
      "offset": [
        5204,
        5230
      ],
      "op": "JUMPDEST",
      "path": "41"
    },
    "6310": {
      "fn": "ERC4973.tokenURI",
      "offset": [
        5204,
        5230
      ],
      "op": "DUP1",
      "path": "41"
    },
    "6311": {
      "fn": "ERC4973.tokenURI",
      "offset": [
        5204,
        5230
      ],
      "op": "PUSH1",
      "path": "41",
      "value": "0x1F"
    },
    "6313": {
      "fn": "ERC4973.tokenURI",
      "offset": [
        5204,
        5230
      ],
      "op": "ADD",
      "path": "41"
    },
    "6314": {
      "fn": "ERC4973.tokenURI",
      "offset": [
        5204,
        5230
      ],
      "op": "PUSH1",
      "path": "41",
      "value": "0x20"
    },
    "6316": {
      "fn": "ERC4973.tokenURI",
      "offset": [
        5204,
        5230
      ],
      "op": "DUP1",
      "path": "41"
    },
    "6317": {
      "fn": "ERC4973.tokenURI",
      "offset": [
        5204,
        5230
      ],
      "op": "SWAP2",
      "path": "41"
    },
    "6318": {
      "fn": "ERC4973.tokenURI",
      "offset": [
        5204,
        5230
      ],
      "op": "DIV",
      "path": "41"
    },
    "6319": {
      "fn": "ERC4973.tokenURI",
      "offset": [
        5204,
        5230
      ],
      "op": "MUL",
      "path": "41"
    },
    "6320": {
      "fn": "ERC4973.tokenURI",
      "offset": [
        5204,
        5230
      ],
      "op": "PUSH1",
      "path": "41",
      "value": "0x20"
    },
    "6322": {
      "fn": "ERC4973.tokenURI",
      "offset": [
        5204,
        5230
      ],
      "op": "ADD",
      "path": "41"
    },
    "6323": {
      "fn": "ERC4973.tokenURI",
      "offset": [
        5204,
        5230
      ],
      "op": "PUSH1",
      "path": "41",
      "value": "0x40"
    },
    "6325": {
      "fn": "ERC4973.tokenURI",
      "offset": [
        5204,
        5230
      ],
      "op": "MLOAD",
      "path": "41"
    },
    "6326": {
      "fn": "ERC4973.tokenURI",
      "offset": [
        5204,
        5230
      ],
      "op": "SWAP1",
      "path": "41"
    },
    "6327": {
      "fn": "ERC4973.tokenURI",
      "offset": [
        5204,
        5230
      ],
      "op": "DUP2",
      "path": "41"
    },
    "6328": {
      "fn": "ERC4973.tokenURI",
      "offset": [
        5204,
        5230
      ],
      "op": "ADD",
      "path": "41"
    },
    "6329": {
      "fn": "ERC4973.tokenURI",
      "offset": [
        5204,
        5230
      ],
      "op": "PUSH1",
      "path": "41",
      "value": "0x40"
    },
    "6331": {
      "fn": "ERC4973.tokenURI",
      "offset": [
        5204,
        5230
      ],
      "op": "MSTORE",
      "path": "41"
    },
    "6332": {
      "fn": "ERC4973.tokenURI",
      "offset": [
        5204,
        5230
      ],
      "op": "DUP1",
      "path": "41"
    },
    "6333": {
      "fn": "ERC4973.tokenURI",
      "offset": [
        5204,
        5230
      ],
      "op": "SWAP3",
      "path": "41"
    },
    "6334": {
      "fn": "ERC4973.tokenURI",
      "offset": [
        5204,
        5230
      ],
      "op": "SWAP2",
      "path": "41"
    },
    "6335": {
      "fn": "ERC4973.tokenURI",
      "offset": [
        5204,
        5230
      ],
      "op": "SWAP1",
      "path": "41"
    },
    "6336": {
      "fn": "ERC4973.tokenURI",
      "offset": [
        5204,
        5230
      ],
      "op": "DUP2",
      "path": "41"
    },
    "6337": {
      "fn": "ERC4973.tokenURI",
      "offset": [
        5204,
        5230
      ],
      "op": "DUP2",
      "path": "41"
    },
    "6338": {
      "fn": "ERC4973.tokenURI",
      "offset": [
        5204,
        5230
      ],
      "op": "MSTORE",
      "path": "41"
    },
    "6339": {
      "fn": "ERC4973.tokenURI",
      "offset": [
        5204,
        5230
      ],
      "op": "PUSH1",
      "path": "41",
      "value": "0x20"
    },
    "6341": {
      "fn": "ERC4973.tokenURI",
      "offset": [
        5204,
        5230
      ],
      "op": "ADD",
      "path": "41"
    },
    "6342": {
      "fn": "ERC4973.tokenURI",
      "offset": [
        5204,
        5230
      ],
      "op": "DUP3",
      "path": "41"
    },
    "6343": {
      "fn": "ERC4973.tokenURI",
      "offset": [
        5204,
        5230
      ],
      "op": "DUP1",
      "path": "41"
    },
    "6344": {
      "fn": "ERC4973.tokenURI",
      "offset": [
        5204,
        5230
      ],
      "op": "SLOAD",
      "path": "41"
    },
    "6345": {
      "fn": "ERC4973.tokenURI",
      "offset": [
        5204,
        5230
      ],
      "op": "PUSH2",
      "path": "41",
      "value": "0x18D1"
    },
    "6348": {
      "fn": "ERC4973.tokenURI",
      "offset": [
        5204,
        5230
      ],
      "op": "SWAP1",
      "path": "41"
    },
    "6349": {
      "fn": "ERC4973.tokenURI",
      "offset": [
        5204,
        5230
      ],
      "op": "PUSH2",
      "path": "41",
      "value": "0x2BC9"
    },
    "6352": {
      "fn": "ERC4973.tokenURI",
      "jump": "i",
      "offset": [
        5204,
        5230
      ],
      "op": "JUMP",
      "path": "41"
    },
    "6353": {
      "fn": "ERC4973.tokenURI",
      "offset": [
        5204,
        5230
      ],
      "op": "JUMPDEST",
      "path": "41"
    },
    "6354": {
      "fn": "ERC4973.tokenURI",
      "offset": [
        5204,
        5230
      ],
      "op": "DUP1",
      "path": "41"
    },
    "6355": {
      "fn": "ERC4973.tokenURI",
      "offset": [
        5204,
        5230
      ],
      "op": "ISZERO",
      "path": "41"
    },
    "6356": {
      "fn": "ERC4973.tokenURI",
      "offset": [
        5204,
        5230
      ],
      "op": "PUSH2",
      "path": "41",
      "value": "0x191E"
    },
    "6359": {
      "fn": "ERC4973.tokenURI",
      "offset": [
        5204,
        5230
      ],
      "op": "JUMPI",
      "path": "41"
    },
    "6360": {
      "fn": "ERC4973.tokenURI",
      "offset": [
        5204,
        5230
      ],
      "op": "DUP1",
      "path": "41"
    },
    "6361": {
      "fn": "ERC4973.tokenURI",
      "offset": [
        5204,
        5230
      ],
      "op": "PUSH1",
      "path": "41",
      "value": "0x1F"
    },
    "6363": {
      "fn": "ERC4973.tokenURI",
      "offset": [
        5204,
        5230
      ],
      "op": "LT",
      "path": "41"
    },
    "6364": {
      "fn": "ERC4973.tokenURI",
      "offset": [
        5204,
        5230
      ],
      "op": "PUSH2",
      "path": "41",
      "value": "0x18F3"
    },
    "6367": {
      "fn": "ERC4973.tokenURI",
      "offset": [
        5204,
        5230
      ],
      "op": "JUMPI",
      "path": "41"
    },
    "6368": {
      "fn": "ERC4973.tokenURI",
      "offset": [
        5204,
        5230
      ],
      "op": "PUSH2",
      "path": "41",
      "value": "0x100"
    },
    "6371": {
      "fn": "ERC4973.tokenURI",
      "offset": [
        5204,
        5230
      ],
      "op": "DUP1",
      "path": "41"
    },
    "6372": {
      "fn": "ERC4973.tokenURI",
      "offset": [
        5204,
        5230
      ],
      "op": "DUP4",
      "path": "41"
    },
    "6373": {
      "fn": "ERC4973.tokenURI",
      "offset": [
        5204,
        5230
      ],
      "op": "SLOAD",
      "path": "41"
    },
    "6374": {
      "fn": "ERC4973.tokenURI",
      "offset": [
        5204,
        5230
      ],
      "op": "DIV",
      "path": "41"
    },
    "6375": {
      "fn": "ERC4973.tokenURI",
      "offset": [
        5204,
        5230
      ],
      "op": "MUL",
      "path": "41"
    },
    "6376": {
      "fn": "ERC4973.tokenURI",
      "offset": [
        5204,
        5230
      ],
      "op": "DUP4",
      "path": "41"
    },
    "6377": {
      "fn": "ERC4973.tokenURI",
      "offset": [
        5204,
        5230
      ],
      "op": "MSTORE",
      "path": "41"
    },
    "6378": {
      "fn": "ERC4973.tokenURI",
      "offset": [
        5204,
        5230
      ],
      "op": "SWAP2",
      "path": "41"
    },
    "6379": {
      "fn": "ERC4973.tokenURI",
      "offset": [
        5204,
        5230
      ],
      "op": "PUSH1",
      "path": "41",
      "value": "0x20"
    },
    "6381": {
      "fn": "ERC4973.tokenURI",
      "offset": [
        5204,
        5230
      ],
      "op": "ADD",
      "path": "41"
    },
    "6382": {
      "fn": "ERC4973.tokenURI",
      "offset": [
        5204,
        5230
      ],
      "op": "SWAP2",
      "path": "41"
    },
    "6383": {
      "fn": "ERC4973.tokenURI",
      "offset": [
        5204,
        5230
      ],
      "op": "PUSH2",
      "path": "41",
      "value": "0x191E"
    },
    "6386": {
      "fn": "ERC4973.tokenURI",
      "offset": [
        5204,
        5230
      ],
      "op": "JUMP",
      "path": "41"
    },
    "6387": {
      "fn": "ERC4973.tokenURI",
      "offset": [
        5204,
        5230
      ],
      "op": "JUMPDEST",
      "path": "41"
    },
    "6388": {
      "fn": "ERC4973.tokenURI",
      "offset": [
        5204,
        5230
      ],
      "op": "DUP3",
      "path": "41"
    },
    "6389": {
      "fn": "ERC4973.tokenURI",
      "offset": [
        5204,
        5230
      ],
      "op": "ADD",
      "path": "41"
    },
    "6390": {
      "fn": "ERC4973.tokenURI",
      "offset": [
        5204,
        5230
      ],
      "op": "SWAP2",
      "path": "41"
    },
    "6391": {
      "fn": "ERC4973.tokenURI",
      "offset": [
        5204,
        5230
      ],
      "op": "SWAP1",
      "path": "41"
    },
    "6392": {
      "fn": "ERC4973.tokenURI",
      "offset": [
        5204,
        5230
      ],
      "op": "PUSH1",
      "path": "41",
      "value": "0x0"
    },
    "6394": {
      "fn": "ERC4973.tokenURI",
      "offset": [
        5204,
        5230
      ],
      "op": "MSTORE",
      "path": "41"
    },
    "6395": {
      "fn": "ERC4973.tokenURI",
      "offset": [
        5204,
        5230
      ],
      "op": "PUSH1",
      "path": "41",
      "value": "0x20"
    },
    "6397": {
      "fn": "ERC4973.tokenURI",
      "offset": [
        5204,
        5230
      ],
      "op": "PUSH1",
      "path": "41",
      "value": "0x0"
    },
    "6399": {
      "fn": "ERC4973.tokenURI",
      "offset": [
        5204,
        5230
      ],
      "op": "KECCAK256",
      "path": "41"
    },
    "6400": {
      "fn": "ERC4973.tokenURI",
      "offset": [
        5204,
        5230
      ],
      "op": "SWAP1",
      "path": "41"
    },
    "6401": {
      "fn": "ERC4973.tokenURI",
      "offset": [
        5204,
        5230
      ],
      "op": "JUMPDEST",
      "path": "41"
    },
    "6402": {
      "fn": "ERC4973.tokenURI",
      "offset": [
        5204,
        5230
      ],
      "op": "DUP2",
      "path": "41"
    },
    "6403": {
      "fn": "ERC4973.tokenURI",
      "offset": [
        5204,
        5230
      ],
      "op": "SLOAD",
      "path": "41"
    },
    "6404": {
      "fn": "ERC4973.tokenURI",
      "offset": [
        5204,
        5230
      ],
      "op": "DUP2",
      "path": "41"
    },
    "6405": {
      "fn": "ERC4973.tokenURI",
      "offset": [
        5204,
        5230
      ],
      "op": "MSTORE",
      "path": "41"
    },
    "6406": {
      "fn": "ERC4973.tokenURI",
      "offset": [
        5204,
        5230
      ],
      "op": "SWAP1",
      "path": "41"
    },
    "6407": {
      "fn": "ERC4973.tokenURI",
      "offset": [
        5204,
        5230
      ],
      "op": "PUSH1",
      "path": "41",
      "value": "0x1"
    },
    "6409": {
      "fn": "ERC4973.tokenURI",
      "offset": [
        5204,
        5230
      ],
      "op": "ADD",
      "path": "41"
    },
    "6410": {
      "fn": "ERC4973.tokenURI",
      "offset": [
        5204,
        5230
      ],
      "op": "SWAP1",
      "path": "41"
    },
    "6411": {
      "fn": "ERC4973.tokenURI",
      "offset": [
        5204,
        5230
      ],
      "op": "PUSH1",
      "path": "41",
      "value": "0x20"
    },
    "6413": {
      "fn": "ERC4973.tokenURI",
      "offset": [
        5204,
        5230
      ],
      "op": "ADD",
      "path": "41"
    },
    "6414": {
      "fn": "ERC4973.tokenURI",
      "offset": [
        5204,
        5230
      ],
      "op": "DUP1",
      "path": "41"
    },
    "6415": {
      "fn": "ERC4973.tokenURI",
      "offset": [
        5204,
        5230
      ],
      "op": "DUP4",
      "path": "41"
    },
    "6416": {
      "fn": "ERC4973.tokenURI",
      "offset": [
        5204,
        5230
      ],
      "op": "GT",
      "path": "41"
    },
    "6417": {
      "fn": "ERC4973.tokenURI",
      "offset": [
        5204,
        5230
      ],
      "op": "PUSH2",
      "path": "41",
      "value": "0x1901"
    },
    "6420": {
      "fn": "ERC4973.tokenURI",
      "offset": [
        5204,
        5230
      ],
      "op": "JUMPI",
      "path": "41"
    },
    "6421": {
      "fn": "ERC4973.tokenURI",
      "offset": [
        5204,
        5230
      ],
      "op": "DUP3",
      "path": "41"
    },
    "6422": {
      "fn": "ERC4973.tokenURI",
      "offset": [
        5204,
        5230
      ],
      "op": "SWAP1",
      "path": "41"
    },
    "6423": {
      "fn": "ERC4973.tokenURI",
      "offset": [
        5204,
        5230
      ],
      "op": "SUB",
      "path": "41"
    },
    "6424": {
      "fn": "ERC4973.tokenURI",
      "offset": [
        5204,
        5230
      ],
      "op": "PUSH1",
      "path": "41",
      "value": "0x1F"
    },
    "6426": {
      "fn": "ERC4973.tokenURI",
      "offset": [
        5204,
        5230
      ],
      "op": "AND",
      "path": "41"
    },
    "6427": {
      "fn": "ERC4973.tokenURI",
      "offset": [
        5204,
        5230
      ],
      "op": "DUP3",
      "path": "41"
    },
    "6428": {
      "fn": "ERC4973.tokenURI",
      "offset": [
        5204,
        5230
      ],
      "op": "ADD",
      "path": "41"
    },
    "6429": {
      "fn": "ERC4973.tokenURI",
      "offset": [
        5204,
        5230
      ],
      "op": "SWAP2",
      "path": "41"
    },
    "6430": {
      "fn": "ERC4973.tokenURI",
      "offset": [
        5204,
        5230
      ],
      "op": "JUMPDEST",
      "path": "41"
    },
    "6431": {
      "fn": "ERC4973.tokenURI",
      "offset": [
        5204,
        5230
      ],
      "op": "POP",
      "path": "41"
    },
    "6432": {
      "fn": "ERC4973.tokenURI",
      "offset": [
        5204,
        5230
      ],
      "op": "POP",
      "path": "41"
    },
    "6433": {
      "fn": "ERC4973.tokenURI",
      "offset": [
        5204,
        5230
      ],
      "op": "POP",
      "path": "41"
    },
    "6434": {
      "fn": "ERC4973.tokenURI",
      "offset": [
        5204,
        5230
      ],
      "op": "POP",
      "path": "41"
    },
    "6435": {
      "fn": "ERC4973.tokenURI",
      "offset": [
        5204,
        5230
      ],
      "op": "POP",
      "path": "41"
    },
    "6436": {
      "fn": "ERC4973.tokenURI",
      "offset": [
        5204,
        5230
      ],
      "op": "SWAP1",
      "path": "41"
    },
    "6437": {
      "fn": "ERC4973.tokenURI",
      "offset": [
        5204,
        5230
      ],
      "op": "POP",
      "path": "41"
    },
    "6438": {
      "fn": "ERC4973.tokenURI",
      "offset": [
        4994,
        5237
      ],
      "op": "SWAP2",
      "path": "41"
    },
    "6439": {
      "fn": "ERC4973.tokenURI",
      "offset": [
        4994,
        5237
      ],
      "op": "SWAP1",
      "path": "41"
    },
    "6440": {
      "fn": "ERC4973.tokenURI",
      "offset": [
        4994,
        5237
      ],
      "op": "POP",
      "path": "41"
    },
    "6441": {
      "fn": "ERC4973.tokenURI",
      "jump": "o",
      "offset": [
        4994,
        5237
      ],
      "op": "JUMP",
      "path": "41"
    },
    "6442": {
      "fn": "Soulbound._getBaseURI",
      "offset": [
        7425,
        7673
      ],
      "op": "JUMPDEST",
      "path": "37"
    },
    "6443": {
      "fn": "Soulbound._getBaseURI",
      "offset": [
        7469,
        7491
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0x60"
    },
    "6445": {
      "fn": "Soulbound._getBaseURI",
      "offset": [
        7567,
        7574
      ],
      "op": "PUSH1",
      "path": "37",
      "statement": 74,
      "value": "0x7"
    },
    "6447": {
      "fn": "Soulbound._getBaseURI",
      "offset": [
        7561,
        7582
      ],
      "op": "DUP1",
      "path": "37"
    },
    "6448": {
      "fn": "Soulbound._getBaseURI",
      "offset": [
        7561,
        7582
      ],
      "op": "SLOAD",
      "path": "37"
    },
    "6449": {
      "fn": "Soulbound._getBaseURI",
      "offset": [
        7561,
        7582
      ],
      "op": "PUSH2",
      "path": "37",
      "value": "0x1939"
    },
    "6452": {
      "fn": "Soulbound._getBaseURI",
      "offset": [
        7561,
        7582
      ],
      "op": "SWAP1",
      "path": "37"
    },
    "6453": {
      "fn": "Soulbound._getBaseURI",
      "offset": [
        7561,
        7582
      ],
      "op": "PUSH2",
      "path": "37",
      "value": "0x2BC9"
    },
    "6456": {
      "fn": "Soulbound._getBaseURI",
      "jump": "i",
      "offset": [
        7561,
        7582
      ],
      "op": "JUMP",
      "path": "37"
    },
    "6457": {
      "fn": "Soulbound._getBaseURI",
      "offset": [
        7561,
        7582
      ],
      "op": "JUMPDEST",
      "path": "37"
    },
    "6458": {
      "fn": "Soulbound._getBaseURI",
      "offset": [
        7561,
        7582
      ],
      "op": "SWAP1",
      "path": "37"
    },
    "6459": {
      "fn": "Soulbound._getBaseURI",
      "offset": [
        7561,
        7582
      ],
      "op": "POP",
      "path": "37"
    },
    "6460": {
      "fn": "Soulbound._getBaseURI",
      "offset": [
        7586,
        7587
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0x0"
    },
    "6462": {
      "branch": 172,
      "fn": "Soulbound._getBaseURI",
      "offset": [
        7561,
        7587
      ],
      "op": "SUB",
      "path": "37"
    },
    "6463": {
      "fn": "Soulbound._getBaseURI",
      "offset": [
        7553,
        7605
      ],
      "op": "PUSH2",
      "path": "37",
      "value": "0x197A"
    },
    "6466": {
      "branch": 172,
      "fn": "Soulbound._getBaseURI",
      "offset": [
        7553,
        7605
      ],
      "op": "JUMPI",
      "path": "37"
    },
    "6467": {
      "fn": "Soulbound._getBaseURI",
      "offset": [
        7553,
        7605
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0x40"
    },
    "6469": {
      "fn": "Soulbound._getBaseURI",
      "offset": [
        7553,
        7605
      ],
      "op": "MLOAD",
      "path": "37"
    },
    "6470": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "6474": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "6476": {
      "op": "SHL"
    },
    "6477": {
      "fn": "Soulbound._getBaseURI",
      "offset": [
        7553,
        7605
      ],
      "op": "DUP2",
      "path": "37"
    },
    "6478": {
      "fn": "Soulbound._getBaseURI",
      "offset": [
        7553,
        7605
      ],
      "op": "MSTORE",
      "path": "37"
    },
    "6479": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "6481": {
      "fn": "Soulbound._getBaseURI",
      "offset": [
        7553,
        7605
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0x4"
    },
    "6483": {
      "fn": "Soulbound._getBaseURI",
      "offset": [
        7553,
        7605
      ],
      "op": "DUP3",
      "path": "37"
    },
    "6484": {
      "fn": "Soulbound._getBaseURI",
      "offset": [
        7553,
        7605
      ],
      "op": "ADD",
      "path": "37"
    },
    "6485": {
      "op": "MSTORE"
    },
    "6486": {
      "op": "PUSH1",
      "value": "0xD"
    },
    "6488": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "6490": {
      "op": "DUP3"
    },
    "6491": {
      "op": "ADD"
    },
    "6492": {
      "op": "MSTORE"
    },
    "6493": {
      "op": "PUSH13",
      "value": "0x456D7074792062617365555249"
    },
    "6507": {
      "op": "PUSH1",
      "value": "0x98"
    },
    "6509": {
      "op": "SHL"
    },
    "6510": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "6512": {
      "op": "DUP3"
    },
    "6513": {
      "op": "ADD"
    },
    "6514": {
      "op": "MSTORE"
    },
    "6515": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "6517": {
      "op": "ADD"
    },
    "6518": {
      "fn": "Soulbound._getBaseURI",
      "offset": [
        7553,
        7605
      ],
      "op": "PUSH2",
      "path": "37",
      "value": "0x6B1"
    },
    "6521": {
      "op": "JUMP"
    },
    "6522": {
      "fn": "Soulbound._getBaseURI",
      "offset": [
        7553,
        7605
      ],
      "op": "JUMPDEST",
      "path": "37"
    },
    "6523": {
      "fn": "Soulbound._getBaseURI",
      "offset": [
        7659,
        7666
      ],
      "op": "PUSH1",
      "path": "37",
      "statement": 75,
      "value": "0x7"
    },
    "6525": {
      "fn": "Soulbound._getBaseURI",
      "offset": [
        7648,
        7666
      ],
      "op": "DUP1",
      "path": "37"
    },
    "6526": {
      "fn": "Soulbound._getBaseURI",
      "offset": [
        7648,
        7666
      ],
      "op": "SLOAD",
      "path": "37"
    },
    "6527": {
      "fn": "Soulbound._getBaseURI",
      "offset": [
        7648,
        7666
      ],
      "op": "PUSH2",
      "path": "37",
      "value": "0x7B7"
    },
    "6530": {
      "fn": "Soulbound._getBaseURI",
      "offset": [
        7648,
        7666
      ],
      "op": "SWAP1",
      "path": "37"
    },
    "6531": {
      "fn": "Soulbound._getBaseURI",
      "offset": [
        7648,
        7666
      ],
      "op": "PUSH2",
      "path": "37",
      "value": "0x2BC9"
    },
    "6534": {
      "fn": "Soulbound._getBaseURI",
      "jump": "i",
      "offset": [
        7648,
        7666
      ],
      "op": "JUMP",
      "path": "37"
    },
    "6535": {
      "fn": "SoulboundCore.issueWithSignature",
      "offset": [
        2807,
        3801
      ],
      "op": "JUMPDEST",
      "path": "38"
    },
    "6536": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6538": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6540": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "6542": {
      "op": "SHL"
    },
    "6543": {
      "op": "SUB"
    },
    "6544": {
      "fn": "SoulboundCore.issueWithSignature",
      "offset": [
        3058,
        3076
      ],
      "op": "DUP6",
      "path": "38",
      "statement": 76
    },
    "6545": {
      "branch": 187,
      "fn": "SoulboundCore.issueWithSignature",
      "offset": [
        3058,
        3076
      ],
      "op": "AND",
      "path": "38"
    },
    "6546": {
      "fn": "SoulboundCore.issueWithSignature",
      "offset": [
        3050,
        3102
      ],
      "op": "PUSH2",
      "path": "38",
      "value": "0x19AD"
    },
    "6549": {
      "branch": 187,
      "fn": "SoulboundCore.issueWithSignature",
      "offset": [
        3050,
        3102
      ],
      "op": "JUMPI",
      "path": "38"
    },
    "6550": {
      "fn": "SoulboundCore.issueWithSignature",
      "offset": [
        3050,
        3102
      ],
      "op": "PUSH1",
      "path": "38",
      "value": "0x40"
    },
    "6552": {
      "fn": "SoulboundCore.issueWithSignature",
      "offset": [
        3050,
        3102
      ],
      "op": "MLOAD",
      "path": "38"
    },
    "6553": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "6557": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "6559": {
      "op": "SHL"
    },
    "6560": {
      "fn": "SoulboundCore.issueWithSignature",
      "offset": [
        3050,
        3102
      ],
      "op": "DUP2",
      "path": "38"
    },
    "6561": {
      "fn": "SoulboundCore.issueWithSignature",
      "offset": [
        3050,
        3102
      ],
      "op": "MSTORE",
      "path": "38"
    },
    "6562": {
      "fn": "SoulboundCore.issueWithSignature",
      "offset": [
        3050,
        3102
      ],
      "op": "PUSH1",
      "path": "38",
      "value": "0x4"
    },
    "6564": {
      "fn": "SoulboundCore.issueWithSignature",
      "offset": [
        3050,
        3102
      ],
      "op": "ADD",
      "path": "38"
    },
    "6565": {
      "fn": "SoulboundCore.issueWithSignature",
      "offset": [
        3050,
        3102
      ],
      "op": "PUSH2",
      "path": "38",
      "value": "0x6B1"
    },
    "6568": {
      "fn": "SoulboundCore.issueWithSignature",
      "offset": [
        3050,
        3102
      ],
      "op": "SWAP1",
      "path": "38"
    },
    "6569": {
      "fn": "SoulboundCore.issueWithSignature",
      "offset": [
        3050,
        3102
      ],
      "op": "PUSH2",
      "path": "38",
      "value": "0x2C5F"
    },
    "6572": {
      "fn": "SoulboundCore.issueWithSignature",
      "jump": "i",
      "offset": [
        3050,
        3102
      ],
      "op": "JUMP",
      "path": "38"
    },
    "6573": {
      "fn": "SoulboundCore.issueWithSignature",
      "offset": [
        3050,
        3102
      ],
      "op": "JUMPDEST",
      "path": "38"
    },
    "6574": {
      "fn": "SoulboundCore.issueWithSignature",
      "offset": [
        3337,
        3340
      ],
      "op": "DUP3",
      "path": "38",
      "statement": 77
    },
    "6575": {
      "fn": "SoulboundCore.issueWithSignature",
      "offset": [
        3337,
        3347
      ],
      "op": "MLOAD",
      "path": "38"
    },
    "6576": {
      "fn": "SoulboundCore.issueWithSignature",
      "offset": [
        3351,
        3353
      ],
      "op": "PUSH1",
      "path": "38",
      "value": "0x41"
    },
    "6578": {
      "branch": 188,
      "fn": "SoulboundCore.issueWithSignature",
      "offset": [
        3337,
        3353
      ],
      "op": "EQ",
      "path": "38"
    },
    "6579": {
      "fn": "SoulboundCore.issueWithSignature",
      "offset": [
        3329,
        3382
      ],
      "op": "PUSH2",
      "path": "38",
      "value": "0x19F9"
    },
    "6582": {
      "branch": 188,
      "fn": "SoulboundCore.issueWithSignature",
      "offset": [
        3329,
        3382
      ],
      "op": "JUMPI",
      "path": "38"
    },
    "6583": {
      "fn": "SoulboundCore.issueWithSignature",
      "offset": [
        3329,
        3382
      ],
      "op": "PUSH1",
      "path": "38",
      "value": "0x40"
    },
    "6585": {
      "fn": "SoulboundCore.issueWithSignature",
      "offset": [
        3329,
        3382
      ],
      "op": "MLOAD",
      "path": "38"
    },
    "6586": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "6590": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "6592": {
      "op": "SHL"
    },
    "6593": {
      "fn": "SoulboundCore.issueWithSignature",
      "offset": [
        3329,
        3382
      ],
      "op": "DUP2",
      "path": "38"
    },
    "6594": {
      "fn": "SoulboundCore.issueWithSignature",
      "offset": [
        3329,
        3382
      ],
      "op": "MSTORE",
      "path": "38"
    },
    "6595": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "6597": {
      "fn": "SoulboundCore.issueWithSignature",
      "offset": [
        3329,
        3382
      ],
      "op": "PUSH1",
      "path": "38",
      "value": "0x4"
    },
    "6599": {
      "fn": "SoulboundCore.issueWithSignature",
      "offset": [
        3329,
        3382
      ],
      "op": "DUP3",
      "path": "38"
    },
    "6600": {
      "fn": "SoulboundCore.issueWithSignature",
      "offset": [
        3329,
        3382
      ],
      "op": "ADD",
      "path": "38"
    },
    "6601": {
      "op": "MSTORE"
    },
    "6602": {
      "op": "PUSH1",
      "value": "0x18"
    },
    "6604": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "6606": {
      "op": "DUP3"
    },
    "6607": {
      "op": "ADD"
    },
    "6608": {
      "op": "MSTORE"
    },
    "6609": {
      "op": "PUSH24",
      "value": "0x92DCECC2D8D2C840E6D2CEDCC2E8EAE4CA40D8CADCCEE8D"
    },
    "6634": {
      "op": "PUSH1",
      "value": "0x43"
    },
    "6636": {
      "op": "SHL"
    },
    "6637": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "6639": {
      "op": "DUP3"
    },
    "6640": {
      "op": "ADD"
    },
    "6641": {
      "op": "MSTORE"
    },
    "6642": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "6644": {
      "op": "ADD"
    },
    "6645": {
      "fn": "SoulboundCore.issueWithSignature",
      "offset": [
        3329,
        3382
      ],
      "op": "PUSH2",
      "path": "38",
      "value": "0x6B1"
    },
    "6648": {
      "op": "JUMP"
    },
    "6649": {
      "fn": "SoulboundCore.issueWithSignature",
      "offset": [
        3329,
        3382
      ],
      "op": "JUMPDEST",
      "path": "38"
    },
    "6650": {
      "fn": "SoulboundCore.issueWithSignature",
      "offset": [
        3509,
        3535
      ],
      "op": "PUSH2",
      "path": "38",
      "statement": 78,
      "value": "0x1A03"
    },
    "6653": {
      "fn": "SoulboundCore.issueWithSignature",
      "offset": [
        3525,
        3529
      ],
      "op": "DUP5",
      "path": "38"
    },
    "6654": {
      "fn": "SoulboundCore.issueWithSignature",
      "offset": [
        3531,
        3534
      ],
      "op": "DUP5",
      "path": "38"
    },
    "6655": {
      "fn": "SoulboundCore.issueWithSignature",
      "offset": [
        3509,
        3524
      ],
      "op": "PUSH2",
      "path": "38",
      "value": "0x1A94"
    },
    "6658": {
      "fn": "SoulboundCore.issueWithSignature",
      "jump": "i",
      "offset": [
        3509,
        3535
      ],
      "op": "JUMP",
      "path": "38"
    },
    "6659": {
      "branch": 189,
      "fn": "SoulboundCore.issueWithSignature",
      "offset": [
        3509,
        3535
      ],
      "op": "JUMPDEST",
      "path": "38"
    },
    "6660": {
      "fn": "SoulboundCore.issueWithSignature",
      "offset": [
        3501,
        3565
      ],
      "op": "PUSH2",
      "path": "38",
      "value": "0x1A4B"
    },
    "6663": {
      "branch": 189,
      "fn": "SoulboundCore.issueWithSignature",
      "offset": [
        3501,
        3565
      ],
      "op": "JUMPI",
      "path": "38"
    },
    "6664": {
      "fn": "SoulboundCore.issueWithSignature",
      "offset": [
        3501,
        3565
      ],
      "op": "PUSH1",
      "path": "38",
      "value": "0x40"
    },
    "6666": {
      "fn": "SoulboundCore.issueWithSignature",
      "offset": [
        3501,
        3565
      ],
      "op": "MLOAD",
      "path": "38"
    },
    "6667": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "6671": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "6673": {
      "op": "SHL"
    },
    "6674": {
      "fn": "SoulboundCore.issueWithSignature",
      "offset": [
        3501,
        3565
      ],
      "op": "DUP2",
      "path": "38"
    },
    "6675": {
      "fn": "SoulboundCore.issueWithSignature",
      "offset": [
        3501,
        3565
      ],
      "op": "MSTORE",
      "path": "38"
    },
    "6676": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "6678": {
      "fn": "SoulboundCore.issueWithSignature",
      "offset": [
        3501,
        3565
      ],
      "op": "PUSH1",
      "path": "38",
      "value": "0x4"
    },
    "6680": {
      "fn": "SoulboundCore.issueWithSignature",
      "offset": [
        3501,
        3565
      ],
      "op": "DUP3",
      "path": "38"
    },
    "6681": {
      "fn": "SoulboundCore.issueWithSignature",
      "offset": [
        3501,
        3565
      ],
      "op": "ADD",
      "path": "38"
    },
    "6682": {
      "op": "MSTORE"
    },
    "6683": {
      "op": "PUSH1",
      "value": "0x19"
    },
    "6685": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "6687": {
      "op": "DUP3"
    },
    "6688": {
      "op": "ADD"
    },
    "6689": {
      "op": "MSTORE"
    },
    "6690": {
      "op": "PUSH25",
      "value": "0x2430B9B4103737BA1039B4B3B732B210313C9037BBB732B917"
    },
    "6716": {
      "op": "PUSH1",
      "value": "0x39"
    },
    "6718": {
      "op": "SHL"
    },
    "6719": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "6721": {
      "op": "DUP3"
    },
    "6722": {
      "op": "ADD"
    },
    "6723": {
      "op": "MSTORE"
    },
    "6724": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "6726": {
      "op": "ADD"
    },
    "6727": {
      "fn": "SoulboundCore.issueWithSignature",
      "offset": [
        3501,
        3565
      ],
      "op": "PUSH2",
      "path": "38",
      "value": "0x6B1"
    },
    "6730": {
      "op": "JUMP"
    },
    "6731": {
      "fn": "SoulboundCore.issueWithSignature",
      "offset": [
        3501,
        3565
      ],
      "op": "JUMPDEST",
      "path": "38"
    },
    "6732": {
      "fn": "SoulboundCore.issueWithSignature",
      "offset": [
        3664,
        3694
      ],
      "op": "PUSH2",
      "path": "38",
      "statement": 79,
      "value": "0x1A56"
    },
    "6735": {
      "fn": "SoulboundCore.issueWithSignature",
      "offset": [
        3670,
        3674
      ],
      "op": "DUP6",
      "path": "38"
    },
    "6736": {
      "fn": "SoulboundCore.issueWithSignature",
      "offset": [
        3676,
        3683
      ],
      "op": "DUP4",
      "path": "38"
    },
    "6737": {
      "fn": "SoulboundCore.issueWithSignature",
      "offset": [
        3685,
        3693
      ],
      "op": "DUP4",
      "path": "38"
    },
    "6738": {
      "fn": "SoulboundCore.issueWithSignature",
      "offset": [
        3664,
        3669
      ],
      "op": "PUSH2",
      "path": "38",
      "value": "0x213D"
    },
    "6741": {
      "fn": "SoulboundCore.issueWithSignature",
      "jump": "i",
      "offset": [
        3664,
        3694
      ],
      "op": "JUMP",
      "path": "38"
    },
    "6742": {
      "fn": "SoulboundCore.issueWithSignature",
      "offset": [
        3664,
        3694
      ],
      "op": "JUMPDEST",
      "path": "38"
    },
    "6743": {
      "op": "POP"
    },
    "6744": {
      "fn": "SoulboundCore.issueWithSignature",
      "offset": [
        3761,
        3794
      ],
      "op": "PUSH1",
      "path": "38",
      "statement": 80,
      "value": "0x40"
    },
    "6746": {
      "fn": "SoulboundCore.issueWithSignature",
      "offset": [
        3761,
        3794
      ],
      "op": "MLOAD",
      "path": "38"
    },
    "6747": {
      "fn": "SoulboundCore.issueWithSignature",
      "offset": [
        3786,
        3793
      ],
      "op": "DUP3",
      "path": "38"
    },
    "6748": {
      "fn": "SoulboundCore.issueWithSignature",
      "offset": [
        3786,
        3793
      ],
      "op": "SWAP1",
      "path": "38"
    },
    "6749": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6751": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6753": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "6755": {
      "op": "SHL"
    },
    "6756": {
      "op": "SUB"
    },
    "6757": {
      "fn": "SoulboundCore.issueWithSignature",
      "offset": [
        3761,
        3794
      ],
      "op": "DUP8",
      "path": "38"
    },
    "6758": {
      "fn": "SoulboundCore.issueWithSignature",
      "offset": [
        3761,
        3794
      ],
      "op": "AND",
      "path": "38"
    },
    "6759": {
      "fn": "SoulboundCore.issueWithSignature",
      "offset": [
        3761,
        3794
      ],
      "op": "SWAP1",
      "path": "38"
    },
    "6760": {
      "fn": "SoulboundCore.issueWithSignature",
      "offset": [
        3761,
        3794
      ],
      "op": "PUSH32",
      "path": "38",
      "value": "0x79AF0E59B31823DD289CEEBABC4D63D25F35926B8548E3A084A500C9D4E18556"
    },
    "6793": {
      "fn": "SoulboundCore.issueWithSignature",
      "offset": [
        3761,
        3794
      ],
      "op": "SWAP1",
      "path": "38"
    },
    "6794": {
      "fn": "SoulboundCore.issueWithSignature",
      "offset": [
        3761,
        3794
      ],
      "op": "PUSH1",
      "path": "38",
      "value": "0x0"
    },
    "6796": {
      "fn": "SoulboundCore.issueWithSignature",
      "offset": [
        3761,
        3794
      ],
      "op": "SWAP1",
      "path": "38"
    },
    "6797": {
      "fn": "SoulboundCore.issueWithSignature",
      "offset": [
        3761,
        3794
      ],
      "op": "LOG3",
      "path": "38"
    },
    "6798": {
      "fn": "SoulboundCore.issueWithSignature",
      "offset": [
        2807,
        3801
      ],
      "op": "POP",
      "path": "38"
    },
    "6799": {
      "fn": "SoulboundCore.issueWithSignature",
      "offset": [
        2807,
        3801
      ],
      "op": "POP",
      "path": "38"
    },
    "6800": {
      "fn": "SoulboundCore.issueWithSignature",
      "offset": [
        2807,
        3801
      ],
      "op": "POP",
      "path": "38"
    },
    "6801": {
      "fn": "SoulboundCore.issueWithSignature",
      "offset": [
        2807,
        3801
      ],
      "op": "POP",
      "path": "38"
    },
    "6802": {
      "fn": "SoulboundCore.issueWithSignature",
      "offset": [
        2807,
        3801
      ],
      "op": "POP",
      "path": "38"
    },
    "6803": {
      "fn": "SoulboundCore.issueWithSignature",
      "jump": "o",
      "offset": [
        2807,
        3801
      ],
      "op": "JUMP",
      "path": "38"
    },
    "6804": {
      "fn": "Allowlist.verifySignature",
      "offset": [
        2495,
        2645
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "6805": {
      "fn": "Allowlist.verifySignature",
      "offset": [
        2584,
        2588
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x0"
    },
    "6807": {
      "fn": "Allowlist.verifySignature",
      "offset": [
        2611,
        2638
      ],
      "op": "PUSH2",
      "path": "14",
      "statement": 81,
      "value": "0x1AA0"
    },
    "6810": {
      "fn": "Allowlist.verifySignature",
      "offset": [
        2628,
        2632
      ],
      "op": "DUP4",
      "path": "14"
    },
    "6811": {
      "fn": "Allowlist.verifySignature",
      "offset": [
        2634,
        2637
      ],
      "op": "DUP4",
      "path": "14"
    },
    "6812": {
      "fn": "Allowlist.verifySignature",
      "offset": [
        2611,
        2627
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x22DB"
    },
    "6815": {
      "fn": "Allowlist.verifySignature",
      "jump": "i",
      "offset": [
        2611,
        2638
      ],
      "op": "JUMP",
      "path": "14"
    },
    "6816": {
      "fn": "Allowlist.verifySignature",
      "offset": [
        2611,
        2638
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "6817": {
      "fn": "Allowlist.verifySignature",
      "offset": [
        2604,
        2638
      ],
      "op": "SWAP4",
      "path": "14"
    },
    "6818": {
      "fn": "Allowlist.verifySignature",
      "offset": [
        2495,
        2645
      ],
      "op": "SWAP3",
      "path": "14"
    },
    "6819": {
      "op": "POP"
    },
    "6820": {
      "op": "POP"
    },
    "6821": {
      "op": "POP"
    },
    "6822": {
      "fn": "Allowlist.verifySignature",
      "jump": "o",
      "offset": [
        2495,
        2645
      ],
      "op": "JUMP",
      "path": "14"
    },
    "6823": {
      "fn": "IsValidWithDate.getTimeLeft",
      "offset": [
        2069,
        2517
      ],
      "op": "JUMPDEST",
      "path": "36"
    },
    "6824": {
      "fn": "IsValidWithDate.getTimeLeft",
      "offset": [
        2128,
        2135
      ],
      "op": "PUSH1",
      "path": "36",
      "value": "0x0"
    },
    "6826": {
      "fn": "IsValidWithDate.getExpiryDate",
      "offset": [
        1459,
        1483
      ],
      "op": "DUP2",
      "path": "36"
    },
    "6827": {
      "fn": "IsValidWithDate.getExpiryDate",
      "offset": [
        1459,
        1483
      ],
      "op": "DUP2",
      "path": "36"
    },
    "6828": {
      "fn": "IsValidWithDate.getExpiryDate",
      "offset": [
        1459,
        1483
      ],
      "op": "MSTORE",
      "path": "36"
    },
    "6829": {
      "fn": "IsValidWithDate.getExpiryDate",
      "offset": [
        1459,
        1483
      ],
      "op": "PUSH1",
      "path": "36",
      "value": "0x20"
    },
    "6831": {
      "fn": "IsValidWithDate.getExpiryDate",
      "offset": [
        1459,
        1483
      ],
      "op": "DUP2",
      "path": "36"
    },
    "6832": {
      "fn": "IsValidWithDate.getExpiryDate",
      "offset": [
        1459,
        1483
      ],
      "op": "SWAP1",
      "path": "36"
    },
    "6833": {
      "fn": "IsValidWithDate.getExpiryDate",
      "offset": [
        1459,
        1483
      ],
      "op": "MSTORE",
      "path": "36"
    },
    "6834": {
      "fn": "IsValidWithDate.getExpiryDate",
      "offset": [
        1459,
        1483
      ],
      "op": "PUSH1",
      "path": "36",
      "value": "0x40"
    },
    "6836": {
      "fn": "IsValidWithDate.getExpiryDate",
      "offset": [
        1459,
        1483
      ],
      "op": "DUP2",
      "path": "36"
    },
    "6837": {
      "fn": "IsValidWithDate.getExpiryDate",
      "offset": [
        1459,
        1483
      ],
      "op": "KECCAK256",
      "path": "36"
    },
    "6838": {
      "fn": "IsValidWithDate.getExpiryDate",
      "offset": [
        1459,
        1483
      ],
      "op": "SLOAD",
      "path": "36"
    },
    "6839": {
      "fn": "IsValidWithDate.getTimeLeft",
      "offset": [
        2255,
        2270
      ],
      "op": "TIMESTAMP",
      "path": "36"
    },
    "6840": {
      "branch": 170,
      "fn": "IsValidWithDate.getTimeLeft",
      "offset": [
        2255,
        2295
      ],
      "op": "GT",
      "path": "36"
    },
    "6841": {
      "fn": "IsValidWithDate.getTimeLeft",
      "offset": [
        2251,
        2511
      ],
      "op": "ISZERO",
      "path": "36"
    },
    "6842": {
      "fn": "IsValidWithDate.getTimeLeft",
      "offset": [
        2251,
        2511
      ],
      "op": "PUSH2",
      "path": "36",
      "value": "0x1AC5"
    },
    "6845": {
      "branch": 170,
      "fn": "IsValidWithDate.getTimeLeft",
      "offset": [
        2251,
        2511
      ],
      "op": "JUMPI",
      "path": "36"
    },
    "6846": {
      "op": "POP"
    },
    "6847": {
      "fn": "IsValidWithDate.getTimeLeft",
      "offset": [
        2349,
        2350
      ],
      "op": "PUSH1",
      "path": "36",
      "statement": 82,
      "value": "0x0"
    },
    "6849": {
      "fn": "IsValidWithDate.getTimeLeft",
      "offset": [
        2349,
        2350
      ],
      "op": "SWAP2",
      "path": "36"
    },
    "6850": {
      "fn": "IsValidWithDate.getTimeLeft",
      "offset": [
        2069,
        2517
      ],
      "op": "SWAP1",
      "path": "36"
    },
    "6851": {
      "op": "POP"
    },
    "6852": {
      "fn": "IsValidWithDate.getTimeLeft",
      "jump": "o",
      "offset": [
        2069,
        2517
      ],
      "op": "JUMP",
      "path": "36"
    },
    "6853": {
      "fn": "IsValidWithDate.getTimeLeft",
      "offset": [
        2251,
        2511
      ],
      "op": "JUMPDEST",
      "path": "36"
    },
    "6854": {
      "fn": "IsValidWithDate.getExpiryDate",
      "offset": [
        1433,
        1440
      ],
      "op": "PUSH1",
      "path": "36",
      "value": "0x0"
    },
    "6856": {
      "fn": "IsValidWithDate.getExpiryDate",
      "offset": [
        1459,
        1483
      ],
      "op": "DUP3",
      "path": "36"
    },
    "6857": {
      "fn": "IsValidWithDate.getExpiryDate",
      "offset": [
        1459,
        1483
      ],
      "op": "DUP2",
      "path": "36"
    },
    "6858": {
      "fn": "IsValidWithDate.getExpiryDate",
      "offset": [
        1459,
        1483
      ],
      "op": "MSTORE",
      "path": "36"
    },
    "6859": {
      "fn": "IsValidWithDate.getExpiryDate",
      "offset": [
        1459,
        1483
      ],
      "op": "PUSH1",
      "path": "36",
      "value": "0x20"
    },
    "6861": {
      "fn": "IsValidWithDate.getExpiryDate",
      "offset": [
        1459,
        1483
      ],
      "op": "DUP2",
      "path": "36"
    },
    "6862": {
      "fn": "IsValidWithDate.getExpiryDate",
      "offset": [
        1459,
        1483
      ],
      "op": "SWAP1",
      "path": "36"
    },
    "6863": {
      "fn": "IsValidWithDate.getExpiryDate",
      "offset": [
        1459,
        1483
      ],
      "op": "MSTORE",
      "path": "36"
    },
    "6864": {
      "fn": "IsValidWithDate.getExpiryDate",
      "offset": [
        1459,
        1483
      ],
      "op": "PUSH1",
      "path": "36",
      "value": "0x40"
    },
    "6866": {
      "fn": "IsValidWithDate.getExpiryDate",
      "offset": [
        1459,
        1483
      ],
      "op": "SWAP1",
      "path": "36"
    },
    "6867": {
      "fn": "IsValidWithDate.getExpiryDate",
      "offset": [
        1459,
        1483
      ],
      "op": "KECCAK256",
      "path": "36"
    },
    "6868": {
      "fn": "IsValidWithDate.getExpiryDate",
      "offset": [
        1459,
        1483
      ],
      "op": "SLOAD",
      "path": "36"
    },
    "6869": {
      "fn": "IsValidWithDate.getTimeLeft",
      "offset": [
        2460,
        2500
      ],
      "op": "PUSH2",
      "path": "36",
      "statement": 83,
      "value": "0x7A2"
    },
    "6872": {
      "fn": "IsValidWithDate.getTimeLeft",
      "offset": [
        2460,
        2500
      ],
      "op": "SWAP1",
      "path": "36"
    },
    "6873": {
      "fn": "IsValidWithDate.getTimeLeft",
      "offset": [
        2485,
        2500
      ],
      "op": "TIMESTAMP",
      "path": "36"
    },
    "6874": {
      "fn": "IsValidWithDate.getTimeLeft",
      "offset": [
        2485,
        2500
      ],
      "op": "SWAP1",
      "path": "36"
    },
    "6875": {
      "fn": "IsValidWithDate.getTimeLeft",
      "offset": [
        2460,
        2500
      ],
      "op": "PUSH2",
      "path": "36",
      "value": "0x2C8E"
    },
    "6878": {
      "fn": "IsValidWithDate.getTimeLeft",
      "jump": "i",
      "offset": [
        2460,
        2500
      ],
      "op": "JUMP",
      "path": "36"
    },
    "6879": {
      "fn": "IsValidWithDate.getTimeLeft",
      "offset": [
        2251,
        2511
      ],
      "op": "JUMPDEST",
      "path": "36"
    },
    "6880": {
      "fn": "IsValidWithDate.getTimeLeft",
      "offset": [
        2069,
        2517
      ],
      "op": "SWAP2",
      "path": "36"
    },
    "6881": {
      "fn": "IsValidWithDate.getTimeLeft",
      "offset": [
        2069,
        2517
      ],
      "op": "SWAP1",
      "path": "36"
    },
    "6882": {
      "fn": "IsValidWithDate.getTimeLeft",
      "offset": [
        2069,
        2517
      ],
      "op": "POP",
      "path": "36"
    },
    "6883": {
      "fn": "IsValidWithDate.getTimeLeft",
      "jump": "o",
      "offset": [
        2069,
        2517
      ],
      "op": "JUMP",
      "path": "36"
    },
    "6884": {
      "fn": "Allowlist.verifySigner",
      "offset": [
        4852,
        5120
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "6885": {
      "fn": "Allowlist.splitSignature",
      "offset": [
        6067,
        6069
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x20"
    },
    "6887": {
      "fn": "Allowlist.splitSignature",
      "offset": [
        6058,
        6070
      ],
      "op": "DUP2",
      "path": "14"
    },
    "6888": {
      "fn": "Allowlist.splitSignature",
      "offset": [
        6058,
        6070
      ],
      "op": "DUP2",
      "path": "14"
    },
    "6889": {
      "fn": "Allowlist.splitSignature",
      "offset": [
        6058,
        6070
      ],
      "op": "ADD",
      "path": "14"
    },
    "6890": {
      "fn": "Allowlist.splitSignature",
      "offset": [
        6052,
        6071
      ],
      "op": "MLOAD",
      "path": "14"
    },
    "6891": {
      "fn": "Allowlist.splitSignature",
      "offset": [
        6142,
        6144
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x40"
    },
    "6893": {
      "fn": "Allowlist.splitSignature",
      "offset": [
        6133,
        6145
      ],
      "op": "DUP1",
      "path": "14"
    },
    "6894": {
      "fn": "Allowlist.splitSignature",
      "offset": [
        6133,
        6145
      ],
      "op": "DUP5",
      "path": "14"
    },
    "6895": {
      "fn": "Allowlist.splitSignature",
      "offset": [
        6133,
        6145
      ],
      "op": "ADD",
      "path": "14"
    },
    "6896": {
      "fn": "Allowlist.splitSignature",
      "offset": [
        6127,
        6146
      ],
      "op": "MLOAD",
      "path": "14"
    },
    "6897": {
      "fn": "Allowlist.splitSignature",
      "offset": [
        6254,
        6256
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x60"
    },
    "6899": {
      "fn": "Allowlist.splitSignature",
      "offset": [
        6245,
        6257
      ],
      "op": "DUP1",
      "path": "14"
    },
    "6900": {
      "fn": "Allowlist.splitSignature",
      "offset": [
        6245,
        6257
      ],
      "op": "DUP7",
      "path": "14"
    },
    "6901": {
      "fn": "Allowlist.splitSignature",
      "offset": [
        6245,
        6257
      ],
      "op": "ADD",
      "path": "14"
    },
    "6902": {
      "fn": "Allowlist.splitSignature",
      "offset": [
        6239,
        6258
      ],
      "op": "MLOAD",
      "path": "14"
    },
    "6903": {
      "fn": "Allowlist.verifySigner",
      "offset": [
        5087,
        5112
      ],
      "op": "DUP4",
      "path": "14",
      "statement": 84
    },
    "6904": {
      "fn": "Allowlist.verifySigner",
      "offset": [
        5087,
        5112
      ],
      "op": "MLOAD",
      "path": "14"
    },
    "6905": {
      "fn": "Allowlist.verifySigner",
      "offset": [
        4982,
        4986
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x0"
    },
    "6907": {
      "fn": "Allowlist.verifySigner",
      "offset": [
        5087,
        5112
      ],
      "op": "DUP1",
      "path": "14"
    },
    "6908": {
      "fn": "Allowlist.verifySigner",
      "offset": [
        5087,
        5112
      ],
      "op": "DUP3",
      "path": "14"
    },
    "6909": {
      "fn": "Allowlist.verifySigner",
      "offset": [
        5087,
        5112
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "6910": {
      "fn": "Allowlist.verifySigner",
      "offset": [
        5087,
        5112
      ],
      "op": "DUP2",
      "path": "14"
    },
    "6911": {
      "fn": "Allowlist.verifySigner",
      "offset": [
        5087,
        5112
      ],
      "op": "DUP9",
      "path": "14"
    },
    "6912": {
      "fn": "Allowlist.verifySigner",
      "offset": [
        5087,
        5112
      ],
      "op": "ADD",
      "path": "14"
    },
    "6913": {
      "fn": "Allowlist.verifySigner",
      "offset": [
        5087,
        5112
      ],
      "op": "DUP1",
      "path": "14"
    },
    "6914": {
      "fn": "Allowlist.verifySigner",
      "offset": [
        5087,
        5112
      ],
      "op": "DUP8",
      "path": "14"
    },
    "6915": {
      "fn": "Allowlist.verifySigner",
      "offset": [
        5087,
        5112
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "6916": {
      "op": "DUP11"
    },
    "6917": {
      "op": "SWAP1"
    },
    "6918": {
      "op": "MSTORE"
    },
    "6919": {
      "fn": "Allowlist.splitSignature",
      "offset": [
        6231,
        6259
      ],
      "op": "SWAP2",
      "path": "14"
    },
    "6920": {
      "fn": "Allowlist.splitSignature",
      "offset": [
        6231,
        6259
      ],
      "op": "DUP3",
      "path": "14"
    },
    "6921": {
      "fn": "Allowlist.splitSignature",
      "offset": [
        6231,
        6259
      ],
      "op": "BYTE",
      "path": "14"
    },
    "6922": {
      "op": "DUP2"
    },
    "6923": {
      "op": "DUP7"
    },
    "6924": {
      "op": "ADD"
    },
    "6925": {
      "op": "DUP2"
    },
    "6926": {
      "op": "SWAP1"
    },
    "6927": {
      "op": "MSTORE"
    },
    "6928": {
      "op": "SWAP3"
    },
    "6929": {
      "op": "DUP2"
    },
    "6930": {
      "op": "ADD"
    },
    "6931": {
      "op": "DUP7"
    },
    "6932": {
      "op": "SWAP1"
    },
    "6933": {
      "op": "MSTORE"
    },
    "6934": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "6936": {
      "op": "DUP2"
    },
    "6937": {
      "op": "ADD"
    },
    "6938": {
      "op": "DUP5"
    },
    "6939": {
      "op": "SWAP1"
    },
    "6940": {
      "op": "MSTORE"
    },
    "6941": {
      "fn": "Allowlist.verifySigner",
      "offset": [
        5087,
        5112
      ],
      "op": "SWAP4",
      "path": "14"
    },
    "6942": {
      "fn": "Allowlist.verifySigner",
      "offset": [
        5087,
        5112
      ],
      "op": "MLOAD",
      "path": "14"
    },
    "6943": {
      "fn": "Allowlist.verifySigner",
      "offset": [
        4982,
        4986
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "6944": {
      "fn": "Allowlist.verifySigner",
      "offset": [
        4982,
        4986
      ],
      "op": "SWAP6",
      "path": "14"
    },
    "6945": {
      "fn": "Allowlist.splitSignature",
      "offset": [
        6127,
        6146
      ],
      "op": "SWAP3",
      "path": "14"
    },
    "6946": {
      "fn": "Allowlist.splitSignature",
      "offset": [
        6127,
        6146
      ],
      "op": "SWAP4",
      "path": "14"
    },
    "6947": {
      "fn": "Allowlist.splitSignature",
      "offset": [
        6231,
        6259
      ],
      "op": "SWAP2",
      "path": "14"
    },
    "6948": {
      "fn": "Allowlist.splitSignature",
      "offset": [
        6231,
        6259
      ],
      "op": "SWAP3",
      "path": "14"
    },
    "6949": {
      "fn": "Allowlist.verifySigner",
      "offset": [
        5087,
        5112
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x1"
    },
    "6951": {
      "fn": "Allowlist.verifySigner",
      "offset": [
        5087,
        5112
      ],
      "op": "SWAP3",
      "path": "14"
    },
    "6952": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "6954": {
      "op": "DUP1"
    },
    "6955": {
      "op": "DUP3"
    },
    "6956": {
      "op": "ADD"
    },
    "6957": {
      "op": "SWAP4"
    },
    "6958": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "6960": {
      "op": "NOT"
    },
    "6961": {
      "fn": "Allowlist.verifySigner",
      "offset": [
        5087,
        5112
      ],
      "op": "DUP2",
      "path": "14"
    },
    "6962": {
      "fn": "Allowlist.verifySigner",
      "offset": [
        5087,
        5112
      ],
      "op": "ADD",
      "path": "14"
    },
    "6963": {
      "fn": "Allowlist.verifySigner",
      "offset": [
        5087,
        5112
      ],
      "op": "SWAP3",
      "path": "14"
    },
    "6964": {
      "fn": "Allowlist.verifySigner",
      "offset": [
        5087,
        5112
      ],
      "op": "DUP2",
      "path": "14"
    },
    "6965": {
      "fn": "Allowlist.verifySigner",
      "offset": [
        5087,
        5112
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "6966": {
      "fn": "Allowlist.verifySigner",
      "offset": [
        5087,
        5112
      ],
      "op": "SUB",
      "path": "14"
    },
    "6967": {
      "fn": "Allowlist.verifySigner",
      "offset": [
        5087,
        5112
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "6968": {
      "fn": "Allowlist.verifySigner",
      "offset": [
        5087,
        5112
      ],
      "op": "SWAP2",
      "path": "14"
    },
    "6969": {
      "fn": "Allowlist.verifySigner",
      "offset": [
        5087,
        5112
      ],
      "op": "ADD",
      "path": "14"
    },
    "6970": {
      "fn": "Allowlist.verifySigner",
      "offset": [
        5087,
        5112
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "6971": {
      "fn": "Allowlist.verifySigner",
      "offset": [
        5087,
        5112
      ],
      "op": "DUP6",
      "path": "14"
    },
    "6972": {
      "fn": "Allowlist.verifySigner",
      "offset": [
        5087,
        5112
      ],
      "op": "GAS",
      "path": "14"
    },
    "6973": {
      "fn": "Allowlist.verifySigner",
      "offset": [
        5087,
        5112
      ],
      "op": "STATICCALL",
      "path": "14"
    },
    "6974": {
      "fn": "Allowlist.verifySigner",
      "offset": [
        5087,
        5112
      ],
      "op": "ISZERO",
      "path": "14"
    },
    "6975": {
      "fn": "Allowlist.verifySigner",
      "offset": [
        5087,
        5112
      ],
      "op": "DUP1",
      "path": "14"
    },
    "6976": {
      "fn": "Allowlist.verifySigner",
      "offset": [
        5087,
        5112
      ],
      "op": "ISZERO",
      "path": "14"
    },
    "6977": {
      "fn": "Allowlist.verifySigner",
      "offset": [
        5087,
        5112
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x1B4E"
    },
    "6980": {
      "fn": "Allowlist.verifySigner",
      "offset": [
        5087,
        5112
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "6981": {
      "fn": "Allowlist.verifySigner",
      "offset": [
        5087,
        5112
      ],
      "op": "RETURNDATASIZE",
      "path": "14"
    },
    "6982": {
      "fn": "Allowlist.verifySigner",
      "offset": [
        5087,
        5112
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x0"
    },
    "6984": {
      "fn": "Allowlist.verifySigner",
      "offset": [
        5087,
        5112
      ],
      "op": "DUP1",
      "path": "14"
    },
    "6985": {
      "fn": "Allowlist.verifySigner",
      "offset": [
        5087,
        5112
      ],
      "op": "RETURNDATACOPY",
      "path": "14"
    },
    "6986": {
      "fn": "Allowlist.verifySigner",
      "offset": [
        5087,
        5112
      ],
      "op": "RETURNDATASIZE",
      "path": "14"
    },
    "6987": {
      "fn": "Allowlist.verifySigner",
      "offset": [
        5087,
        5112
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x0"
    },
    "6989": {
      "fn": "Allowlist.verifySigner",
      "offset": [
        5087,
        5112
      ],
      "op": "REVERT",
      "path": "14"
    },
    "6990": {
      "fn": "Allowlist.verifySigner",
      "offset": [
        5087,
        5112
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "6991": {
      "fn": "Allowlist.verifySigner",
      "offset": [
        5087,
        5112
      ],
      "op": "POP",
      "path": "14"
    },
    "6992": {
      "fn": "Allowlist.verifySigner",
      "offset": [
        5087,
        5112
      ],
      "op": "POP",
      "path": "14"
    },
    "6993": {
      "fn": "Allowlist.verifySigner",
      "offset": [
        5087,
        5112
      ],
      "op": "POP",
      "path": "14"
    },
    "6994": {
      "fn": "Allowlist.verifySigner",
      "offset": [
        5087,
        5112
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x20"
    },
    "6996": {
      "fn": "Allowlist.verifySigner",
      "offset": [
        5087,
        5112
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x40"
    },
    "6998": {
      "fn": "Allowlist.verifySigner",
      "offset": [
        5087,
        5112
      ],
      "op": "MLOAD",
      "path": "14"
    },
    "6999": {
      "fn": "Allowlist.verifySigner",
      "offset": [
        5087,
        5112
      ],
      "op": "SUB",
      "path": "14"
    },
    "7000": {
      "fn": "Allowlist.verifySigner",
      "offset": [
        5087,
        5112
      ],
      "op": "MLOAD",
      "path": "14"
    },
    "7001": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7003": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7005": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "7007": {
      "op": "SHL"
    },
    "7008": {
      "op": "SUB"
    },
    "7009": {
      "fn": "Allowlist.verifySigner",
      "offset": [
        5076,
        5112
      ],
      "op": "AND",
      "path": "14"
    },
    "7010": {
      "fn": "Allowlist.verifySigner",
      "offset": [
        5076,
        5083
      ],
      "op": "DUP8",
      "path": "14"
    },
    "7011": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7013": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7015": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "7017": {
      "op": "SHL"
    },
    "7018": {
      "op": "SUB"
    },
    "7019": {
      "fn": "Allowlist.verifySigner",
      "offset": [
        5076,
        5112
      ],
      "op": "AND",
      "path": "14"
    },
    "7020": {
      "fn": "Allowlist.verifySigner",
      "offset": [
        5076,
        5112
      ],
      "op": "EQ",
      "path": "14"
    },
    "7021": {
      "fn": "Allowlist.verifySigner",
      "offset": [
        5068,
        5113
      ],
      "op": "SWAP4",
      "path": "14"
    },
    "7022": {
      "fn": "Allowlist.verifySigner",
      "offset": [
        5068,
        5113
      ],
      "op": "POP",
      "path": "14"
    },
    "7023": {
      "fn": "Allowlist.verifySigner",
      "offset": [
        5068,
        5113
      ],
      "op": "POP",
      "path": "14"
    },
    "7024": {
      "fn": "Allowlist.verifySigner",
      "offset": [
        5068,
        5113
      ],
      "op": "POP",
      "path": "14"
    },
    "7025": {
      "fn": "Allowlist.verifySigner",
      "offset": [
        5068,
        5113
      ],
      "op": "POP",
      "path": "14"
    },
    "7026": {
      "fn": "Allowlist.verifySigner",
      "offset": [
        4852,
        5120
      ],
      "op": "SWAP4",
      "path": "14"
    },
    "7027": {
      "fn": "Allowlist.verifySigner",
      "offset": [
        4852,
        5120
      ],
      "op": "SWAP3",
      "path": "14"
    },
    "7028": {
      "fn": "Allowlist.verifySigner",
      "offset": [
        4852,
        5120
      ],
      "op": "POP",
      "path": "14"
    },
    "7029": {
      "fn": "Allowlist.verifySigner",
      "offset": [
        4852,
        5120
      ],
      "op": "POP",
      "path": "14"
    },
    "7030": {
      "fn": "Allowlist.verifySigner",
      "offset": [
        4852,
        5120
      ],
      "op": "POP",
      "path": "14"
    },
    "7031": {
      "fn": "Allowlist.verifySigner",
      "jump": "o",
      "offset": [
        4852,
        5120
      ],
      "op": "JUMP",
      "path": "14"
    },
    "7032": {
      "fn": "SoulboundWithSignature.ownerIssueWithSignature",
      "offset": [
        1465,
        2131
      ],
      "op": "JUMPDEST",
      "path": "40"
    },
    "7033": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x6"
    },
    "7035": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "7036": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7038": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7040": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "7042": {
      "op": "SHL"
    },
    "7043": {
      "op": "SUB"
    },
    "7044": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "AND",
      "path": "0"
    },
    "7045": {
      "fn": "Context._msgSender",
      "offset": [
        719,
        729
      ],
      "op": "CALLER",
      "path": "5"
    },
    "7046": {
      "offset": [
        1248,
        1271
      ],
      "op": "EQ",
      "path": "0"
    },
    "7047": {
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1BA2"
    },
    "7050": {
      "offset": [
        1240,
        1308
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "7051": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "7053": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "7054": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "7058": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "7060": {
      "op": "SHL"
    },
    "7061": {
      "offset": [
        1240,
        1308
      ],
      "op": "DUP2",
      "path": "0"
    },
    "7062": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "7063": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "7065": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "ADD",
      "path": "0"
    },
    "7066": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x6B1"
    },
    "7069": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "7070": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2B66"
    },
    "7073": {
      "fn": "Context._msgSender",
      "jump": "i",
      "offset": [
        1240,
        1308
      ],
      "op": "JUMP",
      "path": "0"
    },
    "7074": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "7075": {
      "fn": "SoulboundWithSignature.ownerIssueWithSignature",
      "offset": [
        1914,
        1925
      ],
      "op": "PUSH1",
      "path": "40",
      "statement": 85,
      "value": "0xA"
    },
    "7077": {
      "fn": "SoulboundWithSignature.ownerIssueWithSignature",
      "offset": [
        1914,
        1925
      ],
      "op": "SLOAD",
      "path": "40"
    },
    "7078": {
      "fn": "SoulboundWithSignature.ownerIssueWithSignature",
      "offset": [
        1905,
        1911
      ],
      "op": "PUSH1",
      "path": "40",
      "value": "0xB"
    },
    "7080": {
      "fn": "SoulboundWithSignature.ownerIssueWithSignature",
      "offset": [
        1905,
        1911
      ],
      "op": "SLOAD",
      "path": "40"
    },
    "7081": {
      "branch": 192,
      "fn": "SoulboundWithSignature.ownerIssueWithSignature",
      "offset": [
        1905,
        1925
      ],
      "op": "LT",
      "path": "40"
    },
    "7082": {
      "fn": "SoulboundWithSignature.ownerIssueWithSignature",
      "offset": [
        1897,
        1948
      ],
      "op": "PUSH2",
      "path": "40",
      "value": "0x1BEA"
    },
    "7085": {
      "branch": 192,
      "fn": "SoulboundWithSignature.ownerIssueWithSignature",
      "offset": [
        1897,
        1948
      ],
      "op": "JUMPI",
      "path": "40"
    },
    "7086": {
      "fn": "SoulboundWithSignature.ownerIssueWithSignature",
      "offset": [
        1897,
        1948
      ],
      "op": "PUSH1",
      "path": "40",
      "value": "0x40"
    },
    "7088": {
      "fn": "SoulboundWithSignature.ownerIssueWithSignature",
      "offset": [
        1897,
        1948
      ],
      "op": "MLOAD",
      "path": "40"
    },
    "7089": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "7093": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "7095": {
      "op": "SHL"
    },
    "7096": {
      "fn": "SoulboundWithSignature.ownerIssueWithSignature",
      "offset": [
        1897,
        1948
      ],
      "op": "DUP2",
      "path": "40"
    },
    "7097": {
      "fn": "SoulboundWithSignature.ownerIssueWithSignature",
      "offset": [
        1897,
        1948
      ],
      "op": "MSTORE",
      "path": "40"
    },
    "7098": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "7100": {
      "fn": "SoulboundWithSignature.ownerIssueWithSignature",
      "offset": [
        1897,
        1948
      ],
      "op": "PUSH1",
      "path": "40",
      "value": "0x4"
    },
    "7102": {
      "fn": "SoulboundWithSignature.ownerIssueWithSignature",
      "offset": [
        1897,
        1948
      ],
      "op": "DUP3",
      "path": "40"
    },
    "7103": {
      "fn": "SoulboundWithSignature.ownerIssueWithSignature",
      "offset": [
        1897,
        1948
      ],
      "op": "ADD",
      "path": "40"
    },
    "7104": {
      "op": "MSTORE"
    },
    "7105": {
      "op": "PUSH1",
      "value": "0x12"
    },
    "7107": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "7109": {
      "op": "DUP3"
    },
    "7110": {
      "op": "ADD"
    },
    "7111": {
      "op": "MSTORE"
    },
    "7112": {
      "op": "PUSH18",
      "value": "0x24B9B9BAB29021B0B8102932B0B1B432B217"
    },
    "7131": {
      "op": "PUSH1",
      "value": "0x71"
    },
    "7133": {
      "op": "SHL"
    },
    "7134": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "7136": {
      "op": "DUP3"
    },
    "7137": {
      "op": "ADD"
    },
    "7138": {
      "op": "MSTORE"
    },
    "7139": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "7141": {
      "op": "ADD"
    },
    "7142": {
      "fn": "SoulboundWithSignature.ownerIssueWithSignature",
      "offset": [
        1897,
        1948
      ],
      "op": "PUSH2",
      "path": "40",
      "value": "0x6B1"
    },
    "7145": {
      "op": "JUMP"
    },
    "7146": {
      "fn": "SoulboundWithSignature.ownerIssueWithSignature",
      "offset": [
        1897,
        1948
      ],
      "op": "JUMPDEST",
      "path": "40"
    },
    "7147": {
      "fn": "SoulboundWithSignature.ownerIssueWithSignature",
      "offset": [
        1997,
        2051
      ],
      "op": "PUSH2",
      "path": "40",
      "statement": 86,
      "value": "0x17C1"
    },
    "7150": {
      "fn": "SoulboundWithSignature.ownerIssueWithSignature",
      "offset": [
        2016,
        2020
      ],
      "op": "DUP6",
      "path": "40"
    },
    "7151": {
      "fn": "SoulboundWithSignature.ownerIssueWithSignature",
      "offset": [
        2022,
        2026
      ],
      "op": "DUP6",
      "path": "40"
    },
    "7152": {
      "fn": "SoulboundWithSignature.ownerIssueWithSignature",
      "offset": [
        2028,
        2031
      ],
      "op": "DUP6",
      "path": "40"
    },
    "7153": {
      "fn": "SoulboundWithSignature.ownerIssueWithSignature",
      "offset": [
        2033,
        2040
      ],
      "op": "DUP6",
      "path": "40"
    },
    "7154": {
      "fn": "SoulboundWithSignature.ownerIssueWithSignature",
      "offset": [
        2042,
        2050
      ],
      "op": "DUP6",
      "path": "40"
    },
    "7155": {
      "fn": "SoulboundWithSignature.ownerIssueWithSignature",
      "offset": [
        1997,
        2015
      ],
      "op": "PUSH2",
      "path": "40",
      "value": "0x1987"
    },
    "7158": {
      "fn": "SoulboundWithSignature.ownerIssueWithSignature",
      "jump": "i",
      "offset": [
        1997,
        2051
      ],
      "op": "JUMP",
      "path": "40"
    },
    "7159": {
      "fn": "SoulboundRedeemable.redeemPendingToken",
      "offset": [
        8593,
        10121
      ],
      "op": "JUMPDEST",
      "path": "39"
    },
    "7160": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x6"
    },
    "7162": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "7163": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7165": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7167": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "7169": {
      "op": "SHL"
    },
    "7170": {
      "op": "SUB"
    },
    "7171": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "AND",
      "path": "0"
    },
    "7172": {
      "fn": "Context._msgSender",
      "offset": [
        719,
        729
      ],
      "op": "CALLER",
      "path": "5"
    },
    "7173": {
      "offset": [
        1248,
        1271
      ],
      "op": "EQ",
      "path": "0"
    },
    "7174": {
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1C21"
    },
    "7177": {
      "offset": [
        1240,
        1308
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "7178": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "7180": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "7181": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "7185": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "7187": {
      "op": "SHL"
    },
    "7188": {
      "offset": [
        1240,
        1308
      ],
      "op": "DUP2",
      "path": "0"
    },
    "7189": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "7190": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "7192": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "ADD",
      "path": "0"
    },
    "7193": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x6B1"
    },
    "7196": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "7197": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2B66"
    },
    "7200": {
      "fn": "Context._msgSender",
      "jump": "i",
      "offset": [
        1240,
        1308
      ],
      "op": "JUMP",
      "path": "0"
    },
    "7201": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "7202": {
      "offset": [
        2688,
        2694
      ],
      "op": "PUSH1",
      "path": "39",
      "value": "0x13"
    },
    "7204": {
      "fn": "Context._msgSender",
      "offset": [
        2688,
        2694
      ],
      "op": "SLOAD",
      "path": "39"
    },
    "7205": {
      "fn": "Context._msgSender",
      "offset": [
        2688,
        2694
      ],
      "op": "PUSH1",
      "path": "39",
      "value": "0xFF"
    },
    "7207": {
      "fn": "Context._msgSender",
      "offset": [
        2688,
        2694
      ],
      "op": "AND",
      "path": "39"
    },
    "7208": {
      "offset": [
        2687,
        2694
      ],
      "op": "ISZERO",
      "path": "39"
    },
    "7209": {
      "offset": [
        2679,
        2695
      ],
      "op": "PUSH2",
      "path": "39",
      "value": "0x1C31"
    },
    "7212": {
      "offset": [
        2679,
        2695
      ],
      "op": "JUMPI",
      "path": "39"
    },
    "7213": {
      "fn": "Context._msgSender",
      "offset": [
        2679,
        2695
      ],
      "op": "PUSH1",
      "path": "39",
      "value": "0x0"
    },
    "7215": {
      "fn": "Context._msgSender",
      "offset": [
        2679,
        2695
      ],
      "op": "DUP1",
      "path": "39"
    },
    "7216": {
      "fn": "Context._msgSender",
      "offset": [
        2679,
        2695
      ],
      "op": "REVERT",
      "path": "39"
    },
    "7217": {
      "fn": "Context._msgSender",
      "offset": [
        2679,
        2695
      ],
      "op": "JUMPDEST",
      "path": "39"
    },
    "7218": {
      "offset": [
        2705,
        2711
      ],
      "op": "PUSH1",
      "path": "39",
      "value": "0x13"
    },
    "7220": {
      "offset": [
        2705,
        2718
      ],
      "op": "DUP1",
      "path": "39"
    },
    "7221": {
      "fn": "Context._msgSender",
      "offset": [
        2705,
        2718
      ],
      "op": "SLOAD",
      "path": "39"
    },
    "7222": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "7224": {
      "op": "NOT"
    },
    "7225": {
      "offset": [
        2705,
        2718
      ],
      "op": "AND",
      "path": "39"
    },
    "7226": {
      "offset": [
        2714,
        2718
      ],
      "op": "PUSH1",
      "path": "39",
      "value": "0x1"
    },
    "7228": {
      "offset": [
        2705,
        2718
      ],
      "op": "OR",
      "path": "39"
    },
    "7229": {
      "fn": "Context._msgSender",
      "offset": [
        2705,
        2718
      ],
      "op": "SWAP1",
      "path": "39"
    },
    "7230": {
      "fn": "Context._msgSender",
      "offset": [
        2705,
        2718
      ],
      "op": "SSTORE",
      "path": "39"
    },
    "7231": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7233": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7235": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "7237": {
      "op": "SHL"
    },
    "7238": {
      "op": "SUB"
    },
    "7239": {
      "fn": "SoulboundRedeemable.redeemPendingToken",
      "offset": [
        8827,
        8850
      ],
      "op": "DUP4",
      "path": "39",
      "statement": 87
    },
    "7240": {
      "branch": 159,
      "fn": "SoulboundRedeemable.redeemPendingToken",
      "offset": [
        8827,
        8850
      ],
      "op": "AND",
      "path": "39"
    },
    "7241": {
      "fn": "SoulboundRedeemable.redeemPendingToken",
      "offset": [
        8819,
        8882
      ],
      "op": "PUSH2",
      "path": "39",
      "value": "0x1C94"
    },
    "7244": {
      "branch": 159,
      "fn": "SoulboundRedeemable.redeemPendingToken",
      "offset": [
        8819,
        8882
      ],
      "op": "JUMPI",
      "path": "39"
    },
    "7245": {
      "fn": "SoulboundRedeemable.redeemPendingToken",
      "offset": [
        8819,
        8882
      ],
      "op": "PUSH1",
      "path": "39",
      "value": "0x40"
    },
    "7247": {
      "fn": "SoulboundRedeemable.redeemPendingToken",
      "offset": [
        8819,
        8882
      ],
      "op": "MLOAD",
      "path": "39"
    },
    "7248": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "7252": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "7254": {
      "op": "SHL"
    },
    "7255": {
      "fn": "SoulboundRedeemable.redeemPendingToken",
      "offset": [
        8819,
        8882
      ],
      "op": "DUP2",
      "path": "39"
    },
    "7256": {
      "fn": "SoulboundRedeemable.redeemPendingToken",
      "offset": [
        8819,
        8882
      ],
      "op": "MSTORE",
      "path": "39"
    },
    "7257": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "7259": {
      "fn": "SoulboundRedeemable.redeemPendingToken",
      "offset": [
        8819,
        8882
      ],
      "op": "PUSH1",
      "path": "39",
      "value": "0x4"
    },
    "7261": {
      "fn": "SoulboundRedeemable.redeemPendingToken",
      "offset": [
        8819,
        8882
      ],
      "op": "DUP3",
      "path": "39"
    },
    "7262": {
      "fn": "SoulboundRedeemable.redeemPendingToken",
      "offset": [
        8819,
        8882
      ],
      "op": "ADD",
      "path": "39"
    },
    "7263": {
      "op": "MSTORE"
    },
    "7264": {
      "op": "PUSH1",
      "value": "0x1B"
    },
    "7266": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "7268": {
      "op": "DUP3"
    },
    "7269": {
      "op": "ADD"
    },
    "7270": {
      "op": "MSTORE"
    },
    "7271": {
      "op": "PUSH32",
      "value": "0x526564656D7074696F6E20746F207A65726F20616464726573732E0000000000"
    },
    "7304": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "7306": {
      "op": "DUP3"
    },
    "7307": {
      "op": "ADD"
    },
    "7308": {
      "op": "MSTORE"
    },
    "7309": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "7311": {
      "op": "ADD"
    },
    "7312": {
      "fn": "SoulboundRedeemable.redeemPendingToken",
      "offset": [
        8819,
        8882
      ],
      "op": "PUSH2",
      "path": "39",
      "value": "0x6B1"
    },
    "7315": {
      "op": "JUMP"
    },
    "7316": {
      "fn": "SoulboundRedeemable.redeemPendingToken",
      "offset": [
        8819,
        8882
      ],
      "op": "JUMPDEST",
      "path": "39"
    },
    "7317": {
      "fn": "SoulboundRedeemable.redeemPendingToken",
      "offset": [
        8947,
        8963
      ],
      "op": "PUSH2",
      "path": "39",
      "statement": 88,
      "value": "0x1C9D"
    },
    "7320": {
      "fn": "SoulboundRedeemable.redeemPendingToken",
      "offset": [
        8955,
        8962
      ],
      "op": "DUP3",
      "path": "39"
    },
    "7321": {
      "fn": "SoulboundRedeemable.redeemPendingToken",
      "offset": [
        8947,
        8954
      ],
      "op": "PUSH2",
      "path": "39",
      "value": "0x1F4F"
    },
    "7324": {
      "fn": "SoulboundRedeemable.redeemPendingToken",
      "jump": "i",
      "offset": [
        8947,
        8963
      ],
      "op": "JUMP",
      "path": "39"
    },
    "7325": {
      "fn": "SoulboundRedeemable.redeemPendingToken",
      "offset": [
        8947,
        8963
      ],
      "op": "JUMPDEST",
      "path": "39"
    },
    "7326": {
      "branch": 160,
      "fn": "SoulboundRedeemable.redeemPendingToken",
      "offset": [
        8946,
        8963
      ],
      "op": "ISZERO",
      "path": "39"
    },
    "7327": {
      "fn": "SoulboundRedeemable.redeemPendingToken",
      "offset": [
        8938,
        8997
      ],
      "op": "PUSH2",
      "path": "39",
      "value": "0x1CEA"
    },
    "7330": {
      "branch": 160,
      "fn": "SoulboundRedeemable.redeemPendingToken",
      "offset": [
        8938,
        8997
      ],
      "op": "JUMPI",
      "path": "39"
    },
    "7331": {
      "fn": "SoulboundRedeemable.redeemPendingToken",
      "offset": [
        8938,
        8997
      ],
      "op": "PUSH1",
      "path": "39",
      "value": "0x40"
    },
    "7333": {
      "fn": "SoulboundRedeemable.redeemPendingToken",
      "offset": [
        8938,
        8997
      ],
      "op": "MLOAD",
      "path": "39"
    },
    "7334": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "7338": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "7340": {
      "op": "SHL"
    },
    "7341": {
      "fn": "SoulboundRedeemable.redeemPendingToken",
      "offset": [
        8938,
        8997
      ],
      "op": "DUP2",
      "path": "39"
    },
    "7342": {
      "fn": "SoulboundRedeemable.redeemPendingToken",
      "offset": [
        8938,
        8997
      ],
      "op": "MSTORE",
      "path": "39"
    },
    "7343": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "7345": {
      "fn": "SoulboundRedeemable.redeemPendingToken",
      "offset": [
        8938,
        8997
      ],
      "op": "PUSH1",
      "path": "39",
      "value": "0x4"
    },
    "7347": {
      "fn": "SoulboundRedeemable.redeemPendingToken",
      "offset": [
        8938,
        8997
      ],
      "op": "DUP3",
      "path": "39"
    },
    "7348": {
      "fn": "SoulboundRedeemable.redeemPendingToken",
      "offset": [
        8938,
        8997
      ],
      "op": "ADD",
      "path": "39"
    },
    "7349": {
      "op": "MSTORE"
    },
    "7350": {
      "op": "PUSH1",
      "value": "0x1D"
    },
    "7352": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "7354": {
      "op": "DUP3"
    },
    "7355": {
      "op": "ADD"
    },
    "7356": {
      "op": "MSTORE"
    },
    "7357": {
      "op": "PUSH32",
      "value": "0x526564656D7074696F6E206F66206578697374696E6720746F6B656E2E000000"
    },
    "7390": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "7392": {
      "op": "DUP3"
    },
    "7393": {
      "op": "ADD"
    },
    "7394": {
      "op": "MSTORE"
    },
    "7395": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "7397": {
      "op": "ADD"
    },
    "7398": {
      "fn": "SoulboundRedeemable.redeemPendingToken",
      "offset": [
        8938,
        8997
      ],
      "op": "PUSH2",
      "path": "39",
      "value": "0x6B1"
    },
    "7401": {
      "op": "JUMP"
    },
    "7402": {
      "fn": "SoulboundRedeemable.redeemPendingToken",
      "offset": [
        8938,
        8997
      ],
      "op": "JUMPDEST",
      "path": "39"
    },
    "7403": {
      "fn": "SoulboundRedeemable.redeemPendingToken",
      "offset": [
        9073,
        9089
      ],
      "op": "PUSH1",
      "path": "39",
      "statement": 89,
      "value": "0x0"
    },
    "7405": {
      "fn": "SoulboundRedeemable.redeemPendingToken",
      "offset": [
        9073,
        9089
      ],
      "op": "DUP3",
      "path": "39"
    },
    "7406": {
      "fn": "SoulboundRedeemable.redeemPendingToken",
      "offset": [
        9073,
        9089
      ],
      "op": "DUP2",
      "path": "39"
    },
    "7407": {
      "fn": "SoulboundRedeemable.redeemPendingToken",
      "offset": [
        9073,
        9089
      ],
      "op": "MSTORE",
      "path": "39"
    },
    "7408": {
      "fn": "SoulboundRedeemable.redeemPendingToken",
      "offset": [
        9073,
        9080
      ],
      "op": "PUSH1",
      "path": "39",
      "value": "0x10"
    },
    "7410": {
      "fn": "SoulboundRedeemable.redeemPendingToken",
      "offset": [
        9073,
        9089
      ],
      "op": "PUSH1",
      "path": "39",
      "value": "0x20"
    },
    "7412": {
      "fn": "SoulboundRedeemable.redeemPendingToken",
      "offset": [
        9073,
        9089
      ],
      "op": "MSTORE",
      "path": "39"
    },
    "7413": {
      "fn": "SoulboundRedeemable.redeemPendingToken",
      "offset": [
        9073,
        9089
      ],
      "op": "PUSH1",
      "path": "39",
      "value": "0x40"
    },
    "7415": {
      "fn": "SoulboundRedeemable.redeemPendingToken",
      "offset": [
        9073,
        9089
      ],
      "op": "SWAP1",
      "path": "39"
    },
    "7416": {
      "fn": "SoulboundRedeemable.redeemPendingToken",
      "offset": [
        9073,
        9089
      ],
      "op": "KECCAK256",
      "path": "39"
    },
    "7417": {
      "fn": "SoulboundRedeemable.redeemPendingToken",
      "offset": [
        9073,
        9089
      ],
      "op": "SLOAD",
      "path": "39"
    },
    "7418": {
      "fn": "SoulboundRedeemable.redeemPendingToken",
      "offset": [
        9073,
        9089
      ],
      "op": "PUSH1",
      "path": "39",
      "value": "0xFF"
    },
    "7420": {
      "branch": 161,
      "fn": "SoulboundRedeemable.redeemPendingToken",
      "offset": [
        9073,
        9089
      ],
      "op": "AND",
      "path": "39"
    },
    "7421": {
      "fn": "SoulboundRedeemable.redeemPendingToken",
      "offset": [
        9065,
        9117
      ],
      "op": "PUSH2",
      "path": "39",
      "value": "0x1D42"
    },
    "7424": {
      "branch": 161,
      "fn": "SoulboundRedeemable.redeemPendingToken",
      "offset": [
        9065,
        9117
      ],
      "op": "JUMPI",
      "path": "39"
    },
    "7425": {
      "fn": "SoulboundRedeemable.redeemPendingToken",
      "offset": [
        9065,
        9117
      ],
      "op": "PUSH1",
      "path": "39",
      "value": "0x40"
    },
    "7427": {
      "fn": "SoulboundRedeemable.redeemPendingToken",
      "offset": [
        9065,
        9117
      ],
      "op": "MLOAD",
      "path": "39"
    },
    "7428": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "7432": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "7434": {
      "op": "SHL"
    },
    "7435": {
      "fn": "SoulboundRedeemable.redeemPendingToken",
      "offset": [
        9065,
        9117
      ],
      "op": "DUP2",
      "path": "39"
    },
    "7436": {
      "fn": "SoulboundRedeemable.redeemPendingToken",
      "offset": [
        9065,
        9117
      ],
      "op": "MSTORE",
      "path": "39"
    },
    "7437": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "7439": {
      "fn": "SoulboundRedeemable.redeemPendingToken",
      "offset": [
        9065,
        9117
      ],
      "op": "PUSH1",
      "path": "39",
      "value": "0x4"
    },
    "7441": {
      "fn": "SoulboundRedeemable.redeemPendingToken",
      "offset": [
        9065,
        9117
      ],
      "op": "DUP3",
      "path": "39"
    },
    "7442": {
      "fn": "SoulboundRedeemable.redeemPendingToken",
      "offset": [
        9065,
        9117
      ],
      "op": "ADD",
      "path": "39"
    },
    "7443": {
      "op": "MSTORE"
    },
    "7444": {
      "op": "PUSH1",
      "value": "0x17"
    },
    "7446": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "7448": {
      "op": "DUP3"
    },
    "7449": {
      "op": "ADD"
    },
    "7450": {
      "op": "MSTORE"
    },
    "7451": {
      "op": "PUSH23",
      "value": "0x20B63932B0B23C903932B1B2B4BB32B2103A37B5B2B717"
    },
    "7475": {
      "op": "PUSH1",
      "value": "0x49"
    },
    "7477": {
      "op": "SHL"
    },
    "7478": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "7480": {
      "op": "DUP3"
    },
    "7481": {
      "op": "ADD"
    },
    "7482": {
      "op": "MSTORE"
    },
    "7483": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "7485": {
      "op": "ADD"
    },
    "7486": {
      "fn": "SoulboundRedeemable.redeemPendingToken",
      "offset": [
        9065,
        9117
      ],
      "op": "PUSH2",
      "path": "39",
      "value": "0x6B1"
    },
    "7489": {
      "op": "JUMP"
    },
    "7490": {
      "fn": "SoulboundRedeemable.redeemPendingToken",
      "offset": [
        9065,
        9117
      ],
      "op": "JUMPDEST",
      "path": "39"
    },
    "7491": {
      "fn": "SoulboundRedeemable.redeemPendingToken",
      "offset": [
        9219,
        9244
      ],
      "op": "PUSH1",
      "path": "39",
      "statement": 90,
      "value": "0x0"
    },
    "7493": {
      "fn": "SoulboundRedeemable.redeemPendingToken",
      "offset": [
        9219,
        9244
      ],
      "op": "DUP3",
      "path": "39"
    },
    "7494": {
      "fn": "SoulboundRedeemable.redeemPendingToken",
      "offset": [
        9219,
        9244
      ],
      "op": "DUP2",
      "path": "39"
    },
    "7495": {
      "fn": "SoulboundRedeemable.redeemPendingToken",
      "offset": [
        9219,
        9244
      ],
      "op": "MSTORE",
      "path": "39"
    },
    "7496": {
      "fn": "SoulboundRedeemable.redeemPendingToken",
      "offset": [
        9219,
        9235
      ],
      "op": "PUSH1",
      "path": "39",
      "value": "0x11"
    },
    "7498": {
      "fn": "SoulboundRedeemable.redeemPendingToken",
      "offset": [
        9219,
        9244
      ],
      "op": "PUSH1",
      "path": "39",
      "value": "0x20"
    },
    "7500": {
      "fn": "SoulboundRedeemable.redeemPendingToken",
      "offset": [
        9219,
        9244
      ],
      "op": "MSTORE",
      "path": "39"
    },
    "7501": {
      "fn": "SoulboundRedeemable.redeemPendingToken",
      "offset": [
        9219,
        9244
      ],
      "op": "PUSH1",
      "path": "39",
      "value": "0x40"
    },
    "7503": {
      "fn": "SoulboundRedeemable.redeemPendingToken",
      "offset": [
        9219,
        9244
      ],
      "op": "SWAP1",
      "path": "39"
    },
    "7504": {
      "fn": "SoulboundRedeemable.redeemPendingToken",
      "offset": [
        9219,
        9244
      ],
      "op": "KECCAK256",
      "path": "39"
    },
    "7505": {
      "fn": "SoulboundRedeemable.redeemPendingToken",
      "offset": [
        9219,
        9244
      ],
      "op": "SLOAD",
      "path": "39"
    },
    "7506": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7508": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7510": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "7512": {
      "op": "SHL"
    },
    "7513": {
      "op": "SUB"
    },
    "7514": {
      "fn": "SoulboundRedeemable.redeemPendingToken",
      "offset": [
        9219,
        9257
      ],
      "op": "DUP5",
      "path": "39"
    },
    "7515": {
      "fn": "SoulboundRedeemable.redeemPendingToken",
      "offset": [
        9219,
        9257
      ],
      "op": "DUP2",
      "path": "39"
    },
    "7516": {
      "fn": "SoulboundRedeemable.redeemPendingToken",
      "offset": [
        9219,
        9257
      ],
      "op": "AND",
      "path": "39"
    },
    "7517": {
      "fn": "SoulboundRedeemable.redeemPendingToken",
      "offset": [
        9219,
        9244
      ],
      "op": "SWAP2",
      "path": "39"
    },
    "7518": {
      "fn": "SoulboundRedeemable.redeemPendingToken",
      "offset": [
        9219,
        9244
      ],
      "op": "AND",
      "path": "39"
    },
    "7519": {
      "branch": 162,
      "fn": "SoulboundRedeemable.redeemPendingToken",
      "offset": [
        9219,
        9257
      ],
      "op": "EQ",
      "path": "39"
    },
    "7520": {
      "fn": "SoulboundRedeemable.redeemPendingToken",
      "offset": [
        9198,
        9304
      ],
      "op": "PUSH2",
      "path": "39",
      "value": "0xF54"
    },
    "7523": {
      "branch": 162,
      "fn": "SoulboundRedeemable.redeemPendingToken",
      "offset": [
        9198,
        9304
      ],
      "op": "JUMPI",
      "path": "39"
    },
    "7524": {
      "fn": "SoulboundRedeemable.redeemPendingToken",
      "offset": [
        9198,
        9304
      ],
      "op": "PUSH1",
      "path": "39",
      "value": "0x40"
    },
    "7526": {
      "fn": "SoulboundRedeemable.redeemPendingToken",
      "offset": [
        9198,
        9304
      ],
      "op": "MLOAD",
      "path": "39"
    },
    "7527": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "7531": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "7533": {
      "op": "SHL"
    },
    "7534": {
      "fn": "SoulboundRedeemable.redeemPendingToken",
      "offset": [
        9198,
        9304
      ],
      "op": "DUP2",
      "path": "39"
    },
    "7535": {
      "fn": "SoulboundRedeemable.redeemPendingToken",
      "offset": [
        9198,
        9304
      ],
      "op": "MSTORE",
      "path": "39"
    },
    "7536": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "7538": {
      "fn": "SoulboundRedeemable.redeemPendingToken",
      "offset": [
        9198,
        9304
      ],
      "op": "PUSH1",
      "path": "39",
      "value": "0x4"
    },
    "7540": {
      "fn": "SoulboundRedeemable.redeemPendingToken",
      "offset": [
        9198,
        9304
      ],
      "op": "DUP3",
      "path": "39"
    },
    "7541": {
      "fn": "SoulboundRedeemable.redeemPendingToken",
      "offset": [
        9198,
        9304
      ],
      "op": "ADD",
      "path": "39"
    },
    "7542": {
      "op": "MSTORE"
    },
    "7543": {
      "op": "PUSH1",
      "value": "0x15"
    },
    "7545": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "7547": {
      "op": "DUP3"
    },
    "7548": {
      "op": "ADD"
    },
    "7549": {
      "op": "MSTORE"
    },
    "7550": {
      "op": "PUSH21",
      "value": "0x2737BA103832B73234B733903932B1B2B4BB32B917"
    },
    "7572": {
      "op": "PUSH1",
      "value": "0x59"
    },
    "7574": {
      "op": "SHL"
    },
    "7575": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "7577": {
      "op": "DUP3"
    },
    "7578": {
      "op": "ADD"
    },
    "7579": {
      "op": "MSTORE"
    },
    "7580": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "7582": {
      "op": "ADD"
    },
    "7583": {
      "fn": "SoulboundRedeemable.redeemPendingToken",
      "offset": [
        9198,
        9304
      ],
      "op": "PUSH2",
      "path": "39",
      "value": "0x6B1"
    },
    "7586": {
      "op": "JUMP"
    },
    "7587": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1918,
        2116
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "7588": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x6"
    },
    "7590": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "7591": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7593": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7595": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "7597": {
      "op": "SHL"
    },
    "7598": {
      "op": "SUB"
    },
    "7599": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "AND",
      "path": "0"
    },
    "7600": {
      "fn": "Context._msgSender",
      "offset": [
        719,
        729
      ],
      "op": "CALLER",
      "path": "5"
    },
    "7601": {
      "offset": [
        1248,
        1271
      ],
      "op": "EQ",
      "path": "0"
    },
    "7602": {
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1DCD"
    },
    "7605": {
      "offset": [
        1240,
        1308
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "7606": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "7608": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "7609": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "7613": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "7615": {
      "op": "SHL"
    },
    "7616": {
      "offset": [
        1240,
        1308
      ],
      "op": "DUP2",
      "path": "0"
    },
    "7617": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "7618": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "7620": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "ADD",
      "path": "0"
    },
    "7621": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x6B1"
    },
    "7624": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "7625": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2B66"
    },
    "7628": {
      "fn": "Context._msgSender",
      "jump": "i",
      "offset": [
        1240,
        1308
      ],
      "op": "JUMP",
      "path": "0"
    },
    "7629": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "7630": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7632": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7634": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "7636": {
      "op": "SHL"
    },
    "7637": {
      "op": "SUB"
    },
    "7638": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2006,
        2028
      ],
      "op": "DUP2",
      "path": "0",
      "statement": 91
    },
    "7639": {
      "branch": 171,
      "fn": "Ownable.transferOwnership",
      "offset": [
        2006,
        2028
      ],
      "op": "AND",
      "path": "0"
    },
    "7640": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1998,
        2071
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1E32"
    },
    "7643": {
      "branch": 171,
      "fn": "Ownable.transferOwnership",
      "offset": [
        1998,
        2071
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "7644": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1998,
        2071
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "7646": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1998,
        2071
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "7647": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "7651": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "7653": {
      "op": "SHL"
    },
    "7654": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1998,
        2071
      ],
      "op": "DUP2",
      "path": "0"
    },
    "7655": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1998,
        2071
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "7656": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "7658": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1998,
        2071
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "7660": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1998,
        2071
      ],
      "op": "DUP3",
      "path": "0"
    },
    "7661": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1998,
        2071
      ],
      "op": "ADD",
      "path": "0"
    },
    "7662": {
      "op": "MSTORE"
    },
    "7663": {
      "op": "PUSH1",
      "value": "0x26"
    },
    "7665": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "7667": {
      "op": "DUP3"
    },
    "7668": {
      "op": "ADD"
    },
    "7669": {
      "op": "MSTORE"
    },
    "7670": {
      "op": "PUSH32",
      "value": "0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061"
    },
    "7703": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "7705": {
      "op": "DUP3"
    },
    "7706": {
      "op": "ADD"
    },
    "7707": {
      "op": "MSTORE"
    },
    "7708": {
      "op": "PUSH6",
      "value": "0x646472657373"
    },
    "7715": {
      "op": "PUSH1",
      "value": "0xD0"
    },
    "7717": {
      "op": "SHL"
    },
    "7718": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "7720": {
      "op": "DUP3"
    },
    "7721": {
      "op": "ADD"
    },
    "7722": {
      "op": "MSTORE"
    },
    "7723": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "7725": {
      "op": "ADD"
    },
    "7726": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1998,
        2071
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x6B1"
    },
    "7729": {
      "op": "JUMP"
    },
    "7730": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1998,
        2071
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "7731": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2081,
        2109
      ],
      "op": "PUSH2",
      "path": "0",
      "statement": 92,
      "value": "0x110A"
    },
    "7734": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2100,
        2108
      ],
      "op": "DUP2",
      "path": "0"
    },
    "7735": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2081,
        2099
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2237"
    },
    "7738": {
      "fn": "Ownable.transferOwnership",
      "jump": "i",
      "offset": [
        2081,
        2109
      ],
      "op": "JUMP",
      "path": "0"
    },
    "7739": {
      "fn": "Soulbound.issuerOf",
      "offset": [
        4302,
        4822
      ],
      "op": "JUMPDEST",
      "path": "37"
    },
    "7740": {
      "fn": "Soulbound.issuerOf",
      "offset": [
        4396,
        4403
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0x0"
    },
    "7742": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7744": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7746": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "7748": {
      "op": "SHL"
    },
    "7749": {
      "op": "SUB"
    },
    "7750": {
      "fn": "Soulbound.issuerOf",
      "offset": [
        4479,
        4496
      ],
      "op": "DUP4",
      "path": "37",
      "statement": 93
    },
    "7751": {
      "branch": 173,
      "fn": "Soulbound.issuerOf",
      "offset": [
        4479,
        4496
      ],
      "op": "AND",
      "path": "37"
    },
    "7752": {
      "fn": "Soulbound.issuerOf",
      "offset": [
        4471,
        4524
      ],
      "op": "PUSH2",
      "path": "37",
      "value": "0x1E93"
    },
    "7755": {
      "branch": 173,
      "fn": "Soulbound.issuerOf",
      "offset": [
        4471,
        4524
      ],
      "op": "JUMPI",
      "path": "37"
    },
    "7756": {
      "fn": "Soulbound.issuerOf",
      "offset": [
        4471,
        4524
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0x40"
    },
    "7758": {
      "fn": "Soulbound.issuerOf",
      "offset": [
        4471,
        4524
      ],
      "op": "MLOAD",
      "path": "37"
    },
    "7759": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "7763": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "7765": {
      "op": "SHL"
    },
    "7766": {
      "fn": "Soulbound.issuerOf",
      "offset": [
        4471,
        4524
      ],
      "op": "DUP2",
      "path": "37"
    },
    "7767": {
      "fn": "Soulbound.issuerOf",
      "offset": [
        4471,
        4524
      ],
      "op": "MSTORE",
      "path": "37"
    },
    "7768": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "7770": {
      "fn": "Soulbound.issuerOf",
      "offset": [
        4471,
        4524
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0x4"
    },
    "7772": {
      "fn": "Soulbound.issuerOf",
      "offset": [
        4471,
        4524
      ],
      "op": "DUP3",
      "path": "37"
    },
    "7773": {
      "fn": "Soulbound.issuerOf",
      "offset": [
        4471,
        4524
      ],
      "op": "ADD",
      "path": "37"
    },
    "7774": {
      "op": "MSTORE"
    },
    "7775": {
      "op": "PUSH1",
      "value": "0x17"
    },
    "7777": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "7779": {
      "op": "DUP3"
    },
    "7780": {
      "op": "ADD"
    },
    "7781": {
      "op": "MSTORE"
    },
    "7782": {
      "op": "PUSH32",
      "value": "0x517565727920666F72207A65726F20616464726573732E000000000000000000"
    },
    "7815": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "7817": {
      "op": "DUP3"
    },
    "7818": {
      "op": "ADD"
    },
    "7819": {
      "op": "MSTORE"
    },
    "7820": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "7822": {
      "op": "ADD"
    },
    "7823": {
      "fn": "Soulbound.issuerOf",
      "offset": [
        4471,
        4524
      ],
      "op": "PUSH2",
      "path": "37",
      "value": "0x6B1"
    },
    "7826": {
      "op": "JUMP"
    },
    "7827": {
      "fn": "Soulbound.issuerOf",
      "offset": [
        4471,
        4524
      ],
      "op": "JUMPDEST",
      "path": "37"
    },
    "7828": {
      "fn": "Soulbound.issuerOf",
      "offset": [
        4581,
        4598
      ],
      "op": "PUSH2",
      "path": "37",
      "statement": 94,
      "value": "0x1E9C"
    },
    "7831": {
      "fn": "Soulbound.issuerOf",
      "offset": [
        4589,
        4597
      ],
      "op": "DUP3",
      "path": "37"
    },
    "7832": {
      "fn": "Soulbound.issuerOf",
      "offset": [
        4581,
        4588
      ],
      "op": "PUSH2",
      "path": "37",
      "value": "0x1F4F"
    },
    "7835": {
      "fn": "Soulbound.issuerOf",
      "jump": "i",
      "offset": [
        4581,
        4598
      ],
      "op": "JUMP",
      "path": "37"
    },
    "7836": {
      "branch": 174,
      "fn": "Soulbound.issuerOf",
      "offset": [
        4581,
        4598
      ],
      "op": "JUMPDEST",
      "path": "37"
    },
    "7837": {
      "fn": "Soulbound.issuerOf",
      "offset": [
        4573,
        4622
      ],
      "op": "PUSH2",
      "path": "37",
      "value": "0x1EDE"
    },
    "7840": {
      "branch": 174,
      "fn": "Soulbound.issuerOf",
      "offset": [
        4573,
        4622
      ],
      "op": "JUMPI",
      "path": "37"
    },
    "7841": {
      "fn": "Soulbound.issuerOf",
      "offset": [
        4573,
        4622
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0x40"
    },
    "7843": {
      "fn": "Soulbound.issuerOf",
      "offset": [
        4573,
        4622
      ],
      "op": "MLOAD",
      "path": "37"
    },
    "7844": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "7848": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "7850": {
      "op": "SHL"
    },
    "7851": {
      "fn": "Soulbound.issuerOf",
      "offset": [
        4573,
        4622
      ],
      "op": "DUP2",
      "path": "37"
    },
    "7852": {
      "fn": "Soulbound.issuerOf",
      "offset": [
        4573,
        4622
      ],
      "op": "MSTORE",
      "path": "37"
    },
    "7853": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "7855": {
      "fn": "Soulbound.issuerOf",
      "offset": [
        4573,
        4622
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0x4"
    },
    "7857": {
      "fn": "Soulbound.issuerOf",
      "offset": [
        4573,
        4622
      ],
      "op": "DUP3",
      "path": "37"
    },
    "7858": {
      "fn": "Soulbound.issuerOf",
      "offset": [
        4573,
        4622
      ],
      "op": "ADD",
      "path": "37"
    },
    "7859": {
      "op": "MSTORE"
    },
    "7860": {
      "op": "PUSH1",
      "value": "0x13"
    },
    "7862": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "7864": {
      "op": "DUP3"
    },
    "7865": {
      "op": "ADD"
    },
    "7866": {
      "op": "MSTORE"
    },
    "7867": {
      "op": "PUSH19",
      "value": "0x2737B716B2BC34B9BA32B73A103A37B5B2B717"
    },
    "7887": {
      "op": "PUSH1",
      "value": "0x69"
    },
    "7889": {
      "op": "SHL"
    },
    "7890": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "7892": {
      "op": "DUP3"
    },
    "7893": {
      "op": "ADD"
    },
    "7894": {
      "op": "MSTORE"
    },
    "7895": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "7897": {
      "op": "ADD"
    },
    "7898": {
      "fn": "Soulbound.issuerOf",
      "offset": [
        4573,
        4622
      ],
      "op": "PUSH2",
      "path": "37",
      "value": "0x6B1"
    },
    "7901": {
      "op": "JUMP"
    },
    "7902": {
      "fn": "Soulbound.issuerOf",
      "offset": [
        4573,
        4622
      ],
      "op": "JUMPDEST",
      "path": "37"
    },
    "7903": {
      "fn": "Soulbound.issuerOf",
      "offset": [
        4712,
        4715
      ],
      "op": "DUP3",
      "path": "37",
      "statement": 95
    },
    "7904": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7906": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7908": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "7910": {
      "op": "SHL"
    },
    "7911": {
      "op": "SUB"
    },
    "7912": {
      "fn": "Soulbound.issuerOf",
      "offset": [
        4691,
        4715
      ],
      "op": "AND",
      "path": "37"
    },
    "7913": {
      "fn": "Soulbound.issuerOf",
      "offset": [
        4691,
        4708
      ],
      "op": "PUSH2",
      "path": "37",
      "value": "0x1EF1"
    },
    "7916": {
      "fn": "Soulbound.issuerOf",
      "offset": [
        4699,
        4707
      ],
      "op": "DUP4",
      "path": "37"
    },
    "7917": {
      "fn": "Soulbound.issuerOf",
      "offset": [
        4691,
        4698
      ],
      "op": "PUSH2",
      "path": "37",
      "value": "0x1263"
    },
    "7920": {
      "fn": "Soulbound.issuerOf",
      "jump": "i",
      "offset": [
        4691,
        4708
      ],
      "op": "JUMP",
      "path": "37"
    },
    "7921": {
      "fn": "Soulbound.issuerOf",
      "offset": [
        4691,
        4708
      ],
      "op": "JUMPDEST",
      "path": "37"
    },
    "7922": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7924": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7926": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "7928": {
      "op": "SHL"
    },
    "7929": {
      "op": "SUB"
    },
    "7930": {
      "fn": "Soulbound.issuerOf",
      "offset": [
        4691,
        4715
      ],
      "op": "AND",
      "path": "37"
    },
    "7931": {
      "branch": 175,
      "fn": "Soulbound.issuerOf",
      "offset": [
        4691,
        4715
      ],
      "op": "EQ",
      "path": "37"
    },
    "7932": {
      "fn": "Soulbound.issuerOf",
      "offset": [
        4683,
        4746
      ],
      "op": "PUSH2",
      "path": "37",
      "value": "0x1F47"
    },
    "7935": {
      "branch": 175,
      "fn": "Soulbound.issuerOf",
      "offset": [
        4683,
        4746
      ],
      "op": "JUMPI",
      "path": "37"
    },
    "7936": {
      "fn": "Soulbound.issuerOf",
      "offset": [
        4683,
        4746
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0x40"
    },
    "7938": {
      "fn": "Soulbound.issuerOf",
      "offset": [
        4683,
        4746
      ],
      "op": "MLOAD",
      "path": "37"
    },
    "7939": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "7943": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "7945": {
      "op": "SHL"
    },
    "7946": {
      "fn": "Soulbound.issuerOf",
      "offset": [
        4683,
        4746
      ],
      "op": "DUP2",
      "path": "37"
    },
    "7947": {
      "fn": "Soulbound.issuerOf",
      "offset": [
        4683,
        4746
      ],
      "op": "MSTORE",
      "path": "37"
    },
    "7948": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "7950": {
      "fn": "Soulbound.issuerOf",
      "offset": [
        4683,
        4746
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0x4"
    },
    "7952": {
      "fn": "Soulbound.issuerOf",
      "offset": [
        4683,
        4746
      ],
      "op": "DUP3",
      "path": "37"
    },
    "7953": {
      "fn": "Soulbound.issuerOf",
      "offset": [
        4683,
        4746
      ],
      "op": "ADD",
      "path": "37"
    },
    "7954": {
      "op": "MSTORE"
    },
    "7955": {
      "op": "PUSH1",
      "value": "0x1A"
    },
    "7957": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "7959": {
      "op": "DUP3"
    },
    "7960": {
      "op": "ADD"
    },
    "7961": {
      "op": "MSTORE"
    },
    "7962": {
      "op": "PUSH32",
      "value": "0x546F6B656E206E6F74206F776E65642062792061646472657373000000000000"
    },
    "7995": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "7997": {
      "op": "DUP3"
    },
    "7998": {
      "op": "ADD"
    },
    "7999": {
      "op": "MSTORE"
    },
    "8000": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "8002": {
      "op": "ADD"
    },
    "8003": {
      "fn": "Soulbound.issuerOf",
      "offset": [
        4683,
        4746
      ],
      "op": "PUSH2",
      "path": "37",
      "value": "0x6B1"
    },
    "8006": {
      "op": "JUMP"
    },
    "8007": {
      "fn": "Soulbound.issuerOf",
      "offset": [
        4683,
        4746
      ],
      "op": "JUMPDEST",
      "path": "37"
    },
    "8008": {
      "op": "POP"
    },
    "8009": {
      "fn": "Soulbound.issuerOf",
      "offset": [
        4810,
        4814
      ],
      "op": "ADDRESS",
      "path": "37",
      "statement": 96
    },
    "8010": {
      "fn": "Soulbound.issuerOf",
      "offset": [
        4302,
        4822
      ],
      "op": "SWAP3",
      "path": "37"
    },
    "8011": {
      "fn": "Soulbound.issuerOf",
      "offset": [
        4302,
        4822
      ],
      "op": "SWAP2",
      "path": "37"
    },
    "8012": {
      "fn": "Soulbound.issuerOf",
      "offset": [
        4302,
        4822
      ],
      "op": "POP",
      "path": "37"
    },
    "8013": {
      "fn": "Soulbound.issuerOf",
      "offset": [
        4302,
        4822
      ],
      "op": "POP",
      "path": "37"
    },
    "8014": {
      "fn": "Soulbound.issuerOf",
      "jump": "o",
      "offset": [
        4302,
        4822
      ],
      "op": "JUMP",
      "path": "37"
    },
    "8015": {
      "fn": "ERC4973._exists",
      "offset": [
        5924,
        6049
      ],
      "op": "JUMPDEST",
      "path": "41"
    },
    "8016": {
      "fn": "ERC4973._exists",
      "offset": [
        5989,
        5993
      ],
      "op": "PUSH1",
      "path": "41",
      "value": "0x0"
    },
    "8018": {
      "fn": "ERC4973._exists",
      "offset": [
        6012,
        6028
      ],
      "op": "SWAP1",
      "path": "41",
      "statement": 97
    },
    "8019": {
      "fn": "ERC4973._exists",
      "offset": [
        6012,
        6028
      ],
      "op": "DUP2",
      "path": "41"
    },
    "8020": {
      "fn": "ERC4973._exists",
      "offset": [
        6012,
        6028
      ],
      "op": "MSTORE",
      "path": "41"
    },
    "8021": {
      "fn": "ERC4973._exists",
      "offset": [
        6012,
        6019
      ],
      "op": "PUSH1",
      "path": "41",
      "value": "0x3"
    },
    "8023": {
      "fn": "ERC4973._exists",
      "offset": [
        6012,
        6028
      ],
      "op": "PUSH1",
      "path": "41",
      "value": "0x20"
    },
    "8025": {
      "fn": "ERC4973._exists",
      "offset": [
        6012,
        6028
      ],
      "op": "MSTORE",
      "path": "41"
    },
    "8026": {
      "fn": "ERC4973._exists",
      "offset": [
        6012,
        6028
      ],
      "op": "PUSH1",
      "path": "41",
      "value": "0x40"
    },
    "8028": {
      "fn": "ERC4973._exists",
      "offset": [
        6012,
        6028
      ],
      "op": "SWAP1",
      "path": "41"
    },
    "8029": {
      "fn": "ERC4973._exists",
      "offset": [
        6012,
        6028
      ],
      "op": "KECCAK256",
      "path": "41"
    },
    "8030": {
      "fn": "ERC4973._exists",
      "offset": [
        6012,
        6028
      ],
      "op": "SLOAD",
      "path": "41"
    },
    "8031": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8033": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8035": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "8037": {
      "op": "SHL"
    },
    "8038": {
      "op": "SUB"
    },
    "8039": {
      "fn": "ERC4973._exists",
      "offset": [
        6012,
        6028
      ],
      "op": "AND",
      "path": "41"
    },
    "8040": {
      "fn": "ERC4973._exists",
      "offset": [
        6012,
        6042
      ],
      "op": "ISZERO",
      "path": "41"
    },
    "8041": {
      "fn": "ERC4973._exists",
      "offset": [
        6012,
        6042
      ],
      "op": "ISZERO",
      "path": "41"
    },
    "8042": {
      "fn": "ERC4973._exists",
      "offset": [
        6012,
        6042
      ],
      "op": "SWAP1",
      "path": "41"
    },
    "8043": {
      "fn": "ERC4973._exists",
      "jump": "o",
      "offset": [
        5924,
        6049
      ],
      "op": "JUMP",
      "path": "41"
    },
    "8044": {
      "fn": "Soulbound.revoke",
      "offset": [
        3338,
        3766
      ],
      "op": "JUMPDEST",
      "path": "37"
    },
    "8045": {
      "fn": "Soulbound.revoke",
      "offset": [
        3405,
        3409
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0x0"
    },
    "8047": {
      "fn": "Soulbound.revoke",
      "offset": [
        3468,
        3485
      ],
      "op": "PUSH2",
      "path": "37",
      "statement": 98,
      "value": "0x1F77"
    },
    "8050": {
      "fn": "Soulbound.revoke",
      "offset": [
        3476,
        3484
      ],
      "op": "DUP3",
      "path": "37"
    },
    "8051": {
      "fn": "Soulbound.revoke",
      "offset": [
        3468,
        3475
      ],
      "op": "PUSH2",
      "path": "37",
      "value": "0x1F4F"
    },
    "8054": {
      "fn": "Soulbound.revoke",
      "jump": "i",
      "offset": [
        3468,
        3485
      ],
      "op": "JUMP",
      "path": "37"
    },
    "8055": {
      "branch": 176,
      "fn": "Soulbound.revoke",
      "offset": [
        3468,
        3485
      ],
      "op": "JUMPDEST",
      "path": "37"
    },
    "8056": {
      "fn": "Soulbound.revoke",
      "offset": [
        3460,
        3509
      ],
      "op": "PUSH2",
      "path": "37",
      "value": "0x1FB9"
    },
    "8059": {
      "branch": 176,
      "fn": "Soulbound.revoke",
      "offset": [
        3460,
        3509
      ],
      "op": "JUMPI",
      "path": "37"
    },
    "8060": {
      "fn": "Soulbound.revoke",
      "offset": [
        3460,
        3509
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0x40"
    },
    "8062": {
      "fn": "Soulbound.revoke",
      "offset": [
        3460,
        3509
      ],
      "op": "MLOAD",
      "path": "37"
    },
    "8063": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "8067": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "8069": {
      "op": "SHL"
    },
    "8070": {
      "fn": "Soulbound.revoke",
      "offset": [
        3460,
        3509
      ],
      "op": "DUP2",
      "path": "37"
    },
    "8071": {
      "fn": "Soulbound.revoke",
      "offset": [
        3460,
        3509
      ],
      "op": "MSTORE",
      "path": "37"
    },
    "8072": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "8074": {
      "fn": "Soulbound.revoke",
      "offset": [
        3460,
        3509
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0x4"
    },
    "8076": {
      "fn": "Soulbound.revoke",
      "offset": [
        3460,
        3509
      ],
      "op": "DUP3",
      "path": "37"
    },
    "8077": {
      "fn": "Soulbound.revoke",
      "offset": [
        3460,
        3509
      ],
      "op": "ADD",
      "path": "37"
    },
    "8078": {
      "op": "MSTORE"
    },
    "8079": {
      "op": "PUSH1",
      "value": "0x13"
    },
    "8081": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "8083": {
      "op": "DUP3"
    },
    "8084": {
      "op": "ADD"
    },
    "8085": {
      "op": "MSTORE"
    },
    "8086": {
      "op": "PUSH19",
      "value": "0x2737B716B2BC34B9BA32B73A103A37B5B2B717"
    },
    "8106": {
      "op": "PUSH1",
      "value": "0x69"
    },
    "8108": {
      "op": "SHL"
    },
    "8109": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "8111": {
      "op": "DUP3"
    },
    "8112": {
      "op": "ADD"
    },
    "8113": {
      "op": "MSTORE"
    },
    "8114": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "8116": {
      "op": "ADD"
    },
    "8117": {
      "fn": "Soulbound.revoke",
      "offset": [
        3460,
        3509
      ],
      "op": "PUSH2",
      "path": "37",
      "value": "0x6B1"
    },
    "8120": {
      "op": "JUMP"
    },
    "8121": {
      "fn": "Soulbound.revoke",
      "offset": [
        3460,
        3509
      ],
      "op": "JUMPDEST",
      "path": "37"
    },
    "8122": {
      "fn": "Soulbound.revoke",
      "offset": [
        3601,
        3606
      ],
      "op": "DUP3",
      "path": "37",
      "statement": 99
    },
    "8123": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8125": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8127": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "8129": {
      "op": "SHL"
    },
    "8130": {
      "op": "SUB"
    },
    "8131": {
      "fn": "Soulbound.revoke",
      "offset": [
        3580,
        3606
      ],
      "op": "AND",
      "path": "37"
    },
    "8132": {
      "fn": "Soulbound.revoke",
      "offset": [
        3580,
        3597
      ],
      "op": "PUSH2",
      "path": "37",
      "value": "0x1FCC"
    },
    "8135": {
      "fn": "Soulbound.revoke",
      "offset": [
        3588,
        3596
      ],
      "op": "DUP4",
      "path": "37"
    },
    "8136": {
      "fn": "Soulbound.revoke",
      "offset": [
        3580,
        3587
      ],
      "op": "PUSH2",
      "path": "37",
      "value": "0x1263"
    },
    "8139": {
      "fn": "Soulbound.revoke",
      "jump": "i",
      "offset": [
        3580,
        3597
      ],
      "op": "JUMP",
      "path": "37"
    },
    "8140": {
      "fn": "Soulbound.revoke",
      "offset": [
        3580,
        3597
      ],
      "op": "JUMPDEST",
      "path": "37"
    },
    "8141": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8143": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8145": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "8147": {
      "op": "SHL"
    },
    "8148": {
      "op": "SUB"
    },
    "8149": {
      "fn": "Soulbound.revoke",
      "offset": [
        3580,
        3606
      ],
      "op": "AND",
      "path": "37"
    },
    "8150": {
      "branch": 177,
      "fn": "Soulbound.revoke",
      "offset": [
        3580,
        3606
      ],
      "op": "EQ",
      "path": "37"
    },
    "8151": {
      "fn": "Soulbound.revoke",
      "offset": [
        3572,
        3637
      ],
      "op": "PUSH2",
      "path": "37",
      "value": "0x2022"
    },
    "8154": {
      "branch": 177,
      "fn": "Soulbound.revoke",
      "offset": [
        3572,
        3637
      ],
      "op": "JUMPI",
      "path": "37"
    },
    "8155": {
      "fn": "Soulbound.revoke",
      "offset": [
        3572,
        3637
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0x40"
    },
    "8157": {
      "fn": "Soulbound.revoke",
      "offset": [
        3572,
        3637
      ],
      "op": "MLOAD",
      "path": "37"
    },
    "8158": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "8162": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "8164": {
      "op": "SHL"
    },
    "8165": {
      "fn": "Soulbound.revoke",
      "offset": [
        3572,
        3637
      ],
      "op": "DUP2",
      "path": "37"
    },
    "8166": {
      "fn": "Soulbound.revoke",
      "offset": [
        3572,
        3637
      ],
      "op": "MSTORE",
      "path": "37"
    },
    "8167": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "8169": {
      "fn": "Soulbound.revoke",
      "offset": [
        3572,
        3637
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0x4"
    },
    "8171": {
      "fn": "Soulbound.revoke",
      "offset": [
        3572,
        3637
      ],
      "op": "DUP3",
      "path": "37"
    },
    "8172": {
      "fn": "Soulbound.revoke",
      "offset": [
        3572,
        3637
      ],
      "op": "ADD",
      "path": "37"
    },
    "8173": {
      "op": "MSTORE"
    },
    "8174": {
      "op": "PUSH1",
      "value": "0x1A"
    },
    "8176": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "8178": {
      "op": "DUP3"
    },
    "8179": {
      "op": "ADD"
    },
    "8180": {
      "op": "MSTORE"
    },
    "8181": {
      "op": "PUSH32",
      "value": "0x546F6B656E206E6F74206F776E65642062792061646472657373000000000000"
    },
    "8214": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "8216": {
      "op": "DUP3"
    },
    "8217": {
      "op": "ADD"
    },
    "8218": {
      "op": "MSTORE"
    },
    "8219": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "8221": {
      "op": "ADD"
    },
    "8222": {
      "fn": "Soulbound.revoke",
      "offset": [
        3572,
        3637
      ],
      "op": "PUSH2",
      "path": "37",
      "value": "0x6B1"
    },
    "8225": {
      "op": "JUMP"
    },
    "8226": {
      "fn": "Soulbound.revoke",
      "offset": [
        3572,
        3637
      ],
      "op": "JUMPDEST",
      "path": "37"
    },
    "8227": {
      "fn": "Soulbound.revoke",
      "offset": [
        3680,
        3708
      ],
      "op": "PUSH2",
      "path": "37",
      "statement": 100,
      "value": "0x202B"
    },
    "8230": {
      "fn": "Soulbound.revoke",
      "offset": [
        3699,
        3707
      ],
      "op": "DUP3",
      "path": "37"
    },
    "8231": {
      "fn": "Soulbound.revoke",
      "offset": [
        3680,
        3698
      ],
      "op": "PUSH2",
      "path": "37",
      "value": "0x2481"
    },
    "8234": {
      "fn": "Soulbound.revoke",
      "jump": "i",
      "offset": [
        3680,
        3708
      ],
      "op": "JUMP",
      "path": "37"
    },
    "8235": {
      "fn": "Soulbound.revoke",
      "offset": [
        3680,
        3708
      ],
      "op": "JUMPDEST",
      "path": "37"
    },
    "8236": {
      "op": "POP"
    },
    "8237": {
      "fn": "Soulbound.revoke",
      "offset": [
        3755,
        3759
      ],
      "op": "PUSH1",
      "path": "37",
      "statement": 101,
      "value": "0x1"
    },
    "8239": {
      "fn": "Soulbound.revoke",
      "offset": [
        3338,
        3766
      ],
      "op": "SWAP3",
      "path": "37"
    },
    "8240": {
      "fn": "Soulbound.revoke",
      "offset": [
        3338,
        3766
      ],
      "op": "SWAP2",
      "path": "37"
    },
    "8241": {
      "fn": "Soulbound.revoke",
      "offset": [
        3338,
        3766
      ],
      "op": "POP",
      "path": "37"
    },
    "8242": {
      "fn": "Soulbound.revoke",
      "offset": [
        3338,
        3766
      ],
      "op": "POP",
      "path": "37"
    },
    "8243": {
      "fn": "Soulbound.revoke",
      "jump": "o",
      "offset": [
        3338,
        3766
      ],
      "op": "JUMP",
      "path": "37"
    },
    "8244": {
      "fn": "SoulboundCore.toString",
      "offset": [
        6660,
        7363
      ],
      "op": "JUMPDEST",
      "path": "38"
    },
    "8245": {
      "fn": "SoulboundCore.toString",
      "offset": [
        6716,
        6729
      ],
      "op": "PUSH1",
      "path": "38",
      "value": "0x60"
    },
    "8247": {
      "fn": "SoulboundCore.toString",
      "offset": [
        6933,
        6938
      ],
      "op": "DUP2",
      "path": "38"
    },
    "8248": {
      "fn": "SoulboundCore.toString",
      "offset": [
        6942,
        6943
      ],
      "op": "PUSH1",
      "path": "38",
      "value": "0x0"
    },
    "8250": {
      "branch": 190,
      "fn": "SoulboundCore.toString",
      "offset": [
        6933,
        6943
      ],
      "op": "SUB",
      "path": "38"
    },
    "8251": {
      "fn": "SoulboundCore.toString",
      "offset": [
        6929,
        6980
      ],
      "op": "PUSH2",
      "path": "38",
      "value": "0x205B"
    },
    "8254": {
      "branch": 190,
      "fn": "SoulboundCore.toString",
      "offset": [
        6929,
        6980
      ],
      "op": "JUMPI",
      "path": "38"
    },
    "8255": {
      "op": "POP"
    },
    "8256": {
      "op": "POP"
    },
    "8257": {
      "fn": "SoulboundCore.toString",
      "offset": [
        6959,
        6969
      ],
      "op": "PUSH1",
      "path": "38",
      "statement": 102,
      "value": "0x40"
    },
    "8259": {
      "fn": "SoulboundCore.toString",
      "offset": [
        6959,
        6969
      ],
      "op": "DUP1",
      "path": "38"
    },
    "8260": {
      "fn": "SoulboundCore.toString",
      "offset": [
        6959,
        6969
      ],
      "op": "MLOAD",
      "path": "38"
    },
    "8261": {
      "fn": "SoulboundCore.toString",
      "offset": [
        6959,
        6969
      ],
      "op": "DUP1",
      "path": "38"
    },
    "8262": {
      "fn": "SoulboundCore.toString",
      "offset": [
        6959,
        6969
      ],
      "op": "DUP3",
      "path": "38"
    },
    "8263": {
      "fn": "SoulboundCore.toString",
      "offset": [
        6959,
        6969
      ],
      "op": "ADD",
      "path": "38"
    },
    "8264": {
      "fn": "SoulboundCore.toString",
      "offset": [
        6959,
        6969
      ],
      "op": "SWAP1",
      "path": "38"
    },
    "8265": {
      "fn": "SoulboundCore.toString",
      "offset": [
        6959,
        6969
      ],
      "op": "SWAP2",
      "path": "38"
    },
    "8266": {
      "fn": "SoulboundCore.toString",
      "offset": [
        6959,
        6969
      ],
      "op": "MSTORE",
      "path": "38"
    },
    "8267": {
      "fn": "SoulboundCore.toString",
      "offset": [
        6959,
        6969
      ],
      "op": "PUSH1",
      "path": "38",
      "value": "0x1"
    },
    "8269": {
      "fn": "SoulboundCore.toString",
      "offset": [
        6959,
        6969
      ],
      "op": "DUP2",
      "path": "38"
    },
    "8270": {
      "fn": "SoulboundCore.toString",
      "offset": [
        6959,
        6969
      ],
      "op": "MSTORE",
      "path": "38"
    },
    "8271": {
      "op": "PUSH1",
      "value": "0x3"
    },
    "8273": {
      "op": "PUSH1",
      "value": "0xFC"
    },
    "8275": {
      "op": "SHL"
    },
    "8276": {
      "fn": "SoulboundCore.toString",
      "offset": [
        6959,
        6969
      ],
      "op": "PUSH1",
      "path": "38",
      "value": "0x20"
    },
    "8278": {
      "fn": "SoulboundCore.toString",
      "offset": [
        6959,
        6969
      ],
      "op": "DUP3",
      "path": "38"
    },
    "8279": {
      "fn": "SoulboundCore.toString",
      "offset": [
        6959,
        6969
      ],
      "op": "ADD",
      "path": "38"
    },
    "8280": {
      "fn": "SoulboundCore.toString",
      "offset": [
        6959,
        6969
      ],
      "op": "MSTORE",
      "path": "38"
    },
    "8281": {
      "fn": "SoulboundCore.toString",
      "offset": [
        6959,
        6969
      ],
      "op": "SWAP1",
      "path": "38"
    },
    "8282": {
      "fn": "SoulboundCore.toString",
      "jump": "o",
      "offset": [
        6660,
        7363
      ],
      "op": "JUMP",
      "path": "38"
    },
    "8283": {
      "fn": "SoulboundCore.toString",
      "offset": [
        6929,
        6980
      ],
      "op": "JUMPDEST",
      "path": "38"
    },
    "8284": {
      "fn": "SoulboundCore.toString",
      "offset": [
        7004,
        7009
      ],
      "op": "DUP2",
      "path": "38"
    },
    "8285": {
      "fn": "SoulboundCore.toString",
      "offset": [
        6989,
        7001
      ],
      "op": "PUSH1",
      "path": "38",
      "value": "0x0"
    },
    "8287": {
      "fn": "SoulboundCore.toString",
      "offset": [
        7043,
        7118
      ],
      "op": "JUMPDEST",
      "path": "38"
    },
    "8288": {
      "fn": "SoulboundCore.toString",
      "offset": [
        7050,
        7059
      ],
      "op": "DUP2",
      "path": "38"
    },
    "8289": {
      "fn": "SoulboundCore.toString",
      "offset": [
        7050,
        7059
      ],
      "op": "ISZERO",
      "path": "38"
    },
    "8290": {
      "fn": "SoulboundCore.toString",
      "offset": [
        7043,
        7118
      ],
      "op": "PUSH2",
      "path": "38",
      "value": "0x2085"
    },
    "8293": {
      "fn": "SoulboundCore.toString",
      "offset": [
        7043,
        7118
      ],
      "op": "JUMPI",
      "path": "38"
    },
    "8294": {
      "fn": "SoulboundCore.toString",
      "offset": [
        7075,
        7083
      ],
      "op": "DUP1",
      "path": "38",
      "statement": 103
    },
    "8295": {
      "fn": "SoulboundCore.toString",
      "offset": [
        7075,
        7083
      ],
      "op": "PUSH2",
      "path": "38",
      "value": "0x206F"
    },
    "8298": {
      "fn": "SoulboundCore.toString",
      "offset": [
        7075,
        7083
      ],
      "op": "DUP2",
      "path": "38"
    },
    "8299": {
      "fn": "SoulboundCore.toString",
      "offset": [
        7075,
        7083
      ],
      "op": "PUSH2",
      "path": "38",
      "value": "0x2CA5"
    },
    "8302": {
      "fn": "SoulboundCore.toString",
      "jump": "i",
      "offset": [
        7075,
        7083
      ],
      "op": "JUMP",
      "path": "38"
    },
    "8303": {
      "fn": "SoulboundCore.toString",
      "offset": [
        7075,
        7083
      ],
      "op": "JUMPDEST",
      "path": "38"
    },
    "8304": {
      "fn": "SoulboundCore.toString",
      "offset": [
        7075,
        7083
      ],
      "op": "SWAP2",
      "path": "38"
    },
    "8305": {
      "op": "POP"
    },
    "8306": {
      "fn": "SoulboundCore.toString",
      "offset": [
        7097,
        7107
      ],
      "op": "PUSH2",
      "path": "38",
      "statement": 104,
      "value": "0x207E"
    },
    "8309": {
      "fn": "SoulboundCore.toString",
      "offset": [
        7097,
        7107
      ],
      "op": "SWAP1",
      "path": "38"
    },
    "8310": {
      "op": "POP"
    },
    "8311": {
      "fn": "SoulboundCore.toString",
      "offset": [
        7105,
        7107
      ],
      "op": "PUSH1",
      "path": "38",
      "value": "0xA"
    },
    "8313": {
      "fn": "SoulboundCore.toString",
      "offset": [
        7097,
        7107
      ],
      "op": "DUP4",
      "path": "38"
    },
    "8314": {
      "fn": "SoulboundCore.toString",
      "offset": [
        7097,
        7107
      ],
      "op": "PUSH2",
      "path": "38",
      "value": "0x2CEC"
    },
    "8317": {
      "fn": "SoulboundCore.toString",
      "jump": "i",
      "offset": [
        7097,
        7107
      ],
      "op": "JUMP",
      "path": "38"
    },
    "8318": {
      "fn": "SoulboundCore.toString",
      "offset": [
        7097,
        7107
      ],
      "op": "JUMPDEST",
      "path": "38"
    },
    "8319": {
      "fn": "SoulboundCore.toString",
      "offset": [
        7097,
        7107
      ],
      "op": "SWAP2",
      "path": "38"
    },
    "8320": {
      "fn": "SoulboundCore.toString",
      "offset": [
        7097,
        7107
      ],
      "op": "POP",
      "path": "38"
    },
    "8321": {
      "fn": "SoulboundCore.toString",
      "offset": [
        7043,
        7118
      ],
      "op": "PUSH2",
      "path": "38",
      "value": "0x205F"
    },
    "8324": {
      "fn": "SoulboundCore.toString",
      "offset": [
        7043,
        7118
      ],
      "op": "JUMP",
      "path": "38"
    },
    "8325": {
      "fn": "SoulboundCore.toString",
      "offset": [
        7043,
        7118
      ],
      "op": "JUMPDEST",
      "path": "38"
    },
    "8326": {
      "fn": "SoulboundCore.toString",
      "offset": [
        7127,
        7146
      ],
      "op": "PUSH1",
      "path": "38",
      "value": "0x0"
    },
    "8328": {
      "fn": "SoulboundCore.toString",
      "offset": [
        7159,
        7165
      ],
      "op": "DUP2",
      "path": "38"
    },
    "8329": {
      "fn": "SoulboundCore.toString",
      "offset": [
        7149,
        7166
      ],
      "op": "PUSH8",
      "path": "38",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "8338": {
      "fn": "SoulboundCore.toString",
      "offset": [
        7149,
        7166
      ],
      "op": "DUP2",
      "path": "38"
    },
    "8339": {
      "fn": "SoulboundCore.toString",
      "offset": [
        7149,
        7166
      ],
      "op": "GT",
      "path": "38"
    },
    "8340": {
      "fn": "SoulboundCore.toString",
      "offset": [
        7149,
        7166
      ],
      "op": "ISZERO",
      "path": "38"
    },
    "8341": {
      "fn": "SoulboundCore.toString",
      "offset": [
        7149,
        7166
      ],
      "op": "PUSH2",
      "path": "38",
      "value": "0x20A0"
    },
    "8344": {
      "fn": "SoulboundCore.toString",
      "offset": [
        7149,
        7166
      ],
      "op": "JUMPI",
      "path": "38"
    },
    "8345": {
      "fn": "SoulboundCore.toString",
      "offset": [
        7149,
        7166
      ],
      "op": "PUSH2",
      "path": "38",
      "value": "0x20A0"
    },
    "8348": {
      "fn": "SoulboundCore.toString",
      "offset": [
        7149,
        7166
      ],
      "op": "PUSH2",
      "path": "38",
      "value": "0x27D0"
    },
    "8351": {
      "fn": "SoulboundCore.toString",
      "jump": "i",
      "offset": [
        7149,
        7166
      ],
      "op": "JUMP",
      "path": "38"
    },
    "8352": {
      "fn": "SoulboundCore.toString",
      "offset": [
        7149,
        7166
      ],
      "op": "JUMPDEST",
      "path": "38"
    },
    "8353": {
      "fn": "SoulboundCore.toString",
      "offset": [
        7149,
        7166
      ],
      "op": "PUSH1",
      "path": "38",
      "value": "0x40"
    },
    "8355": {
      "fn": "SoulboundCore.toString",
      "offset": [
        7149,
        7166
      ],
      "op": "MLOAD",
      "path": "38"
    },
    "8356": {
      "fn": "SoulboundCore.toString",
      "offset": [
        7149,
        7166
      ],
      "op": "SWAP1",
      "path": "38"
    },
    "8357": {
      "fn": "SoulboundCore.toString",
      "offset": [
        7149,
        7166
      ],
      "op": "DUP1",
      "path": "38"
    },
    "8358": {
      "fn": "SoulboundCore.toString",
      "offset": [
        7149,
        7166
      ],
      "op": "DUP3",
      "path": "38"
    },
    "8359": {
      "fn": "SoulboundCore.toString",
      "offset": [
        7149,
        7166
      ],
      "op": "MSTORE",
      "path": "38"
    },
    "8360": {
      "fn": "SoulboundCore.toString",
      "offset": [
        7149,
        7166
      ],
      "op": "DUP1",
      "path": "38"
    },
    "8361": {
      "fn": "SoulboundCore.toString",
      "offset": [
        7149,
        7166
      ],
      "op": "PUSH1",
      "path": "38",
      "value": "0x1F"
    },
    "8363": {
      "fn": "SoulboundCore.toString",
      "offset": [
        7149,
        7166
      ],
      "op": "ADD",
      "path": "38"
    },
    "8364": {
      "fn": "SoulboundCore.toString",
      "offset": [
        7149,
        7166
      ],
      "op": "PUSH1",
      "path": "38",
      "value": "0x1F"
    },
    "8366": {
      "fn": "SoulboundCore.toString",
      "offset": [
        7149,
        7166
      ],
      "op": "NOT",
      "path": "38"
    },
    "8367": {
      "fn": "SoulboundCore.toString",
      "offset": [
        7149,
        7166
      ],
      "op": "AND",
      "path": "38"
    },
    "8368": {
      "fn": "SoulboundCore.toString",
      "offset": [
        7149,
        7166
      ],
      "op": "PUSH1",
      "path": "38",
      "value": "0x20"
    },
    "8370": {
      "fn": "SoulboundCore.toString",
      "offset": [
        7149,
        7166
      ],
      "op": "ADD",
      "path": "38"
    },
    "8371": {
      "fn": "SoulboundCore.toString",
      "offset": [
        7149,
        7166
      ],
      "op": "DUP3",
      "path": "38"
    },
    "8372": {
      "fn": "SoulboundCore.toString",
      "offset": [
        7149,
        7166
      ],
      "op": "ADD",
      "path": "38"
    },
    "8373": {
      "fn": "SoulboundCore.toString",
      "offset": [
        7149,
        7166
      ],
      "op": "PUSH1",
      "path": "38",
      "value": "0x40"
    },
    "8375": {
      "fn": "SoulboundCore.toString",
      "offset": [
        7149,
        7166
      ],
      "op": "MSTORE",
      "path": "38"
    },
    "8376": {
      "fn": "SoulboundCore.toString",
      "offset": [
        7149,
        7166
      ],
      "op": "DUP1",
      "path": "38"
    },
    "8377": {
      "fn": "SoulboundCore.toString",
      "offset": [
        7149,
        7166
      ],
      "op": "ISZERO",
      "path": "38"
    },
    "8378": {
      "fn": "SoulboundCore.toString",
      "offset": [
        7149,
        7166
      ],
      "op": "PUSH2",
      "path": "38",
      "value": "0x20CA"
    },
    "8381": {
      "fn": "SoulboundCore.toString",
      "offset": [
        7149,
        7166
      ],
      "op": "JUMPI",
      "path": "38"
    },
    "8382": {
      "fn": "SoulboundCore.toString",
      "offset": [
        7149,
        7166
      ],
      "op": "PUSH1",
      "path": "38",
      "value": "0x20"
    },
    "8384": {
      "fn": "SoulboundCore.toString",
      "offset": [
        7149,
        7166
      ],
      "op": "DUP3",
      "path": "38"
    },
    "8385": {
      "fn": "SoulboundCore.toString",
      "offset": [
        7149,
        7166
      ],
      "op": "ADD",
      "path": "38"
    },
    "8386": {
      "fn": "SoulboundCore.toString",
      "offset": [
        7149,
        7166
      ],
      "op": "DUP2",
      "path": "38"
    },
    "8387": {
      "fn": "SoulboundCore.toString",
      "offset": [
        7149,
        7166
      ],
      "op": "DUP1",
      "path": "38"
    },
    "8388": {
      "fn": "SoulboundCore.toString",
      "offset": [
        7149,
        7166
      ],
      "op": "CALLDATASIZE",
      "path": "38"
    },
    "8389": {
      "fn": "SoulboundCore.toString",
      "offset": [
        7149,
        7166
      ],
      "op": "DUP4",
      "path": "38"
    },
    "8390": {
      "fn": "SoulboundCore.toString",
      "offset": [
        7149,
        7166
      ],
      "op": "CALLDATACOPY",
      "path": "38"
    },
    "8391": {
      "fn": "SoulboundCore.toString",
      "offset": [
        7149,
        7166
      ],
      "op": "ADD",
      "path": "38"
    },
    "8392": {
      "fn": "SoulboundCore.toString",
      "offset": [
        7149,
        7166
      ],
      "op": "SWAP1",
      "path": "38"
    },
    "8393": {
      "op": "POP"
    },
    "8394": {
      "fn": "SoulboundCore.toString",
      "offset": [
        7149,
        7166
      ],
      "op": "JUMPDEST",
      "path": "38"
    },
    "8395": {
      "fn": "SoulboundCore.toString",
      "offset": [
        7149,
        7166
      ],
      "op": "POP",
      "path": "38"
    },
    "8396": {
      "fn": "SoulboundCore.toString",
      "offset": [
        7127,
        7166
      ],
      "op": "SWAP1",
      "path": "38"
    },
    "8397": {
      "fn": "SoulboundCore.toString",
      "offset": [
        7127,
        7166
      ],
      "op": "POP",
      "path": "38"
    },
    "8398": {
      "fn": "SoulboundCore.toString",
      "offset": [
        7176,
        7326
      ],
      "op": "JUMPDEST",
      "path": "38"
    },
    "8399": {
      "fn": "SoulboundCore.toString",
      "offset": [
        7183,
        7193
      ],
      "op": "DUP5",
      "path": "38"
    },
    "8400": {
      "fn": "SoulboundCore.toString",
      "offset": [
        7183,
        7193
      ],
      "op": "ISZERO",
      "path": "38"
    },
    "8401": {
      "fn": "SoulboundCore.toString",
      "offset": [
        7176,
        7326
      ],
      "op": "PUSH2",
      "path": "38",
      "value": "0x2135"
    },
    "8404": {
      "fn": "SoulboundCore.toString",
      "offset": [
        7176,
        7326
      ],
      "op": "JUMPI",
      "path": "38"
    },
    "8405": {
      "fn": "SoulboundCore.toString",
      "offset": [
        7209,
        7220
      ],
      "op": "PUSH2",
      "path": "38",
      "statement": 105,
      "value": "0x20DF"
    },
    "8408": {
      "fn": "SoulboundCore.toString",
      "offset": [
        7219,
        7220
      ],
      "op": "PUSH1",
      "path": "38",
      "value": "0x1"
    },
    "8410": {
      "fn": "SoulboundCore.toString",
      "offset": [
        7209,
        7220
      ],
      "op": "DUP4",
      "path": "38"
    },
    "8411": {
      "fn": "SoulboundCore.toString",
      "offset": [
        7209,
        7220
      ],
      "op": "PUSH2",
      "path": "38",
      "value": "0x2C8E"
    },
    "8414": {
      "fn": "SoulboundCore.toString",
      "jump": "i",
      "offset": [
        7209,
        7220
      ],
      "op": "JUMP",
      "path": "38"
    },
    "8415": {
      "fn": "SoulboundCore.toString",
      "offset": [
        7209,
        7220
      ],
      "op": "JUMPDEST",
      "path": "38"
    },
    "8416": {
      "fn": "SoulboundCore.toString",
      "offset": [
        7209,
        7220
      ],
      "op": "SWAP2",
      "path": "38"
    },
    "8417": {
      "op": "POP"
    },
    "8418": {
      "fn": "SoulboundCore.toString",
      "offset": [
        7277,
        7287
      ],
      "op": "PUSH2",
      "path": "38",
      "statement": 106,
      "value": "0x20EC"
    },
    "8421": {
      "fn": "SoulboundCore.toString",
      "offset": [
        7285,
        7287
      ],
      "op": "PUSH1",
      "path": "38",
      "value": "0xA"
    },
    "8423": {
      "fn": "SoulboundCore.toString",
      "offset": [
        7277,
        7282
      ],
      "op": "DUP7",
      "path": "38"
    },
    "8424": {
      "fn": "SoulboundCore.toString",
      "offset": [
        7277,
        7287
      ],
      "op": "PUSH2",
      "path": "38",
      "value": "0x2D00"
    },
    "8427": {
      "fn": "SoulboundCore.toString",
      "jump": "i",
      "offset": [
        7277,
        7287
      ],
      "op": "JUMP",
      "path": "38"
    },
    "8428": {
      "fn": "SoulboundCore.toString",
      "offset": [
        7277,
        7287
      ],
      "op": "JUMPDEST",
      "path": "38"
    },
    "8429": {
      "fn": "SoulboundCore.toString",
      "offset": [
        7264,
        7288
      ],
      "op": "PUSH2",
      "path": "38",
      "value": "0x20F7"
    },
    "8432": {
      "fn": "SoulboundCore.toString",
      "offset": [
        7264,
        7288
      ],
      "op": "SWAP1",
      "path": "38"
    },
    "8433": {
      "fn": "SoulboundCore.toString",
      "offset": [
        7264,
        7266
      ],
      "op": "PUSH1",
      "path": "38",
      "value": "0x30"
    },
    "8435": {
      "fn": "SoulboundCore.toString",
      "offset": [
        7264,
        7288
      ],
      "op": "PUSH2",
      "path": "38",
      "value": "0x2CBE"
    },
    "8438": {
      "fn": "SoulboundCore.toString",
      "jump": "i",
      "offset": [
        7264,
        7288
      ],
      "op": "JUMP",
      "path": "38"
    },
    "8439": {
      "fn": "SoulboundCore.toString",
      "offset": [
        7264,
        7288
      ],
      "op": "JUMPDEST",
      "path": "38"
    },
    "8440": {
      "fn": "SoulboundCore.toString",
      "offset": [
        7251,
        7290
      ],
      "op": "PUSH1",
      "path": "38",
      "value": "0xF8"
    },
    "8442": {
      "fn": "SoulboundCore.toString",
      "offset": [
        7251,
        7290
      ],
      "op": "SHL",
      "path": "38"
    },
    "8443": {
      "fn": "SoulboundCore.toString",
      "offset": [
        7234,
        7240
      ],
      "op": "DUP2",
      "path": "38"
    },
    "8444": {
      "fn": "SoulboundCore.toString",
      "offset": [
        7241,
        7247
      ],
      "op": "DUP4",
      "path": "38"
    },
    "8445": {
      "fn": "SoulboundCore.toString",
      "offset": [
        7234,
        7248
      ],
      "op": "DUP2",
      "path": "38"
    },
    "8446": {
      "fn": "SoulboundCore.toString",
      "offset": [
        7234,
        7248
      ],
      "op": "MLOAD",
      "path": "38"
    },
    "8447": {
      "fn": "SoulboundCore.toString",
      "offset": [
        7234,
        7248
      ],
      "op": "DUP2",
      "path": "38"
    },
    "8448": {
      "fn": "SoulboundCore.toString",
      "offset": [
        7234,
        7248
      ],
      "op": "LT",
      "path": "38"
    },
    "8449": {
      "fn": "SoulboundCore.toString",
      "offset": [
        7234,
        7248
      ],
      "op": "PUSH2",
      "path": "38",
      "value": "0x210C"
    },
    "8452": {
      "fn": "SoulboundCore.toString",
      "offset": [
        7234,
        7248
      ],
      "op": "JUMPI",
      "path": "38"
    },
    "8453": {
      "fn": "SoulboundCore.toString",
      "offset": [
        7234,
        7248
      ],
      "op": "PUSH2",
      "path": "38",
      "value": "0x210C"
    },
    "8456": {
      "fn": "SoulboundCore.toString",
      "offset": [
        7234,
        7248
      ],
      "op": "PUSH2",
      "path": "38",
      "value": "0x2D14"
    },
    "8459": {
      "fn": "SoulboundCore.toString",
      "jump": "i",
      "offset": [
        7234,
        7248
      ],
      "op": "JUMP",
      "path": "38"
    },
    "8460": {
      "fn": "SoulboundCore.toString",
      "offset": [
        7234,
        7248
      ],
      "op": "JUMPDEST",
      "path": "38"
    },
    "8461": {
      "fn": "SoulboundCore.toString",
      "offset": [
        7234,
        7248
      ],
      "op": "PUSH1",
      "path": "38",
      "value": "0x20"
    },
    "8463": {
      "fn": "SoulboundCore.toString",
      "offset": [
        7234,
        7248
      ],
      "op": "ADD",
      "path": "38"
    },
    "8464": {
      "fn": "SoulboundCore.toString",
      "offset": [
        7234,
        7248
      ],
      "op": "ADD",
      "path": "38"
    },
    "8465": {
      "fn": "SoulboundCore.toString",
      "offset": [
        7234,
        7290
      ],
      "op": "SWAP1",
      "path": "38"
    },
    "8466": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8468": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8470": {
      "op": "PUSH1",
      "value": "0xF8"
    },
    "8472": {
      "op": "SHL"
    },
    "8473": {
      "op": "SUB"
    },
    "8474": {
      "fn": "SoulboundCore.toString",
      "offset": [
        7234,
        7290
      ],
      "op": "NOT",
      "path": "38"
    },
    "8475": {
      "fn": "SoulboundCore.toString",
      "offset": [
        7234,
        7290
      ],
      "op": "AND",
      "path": "38"
    },
    "8476": {
      "fn": "SoulboundCore.toString",
      "offset": [
        7234,
        7290
      ],
      "op": "SWAP1",
      "path": "38"
    },
    "8477": {
      "fn": "SoulboundCore.toString",
      "offset": [
        7234,
        7290
      ],
      "op": "DUP2",
      "path": "38"
    },
    "8478": {
      "fn": "SoulboundCore.toString",
      "offset": [
        7234,
        7290
      ],
      "op": "PUSH1",
      "path": "38",
      "value": "0x0"
    },
    "8480": {
      "fn": "SoulboundCore.toString",
      "offset": [
        7234,
        7290
      ],
      "op": "BYTE",
      "path": "38"
    },
    "8481": {
      "fn": "SoulboundCore.toString",
      "offset": [
        7234,
        7290
      ],
      "op": "SWAP1",
      "path": "38"
    },
    "8482": {
      "fn": "SoulboundCore.toString",
      "offset": [
        7234,
        7290
      ],
      "op": "MSTORE8",
      "path": "38"
    },
    "8483": {
      "op": "POP"
    },
    "8484": {
      "fn": "SoulboundCore.toString",
      "offset": [
        7304,
        7315
      ],
      "op": "PUSH2",
      "path": "38",
      "statement": 107,
      "value": "0x212E"
    },
    "8487": {
      "fn": "SoulboundCore.toString",
      "offset": [
        7313,
        7315
      ],
      "op": "PUSH1",
      "path": "38",
      "value": "0xA"
    },
    "8489": {
      "fn": "SoulboundCore.toString",
      "offset": [
        7304,
        7315
      ],
      "op": "DUP7",
      "path": "38"
    },
    "8490": {
      "fn": "SoulboundCore.toString",
      "offset": [
        7304,
        7315
      ],
      "op": "PUSH2",
      "path": "38",
      "value": "0x2CEC"
    },
    "8493": {
      "fn": "SoulboundCore.toString",
      "jump": "i",
      "offset": [
        7304,
        7315
      ],
      "op": "JUMP",
      "path": "38"
    },
    "8494": {
      "fn": "SoulboundCore.toString",
      "offset": [
        7304,
        7315
      ],
      "op": "JUMPDEST",
      "path": "38"
    },
    "8495": {
      "fn": "SoulboundCore.toString",
      "offset": [
        7304,
        7315
      ],
      "op": "SWAP5",
      "path": "38"
    },
    "8496": {
      "fn": "SoulboundCore.toString",
      "offset": [
        7304,
        7315
      ],
      "op": "POP",
      "path": "38"
    },
    "8497": {
      "fn": "SoulboundCore.toString",
      "offset": [
        7176,
        7326
      ],
      "op": "PUSH2",
      "path": "38",
      "value": "0x20CE"
    },
    "8500": {
      "fn": "SoulboundCore.toString",
      "offset": [
        7176,
        7326
      ],
      "op": "JUMP",
      "path": "38"
    },
    "8501": {
      "fn": "SoulboundCore.toString",
      "offset": [
        7176,
        7326
      ],
      "op": "JUMPDEST",
      "path": "38"
    },
    "8502": {
      "fn": "SoulboundCore.toString",
      "offset": [
        7349,
        7355
      ],
      "op": "SWAP5",
      "path": "38",
      "statement": 108
    },
    "8503": {
      "fn": "SoulboundCore.toString",
      "offset": [
        6660,
        7363
      ],
      "op": "SWAP4",
      "path": "38"
    },
    "8504": {
      "op": "POP"
    },
    "8505": {
      "op": "POP"
    },
    "8506": {
      "op": "POP"
    },
    "8507": {
      "op": "POP"
    },
    "8508": {
      "fn": "SoulboundCore.toString",
      "jump": "o",
      "offset": [
        6660,
        7363
      ],
      "op": "JUMP",
      "path": "38"
    },
    "8509": {
      "fn": "Soulbound.issue",
      "offset": [
        2196,
        2501
      ],
      "op": "JUMPDEST",
      "path": "37"
    },
    "8510": {
      "fn": "Soulbound.issue",
      "offset": [
        2314,
        2318
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0x0"
    },
    "8512": {
      "fn": "Soulbound.issue",
      "offset": [
        2400,
        2443
      ],
      "op": "PUSH2",
      "path": "37",
      "statement": 109,
      "value": "0x214A"
    },
    "8515": {
      "fn": "Soulbound.issue",
      "offset": [
        2419,
        2422
      ],
      "op": "DUP5",
      "path": "37"
    },
    "8516": {
      "fn": "Soulbound.issue",
      "offset": [
        2424,
        2432
      ],
      "op": "DUP5",
      "path": "37"
    },
    "8517": {
      "fn": "Soulbound.issue",
      "offset": [
        2434,
        2442
      ],
      "op": "DUP5",
      "path": "37"
    },
    "8518": {
      "fn": "Soulbound.issue",
      "offset": [
        2400,
        2418
      ],
      "op": "PUSH2",
      "path": "37",
      "value": "0x2517"
    },
    "8521": {
      "fn": "Soulbound.issue",
      "jump": "i",
      "offset": [
        2400,
        2443
      ],
      "op": "JUMP",
      "path": "37"
    },
    "8522": {
      "fn": "Soulbound.issue",
      "offset": [
        2400,
        2443
      ],
      "op": "JUMPDEST",
      "path": "37"
    },
    "8523": {
      "op": "POP"
    },
    "8524": {
      "fn": "Soulbound.issue",
      "offset": [
        2490,
        2494
      ],
      "op": "PUSH1",
      "path": "37",
      "statement": 110,
      "value": "0x1"
    },
    "8526": {
      "fn": "Soulbound.issue",
      "offset": [
        2196,
        2501
      ],
      "op": "SWAP4",
      "path": "37"
    },
    "8527": {
      "fn": "Soulbound.issue",
      "offset": [
        2196,
        2501
      ],
      "op": "SWAP3",
      "path": "37"
    },
    "8528": {
      "fn": "Soulbound.issue",
      "offset": [
        2196,
        2501
      ],
      "op": "POP",
      "path": "37"
    },
    "8529": {
      "fn": "Soulbound.issue",
      "offset": [
        2196,
        2501
      ],
      "op": "POP",
      "path": "37"
    },
    "8530": {
      "fn": "Soulbound.issue",
      "offset": [
        2196,
        2501
      ],
      "op": "POP",
      "path": "37"
    },
    "8531": {
      "fn": "Soulbound.issue",
      "jump": "o",
      "offset": [
        2196,
        2501
      ],
      "op": "JUMP",
      "path": "37"
    },
    "8532": {
      "fn": "SoulboundRedeemable.calculateTax",
      "offset": [
        15359,
        15779
      ],
      "op": "JUMPDEST",
      "path": "39"
    },
    "8533": {
      "fn": "SoulboundRedeemable.calculateTax",
      "offset": [
        15417,
        15430
      ],
      "op": "PUSH1",
      "path": "39",
      "value": "0x0"
    },
    "8535": {
      "fn": "SoulboundRedeemable.calculateTax",
      "offset": [
        15587,
        15595
      ],
      "op": "PUSH5",
      "path": "39",
      "value": "0x746A528800"
    },
    "8541": {
      "fn": "SoulboundRedeemable.calculateTax",
      "offset": [
        15572,
        15584
      ],
      "op": "PUSH1",
      "path": "39",
      "value": "0xD"
    },
    "8543": {
      "fn": "SoulboundRedeemable.calculateTax",
      "offset": [
        15572,
        15584
      ],
      "op": "SLOAD",
      "path": "39"
    },
    "8544": {
      "branch": 163,
      "fn": "SoulboundRedeemable.calculateTax",
      "offset": [
        15572,
        15595
      ],
      "op": "LT",
      "path": "39"
    },
    "8545": {
      "fn": "SoulboundRedeemable.calculateTax",
      "offset": [
        15547,
        15665
      ],
      "op": "ISZERO",
      "path": "39"
    },
    "8546": {
      "fn": "SoulboundRedeemable.calculateTax",
      "offset": [
        15547,
        15665
      ],
      "op": "PUSH2",
      "path": "39",
      "value": "0x216A"
    },
    "8549": {
      "branch": 163,
      "fn": "SoulboundRedeemable.calculateTax",
      "offset": [
        15547,
        15665
      ],
      "op": "JUMPI",
      "path": "39"
    },
    "8550": {
      "fn": "SoulboundRedeemable.calculateTax",
      "offset": [
        15653,
        15654
      ],
      "op": "PUSH1",
      "path": "39",
      "statement": 111,
      "value": "0x0"
    },
    "8552": {
      "fn": "SoulboundRedeemable.calculateTax",
      "offset": [
        15646,
        15654
      ],
      "op": "SWAP2",
      "path": "39"
    },
    "8553": {
      "fn": "SoulboundRedeemable.calculateTax",
      "offset": [
        15646,
        15654
      ],
      "op": "POP",
      "path": "39"
    },
    "8554": {
      "fn": "SoulboundRedeemable.calculateTax",
      "offset": [
        15547,
        15665
      ],
      "op": "JUMPDEST",
      "path": "39"
    },
    "8555": {
      "fn": "SoulboundRedeemable.calculateTax",
      "offset": [
        15768,
        15772
      ],
      "op": "PUSH2",
      "path": "39",
      "statement": 112,
      "value": "0x3E8"
    },
    "8558": {
      "fn": "SoulboundRedeemable.calculateTax",
      "offset": [
        15747,
        15759
      ],
      "op": "PUSH1",
      "path": "39",
      "value": "0xD"
    },
    "8560": {
      "fn": "SoulboundRedeemable.calculateTax",
      "offset": [
        15747,
        15759
      ],
      "op": "SLOAD",
      "path": "39"
    },
    "8561": {
      "fn": "SoulboundRedeemable.calculateTax",
      "offset": [
        15740,
        15744
      ],
      "op": "DUP4",
      "path": "39"
    },
    "8562": {
      "fn": "SoulboundRedeemable.calculateTax",
      "offset": [
        15740,
        15759
      ],
      "op": "PUSH2",
      "path": "39",
      "value": "0x217B"
    },
    "8565": {
      "fn": "SoulboundRedeemable.calculateTax",
      "offset": [
        15740,
        15759
      ],
      "op": "SWAP2",
      "path": "39"
    },
    "8566": {
      "fn": "SoulboundRedeemable.calculateTax",
      "offset": [
        15740,
        15759
      ],
      "op": "SWAP1",
      "path": "39"
    },
    "8567": {
      "fn": "SoulboundRedeemable.calculateTax",
      "offset": [
        15740,
        15759
      ],
      "op": "PUSH2",
      "path": "39",
      "value": "0x2D2A"
    },
    "8570": {
      "fn": "SoulboundRedeemable.calculateTax",
      "jump": "i",
      "offset": [
        15740,
        15759
      ],
      "op": "JUMP",
      "path": "39"
    },
    "8571": {
      "fn": "SoulboundRedeemable.calculateTax",
      "offset": [
        15740,
        15759
      ],
      "op": "JUMPDEST",
      "path": "39"
    },
    "8572": {
      "fn": "SoulboundRedeemable.calculateTax",
      "offset": [
        15740,
        15764
      ],
      "op": "PUSH2",
      "path": "39",
      "value": "0x2186"
    },
    "8575": {
      "fn": "SoulboundRedeemable.calculateTax",
      "offset": [
        15740,
        15764
      ],
      "op": "SWAP1",
      "path": "39"
    },
    "8576": {
      "fn": "SoulboundRedeemable.calculateTax",
      "offset": [
        15762,
        15764
      ],
      "op": "PUSH1",
      "path": "39",
      "value": "0xA"
    },
    "8578": {
      "fn": "SoulboundRedeemable.calculateTax",
      "offset": [
        15740,
        15764
      ],
      "op": "PUSH2",
      "path": "39",
      "value": "0x2D2A"
    },
    "8581": {
      "fn": "SoulboundRedeemable.calculateTax",
      "jump": "i",
      "offset": [
        15740,
        15764
      ],
      "op": "JUMP",
      "path": "39"
    },
    "8582": {
      "fn": "SoulboundRedeemable.calculateTax",
      "offset": [
        15740,
        15764
      ],
      "op": "JUMPDEST",
      "path": "39"
    },
    "8583": {
      "fn": "SoulboundRedeemable.calculateTax",
      "offset": [
        15739,
        15772
      ],
      "op": "PUSH2",
      "path": "39",
      "value": "0x7A2"
    },
    "8586": {
      "fn": "SoulboundRedeemable.calculateTax",
      "offset": [
        15739,
        15772
      ],
      "op": "SWAP2",
      "path": "39"
    },
    "8587": {
      "fn": "SoulboundRedeemable.calculateTax",
      "offset": [
        15739,
        15772
      ],
      "op": "SWAP1",
      "path": "39"
    },
    "8588": {
      "fn": "SoulboundRedeemable.calculateTax",
      "offset": [
        15739,
        15772
      ],
      "op": "PUSH2",
      "path": "39",
      "value": "0x2CEC"
    },
    "8591": {
      "fn": "SoulboundRedeemable.calculateTax",
      "jump": "i",
      "offset": [
        15739,
        15772
      ],
      "op": "JUMP",
      "path": "39"
    },
    "8592": {
      "fn": "ERC4973._burn",
      "offset": [
        6408,
        6645
      ],
      "op": "JUMPDEST",
      "path": "41"
    },
    "8593": {
      "fn": "ERC4973._burn",
      "offset": [
        6467,
        6480
      ],
      "op": "PUSH1",
      "path": "41",
      "value": "0x0"
    },
    "8595": {
      "fn": "ERC4973._burn",
      "offset": [
        6483,
        6499
      ],
      "op": "PUSH2",
      "path": "41",
      "value": "0x219B"
    },
    "8598": {
      "fn": "ERC4973._burn",
      "offset": [
        6491,
        6498
      ],
      "op": "DUP3",
      "path": "41"
    },
    "8599": {
      "fn": "ERC4973._burn",
      "offset": [
        6483,
        6490
      ],
      "op": "PUSH2",
      "path": "41",
      "value": "0x1263"
    },
    "8602": {
      "fn": "ERC4973._burn",
      "jump": "i",
      "offset": [
        6483,
        6499
      ],
      "op": "JUMP",
      "path": "41"
    },
    "8603": {
      "fn": "ERC4973._burn",
      "offset": [
        6483,
        6499
      ],
      "op": "JUMPDEST",
      "path": "41"
    },
    "8604": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8606": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8608": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "8610": {
      "op": "SHL"
    },
    "8611": {
      "op": "SUB"
    },
    "8612": {
      "fn": "ERC4973._burn",
      "offset": [
        6510,
        6526
      ],
      "op": "DUP2",
      "path": "41",
      "statement": 113
    },
    "8613": {
      "fn": "ERC4973._burn",
      "offset": [
        6510,
        6526
      ],
      "op": "AND",
      "path": "41"
    },
    "8614": {
      "fn": "ERC4973._burn",
      "offset": [
        6510,
        6526
      ],
      "op": "PUSH1",
      "path": "41",
      "value": "0x0"
    },
    "8616": {
      "fn": "ERC4973._burn",
      "offset": [
        6510,
        6526
      ],
      "op": "SWAP1",
      "path": "41"
    },
    "8617": {
      "fn": "ERC4973._burn",
      "offset": [
        6510,
        6526
      ],
      "op": "DUP2",
      "path": "41"
    },
    "8618": {
      "fn": "ERC4973._burn",
      "offset": [
        6510,
        6526
      ],
      "op": "MSTORE",
      "path": "41"
    },
    "8619": {
      "fn": "ERC4973._burn",
      "offset": [
        6510,
        6519
      ],
      "op": "PUSH1",
      "path": "41",
      "value": "0x5"
    },
    "8621": {
      "fn": "ERC4973._burn",
      "offset": [
        6510,
        6526
      ],
      "op": "PUSH1",
      "path": "41",
      "value": "0x20"
    },
    "8623": {
      "fn": "ERC4973._burn",
      "offset": [
        6510,
        6526
      ],
      "op": "MSTORE",
      "path": "41"
    },
    "8624": {
      "fn": "ERC4973._burn",
      "offset": [
        6510,
        6526
      ],
      "op": "PUSH1",
      "path": "41",
      "value": "0x40"
    },
    "8626": {
      "fn": "ERC4973._burn",
      "offset": [
        6510,
        6526
      ],
      "op": "DUP2",
      "path": "41"
    },
    "8627": {
      "fn": "ERC4973._burn",
      "offset": [
        6510,
        6526
      ],
      "op": "KECCAK256",
      "path": "41"
    },
    "8628": {
      "fn": "ERC4973._burn",
      "offset": [
        6510,
        6531
      ],
      "op": "DUP1",
      "path": "41"
    },
    "8629": {
      "fn": "ERC4973._burn",
      "offset": [
        6510,
        6531
      ],
      "op": "SLOAD",
      "path": "41"
    },
    "8630": {
      "fn": "ERC4973._burn",
      "offset": [
        6467,
        6499
      ],
      "op": "SWAP3",
      "path": "41"
    },
    "8631": {
      "fn": "ERC4973._burn",
      "offset": [
        6467,
        6499
      ],
      "op": "SWAP4",
      "path": "41"
    },
    "8632": {
      "op": "POP"
    },
    "8633": {
      "fn": "ERC4973._burn",
      "offset": [
        6530,
        6531
      ],
      "op": "PUSH1",
      "path": "41",
      "value": "0x1"
    },
    "8635": {
      "fn": "ERC4973._burn",
      "offset": [
        6530,
        6531
      ],
      "op": "SWAP3",
      "path": "41"
    },
    "8636": {
      "fn": "ERC4973._burn",
      "offset": [
        6510,
        6526
      ],
      "op": "SWAP1",
      "path": "41"
    },
    "8637": {
      "fn": "ERC4973._burn",
      "offset": [
        6510,
        6526
      ],
      "op": "SWAP2",
      "path": "41"
    },
    "8638": {
      "fn": "ERC4973._burn",
      "offset": [
        6510,
        6526
      ],
      "op": "SWAP1",
      "path": "41"
    },
    "8639": {
      "fn": "ERC4973._burn",
      "offset": [
        6510,
        6531
      ],
      "op": "PUSH2",
      "path": "41",
      "value": "0x21C9"
    },
    "8642": {
      "fn": "ERC4973._burn",
      "offset": [
        6510,
        6531
      ],
      "op": "SWAP1",
      "path": "41"
    },
    "8643": {
      "fn": "ERC4973._burn",
      "offset": [
        6530,
        6531
      ],
      "op": "DUP5",
      "path": "41"
    },
    "8644": {
      "fn": "ERC4973._burn",
      "offset": [
        6530,
        6531
      ],
      "op": "SWAP1",
      "path": "41"
    },
    "8645": {
      "fn": "ERC4973._burn",
      "offset": [
        6510,
        6531
      ],
      "op": "PUSH2",
      "path": "41",
      "value": "0x2C8E"
    },
    "8648": {
      "fn": "ERC4973._burn",
      "jump": "i",
      "offset": [
        6510,
        6531
      ],
      "op": "JUMP",
      "path": "41"
    },
    "8649": {
      "fn": "ERC4973._burn",
      "offset": [
        6510,
        6531
      ],
      "op": "JUMPDEST",
      "path": "41"
    },
    "8650": {
      "fn": "ERC4973._burn",
      "offset": [
        6510,
        6531
      ],
      "op": "SWAP1",
      "path": "41"
    },
    "8651": {
      "fn": "ERC4973._burn",
      "offset": [
        6510,
        6531
      ],
      "op": "SWAP2",
      "path": "41"
    },
    "8652": {
      "fn": "ERC4973._burn",
      "offset": [
        6510,
        6531
      ],
      "op": "SSTORE",
      "path": "41"
    },
    "8653": {
      "op": "POP"
    },
    "8654": {
      "op": "POP"
    },
    "8655": {
      "fn": "ERC4973._burn",
      "offset": [
        6548,
        6564
      ],
      "op": "PUSH1",
      "path": "41",
      "statement": 114,
      "value": "0x0"
    },
    "8657": {
      "fn": "ERC4973._burn",
      "offset": [
        6548,
        6564
      ],
      "op": "DUP3",
      "path": "41"
    },
    "8658": {
      "fn": "ERC4973._burn",
      "offset": [
        6548,
        6564
      ],
      "op": "DUP2",
      "path": "41"
    },
    "8659": {
      "fn": "ERC4973._burn",
      "offset": [
        6548,
        6564
      ],
      "op": "MSTORE",
      "path": "41"
    },
    "8660": {
      "fn": "ERC4973._burn",
      "offset": [
        6548,
        6555
      ],
      "op": "PUSH1",
      "path": "41",
      "value": "0x3"
    },
    "8662": {
      "fn": "ERC4973._burn",
      "offset": [
        6548,
        6564
      ],
      "op": "PUSH1",
      "path": "41",
      "value": "0x20"
    },
    "8664": {
      "fn": "ERC4973._burn",
      "offset": [
        6548,
        6564
      ],
      "op": "SWAP1",
      "path": "41"
    },
    "8665": {
      "fn": "ERC4973._burn",
      "offset": [
        6548,
        6564
      ],
      "op": "DUP2",
      "path": "41"
    },
    "8666": {
      "fn": "ERC4973._burn",
      "offset": [
        6548,
        6564
      ],
      "op": "MSTORE",
      "path": "41"
    },
    "8667": {
      "fn": "ERC4973._burn",
      "offset": [
        6548,
        6564
      ],
      "op": "PUSH1",
      "path": "41",
      "value": "0x40"
    },
    "8669": {
      "fn": "ERC4973._burn",
      "offset": [
        6548,
        6564
      ],
      "op": "DUP1",
      "path": "41"
    },
    "8670": {
      "fn": "ERC4973._burn",
      "offset": [
        6548,
        6564
      ],
      "op": "DUP4",
      "path": "41"
    },
    "8671": {
      "fn": "ERC4973._burn",
      "offset": [
        6548,
        6564
      ],
      "op": "KECCAK256",
      "path": "41"
    },
    "8672": {
      "fn": "ERC4973._burn",
      "offset": [
        6541,
        6564
      ],
      "op": "DUP1",
      "path": "41"
    },
    "8673": {
      "fn": "ERC4973._burn",
      "offset": [
        6541,
        6564
      ],
      "op": "SLOAD",
      "path": "41"
    },
    "8674": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8676": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8678": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "8680": {
      "op": "SHL"
    },
    "8681": {
      "op": "SUB"
    },
    "8682": {
      "op": "NOT"
    },
    "8683": {
      "fn": "ERC4973._burn",
      "offset": [
        6541,
        6564
      ],
      "op": "AND",
      "path": "41"
    },
    "8684": {
      "fn": "ERC4973._burn",
      "offset": [
        6541,
        6564
      ],
      "op": "SWAP1",
      "path": "41"
    },
    "8685": {
      "fn": "ERC4973._burn",
      "offset": [
        6541,
        6564
      ],
      "op": "SSTORE",
      "path": "41"
    },
    "8686": {
      "fn": "ERC4973._burn",
      "offset": [
        6581,
        6591
      ],
      "op": "PUSH1",
      "path": "41",
      "statement": 115,
      "value": "0x4"
    },
    "8688": {
      "fn": "ERC4973._burn",
      "offset": [
        6581,
        6600
      ],
      "op": "SWAP1",
      "path": "41"
    },
    "8689": {
      "fn": "ERC4973._burn",
      "offset": [
        6581,
        6600
      ],
      "op": "SWAP2",
      "path": "41"
    },
    "8690": {
      "fn": "ERC4973._burn",
      "offset": [
        6581,
        6600
      ],
      "op": "MSTORE",
      "path": "41"
    },
    "8691": {
      "fn": "ERC4973._burn",
      "offset": [
        6581,
        6600
      ],
      "op": "DUP2",
      "path": "41"
    },
    "8692": {
      "fn": "ERC4973._burn",
      "offset": [
        6581,
        6600
      ],
      "op": "KECCAK256",
      "path": "41"
    },
    "8693": {
      "fn": "ERC4973._burn",
      "offset": [
        6574,
        6600
      ],
      "op": "PUSH2",
      "path": "41",
      "value": "0x21FD"
    },
    "8696": {
      "fn": "ERC4973._burn",
      "offset": [
        6574,
        6600
      ],
      "op": "SWAP2",
      "path": "41"
    },
    "8697": {
      "fn": "ERC4973._burn",
      "offset": [
        6574,
        6600
      ],
      "op": "PUSH2",
      "path": "41",
      "value": "0x26B4"
    },
    "8700": {
      "fn": "ERC4973._burn",
      "jump": "i",
      "offset": [
        6574,
        6600
      ],
      "op": "JUMP",
      "path": "41"
    },
    "8701": {
      "fn": "ERC4973._burn",
      "offset": [
        6574,
        6600
      ],
      "op": "JUMPDEST",
      "path": "41"
    },
    "8702": {
      "fn": "ERC4973._burn",
      "offset": [
        6616,
        6638
      ],
      "op": "PUSH1",
      "path": "41",
      "statement": 116,
      "value": "0x40"
    },
    "8704": {
      "fn": "ERC4973._burn",
      "offset": [
        6616,
        6638
      ],
      "op": "MLOAD",
      "path": "41"
    },
    "8705": {
      "fn": "ERC4973._burn",
      "offset": [
        6630,
        6637
      ],
      "op": "DUP3",
      "path": "41"
    },
    "8706": {
      "fn": "ERC4973._burn",
      "offset": [
        6630,
        6637
      ],
      "op": "SWAP1",
      "path": "41"
    },
    "8707": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8709": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8711": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "8713": {
      "op": "SHL"
    },
    "8714": {
      "op": "SUB"
    },
    "8715": {
      "fn": "ERC4973._burn",
      "offset": [
        6616,
        6638
      ],
      "op": "DUP4",
      "path": "41"
    },
    "8716": {
      "fn": "ERC4973._burn",
      "offset": [
        6616,
        6638
      ],
      "op": "AND",
      "path": "41"
    },
    "8717": {
      "fn": "ERC4973._burn",
      "offset": [
        6616,
        6638
      ],
      "op": "SWAP1",
      "path": "41"
    },
    "8718": {
      "fn": "ERC4973._burn",
      "offset": [
        6616,
        6638
      ],
      "op": "PUSH32",
      "path": "41",
      "value": "0xEC9AB91322523C899EDE7830EC9BFC992B5981CDCC27B91162FB23DE5791117B"
    },
    "8751": {
      "fn": "ERC4973._burn",
      "offset": [
        6616,
        6638
      ],
      "op": "SWAP1",
      "path": "41"
    },
    "8752": {
      "fn": "ERC4973._burn",
      "offset": [
        6616,
        6638
      ],
      "op": "PUSH1",
      "path": "41",
      "value": "0x0"
    },
    "8754": {
      "fn": "ERC4973._burn",
      "offset": [
        6616,
        6638
      ],
      "op": "SWAP1",
      "path": "41"
    },
    "8755": {
      "fn": "ERC4973._burn",
      "offset": [
        6616,
        6638
      ],
      "op": "LOG3",
      "path": "41"
    },
    "8756": {
      "fn": "ERC4973._burn",
      "offset": [
        6457,
        6645
      ],
      "op": "POP",
      "path": "41"
    },
    "8757": {
      "fn": "ERC4973._burn",
      "offset": [
        6408,
        6645
      ],
      "op": "POP",
      "path": "41"
    },
    "8758": {
      "fn": "ERC4973._burn",
      "jump": "o",
      "offset": [
        6408,
        6645
      ],
      "op": "JUMP",
      "path": "41"
    },
    "8759": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2270,
        2457
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "8760": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2362,
        2368
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x6"
    },
    "8762": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2362,
        2368
      ],
      "op": "DUP1",
      "path": "0"
    },
    "8763": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2362,
        2368
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "8764": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8766": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8768": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "8770": {
      "op": "SHL"
    },
    "8771": {
      "op": "SUB"
    },
    "8772": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2378,
        2395
      ],
      "op": "DUP4",
      "path": "0",
      "statement": 117
    },
    "8773": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2378,
        2395
      ],
      "op": "DUP2",
      "path": "0"
    },
    "8774": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2378,
        2395
      ],
      "op": "AND",
      "path": "0"
    },
    "8775": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8777": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8779": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "8781": {
      "op": "SHL"
    },
    "8782": {
      "op": "SUB"
    },
    "8783": {
      "op": "NOT"
    },
    "8784": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2378,
        2395
      ],
      "op": "DUP4",
      "path": "0"
    },
    "8785": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2378,
        2395
      ],
      "op": "AND",
      "path": "0"
    },
    "8786": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2378,
        2395
      ],
      "op": "DUP2",
      "path": "0"
    },
    "8787": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2378,
        2395
      ],
      "op": "OR",
      "path": "0"
    },
    "8788": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2378,
        2395
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "8789": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2378,
        2395
      ],
      "op": "SWAP4",
      "path": "0"
    },
    "8790": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2378,
        2395
      ],
      "op": "SSTORE",
      "path": "0"
    },
    "8791": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2410,
        2450
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 118,
      "value": "0x40"
    },
    "8793": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2410,
        2450
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "8794": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2362,
        2368
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "8795": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2362,
        2368
      ],
      "op": "AND",
      "path": "0"
    },
    "8796": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2362,
        2368
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "8797": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2378,
        2395
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "8798": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2362,
        2368
      ],
      "op": "DUP3",
      "path": "0"
    },
    "8799": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2362,
        2368
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "8800": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2410,
        2450
      ],
      "op": "PUSH32",
      "path": "0",
      "value": "0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
    },
    "8833": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2410,
        2450
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "8834": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2343,
        2359
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "8836": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2343,
        2359
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "8837": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2410,
        2450
      ],
      "op": "LOG3",
      "path": "0"
    },
    "8838": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2333,
        2457
      ],
      "op": "POP",
      "path": "0"
    },
    "8839": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2270,
        2457
      ],
      "op": "POP",
      "path": "0"
    },
    "8840": {
      "fn": "Ownable._transferOwnership",
      "jump": "o",
      "offset": [
        2270,
        2457
      ],
      "op": "JUMP",
      "path": "0"
    },
    "8841": {
      "fn": "Soulbound._setBaseURI",
      "offset": [
        7029,
        7263
      ],
      "op": "JUMPDEST",
      "path": "37"
    },
    "8842": {
      "fn": "Soulbound._setBaseURI",
      "offset": [
        7158,
        7166
      ],
      "op": "DUP1",
      "path": "37",
      "statement": 119
    },
    "8843": {
      "fn": "Soulbound._setBaseURI",
      "offset": [
        7152,
        7174
      ],
      "op": "MLOAD",
      "path": "37"
    },
    "8844": {
      "fn": "Soulbound._setBaseURI",
      "offset": [
        7178,
        7179
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0x0"
    },
    "8846": {
      "branch": 178,
      "fn": "Soulbound._setBaseURI",
      "offset": [
        7152,
        7179
      ],
      "op": "SUB",
      "path": "37"
    },
    "8847": {
      "fn": "Soulbound._setBaseURI",
      "offset": [
        7144,
        7198
      ],
      "op": "PUSH2",
      "path": "37",
      "value": "0x22CB"
    },
    "8850": {
      "branch": 178,
      "fn": "Soulbound._setBaseURI",
      "offset": [
        7144,
        7198
      ],
      "op": "JUMPI",
      "path": "37"
    },
    "8851": {
      "fn": "Soulbound._setBaseURI",
      "offset": [
        7144,
        7198
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0x40"
    },
    "8853": {
      "fn": "Soulbound._setBaseURI",
      "offset": [
        7144,
        7198
      ],
      "op": "MLOAD",
      "path": "37"
    },
    "8854": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "8858": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "8860": {
      "op": "SHL"
    },
    "8861": {
      "fn": "Soulbound._setBaseURI",
      "offset": [
        7144,
        7198
      ],
      "op": "DUP2",
      "path": "37"
    },
    "8862": {
      "fn": "Soulbound._setBaseURI",
      "offset": [
        7144,
        7198
      ],
      "op": "MSTORE",
      "path": "37"
    },
    "8863": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "8865": {
      "fn": "Soulbound._setBaseURI",
      "offset": [
        7144,
        7198
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0x4"
    },
    "8867": {
      "fn": "Soulbound._setBaseURI",
      "offset": [
        7144,
        7198
      ],
      "op": "DUP3",
      "path": "37"
    },
    "8868": {
      "fn": "Soulbound._setBaseURI",
      "offset": [
        7144,
        7198
      ],
      "op": "ADD",
      "path": "37"
    },
    "8869": {
      "op": "MSTORE"
    },
    "8870": {
      "op": "PUSH1",
      "value": "0xE"
    },
    "8872": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "8874": {
      "op": "DUP3"
    },
    "8875": {
      "op": "ADD"
    },
    "8876": {
      "op": "MSTORE"
    },
    "8877": {
      "op": "PUSH14",
      "value": "0x92DCECC2D8D2C840D8CADCCEE8D"
    },
    "8892": {
      "op": "PUSH1",
      "value": "0x93"
    },
    "8894": {
      "op": "SHL"
    },
    "8895": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "8897": {
      "op": "DUP3"
    },
    "8898": {
      "op": "ADD"
    },
    "8899": {
      "op": "MSTORE"
    },
    "8900": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "8902": {
      "op": "ADD"
    },
    "8903": {
      "fn": "Soulbound._setBaseURI",
      "offset": [
        7144,
        7198
      ],
      "op": "PUSH2",
      "path": "37",
      "value": "0x6B1"
    },
    "8906": {
      "op": "JUMP"
    },
    "8907": {
      "fn": "Soulbound._setBaseURI",
      "offset": [
        7144,
        7198
      ],
      "op": "JUMPDEST",
      "path": "37"
    },
    "8908": {
      "fn": "Soulbound._setBaseURI",
      "offset": [
        7238,
        7245
      ],
      "op": "PUSH1",
      "path": "37",
      "statement": 120,
      "value": "0x7"
    },
    "8910": {
      "fn": "Soulbound._setBaseURI",
      "offset": [
        7238,
        7256
      ],
      "op": "PUSH2",
      "path": "37",
      "value": "0x22D7"
    },
    "8913": {
      "fn": "Soulbound._setBaseURI",
      "offset": [
        7248,
        7256
      ],
      "op": "DUP3",
      "path": "37"
    },
    "8914": {
      "fn": "Soulbound._setBaseURI",
      "offset": [
        7238,
        7245
      ],
      "op": "DUP3",
      "path": "37"
    },
    "8915": {
      "fn": "Soulbound._setBaseURI",
      "offset": [
        7238,
        7256
      ],
      "op": "PUSH2",
      "path": "37",
      "value": "0x2D97"
    },
    "8918": {
      "fn": "Soulbound._setBaseURI",
      "jump": "i",
      "offset": [
        7238,
        7256
      ],
      "op": "JUMP",
      "path": "37"
    },
    "8919": {
      "fn": "Soulbound._setBaseURI",
      "offset": [
        7238,
        7256
      ],
      "op": "JUMPDEST",
      "path": "37"
    },
    "8920": {
      "fn": "Soulbound._setBaseURI",
      "offset": [
        7238,
        7256
      ],
      "op": "POP",
      "path": "37"
    },
    "8921": {
      "fn": "Soulbound._setBaseURI",
      "offset": [
        7029,
        7263
      ],
      "op": "POP",
      "path": "37"
    },
    "8922": {
      "fn": "Soulbound._setBaseURI",
      "jump": "o",
      "offset": [
        7029,
        7263
      ],
      "op": "JUMP",
      "path": "37"
    },
    "8923": {
      "fn": "Allowlist._verifySignature",
      "offset": [
        3622,
        4677
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "8924": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x6"
    },
    "8926": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "8927": {
      "fn": "Allowlist._verifySignature",
      "offset": [
        3732,
        3736
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x0"
    },
    "8929": {
      "fn": "Allowlist._verifySignature",
      "offset": [
        3732,
        3736
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "8930": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8932": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8934": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "8936": {
      "op": "SHL"
    },
    "8937": {
      "op": "SUB"
    },
    "8938": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "AND",
      "path": "0"
    },
    "8939": {
      "fn": "Context._msgSender",
      "offset": [
        719,
        729
      ],
      "op": "CALLER",
      "path": "5"
    },
    "8940": {
      "offset": [
        1248,
        1271
      ],
      "op": "EQ",
      "path": "0"
    },
    "8941": {
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2308"
    },
    "8944": {
      "offset": [
        1240,
        1308
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "8945": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "8947": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "8948": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "8952": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "8954": {
      "op": "SHL"
    },
    "8955": {
      "offset": [
        1240,
        1308
      ],
      "op": "DUP2",
      "path": "0"
    },
    "8956": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "8957": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "8959": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "ADD",
      "path": "0"
    },
    "8960": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x6B1"
    },
    "8963": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "8964": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2B66"
    },
    "8967": {
      "fn": "Context._msgSender",
      "jump": "i",
      "offset": [
        1240,
        1308
      ],
      "op": "JUMP",
      "path": "0"
    },
    "8968": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "8969": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x6"
    },
    "8971": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "8972": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8974": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8976": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "8978": {
      "op": "SHL"
    },
    "8979": {
      "op": "SUB"
    },
    "8980": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "AND",
      "path": "0"
    },
    "8981": {
      "fn": "Context._msgSender",
      "offset": [
        719,
        729
      ],
      "op": "CALLER",
      "path": "5"
    },
    "8982": {
      "branch": 164,
      "fn": "Allowlist._verifySignature",
      "offset": [
        3897,
        3920
      ],
      "op": "EQ",
      "path": "14",
      "statement": 121
    },
    "8983": {
      "fn": "Allowlist._verifySignature",
      "offset": [
        3876,
        3989
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x2376"
    },
    "8986": {
      "branch": 164,
      "fn": "Allowlist._verifySignature",
      "offset": [
        3876,
        3989
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "8987": {
      "fn": "Allowlist._verifySignature",
      "offset": [
        3876,
        3989
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x40"
    },
    "8989": {
      "fn": "Allowlist._verifySignature",
      "offset": [
        3876,
        3989
      ],
      "op": "MLOAD",
      "path": "14"
    },
    "8990": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "8994": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "8996": {
      "op": "SHL"
    },
    "8997": {
      "fn": "Allowlist._verifySignature",
      "offset": [
        3876,
        3989
      ],
      "op": "DUP2",
      "path": "14"
    },
    "8998": {
      "fn": "Allowlist._verifySignature",
      "offset": [
        3876,
        3989
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "8999": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "9001": {
      "fn": "Allowlist._verifySignature",
      "offset": [
        3876,
        3989
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x4"
    },
    "9003": {
      "fn": "Allowlist._verifySignature",
      "offset": [
        3876,
        3989
      ],
      "op": "DUP3",
      "path": "14"
    },
    "9004": {
      "fn": "Allowlist._verifySignature",
      "offset": [
        3876,
        3989
      ],
      "op": "ADD",
      "path": "14"
    },
    "9005": {
      "op": "MSTORE"
    },
    "9006": {
      "op": "PUSH1",
      "value": "0x2B"
    },
    "9008": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "9010": {
      "op": "DUP3"
    },
    "9011": {
      "op": "ADD"
    },
    "9012": {
      "op": "MSTORE"
    },
    "9013": {
      "op": "PUSH32",
      "value": "0x4552433732313A3A2043616C6C20746F20636F6E7472616374206D6164652062"
    },
    "9046": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "9048": {
      "op": "DUP3"
    },
    "9049": {
      "op": "ADD"
    },
    "9050": {
      "op": "MSTORE"
    },
    "9051": {
      "op": "PUSH11",
      "value": "0x3C903737B716B7BBB732B9"
    },
    "9063": {
      "op": "PUSH1",
      "value": "0xA9"
    },
    "9065": {
      "op": "SHL"
    },
    "9066": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "9068": {
      "op": "DUP3"
    },
    "9069": {
      "op": "ADD"
    },
    "9070": {
      "op": "MSTORE"
    },
    "9071": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "9073": {
      "op": "ADD"
    },
    "9074": {
      "fn": "Allowlist._verifySignature",
      "offset": [
        3876,
        3989
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x6B1"
    },
    "9077": {
      "op": "JUMP"
    },
    "9078": {
      "fn": "Allowlist._verifySignature",
      "offset": [
        3876,
        3989
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "9079": {
      "fn": "Allowlist._verifySignature",
      "offset": [
        4067,
        4070
      ],
      "op": "DUP2",
      "path": "14",
      "statement": 122
    },
    "9080": {
      "fn": "Allowlist._verifySignature",
      "offset": [
        4067,
        4077
      ],
      "op": "MLOAD",
      "path": "14"
    },
    "9081": {
      "fn": "Allowlist._verifySignature",
      "offset": [
        4081,
        4083
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x41"
    },
    "9083": {
      "branch": 165,
      "fn": "Allowlist._verifySignature",
      "offset": [
        4067,
        4083
      ],
      "op": "EQ",
      "path": "14"
    },
    "9084": {
      "fn": "Allowlist._verifySignature",
      "offset": [
        4059,
        4118
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x23C7"
    },
    "9087": {
      "branch": 165,
      "fn": "Allowlist._verifySignature",
      "offset": [
        4059,
        4118
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "9088": {
      "fn": "Allowlist._verifySignature",
      "offset": [
        4059,
        4118
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x40"
    },
    "9090": {
      "fn": "Allowlist._verifySignature",
      "offset": [
        4059,
        4118
      ],
      "op": "MLOAD",
      "path": "14"
    },
    "9091": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "9095": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "9097": {
      "op": "SHL"
    },
    "9098": {
      "fn": "Allowlist._verifySignature",
      "offset": [
        4059,
        4118
      ],
      "op": "DUP2",
      "path": "14"
    },
    "9099": {
      "fn": "Allowlist._verifySignature",
      "offset": [
        4059,
        4118
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "9100": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "9102": {
      "fn": "Allowlist._verifySignature",
      "offset": [
        4059,
        4118
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x4"
    },
    "9104": {
      "fn": "Allowlist._verifySignature",
      "offset": [
        4059,
        4118
      ],
      "op": "DUP3",
      "path": "14"
    },
    "9105": {
      "fn": "Allowlist._verifySignature",
      "offset": [
        4059,
        4118
      ],
      "op": "ADD",
      "path": "14"
    },
    "9106": {
      "op": "MSTORE"
    },
    "9107": {
      "op": "PUSH1",
      "value": "0x1E"
    },
    "9109": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "9111": {
      "op": "DUP3"
    },
    "9112": {
      "op": "ADD"
    },
    "9113": {
      "op": "MSTORE"
    },
    "9114": {
      "op": "PUSH32",
      "value": "0x4572723A3A20496E76616C6964207369676E6174757265206C656E6774680000"
    },
    "9147": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "9149": {
      "op": "DUP3"
    },
    "9150": {
      "op": "ADD"
    },
    "9151": {
      "op": "MSTORE"
    },
    "9152": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "9154": {
      "op": "ADD"
    },
    "9155": {
      "fn": "Allowlist._verifySignature",
      "offset": [
        4059,
        4118
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x6B1"
    },
    "9158": {
      "op": "JUMP"
    },
    "9159": {
      "fn": "Allowlist._verifySignature",
      "offset": [
        4059,
        4118
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "9160": {
      "fn": "Allowlist.splitSignature",
      "offset": [
        6067,
        6069
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x20"
    },
    "9162": {
      "fn": "Allowlist.splitSignature",
      "offset": [
        6058,
        6070
      ],
      "op": "DUP3",
      "path": "14"
    },
    "9163": {
      "fn": "Allowlist.splitSignature",
      "offset": [
        6058,
        6070
      ],
      "op": "DUP2",
      "path": "14"
    },
    "9164": {
      "fn": "Allowlist.splitSignature",
      "offset": [
        6058,
        6070
      ],
      "op": "ADD",
      "path": "14"
    },
    "9165": {
      "fn": "Allowlist.splitSignature",
      "offset": [
        6052,
        6071
      ],
      "op": "MLOAD",
      "path": "14"
    },
    "9166": {
      "fn": "Allowlist.splitSignature",
      "offset": [
        6142,
        6144
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x40"
    },
    "9168": {
      "fn": "Allowlist.splitSignature",
      "offset": [
        6133,
        6145
      ],
      "op": "DUP1",
      "path": "14"
    },
    "9169": {
      "fn": "Allowlist.splitSignature",
      "offset": [
        6133,
        6145
      ],
      "op": "DUP6",
      "path": "14"
    },
    "9170": {
      "fn": "Allowlist.splitSignature",
      "offset": [
        6133,
        6145
      ],
      "op": "ADD",
      "path": "14"
    },
    "9171": {
      "fn": "Allowlist.splitSignature",
      "offset": [
        6127,
        6146
      ],
      "op": "MLOAD",
      "path": "14"
    },
    "9172": {
      "fn": "Allowlist.splitSignature",
      "offset": [
        6254,
        6256
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x60"
    },
    "9174": {
      "fn": "Allowlist.splitSignature",
      "offset": [
        6245,
        6257
      ],
      "op": "DUP1",
      "path": "14"
    },
    "9175": {
      "fn": "Allowlist.splitSignature",
      "offset": [
        6245,
        6257
      ],
      "op": "DUP8",
      "path": "14"
    },
    "9176": {
      "fn": "Allowlist.splitSignature",
      "offset": [
        6245,
        6257
      ],
      "op": "ADD",
      "path": "14"
    },
    "9177": {
      "fn": "Allowlist.splitSignature",
      "offset": [
        6239,
        6258
      ],
      "op": "MLOAD",
      "path": "14"
    },
    "9178": {
      "fn": "Allowlist._verifySignature",
      "offset": [
        4331,
        4355
      ],
      "op": "DUP4",
      "path": "14"
    },
    "9179": {
      "fn": "Allowlist._verifySignature",
      "offset": [
        4331,
        4355
      ],
      "op": "MLOAD",
      "path": "14"
    },
    "9180": {
      "fn": "Allowlist._verifySignature",
      "offset": [
        4197,
        4206
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x0"
    },
    "9182": {
      "fn": "Allowlist._verifySignature",
      "offset": [
        4331,
        4355
      ],
      "op": "DUP1",
      "path": "14"
    },
    "9183": {
      "fn": "Allowlist._verifySignature",
      "offset": [
        4331,
        4355
      ],
      "op": "DUP3",
      "path": "14"
    },
    "9184": {
      "fn": "Allowlist._verifySignature",
      "offset": [
        4331,
        4355
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "9185": {
      "fn": "Allowlist._verifySignature",
      "offset": [
        4331,
        4355
      ],
      "op": "SWAP7",
      "path": "14"
    },
    "9186": {
      "fn": "Allowlist._verifySignature",
      "offset": [
        4331,
        4355
      ],
      "op": "DUP2",
      "path": "14"
    },
    "9187": {
      "fn": "Allowlist._verifySignature",
      "offset": [
        4331,
        4355
      ],
      "op": "ADD",
      "path": "14"
    },
    "9188": {
      "fn": "Allowlist._verifySignature",
      "offset": [
        4331,
        4355
      ],
      "op": "DUP1",
      "path": "14"
    },
    "9189": {
      "fn": "Allowlist._verifySignature",
      "offset": [
        4331,
        4355
      ],
      "op": "DUP7",
      "path": "14"
    },
    "9190": {
      "fn": "Allowlist._verifySignature",
      "offset": [
        4331,
        4355
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "9191": {
      "op": "DUP11"
    },
    "9192": {
      "op": "SWAP1"
    },
    "9193": {
      "op": "MSTORE"
    },
    "9194": {
      "fn": "Allowlist.splitSignature",
      "offset": [
        6231,
        6259
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "9195": {
      "fn": "Allowlist.splitSignature",
      "offset": [
        6231,
        6259
      ],
      "op": "DUP7",
      "path": "14"
    },
    "9196": {
      "fn": "Allowlist.splitSignature",
      "offset": [
        6231,
        6259
      ],
      "op": "BYTE",
      "path": "14"
    },
    "9197": {
      "op": "SWAP4"
    },
    "9198": {
      "op": "DUP2"
    },
    "9199": {
      "op": "ADD"
    },
    "9200": {
      "op": "DUP5"
    },
    "9201": {
      "op": "SWAP1"
    },
    "9202": {
      "op": "MSTORE"
    },
    "9203": {
      "op": "SWAP1"
    },
    "9204": {
      "op": "DUP2"
    },
    "9205": {
      "op": "ADD"
    },
    "9206": {
      "op": "DUP5"
    },
    "9207": {
      "op": "SWAP1"
    },
    "9208": {
      "op": "MSTORE"
    },
    "9209": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "9211": {
      "op": "DUP2"
    },
    "9212": {
      "op": "ADD"
    },
    "9213": {
      "op": "DUP3"
    },
    "9214": {
      "op": "SWAP1"
    },
    "9215": {
      "op": "MSTORE"
    },
    "9216": {
      "fn": "Allowlist.splitSignature",
      "offset": [
        6052,
        6071
      ],
      "op": "SWAP3",
      "path": "14"
    },
    "9217": {
      "fn": "Allowlist.splitSignature",
      "offset": [
        6052,
        6071
      ],
      "op": "SWAP4",
      "path": "14"
    },
    "9218": {
      "fn": "Allowlist.splitSignature",
      "offset": [
        6127,
        6146
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "9219": {
      "fn": "Allowlist.splitSignature",
      "offset": [
        6127,
        6146
      ],
      "op": "SWAP3",
      "path": "14"
    },
    "9220": {
      "fn": "Allowlist._verifySignature",
      "offset": [
        4331,
        4355
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x1"
    },
    "9222": {
      "fn": "Allowlist._verifySignature",
      "offset": [
        4331,
        4355
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "9223": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "9225": {
      "op": "ADD"
    },
    "9226": {
      "fn": "Allowlist._verifySignature",
      "offset": [
        4331,
        4355
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x20"
    },
    "9228": {
      "fn": "Allowlist._verifySignature",
      "offset": [
        4331,
        4355
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x40"
    },
    "9230": {
      "fn": "Allowlist._verifySignature",
      "offset": [
        4331,
        4355
      ],
      "op": "MLOAD",
      "path": "14"
    },
    "9231": {
      "fn": "Allowlist._verifySignature",
      "offset": [
        4331,
        4355
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x20"
    },
    "9233": {
      "fn": "Allowlist._verifySignature",
      "offset": [
        4331,
        4355
      ],
      "op": "DUP2",
      "path": "14"
    },
    "9234": {
      "fn": "Allowlist._verifySignature",
      "offset": [
        4331,
        4355
      ],
      "op": "SUB",
      "path": "14"
    },
    "9235": {
      "fn": "Allowlist._verifySignature",
      "offset": [
        4331,
        4355
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "9236": {
      "fn": "Allowlist._verifySignature",
      "offset": [
        4331,
        4355
      ],
      "op": "DUP1",
      "path": "14"
    },
    "9237": {
      "fn": "Allowlist._verifySignature",
      "offset": [
        4331,
        4355
      ],
      "op": "DUP5",
      "path": "14"
    },
    "9238": {
      "fn": "Allowlist._verifySignature",
      "offset": [
        4331,
        4355
      ],
      "op": "SUB",
      "path": "14"
    },
    "9239": {
      "fn": "Allowlist._verifySignature",
      "offset": [
        4331,
        4355
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "9240": {
      "fn": "Allowlist._verifySignature",
      "offset": [
        4331,
        4355
      ],
      "op": "DUP6",
      "path": "14"
    },
    "9241": {
      "fn": "Allowlist._verifySignature",
      "offset": [
        4331,
        4355
      ],
      "op": "GAS",
      "path": "14"
    },
    "9242": {
      "fn": "Allowlist._verifySignature",
      "offset": [
        4331,
        4355
      ],
      "op": "STATICCALL",
      "path": "14"
    },
    "9243": {
      "fn": "Allowlist._verifySignature",
      "offset": [
        4331,
        4355
      ],
      "op": "ISZERO",
      "path": "14"
    },
    "9244": {
      "fn": "Allowlist._verifySignature",
      "offset": [
        4331,
        4355
      ],
      "op": "DUP1",
      "path": "14"
    },
    "9245": {
      "fn": "Allowlist._verifySignature",
      "offset": [
        4331,
        4355
      ],
      "op": "ISZERO",
      "path": "14"
    },
    "9246": {
      "fn": "Allowlist._verifySignature",
      "offset": [
        4331,
        4355
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x242B"
    },
    "9249": {
      "fn": "Allowlist._verifySignature",
      "offset": [
        4331,
        4355
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "9250": {
      "fn": "Allowlist._verifySignature",
      "offset": [
        4331,
        4355
      ],
      "op": "RETURNDATASIZE",
      "path": "14"
    },
    "9251": {
      "fn": "Allowlist._verifySignature",
      "offset": [
        4331,
        4355
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x0"
    },
    "9253": {
      "fn": "Allowlist._verifySignature",
      "offset": [
        4331,
        4355
      ],
      "op": "DUP1",
      "path": "14"
    },
    "9254": {
      "fn": "Allowlist._verifySignature",
      "offset": [
        4331,
        4355
      ],
      "op": "RETURNDATACOPY",
      "path": "14"
    },
    "9255": {
      "fn": "Allowlist._verifySignature",
      "offset": [
        4331,
        4355
      ],
      "op": "RETURNDATASIZE",
      "path": "14"
    },
    "9256": {
      "fn": "Allowlist._verifySignature",
      "offset": [
        4331,
        4355
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x0"
    },
    "9258": {
      "fn": "Allowlist._verifySignature",
      "offset": [
        4331,
        4355
      ],
      "op": "REVERT",
      "path": "14"
    },
    "9259": {
      "fn": "Allowlist._verifySignature",
      "offset": [
        4331,
        4355
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "9260": {
      "op": "POP"
    },
    "9261": {
      "op": "POP"
    },
    "9262": {
      "fn": "Allowlist._verifySignature",
      "offset": [
        4331,
        4355
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x40"
    },
    "9264": {
      "fn": "Allowlist._verifySignature",
      "offset": [
        4331,
        4355
      ],
      "op": "MLOAD",
      "path": "14"
    },
    "9265": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "9267": {
      "op": "NOT"
    },
    "9268": {
      "fn": "Allowlist._verifySignature",
      "offset": [
        4331,
        4355
      ],
      "op": "DUP2",
      "path": "14"
    },
    "9269": {
      "fn": "Allowlist._verifySignature",
      "offset": [
        4331,
        4355
      ],
      "op": "ADD",
      "path": "14"
    },
    "9270": {
      "fn": "Allowlist._verifySignature",
      "offset": [
        4331,
        4355
      ],
      "op": "MLOAD",
      "path": "14"
    },
    "9271": {
      "fn": "Allowlist._verifySignature",
      "offset": [
        4469,
        4483
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x9"
    },
    "9273": {
      "fn": "Allowlist._verifySignature",
      "offset": [
        4469,
        4483
      ],
      "op": "SLOAD",
      "path": "14"
    },
    "9274": {
      "fn": "Allowlist._verifySignature",
      "offset": [
        4331,
        4355
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "9275": {
      "fn": "Allowlist._verifySignature",
      "offset": [
        4331,
        4355
      ],
      "op": "SWAP4",
      "path": "14"
    },
    "9276": {
      "op": "POP"
    },
    "9277": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9279": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9281": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "9283": {
      "op": "SHL"
    },
    "9284": {
      "op": "SUB"
    },
    "9285": {
      "fn": "Allowlist._verifySignature",
      "offset": [
        4459,
        4483
      ],
      "op": "DUP1",
      "path": "14"
    },
    "9286": {
      "fn": "Allowlist._verifySignature",
      "offset": [
        4459,
        4483
      ],
      "op": "DUP6",
      "path": "14"
    },
    "9287": {
      "fn": "Allowlist._verifySignature",
      "offset": [
        4459,
        4483
      ],
      "op": "AND",
      "path": "14"
    },
    "9288": {
      "fn": "Allowlist._verifySignature",
      "offset": [
        4469,
        4483
      ],
      "op": "SWAP2",
      "path": "14"
    },
    "9289": {
      "fn": "Allowlist._verifySignature",
      "offset": [
        4469,
        4483
      ],
      "op": "AND",
      "path": "14"
    },
    "9290": {
      "fn": "Allowlist._verifySignature",
      "offset": [
        4459,
        4483
      ],
      "op": "EQ",
      "path": "14"
    },
    "9291": {
      "fn": "Allowlist._verifySignature",
      "offset": [
        4459,
        4483
      ],
      "op": "SWAP2",
      "path": "14"
    },
    "9292": {
      "op": "POP"
    },
    "9293": {
      "fn": "Allowlist._verifySignature",
      "offset": [
        4459,
        4483
      ],
      "op": "DUP2",
      "path": "14"
    },
    "9294": {
      "fn": "Allowlist._verifySignature",
      "offset": [
        4459,
        4483
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "9295": {
      "fn": "Allowlist._verifySignature",
      "offset": [
        4566,
        4570
      ],
      "op": "DUP10",
      "path": "14",
      "statement": 123
    },
    "9296": {
      "fn": "Allowlist._verifySignature",
      "offset": [
        4566,
        4570
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "9297": {
      "fn": "Allowlist._verifySignature",
      "offset": [
        4550,
        4595
      ],
      "op": "PUSH32",
      "path": "14",
      "value": "0x7E4FE2A2A805A357593FDBDDE58C02F6A53D8B4960744CD31A98697FC11C2E36"
    },
    "9330": {
      "fn": "Allowlist._verifySignature",
      "offset": [
        4550,
        4595
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "9331": {
      "fn": "Allowlist._verifySignature",
      "offset": [
        4428,
        4455
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x0"
    },
    "9333": {
      "fn": "Allowlist._verifySignature",
      "offset": [
        4428,
        4455
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "9334": {
      "fn": "Allowlist._verifySignature",
      "offset": [
        4550,
        4595
      ],
      "op": "LOG3",
      "path": "14"
    },
    "9335": {
      "fn": "Allowlist._verifySignature",
      "offset": [
        4648,
        4670
      ],
      "op": "SWAP8",
      "path": "14",
      "statement": 124
    },
    "9336": {
      "fn": "Allowlist._verifySignature",
      "offset": [
        3622,
        4677
      ],
      "op": "SWAP7",
      "path": "14"
    },
    "9337": {
      "op": "POP"
    },
    "9338": {
      "op": "POP"
    },
    "9339": {
      "op": "POP"
    },
    "9340": {
      "op": "POP"
    },
    "9341": {
      "op": "POP"
    },
    "9342": {
      "op": "POP"
    },
    "9343": {
      "op": "POP"
    },
    "9344": {
      "fn": "Allowlist._verifySignature",
      "jump": "o",
      "offset": [
        3622,
        4677
      ],
      "op": "JUMP",
      "path": "14"
    },
    "9345": {
      "fn": "Soulbound.burnSoulboundToken",
      "offset": [
        6437,
        6858
      ],
      "op": "JUMPDEST",
      "path": "37"
    },
    "9346": {
      "fn": "Soulbound.burnSoulboundToken",
      "offset": [
        6564,
        6580
      ],
      "op": "PUSH2",
      "path": "37",
      "statement": 125,
      "value": "0x248A"
    },
    "9349": {
      "fn": "Soulbound.burnSoulboundToken",
      "offset": [
        6572,
        6579
      ],
      "op": "DUP2",
      "path": "37"
    },
    "9350": {
      "fn": "Soulbound.burnSoulboundToken",
      "offset": [
        6564,
        6571
      ],
      "op": "PUSH2",
      "path": "37",
      "value": "0x1F4F"
    },
    "9353": {
      "fn": "Soulbound.burnSoulboundToken",
      "jump": "i",
      "offset": [
        6564,
        6580
      ],
      "op": "JUMP",
      "path": "37"
    },
    "9354": {
      "branch": 179,
      "fn": "Soulbound.burnSoulboundToken",
      "offset": [
        6564,
        6580
      ],
      "op": "JUMPDEST",
      "path": "37"
    },
    "9355": {
      "fn": "Soulbound.burnSoulboundToken",
      "offset": [
        6556,
        6609
      ],
      "op": "PUSH2",
      "path": "37",
      "value": "0x24D6"
    },
    "9358": {
      "branch": 179,
      "fn": "Soulbound.burnSoulboundToken",
      "offset": [
        6556,
        6609
      ],
      "op": "JUMPI",
      "path": "37"
    },
    "9359": {
      "fn": "Soulbound.burnSoulboundToken",
      "offset": [
        6556,
        6609
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0x40"
    },
    "9361": {
      "fn": "Soulbound.burnSoulboundToken",
      "offset": [
        6556,
        6609
      ],
      "op": "MLOAD",
      "path": "37"
    },
    "9362": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "9366": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "9368": {
      "op": "SHL"
    },
    "9369": {
      "fn": "Soulbound.burnSoulboundToken",
      "offset": [
        6556,
        6609
      ],
      "op": "DUP2",
      "path": "37"
    },
    "9370": {
      "fn": "Soulbound.burnSoulboundToken",
      "offset": [
        6556,
        6609
      ],
      "op": "MSTORE",
      "path": "37"
    },
    "9371": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "9373": {
      "fn": "Soulbound.burnSoulboundToken",
      "offset": [
        6556,
        6609
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0x4"
    },
    "9375": {
      "fn": "Soulbound.burnSoulboundToken",
      "offset": [
        6556,
        6609
      ],
      "op": "DUP3",
      "path": "37"
    },
    "9376": {
      "fn": "Soulbound.burnSoulboundToken",
      "offset": [
        6556,
        6609
      ],
      "op": "ADD",
      "path": "37"
    },
    "9377": {
      "op": "MSTORE"
    },
    "9378": {
      "op": "PUSH1",
      "value": "0x18"
    },
    "9380": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "9382": {
      "op": "DUP3"
    },
    "9383": {
      "op": "ADD"
    },
    "9384": {
      "op": "MSTORE"
    },
    "9385": {
      "op": "PUSH32",
      "value": "0x4275726E206F6620696E6578697374656E7420746F6B656E0000000000000000"
    },
    "9418": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "9420": {
      "op": "DUP3"
    },
    "9421": {
      "op": "ADD"
    },
    "9422": {
      "op": "MSTORE"
    },
    "9423": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "9425": {
      "op": "ADD"
    },
    "9426": {
      "fn": "Soulbound.burnSoulboundToken",
      "offset": [
        6556,
        6609
      ],
      "op": "PUSH2",
      "path": "37",
      "value": "0x6B1"
    },
    "9429": {
      "op": "JUMP"
    },
    "9430": {
      "fn": "Soulbound.burnSoulboundToken",
      "offset": [
        6556,
        6609
      ],
      "op": "JUMPDEST",
      "path": "37"
    },
    "9431": {
      "fn": "Soulbound.burnSoulboundToken",
      "offset": [
        6664,
        6683
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0x0"
    },
    "9433": {
      "fn": "Soulbound.burnSoulboundToken",
      "offset": [
        6686,
        6702
      ],
      "op": "PUSH2",
      "path": "37",
      "value": "0x24E1"
    },
    "9436": {
      "fn": "Soulbound.burnSoulboundToken",
      "offset": [
        6694,
        6701
      ],
      "op": "DUP3",
      "path": "37"
    },
    "9437": {
      "fn": "Soulbound.burnSoulboundToken",
      "offset": [
        6686,
        6693
      ],
      "op": "PUSH2",
      "path": "37",
      "value": "0x1263"
    },
    "9440": {
      "fn": "Soulbound.burnSoulboundToken",
      "jump": "i",
      "offset": [
        6686,
        6702
      ],
      "op": "JUMP",
      "path": "37"
    },
    "9441": {
      "fn": "Soulbound.burnSoulboundToken",
      "offset": [
        6686,
        6702
      ],
      "op": "JUMPDEST",
      "path": "37"
    },
    "9442": {
      "fn": "Soulbound.burnSoulboundToken",
      "offset": [
        6664,
        6702
      ],
      "op": "SWAP1",
      "path": "37"
    },
    "9443": {
      "fn": "Soulbound.burnSoulboundToken",
      "offset": [
        6664,
        6702
      ],
      "op": "POP",
      "path": "37"
    },
    "9444": {
      "fn": "Soulbound.burnSoulboundToken",
      "offset": [
        6745,
        6759
      ],
      "op": "PUSH2",
      "path": "37",
      "statement": 126,
      "value": "0x24EC"
    },
    "9447": {
      "fn": "Soulbound.burnSoulboundToken",
      "offset": [
        6751,
        6758
      ],
      "op": "DUP3",
      "path": "37"
    },
    "9448": {
      "fn": "Soulbound.burnSoulboundToken",
      "offset": [
        6745,
        6750
      ],
      "op": "PUSH2",
      "path": "37",
      "value": "0x2190"
    },
    "9451": {
      "fn": "Soulbound.burnSoulboundToken",
      "jump": "i",
      "offset": [
        6745,
        6759
      ],
      "op": "JUMP",
      "path": "37"
    },
    "9452": {
      "fn": "Soulbound.burnSoulboundToken",
      "offset": [
        6745,
        6759
      ],
      "op": "JUMPDEST",
      "path": "37"
    },
    "9453": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9455": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9457": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "9459": {
      "op": "SHL"
    },
    "9460": {
      "op": "SUB"
    },
    "9461": {
      "fn": "Soulbound.burnSoulboundToken",
      "offset": [
        6816,
        6834
      ],
      "op": "AND",
      "path": "37",
      "statement": 127
    },
    "9462": {
      "fn": "Soulbound.burnSoulboundToken",
      "offset": [
        6846,
        6851
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0x0"
    },
    "9464": {
      "fn": "Soulbound.burnSoulboundToken",
      "offset": [
        6816,
        6834
      ],
      "op": "SWAP1",
      "path": "37"
    },
    "9465": {
      "fn": "Soulbound.burnSoulboundToken",
      "offset": [
        6816,
        6834
      ],
      "op": "DUP2",
      "path": "37"
    },
    "9466": {
      "fn": "Soulbound.burnSoulboundToken",
      "offset": [
        6816,
        6834
      ],
      "op": "MSTORE",
      "path": "37"
    },
    "9467": {
      "fn": "Soulbound.burnSoulboundToken",
      "offset": [
        6816,
        6821
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0x8"
    },
    "9469": {
      "fn": "Soulbound.burnSoulboundToken",
      "offset": [
        6816,
        6834
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0x20"
    },
    "9471": {
      "fn": "Soulbound.burnSoulboundToken",
      "offset": [
        6816,
        6834
      ],
      "op": "SWAP1",
      "path": "37"
    },
    "9472": {
      "fn": "Soulbound.burnSoulboundToken",
      "offset": [
        6816,
        6834
      ],
      "op": "DUP2",
      "path": "37"
    },
    "9473": {
      "fn": "Soulbound.burnSoulboundToken",
      "offset": [
        6816,
        6834
      ],
      "op": "MSTORE",
      "path": "37"
    },
    "9474": {
      "fn": "Soulbound.burnSoulboundToken",
      "offset": [
        6816,
        6834
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0x40"
    },
    "9476": {
      "fn": "Soulbound.burnSoulboundToken",
      "offset": [
        6816,
        6834
      ],
      "op": "DUP1",
      "path": "37"
    },
    "9477": {
      "fn": "Soulbound.burnSoulboundToken",
      "offset": [
        6816,
        6834
      ],
      "op": "DUP4",
      "path": "37"
    },
    "9478": {
      "fn": "Soulbound.burnSoulboundToken",
      "offset": [
        6816,
        6834
      ],
      "op": "KECCAK256",
      "path": "37"
    },
    "9479": {
      "fn": "Soulbound.burnSoulboundToken",
      "offset": [
        6816,
        6843
      ],
      "op": "SWAP4",
      "path": "37"
    },
    "9480": {
      "fn": "Soulbound.burnSoulboundToken",
      "offset": [
        6816,
        6843
      ],
      "op": "DUP4",
      "path": "37"
    },
    "9481": {
      "fn": "Soulbound.burnSoulboundToken",
      "offset": [
        6816,
        6843
      ],
      "op": "MSTORE",
      "path": "37"
    },
    "9482": {
      "fn": "Soulbound.burnSoulboundToken",
      "offset": [
        6816,
        6843
      ],
      "op": "SWAP3",
      "path": "37"
    },
    "9483": {
      "fn": "Soulbound.burnSoulboundToken",
      "offset": [
        6816,
        6843
      ],
      "op": "SWAP1",
      "path": "37"
    },
    "9484": {
      "fn": "Soulbound.burnSoulboundToken",
      "offset": [
        6816,
        6843
      ],
      "op": "MSTORE",
      "path": "37"
    },
    "9485": {
      "fn": "Soulbound.burnSoulboundToken",
      "offset": [
        6816,
        6843
      ],
      "op": "KECCAK256",
      "path": "37"
    },
    "9486": {
      "fn": "Soulbound.burnSoulboundToken",
      "offset": [
        6816,
        6851
      ],
      "op": "DUP1",
      "path": "37"
    },
    "9487": {
      "fn": "Soulbound.burnSoulboundToken",
      "offset": [
        6816,
        6851
      ],
      "op": "SLOAD",
      "path": "37"
    },
    "9488": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "9490": {
      "op": "NOT"
    },
    "9491": {
      "fn": "Soulbound.burnSoulboundToken",
      "offset": [
        6816,
        6851
      ],
      "op": "AND",
      "path": "37"
    },
    "9492": {
      "fn": "Soulbound.burnSoulboundToken",
      "offset": [
        6816,
        6851
      ],
      "op": "SWAP1",
      "path": "37"
    },
    "9493": {
      "fn": "Soulbound.burnSoulboundToken",
      "offset": [
        6816,
        6851
      ],
      "op": "SSTORE",
      "path": "37"
    },
    "9494": {
      "fn": "Soulbound.burnSoulboundToken",
      "jump": "o",
      "offset": [
        6437,
        6858
      ],
      "op": "JUMP",
      "path": "37"
    },
    "9495": {
      "fn": "Soulbound.mintSoulboundToken",
      "offset": [
        5609,
        6276
      ],
      "op": "JUMPDEST",
      "path": "37"
    },
    "9496": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9498": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9500": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "9502": {
      "op": "SHL"
    },
    "9503": {
      "op": "SUB"
    },
    "9504": {
      "fn": "Soulbound.mintSoulboundToken",
      "offset": [
        5816,
        5832
      ],
      "op": "DUP4",
      "path": "37",
      "statement": 128
    },
    "9505": {
      "branch": 180,
      "fn": "Soulbound.mintSoulboundToken",
      "offset": [
        5816,
        5832
      ],
      "op": "AND",
      "path": "37"
    },
    "9506": {
      "fn": "Soulbound.mintSoulboundToken",
      "offset": [
        5808,
        5858
      ],
      "op": "PUSH2",
      "path": "37",
      "value": "0x253D"
    },
    "9509": {
      "branch": 180,
      "fn": "Soulbound.mintSoulboundToken",
      "offset": [
        5808,
        5858
      ],
      "op": "JUMPI",
      "path": "37"
    },
    "9510": {
      "fn": "Soulbound.mintSoulboundToken",
      "offset": [
        5808,
        5858
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0x40"
    },
    "9512": {
      "fn": "Soulbound.mintSoulboundToken",
      "offset": [
        5808,
        5858
      ],
      "op": "MLOAD",
      "path": "37"
    },
    "9513": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "9517": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "9519": {
      "op": "SHL"
    },
    "9520": {
      "fn": "Soulbound.mintSoulboundToken",
      "offset": [
        5808,
        5858
      ],
      "op": "DUP2",
      "path": "37"
    },
    "9521": {
      "fn": "Soulbound.mintSoulboundToken",
      "offset": [
        5808,
        5858
      ],
      "op": "MSTORE",
      "path": "37"
    },
    "9522": {
      "fn": "Soulbound.mintSoulboundToken",
      "offset": [
        5808,
        5858
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0x4"
    },
    "9524": {
      "fn": "Soulbound.mintSoulboundToken",
      "offset": [
        5808,
        5858
      ],
      "op": "ADD",
      "path": "37"
    },
    "9525": {
      "fn": "Soulbound.mintSoulboundToken",
      "offset": [
        5808,
        5858
      ],
      "op": "PUSH2",
      "path": "37",
      "value": "0x6B1"
    },
    "9528": {
      "fn": "Soulbound.mintSoulboundToken",
      "offset": [
        5808,
        5858
      ],
      "op": "SWAP1",
      "path": "37"
    },
    "9529": {
      "fn": "Soulbound.mintSoulboundToken",
      "offset": [
        5808,
        5858
      ],
      "op": "PUSH2",
      "path": "37",
      "value": "0x2C5F"
    },
    "9532": {
      "fn": "Soulbound.mintSoulboundToken",
      "jump": "i",
      "offset": [
        5808,
        5858
      ],
      "op": "JUMP",
      "path": "37"
    },
    "9533": {
      "fn": "Soulbound.mintSoulboundToken",
      "offset": [
        5808,
        5858
      ],
      "op": "JUMPDEST",
      "path": "37"
    },
    "9534": {
      "fn": "Soulbound.mintSoulboundToken",
      "offset": [
        6004,
        6012
      ],
      "op": "DUP1",
      "path": "37",
      "statement": 129
    },
    "9535": {
      "fn": "Soulbound.mintSoulboundToken",
      "offset": [
        5998,
        6020
      ],
      "op": "MLOAD",
      "path": "37"
    },
    "9536": {
      "fn": "Soulbound.mintSoulboundToken",
      "offset": [
        6024,
        6025
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0x0"
    },
    "9538": {
      "branch": 181,
      "fn": "Soulbound.mintSoulboundToken",
      "offset": [
        5998,
        6025
      ],
      "op": "SUB",
      "path": "37"
    },
    "9539": {
      "fn": "Soulbound.mintSoulboundToken",
      "offset": [
        5990,
        6045
      ],
      "op": "PUSH2",
      "path": "37",
      "value": "0x2580"
    },
    "9542": {
      "branch": 181,
      "fn": "Soulbound.mintSoulboundToken",
      "offset": [
        5990,
        6045
      ],
      "op": "JUMPI",
      "path": "37"
    },
    "9543": {
      "fn": "Soulbound.mintSoulboundToken",
      "offset": [
        5990,
        6045
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0x40"
    },
    "9545": {
      "fn": "Soulbound.mintSoulboundToken",
      "offset": [
        5990,
        6045
      ],
      "op": "MLOAD",
      "path": "37"
    },
    "9546": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "9550": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "9552": {
      "op": "SHL"
    },
    "9553": {
      "fn": "Soulbound.mintSoulboundToken",
      "offset": [
        5990,
        6045
      ],
      "op": "DUP2",
      "path": "37"
    },
    "9554": {
      "fn": "Soulbound.mintSoulboundToken",
      "offset": [
        5990,
        6045
      ],
      "op": "MSTORE",
      "path": "37"
    },
    "9555": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "9557": {
      "fn": "Soulbound.mintSoulboundToken",
      "offset": [
        5990,
        6045
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0x4"
    },
    "9559": {
      "fn": "Soulbound.mintSoulboundToken",
      "offset": [
        5990,
        6045
      ],
      "op": "DUP3",
      "path": "37"
    },
    "9560": {
      "fn": "Soulbound.mintSoulboundToken",
      "offset": [
        5990,
        6045
      ],
      "op": "ADD",
      "path": "37"
    },
    "9561": {
      "op": "MSTORE"
    },
    "9562": {
      "op": "PUSH1",
      "value": "0xF"
    },
    "9564": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "9566": {
      "op": "DUP3"
    },
    "9567": {
      "op": "ADD"
    },
    "9568": {
      "op": "MSTORE"
    },
    "9569": {
      "op": "PUSH15",
      "value": "0x22B6B83A3C903A37B5B2B72AA92497"
    },
    "9585": {
      "op": "PUSH1",
      "value": "0x89"
    },
    "9587": {
      "op": "SHL"
    },
    "9588": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "9590": {
      "op": "DUP3"
    },
    "9591": {
      "op": "ADD"
    },
    "9592": {
      "op": "MSTORE"
    },
    "9593": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "9595": {
      "op": "ADD"
    },
    "9596": {
      "fn": "Soulbound.mintSoulboundToken",
      "offset": [
        5990,
        6045
      ],
      "op": "PUSH2",
      "path": "37",
      "value": "0x6B1"
    },
    "9599": {
      "op": "JUMP"
    },
    "9600": {
      "fn": "Soulbound.mintSoulboundToken",
      "offset": [
        5990,
        6045
      ],
      "op": "JUMPDEST",
      "path": "37"
    },
    "9601": {
      "fn": "Soulbound.mintSoulboundToken",
      "offset": [
        6160,
        6188
      ],
      "op": "PUSH2",
      "path": "37",
      "statement": 130,
      "value": "0x258B"
    },
    "9604": {
      "fn": "Soulbound.mintSoulboundToken",
      "offset": [
        6166,
        6168
      ],
      "op": "DUP4",
      "path": "37"
    },
    "9605": {
      "fn": "Soulbound.mintSoulboundToken",
      "offset": [
        6170,
        6177
      ],
      "op": "DUP4",
      "path": "37"
    },
    "9606": {
      "fn": "Soulbound.mintSoulboundToken",
      "offset": [
        6179,
        6187
      ],
      "op": "DUP4",
      "path": "37"
    },
    "9607": {
      "fn": "Soulbound.mintSoulboundToken",
      "offset": [
        6160,
        6165
      ],
      "op": "PUSH2",
      "path": "37",
      "value": "0x25BD"
    },
    "9610": {
      "fn": "Soulbound.mintSoulboundToken",
      "jump": "i",
      "offset": [
        6160,
        6188
      ],
      "op": "JUMP",
      "path": "37"
    },
    "9611": {
      "fn": "Soulbound.mintSoulboundToken",
      "offset": [
        6160,
        6188
      ],
      "op": "JUMPDEST",
      "path": "37"
    },
    "9612": {
      "op": "POP"
    },
    "9613": {
      "op": "POP"
    },
    "9614": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9616": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9618": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "9620": {
      "op": "SHL"
    },
    "9621": {
      "op": "SUB"
    },
    "9622": {
      "fn": "Soulbound.mintSoulboundToken",
      "offset": [
        6244,
        6253
      ],
      "op": "SWAP1",
      "path": "37",
      "statement": 131
    },
    "9623": {
      "fn": "Soulbound.mintSoulboundToken",
      "offset": [
        6244,
        6253
      ],
      "op": "SWAP2",
      "path": "37"
    },
    "9624": {
      "fn": "Soulbound.mintSoulboundToken",
      "offset": [
        6244,
        6253
      ],
      "op": "AND",
      "path": "37"
    },
    "9625": {
      "fn": "Soulbound.mintSoulboundToken",
      "offset": [
        6244,
        6253
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0x0"
    },
    "9627": {
      "fn": "Soulbound.mintSoulboundToken",
      "offset": [
        6244,
        6253
      ],
      "op": "SWAP1",
      "path": "37"
    },
    "9628": {
      "fn": "Soulbound.mintSoulboundToken",
      "offset": [
        6244,
        6253
      ],
      "op": "DUP2",
      "path": "37"
    },
    "9629": {
      "fn": "Soulbound.mintSoulboundToken",
      "offset": [
        6244,
        6253
      ],
      "op": "MSTORE",
      "path": "37"
    },
    "9630": {
      "fn": "Soulbound.mintSoulboundToken",
      "offset": [
        6244,
        6249
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0x8"
    },
    "9632": {
      "fn": "Soulbound.mintSoulboundToken",
      "offset": [
        6244,
        6253
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0x20"
    },
    "9634": {
      "fn": "Soulbound.mintSoulboundToken",
      "offset": [
        6244,
        6253
      ],
      "op": "SWAP1",
      "path": "37"
    },
    "9635": {
      "fn": "Soulbound.mintSoulboundToken",
      "offset": [
        6244,
        6253
      ],
      "op": "DUP2",
      "path": "37"
    },
    "9636": {
      "fn": "Soulbound.mintSoulboundToken",
      "offset": [
        6244,
        6253
      ],
      "op": "MSTORE",
      "path": "37"
    },
    "9637": {
      "fn": "Soulbound.mintSoulboundToken",
      "offset": [
        6244,
        6253
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0x40"
    },
    "9639": {
      "fn": "Soulbound.mintSoulboundToken",
      "offset": [
        6244,
        6253
      ],
      "op": "DUP1",
      "path": "37"
    },
    "9640": {
      "fn": "Soulbound.mintSoulboundToken",
      "offset": [
        6244,
        6253
      ],
      "op": "DUP4",
      "path": "37"
    },
    "9641": {
      "fn": "Soulbound.mintSoulboundToken",
      "offset": [
        6244,
        6253
      ],
      "op": "KECCAK256",
      "path": "37"
    },
    "9642": {
      "fn": "Soulbound.mintSoulboundToken",
      "offset": [
        6244,
        6262
      ],
      "op": "SWAP4",
      "path": "37"
    },
    "9643": {
      "fn": "Soulbound.mintSoulboundToken",
      "offset": [
        6244,
        6262
      ],
      "op": "DUP4",
      "path": "37"
    },
    "9644": {
      "fn": "Soulbound.mintSoulboundToken",
      "offset": [
        6244,
        6262
      ],
      "op": "MSTORE",
      "path": "37"
    },
    "9645": {
      "fn": "Soulbound.mintSoulboundToken",
      "offset": [
        6244,
        6262
      ],
      "op": "SWAP3",
      "path": "37"
    },
    "9646": {
      "fn": "Soulbound.mintSoulboundToken",
      "offset": [
        6244,
        6262
      ],
      "op": "SWAP1",
      "path": "37"
    },
    "9647": {
      "fn": "Soulbound.mintSoulboundToken",
      "offset": [
        6244,
        6262
      ],
      "op": "MSTORE",
      "path": "37"
    },
    "9648": {
      "fn": "Soulbound.mintSoulboundToken",
      "offset": [
        6244,
        6262
      ],
      "op": "KECCAK256",
      "path": "37"
    },
    "9649": {
      "fn": "Soulbound.mintSoulboundToken",
      "offset": [
        6244,
        6269
      ],
      "op": "DUP1",
      "path": "37"
    },
    "9650": {
      "fn": "Soulbound.mintSoulboundToken",
      "offset": [
        6244,
        6269
      ],
      "op": "SLOAD",
      "path": "37"
    },
    "9651": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "9653": {
      "op": "NOT"
    },
    "9654": {
      "fn": "Soulbound.mintSoulboundToken",
      "offset": [
        6244,
        6269
      ],
      "op": "AND",
      "path": "37"
    },
    "9655": {
      "fn": "Soulbound.mintSoulboundToken",
      "offset": [
        6265,
        6269
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0x1"
    },
    "9657": {
      "fn": "Soulbound.mintSoulboundToken",
      "offset": [
        6244,
        6269
      ],
      "op": "OR",
      "path": "37"
    },
    "9658": {
      "fn": "Soulbound.mintSoulboundToken",
      "offset": [
        6244,
        6269
      ],
      "op": "SWAP1",
      "path": "37"
    },
    "9659": {
      "fn": "Soulbound.mintSoulboundToken",
      "offset": [
        6244,
        6269
      ],
      "op": "SSTORE",
      "path": "37"
    },
    "9660": {
      "fn": "Soulbound.mintSoulboundToken",
      "jump": "o",
      "offset": [
        5609,
        6276
      ],
      "op": "JUMP",
      "path": "37"
    },
    "9661": {
      "fn": "ERC4973._mint",
      "offset": [
        6055,
        6402
      ],
      "op": "JUMPDEST",
      "path": "41"
    },
    "9662": {
      "fn": "ERC4973._mint",
      "offset": [
        6174,
        6181
      ],
      "op": "PUSH1",
      "path": "41",
      "value": "0x0"
    },
    "9664": {
      "fn": "ERC4973._mint",
      "offset": [
        6202,
        6218
      ],
      "op": "PUSH2",
      "path": "41",
      "statement": 132,
      "value": "0x25C8"
    },
    "9667": {
      "fn": "ERC4973._mint",
      "offset": [
        6210,
        6217
      ],
      "op": "DUP4",
      "path": "41"
    },
    "9668": {
      "fn": "ERC4973._mint",
      "offset": [
        6202,
        6209
      ],
      "op": "PUSH2",
      "path": "41",
      "value": "0x1F4F"
    },
    "9671": {
      "fn": "ERC4973._mint",
      "jump": "i",
      "offset": [
        6202,
        6218
      ],
      "op": "JUMP",
      "path": "41"
    },
    "9672": {
      "fn": "ERC4973._mint",
      "offset": [
        6202,
        6218
      ],
      "op": "JUMPDEST",
      "path": "41"
    },
    "9673": {
      "branch": 169,
      "fn": "ERC4973._mint",
      "offset": [
        6201,
        6218
      ],
      "op": "ISZERO",
      "path": "41"
    },
    "9674": {
      "fn": "ERC4973._mint",
      "offset": [
        6193,
        6243
      ],
      "op": "PUSH2",
      "path": "41",
      "value": "0x260C"
    },
    "9677": {
      "branch": 169,
      "fn": "ERC4973._mint",
      "offset": [
        6193,
        6243
      ],
      "op": "JUMPI",
      "path": "41"
    },
    "9678": {
      "fn": "ERC4973._mint",
      "offset": [
        6193,
        6243
      ],
      "op": "PUSH1",
      "path": "41",
      "value": "0x40"
    },
    "9680": {
      "fn": "ERC4973._mint",
      "offset": [
        6193,
        6243
      ],
      "op": "MLOAD",
      "path": "41"
    },
    "9681": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "9685": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "9687": {
      "op": "SHL"
    },
    "9688": {
      "fn": "ERC4973._mint",
      "offset": [
        6193,
        6243
      ],
      "op": "DUP2",
      "path": "41"
    },
    "9689": {
      "fn": "ERC4973._mint",
      "offset": [
        6193,
        6243
      ],
      "op": "MSTORE",
      "path": "41"
    },
    "9690": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "9692": {
      "fn": "ERC4973._mint",
      "offset": [
        6193,
        6243
      ],
      "op": "PUSH1",
      "path": "41",
      "value": "0x4"
    },
    "9694": {
      "fn": "ERC4973._mint",
      "offset": [
        6193,
        6243
      ],
      "op": "DUP3",
      "path": "41"
    },
    "9695": {
      "fn": "ERC4973._mint",
      "offset": [
        6193,
        6243
      ],
      "op": "ADD",
      "path": "41"
    },
    "9696": {
      "op": "MSTORE"
    },
    "9697": {
      "op": "PUSH1",
      "value": "0x14"
    },
    "9699": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "9701": {
      "op": "DUP3"
    },
    "9702": {
      "op": "ADD"
    },
    "9703": {
      "op": "MSTORE"
    },
    "9704": {
      "op": "PUSH20",
      "value": "0x6D696E743A20746F6B656E494420657869737473"
    },
    "9725": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "9727": {
      "op": "SHL"
    },
    "9728": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "9730": {
      "op": "DUP3"
    },
    "9731": {
      "op": "ADD"
    },
    "9732": {
      "op": "MSTORE"
    },
    "9733": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "9735": {
      "op": "ADD"
    },
    "9736": {
      "fn": "ERC4973._mint",
      "offset": [
        6193,
        6243
      ],
      "op": "PUSH2",
      "path": "41",
      "value": "0x6B1"
    },
    "9739": {
      "op": "JUMP"
    },
    "9740": {
      "fn": "ERC4973._mint",
      "offset": [
        6193,
        6243
      ],
      "op": "JUMPDEST",
      "path": "41"
    },
    "9741": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9743": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9745": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "9747": {
      "op": "SHL"
    },
    "9748": {
      "op": "SUB"
    },
    "9749": {
      "fn": "ERC4973._mint",
      "offset": [
        6253,
        6266
      ],
      "op": "DUP5",
      "path": "41",
      "statement": 133
    },
    "9750": {
      "fn": "ERC4973._mint",
      "offset": [
        6253,
        6266
      ],
      "op": "AND",
      "path": "41"
    },
    "9751": {
      "fn": "ERC4973._mint",
      "offset": [
        6253,
        6266
      ],
      "op": "PUSH1",
      "path": "41",
      "value": "0x0"
    },
    "9753": {
      "fn": "ERC4973._mint",
      "offset": [
        6253,
        6266
      ],
      "op": "SWAP1",
      "path": "41"
    },
    "9754": {
      "fn": "ERC4973._mint",
      "offset": [
        6253,
        6266
      ],
      "op": "DUP2",
      "path": "41"
    },
    "9755": {
      "fn": "ERC4973._mint",
      "offset": [
        6253,
        6266
      ],
      "op": "MSTORE",
      "path": "41"
    },
    "9756": {
      "fn": "ERC4973._mint",
      "offset": [
        6253,
        6262
      ],
      "op": "PUSH1",
      "path": "41",
      "value": "0x5"
    },
    "9758": {
      "fn": "ERC4973._mint",
      "offset": [
        6253,
        6266
      ],
      "op": "PUSH1",
      "path": "41",
      "value": "0x20"
    },
    "9760": {
      "fn": "ERC4973._mint",
      "offset": [
        6253,
        6266
      ],
      "op": "MSTORE",
      "path": "41"
    },
    "9761": {
      "fn": "ERC4973._mint",
      "offset": [
        6253,
        6266
      ],
      "op": "PUSH1",
      "path": "41",
      "value": "0x40"
    },
    "9763": {
      "fn": "ERC4973._mint",
      "offset": [
        6253,
        6266
      ],
      "op": "DUP2",
      "path": "41"
    },
    "9764": {
      "fn": "ERC4973._mint",
      "offset": [
        6253,
        6266
      ],
      "op": "KECCAK256",
      "path": "41"
    },
    "9765": {
      "fn": "ERC4973._mint",
      "offset": [
        6253,
        6271
      ],
      "op": "DUP1",
      "path": "41"
    },
    "9766": {
      "fn": "ERC4973._mint",
      "offset": [
        6253,
        6271
      ],
      "op": "SLOAD",
      "path": "41"
    },
    "9767": {
      "fn": "ERC4973._mint",
      "offset": [
        6270,
        6271
      ],
      "op": "PUSH1",
      "path": "41",
      "value": "0x1"
    },
    "9769": {
      "fn": "ERC4973._mint",
      "offset": [
        6270,
        6271
      ],
      "op": "SWAP3",
      "path": "41"
    },
    "9770": {
      "fn": "ERC4973._mint",
      "offset": [
        6253,
        6266
      ],
      "op": "SWAP1",
      "path": "41"
    },
    "9771": {
      "fn": "ERC4973._mint",
      "offset": [
        6253,
        6271
      ],
      "op": "PUSH2",
      "path": "41",
      "value": "0x2635"
    },
    "9774": {
      "fn": "ERC4973._mint",
      "offset": [
        6253,
        6271
      ],
      "op": "SWAP1",
      "path": "41"
    },
    "9775": {
      "fn": "ERC4973._mint",
      "offset": [
        6270,
        6271
      ],
      "op": "DUP5",
      "path": "41"
    },
    "9776": {
      "fn": "ERC4973._mint",
      "offset": [
        6270,
        6271
      ],
      "op": "SWAP1",
      "path": "41"
    },
    "9777": {
      "fn": "ERC4973._mint",
      "offset": [
        6253,
        6271
      ],
      "op": "PUSH2",
      "path": "41",
      "value": "0x2CBE"
    },
    "9780": {
      "fn": "ERC4973._mint",
      "jump": "i",
      "offset": [
        6253,
        6271
      ],
      "op": "JUMP",
      "path": "41"
    },
    "9781": {
      "fn": "ERC4973._mint",
      "offset": [
        6253,
        6271
      ],
      "op": "JUMPDEST",
      "path": "41"
    },
    "9782": {
      "fn": "ERC4973._mint",
      "offset": [
        6253,
        6271
      ],
      "op": "SWAP1",
      "path": "41"
    },
    "9783": {
      "fn": "ERC4973._mint",
      "offset": [
        6253,
        6271
      ],
      "op": "SWAP2",
      "path": "41"
    },
    "9784": {
      "fn": "ERC4973._mint",
      "offset": [
        6253,
        6271
      ],
      "op": "SSTORE",
      "path": "41"
    },
    "9785": {
      "op": "POP"
    },
    "9786": {
      "op": "POP"
    },
    "9787": {
      "fn": "ERC4973._mint",
      "offset": [
        6281,
        6297
      ],
      "op": "PUSH1",
      "path": "41",
      "statement": 134,
      "value": "0x0"
    },
    "9789": {
      "fn": "ERC4973._mint",
      "offset": [
        6281,
        6297
      ],
      "op": "DUP4",
      "path": "41"
    },
    "9790": {
      "fn": "ERC4973._mint",
      "offset": [
        6281,
        6297
      ],
      "op": "DUP2",
      "path": "41"
    },
    "9791": {
      "fn": "ERC4973._mint",
      "offset": [
        6281,
        6297
      ],
      "op": "MSTORE",
      "path": "41"
    },
    "9792": {
      "fn": "ERC4973._mint",
      "offset": [
        6281,
        6288
      ],
      "op": "PUSH1",
      "path": "41",
      "value": "0x3"
    },
    "9794": {
      "fn": "ERC4973._mint",
      "offset": [
        6281,
        6297
      ],
      "op": "PUSH1",
      "path": "41",
      "value": "0x20"
    },
    "9796": {
      "fn": "ERC4973._mint",
      "offset": [
        6281,
        6297
      ],
      "op": "SWAP1",
      "path": "41"
    },
    "9797": {
      "fn": "ERC4973._mint",
      "offset": [
        6281,
        6297
      ],
      "op": "DUP2",
      "path": "41"
    },
    "9798": {
      "fn": "ERC4973._mint",
      "offset": [
        6281,
        6297
      ],
      "op": "MSTORE",
      "path": "41"
    },
    "9799": {
      "fn": "ERC4973._mint",
      "offset": [
        6281,
        6297
      ],
      "op": "PUSH1",
      "path": "41",
      "value": "0x40"
    },
    "9801": {
      "fn": "ERC4973._mint",
      "offset": [
        6281,
        6297
      ],
      "op": "DUP1",
      "path": "41"
    },
    "9802": {
      "fn": "ERC4973._mint",
      "offset": [
        6281,
        6297
      ],
      "op": "DUP4",
      "path": "41"
    },
    "9803": {
      "fn": "ERC4973._mint",
      "offset": [
        6281,
        6297
      ],
      "op": "KECCAK256",
      "path": "41"
    },
    "9804": {
      "fn": "ERC4973._mint",
      "offset": [
        6281,
        6302
      ],
      "op": "DUP1",
      "path": "41"
    },
    "9805": {
      "fn": "ERC4973._mint",
      "offset": [
        6281,
        6302
      ],
      "op": "SLOAD",
      "path": "41"
    },
    "9806": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9808": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9810": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "9812": {
      "op": "SHL"
    },
    "9813": {
      "op": "SUB"
    },
    "9814": {
      "op": "NOT"
    },
    "9815": {
      "fn": "ERC4973._mint",
      "offset": [
        6281,
        6302
      ],
      "op": "AND",
      "path": "41"
    },
    "9816": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9818": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9820": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "9822": {
      "op": "SHL"
    },
    "9823": {
      "op": "SUB"
    },
    "9824": {
      "fn": "ERC4973._mint",
      "offset": [
        6281,
        6302
      ],
      "op": "DUP10",
      "path": "41"
    },
    "9825": {
      "fn": "ERC4973._mint",
      "offset": [
        6281,
        6302
      ],
      "op": "AND",
      "path": "41"
    },
    "9826": {
      "fn": "ERC4973._mint",
      "offset": [
        6281,
        6302
      ],
      "op": "OR",
      "path": "41"
    },
    "9827": {
      "fn": "ERC4973._mint",
      "offset": [
        6281,
        6302
      ],
      "op": "SWAP1",
      "path": "41"
    },
    "9828": {
      "fn": "ERC4973._mint",
      "offset": [
        6281,
        6302
      ],
      "op": "SSTORE",
      "path": "41"
    },
    "9829": {
      "fn": "ERC4973._mint",
      "offset": [
        6312,
        6322
      ],
      "op": "PUSH1",
      "path": "41",
      "statement": 135,
      "value": "0x4"
    },
    "9831": {
      "fn": "ERC4973._mint",
      "offset": [
        6312,
        6331
      ],
      "op": "SWAP1",
      "path": "41"
    },
    "9832": {
      "fn": "ERC4973._mint",
      "offset": [
        6312,
        6331
      ],
      "op": "SWAP2",
      "path": "41"
    },
    "9833": {
      "fn": "ERC4973._mint",
      "offset": [
        6312,
        6331
      ],
      "op": "MSTORE",
      "path": "41"
    },
    "9834": {
      "fn": "ERC4973._mint",
      "offset": [
        6312,
        6331
      ],
      "op": "SWAP1",
      "path": "41"
    },
    "9835": {
      "fn": "ERC4973._mint",
      "offset": [
        6312,
        6331
      ],
      "op": "KECCAK256",
      "path": "41"
    },
    "9836": {
      "fn": "ERC4973._mint",
      "offset": [
        6312,
        6337
      ],
      "op": "PUSH2",
      "path": "41",
      "value": "0x2675"
    },
    "9839": {
      "fn": "ERC4973._mint",
      "offset": [
        6334,
        6337
      ],
      "op": "DUP4",
      "path": "41"
    },
    "9840": {
      "fn": "ERC4973._mint",
      "offset": [
        6312,
        6331
      ],
      "op": "DUP3",
      "path": "41"
    },
    "9841": {
      "fn": "ERC4973._mint",
      "offset": [
        6312,
        6337
      ],
      "op": "PUSH2",
      "path": "41",
      "value": "0x2D97"
    },
    "9844": {
      "fn": "ERC4973._mint",
      "jump": "i",
      "offset": [
        6312,
        6337
      ],
      "op": "JUMP",
      "path": "41"
    },
    "9845": {
      "fn": "ERC4973._mint",
      "offset": [
        6312,
        6337
      ],
      "op": "JUMPDEST",
      "path": "41"
    },
    "9846": {
      "op": "POP"
    },
    "9847": {
      "fn": "ERC4973._mint",
      "offset": [
        6352,
        6371
      ],
      "op": "PUSH1",
      "path": "41",
      "statement": 136,
      "value": "0x40"
    },
    "9849": {
      "fn": "ERC4973._mint",
      "offset": [
        6352,
        6371
      ],
      "op": "MLOAD",
      "path": "41"
    },
    "9850": {
      "fn": "ERC4973._mint",
      "offset": [
        6363,
        6370
      ],
      "op": "DUP4",
      "path": "41"
    },
    "9851": {
      "fn": "ERC4973._mint",
      "offset": [
        6363,
        6370
      ],
      "op": "SWAP1",
      "path": "41"
    },
    "9852": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9854": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9856": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "9858": {
      "op": "SHL"
    },
    "9859": {
      "op": "SUB"
    },
    "9860": {
      "fn": "ERC4973._mint",
      "offset": [
        6352,
        6371
      ],
      "op": "DUP7",
      "path": "41"
    },
    "9861": {
      "fn": "ERC4973._mint",
      "offset": [
        6352,
        6371
      ],
      "op": "AND",
      "path": "41"
    },
    "9862": {
      "fn": "ERC4973._mint",
      "offset": [
        6352,
        6371
      ],
      "op": "SWAP1",
      "path": "41"
    },
    "9863": {
      "fn": "ERC4973._mint",
      "offset": [
        6352,
        6371
      ],
      "op": "PUSH32",
      "path": "41",
      "value": "0xE9274A84B19E9428826DE6BAE8C48329354F8F0E73F771B97CAE2D9DCCD45A27"
    },
    "9896": {
      "fn": "ERC4973._mint",
      "offset": [
        6352,
        6371
      ],
      "op": "SWAP1",
      "path": "41"
    },
    "9897": {
      "fn": "ERC4973._mint",
      "offset": [
        6352,
        6371
      ],
      "op": "PUSH1",
      "path": "41",
      "value": "0x0"
    },
    "9899": {
      "fn": "ERC4973._mint",
      "offset": [
        6352,
        6371
      ],
      "op": "SWAP1",
      "path": "41"
    },
    "9900": {
      "fn": "ERC4973._mint",
      "offset": [
        6352,
        6371
      ],
      "op": "LOG3",
      "path": "41"
    },
    "9901": {
      "op": "POP"
    },
    "9902": {
      "fn": "ERC4973._mint",
      "offset": [
        6388,
        6395
      ],
      "op": "SWAP1",
      "path": "41",
      "statement": 137
    },
    "9903": {
      "fn": "ERC4973._mint",
      "offset": [
        6388,
        6395
      ],
      "op": "SWAP3",
      "path": "41"
    },
    "9904": {
      "fn": "ERC4973._mint",
      "offset": [
        6055,
        6402
      ],
      "op": "SWAP2",
      "path": "41"
    },
    "9905": {
      "op": "POP"
    },
    "9906": {
      "op": "POP"
    },
    "9907": {
      "fn": "ERC4973._mint",
      "jump": "o",
      "offset": [
        6055,
        6402
      ],
      "op": "JUMP",
      "path": "41"
    },
    "9908": {
      "op": "JUMPDEST"
    },
    "9909": {
      "op": "POP"
    },
    "9910": {
      "op": "DUP1"
    },
    "9911": {
      "op": "SLOAD"
    },
    "9912": {
      "op": "PUSH2",
      "value": "0x26C0"
    },
    "9915": {
      "op": "SWAP1"
    },
    "9916": {
      "op": "PUSH2",
      "value": "0x2BC9"
    },
    "9919": {
      "jump": "i",
      "op": "JUMP"
    },
    "9920": {
      "op": "JUMPDEST"
    },
    "9921": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "9923": {
      "op": "DUP3"
    },
    "9924": {
      "op": "SSTORE"
    },
    "9925": {
      "op": "DUP1"
    },
    "9926": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "9928": {
      "op": "LT"
    },
    "9929": {
      "op": "PUSH2",
      "value": "0x26D0"
    },
    "9932": {
      "op": "JUMPI"
    },
    "9933": {
      "op": "POP"
    },
    "9934": {
      "op": "POP"
    },
    "9935": {
      "jump": "o",
      "op": "JUMP"
    },
    "9936": {
      "op": "JUMPDEST"
    },
    "9937": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "9939": {
      "op": "ADD"
    },
    "9940": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "9942": {
      "op": "SWAP1"
    },
    "9943": {
      "op": "DIV"
    },
    "9944": {
      "op": "SWAP1"
    },
    "9945": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "9947": {
      "op": "MSTORE"
    },
    "9948": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "9950": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "9952": {
      "op": "KECCAK256"
    },
    "9953": {
      "op": "SWAP1"
    },
    "9954": {
      "op": "DUP2"
    },
    "9955": {
      "op": "ADD"
    },
    "9956": {
      "op": "SWAP1"
    },
    "9957": {
      "op": "PUSH2",
      "value": "0x110A"
    },
    "9960": {
      "op": "SWAP2"
    },
    "9961": {
      "op": "SWAP1"
    },
    "9962": {
      "op": "JUMPDEST"
    },
    "9963": {
      "op": "DUP1"
    },
    "9964": {
      "op": "DUP3"
    },
    "9965": {
      "op": "GT"
    },
    "9966": {
      "op": "ISZERO"
    },
    "9967": {
      "op": "PUSH2",
      "value": "0x26FE"
    },
    "9970": {
      "op": "JUMPI"
    },
    "9971": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "9973": {
      "op": "DUP2"
    },
    "9974": {
      "op": "SSTORE"
    },
    "9975": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9977": {
      "op": "ADD"
    },
    "9978": {
      "op": "PUSH2",
      "value": "0x26EA"
    },
    "9981": {
      "op": "JUMP"
    },
    "9982": {
      "op": "JUMPDEST"
    },
    "9983": {
      "op": "POP"
    },
    "9984": {
      "op": "SWAP1"
    },
    "9985": {
      "jump": "o",
      "op": "JUMP"
    },
    "9986": {
      "op": "JUMPDEST"
    },
    "9987": {
      "op": "DUP1"
    },
    "9988": {
      "op": "CALLDATALOAD"
    },
    "9989": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9991": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9993": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "9995": {
      "op": "SHL"
    },
    "9996": {
      "op": "SUB"
    },
    "9997": {
      "op": "DUP2"
    },
    "9998": {
      "op": "AND"
    },
    "9999": {
      "op": "DUP2"
    },
    "10000": {
      "op": "EQ"
    },
    "10001": {
      "op": "PUSH2",
      "value": "0x1ADF"
    },
    "10004": {
      "op": "JUMPI"
    },
    "10005": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "10007": {
      "op": "DUP1"
    },
    "10008": {
      "op": "REVERT"
    },
    "10009": {
      "op": "JUMPDEST"
    },
    "10010": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "10012": {
      "op": "DUP1"
    },
    "10013": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "10015": {
      "op": "DUP4"
    },
    "10016": {
      "op": "DUP6"
    },
    "10017": {
      "op": "SUB"
    },
    "10018": {
      "op": "SLT"
    },
    "10019": {
      "op": "ISZERO"
    },
    "10020": {
      "op": "PUSH2",
      "value": "0x272C"
    },
    "10023": {
      "op": "JUMPI"
    },
    "10024": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "10026": {
      "op": "DUP1"
    },
    "10027": {
      "op": "REVERT"
    },
    "10028": {
      "op": "JUMPDEST"
    },
    "10029": {
      "op": "PUSH2",
      "value": "0x2735"
    },
    "10032": {
      "op": "DUP4"
    },
    "10033": {
      "op": "PUSH2",
      "value": "0x2702"
    },
    "10036": {
      "jump": "i",
      "op": "JUMP"
    },
    "10037": {
      "op": "JUMPDEST"
    },
    "10038": {
      "op": "SWAP5"
    },
    "10039": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "10041": {
      "op": "SWAP4"
    },
    "10042": {
      "op": "SWAP1"
    },
    "10043": {
      "op": "SWAP4"
    },
    "10044": {
      "op": "ADD"
    },
    "10045": {
      "op": "CALLDATALOAD"
    },
    "10046": {
      "op": "SWAP4"
    },
    "10047": {
      "op": "POP"
    },
    "10048": {
      "op": "POP"
    },
    "10049": {
      "op": "POP"
    },
    "10050": {
      "jump": "o",
      "op": "JUMP"
    },
    "10051": {
      "op": "JUMPDEST"
    },
    "10052": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "10054": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "10056": {
      "op": "DUP3"
    },
    "10057": {
      "op": "DUP5"
    },
    "10058": {
      "op": "SUB"
    },
    "10059": {
      "op": "SLT"
    },
    "10060": {
      "op": "ISZERO"
    },
    "10061": {
      "op": "PUSH2",
      "value": "0x2755"
    },
    "10064": {
      "op": "JUMPI"
    },
    "10065": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "10067": {
      "op": "DUP1"
    },
    "10068": {
      "op": "REVERT"
    },
    "10069": {
      "op": "JUMPDEST"
    },
    "10070": {
      "op": "DUP2"
    },
    "10071": {
      "op": "CALLDATALOAD"
    },
    "10072": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10074": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10076": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "10078": {
      "op": "SHL"
    },
    "10079": {
      "op": "SUB"
    },
    "10080": {
      "op": "NOT"
    },
    "10081": {
      "op": "DUP2"
    },
    "10082": {
      "op": "AND"
    },
    "10083": {
      "op": "DUP2"
    },
    "10084": {
      "op": "EQ"
    },
    "10085": {
      "op": "PUSH2",
      "value": "0x1AA0"
    },
    "10088": {
      "op": "JUMPI"
    },
    "10089": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "10091": {
      "op": "DUP1"
    },
    "10092": {
      "op": "REVERT"
    },
    "10093": {
      "op": "JUMPDEST"
    },
    "10094": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "10096": {
      "op": "JUMPDEST"
    },
    "10097": {
      "op": "DUP4"
    },
    "10098": {
      "op": "DUP2"
    },
    "10099": {
      "op": "LT"
    },
    "10100": {
      "op": "ISZERO"
    },
    "10101": {
      "op": "PUSH2",
      "value": "0x2788"
    },
    "10104": {
      "op": "JUMPI"
    },
    "10105": {
      "op": "DUP2"
    },
    "10106": {
      "op": "DUP2"
    },
    "10107": {
      "op": "ADD"
    },
    "10108": {
      "op": "MLOAD"
    },
    "10109": {
      "op": "DUP4"
    },
    "10110": {
      "op": "DUP3"
    },
    "10111": {
      "op": "ADD"
    },
    "10112": {
      "op": "MSTORE"
    },
    "10113": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "10115": {
      "op": "ADD"
    },
    "10116": {
      "op": "PUSH2",
      "value": "0x2770"
    },
    "10119": {
      "op": "JUMP"
    },
    "10120": {
      "op": "JUMPDEST"
    },
    "10121": {
      "op": "DUP4"
    },
    "10122": {
      "op": "DUP2"
    },
    "10123": {
      "op": "GT"
    },
    "10124": {
      "op": "ISZERO"
    },
    "10125": {
      "op": "PUSH2",
      "value": "0x2797"
    },
    "10128": {
      "op": "JUMPI"
    },
    "10129": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "10131": {
      "op": "DUP5"
    },
    "10132": {
      "op": "DUP5"
    },
    "10133": {
      "op": "ADD"
    },
    "10134": {
      "op": "MSTORE"
    },
    "10135": {
      "op": "JUMPDEST"
    },
    "10136": {
      "op": "POP"
    },
    "10137": {
      "op": "POP"
    },
    "10138": {
      "op": "POP"
    },
    "10139": {
      "op": "POP"
    },
    "10140": {
      "jump": "o",
      "op": "JUMP"
    },
    "10141": {
      "op": "JUMPDEST"
    },
    "10142": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "10144": {
      "op": "DUP2"
    },
    "10145": {
      "op": "MSTORE"
    },
    "10146": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "10148": {
      "op": "DUP3"
    },
    "10149": {
      "op": "MLOAD"
    },
    "10150": {
      "op": "DUP1"
    },
    "10151": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "10153": {
      "op": "DUP5"
    },
    "10154": {
      "op": "ADD"
    },
    "10155": {
      "op": "MSTORE"
    },
    "10156": {
      "op": "PUSH2",
      "value": "0x27BC"
    },
    "10159": {
      "op": "DUP2"
    },
    "10160": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "10162": {
      "op": "DUP6"
    },
    "10163": {
      "op": "ADD"
    },
    "10164": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "10166": {
      "op": "DUP8"
    },
    "10167": {
      "op": "ADD"
    },
    "10168": {
      "op": "PUSH2",
      "value": "0x276D"
    },
    "10171": {
      "jump": "i",
      "op": "JUMP"
    },
    "10172": {
      "op": "JUMPDEST"
    },
    "10173": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "10175": {
      "op": "ADD"
    },
    "10176": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "10178": {
      "op": "NOT"
    },
    "10179": {
      "op": "AND"
    },
    "10180": {
      "op": "SWAP2"
    },
    "10181": {
      "op": "SWAP1"
    },
    "10182": {
      "op": "SWAP2"
    },
    "10183": {
      "op": "ADD"
    },
    "10184": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "10186": {
      "op": "ADD"
    },
    "10187": {
      "op": "SWAP3"
    },
    "10188": {
      "op": "SWAP2"
    },
    "10189": {
      "op": "POP"
    },
    "10190": {
      "op": "POP"
    },
    "10191": {
      "jump": "o",
      "op": "JUMP"
    },
    "10192": {
      "op": "JUMPDEST"
    },
    "10193": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "10198": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "10200": {
      "op": "SHL"
    },
    "10201": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "10203": {
      "op": "MSTORE"
    },
    "10204": {
      "op": "PUSH1",
      "value": "0x41"
    },
    "10206": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "10208": {
      "op": "MSTORE"
    },
    "10209": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "10211": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "10213": {
      "op": "REVERT"
    },
    "10214": {
      "op": "JUMPDEST"
    },
    "10215": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "10217": {
      "op": "DUP3"
    },
    "10218": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "10220": {
      "op": "DUP4"
    },
    "10221": {
      "op": "ADD"
    },
    "10222": {
      "op": "SLT"
    },
    "10223": {
      "op": "PUSH2",
      "value": "0x27F7"
    },
    "10226": {
      "op": "JUMPI"
    },
    "10227": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "10229": {
      "op": "DUP1"
    },
    "10230": {
      "op": "REVERT"
    },
    "10231": {
      "op": "JUMPDEST"
    },
    "10232": {
      "op": "DUP2"
    },
    "10233": {
      "op": "CALLDATALOAD"
    },
    "10234": {
      "op": "PUSH8",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "10243": {
      "op": "DUP1"
    },
    "10244": {
      "op": "DUP3"
    },
    "10245": {
      "op": "GT"
    },
    "10246": {
      "op": "ISZERO"
    },
    "10247": {
      "op": "PUSH2",
      "value": "0x2812"
    },
    "10250": {
      "op": "JUMPI"
    },
    "10251": {
      "op": "PUSH2",
      "value": "0x2812"
    },
    "10254": {
      "op": "PUSH2",
      "value": "0x27D0"
    },
    "10257": {
      "jump": "i",
      "op": "JUMP"
    },
    "10258": {
      "op": "JUMPDEST"
    },
    "10259": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "10261": {
      "op": "MLOAD"
    },
    "10262": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "10264": {
      "op": "DUP4"
    },
    "10265": {
      "op": "ADD"
    },
    "10266": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "10268": {
      "op": "NOT"
    },
    "10269": {
      "op": "SWAP1"
    },
    "10270": {
      "op": "DUP2"
    },
    "10271": {
      "op": "AND"
    },
    "10272": {
      "op": "PUSH1",
      "value": "0x3F"
    },
    "10274": {
      "op": "ADD"
    },
    "10275": {
      "op": "AND"
    },
    "10276": {
      "op": "DUP2"
    },
    "10277": {
      "op": "ADD"
    },
    "10278": {
      "op": "SWAP1"
    },
    "10279": {
      "op": "DUP3"
    },
    "10280": {
      "op": "DUP3"
    },
    "10281": {
      "op": "GT"
    },
    "10282": {
      "op": "DUP2"
    },
    "10283": {
      "op": "DUP4"
    },
    "10284": {
      "op": "LT"
    },
    "10285": {
      "op": "OR"
    },
    "10286": {
      "op": "ISZERO"
    },
    "10287": {
      "op": "PUSH2",
      "value": "0x283A"
    },
    "10290": {
      "op": "JUMPI"
    },
    "10291": {
      "op": "PUSH2",
      "value": "0x283A"
    },
    "10294": {
      "op": "PUSH2",
      "value": "0x27D0"
    },
    "10297": {
      "jump": "i",
      "op": "JUMP"
    },
    "10298": {
      "op": "JUMPDEST"
    },
    "10299": {
      "op": "DUP2"
    },
    "10300": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "10302": {
      "op": "MSTORE"
    },
    "10303": {
      "op": "DUP4"
    },
    "10304": {
      "op": "DUP2"
    },
    "10305": {
      "op": "MSTORE"
    },
    "10306": {
      "op": "DUP7"
    },
    "10307": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "10309": {
      "op": "DUP6"
    },
    "10310": {
      "op": "DUP9"
    },
    "10311": {
      "op": "ADD"
    },
    "10312": {
      "op": "ADD"
    },
    "10313": {
      "op": "GT"
    },
    "10314": {
      "op": "ISZERO"
    },
    "10315": {
      "op": "PUSH2",
      "value": "0x2853"
    },
    "10318": {
      "op": "JUMPI"
    },
    "10319": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "10321": {
      "op": "DUP1"
    },
    "10322": {
      "op": "REVERT"
    },
    "10323": {
      "op": "JUMPDEST"
    },
    "10324": {
      "op": "DUP4"
    },
    "10325": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "10327": {
      "op": "DUP8"
    },
    "10328": {
      "op": "ADD"
    },
    "10329": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "10331": {
      "op": "DUP4"
    },
    "10332": {
      "op": "ADD"
    },
    "10333": {
      "op": "CALLDATACOPY"
    },
    "10334": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "10336": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "10338": {
      "op": "DUP6"
    },
    "10339": {
      "op": "DUP4"
    },
    "10340": {
      "op": "ADD"
    },
    "10341": {
      "op": "ADD"
    },
    "10342": {
      "op": "MSTORE"
    },
    "10343": {
      "op": "DUP1"
    },
    "10344": {
      "op": "SWAP5"
    },
    "10345": {
      "op": "POP"
    },
    "10346": {
      "op": "POP"
    },
    "10347": {
      "op": "POP"
    },
    "10348": {
      "op": "POP"
    },
    "10349": {
      "op": "POP"
    },
    "10350": {
      "op": "SWAP3"
    },
    "10351": {
      "op": "SWAP2"
    },
    "10352": {
      "op": "POP"
    },
    "10353": {
      "op": "POP"
    },
    "10354": {
      "jump": "o",
      "op": "JUMP"
    },
    "10355": {
      "op": "JUMPDEST"
    },
    "10356": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "10358": {
      "op": "DUP1"
    },
    "10359": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "10361": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "10363": {
      "op": "DUP5"
    },
    "10364": {
      "op": "DUP7"
    },
    "10365": {
      "op": "SUB"
    },
    "10366": {
      "op": "SLT"
    },
    "10367": {
      "op": "ISZERO"
    },
    "10368": {
      "op": "PUSH2",
      "value": "0x2888"
    },
    "10371": {
      "op": "JUMPI"
    },
    "10372": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "10374": {
      "op": "DUP1"
    },
    "10375": {
      "op": "REVERT"
    },
    "10376": {
      "op": "JUMPDEST"
    },
    "10377": {
      "op": "DUP4"
    },
    "10378": {
      "op": "CALLDATALOAD"
    },
    "10379": {
      "op": "SWAP3"
    },
    "10380": {
      "op": "POP"
    },
    "10381": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "10383": {
      "op": "DUP5"
    },
    "10384": {
      "op": "ADD"
    },
    "10385": {
      "op": "CALLDATALOAD"
    },
    "10386": {
      "op": "PUSH8",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "10395": {
      "op": "DUP2"
    },
    "10396": {
      "op": "GT"
    },
    "10397": {
      "op": "ISZERO"
    },
    "10398": {
      "op": "PUSH2",
      "value": "0x28A6"
    },
    "10401": {
      "op": "JUMPI"
    },
    "10402": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "10404": {
      "op": "DUP1"
    },
    "10405": {
      "op": "REVERT"
    },
    "10406": {
      "op": "JUMPDEST"
    },
    "10407": {
      "op": "PUSH2",
      "value": "0x28B2"
    },
    "10410": {
      "op": "DUP7"
    },
    "10411": {
      "op": "DUP3"
    },
    "10412": {
      "op": "DUP8"
    },
    "10413": {
      "op": "ADD"
    },
    "10414": {
      "op": "PUSH2",
      "value": "0x27E6"
    },
    "10417": {
      "jump": "i",
      "op": "JUMP"
    },
    "10418": {
      "op": "JUMPDEST"
    },
    "10419": {
      "op": "SWAP3"
    },
    "10420": {
      "op": "POP"
    },
    "10421": {
      "op": "POP"
    },
    "10422": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "10424": {
      "op": "DUP5"
    },
    "10425": {
      "op": "ADD"
    },
    "10426": {
      "op": "CALLDATALOAD"
    },
    "10427": {
      "op": "SWAP1"
    },
    "10428": {
      "op": "POP"
    },
    "10429": {
      "op": "SWAP3"
    },
    "10430": {
      "op": "POP"
    },
    "10431": {
      "op": "SWAP3"
    },
    "10432": {
      "op": "POP"
    },
    "10433": {
      "op": "SWAP3"
    },
    "10434": {
      "jump": "o",
      "op": "JUMP"
    },
    "10435": {
      "op": "JUMPDEST"
    },
    "10436": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "10438": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "10440": {
      "op": "DUP3"
    },
    "10441": {
      "op": "DUP5"
    },
    "10442": {
      "op": "SUB"
    },
    "10443": {
      "op": "SLT"
    },
    "10444": {
      "op": "ISZERO"
    },
    "10445": {
      "op": "PUSH2",
      "value": "0x28D5"
    },
    "10448": {
      "op": "JUMPI"
    },
    "10449": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "10451": {
      "op": "DUP1"
    },
    "10452": {
      "op": "REVERT"
    },
    "10453": {
      "op": "JUMPDEST"
    },
    "10454": {
      "op": "POP"
    },
    "10455": {
      "op": "CALLDATALOAD"
    },
    "10456": {
      "op": "SWAP2"
    },
    "10457": {
      "op": "SWAP1"
    },
    "10458": {
      "op": "POP"
    },
    "10459": {
      "jump": "o",
      "op": "JUMP"
    },
    "10460": {
      "op": "JUMPDEST"
    },
    "10461": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "10463": {
      "op": "DUP1"
    },
    "10464": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "10466": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "10468": {
      "op": "DUP5"
    },
    "10469": {
      "op": "DUP7"
    },
    "10470": {
      "op": "SUB"
    },
    "10471": {
      "op": "SLT"
    },
    "10472": {
      "op": "ISZERO"
    },
    "10473": {
      "op": "PUSH2",
      "value": "0x28F1"
    },
    "10476": {
      "op": "JUMPI"
    },
    "10477": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "10479": {
      "op": "DUP1"
    },
    "10480": {
      "op": "REVERT"
    },
    "10481": {
      "op": "JUMPDEST"
    },
    "10482": {
      "op": "PUSH2",
      "value": "0x28FA"
    },
    "10485": {
      "op": "DUP5"
    },
    "10486": {
      "op": "PUSH2",
      "value": "0x2702"
    },
    "10489": {
      "jump": "i",
      "op": "JUMP"
    },
    "10490": {
      "op": "JUMPDEST"
    },
    "10491": {
      "op": "SWAP6"
    },
    "10492": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "10494": {
      "op": "DUP6"
    },
    "10495": {
      "op": "ADD"
    },
    "10496": {
      "op": "CALLDATALOAD"
    },
    "10497": {
      "op": "SWAP6"
    },
    "10498": {
      "op": "POP"
    },
    "10499": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "10501": {
      "op": "SWAP1"
    },
    "10502": {
      "op": "SWAP5"
    },
    "10503": {
      "op": "ADD"
    },
    "10504": {
      "op": "CALLDATALOAD"
    },
    "10505": {
      "op": "SWAP4"
    },
    "10506": {
      "op": "SWAP3"
    },
    "10507": {
      "op": "POP"
    },
    "10508": {
      "op": "POP"
    },
    "10509": {
      "op": "POP"
    },
    "10510": {
      "jump": "o",
      "op": "JUMP"
    },
    "10511": {
      "op": "JUMPDEST"
    },
    "10512": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "10514": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "10516": {
      "op": "DUP3"
    },
    "10517": {
      "op": "DUP5"
    },
    "10518": {
      "op": "SUB"
    },
    "10519": {
      "op": "SLT"
    },
    "10520": {
      "op": "ISZERO"
    },
    "10521": {
      "op": "PUSH2",
      "value": "0x2921"
    },
    "10524": {
      "op": "JUMPI"
    },
    "10525": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "10527": {
      "op": "DUP1"
    },
    "10528": {
      "op": "REVERT"
    },
    "10529": {
      "op": "JUMPDEST"
    },
    "10530": {
      "op": "PUSH2",
      "value": "0x1AA0"
    },
    "10533": {
      "op": "DUP3"
    },
    "10534": {
      "op": "PUSH2",
      "value": "0x2702"
    },
    "10537": {
      "jump": "i",
      "op": "JUMP"
    },
    "10538": {
      "op": "JUMPDEST"
    },
    "10539": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "10541": {
      "op": "DUP1"
    },
    "10542": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "10544": {
      "op": "DUP4"
    },
    "10545": {
      "op": "DUP6"
    },
    "10546": {
      "op": "SUB"
    },
    "10547": {
      "op": "SLT"
    },
    "10548": {
      "op": "ISZERO"
    },
    "10549": {
      "op": "PUSH2",
      "value": "0x293D"
    },
    "10552": {
      "op": "JUMPI"
    },
    "10553": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "10555": {
      "op": "DUP1"
    },
    "10556": {
      "op": "REVERT"
    },
    "10557": {
      "op": "JUMPDEST"
    },
    "10558": {
      "op": "PUSH2",
      "value": "0x2946"
    },
    "10561": {
      "op": "DUP4"
    },
    "10562": {
      "op": "PUSH2",
      "value": "0x2702"
    },
    "10565": {
      "jump": "i",
      "op": "JUMP"
    },
    "10566": {
      "op": "JUMPDEST"
    },
    "10567": {
      "op": "SWAP2"
    },
    "10568": {
      "op": "POP"
    },
    "10569": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "10571": {
      "op": "DUP4"
    },
    "10572": {
      "op": "ADD"
    },
    "10573": {
      "op": "CALLDATALOAD"
    },
    "10574": {
      "op": "PUSH8",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "10583": {
      "op": "DUP2"
    },
    "10584": {
      "op": "GT"
    },
    "10585": {
      "op": "ISZERO"
    },
    "10586": {
      "op": "PUSH2",
      "value": "0x2962"
    },
    "10589": {
      "op": "JUMPI"
    },
    "10590": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "10592": {
      "op": "DUP1"
    },
    "10593": {
      "op": "REVERT"
    },
    "10594": {
      "op": "JUMPDEST"
    },
    "10595": {
      "op": "PUSH2",
      "value": "0x296E"
    },
    "10598": {
      "op": "DUP6"
    },
    "10599": {
      "op": "DUP3"
    },
    "10600": {
      "op": "DUP7"
    },
    "10601": {
      "op": "ADD"
    },
    "10602": {
      "op": "PUSH2",
      "value": "0x27E6"
    },
    "10605": {
      "jump": "i",
      "op": "JUMP"
    },
    "10606": {
      "op": "JUMPDEST"
    },
    "10607": {
      "op": "SWAP2"
    },
    "10608": {
      "op": "POP"
    },
    "10609": {
      "op": "POP"
    },
    "10610": {
      "op": "SWAP3"
    },
    "10611": {
      "op": "POP"
    },
    "10612": {
      "op": "SWAP3"
    },
    "10613": {
      "op": "SWAP1"
    },
    "10614": {
      "op": "POP"
    },
    "10615": {
      "jump": "o",
      "op": "JUMP"
    },
    "10616": {
      "op": "JUMPDEST"
    },
    "10617": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "10619": {
      "op": "DUP1"
    },
    "10620": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "10622": {
      "op": "DUP1"
    },
    "10623": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "10625": {
      "op": "DUP1"
    },
    "10626": {
      "op": "PUSH1",
      "value": "0xC0"
    },
    "10628": {
      "op": "DUP8"
    },
    "10629": {
      "op": "DUP10"
    },
    "10630": {
      "op": "SUB"
    },
    "10631": {
      "op": "SLT"
    },
    "10632": {
      "op": "ISZERO"
    },
    "10633": {
      "op": "PUSH2",
      "value": "0x2991"
    },
    "10636": {
      "op": "JUMPI"
    },
    "10637": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "10639": {
      "op": "DUP1"
    },
    "10640": {
      "op": "REVERT"
    },
    "10641": {
      "op": "JUMPDEST"
    },
    "10642": {
      "op": "PUSH2",
      "value": "0x299A"
    },
    "10645": {
      "op": "DUP8"
    },
    "10646": {
      "op": "PUSH2",
      "value": "0x2702"
    },
    "10649": {
      "jump": "i",
      "op": "JUMP"
    },
    "10650": {
      "op": "JUMPDEST"
    },
    "10651": {
      "op": "SWAP6"
    },
    "10652": {
      "op": "POP"
    },
    "10653": {
      "op": "PUSH2",
      "value": "0x29A8"
    },
    "10656": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "10658": {
      "op": "DUP9"
    },
    "10659": {
      "op": "ADD"
    },
    "10660": {
      "op": "PUSH2",
      "value": "0x2702"
    },
    "10663": {
      "jump": "i",
      "op": "JUMP"
    },
    "10664": {
      "op": "JUMPDEST"
    },
    "10665": {
      "op": "SWAP5"
    },
    "10666": {
      "op": "POP"
    },
    "10667": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "10669": {
      "op": "DUP8"
    },
    "10670": {
      "op": "ADD"
    },
    "10671": {
      "op": "CALLDATALOAD"
    },
    "10672": {
      "op": "SWAP4"
    },
    "10673": {
      "op": "POP"
    },
    "10674": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "10676": {
      "op": "DUP8"
    },
    "10677": {
      "op": "ADD"
    },
    "10678": {
      "op": "CALLDATALOAD"
    },
    "10679": {
      "op": "SWAP3"
    },
    "10680": {
      "op": "POP"
    },
    "10681": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "10683": {
      "op": "DUP8"
    },
    "10684": {
      "op": "ADD"
    },
    "10685": {
      "op": "CALLDATALOAD"
    },
    "10686": {
      "op": "SWAP2"
    },
    "10687": {
      "op": "POP"
    },
    "10688": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "10690": {
      "op": "DUP8"
    },
    "10691": {
      "op": "ADD"
    },
    "10692": {
      "op": "CALLDATALOAD"
    },
    "10693": {
      "op": "PUSH8",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "10702": {
      "op": "DUP2"
    },
    "10703": {
      "op": "GT"
    },
    "10704": {
      "op": "ISZERO"
    },
    "10705": {
      "op": "PUSH2",
      "value": "0x29D9"
    },
    "10708": {
      "op": "JUMPI"
    },
    "10709": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "10711": {
      "op": "DUP1"
    },
    "10712": {
      "op": "REVERT"
    },
    "10713": {
      "op": "JUMPDEST"
    },
    "10714": {
      "op": "PUSH2",
      "value": "0x29E5"
    },
    "10717": {
      "op": "DUP10"
    },
    "10718": {
      "op": "DUP3"
    },
    "10719": {
      "op": "DUP11"
    },
    "10720": {
      "op": "ADD"
    },
    "10721": {
      "op": "PUSH2",
      "value": "0x27E6"
    },
    "10724": {
      "jump": "i",
      "op": "JUMP"
    },
    "10725": {
      "op": "JUMPDEST"
    },
    "10726": {
      "op": "SWAP2"
    },
    "10727": {
      "op": "POP"
    },
    "10728": {
      "op": "POP"
    },
    "10729": {
      "op": "SWAP3"
    },
    "10730": {
      "op": "SWAP6"
    },
    "10731": {
      "op": "POP"
    },
    "10732": {
      "op": "SWAP3"
    },
    "10733": {
      "op": "SWAP6"
    },
    "10734": {
      "op": "POP"
    },
    "10735": {
      "op": "SWAP3"
    },
    "10736": {
      "op": "SWAP6"
    },
    "10737": {
      "jump": "o",
      "op": "JUMP"
    },
    "10738": {
      "op": "JUMPDEST"
    },
    "10739": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "10741": {
      "op": "DUP1"
    },
    "10742": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "10744": {
      "op": "DUP1"
    },
    "10745": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "10747": {
      "op": "DUP6"
    },
    "10748": {
      "op": "DUP8"
    },
    "10749": {
      "op": "SUB"
    },
    "10750": {
      "op": "SLT"
    },
    "10751": {
      "op": "ISZERO"
    },
    "10752": {
      "op": "PUSH2",
      "value": "0x2A08"
    },
    "10755": {
      "op": "JUMPI"
    },
    "10756": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "10758": {
      "op": "DUP1"
    },
    "10759": {
      "op": "REVERT"
    },
    "10760": {
      "op": "JUMPDEST"
    },
    "10761": {
      "op": "PUSH2",
      "value": "0x2A11"
    },
    "10764": {
      "op": "DUP6"
    },
    "10765": {
      "op": "PUSH2",
      "value": "0x2702"
    },
    "10768": {
      "jump": "i",
      "op": "JUMP"
    },
    "10769": {
      "op": "JUMPDEST"
    },
    "10770": {
      "op": "SWAP4"
    },
    "10771": {
      "op": "POP"
    },
    "10772": {
      "op": "PUSH2",
      "value": "0x2A1F"
    },
    "10775": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "10777": {
      "op": "DUP7"
    },
    "10778": {
      "op": "ADD"
    },
    "10779": {
      "op": "PUSH2",
      "value": "0x2702"
    },
    "10782": {
      "jump": "i",
      "op": "JUMP"
    },
    "10783": {
      "op": "JUMPDEST"
    },
    "10784": {
      "op": "SWAP4"
    },
    "10785": {
      "op": "SWAP7"
    },
    "10786": {
      "op": "SWAP4"
    },
    "10787": {
      "op": "SWAP6"
    },
    "10788": {
      "op": "POP"
    },
    "10789": {
      "op": "POP"
    },
    "10790": {
      "op": "POP"
    },
    "10791": {
      "op": "POP"
    },
    "10792": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "10794": {
      "op": "DUP3"
    },
    "10795": {
      "op": "ADD"
    },
    "10796": {
      "op": "CALLDATALOAD"
    },
    "10797": {
      "op": "SWAP2"
    },
    "10798": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "10800": {
      "op": "ADD"
    },
    "10801": {
      "op": "CALLDATALOAD"
    },
    "10802": {
      "op": "SWAP1"
    },
    "10803": {
      "jump": "o",
      "op": "JUMP"
    },
    "10804": {
      "op": "JUMPDEST"
    },
    "10805": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "10807": {
      "op": "DUP1"
    },
    "10808": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "10810": {
      "op": "DUP4"
    },
    "10811": {
      "op": "DUP6"
    },
    "10812": {
      "op": "SUB"
    },
    "10813": {
      "op": "SLT"
    },
    "10814": {
      "op": "ISZERO"
    },
    "10815": {
      "op": "PUSH2",
      "value": "0x2A47"
    },
    "10818": {
      "op": "JUMPI"
    },
    "10819": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "10821": {
      "op": "DUP1"
    },
    "10822": {
      "op": "REVERT"
    },
    "10823": {
      "op": "JUMPDEST"
    },
    "10824": {
      "op": "POP"
    },
    "10825": {
      "op": "POP"
    },
    "10826": {
      "op": "DUP1"
    },
    "10827": {
      "op": "CALLDATALOAD"
    },
    "10828": {
      "op": "SWAP3"
    },
    "10829": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "10831": {
      "op": "SWAP1"
    },
    "10832": {
      "op": "SWAP2"
    },
    "10833": {
      "op": "ADD"
    },
    "10834": {
      "op": "CALLDATALOAD"
    },
    "10835": {
      "op": "SWAP2"
    },
    "10836": {
      "op": "POP"
    },
    "10837": {
      "jump": "o",
      "op": "JUMP"
    },
    "10838": {
      "op": "JUMPDEST"
    },
    "10839": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "10841": {
      "op": "DUP1"
    },
    "10842": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "10844": {
      "op": "DUP1"
    },
    "10845": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "10847": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "10849": {
      "op": "DUP7"
    },
    "10850": {
      "op": "DUP9"
    },
    "10851": {
      "op": "SUB"
    },
    "10852": {
      "op": "SLT"
    },
    "10853": {
      "op": "ISZERO"
    },
    "10854": {
      "op": "PUSH2",
      "value": "0x2A6E"
    },
    "10857": {
      "op": "JUMPI"
    },
    "10858": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "10860": {
      "op": "DUP1"
    },
    "10861": {
      "op": "REVERT"
    },
    "10862": {
      "op": "JUMPDEST"
    },
    "10863": {
      "op": "PUSH2",
      "value": "0x2A77"
    },
    "10866": {
      "op": "DUP7"
    },
    "10867": {
      "op": "PUSH2",
      "value": "0x2702"
    },
    "10870": {
      "jump": "i",
      "op": "JUMP"
    },
    "10871": {
      "op": "JUMPDEST"
    },
    "10872": {
      "op": "SWAP5"
    },
    "10873": {
      "op": "POP"
    },
    "10874": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "10876": {
      "op": "DUP7"
    },
    "10877": {
      "op": "ADD"
    },
    "10878": {
      "op": "CALLDATALOAD"
    },
    "10879": {
      "op": "SWAP4"
    },
    "10880": {
      "op": "POP"
    },
    "10881": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "10883": {
      "op": "DUP7"
    },
    "10884": {
      "op": "ADD"
    },
    "10885": {
      "op": "CALLDATALOAD"
    },
    "10886": {
      "op": "PUSH8",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "10895": {
      "op": "DUP1"
    },
    "10896": {
      "op": "DUP3"
    },
    "10897": {
      "op": "GT"
    },
    "10898": {
      "op": "ISZERO"
    },
    "10899": {
      "op": "PUSH2",
      "value": "0x2A9B"
    },
    "10902": {
      "op": "JUMPI"
    },
    "10903": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "10905": {
      "op": "DUP1"
    },
    "10906": {
      "op": "REVERT"
    },
    "10907": {
      "op": "JUMPDEST"
    },
    "10908": {
      "op": "PUSH2",
      "value": "0x2AA7"
    },
    "10911": {
      "op": "DUP10"
    },
    "10912": {
      "op": "DUP4"
    },
    "10913": {
      "op": "DUP11"
    },
    "10914": {
      "op": "ADD"
    },
    "10915": {
      "op": "PUSH2",
      "value": "0x27E6"
    },
    "10918": {
      "jump": "i",
      "op": "JUMP"
    },
    "10919": {
      "op": "JUMPDEST"
    },
    "10920": {
      "op": "SWAP5"
    },
    "10921": {
      "op": "POP"
    },
    "10922": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "10924": {
      "op": "DUP9"
    },
    "10925": {
      "op": "ADD"
    },
    "10926": {
      "op": "CALLDATALOAD"
    },
    "10927": {
      "op": "SWAP4"
    },
    "10928": {
      "op": "POP"
    },
    "10929": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "10931": {
      "op": "DUP9"
    },
    "10932": {
      "op": "ADD"
    },
    "10933": {
      "op": "CALLDATALOAD"
    },
    "10934": {
      "op": "SWAP2"
    },
    "10935": {
      "op": "POP"
    },
    "10936": {
      "op": "DUP1"
    },
    "10937": {
      "op": "DUP3"
    },
    "10938": {
      "op": "GT"
    },
    "10939": {
      "op": "ISZERO"
    },
    "10940": {
      "op": "PUSH2",
      "value": "0x2AC4"
    },
    "10943": {
      "op": "JUMPI"
    },
    "10944": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "10946": {
      "op": "DUP1"
    },
    "10947": {
      "op": "REVERT"
    },
    "10948": {
      "op": "JUMPDEST"
    },
    "10949": {
      "op": "POP"
    },
    "10950": {
      "op": "PUSH2",
      "value": "0x2AD1"
    },
    "10953": {
      "op": "DUP9"
    },
    "10954": {
      "op": "DUP3"
    },
    "10955": {
      "op": "DUP10"
    },
    "10956": {
      "op": "ADD"
    },
    "10957": {
      "op": "PUSH2",
      "value": "0x27E6"
    },
    "10960": {
      "jump": "i",
      "op": "JUMP"
    },
    "10961": {
      "op": "JUMPDEST"
    },
    "10962": {
      "op": "SWAP2"
    },
    "10963": {
      "op": "POP"
    },
    "10964": {
      "op": "POP"
    },
    "10965": {
      "op": "SWAP3"
    },
    "10966": {
      "op": "SWAP6"
    },
    "10967": {
      "op": "POP"
    },
    "10968": {
      "op": "SWAP3"
    },
    "10969": {
      "op": "SWAP6"
    },
    "10970": {
      "op": "SWAP1"
    },
    "10971": {
      "op": "SWAP4"
    },
    "10972": {
      "op": "POP"
    },
    "10973": {
      "jump": "o",
      "op": "JUMP"
    },
    "10974": {
      "op": "JUMPDEST"
    },
    "10975": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "10977": {
      "op": "DUP1"
    },
    "10978": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "10980": {
      "op": "DUP4"
    },
    "10981": {
      "op": "DUP6"
    },
    "10982": {
      "op": "SUB"
    },
    "10983": {
      "op": "SLT"
    },
    "10984": {
      "op": "ISZERO"
    },
    "10985": {
      "op": "PUSH2",
      "value": "0x2AF1"
    },
    "10988": {
      "op": "JUMPI"
    },
    "10989": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "10991": {
      "op": "DUP1"
    },
    "10992": {
      "op": "REVERT"
    },
    "10993": {
      "op": "JUMPDEST"
    },
    "10994": {
      "op": "DUP3"
    },
    "10995": {
      "op": "CALLDATALOAD"
    },
    "10996": {
      "op": "SWAP2"
    },
    "10997": {
      "op": "POP"
    },
    "10998": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "11000": {
      "op": "DUP4"
    },
    "11001": {
      "op": "ADD"
    },
    "11002": {
      "op": "CALLDATALOAD"
    },
    "11003": {
      "op": "PUSH8",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "11012": {
      "op": "DUP2"
    },
    "11013": {
      "op": "GT"
    },
    "11014": {
      "op": "ISZERO"
    },
    "11015": {
      "op": "PUSH2",
      "value": "0x2962"
    },
    "11018": {
      "op": "JUMPI"
    },
    "11019": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "11021": {
      "op": "DUP1"
    },
    "11022": {
      "op": "REVERT"
    },
    "11023": {
      "op": "JUMPDEST"
    },
    "11024": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "11026": {
      "op": "DUP1"
    },
    "11027": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "11029": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "11031": {
      "op": "DUP5"
    },
    "11032": {
      "op": "DUP7"
    },
    "11033": {
      "op": "SUB"
    },
    "11034": {
      "op": "SLT"
    },
    "11035": {
      "op": "ISZERO"
    },
    "11036": {
      "op": "PUSH2",
      "value": "0x2B24"
    },
    "11039": {
      "op": "JUMPI"
    },
    "11040": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "11042": {
      "op": "DUP1"
    },
    "11043": {
      "op": "REVERT"
    },
    "11044": {
      "op": "JUMPDEST"
    },
    "11045": {
      "op": "PUSH2",
      "value": "0x2B2D"
    },
    "11048": {
      "op": "DUP5"
    },
    "11049": {
      "op": "PUSH2",
      "value": "0x2702"
    },
    "11052": {
      "jump": "i",
      "op": "JUMP"
    },
    "11053": {
      "op": "JUMPDEST"
    },
    "11054": {
      "op": "SWAP3"
    },
    "11055": {
      "op": "POP"
    },
    "11056": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "11058": {
      "op": "DUP5"
    },
    "11059": {
      "op": "ADD"
    },
    "11060": {
      "op": "CALLDATALOAD"
    },
    "11061": {
      "op": "SWAP2"
    },
    "11062": {
      "op": "POP"
    },
    "11063": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "11065": {
      "op": "DUP5"
    },
    "11066": {
      "op": "ADD"
    },
    "11067": {
      "op": "CALLDATALOAD"
    },
    "11068": {
      "op": "PUSH8",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "11077": {
      "op": "DUP2"
    },
    "11078": {
      "op": "GT"
    },
    "11079": {
      "op": "ISZERO"
    },
    "11080": {
      "op": "PUSH2",
      "value": "0x2B50"
    },
    "11083": {
      "op": "JUMPI"
    },
    "11084": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "11086": {
      "op": "DUP1"
    },
    "11087": {
      "op": "REVERT"
    },
    "11088": {
      "op": "JUMPDEST"
    },
    "11089": {
      "op": "PUSH2",
      "value": "0x2B5C"
    },
    "11092": {
      "op": "DUP7"
    },
    "11093": {
      "op": "DUP3"
    },
    "11094": {
      "op": "DUP8"
    },
    "11095": {
      "op": "ADD"
    },
    "11096": {
      "op": "PUSH2",
      "value": "0x27E6"
    },
    "11099": {
      "jump": "i",
      "op": "JUMP"
    },
    "11100": {
      "op": "JUMPDEST"
    },
    "11101": {
      "op": "SWAP2"
    },
    "11102": {
      "op": "POP"
    },
    "11103": {
      "op": "POP"
    },
    "11104": {
      "op": "SWAP3"
    },
    "11105": {
      "op": "POP"
    },
    "11106": {
      "op": "SWAP3"
    },
    "11107": {
      "op": "POP"
    },
    "11108": {
      "op": "SWAP3"
    },
    "11109": {
      "jump": "o",
      "op": "JUMP"
    },
    "11110": {
      "op": "JUMPDEST"
    },
    "11111": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "11113": {
      "op": "DUP1"
    },
    "11114": {
      "op": "DUP3"
    },
    "11115": {
      "op": "MSTORE"
    },
    "11116": {
      "op": "DUP2"
    },
    "11117": {
      "op": "DUP2"
    },
    "11118": {
      "op": "ADD"
    },
    "11119": {
      "op": "MSTORE"
    },
    "11120": {
      "op": "PUSH32",
      "value": "0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572"
    },
    "11153": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "11155": {
      "op": "DUP3"
    },
    "11156": {
      "op": "ADD"
    },
    "11157": {
      "op": "MSTORE"
    },
    "11158": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "11160": {
      "op": "ADD"
    },
    "11161": {
      "op": "SWAP1"
    },
    "11162": {
      "jump": "o",
      "op": "JUMP"
    },
    "11163": {
      "op": "JUMPDEST"
    },
    "11164": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "11166": {
      "op": "DUP1"
    },
    "11167": {
      "op": "DUP3"
    },
    "11168": {
      "op": "MSTORE"
    },
    "11169": {
      "op": "PUSH1",
      "value": "0x14"
    },
    "11171": {
      "op": "SWAP1"
    },
    "11172": {
      "op": "DUP3"
    },
    "11173": {
      "op": "ADD"
    },
    "11174": {
      "op": "MSTORE"
    },
    "11175": {
      "op": "PUSH20",
      "value": "0x4E6F7420416C6C6F776C697374204F776E657221"
    },
    "11196": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "11198": {
      "op": "SHL"
    },
    "11199": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "11201": {
      "op": "DUP3"
    },
    "11202": {
      "op": "ADD"
    },
    "11203": {
      "op": "MSTORE"
    },
    "11204": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "11206": {
      "op": "ADD"
    },
    "11207": {
      "op": "SWAP1"
    },
    "11208": {
      "jump": "o",
      "op": "JUMP"
    },
    "11209": {
      "op": "JUMPDEST"
    },
    "11210": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "11212": {
      "op": "DUP2"
    },
    "11213": {
      "op": "DUP2"
    },
    "11214": {
      "op": "SHR"
    },
    "11215": {
      "op": "SWAP1"
    },
    "11216": {
      "op": "DUP3"
    },
    "11217": {
      "op": "AND"
    },
    "11218": {
      "op": "DUP1"
    },
    "11219": {
      "op": "PUSH2",
      "value": "0x2BDD"
    },
    "11222": {
      "op": "JUMPI"
    },
    "11223": {
      "op": "PUSH1",
      "value": "0x7F"
    },
    "11225": {
      "op": "DUP3"
    },
    "11226": {
      "op": "AND"
    },
    "11227": {
      "op": "SWAP2"
    },
    "11228": {
      "op": "POP"
    },
    "11229": {
      "op": "JUMPDEST"
    },
    "11230": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "11232": {
      "op": "DUP3"
    },
    "11233": {
      "op": "LT"
    },
    "11234": {
      "op": "DUP2"
    },
    "11235": {
      "op": "SUB"
    },
    "11236": {
      "op": "PUSH2",
      "value": "0x2BFD"
    },
    "11239": {
      "op": "JUMPI"
    },
    "11240": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "11245": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "11247": {
      "op": "SHL"
    },
    "11248": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "11250": {
      "op": "MSTORE"
    },
    "11251": {
      "op": "PUSH1",
      "value": "0x22"
    },
    "11253": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "11255": {
      "op": "MSTORE"
    },
    "11256": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "11258": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "11260": {
      "op": "REVERT"
    },
    "11261": {
      "op": "JUMPDEST"
    },
    "11262": {
      "op": "POP"
    },
    "11263": {
      "op": "SWAP2"
    },
    "11264": {
      "op": "SWAP1"
    },
    "11265": {
      "op": "POP"
    },
    "11266": {
      "jump": "o",
      "op": "JUMP"
    },
    "11267": {
      "op": "JUMPDEST"
    },
    "11268": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "11273": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "11275": {
      "op": "SHL"
    },
    "11276": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "11278": {
      "op": "MSTORE"
    },
    "11279": {
      "op": "PUSH1",
      "value": "0x11"
    },
    "11281": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "11283": {
      "op": "MSTORE"
    },
    "11284": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "11286": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "11288": {
      "op": "REVERT"
    },
    "11289": {
      "op": "JUMPDEST"
    },
    "11290": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "11292": {
      "op": "DUP2"
    },
    "11293": {
      "op": "PUSH2",
      "value": "0x2C28"
    },
    "11296": {
      "op": "JUMPI"
    },
    "11297": {
      "op": "PUSH2",
      "value": "0x2C28"
    },
    "11300": {
      "op": "PUSH2",
      "value": "0x2C03"
    },
    "11303": {
      "jump": "i",
      "op": "JUMP"
    },
    "11304": {
      "op": "JUMPDEST"
    },
    "11305": {
      "op": "POP"
    },
    "11306": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "11308": {
      "op": "NOT"
    },
    "11309": {
      "op": "ADD"
    },
    "11310": {
      "op": "SWAP1"
    },
    "11311": {
      "jump": "o",
      "op": "JUMP"
    },
    "11312": {
      "op": "JUMPDEST"
    },
    "11313": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "11315": {
      "op": "DUP4"
    },
    "11316": {
      "op": "MLOAD"
    },
    "11317": {
      "op": "PUSH2",
      "value": "0x2C42"
    },
    "11320": {
      "op": "DUP2"
    },
    "11321": {
      "op": "DUP5"
    },
    "11322": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "11324": {
      "op": "DUP9"
    },
    "11325": {
      "op": "ADD"
    },
    "11326": {
      "op": "PUSH2",
      "value": "0x276D"
    },
    "11329": {
      "jump": "i",
      "op": "JUMP"
    },
    "11330": {
      "op": "JUMPDEST"
    },
    "11331": {
      "op": "DUP4"
    },
    "11332": {
      "op": "MLOAD"
    },
    "11333": {
      "op": "SWAP1"
    },
    "11334": {
      "op": "DUP4"
    },
    "11335": {
      "op": "ADD"
    },
    "11336": {
      "op": "SWAP1"
    },
    "11337": {
      "op": "PUSH2",
      "value": "0x2C56"
    },
    "11340": {
      "op": "DUP2"
    },
    "11341": {
      "op": "DUP4"
    },
    "11342": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "11344": {
      "op": "DUP9"
    },
    "11345": {
      "op": "ADD"
    },
    "11346": {
      "op": "PUSH2",
      "value": "0x276D"
    },
    "11349": {
      "jump": "i",
      "op": "JUMP"
    },
    "11350": {
      "op": "JUMPDEST"
    },
    "11351": {
      "op": "ADD"
    },
    "11352": {
      "op": "SWAP5"
    },
    "11353": {
      "op": "SWAP4"
    },
    "11354": {
      "op": "POP"
    },
    "11355": {
      "op": "POP"
    },
    "11356": {
      "op": "POP"
    },
    "11357": {
      "op": "POP"
    },
    "11358": {
      "jump": "o",
      "op": "JUMP"
    },
    "11359": {
      "op": "JUMPDEST"
    },
    "11360": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "11362": {
      "op": "DUP1"
    },
    "11363": {
      "op": "DUP3"
    },
    "11364": {
      "op": "MSTORE"
    },
    "11365": {
      "op": "PUSH1",
      "value": "0x15"
    },
    "11367": {
      "op": "SWAP1"
    },
    "11368": {
      "op": "DUP3"
    },
    "11369": {
      "op": "ADD"
    },
    "11370": {
      "op": "MSTORE"
    },
    "11371": {
      "op": "PUSH21",
      "value": "0x26B4B73A103A37903D32B9379030B2323932B9B997"
    },
    "11393": {
      "op": "PUSH1",
      "value": "0x59"
    },
    "11395": {
      "op": "SHL"
    },
    "11396": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "11398": {
      "op": "DUP3"
    },
    "11399": {
      "op": "ADD"
    },
    "11400": {
      "op": "MSTORE"
    },
    "11401": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "11403": {
      "op": "ADD"
    },
    "11404": {
      "op": "SWAP1"
    },
    "11405": {
      "jump": "o",
      "op": "JUMP"
    },
    "11406": {
      "op": "JUMPDEST"
    },
    "11407": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "11409": {
      "op": "DUP3"
    },
    "11410": {
      "op": "DUP3"
    },
    "11411": {
      "op": "LT"
    },
    "11412": {
      "op": "ISZERO"
    },
    "11413": {
      "op": "PUSH2",
      "value": "0x2CA0"
    },
    "11416": {
      "op": "JUMPI"
    },
    "11417": {
      "op": "PUSH2",
      "value": "0x2CA0"
    },
    "11420": {
      "op": "PUSH2",
      "value": "0x2C03"
    },
    "11423": {
      "jump": "i",
      "op": "JUMP"
    },
    "11424": {
      "op": "JUMPDEST"
    },
    "11425": {
      "op": "POP"
    },
    "11426": {
      "op": "SUB"
    },
    "11427": {
      "op": "SWAP1"
    },
    "11428": {
      "jump": "o",
      "op": "JUMP"
    },
    "11429": {
      "op": "JUMPDEST"
    },
    "11430": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "11432": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "11434": {
      "op": "DUP3"
    },
    "11435": {
      "op": "ADD"
    },
    "11436": {
      "op": "PUSH2",
      "value": "0x2CB7"
    },
    "11439": {
      "op": "JUMPI"
    },
    "11440": {
      "op": "PUSH2",
      "value": "0x2CB7"
    },
    "11443": {
      "op": "PUSH2",
      "value": "0x2C03"
    },
    "11446": {
      "jump": "i",
      "op": "JUMP"
    },
    "11447": {
      "op": "JUMPDEST"
    },
    "11448": {
      "op": "POP"
    },
    "11449": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "11451": {
      "op": "ADD"
    },
    "11452": {
      "op": "SWAP1"
    },
    "11453": {
      "jump": "o",
      "op": "JUMP"
    },
    "11454": {
      "op": "JUMPDEST"
    },
    "11455": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "11457": {
      "op": "DUP3"
    },
    "11458": {
      "op": "NOT"
    },
    "11459": {
      "op": "DUP3"
    },
    "11460": {
      "op": "GT"
    },
    "11461": {
      "op": "ISZERO"
    },
    "11462": {
      "op": "PUSH2",
      "value": "0x2CD1"
    },
    "11465": {
      "op": "JUMPI"
    },
    "11466": {
      "op": "PUSH2",
      "value": "0x2CD1"
    },
    "11469": {
      "op": "PUSH2",
      "value": "0x2C03"
    },
    "11472": {
      "jump": "i",
      "op": "JUMP"
    },
    "11473": {
      "op": "JUMPDEST"
    },
    "11474": {
      "op": "POP"
    },
    "11475": {
      "op": "ADD"
    },
    "11476": {
      "op": "SWAP1"
    },
    "11477": {
      "jump": "o",
      "op": "JUMP"
    },
    "11478": {
      "op": "JUMPDEST"
    },
    "11479": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "11484": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "11486": {
      "op": "SHL"
    },
    "11487": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "11489": {
      "op": "MSTORE"
    },
    "11490": {
      "op": "PUSH1",
      "value": "0x12"
    },
    "11492": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "11494": {
      "op": "MSTORE"
    },
    "11495": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "11497": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "11499": {
      "op": "REVERT"
    },
    "11500": {
      "op": "JUMPDEST"
    },
    "11501": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "11503": {
      "op": "DUP3"
    },
    "11504": {
      "op": "PUSH2",
      "value": "0x2CFB"
    },
    "11507": {
      "op": "JUMPI"
    },
    "11508": {
      "op": "PUSH2",
      "value": "0x2CFB"
    },
    "11511": {
      "op": "PUSH2",
      "value": "0x2CD6"
    },
    "11514": {
      "jump": "i",
      "op": "JUMP"
    },
    "11515": {
      "op": "JUMPDEST"
    },
    "11516": {
      "op": "POP"
    },
    "11517": {
      "op": "DIV"
    },
    "11518": {
      "op": "SWAP1"
    },
    "11519": {
      "jump": "o",
      "op": "JUMP"
    },
    "11520": {
      "op": "JUMPDEST"
    },
    "11521": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "11523": {
      "op": "DUP3"
    },
    "11524": {
      "op": "PUSH2",
      "value": "0x2D0F"
    },
    "11527": {
      "op": "JUMPI"
    },
    "11528": {
      "op": "PUSH2",
      "value": "0x2D0F"
    },
    "11531": {
      "op": "PUSH2",
      "value": "0x2CD6"
    },
    "11534": {
      "jump": "i",
      "op": "JUMP"
    },
    "11535": {
      "op": "JUMPDEST"
    },
    "11536": {
      "op": "POP"
    },
    "11537": {
      "op": "MOD"
    },
    "11538": {
      "op": "SWAP1"
    },
    "11539": {
      "jump": "o",
      "op": "JUMP"
    },
    "11540": {
      "op": "JUMPDEST"
    },
    "11541": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "11546": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "11548": {
      "op": "SHL"
    },
    "11549": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "11551": {
      "op": "MSTORE"
    },
    "11552": {
      "op": "PUSH1",
      "value": "0x32"
    },
    "11554": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "11556": {
      "op": "MSTORE"
    },
    "11557": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "11559": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "11561": {
      "op": "REVERT"
    },
    "11562": {
      "op": "JUMPDEST"
    },
    "11563": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "11565": {
      "op": "DUP2"
    },
    "11566": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "11568": {
      "op": "NOT"
    },
    "11569": {
      "op": "DIV"
    },
    "11570": {
      "op": "DUP4"
    },
    "11571": {
      "op": "GT"
    },
    "11572": {
      "op": "DUP3"
    },
    "11573": {
      "op": "ISZERO"
    },
    "11574": {
      "op": "ISZERO"
    },
    "11575": {
      "op": "AND"
    },
    "11576": {
      "op": "ISZERO"
    },
    "11577": {
      "op": "PUSH2",
      "value": "0x2D44"
    },
    "11580": {
      "op": "JUMPI"
    },
    "11581": {
      "op": "PUSH2",
      "value": "0x2D44"
    },
    "11584": {
      "op": "PUSH2",
      "value": "0x2C03"
    },
    "11587": {
      "jump": "i",
      "op": "JUMP"
    },
    "11588": {
      "op": "JUMPDEST"
    },
    "11589": {
      "op": "POP"
    },
    "11590": {
      "op": "MUL"
    },
    "11591": {
      "op": "SWAP1"
    },
    "11592": {
      "jump": "o",
      "op": "JUMP"
    },
    "11593": {
      "op": "JUMPDEST"
    },
    "11594": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "11596": {
      "op": "DUP3"
    },
    "11597": {
      "op": "GT"
    },
    "11598": {
      "op": "ISZERO"
    },
    "11599": {
      "op": "PUSH2",
      "value": "0xA07"
    },
    "11602": {
      "op": "JUMPI"
    },
    "11603": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "11605": {
      "op": "DUP2"
    },
    "11606": {
      "op": "DUP2"
    },
    "11607": {
      "op": "MSTORE"
    },
    "11608": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "11610": {
      "op": "DUP2"
    },
    "11611": {
      "op": "KECCAK256"
    },
    "11612": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "11614": {
      "op": "DUP6"
    },
    "11615": {
      "op": "ADD"
    },
    "11616": {
      "op": "PUSH1",
      "value": "0x5"
    },
    "11618": {
      "op": "SHR"
    },
    "11619": {
      "op": "DUP2"
    },
    "11620": {
      "op": "ADD"
    },
    "11621": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "11623": {
      "op": "DUP7"
    },
    "11624": {
      "op": "LT"
    },
    "11625": {
      "op": "ISZERO"
    },
    "11626": {
      "op": "PUSH2",
      "value": "0x2D70"
    },
    "11629": {
      "op": "JUMPI"
    },
    "11630": {
      "op": "POP"
    },
    "11631": {
      "op": "DUP1"
    },
    "11632": {
      "op": "JUMPDEST"
    },
    "11633": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "11635": {
      "op": "DUP6"
    },
    "11636": {
      "op": "ADD"
    },
    "11637": {
      "op": "PUSH1",
      "value": "0x5"
    },
    "11639": {
      "op": "SHR"
    },
    "11640": {
      "op": "DUP3"
    },
    "11641": {
      "op": "ADD"
    },
    "11642": {
      "op": "SWAP2"
    },
    "11643": {
      "op": "POP"
    },
    "11644": {
      "op": "JUMPDEST"
    },
    "11645": {
      "op": "DUP2"
    },
    "11646": {
      "op": "DUP2"
    },
    "11647": {
      "op": "LT"
    },
    "11648": {
      "op": "ISZERO"
    },
    "11649": {
      "op": "PUSH2",
      "value": "0x2D8F"
    },
    "11652": {
      "op": "JUMPI"
    },
    "11653": {
      "op": "DUP3"
    },
    "11654": {
      "op": "DUP2"
    },
    "11655": {
      "op": "SSTORE"
    },
    "11656": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "11658": {
      "op": "ADD"
    },
    "11659": {
      "op": "PUSH2",
      "value": "0x2D7C"
    },
    "11662": {
      "op": "JUMP"
    },
    "11663": {
      "op": "JUMPDEST"
    },
    "11664": {
      "op": "POP"
    },
    "11665": {
      "op": "POP"
    },
    "11666": {
      "op": "POP"
    },
    "11667": {
      "op": "POP"
    },
    "11668": {
      "op": "POP"
    },
    "11669": {
      "op": "POP"
    },
    "11670": {
      "jump": "o",
      "op": "JUMP"
    },
    "11671": {
      "op": "JUMPDEST"
    },
    "11672": {
      "op": "DUP2"
    },
    "11673": {
      "op": "MLOAD"
    },
    "11674": {
      "op": "PUSH8",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "11683": {
      "op": "DUP2"
    },
    "11684": {
      "op": "GT"
    },
    "11685": {
      "op": "ISZERO"
    },
    "11686": {
      "op": "PUSH2",
      "value": "0x2DB1"
    },
    "11689": {
      "op": "JUMPI"
    },
    "11690": {
      "op": "PUSH2",
      "value": "0x2DB1"
    },
    "11693": {
      "op": "PUSH2",
      "value": "0x27D0"
    },
    "11696": {
      "jump": "i",
      "op": "JUMP"
    },
    "11697": {
      "op": "JUMPDEST"
    },
    "11698": {
      "op": "PUSH2",
      "value": "0x2DC5"
    },
    "11701": {
      "op": "DUP2"
    },
    "11702": {
      "op": "PUSH2",
      "value": "0x2DBF"
    },
    "11705": {
      "op": "DUP5"
    },
    "11706": {
      "op": "SLOAD"
    },
    "11707": {
      "op": "PUSH2",
      "value": "0x2BC9"
    },
    "11710": {
      "jump": "i",
      "op": "JUMP"
    },
    "11711": {
      "op": "JUMPDEST"
    },
    "11712": {
      "op": "DUP5"
    },
    "11713": {
      "op": "PUSH2",
      "value": "0x2D49"
    },
    "11716": {
      "jump": "i",
      "op": "JUMP"
    },
    "11717": {
      "op": "JUMPDEST"
    },
    "11718": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "11720": {
      "op": "DUP1"
    },
    "11721": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "11723": {
      "op": "DUP4"
    },
    "11724": {
      "op": "GT"
    },
    "11725": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "11727": {
      "op": "DUP2"
    },
    "11728": {
      "op": "EQ"
    },
    "11729": {
      "op": "PUSH2",
      "value": "0x2DFA"
    },
    "11732": {
      "op": "JUMPI"
    },
    "11733": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "11735": {
      "op": "DUP5"
    },
    "11736": {
      "op": "ISZERO"
    },
    "11737": {
      "op": "PUSH2",
      "value": "0x2DE2"
    },
    "11740": {
      "op": "JUMPI"
    },
    "11741": {
      "op": "POP"
    },
    "11742": {
      "op": "DUP6"
    },
    "11743": {
      "op": "DUP4"
    },
    "11744": {
      "op": "ADD"
    },
    "11745": {
      "op": "MLOAD"
    },
    "11746": {
      "op": "JUMPDEST"
    },
    "11747": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "11749": {
      "op": "NOT"
    },
    "11750": {
      "op": "PUSH1",
      "value": "0x3"
    },
    "11752": {
      "op": "DUP7"
    },
    "11753": {
      "op": "SWAP1"
    },
    "11754": {
      "op": "SHL"
    },
    "11755": {
      "op": "SHR"
    },
    "11756": {
      "op": "NOT"
    },
    "11757": {
      "op": "AND"
    },
    "11758": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "11760": {
      "op": "DUP6"
    },
    "11761": {
      "op": "SWAP1"
    },
    "11762": {
      "op": "SHL"
    },
    "11763": {
      "op": "OR"
    },
    "11764": {
      "op": "DUP6"
    },
    "11765": {
      "op": "SSTORE"
    },
    "11766": {
      "op": "PUSH2",
      "value": "0x2D8F"
    },
    "11769": {
      "op": "JUMP"
    },
    "11770": {
      "op": "JUMPDEST"
    },
    "11771": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "11773": {
      "op": "DUP6"
    },
    "11774": {
      "op": "DUP2"
    },
    "11775": {
      "op": "MSTORE"
    },
    "11776": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "11778": {
      "op": "DUP2"
    },
    "11779": {
      "op": "KECCAK256"
    },
    "11780": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "11782": {
      "op": "NOT"
    },
    "11783": {
      "op": "DUP7"
    },
    "11784": {
      "op": "AND"
    },
    "11785": {
      "op": "SWAP2"
    },
    "11786": {
      "op": "JUMPDEST"
    },
    "11787": {
      "op": "DUP3"
    },
    "11788": {
      "op": "DUP2"
    },
    "11789": {
      "op": "LT"
    },
    "11790": {
      "op": "ISZERO"
    },
    "11791": {
      "op": "PUSH2",
      "value": "0x2E29"
    },
    "11794": {
      "op": "JUMPI"
    },
    "11795": {
      "op": "DUP9"
    },
    "11796": {
      "op": "DUP7"
    },
    "11797": {
      "op": "ADD"
    },
    "11798": {
      "op": "MLOAD"
    },
    "11799": {
      "op": "DUP3"
    },
    "11800": {
      "op": "SSTORE"
    },
    "11801": {
      "op": "SWAP5"
    },
    "11802": {
      "op": "DUP5"
    },
    "11803": {
      "op": "ADD"
    },
    "11804": {
      "op": "SWAP5"
    },
    "11805": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "11807": {
      "op": "SWAP1"
    },
    "11808": {
      "op": "SWAP2"
    },
    "11809": {
      "op": "ADD"
    },
    "11810": {
      "op": "SWAP1"
    },
    "11811": {
      "op": "DUP5"
    },
    "11812": {
      "op": "ADD"
    },
    "11813": {
      "op": "PUSH2",
      "value": "0x2E0A"
    },
    "11816": {
      "op": "JUMP"
    },
    "11817": {
      "op": "JUMPDEST"
    },
    "11818": {
      "op": "POP"
    },
    "11819": {
      "op": "DUP6"
    },
    "11820": {
      "op": "DUP3"
    },
    "11821": {
      "op": "LT"
    },
    "11822": {
      "op": "ISZERO"
    },
    "11823": {
      "op": "PUSH2",
      "value": "0x2E47"
    },
    "11826": {
      "op": "JUMPI"
    },
    "11827": {
      "op": "DUP8"
    },
    "11828": {
      "op": "DUP6"
    },
    "11829": {
      "op": "ADD"
    },
    "11830": {
      "op": "MLOAD"
    },
    "11831": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "11833": {
      "op": "NOT"
    },
    "11834": {
      "op": "PUSH1",
      "value": "0x3"
    },
    "11836": {
      "op": "DUP9"
    },
    "11837": {
      "op": "SWAP1"
    },
    "11838": {
      "op": "SHL"
    },
    "11839": {
      "op": "PUSH1",
      "value": "0xF8"
    },
    "11841": {
      "op": "AND"
    },
    "11842": {
      "op": "SHR"
    },
    "11843": {
      "op": "NOT"
    },
    "11844": {
      "op": "AND"
    },
    "11845": {
      "op": "DUP2"
    },
    "11846": {
      "op": "SSTORE"
    },
    "11847": {
      "op": "JUMPDEST"
    },
    "11848": {
      "op": "POP"
    },
    "11849": {
      "op": "POP"
    },
    "11850": {
      "op": "POP"
    },
    "11851": {
      "op": "POP"
    },
    "11852": {
      "op": "POP"
    },
    "11853": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "11855": {
      "op": "SWAP1"
    },
    "11856": {
      "op": "DUP2"
    },
    "11857": {
      "op": "SHL"
    },
    "11858": {
      "op": "ADD"
    },
    "11859": {
      "op": "SWAP1"
    },
    "11860": {
      "op": "SSTORE"
    },
    "11861": {
      "op": "POP"
    },
    "11862": {
      "jump": "o",
      "op": "JUMP"
    }
  },
  "sha1": "6b88f2fffb0e719e45e6f7b0610f3a978370d776",
  "source": "// SPDX-License-Identifier: GPL-3.0\n\n///  _____     ______     ______     ______     ______     ______     _____    \n/// /\\  __-.  /\\  __ \\   /\\  ___\\   /\\  ___\\   /\\  == \\   /\\  ___\\   /\\  __-.  \n/// \\ \\ \\/\\ \\ \\ \\  __ \\  \\ \\ \\____  \\ \\ \\____  \\ \\  __<   \\ \\  __\\   \\ \\ \\/\\ \\ \n///  \\ \\____-  \\ \\_\\ \\_\\  \\ \\_____\\  \\ \\_____\\  \\ \\_\\ \\_\\  \\ \\_____\\  \\ \\____- \n///   \\/____/   \\/_/\\/_/   \\/_____/   \\/_____/   \\/_/ /_/   \\/_____/   \\/____/ \n\npragma solidity ^0.8.8;\n\nimport \"./SoulboundWithSignature.sol\";\nimport \"./IsValidWithDate.sol\";\n\n/**\n * @title Soulbound Redeemable.\n * @author Daccred.\n * @dev  An instance of the Soulbound token with capped supply\n *       and tokens having their own individual expiry date.\n *       Tokens are minted to and are pendng until receivers\n *       pay to receive their complete token.\n */\ncontract SoulboundRedeemable is IsValidWithDate, SoulboundWithSignature {\n    /// @dev Total sales of tokens [Total tokens paid for].\n    uint256 private totalSales;\n    /// @dev Total revenue from sales.\n    uint256 private totalRevenue;\n    /// @dev Price Limit [in eth] set by deploying contract.\n    uint256 private priceLimit;\n    /// @dev Price of individual tokens, set by deployer.\n    uint256 private tokenPrice;\n    /// @dev Pending token receivals.\n    mapping(uint256 => bool) private pending;\n    /// @dev Pending address to receive tokens.\n    mapping(uint256 => address) private pendingReceivers;\n    /// @dev    Tax for token redemptions.\n    ///         15 represents 1.5% of total sales.\n    uint256 private tax = 15;\n    /// @dev ReEntrancy Lock.\n    bool private locked;\n\n    /// @dev Emitted when a token is redeemed.\n    event Redeemed(uint256 indexed tokenId, uint256 indexed extension);\n\n    /// @dev    Deploy the SoulboundWithSignature with set\n    ///         total supply, priceLimit and price of an individual token.\n    constructor(\n        string memory name,\n        string memory symbol,\n        address _allowlistOwner,\n        uint256 _totalSupply,\n        uint256 _priceLimit,\n        uint256 _tokenPrice\n    ) SoulboundWithSignature(name, symbol, _allowlistOwner, _totalSupply) {\n        /// @dev Ensure that limit is higher or equal to individual token price.\n        require(_tokenPrice <= _priceLimit, \"Price higher than limit.\");\n        /// @dev Set priceLimit.\n        priceLimit = _priceLimit;\n        /// @dev Set individual token price.\n        tokenPrice = _tokenPrice;\n    }\n\n    /// @dev Receive function.\n    receive() external payable {}\n\n    /// @dev Fallback function.\n    fallback() external payable {}\n\n    /**\n     * @dev Protect against Re-Entrancy.\n     */\n    modifier nonReentrant() {\n        require(!locked);\n        locked = true;\n        _;\n        locked = false;\n    }\n\n    /**\n     * @dev Return the price of one token, set by the deployer.\n     *\n     * @notice Callable by anyone.\n     *\n     * @return _tokenPrice Price of a single token.\n     */\n    function getIndividualTokenPrice()\n        public\n        view\n        returns (uint256 _tokenPrice)\n    {\n        _tokenPrice = tokenPrice;\n    }\n\n    /**\n     * @dev Return the highest possible price for a token.\n     *\n     * @notice Callable by anyone.\n     *\n     * @return _priceLimit Highest possible price.\n     */\n    function getPriceLimit() public view returns (uint256 _priceLimit) {\n        _priceLimit = priceLimit;\n    }\n\n    /**\n     * @dev Allows `caller` to set `_price` as price of one token.\n     *\n     * @notice   Callable by the deployer of this contract [DaccredDeployer]\n     *           and the allowlistOwner.\n     *\n     * @param caller AllowlistOwner.\n     * @param _price New price.\n     */\n    function setPrice(address caller, uint256 _price)\n        public\n        onlyOwner\n        onlyAllowlistOwner(caller)\n    {\n        /// @dev Ensure that the price passed isn't more than the price limit.\n        require(_price <= getPriceLimit(), \"Price higher than limit.\");\n        /// @dev Set price.\n        tokenPrice = _price;\n    }\n\n    /**\n     * @dev  Mints a pending soulbound token to `to`.\n     *       Pending tokens are minted and the receiver pays\n     *       to receive and completely mint them.\n     *\n     * @notice   Callable by the deployer of this contract [DaccredDeployer]\n     *           and the allowlistOwner.\n     *\n     * @param from               Allowlist owner.\n     * @param to                 Receiver.\n     * @param tokenId            Id of token to be minted.\n     * @param _tokenExpiryDate   Set expiry date from the deployer.\n     */\n    function mintPendingRedeemableToken(\n        address from,\n        address to,\n        uint256 tokenId,\n        uint256 _tokenExpiryDate\n    ) public onlyOwner onlyAllowlistOwner(from) {\n        /// @dev Ensure that the supply is not crossed.\n        /// @dev    Should all soulbound tokens need to be limited,\n        ///         copy this code and paste in Soulboundcore.sol\n        ///         issueWithSignature function.\n        require(supply < totalSupply, \"Issue Cap Reached.\");\n        /// @dev Require `to` is not a zero address.\n        require(to != address(0), \"Mint to zero address.\");\n        /// @dev Require the token does not exist already.\n        require(!_exists(tokenId), \"Mint of already existing token.\");\n        /// @dev Require that the token is not on the pending list.\n        require(!pending[tokenId], \"Mint of already pending token.\");\n        /// @dev Set the token's pending state to true.\n        pending[tokenId] = true;\n        /// @dev Set the pending receiver of the token to `to`.\n        pendingReceivers[tokenId] = to;\n        /// @dev Set a new expiry date for the token.\n        extendExpiry(tokenId, _tokenExpiryDate);\n        /// @dev Increment supply.\n        supply++;\n    }\n\n    /**\n     * @dev  Allows the `_receiver` to pay the price of one token to\n     *       fully mint the pending token.\n     *\n     * @notice   Callable by the deployer of this contract [DaccredDeployer].\n     *\n     * @param _receiver  Receiver of the token.\n     * @param tokenId    Pending tokenId for the receiver.\n     */\n    function payToReceiveToken(address _receiver, uint256 tokenId)\n        public\n        payable\n        onlyOwner\n        nonReentrant\n    {\n        /// @dev Require that the receiver is not a zero address.\n        require(_receiver != address(0), \"Mint to zero address.\");\n        /// @dev Require that the token does not exist yet.\n        require(!_exists(tokenId), \"Mint of already existing token.\");\n        /// @dev Require that the token is indeed pending.\n        require(pending[tokenId], \"Already received token.\");\n        /// @dev    Require that the expected receiver of pending\n        ///         token is the `_receiver`.\n        require(\n            pendingReceivers[tokenId] == _receiver,\n            \"Not pending receiver.\"\n        );\n        /// @dev Require that the token has not expired already.\n        require(isValid(tokenId), \"Receival of expired token, redeem token.\");\n        /// @dev Require that the amount sent is GTE the price of one token.\n        require(msg.value >= tokenPrice, \"Price lower than token cost.\");\n        /// @dev Initialize balance.\n        uint256 balance;\n\n        /// @dev If the amount sent is bigger than the price of one token.\n        if (msg.value > tokenPrice) {\n            /// @dev Calculate the balance of the `_receiver`.\n            balance = msg.value - tokenPrice;\n            /// @dev Pay the `_receiver` his balance.\n            payable(_receiver).transfer(balance);\n        }\n\n        /// @dev Generate tokenURI.\n        string memory _tokenURI = generateTokenURI(tokenId);\n        /// @dev Finally issue the token to the `_receiver`.\n        issue(_receiver, tokenId, _tokenURI);\n        /// @dev Increment totalSales.\n        totalSales++;\n        /// @dev Add to the total Revenue.\n        totalRevenue += tokenPrice;\n        /// @dev Set the pending token to false.\n        pending[tokenId] = false;\n        /// @dev Delete the pending receiver.\n        delete pendingReceivers[tokenId];\n    }\n\n    /**\n     * @dev  For expired pending tokens, this function redeems them and makes\n     *       valid for another period of time.\n     *       Tokens must be expired for it to be redeemed.\n     *       Emits the {Redeemed} event.\n     *\n     * @notice   Callable by the deployer of this contract [DaccredDeployer].\n     *\n     * @param _receiver          Receiver of the token.\n     * @param tokenId            Pending tokenId for the receiver.\n     * @param _tokenExpiryDate   New expiry date for tokens.\n     */\n    function redeemPendingToken(\n        address _receiver,\n        uint256 tokenId,\n        uint256 _tokenExpiryDate\n    ) public payable onlyOwner nonReentrant {\n        /// @dev Require _receiver is not a zero address.\n        require(_receiver != address(0), \"Redemption to zero address.\");\n        /// @dev Require tokenId is existent.\n        require(!_exists(tokenId), \"Redemption of existing token.\");\n        /// @dev Require that the token is still pending.\n        require(pending[tokenId], \"Already received token.\");\n        /// @dev Require that the pending receiver is the `_receiver`.\n        require(\n            pendingReceivers[tokenId] == _receiver,\n            \"Not pending receiver.\"\n        );\n        /// @dev Require the token has expired.\n        require(!isValid(tokenId), \"Token unexpired.\");\n        /// @dev Calculate tax.\n        uint256 _tax = calculateTax(tax);\n        /// @dev Require that the amount sent is GTE the tax.\n        require(msg.value >= _tax, \"Price lower than redemption tax.\");\n        /// @dev Initiate balance.\n        uint256 balance;\n\n        /// @dev If the tax is not 0.\n        if (_tax != 0) {\n            /// @dev Calculate receiver's balance.\n            balance = msg.value - _tax;\n            /// @dev Pay to receiver.\n            payable(_receiver).transfer(balance);\n        }\n\n        /// @dev Extend expiry of tokenId.\n        extendExpiry(tokenId, _tokenExpiryDate);\n        /// @dev Emit the Redeemed event.\n        emit Redeemed(tokenId, _tokenExpiryDate);\n    }\n\n    /**\n     * @dev  For expired minted tokens, this function redeems them and makes\n     *       valid for another period of time.\n     *       Tokens must be expired for it to be redeemed.\n     *       Emits the {Redeemed} event.\n     *\n     * @notice   Callable by the deployer of this contract [DaccredDeployer].\n     *\n     * @param _receiver          Receiver of the token.\n     * @param tokenId            Pending tokenId for the receiver.\n     * @param _tokenExpiryDate   New expiry date for tokens.\n     */\n    function redeemMintedToken(\n        address _receiver,\n        uint256 tokenId,\n        uint256 _tokenExpiryDate\n    ) public payable onlyOwner nonReentrant {\n        /// @dev Require _receiver is not a zero address.\n        require(_receiver != address(0), \"Redemption to zero address.\");\n        /// @dev Require tokenId is existent.\n        require(_exists(tokenId), \"Redemption of non-existing token.\");\n        /// @dev Require that the token is still pending.\n        require(!pending[tokenId], \"Token still pending.\");\n        /// @dev Require that the pending receiver is the `_receiver`.\n        require(ownerOf(tokenId) == _receiver, \"Not token owner.\");\n        /// @dev Require the token has expired.\n        require(!isValid(tokenId), \"Token unexpired.\");\n        /// @dev Calculate tax.\n        uint256 _tax = calculateTax(tax);\n        /// @dev Require that the amount sent is GTE the tax.\n        require(msg.value >= _tax, \"Price lower than redemption tax.\");\n        /// @dev Initiate balance.\n        uint256 balance;\n\n        /// @dev If the tax is not 0.\n        if (_tax != 0) {\n            /// @dev Calculate receiver's balance.\n            balance = msg.value - _tax;\n            /// @dev Pay to receiver.\n            payable(_receiver).transfer(balance);\n        }\n\n        /// @dev Extend expiry of tokenId.\n        extendExpiry(tokenId, _tokenExpiryDate);\n        /// @dev Emit the Redeemed event.\n        emit Redeemed(tokenId, _tokenExpiryDate);\n    }\n\n    /**\n     * @dev  Allows the allowlistOwner to redeem an expired pending\n     *       token on behalf of the tokenOwner.\n     *\n     * @notice   Callable by the deployer of this contract [DaccredDeployer]\n     *           and the allowlistOwner.\n     *\n     * @param _caller            Allowlist owner.\n     * @param _receiver          Address of receiver.\n     * @param tokenId            TokenId.\n     * @param _tokenExpiryDate   Days to extend the token.\n     * @param hash               Hash of message.\n     * @param sig                Signature.\n     */\n    function redeemPendingTokenWithSignature(\n        address _caller,\n        address _receiver,\n        uint256 tokenId,\n        uint256 _tokenExpiryDate,\n        bytes32 hash,\n        bytes memory sig\n    ) public payable onlyOwner onlyAllowlistOwner(_caller) nonReentrant {\n        /// @dev Require that the signer is the allowlistowner.\n        require(verifySignature(hash, sig), \"Hash not signed by you.\");\n        /// @dev RedeemToken.\n        redeemPendingToken(_receiver, tokenId, _tokenExpiryDate);\n    }\n\n    /**\n     * @dev  Allows the allowlistOwner to redeem an expired minted\n     *       token on behalf of the tokenOwner.\n     *\n     * @notice   Callable by the deployer of this contract [DaccredDeployer]\n     *           and the allowlistOwner.\n     *\n     * @param _caller            Allowlist owner.\n     * @param _receiver          Address of receiver.\n     * @param tokenId            TokenId.\n     * @param _tokenExpiryDate   Days to extend the token.\n     * @param hash               Hash of message.\n     * @param sig                Signature.\n     */\n    function redeemMintedTokenWithSignature(\n        address _caller,\n        address _receiver,\n        uint256 tokenId,\n        uint256 _tokenExpiryDate,\n        bytes32 hash,\n        bytes memory sig\n    ) public payable onlyOwner onlyAllowlistOwner(_caller) nonReentrant {\n        /// @dev Require that the signer is the allowlistowner.\n        require(verifySignature(hash, sig), \"Hash not signed by you.\");\n        /// @dev RedeemToken.\n        redeemMintedToken(_receiver, tokenId, _tokenExpiryDate);\n    }\n\n    /**\n     * @dev  Allows the allowlistowner to withdraw his funds to his wallet.\n     *\n     * @notice   Callable by the deployer of this contract [DaccredDeployer]\n     *           and the allowlistOwner.\n     *\n     * @param _caller Address of allowlistowner.\n     */\n    function withdraw(address _caller)\n        public\n        onlyOwner\n        onlyAllowlistOwner(_caller)\n    {\n        /// @dev Require that the allowlistowner is not a zero address.\n        require(_caller != address(0), \"Sending to zero address.\");\n        /// @dev Require that the balance of this contract is GTE the totalRevenue.\n        require(\n            address(this).balance >= totalRevenue,\n            \"Revenue != Contract balance.\"\n        );\n        /// @dev Pay the totalRevenue to the allowlistowner.\n        payable(_caller).transfer(totalRevenue);\n        /// @dev Set the totalRevenue to 0.\n        totalRevenue = 0;\n    }\n\n    /**\n     * @dev Calculates the tax off the totalSales.\n     *\n     * @param _tax Percentage tax.\n     *\n     * @return __tax Tax calculated.\n     */\n    function calculateTax(uint256 _tax) private view returns (uint256 __tax) {\n        /// Grant free tax if the total revenue of the contract is\n        /// in range of 0 - 500 gwei.\n        if (totalRevenue >= 0 && totalRevenue < 500 gwei) {\n            /// @dev Set tax to 0.\n            _tax = 0;\n        }\n\n        /// Else simply calculate tax on total revenue.\n        __tax = (_tax * totalRevenue * 10) / 1000;\n    }\n}\n",
  "sourceMap": "826:14955:39:-:0;;;1558:2;1536:24;;1876:572;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2096:4;2102:6;2110:15;2127:12;2096:4;2102:6;2110:15;2127:12;2110:15;2096:4;2102:6;2096:4;2102:6;4395:5:41;:13;2096:4:39;4395:5:41;:13;:::i;:::-;-1:-1:-1;4418:7:41;:17;4428:7;4418;:17;:::i;:::-;;4329:113;;921:32:0;940:12;:10;;;:12;;:::i;:::-;921:18;:32::i;:::-;-1:-1:-1;;;;;;;1710:29:14;;1702:58;;;;-1:-1:-1;;;1702:58:14;;4747:2:43;1702:58:14;;;4729:21:43;4786:2;4766:18;;;4759:30;-1:-1:-1;;;4805:18:43;;;4798:46;4861:18;;1702:58:14;;;;;;;;;1810:14;:32;;-1:-1:-1;;;;;;1810:32:14;-1:-1:-1;;;;;1810:32:14;;;;;;;;;;-1:-1:-1;2045:17:38;;;2041:122:::2;;2092:3;2078:11;:17:::0;2041:122:::2;;;2126:11;:26:::0;;;2041:122:::2;1841:328:::0;;;;445:200:40;;;;2255:11:39::1;2240;:26;;2232:63;;;::::0;-1:-1:-1;;;2232:63:39;;5092:2:43;2232:63:39::1;::::0;::::1;5074:21:43::0;5131:2;5111:18;;;5104:30;5170:26;5150:18;;;5143:54;5214:18;;2232:63:39::1;4890:348:43::0;2232:63:39::1;2338:10;:24:::0;;;;2417:10:::1;:24:::0;-1:-1:-1;826:14955:39;;-1:-1:-1;;;826:14955:39;640:96:5;719:10;;640:96::o;2270:187:0:-;2362:6;;;-1:-1:-1;;;;;2378:17:0;;;-1:-1:-1;;;;;;2378:17:0;;;;;;;2410:40;;2362:6;;;2378:17;2362:6;;2410:40;;2343:16;;2410:40;2333:124;2270:187;:::o;14:127:43:-;75:10;70:3;66:20;63:1;56:31;106:4;103:1;96:15;130:4;127:1;120:15;146:885;200:5;253:3;246:4;238:6;234:17;230:27;220:55;;271:1;268;261:12;220:55;294:13;;-1:-1:-1;;;;;356:10:43;;;353:36;;;369:18;;:::i;:::-;444:2;438:9;412:2;498:13;;-1:-1:-1;;494:22:43;;;518:2;490:31;486:40;474:53;;;542:18;;;562:22;;;539:46;536:72;;;588:18;;:::i;:::-;628:10;624:2;617:22;663:2;655:6;648:18;685:4;675:14;;730:3;725:2;720;712:6;708:15;704:24;701:33;698:53;;;747:1;744;737:12;698:53;769:1;760:10;;779:133;793:2;790:1;787:9;779:133;;;881:14;;;877:23;;871:30;850:14;;;846:23;;839:63;804:10;;;;779:133;;;930:2;927:1;924:9;921:80;;;989:1;984:2;979;971:6;967:15;963:24;956:35;921:80;1019:6;146:885;-1:-1:-1;;;;;;146:885:43:o;1036:915::-;1171:6;1179;1187;1195;1203;1211;1264:3;1252:9;1243:7;1239:23;1235:33;1232:53;;;1281:1;1278;1271:12;1232:53;1308:16;;-1:-1:-1;;;;;1373:14:43;;;1370:34;;;1400:1;1397;1390:12;1370:34;1423:61;1476:7;1467:6;1456:9;1452:22;1423:61;:::i;:::-;1413:71;;1530:2;1519:9;1515:18;1509:25;1493:41;;1559:2;1549:8;1546:16;1543:36;;;1575:1;1572;1565:12;1543:36;;1598:63;1653:7;1642:8;1631:9;1627:24;1598:63;:::i;:::-;1704:2;1689:18;;1683:25;1588:73;;-1:-1:-1;1683:25:43;-1:-1:-1;;;;;;1737:31:43;;1727:42;;1717:70;;1783:1;1780;1773:12;1717:70;1806:5;1796:15;;;1851:2;1840:9;1836:18;1830:25;1820:35;;1895:3;1884:9;1880:19;1874:26;1864:36;;1940:3;1929:9;1925:19;1919:26;1909:36;;1036:915;;;;;;;;:::o;1956:380::-;2035:1;2031:12;;;;2078;;;2099:61;;2153:4;2145:6;2141:17;2131:27;;2099:61;2206:2;2198:6;2195:14;2175:18;2172:38;2169:161;;2252:10;2247:3;2243:20;2240:1;2233:31;2287:4;2284:1;2277:15;2315:4;2312:1;2305:15;2169:161;;1956:380;;;:::o;2467:545::-;2569:2;2564:3;2561:11;2558:448;;;2605:1;2630:5;2626:2;2619:17;2675:4;2671:2;2661:19;2745:2;2733:10;2729:19;2726:1;2722:27;2716:4;2712:38;2781:4;2769:10;2766:20;2763:47;;;-1:-1:-1;2804:4:43;2763:47;2859:2;2854:3;2850:12;2847:1;2843:20;2837:4;2833:31;2823:41;;2914:82;2932:2;2925:5;2922:13;2914:82;;;2977:17;;;2958:1;2947:13;2914:82;;;2918:3;;;2558:448;2467:545;;;:::o;3188:1352::-;3308:10;;-1:-1:-1;;;;;3330:30:43;;3327:56;;;3363:18;;:::i;:::-;3392:97;3482:6;3442:38;3474:4;3468:11;3442:38;:::i;:::-;3436:4;3392:97;:::i;:::-;3544:4;;3608:2;3597:14;;3625:1;3620:663;;;;4327:1;4344:6;4341:89;;;-1:-1:-1;4396:19:43;;;4390:26;4341:89;-1:-1:-1;;3145:1:43;3141:11;;;3137:24;3133:29;3123:40;3169:1;3165:11;;;3120:57;4443:81;;3590:944;;3620:663;2414:1;2407:14;;;2451:4;2438:18;;-1:-1:-1;;3656:20:43;;;3774:236;3788:7;3785:1;3782:14;3774:236;;;3877:19;;;3871:26;3856:42;;3969:27;;;;3937:1;3925:14;;;;3804:19;;3774:236;;;3778:3;4038:6;4029:7;4026:19;4023:201;;;4099:19;;;4093:26;-1:-1:-1;;4182:1:43;4178:14;;;4194:3;4174:24;4170:37;4166:42;4151:58;4136:74;;4023:201;-1:-1:-1;;;;;4270:1:43;4254:14;;;4250:22;4237:36;;-1:-1:-1;3188:1352:43:o;4890:348::-;826:14955:39;;;;;;",
  "sourcePath": "contracts/contracts/packages/soulbound/contracts/SoulboundRedeemable.sol",
  "type": "contract"
}