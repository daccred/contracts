{
  "abi": [
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [],
      "name": "Paused",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [],
      "name": "UnPaused",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "isPaused",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "pause",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "unPause",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "allSourcePaths": {
    "0": "C:/Users/antho/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.6.0/contracts/access/Ownable.sol",
    "13": "contracts/contracts/core/contracts/facets/Pausable.sol",
    "5": "C:/Users/antho/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.6.0/contracts/utils/Context.sol"
  },
  "ast": {
    "absolutePath": "contracts/contracts/core/contracts/facets/Pausable.sol",
    "exportedSymbols": {
      "Ownable": [
        6075
      ],
      "Pausable": [
        942
      ]
    },
    "id": 943,
    "license": "GPL-3.0",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 864,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".8"
        ],
        "nodeType": "PragmaDirective",
        "src": "438:23:13"
      },
      {
        "absolutePath": "C:/Users/antho/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.6.0/contracts/access/Ownable.sol",
        "file": "@openzeppelin/contracts/access/Ownable.sol",
        "id": 866,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 943,
        "sourceUnit": 6076,
        "src": "463:67:13",
        "symbolAliases": [
          {
            "foreign": {
              "id": 865,
              "name": "Ownable",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 6075,
              "src": "471:7:13",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 868,
              "name": "Ownable",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 6075,
              "src": "860:7:13"
            },
            "id": 869,
            "nodeType": "InheritanceSpecifier",
            "src": "860:7:13"
          }
        ],
        "canonicalName": "Pausable",
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": {
          "id": 867,
          "nodeType": "StructuredDocumentation",
          "src": "532:306:13",
          "text": " @title Pausable Contract.\n @author Anthony (fps) https://github.com/0xfps.\n @dev  This contract seeks to grant the inheriting\n       contract the ability to pause actions done\n       on the contract.\n       The choice to pause or unpause the contract\n       is made by the owner or deployer."
        },
        "fullyImplemented": true,
        "id": 942,
        "linearizedBaseContracts": [
          942,
          6075,
          6410
        ],
        "name": "Pausable",
        "nameLocation": "848:8:13",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "documentation": {
              "id": 870,
              "nodeType": "StructuredDocumentation",
              "src": "874:83:13",
              "text": "@dev    Boolean to determine when contract is or\n         is not paused."
            },
            "id": 872,
            "mutability": "mutable",
            "name": "paused",
            "nameLocation": "975:6:13",
            "nodeType": "VariableDeclaration",
            "scope": 942,
            "src": "962:19:13",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_bool",
              "typeString": "bool"
            },
            "typeName": {
              "id": 871,
              "name": "bool",
              "nodeType": "ElementaryTypeName",
              "src": "962:4:13",
              "typeDescriptions": {
                "typeIdentifier": "t_bool",
                "typeString": "bool"
              }
            },
            "visibility": "private"
          },
          {
            "anonymous": false,
            "documentation": {
              "id": 873,
              "nodeType": "StructuredDocumentation",
              "src": "988:49:13",
              "text": "@dev Emitted whenever the contract is paused."
            },
            "eventSelector": "9e87fac88ff661f02d44f95383c817fece4bce600a3dab7a54406878b965e752",
            "id": 875,
            "name": "Paused",
            "nameLocation": "1048:6:13",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 874,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1054:2:13"
            },
            "src": "1042:15:13"
          },
          {
            "anonymous": false,
            "documentation": {
              "id": 876,
              "nodeType": "StructuredDocumentation",
              "src": "1062:51:13",
              "text": "@dev Emitted whenever the contract is unpaused."
            },
            "eventSelector": "472cf038e2a5f33dbaa68760dbf94ab4e159535e6580c0ac63f8202c7c6c0bb2",
            "id": 878,
            "name": "UnPaused",
            "nameLocation": "1124:8:13",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 877,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1132:2:13"
            },
            "src": "1118:17:13"
          },
          {
            "body": {
              "id": 887,
              "nodeType": "Block",
              "src": "1271:112:13",
              "statements": [
                {
                  "documentation": "@dev Require contract is paused.",
                  "expression": {
                    "arguments": [
                      {
                        "id": 882,
                        "name": "paused",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 872,
                        "src": "1334:6:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "436f6e7472616374204e6f74205061757365642e",
                        "id": 883,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1342:22:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_50843a854c70a5f50d19a640f67a4e96efb5dd9ff75bc9bbd5f81d72dcc2f615",
                          "typeString": "literal_string \"Contract Not Paused.\""
                        },
                        "value": "Contract Not Paused."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_50843a854c70a5f50d19a640f67a4e96efb5dd9ff75bc9bbd5f81d72dcc2f615",
                          "typeString": "literal_string \"Contract Not Paused.\""
                        }
                      ],
                      "id": 881,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "1326:7:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 884,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1326:39:13",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 885,
                  "nodeType": "ExpressionStatement",
                  "src": "1326:39:13"
                },
                {
                  "id": 886,
                  "nodeType": "PlaceholderStatement",
                  "src": "1375:1:13"
                }
              ]
            },
            "documentation": {
              "id": 879,
              "nodeType": "StructuredDocumentation",
              "src": "1145:99:13",
              "text": " @dev  Allows for interactions with contract if the\n       contract is paused."
            },
            "id": 888,
            "name": "whenPaused",
            "nameLocation": "1258:10:13",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 880,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1268:2:13"
            },
            "src": "1249:134:13",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 898,
              "nodeType": "Block",
              "src": "1522:113:13",
              "statements": [
                {
                  "documentation": "@dev Require contract is not paused.",
                  "expression": {
                    "arguments": [
                      {
                        "id": 893,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "UnaryOperation",
                        "operator": "!",
                        "prefix": true,
                        "src": "1589:7:13",
                        "subExpression": {
                          "id": 892,
                          "name": "paused",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 872,
                          "src": "1590:6:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "436f6e7472616374205061757365642e",
                        "id": 894,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1598:18:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_7a30677a409dfb6cf4e31479ec012ed36c91d1f6c24b13f74a6e19e460a90b2c",
                          "typeString": "literal_string \"Contract Paused.\""
                        },
                        "value": "Contract Paused."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_7a30677a409dfb6cf4e31479ec012ed36c91d1f6c24b13f74a6e19e460a90b2c",
                          "typeString": "literal_string \"Contract Paused.\""
                        }
                      ],
                      "id": 891,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "1581:7:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 895,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1581:36:13",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 896,
                  "nodeType": "ExpressionStatement",
                  "src": "1581:36:13"
                },
                {
                  "id": 897,
                  "nodeType": "PlaceholderStatement",
                  "src": "1627:1:13"
                }
              ]
            },
            "documentation": {
              "id": 889,
              "nodeType": "StructuredDocumentation",
              "src": "1389:103:13",
              "text": " @dev  Allows for interactions with contract if the\n       contract is not paused."
            },
            "id": 899,
            "name": "whenNotPaused",
            "nameLocation": "1506:13:13",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 890,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1519:2:13"
            },
            "src": "1497:138:13",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 915,
              "nodeType": "Block",
              "src": "1788:162:13",
              "statements": [
                {
                  "documentation": "@dev Require contract is not paused.",
                  "expression": {
                    "arguments": [
                      {
                        "id": 907,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "UnaryOperation",
                        "operator": "!",
                        "prefix": true,
                        "src": "1855:7:13",
                        "subExpression": {
                          "id": 906,
                          "name": "paused",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 872,
                          "src": "1856:6:13",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "436f6e7472616374205061757365642e",
                        "id": 908,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1864:18:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_7a30677a409dfb6cf4e31479ec012ed36c91d1f6c24b13f74a6e19e460a90b2c",
                          "typeString": "literal_string \"Contract Paused.\""
                        },
                        "value": "Contract Paused."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_7a30677a409dfb6cf4e31479ec012ed36c91d1f6c24b13f74a6e19e460a90b2c",
                          "typeString": "literal_string \"Contract Paused.\""
                        }
                      ],
                      "id": 905,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "1847:7:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 909,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1847:36:13",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 910,
                  "nodeType": "ExpressionStatement",
                  "src": "1847:36:13"
                },
                {
                  "documentation": "@dev Set paused to true.",
                  "expression": {
                    "id": 913,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 911,
                      "name": "paused",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 872,
                      "src": "1930:6:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "74727565",
                      "id": 912,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1939:4:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "src": "1930:13:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 914,
                  "nodeType": "ExpressionStatement",
                  "src": "1930:13:13"
                }
              ]
            },
            "documentation": {
              "id": 900,
              "nodeType": "StructuredDocumentation",
              "src": "1641:108:13",
              "text": " @dev  Pauses the contract. \n       This function is callable by the owner or deployer."
            },
            "functionSelector": "8456cb59",
            "id": 916,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 903,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 902,
                  "name": "onlyOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 6017,
                  "src": "1778:9:13"
                },
                "nodeType": "ModifierInvocation",
                "src": "1778:9:13"
              }
            ],
            "name": "pause",
            "nameLocation": "1763:5:13",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 901,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1768:2:13"
            },
            "returnParameters": {
              "id": 904,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1788:0:13"
            },
            "scope": 942,
            "src": "1754:196:13",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 931,
              "nodeType": "Block",
              "src": "2105:163:13",
              "statements": [
                {
                  "documentation": "@dev Require contract is paused.",
                  "expression": {
                    "arguments": [
                      {
                        "id": 923,
                        "name": "paused",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 872,
                        "src": "2168:6:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "436f6e7472616374204e6f74205061757365642e",
                        "id": 924,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2176:22:13",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_50843a854c70a5f50d19a640f67a4e96efb5dd9ff75bc9bbd5f81d72dcc2f615",
                          "typeString": "literal_string \"Contract Not Paused.\""
                        },
                        "value": "Contract Not Paused."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_50843a854c70a5f50d19a640f67a4e96efb5dd9ff75bc9bbd5f81d72dcc2f615",
                          "typeString": "literal_string \"Contract Not Paused.\""
                        }
                      ],
                      "id": 922,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "2160:7:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 925,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2160:39:13",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 926,
                  "nodeType": "ExpressionStatement",
                  "src": "2160:39:13"
                },
                {
                  "documentation": "@dev Set paused to false.",
                  "expression": {
                    "id": 929,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 927,
                      "name": "paused",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 872,
                      "src": "2247:6:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "66616c7365",
                      "id": 928,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "2256:5:13",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "false"
                    },
                    "src": "2247:14:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 930,
                  "nodeType": "ExpressionStatement",
                  "src": "2247:14:13"
                }
              ]
            },
            "documentation": {
              "id": 917,
              "nodeType": "StructuredDocumentation",
              "src": "1956:108:13",
              "text": " @dev  Pauses the contract. \n       This function is callable by the owner or deployer."
            },
            "functionSelector": "f7b188a5",
            "id": 932,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 920,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 919,
                  "name": "onlyOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 6017,
                  "src": "2095:9:13"
                },
                "nodeType": "ModifierInvocation",
                "src": "2095:9:13"
              }
            ],
            "name": "unPause",
            "nameLocation": "2078:7:13",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 918,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2085:2:13"
            },
            "returnParameters": {
              "id": 921,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2105:0:13"
            },
            "scope": 942,
            "src": "2069:199:13",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 940,
              "nodeType": "Block",
              "src": "2486:30:13",
              "statements": [
                {
                  "expression": {
                    "id": 938,
                    "name": "paused",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 872,
                    "src": "2503:6:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 937,
                  "id": 939,
                  "nodeType": "Return",
                  "src": "2496:13:13"
                }
              ]
            },
            "documentation": {
              "id": 933,
              "nodeType": "StructuredDocumentation",
              "src": "2274:161:13",
              "text": " @dev  Returns true or false if the contract is paused. \n       This function is callable by anyone.\n @return bool True or false."
            },
            "functionSelector": "b187bd26",
            "id": 941,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "isPaused",
            "nameLocation": "2449:8:13",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 934,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2457:2:13"
            },
            "returnParameters": {
              "id": 937,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 936,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 941,
                  "src": "2480:4:13",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 935,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "2480:4:13",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2479:6:13"
            },
            "scope": 942,
            "src": "2440:76:13",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "scope": 943,
        "src": "839:1679:13",
        "usedErrors": []
      }
    ],
    "src": "438:2080:13"
  },
  "bytecode": "608060405234801561001057600080fd5b5061001a3361001f565b61006f565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6103ab8061007e6000396000f3fe608060405234801561001057600080fd5b50600436106100625760003560e01c8063715018a6146100675780638456cb59146100715780638da5cb5b14610079578063b187bd2614610099578063f2fde38b146100b6578063f7b188a5146100c9575b600080fd5b61006f6100d1565b005b61006f610110565b6000546040516001600160a01b0390911681526020015b60405180910390f35b600054600160a01b900460ff166040519015158152602001610090565b61006f6100c4366004610310565b61019c565b61006f610237565b6000546001600160a01b031633146101045760405162461bcd60e51b81526004016100fb90610340565b60405180910390fd5b61010e60006102c0565b565b6000546001600160a01b0316331461013a5760405162461bcd60e51b81526004016100fb90610340565b600054600160a01b900460ff16156101875760405162461bcd60e51b815260206004820152601060248201526f21b7b73a3930b1ba102830bab9b2b21760811b60448201526064016100fb565b6000805460ff60a01b1916600160a01b179055565b6000546001600160a01b031633146101c65760405162461bcd60e51b81526004016100fb90610340565b6001600160a01b03811661022b5760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b60648201526084016100fb565b610234816102c0565b50565b6000546001600160a01b031633146102615760405162461bcd60e51b81526004016100fb90610340565b600054600160a01b900460ff166102b15760405162461bcd60e51b815260206004820152601460248201527321b7b73a3930b1ba102737ba102830bab9b2b21760611b60448201526064016100fb565b6000805460ff60a01b19169055565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b60006020828403121561032257600080fd5b81356001600160a01b038116811461033957600080fd5b9392505050565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260408201526060019056fea2646970667358221220a743cf321899f207dc067fc03bc7c223e974afec6738bc632ed5dd88dd7e518164736f6c634300080f0033",
  "bytecodeSha1": "3b5be5f17b74c7d6d3ec1c7fa81c132354ec3b49",
  "compiler": {
    "evm_version": "istanbul",
    "optimizer": {
      "enabled": true,
      "runs": 200
    },
    "version": "0.8.15+commit.e14f2714"
  },
  "contractName": "Pausable",
  "coverageMap": {
    "branches": {
      "0": {
        "Ownable.transferOwnership": {
          "14": [
            2006,
            2028,
            true
          ]
        }
      },
      "13": {
        "Pausable.pause": {
          "12": [
            1855,
            1862,
            true
          ]
        },
        "Pausable.unPause": {
          "13": [
            2168,
            2174,
            true
          ]
        }
      },
      "5": {}
    },
    "statements": {
      "0": {
        "Ownable._transferOwnership": {
          "10": [
            2378,
            2395
          ],
          "11": [
            2405,
            2450
          ]
        },
        "Ownable.owner": {
          "0": [
            1101,
            1114
          ]
        },
        "Ownable.renounceOwnership": {
          "3": [
            1732,
            1762
          ]
        },
        "Ownable.transferOwnership": {
          "6": [
            1998,
            2071
          ],
          "7": [
            2081,
            2109
          ]
        }
      },
      "13": {
        "Pausable.isPaused": {
          "1": [
            2496,
            2509
          ]
        },
        "Pausable.pause": {
          "4": [
            1847,
            1883
          ],
          "5": [
            1930,
            1943
          ]
        },
        "Pausable.unPause": {
          "8": [
            2160,
            2199
          ],
          "9": [
            2247,
            2261
          ]
        }
      },
      "5": {
        "Context._msgSender": {
          "2": [
            712,
            729
          ]
        }
      }
    }
  },
  "dependencies": [
    "OpenZeppelin/openzeppelin-contracts@4.6.0/Context",
    "OpenZeppelin/openzeppelin-contracts@4.6.0/Ownable"
  ],
  "deployedBytecode": "608060405234801561001057600080fd5b50600436106100625760003560e01c8063715018a6146100675780638456cb59146100715780638da5cb5b14610079578063b187bd2614610099578063f2fde38b146100b6578063f7b188a5146100c9575b600080fd5b61006f6100d1565b005b61006f610110565b6000546040516001600160a01b0390911681526020015b60405180910390f35b600054600160a01b900460ff166040519015158152602001610090565b61006f6100c4366004610310565b61019c565b61006f610237565b6000546001600160a01b031633146101045760405162461bcd60e51b81526004016100fb90610340565b60405180910390fd5b61010e60006102c0565b565b6000546001600160a01b0316331461013a5760405162461bcd60e51b81526004016100fb90610340565b600054600160a01b900460ff16156101875760405162461bcd60e51b815260206004820152601060248201526f21b7b73a3930b1ba102830bab9b2b21760811b60448201526064016100fb565b6000805460ff60a01b1916600160a01b179055565b6000546001600160a01b031633146101c65760405162461bcd60e51b81526004016100fb90610340565b6001600160a01b03811661022b5760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b60648201526084016100fb565b610234816102c0565b50565b6000546001600160a01b031633146102615760405162461bcd60e51b81526004016100fb90610340565b600054600160a01b900460ff166102b15760405162461bcd60e51b815260206004820152601460248201527321b7b73a3930b1ba102737ba102830bab9b2b21760611b60448201526064016100fb565b6000805460ff60a01b19169055565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b60006020828403121561032257600080fd5b81356001600160a01b038116811461033957600080fd5b9392505050565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260408201526060019056fea2646970667358221220a743cf321899f207dc067fc03bc7c223e974afec6738bc632ed5dd88dd7e518164736f6c634300080f0033",
  "deployedSourceMap": "839:1679:13:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1668:101:0;;;:::i;:::-;;1754:196:13;;;:::i;1036:85:0:-;1082:7;1108:6;1036:85;;-1:-1:-1;;;;;1108:6:0;;;160:51:43;;148:2;133:18;1036:85:0;;;;;;;;2440:76:13;2480:4;2503:6;-1:-1:-1;;;2503:6:13;;;;2440:76;;387:14:43;;380:22;362:41;;350:2;335:18;2440:76:13;222:187:43;1918:198:0;;;;;;:::i;:::-;;:::i;2069:199:13:-;;;:::i;1668:101:0:-;1082:7;1108:6;-1:-1:-1;;;;;1108:6:0;719:10:5;1248:23:0;1240:68;;;;-1:-1:-1;;;1240:68:0;;;;;;;:::i;:::-;;;;;;;;;1732:30:::1;1759:1;1732:18;:30::i;:::-;1668:101::o:0;1754:196:13:-;1082:7:0;1108:6;-1:-1:-1;;;;;1108:6:0;719:10:5;1248:23:0;1240:68;;;;-1:-1:-1;;;1240:68:0;;;;;;;:::i;:::-;1856:6:13::1;::::0;-1:-1:-1;;;1856:6:13;::::1;;;1855:7;1847:36;;;::::0;-1:-1:-1;;;1847:36:13;;1268:2:43;1847:36:13::1;::::0;::::1;1250:21:43::0;1307:2;1287:18;;;1280:30;-1:-1:-1;;;1326:18:43;;;1319:46;1382:18;;1847:36:13::1;1066:340:43::0;1847:36:13::1;1930:6;:13:::0;;-1:-1:-1;;;;1930:13:13::1;-1:-1:-1::0;;;1930:13:13::1;::::0;;1754:196::o;1918:198:0:-;1082:7;1108:6;-1:-1:-1;;;;;1108:6:0;719:10:5;1248:23:0;1240:68;;;;-1:-1:-1;;;1240:68:0;;;;;;;:::i;:::-;-1:-1:-1;;;;;2006:22:0;::::1;1998:73;;;::::0;-1:-1:-1;;;1998:73:0;;1613:2:43;1998:73:0::1;::::0;::::1;1595:21:43::0;1652:2;1632:18;;;1625:30;1691:34;1671:18;;;1664:62;-1:-1:-1;;;1742:18:43;;;1735:36;1788:19;;1998:73:0::1;1411:402:43::0;1998:73:0::1;2081:28;2100:8;2081:18;:28::i;:::-;1918:198:::0;:::o;2069:199:13:-;1082:7:0;1108:6;-1:-1:-1;;;;;1108:6:0;719:10:5;1248:23:0;1240:68;;;;-1:-1:-1;;;1240:68:0;;;;;;;:::i;:::-;2168:6:13::1;::::0;-1:-1:-1;;;2168:6:13;::::1;;;2160:39;;;::::0;-1:-1:-1;;;2160:39:13;;2020:2:43;2160:39:13::1;::::0;::::1;2002:21:43::0;2059:2;2039:18;;;2032:30;-1:-1:-1;;;2078:18:43;;;2071:50;2138:18;;2160:39:13::1;1818:344:43::0;2160:39:13::1;2256:5;2247:14:::0;;-1:-1:-1;;;;2247:14:13::1;::::0;;2069:199::o;2270:187:0:-;2343:16;2362:6;;-1:-1:-1;;;;;2378:17:0;;;-1:-1:-1;;;;;;2378:17:0;;;;;;2410:40;;2362:6;;;;;;;2410:40;;2343:16;2410:40;2333:124;2270:187;:::o;414:286:43:-;473:6;526:2;514:9;505:7;501:23;497:32;494:52;;;542:1;539;532:12;494:52;568:23;;-1:-1:-1;;;;;620:31:43;;610:42;;600:70;;666:1;663;656:12;600:70;689:5;414:286;-1:-1:-1;;;414:286:43:o;705:356::-;907:2;889:21;;;926:18;;;919:30;985:34;980:2;965:18;;958:62;1052:2;1037:18;;705:356::o",
  "language": "Solidity",
  "natspec": {
    "author": "Anthony (fps) https://github.com/0xfps.",
    "details": "This contract seeks to grant the inheriting       contract the ability to pause actions done       on the contract.       The choice to pause or unpause the contract       is made by the owner or deployer.",
    "events": {
      "Paused()": {
        "details": "Emitted whenever the contract is paused."
      },
      "UnPaused()": {
        "details": "Emitted whenever the contract is unpaused."
      }
    },
    "kind": "dev",
    "methods": {
      "isPaused()": {
        "details": "Returns true or false if the contract is paused.        This function is callable by anyone.",
        "returns": {
          "_0": "bool True or false."
        }
      },
      "owner()": {
        "details": "Returns the address of the current owner."
      },
      "pause()": {
        "details": "Pauses the contract.        This function is callable by the owner or deployer."
      },
      "renounceOwnership()": {
        "details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
      },
      "transferOwnership(address)": {
        "details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
      },
      "unPause()": {
        "details": "Pauses the contract.        This function is callable by the owner or deployer."
      }
    },
    "stateVariables": {
      "paused": {
        "details": "Boolean to determine when contract is or         is not paused."
      }
    },
    "title": "Pausable Contract.",
    "version": 1
  },
  "offset": [
    839,
    2518
  ],
  "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x62 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x715018A6 EQ PUSH2 0x67 JUMPI DUP1 PUSH4 0x8456CB59 EQ PUSH2 0x71 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x79 JUMPI DUP1 PUSH4 0xB187BD26 EQ PUSH2 0x99 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0xB6 JUMPI DUP1 PUSH4 0xF7B188A5 EQ PUSH2 0xC9 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x6F PUSH2 0xD1 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x6F PUSH2 0x110 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0xA0 SHL SWAP1 DIV PUSH1 0xFF AND PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x90 JUMP JUMPDEST PUSH2 0x6F PUSH2 0xC4 CALLDATASIZE PUSH1 0x4 PUSH2 0x310 JUMP JUMPDEST PUSH2 0x19C JUMP JUMPDEST PUSH2 0x6F PUSH2 0x237 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x104 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xFB SWAP1 PUSH2 0x340 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x10E PUSH1 0x0 PUSH2 0x2C0 JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x13A JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xFB SWAP1 PUSH2 0x340 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0xA0 SHL SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0x187 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x10 PUSH1 0x24 DUP3 ADD MSTORE PUSH16 0x21B7B73A3930B1BA102830BAB9B2B217 PUSH1 0x81 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xFB JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0xFF PUSH1 0xA0 SHL NOT AND PUSH1 0x1 PUSH1 0xA0 SHL OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x1C6 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xFB SWAP1 PUSH2 0x340 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x22B JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x646472657373 PUSH1 0xD0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0xFB JUMP JUMPDEST PUSH2 0x234 DUP2 PUSH2 0x2C0 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x261 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xFB SWAP1 PUSH2 0x340 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0xA0 SHL SWAP1 DIV PUSH1 0xFF AND PUSH2 0x2B1 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x14 PUSH1 0x24 DUP3 ADD MSTORE PUSH20 0x21B7B73A3930B1BA102737BA102830BAB9B2B217 PUSH1 0x61 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0xFB JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0xFF PUSH1 0xA0 SHL NOT AND SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR DUP5 SSTORE PUSH1 0x40 MLOAD SWAP2 SWAP1 SWAP3 AND SWAP3 DUP4 SWAP2 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP2 SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x322 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x339 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE DUP2 DUP2 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xA7 NUMBER 0xCF ORIGIN XOR SWAP10 CALLCODE SMOD 0xDC MOD PUSH32 0xC03BC7C223E974AFEC6738BC632ED5DD88DD7E518164736F6C634300080F0033 ",
  "pcMap": {
    "0": {
      "offset": [
        839,
        2518
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x80"
    },
    "2": {
      "fn": null,
      "offset": [
        839,
        2518
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x40"
    },
    "4": {
      "fn": null,
      "offset": [
        839,
        2518
      ],
      "op": "MSTORE",
      "path": "13"
    },
    "5": {
      "fn": null,
      "offset": [
        839,
        2518
      ],
      "op": "CALLVALUE",
      "path": "13"
    },
    "6": {
      "fn": null,
      "offset": [
        839,
        2518
      ],
      "op": "DUP1",
      "path": "13"
    },
    "7": {
      "fn": null,
      "offset": [
        839,
        2518
      ],
      "op": "ISZERO",
      "path": "13"
    },
    "8": {
      "fn": null,
      "offset": [
        839,
        2518
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x10"
    },
    "11": {
      "fn": null,
      "offset": [
        839,
        2518
      ],
      "op": "JUMPI",
      "path": "13"
    },
    "12": {
      "fn": null,
      "offset": [
        839,
        2518
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x0"
    },
    "14": {
      "fn": null,
      "offset": [
        839,
        2518
      ],
      "op": "DUP1",
      "path": "13"
    },
    "15": {
      "dev": "Cannot send ether to nonpayable function",
      "fn": null,
      "offset": [
        839,
        2518
      ],
      "op": "REVERT",
      "path": "13"
    },
    "16": {
      "fn": null,
      "offset": [
        839,
        2518
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "17": {
      "fn": null,
      "offset": [
        839,
        2518
      ],
      "op": "POP",
      "path": "13"
    },
    "18": {
      "fn": null,
      "offset": [
        839,
        2518
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x4"
    },
    "20": {
      "fn": null,
      "offset": [
        839,
        2518
      ],
      "op": "CALLDATASIZE",
      "path": "13"
    },
    "21": {
      "fn": null,
      "offset": [
        839,
        2518
      ],
      "op": "LT",
      "path": "13"
    },
    "22": {
      "fn": null,
      "offset": [
        839,
        2518
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x62"
    },
    "25": {
      "fn": null,
      "offset": [
        839,
        2518
      ],
      "op": "JUMPI",
      "path": "13"
    },
    "26": {
      "fn": null,
      "offset": [
        839,
        2518
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x0"
    },
    "28": {
      "fn": null,
      "offset": [
        839,
        2518
      ],
      "op": "CALLDATALOAD",
      "path": "13"
    },
    "29": {
      "fn": null,
      "offset": [
        839,
        2518
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0xE0"
    },
    "31": {
      "fn": null,
      "offset": [
        839,
        2518
      ],
      "op": "SHR",
      "path": "13"
    },
    "32": {
      "fn": null,
      "offset": [
        839,
        2518
      ],
      "op": "DUP1",
      "path": "13"
    },
    "33": {
      "fn": null,
      "offset": [
        839,
        2518
      ],
      "op": "PUSH4",
      "path": "13",
      "value": "0x715018A6"
    },
    "38": {
      "fn": null,
      "offset": [
        839,
        2518
      ],
      "op": "EQ",
      "path": "13"
    },
    "39": {
      "fn": null,
      "offset": [
        839,
        2518
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x67"
    },
    "42": {
      "fn": null,
      "offset": [
        839,
        2518
      ],
      "op": "JUMPI",
      "path": "13"
    },
    "43": {
      "fn": null,
      "offset": [
        839,
        2518
      ],
      "op": "DUP1",
      "path": "13"
    },
    "44": {
      "fn": null,
      "offset": [
        839,
        2518
      ],
      "op": "PUSH4",
      "path": "13",
      "value": "0x8456CB59"
    },
    "49": {
      "fn": null,
      "offset": [
        839,
        2518
      ],
      "op": "EQ",
      "path": "13"
    },
    "50": {
      "fn": null,
      "offset": [
        839,
        2518
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x71"
    },
    "53": {
      "fn": null,
      "offset": [
        839,
        2518
      ],
      "op": "JUMPI",
      "path": "13"
    },
    "54": {
      "fn": null,
      "offset": [
        839,
        2518
      ],
      "op": "DUP1",
      "path": "13"
    },
    "55": {
      "fn": null,
      "offset": [
        839,
        2518
      ],
      "op": "PUSH4",
      "path": "13",
      "value": "0x8DA5CB5B"
    },
    "60": {
      "fn": null,
      "offset": [
        839,
        2518
      ],
      "op": "EQ",
      "path": "13"
    },
    "61": {
      "fn": null,
      "offset": [
        839,
        2518
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x79"
    },
    "64": {
      "fn": null,
      "offset": [
        839,
        2518
      ],
      "op": "JUMPI",
      "path": "13"
    },
    "65": {
      "fn": null,
      "offset": [
        839,
        2518
      ],
      "op": "DUP1",
      "path": "13"
    },
    "66": {
      "fn": null,
      "offset": [
        839,
        2518
      ],
      "op": "PUSH4",
      "path": "13",
      "value": "0xB187BD26"
    },
    "71": {
      "fn": null,
      "offset": [
        839,
        2518
      ],
      "op": "EQ",
      "path": "13"
    },
    "72": {
      "fn": null,
      "offset": [
        839,
        2518
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x99"
    },
    "75": {
      "fn": null,
      "offset": [
        839,
        2518
      ],
      "op": "JUMPI",
      "path": "13"
    },
    "76": {
      "fn": null,
      "offset": [
        839,
        2518
      ],
      "op": "DUP1",
      "path": "13"
    },
    "77": {
      "fn": null,
      "offset": [
        839,
        2518
      ],
      "op": "PUSH4",
      "path": "13",
      "value": "0xF2FDE38B"
    },
    "82": {
      "fn": null,
      "offset": [
        839,
        2518
      ],
      "op": "EQ",
      "path": "13"
    },
    "83": {
      "fn": null,
      "offset": [
        839,
        2518
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0xB6"
    },
    "86": {
      "fn": null,
      "offset": [
        839,
        2518
      ],
      "op": "JUMPI",
      "path": "13"
    },
    "87": {
      "fn": null,
      "offset": [
        839,
        2518
      ],
      "op": "DUP1",
      "path": "13"
    },
    "88": {
      "fn": null,
      "offset": [
        839,
        2518
      ],
      "op": "PUSH4",
      "path": "13",
      "value": "0xF7B188A5"
    },
    "93": {
      "fn": null,
      "offset": [
        839,
        2518
      ],
      "op": "EQ",
      "path": "13"
    },
    "94": {
      "fn": null,
      "offset": [
        839,
        2518
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0xC9"
    },
    "97": {
      "fn": null,
      "offset": [
        839,
        2518
      ],
      "op": "JUMPI",
      "path": "13"
    },
    "98": {
      "fn": null,
      "offset": [
        839,
        2518
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "99": {
      "fn": null,
      "offset": [
        839,
        2518
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x0"
    },
    "101": {
      "fn": null,
      "offset": [
        839,
        2518
      ],
      "op": "DUP1",
      "path": "13"
    },
    "102": {
      "first_revert": true,
      "fn": null,
      "offset": [
        839,
        2518
      ],
      "op": "REVERT",
      "path": "13"
    },
    "103": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1668,
        1769
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "104": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1668,
        1769
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x6F"
    },
    "107": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1668,
        1769
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xD1"
    },
    "110": {
      "fn": "Ownable.renounceOwnership",
      "jump": "i",
      "offset": [
        1668,
        1769
      ],
      "op": "JUMP",
      "path": "0"
    },
    "111": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1668,
        1769
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "112": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1668,
        1769
      ],
      "op": "STOP",
      "path": "0"
    },
    "113": {
      "fn": "Pausable.pause",
      "offset": [
        1754,
        1950
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "114": {
      "fn": "Pausable.pause",
      "offset": [
        1754,
        1950
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x6F"
    },
    "117": {
      "fn": "Pausable.pause",
      "offset": [
        1754,
        1950
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x110"
    },
    "120": {
      "fn": "Pausable.pause",
      "jump": "i",
      "offset": [
        1754,
        1950
      ],
      "op": "JUMP",
      "path": "13"
    },
    "121": {
      "fn": "Ownable.owner",
      "offset": [
        1036,
        1121
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "122": {
      "fn": "Ownable.owner",
      "offset": [
        1082,
        1089
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "124": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "SLOAD",
      "path": "0",
      "statement": 0
    },
    "125": {
      "fn": "Ownable.owner",
      "offset": [
        1036,
        1121
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "127": {
      "fn": "Ownable.owner",
      "offset": [
        1036,
        1121
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "128": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "130": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "132": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "134": {
      "op": "SHL"
    },
    "135": {
      "op": "SUB"
    },
    "136": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "137": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "138": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "AND",
      "path": "0"
    },
    "139": {
      "op": "DUP2"
    },
    "140": {
      "op": "MSTORE"
    },
    "141": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "143": {
      "op": "ADD"
    },
    "144": {
      "fn": "Ownable.owner",
      "offset": [
        1036,
        1121
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "145": {
      "fn": "Ownable.owner",
      "offset": [
        1036,
        1121
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "147": {
      "fn": "Ownable.owner",
      "offset": [
        1036,
        1121
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "148": {
      "fn": "Ownable.owner",
      "offset": [
        1036,
        1121
      ],
      "op": "DUP1",
      "path": "0"
    },
    "149": {
      "fn": "Ownable.owner",
      "offset": [
        1036,
        1121
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "150": {
      "fn": "Ownable.owner",
      "offset": [
        1036,
        1121
      ],
      "op": "SUB",
      "path": "0"
    },
    "151": {
      "fn": "Ownable.owner",
      "offset": [
        1036,
        1121
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "152": {
      "fn": "Ownable.owner",
      "offset": [
        1036,
        1121
      ],
      "op": "RETURN",
      "path": "0"
    },
    "153": {
      "fn": "Pausable.isPaused",
      "offset": [
        2440,
        2516
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "154": {
      "fn": "Pausable.isPaused",
      "offset": [
        2480,
        2484
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x0"
    },
    "156": {
      "fn": "Pausable.isPaused",
      "offset": [
        2503,
        2509
      ],
      "op": "SLOAD",
      "path": "13",
      "statement": 1
    },
    "157": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "159": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "161": {
      "op": "SHL"
    },
    "162": {
      "fn": "Pausable.isPaused",
      "offset": [
        2503,
        2509
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "163": {
      "fn": "Pausable.isPaused",
      "offset": [
        2503,
        2509
      ],
      "op": "DIV",
      "path": "13"
    },
    "164": {
      "fn": "Pausable.isPaused",
      "offset": [
        2503,
        2509
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0xFF"
    },
    "166": {
      "fn": "Pausable.isPaused",
      "offset": [
        2503,
        2509
      ],
      "op": "AND",
      "path": "13"
    },
    "167": {
      "fn": "Pausable.isPaused",
      "offset": [
        2440,
        2516
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x40"
    },
    "169": {
      "fn": "Pausable.isPaused",
      "offset": [
        2440,
        2516
      ],
      "op": "MLOAD",
      "path": "13"
    },
    "170": {
      "op": "SWAP1"
    },
    "171": {
      "op": "ISZERO"
    },
    "172": {
      "op": "ISZERO"
    },
    "173": {
      "op": "DUP2"
    },
    "174": {
      "op": "MSTORE"
    },
    "175": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "177": {
      "op": "ADD"
    },
    "178": {
      "fn": "Pausable.isPaused",
      "offset": [
        2440,
        2516
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x90"
    },
    "181": {
      "op": "JUMP"
    },
    "182": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1918,
        2116
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "183": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1918,
        2116
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x6F"
    },
    "186": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1918,
        2116
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xC4"
    },
    "189": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1918,
        2116
      ],
      "op": "CALLDATASIZE",
      "path": "0"
    },
    "190": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1918,
        2116
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "192": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1918,
        2116
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x310"
    },
    "195": {
      "fn": "Ownable.transferOwnership",
      "jump": "i",
      "offset": [
        1918,
        2116
      ],
      "op": "JUMP",
      "path": "0"
    },
    "196": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1918,
        2116
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "197": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1918,
        2116
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x19C"
    },
    "200": {
      "fn": "Ownable.transferOwnership",
      "jump": "i",
      "offset": [
        1918,
        2116
      ],
      "op": "JUMP",
      "path": "0"
    },
    "201": {
      "fn": "Pausable.unPause",
      "offset": [
        2069,
        2268
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "202": {
      "fn": "Pausable.unPause",
      "offset": [
        2069,
        2268
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x6F"
    },
    "205": {
      "fn": "Pausable.unPause",
      "offset": [
        2069,
        2268
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x237"
    },
    "208": {
      "fn": "Pausable.unPause",
      "jump": "i",
      "offset": [
        2069,
        2268
      ],
      "op": "JUMP",
      "path": "13"
    },
    "209": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1668,
        1769
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "210": {
      "fn": "Ownable.owner",
      "offset": [
        1082,
        1089
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "212": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "213": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "215": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "217": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "219": {
      "op": "SHL"
    },
    "220": {
      "op": "SUB"
    },
    "221": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "AND",
      "path": "0"
    },
    "222": {
      "fn": "Context._msgSender",
      "offset": [
        719,
        729
      ],
      "op": "CALLER",
      "path": "5",
      "statement": 2
    },
    "223": {
      "offset": [
        1248,
        1271
      ],
      "op": "EQ",
      "path": "0"
    },
    "224": {
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x104"
    },
    "227": {
      "offset": [
        1240,
        1308
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "228": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "230": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "231": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "235": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "237": {
      "op": "SHL"
    },
    "238": {
      "offset": [
        1240,
        1308
      ],
      "op": "DUP2",
      "path": "0"
    },
    "239": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "240": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "242": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "ADD",
      "path": "0"
    },
    "243": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xFB"
    },
    "246": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "247": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x340"
    },
    "250": {
      "fn": "Context._msgSender",
      "jump": "i",
      "offset": [
        1240,
        1308
      ],
      "op": "JUMP",
      "path": "0"
    },
    "251": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "252": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "254": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "255": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "DUP1",
      "path": "0"
    },
    "256": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "257": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "SUB",
      "path": "0"
    },
    "258": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "259": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "REVERT",
      "optimizer_revert": true,
      "path": "0"
    },
    "260": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "261": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1732,
        1762
      ],
      "op": "PUSH2",
      "path": "0",
      "statement": 3,
      "value": "0x10E"
    },
    "264": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1759,
        1760
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "266": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1732,
        1750
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2C0"
    },
    "269": {
      "fn": "Ownable.renounceOwnership",
      "jump": "i",
      "offset": [
        1732,
        1762
      ],
      "op": "JUMP",
      "path": "0"
    },
    "270": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1732,
        1762
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "271": {
      "fn": "Ownable.renounceOwnership",
      "jump": "o",
      "offset": [
        1668,
        1769
      ],
      "op": "JUMP",
      "path": "0"
    },
    "272": {
      "fn": "Pausable.pause",
      "offset": [
        1754,
        1950
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "273": {
      "fn": "Ownable.owner",
      "offset": [
        1082,
        1089
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "275": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "276": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "278": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "280": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "282": {
      "op": "SHL"
    },
    "283": {
      "op": "SUB"
    },
    "284": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "AND",
      "path": "0"
    },
    "285": {
      "fn": "Context._msgSender",
      "offset": [
        719,
        729
      ],
      "op": "CALLER",
      "path": "5"
    },
    "286": {
      "offset": [
        1248,
        1271
      ],
      "op": "EQ",
      "path": "0"
    },
    "287": {
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x13A"
    },
    "290": {
      "offset": [
        1240,
        1308
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "291": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "293": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "294": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "298": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "300": {
      "op": "SHL"
    },
    "301": {
      "offset": [
        1240,
        1308
      ],
      "op": "DUP2",
      "path": "0"
    },
    "302": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "303": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "305": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "ADD",
      "path": "0"
    },
    "306": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xFB"
    },
    "309": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "310": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x340"
    },
    "313": {
      "fn": "Context._msgSender",
      "jump": "i",
      "offset": [
        1240,
        1308
      ],
      "op": "JUMP",
      "path": "0"
    },
    "314": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "315": {
      "fn": "Pausable.pause",
      "offset": [
        1856,
        1862
      ],
      "op": "PUSH1",
      "path": "13",
      "statement": 4,
      "value": "0x0"
    },
    "317": {
      "fn": "Pausable.pause",
      "offset": [
        1856,
        1862
      ],
      "op": "SLOAD",
      "path": "13"
    },
    "318": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "320": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "322": {
      "op": "SHL"
    },
    "323": {
      "fn": "Pausable.pause",
      "offset": [
        1856,
        1862
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "324": {
      "fn": "Pausable.pause",
      "offset": [
        1856,
        1862
      ],
      "op": "DIV",
      "path": "13"
    },
    "325": {
      "fn": "Pausable.pause",
      "offset": [
        1856,
        1862
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0xFF"
    },
    "327": {
      "fn": "Pausable.pause",
      "offset": [
        1856,
        1862
      ],
      "op": "AND",
      "path": "13"
    },
    "328": {
      "branch": 12,
      "fn": "Pausable.pause",
      "offset": [
        1855,
        1862
      ],
      "op": "ISZERO",
      "path": "13"
    },
    "329": {
      "fn": "Pausable.pause",
      "offset": [
        1847,
        1883
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x187"
    },
    "332": {
      "branch": 12,
      "fn": "Pausable.pause",
      "offset": [
        1847,
        1883
      ],
      "op": "JUMPI",
      "path": "13"
    },
    "333": {
      "fn": "Pausable.pause",
      "offset": [
        1847,
        1883
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x40"
    },
    "335": {
      "fn": "Pausable.pause",
      "offset": [
        1847,
        1883
      ],
      "op": "MLOAD",
      "path": "13"
    },
    "336": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "340": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "342": {
      "op": "SHL"
    },
    "343": {
      "fn": "Pausable.pause",
      "offset": [
        1847,
        1883
      ],
      "op": "DUP2",
      "path": "13"
    },
    "344": {
      "fn": "Pausable.pause",
      "offset": [
        1847,
        1883
      ],
      "op": "MSTORE",
      "path": "13"
    },
    "345": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "347": {
      "fn": "Pausable.pause",
      "offset": [
        1847,
        1883
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x4"
    },
    "349": {
      "fn": "Pausable.pause",
      "offset": [
        1847,
        1883
      ],
      "op": "DUP3",
      "path": "13"
    },
    "350": {
      "fn": "Pausable.pause",
      "offset": [
        1847,
        1883
      ],
      "op": "ADD",
      "path": "13"
    },
    "351": {
      "op": "MSTORE"
    },
    "352": {
      "op": "PUSH1",
      "value": "0x10"
    },
    "354": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "356": {
      "op": "DUP3"
    },
    "357": {
      "op": "ADD"
    },
    "358": {
      "op": "MSTORE"
    },
    "359": {
      "op": "PUSH16",
      "value": "0x21B7B73A3930B1BA102830BAB9B2B217"
    },
    "376": {
      "op": "PUSH1",
      "value": "0x81"
    },
    "378": {
      "op": "SHL"
    },
    "379": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "381": {
      "op": "DUP3"
    },
    "382": {
      "op": "ADD"
    },
    "383": {
      "op": "MSTORE"
    },
    "384": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "386": {
      "op": "ADD"
    },
    "387": {
      "fn": "Pausable.pause",
      "offset": [
        1847,
        1883
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0xFB"
    },
    "390": {
      "op": "JUMP"
    },
    "391": {
      "fn": "Pausable.pause",
      "offset": [
        1847,
        1883
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "392": {
      "fn": "Pausable.pause",
      "offset": [
        1930,
        1936
      ],
      "op": "PUSH1",
      "path": "13",
      "statement": 5,
      "value": "0x0"
    },
    "394": {
      "fn": "Pausable.pause",
      "offset": [
        1930,
        1943
      ],
      "op": "DUP1",
      "path": "13"
    },
    "395": {
      "fn": "Pausable.pause",
      "offset": [
        1930,
        1943
      ],
      "op": "SLOAD",
      "path": "13"
    },
    "396": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "398": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "400": {
      "op": "SHL"
    },
    "401": {
      "op": "NOT"
    },
    "402": {
      "fn": "Pausable.pause",
      "offset": [
        1930,
        1943
      ],
      "op": "AND",
      "path": "13"
    },
    "403": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "405": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "407": {
      "op": "SHL"
    },
    "408": {
      "fn": "Pausable.pause",
      "offset": [
        1930,
        1943
      ],
      "op": "OR",
      "path": "13"
    },
    "409": {
      "fn": "Pausable.pause",
      "offset": [
        1930,
        1943
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "410": {
      "fn": "Pausable.pause",
      "offset": [
        1930,
        1943
      ],
      "op": "SSTORE",
      "path": "13"
    },
    "411": {
      "fn": "Pausable.pause",
      "jump": "o",
      "offset": [
        1754,
        1950
      ],
      "op": "JUMP",
      "path": "13"
    },
    "412": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1918,
        2116
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "413": {
      "fn": "Ownable.owner",
      "offset": [
        1082,
        1089
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "415": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "416": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "418": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "420": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "422": {
      "op": "SHL"
    },
    "423": {
      "op": "SUB"
    },
    "424": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "AND",
      "path": "0"
    },
    "425": {
      "fn": "Context._msgSender",
      "offset": [
        719,
        729
      ],
      "op": "CALLER",
      "path": "5"
    },
    "426": {
      "offset": [
        1248,
        1271
      ],
      "op": "EQ",
      "path": "0"
    },
    "427": {
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1C6"
    },
    "430": {
      "offset": [
        1240,
        1308
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "431": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "433": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "434": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "438": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "440": {
      "op": "SHL"
    },
    "441": {
      "offset": [
        1240,
        1308
      ],
      "op": "DUP2",
      "path": "0"
    },
    "442": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "443": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "445": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "ADD",
      "path": "0"
    },
    "446": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xFB"
    },
    "449": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "450": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x340"
    },
    "453": {
      "fn": "Context._msgSender",
      "jump": "i",
      "offset": [
        1240,
        1308
      ],
      "op": "JUMP",
      "path": "0"
    },
    "454": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "455": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "457": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "459": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "461": {
      "op": "SHL"
    },
    "462": {
      "op": "SUB"
    },
    "463": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2006,
        2028
      ],
      "op": "DUP2",
      "path": "0",
      "statement": 6
    },
    "464": {
      "branch": 14,
      "fn": "Ownable.transferOwnership",
      "offset": [
        2006,
        2028
      ],
      "op": "AND",
      "path": "0"
    },
    "465": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1998,
        2071
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x22B"
    },
    "468": {
      "branch": 14,
      "fn": "Ownable.transferOwnership",
      "offset": [
        1998,
        2071
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "469": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1998,
        2071
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "471": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1998,
        2071
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "472": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "476": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "478": {
      "op": "SHL"
    },
    "479": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1998,
        2071
      ],
      "op": "DUP2",
      "path": "0"
    },
    "480": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1998,
        2071
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "481": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "483": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1998,
        2071
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "485": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1998,
        2071
      ],
      "op": "DUP3",
      "path": "0"
    },
    "486": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1998,
        2071
      ],
      "op": "ADD",
      "path": "0"
    },
    "487": {
      "op": "MSTORE"
    },
    "488": {
      "op": "PUSH1",
      "value": "0x26"
    },
    "490": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "492": {
      "op": "DUP3"
    },
    "493": {
      "op": "ADD"
    },
    "494": {
      "op": "MSTORE"
    },
    "495": {
      "op": "PUSH32",
      "value": "0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061"
    },
    "528": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "530": {
      "op": "DUP3"
    },
    "531": {
      "op": "ADD"
    },
    "532": {
      "op": "MSTORE"
    },
    "533": {
      "op": "PUSH6",
      "value": "0x646472657373"
    },
    "540": {
      "op": "PUSH1",
      "value": "0xD0"
    },
    "542": {
      "op": "SHL"
    },
    "543": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "545": {
      "op": "DUP3"
    },
    "546": {
      "op": "ADD"
    },
    "547": {
      "op": "MSTORE"
    },
    "548": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "550": {
      "op": "ADD"
    },
    "551": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1998,
        2071
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xFB"
    },
    "554": {
      "op": "JUMP"
    },
    "555": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1998,
        2071
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "556": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2081,
        2109
      ],
      "op": "PUSH2",
      "path": "0",
      "statement": 7,
      "value": "0x234"
    },
    "559": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2100,
        2108
      ],
      "op": "DUP2",
      "path": "0"
    },
    "560": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2081,
        2099
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2C0"
    },
    "563": {
      "fn": "Ownable.transferOwnership",
      "jump": "i",
      "offset": [
        2081,
        2109
      ],
      "op": "JUMP",
      "path": "0"
    },
    "564": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2081,
        2109
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "565": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1918,
        2116
      ],
      "op": "POP",
      "path": "0"
    },
    "566": {
      "fn": "Ownable.transferOwnership",
      "jump": "o",
      "offset": [
        1918,
        2116
      ],
      "op": "JUMP",
      "path": "0"
    },
    "567": {
      "fn": "Pausable.unPause",
      "offset": [
        2069,
        2268
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "568": {
      "fn": "Ownable.owner",
      "offset": [
        1082,
        1089
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "570": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "571": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "573": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "575": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "577": {
      "op": "SHL"
    },
    "578": {
      "op": "SUB"
    },
    "579": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "AND",
      "path": "0"
    },
    "580": {
      "fn": "Context._msgSender",
      "offset": [
        719,
        729
      ],
      "op": "CALLER",
      "path": "5"
    },
    "581": {
      "offset": [
        1248,
        1271
      ],
      "op": "EQ",
      "path": "0"
    },
    "582": {
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x261"
    },
    "585": {
      "offset": [
        1240,
        1308
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "586": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "588": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "589": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "593": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "595": {
      "op": "SHL"
    },
    "596": {
      "offset": [
        1240,
        1308
      ],
      "op": "DUP2",
      "path": "0"
    },
    "597": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "598": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "600": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "ADD",
      "path": "0"
    },
    "601": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xFB"
    },
    "604": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "605": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x340"
    },
    "608": {
      "fn": "Context._msgSender",
      "jump": "i",
      "offset": [
        1240,
        1308
      ],
      "op": "JUMP",
      "path": "0"
    },
    "609": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "610": {
      "fn": "Pausable.unPause",
      "offset": [
        2168,
        2174
      ],
      "op": "PUSH1",
      "path": "13",
      "statement": 8,
      "value": "0x0"
    },
    "612": {
      "fn": "Pausable.unPause",
      "offset": [
        2168,
        2174
      ],
      "op": "SLOAD",
      "path": "13"
    },
    "613": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "615": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "617": {
      "op": "SHL"
    },
    "618": {
      "fn": "Pausable.unPause",
      "offset": [
        2168,
        2174
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "619": {
      "fn": "Pausable.unPause",
      "offset": [
        2168,
        2174
      ],
      "op": "DIV",
      "path": "13"
    },
    "620": {
      "fn": "Pausable.unPause",
      "offset": [
        2168,
        2174
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0xFF"
    },
    "622": {
      "branch": 13,
      "fn": "Pausable.unPause",
      "offset": [
        2168,
        2174
      ],
      "op": "AND",
      "path": "13"
    },
    "623": {
      "fn": "Pausable.unPause",
      "offset": [
        2160,
        2199
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0x2B1"
    },
    "626": {
      "branch": 13,
      "fn": "Pausable.unPause",
      "offset": [
        2160,
        2199
      ],
      "op": "JUMPI",
      "path": "13"
    },
    "627": {
      "fn": "Pausable.unPause",
      "offset": [
        2160,
        2199
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x40"
    },
    "629": {
      "fn": "Pausable.unPause",
      "offset": [
        2160,
        2199
      ],
      "op": "MLOAD",
      "path": "13"
    },
    "630": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "634": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "636": {
      "op": "SHL"
    },
    "637": {
      "fn": "Pausable.unPause",
      "offset": [
        2160,
        2199
      ],
      "op": "DUP2",
      "path": "13"
    },
    "638": {
      "fn": "Pausable.unPause",
      "offset": [
        2160,
        2199
      ],
      "op": "MSTORE",
      "path": "13"
    },
    "639": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "641": {
      "fn": "Pausable.unPause",
      "offset": [
        2160,
        2199
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x4"
    },
    "643": {
      "fn": "Pausable.unPause",
      "offset": [
        2160,
        2199
      ],
      "op": "DUP3",
      "path": "13"
    },
    "644": {
      "fn": "Pausable.unPause",
      "offset": [
        2160,
        2199
      ],
      "op": "ADD",
      "path": "13"
    },
    "645": {
      "op": "MSTORE"
    },
    "646": {
      "op": "PUSH1",
      "value": "0x14"
    },
    "648": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "650": {
      "op": "DUP3"
    },
    "651": {
      "op": "ADD"
    },
    "652": {
      "op": "MSTORE"
    },
    "653": {
      "op": "PUSH20",
      "value": "0x21B7B73A3930B1BA102737BA102830BAB9B2B217"
    },
    "674": {
      "op": "PUSH1",
      "value": "0x61"
    },
    "676": {
      "op": "SHL"
    },
    "677": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "679": {
      "op": "DUP3"
    },
    "680": {
      "op": "ADD"
    },
    "681": {
      "op": "MSTORE"
    },
    "682": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "684": {
      "op": "ADD"
    },
    "685": {
      "fn": "Pausable.unPause",
      "offset": [
        2160,
        2199
      ],
      "op": "PUSH2",
      "path": "13",
      "value": "0xFB"
    },
    "688": {
      "op": "JUMP"
    },
    "689": {
      "fn": "Pausable.unPause",
      "offset": [
        2160,
        2199
      ],
      "op": "JUMPDEST",
      "path": "13"
    },
    "690": {
      "fn": "Pausable.unPause",
      "offset": [
        2256,
        2261
      ],
      "op": "PUSH1",
      "path": "13",
      "statement": 9,
      "value": "0x0"
    },
    "692": {
      "fn": "Pausable.unPause",
      "offset": [
        2247,
        2261
      ],
      "op": "DUP1",
      "path": "13"
    },
    "693": {
      "fn": "Pausable.unPause",
      "offset": [
        2247,
        2261
      ],
      "op": "SLOAD",
      "path": "13"
    },
    "694": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "696": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "698": {
      "op": "SHL"
    },
    "699": {
      "op": "NOT"
    },
    "700": {
      "fn": "Pausable.unPause",
      "offset": [
        2247,
        2261
      ],
      "op": "AND",
      "path": "13"
    },
    "701": {
      "fn": "Pausable.unPause",
      "offset": [
        2247,
        2261
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "702": {
      "fn": "Pausable.unPause",
      "offset": [
        2247,
        2261
      ],
      "op": "SSTORE",
      "path": "13"
    },
    "703": {
      "fn": "Pausable.unPause",
      "jump": "o",
      "offset": [
        2069,
        2268
      ],
      "op": "JUMP",
      "path": "13"
    },
    "704": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2270,
        2457
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "705": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2343,
        2359
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "707": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2362,
        2368
      ],
      "op": "DUP1",
      "path": "0"
    },
    "708": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2362,
        2368
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "709": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "711": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "713": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "715": {
      "op": "SHL"
    },
    "716": {
      "op": "SUB"
    },
    "717": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2378,
        2395
      ],
      "op": "DUP4",
      "path": "0",
      "statement": 10
    },
    "718": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2378,
        2395
      ],
      "op": "DUP2",
      "path": "0"
    },
    "719": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2378,
        2395
      ],
      "op": "AND",
      "path": "0"
    },
    "720": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "722": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "724": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "726": {
      "op": "SHL"
    },
    "727": {
      "op": "SUB"
    },
    "728": {
      "op": "NOT"
    },
    "729": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2378,
        2395
      ],
      "op": "DUP4",
      "path": "0"
    },
    "730": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2378,
        2395
      ],
      "op": "AND",
      "path": "0"
    },
    "731": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2378,
        2395
      ],
      "op": "DUP2",
      "path": "0"
    },
    "732": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2378,
        2395
      ],
      "op": "OR",
      "path": "0"
    },
    "733": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2378,
        2395
      ],
      "op": "DUP5",
      "path": "0"
    },
    "734": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2378,
        2395
      ],
      "op": "SSTORE",
      "path": "0"
    },
    "735": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2410,
        2450
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 11,
      "value": "0x40"
    },
    "737": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2410,
        2450
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "738": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2362,
        2368
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "739": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2362,
        2368
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "740": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2362,
        2368
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "741": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2362,
        2368
      ],
      "op": "AND",
      "path": "0"
    },
    "742": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2362,
        2368
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "743": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2362,
        2368
      ],
      "op": "DUP4",
      "path": "0"
    },
    "744": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2362,
        2368
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "745": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2410,
        2450
      ],
      "op": "PUSH32",
      "path": "0",
      "value": "0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
    },
    "778": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2410,
        2450
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "779": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2343,
        2359
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "780": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2410,
        2450
      ],
      "op": "LOG3",
      "path": "0"
    },
    "781": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2333,
        2457
      ],
      "op": "POP",
      "path": "0"
    },
    "782": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2270,
        2457
      ],
      "op": "POP",
      "path": "0"
    },
    "783": {
      "fn": "Ownable._transferOwnership",
      "jump": "o",
      "offset": [
        2270,
        2457
      ],
      "op": "JUMP",
      "path": "0"
    },
    "784": {
      "op": "JUMPDEST"
    },
    "785": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "787": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "789": {
      "op": "DUP3"
    },
    "790": {
      "op": "DUP5"
    },
    "791": {
      "op": "SUB"
    },
    "792": {
      "op": "SLT"
    },
    "793": {
      "op": "ISZERO"
    },
    "794": {
      "op": "PUSH2",
      "value": "0x322"
    },
    "797": {
      "op": "JUMPI"
    },
    "798": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "800": {
      "op": "DUP1"
    },
    "801": {
      "op": "REVERT"
    },
    "802": {
      "op": "JUMPDEST"
    },
    "803": {
      "op": "DUP2"
    },
    "804": {
      "op": "CALLDATALOAD"
    },
    "805": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "807": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "809": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "811": {
      "op": "SHL"
    },
    "812": {
      "op": "SUB"
    },
    "813": {
      "op": "DUP2"
    },
    "814": {
      "op": "AND"
    },
    "815": {
      "op": "DUP2"
    },
    "816": {
      "op": "EQ"
    },
    "817": {
      "op": "PUSH2",
      "value": "0x339"
    },
    "820": {
      "op": "JUMPI"
    },
    "821": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "823": {
      "op": "DUP1"
    },
    "824": {
      "op": "REVERT"
    },
    "825": {
      "op": "JUMPDEST"
    },
    "826": {
      "op": "SWAP4"
    },
    "827": {
      "op": "SWAP3"
    },
    "828": {
      "op": "POP"
    },
    "829": {
      "op": "POP"
    },
    "830": {
      "op": "POP"
    },
    "831": {
      "jump": "o",
      "op": "JUMP"
    },
    "832": {
      "op": "JUMPDEST"
    },
    "833": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "835": {
      "op": "DUP1"
    },
    "836": {
      "op": "DUP3"
    },
    "837": {
      "op": "MSTORE"
    },
    "838": {
      "op": "DUP2"
    },
    "839": {
      "op": "DUP2"
    },
    "840": {
      "op": "ADD"
    },
    "841": {
      "op": "MSTORE"
    },
    "842": {
      "op": "PUSH32",
      "value": "0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572"
    },
    "875": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "877": {
      "op": "DUP3"
    },
    "878": {
      "op": "ADD"
    },
    "879": {
      "op": "MSTORE"
    },
    "880": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "882": {
      "op": "ADD"
    },
    "883": {
      "op": "SWAP1"
    },
    "884": {
      "jump": "o",
      "op": "JUMP"
    }
  },
  "sha1": "7ed524ead964a800cec5d2c9595d43aa2bbffe66",
  "source": "// SPDX-License-Identifier: GPL-3.0\n\n///  _____     ______     ______     ______     ______     ______     _____    \n/// /\\  __-.  /\\  __ \\   /\\  ___\\   /\\  ___\\   /\\  == \\   /\\  ___\\   /\\  __-.  \n/// \\ \\ \\/\\ \\ \\ \\  __ \\  \\ \\ \\____  \\ \\ \\____  \\ \\  __<   \\ \\  __\\   \\ \\ \\/\\ \\ \n///  \\ \\____-  \\ \\_\\ \\_\\  \\ \\_____\\  \\ \\_____\\  \\ \\_\\ \\_\\  \\ \\_____\\  \\ \\____- \n///   \\/____/   \\/_/\\/_/   \\/_____/   \\/_____/   \\/_/ /_/   \\/_____/   \\/____/ \n\npragma solidity ^0.8.8;\n\nimport {Ownable} from \"@openzeppelin/contracts/access/Ownable.sol\";\n\n/**\n* @title Pausable Contract.\n* @author Anthony (fps) https://github.com/0xfps.\n* @dev  This contract seeks to grant the inheriting\n*       contract the ability to pause actions done\n*       on the contract.\n*       The choice to pause or unpause the contract\n*       is made by the owner or deployer.\n*/\ncontract Pausable is Ownable {\n    /// @dev    Boolean to determine when contract is or\n    ///         is not paused.\n    bool private paused;\n\n    /// @dev Emitted whenever the contract is paused.\n    event Paused();\n    /// @dev Emitted whenever the contract is unpaused.\n    event UnPaused();\n    \n    /**\n    * @dev  Allows for interactions with contract if the\n    *       contract is paused.\n    */\n    modifier whenPaused() {\n        /// @dev Require contract is paused.\n        require(paused, \"Contract Not Paused.\");\n        _;\n    }\n\n    /**\n    * @dev  Allows for interactions with contract if the\n    *       contract is not paused.\n    */\n    modifier whenNotPaused() {\n        /// @dev Require contract is not paused.\n        require(!paused, \"Contract Paused.\");\n        _;\n    }\n\n    /**\n    * @dev  Pauses the contract. \n    *       This function is callable by the owner or deployer.\n    */\n    function pause() public onlyOwner {\n        /// @dev Require contract is not paused.\n        require(!paused, \"Contract Paused.\");\n        /// @dev Set paused to true.\n        paused = true;\n    }\n\n    /**\n    * @dev  Pauses the contract. \n    *       This function is callable by the owner or deployer.\n    */\n    function unPause() public onlyOwner {\n        /// @dev Require contract is paused.\n        require(paused, \"Contract Not Paused.\");\n        /// @dev Set paused to false.\n        paused = false;\n    }\n\n    /**\n    * @dev  Returns true or false if the contract is paused. \n    *       This function is callable by anyone.\n    *\n    * @return bool True or false.\n    */\n    function isPaused() public view returns(bool) {\n        return paused;\n    }\n}",
  "sourceMap": "839:1679:13:-:0;;;;;;;;;;;;-1:-1:-1;921:32:0;719:10:5;921:18:0;:32::i;:::-;839:1679:13;;2270:187:0;2343:16;2362:6;;-1:-1:-1;;;;;2378:17:0;;;-1:-1:-1;;;;;;2378:17:0;;;;;;2410:40;;2362:6;;;;;;;2410:40;;2343:16;2410:40;2333:124;2270:187;:::o;839:1679:13:-;;;;;;;",
  "sourcePath": "contracts/contracts/core/contracts/facets/Pausable.sol",
  "type": "contract"
}