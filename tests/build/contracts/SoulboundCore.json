{
  "abi": [
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "name",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "symbol",
          "type": "string"
        },
        {
          "internalType": "address",
          "name": "_allowlistOwner",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_totalSupply",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_address",
          "type": "address"
        }
      ],
      "name": "Unsigned",
      "type": "error"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "Attest",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "IssueWithSignature",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "Revoke",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "RevokeWithSignature",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "_address",
          "type": "address"
        }
      ],
      "name": "Signed",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "_address",
          "type": "address"
        }
      ],
      "name": "Verified",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "addressHash",
          "type": "bytes32"
        },
        {
          "indexed": true,
          "internalType": "bool",
          "name": "result",
          "type": "bool"
        }
      ],
      "name": "VerifySignature",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "_getBaseURI",
      "outputs": [
        {
          "internalType": "string",
          "name": "_baseURI",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        }
      ],
      "name": "balanceOf",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "burn",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "generateTokenURI",
      "outputs": [
        {
          "internalType": "string",
          "name": "_tokenURI",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getAllowlistOwner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_tokenId",
          "type": "uint256"
        }
      ],
      "name": "isMinted",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "addr",
          "type": "address"
        },
        {
          "internalType": "bytes32",
          "name": "hash",
          "type": "bytes32"
        },
        {
          "internalType": "bytes",
          "name": "sig",
          "type": "bytes"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        },
        {
          "internalType": "string",
          "name": "tokenURI",
          "type": "string"
        }
      ],
      "name": "issueWithSignature",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_tokenId",
          "type": "uint256"
        }
      ],
      "name": "issuerOf",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "name",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "ownerOf",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "hash",
          "type": "bytes32"
        },
        {
          "internalType": "bytes",
          "name": "sig",
          "type": "bytes"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "revokeWithSignature",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "caller",
          "type": "address"
        },
        {
          "internalType": "string",
          "name": "_baseURI",
          "type": "string"
        }
      ],
      "name": "setBaseURI",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes4",
          "name": "interfaceId",
          "type": "bytes4"
        }
      ],
      "name": "supportsInterface",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "symbol",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "tokenURI",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "hash",
          "type": "bytes32"
        },
        {
          "internalType": "bytes",
          "name": "sig",
          "type": "bytes"
        }
      ],
      "name": "verifySignature",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_signer",
          "type": "address"
        },
        {
          "internalType": "bytes32",
          "name": "_hash",
          "type": "bytes32"
        },
        {
          "internalType": "bytes",
          "name": "_signature",
          "type": "bytes"
        }
      ],
      "name": "verifySigner",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    }
  ],
  "allSourcePaths": {
    "0": "C:/Users/antho/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.6.0/contracts/access/Ownable.sol",
    "14": "contracts/contracts/packages/common/Allowlist.sol",
    "15": "contracts/contracts/packages/common/IAllowlist.sol",
    "37": "contracts/contracts/packages/soulbound/contracts/Soulbound.sol",
    "38": "contracts/contracts/packages/soulbound/contracts/SoulboundCore.sol",
    "41": "contracts/contracts/packages/soulbound/contracts/eips/ERC-4973.sol",
    "5": "C:/Users/antho/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.6.0/contracts/utils/Context.sol"
  },
  "ast": {
    "absolutePath": "contracts/contracts/packages/soulbound/contracts/SoulboundCore.sol",
    "exportedSymbols": {
      "Allowlist": [
        1120
      ],
      "Context": [
        6410
      ],
      "ERC165": [
        5549
      ],
      "ERC4973": [
        5876
      ],
      "IAllowlist": [
        1161
      ],
      "IERC165": [
        5528
      ],
      "IERC4973": [
        5605
      ],
      "IERC721Metadata": [
        5567
      ],
      "ISoulbond": [
        5970
      ],
      "Ownable": [
        6075
      ],
      "Soulbound": [
        4383
      ],
      "SoulboundCore": [
        4708
      ]
    },
    "id": 4709,
    "license": "GPL-3.0",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 4385,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".8"
        ],
        "nodeType": "PragmaDirective",
        "src": "429:23:38"
      },
      {
        "absolutePath": "contracts/contracts/packages/soulbound/contracts/Soulbound.sol",
        "file": "./Soulbound.sol",
        "id": 4386,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 4709,
        "sourceUnit": 4384,
        "src": "454:25:38",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "contracts/contracts/packages/common/Allowlist.sol",
        "file": "../../common/Allowlist.sol",
        "id": 4387,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 4709,
        "sourceUnit": 1121,
        "src": "480:36:38",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "C:/Users/antho/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.6.0/contracts/access/Ownable.sol",
        "file": "@openzeppelin/contracts/access/Ownable.sol",
        "id": 4388,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 4709,
        "sourceUnit": 6076,
        "src": "517:52:38",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 4390,
              "name": "Ownable",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 6075,
              "src": "883:7:38"
            },
            "id": 4391,
            "nodeType": "InheritanceSpecifier",
            "src": "883:7:38"
          },
          {
            "baseName": {
              "id": 4392,
              "name": "Soulbound",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 4383,
              "src": "892:9:38"
            },
            "id": 4393,
            "nodeType": "InheritanceSpecifier",
            "src": "892:9:38"
          },
          {
            "baseName": {
              "id": 4394,
              "name": "Allowlist",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 1120,
              "src": "903:9:38"
            },
            "id": 4395,
            "nodeType": "InheritanceSpecifier",
            "src": "903:9:38"
          }
        ],
        "canonicalName": "SoulboundCore",
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": {
          "id": 4389,
          "nodeType": "StructuredDocumentation",
          "src": "571:285:38",
          "text": " @title Soulbound Core Contract.\n @author Daccred.\n @dev  Soulbound Core template. This contract aims at a soulbound token with\n       capped supply, set by the deployer or defaulted to 1000000.\n       Mints and burns affect the current supply of tokens respectively."
        },
        "fullyImplemented": true,
        "id": 4708,
        "linearizedBaseContracts": [
          4708,
          1120,
          4383,
          6075,
          6410,
          1161,
          5876,
          5605,
          5567,
          5549,
          5528
        ],
        "name": "SoulboundCore",
        "nameLocation": "866:13:38",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "documentation": {
              "id": 4396,
              "nodeType": "StructuredDocumentation",
              "src": "919:68:38",
              "text": "@dev Total supply limit set by deployer or defaulted to 1000000."
            },
            "id": 4398,
            "mutability": "mutable",
            "name": "totalSupply",
            "nameLocation": "1009:11:38",
            "nodeType": "VariableDeclaration",
            "scope": 4708,
            "src": "992:28:38",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 4397,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "992:7:38",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "documentation": {
              "id": 4399,
              "nodeType": "StructuredDocumentation",
              "src": "1026:140:38",
              "text": "@dev    With every issue and revoke, this value\n         increases and reduces.\n         It cannot be GT the TOTAL_SUPPLY."
            },
            "id": 4401,
            "mutability": "mutable",
            "name": "supply",
            "nameLocation": "1188:6:38",
            "nodeType": "VariableDeclaration",
            "scope": 4708,
            "src": "1171:23:38",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 4400,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "1171:7:38",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "internal"
          },
          {
            "anonymous": false,
            "documentation": {
              "id": 4402,
              "nodeType": "StructuredDocumentation",
              "src": "1201:55:38",
              "text": "@dev Emitted when a token is minted from Signature."
            },
            "eventSelector": "79af0e59b31823dd289ceebabc4d63d25f35926b8548e3a084a500c9d4e18556",
            "id": 4408,
            "name": "IssueWithSignature",
            "nameLocation": "1267:18:38",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 4407,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4404,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "to",
                  "nameLocation": "1302:2:38",
                  "nodeType": "VariableDeclaration",
                  "scope": 4408,
                  "src": "1286:18:38",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 4403,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1286:7:38",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 4406,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nameLocation": "1322:7:38",
                  "nodeType": "VariableDeclaration",
                  "scope": 4408,
                  "src": "1306:23:38",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 4405,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1306:7:38",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1285:45:38"
            },
            "src": "1261:70:38"
          },
          {
            "anonymous": false,
            "documentation": {
              "id": 4409,
              "nodeType": "StructuredDocumentation",
              "src": "1336:56:38",
              "text": "@dev Emitted when a token is revoked with Signature."
            },
            "eventSelector": "f947bf2266afede98f27ad2312db8b2a17921852307f979b6f14a2b41fa774bc",
            "id": 4413,
            "name": "RevokeWithSignature",
            "nameLocation": "1403:19:38",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 4412,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4411,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nameLocation": "1439:7:38",
                  "nodeType": "VariableDeclaration",
                  "scope": 4413,
                  "src": "1423:23:38",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 4410,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1423:7:38",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1422:25:38"
            },
            "src": "1397:51:38"
          },
          {
            "body": {
              "id": 4427,
              "nodeType": "Block",
              "src": "1675:91:38",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 4422,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 4419,
                          "name": "_caller",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4416,
                          "src": "1693:7:38",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 4420,
                            "name": "getAllowlistOwner",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 991,
                            "src": "1704:17:38",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                              "typeString": "function () view returns (address)"
                            }
                          },
                          "id": 4421,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1704:19:38",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "1693:30:38",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4e6f7420416c6c6f776c697374204f776e657221",
                        "id": 4423,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1725:22:38",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_6141a88e89b79096d457df761d61ed151b2f288bac5b547a9b168f2a980ee39a",
                          "typeString": "literal_string \"Not Allowlist Owner!\""
                        },
                        "value": "Not Allowlist Owner!"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_6141a88e89b79096d457df761d61ed151b2f288bac5b547a9b168f2a980ee39a",
                          "typeString": "literal_string \"Not Allowlist Owner!\""
                        }
                      ],
                      "id": 4418,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "1685:7:38",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 4424,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1685:63:38",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 4425,
                  "nodeType": "ExpressionStatement",
                  "src": "1685:63:38"
                },
                {
                  "id": 4426,
                  "nodeType": "PlaceholderStatement",
                  "src": "1758:1:38"
                }
              ]
            },
            "documentation": {
              "id": 4414,
              "nodeType": "StructuredDocumentation",
              "src": "1454:171:38",
              "text": " @dev  Security check to require that the address calling a particular\n       function is the allowlistOwner.\n @param _caller Address."
            },
            "id": 4428,
            "name": "onlyAllowlistOwner",
            "nameLocation": "1639:18:38",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 4417,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4416,
                  "mutability": "mutable",
                  "name": "_caller",
                  "nameLocation": "1666:7:38",
                  "nodeType": "VariableDeclaration",
                  "scope": 4428,
                  "src": "1658:15:38",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 4415,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1658:7:38",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1657:17:38"
            },
            "src": "1630:136:38",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 4461,
              "nodeType": "Block",
              "src": "2031:138:38",
              "statements": [
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 4449,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 4447,
                      "name": "_totalSupply",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4437,
                      "src": "2045:12:38",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "hexValue": "30",
                      "id": 4448,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "2061:1:38",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "2045:17:38",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "id": 4459,
                    "nodeType": "Block",
                    "src": "2112:51:38",
                    "statements": [
                      {
                        "expression": {
                          "id": 4457,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 4455,
                            "name": "totalSupply",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4398,
                            "src": "2126:11:38",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 4456,
                            "name": "_totalSupply",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4437,
                            "src": "2140:12:38",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "2126:26:38",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 4458,
                        "nodeType": "ExpressionStatement",
                        "src": "2126:26:38"
                      }
                    ]
                  },
                  "id": 4460,
                  "nodeType": "IfStatement",
                  "src": "2041:122:38",
                  "trueBody": {
                    "id": 4454,
                    "nodeType": "Block",
                    "src": "2064:42:38",
                    "statements": [
                      {
                        "expression": {
                          "id": 4452,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 4450,
                            "name": "totalSupply",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4398,
                            "src": "2078:11:38",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "hexValue": "316536",
                            "id": 4451,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "2092:3:38",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_1000000_by_1",
                              "typeString": "int_const 1000000"
                            },
                            "value": "1e6"
                          },
                          "src": "2078:17:38",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 4453,
                        "nodeType": "ExpressionStatement",
                        "src": "2078:17:38"
                      }
                    ]
                  }
                }
              ]
            },
            "documentation": {
              "id": 4429,
              "nodeType": "StructuredDocumentation",
              "src": "1772:64:38",
              "text": "@dev Deploys the 3 contracts inherited by the SoulboundCore."
            },
            "id": 4462,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [
              {
                "arguments": [
                  {
                    "id": 4440,
                    "name": "name",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 4431,
                    "src": "1990:4:38",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory_ptr",
                      "typeString": "string memory"
                    }
                  },
                  {
                    "id": 4441,
                    "name": "symbol",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 4433,
                    "src": "1996:6:38",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory_ptr",
                      "typeString": "string memory"
                    }
                  }
                ],
                "id": 4442,
                "kind": "baseConstructorSpecifier",
                "modifierName": {
                  "id": 4439,
                  "name": "Soulbound",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 4383,
                  "src": "1980:9:38"
                },
                "nodeType": "ModifierInvocation",
                "src": "1980:23:38"
              },
              {
                "arguments": [
                  {
                    "id": 4444,
                    "name": "_allowlistOwner",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 4435,
                    "src": "2014:15:38",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  }
                ],
                "id": 4445,
                "kind": "baseConstructorSpecifier",
                "modifierName": {
                  "id": 4443,
                  "name": "Allowlist",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 1120,
                  "src": "2004:9:38"
                },
                "nodeType": "ModifierInvocation",
                "src": "2004:26:38"
              }
            ],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 4438,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4431,
                  "mutability": "mutable",
                  "name": "name",
                  "nameLocation": "1876:4:38",
                  "nodeType": "VariableDeclaration",
                  "scope": 4462,
                  "src": "1862:18:38",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 4430,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1862:6:38",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 4433,
                  "mutability": "mutable",
                  "name": "symbol",
                  "nameLocation": "1904:6:38",
                  "nodeType": "VariableDeclaration",
                  "scope": 4462,
                  "src": "1890:20:38",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 4432,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1890:6:38",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 4435,
                  "mutability": "mutable",
                  "name": "_allowlistOwner",
                  "nameLocation": "1928:15:38",
                  "nodeType": "VariableDeclaration",
                  "scope": 4462,
                  "src": "1920:23:38",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 4434,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1920:7:38",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 4437,
                  "mutability": "mutable",
                  "name": "_totalSupply",
                  "nameLocation": "1961:12:38",
                  "nodeType": "VariableDeclaration",
                  "scope": 4462,
                  "src": "1953:20:38",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 4436,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1953:7:38",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1852:127:38"
            },
            "returnParameters": {
              "id": 4446,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2031:0:38"
            },
            "scope": 4708,
            "src": "1841:328:38",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 4521,
              "nodeType": "Block",
              "src": "2975:826:38",
              "statements": [
                {
                  "documentation": "@dev Require that the address is not a zero address.",
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 4482,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 4477,
                          "name": "addr",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4465,
                          "src": "3058:4:38",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 4480,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "3074:1:38",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 4479,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "3066:7:38",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 4478,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "3066:7:38",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 4481,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3066:10:38",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "3058:18:38",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4d696e7420746f207a65726f20616464726573732e",
                        "id": 4483,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3078:23:38",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_b3cd0cc0adee66fdd10c0f21fe5cb0de39672daa3845cfc9b86f6248c4187fe0",
                          "typeString": "literal_string \"Mint to zero address.\""
                        },
                        "value": "Mint to zero address."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_b3cd0cc0adee66fdd10c0f21fe5cb0de39672daa3845cfc9b86f6248c4187fe0",
                          "typeString": "literal_string \"Mint to zero address.\""
                        }
                      ],
                      "id": 4476,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "3050:7:38",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 4484,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3050:52:38",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 4485,
                  "nodeType": "ExpressionStatement",
                  "src": "3050:52:38"
                },
                {
                  "documentation": "@dev    Require that the hash is actually 32 [64 characters]\n         in length.",
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        },
                        "id": 4490,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 4487,
                            "name": "hash",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4467,
                            "src": "3224:4:38",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          "id": 4488,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "length",
                          "nodeType": "MemberAccess",
                          "src": "3224:11:38",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint8",
                            "typeString": "uint8"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "hexValue": "3332",
                          "id": 4489,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "3239:2:38",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_32_by_1",
                            "typeString": "int_const 32"
                          },
                          "value": "32"
                        },
                        "src": "3224:17:38",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "496e76616c696420686173682e",
                        "id": 4491,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3243:15:38",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_2a7fbb30cbfd2c1e85c73eb36daa5eb95b6ba858ce622fc97f840c43ac489678",
                          "typeString": "literal_string \"Invalid hash.\""
                        },
                        "value": "Invalid hash."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_2a7fbb30cbfd2c1e85c73eb36daa5eb95b6ba858ce622fc97f840c43ac489678",
                          "typeString": "literal_string \"Invalid hash.\""
                        }
                      ],
                      "id": 4486,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "3216:7:38",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 4492,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3216:43:38",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 4493,
                  "nodeType": "ExpressionStatement",
                  "src": "3216:43:38"
                },
                {
                  "documentation": "@dev Require the length of the signature is 65.",
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 4498,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 4495,
                            "name": "sig",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4469,
                            "src": "3337:3:38",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            }
                          },
                          "id": 4496,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "length",
                          "nodeType": "MemberAccess",
                          "src": "3337:10:38",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "hexValue": "3635",
                          "id": 4497,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "3351:2:38",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_65_by_1",
                            "typeString": "int_const 65"
                          },
                          "value": "65"
                        },
                        "src": "3337:16:38",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "496e76616c6964207369676e6174757265206c656e677468",
                        "id": 4499,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3355:26:38",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_d0e57016dfcfa997388e3f3d9ad75ea4d5a67a0f23b0489f2cdbaecf3ef0f78c",
                          "typeString": "literal_string \"Invalid signature length\""
                        },
                        "value": "Invalid signature length"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_d0e57016dfcfa997388e3f3d9ad75ea4d5a67a0f23b0489f2cdbaecf3ef0f78c",
                          "typeString": "literal_string \"Invalid signature length\""
                        }
                      ],
                      "id": 4494,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "3329:7:38",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 4500,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3329:53:38",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 4501,
                  "nodeType": "ExpressionStatement",
                  "src": "3329:53:38"
                },
                {
                  "documentation": "@dev    Verifies that the address was actually signed by the\n         allowlistOwner.",
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 4504,
                            "name": "hash",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4467,
                            "src": "3525:4:38",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          {
                            "id": 4505,
                            "name": "sig",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4469,
                            "src": "3531:3:38",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            },
                            {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            }
                          ],
                          "id": 4503,
                          "name": "verifySignature",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1007,
                          "src": "3509:15:38",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_bytes_memory_ptr_$returns$_t_bool_$",
                            "typeString": "function (bytes32,bytes memory) returns (bool)"
                          }
                        },
                        "id": 4506,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3509:26:38",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "48617368206e6f74207369676e6564206279206f776e65722e",
                        "id": 4507,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3537:27:38",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_8bd072bd5dbada9e898e97294da7d3166e68f47eb033c9c4ff00346bc371e6be",
                          "typeString": "literal_string \"Hash not signed by owner.\""
                        },
                        "value": "Hash not signed by owner."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_8bd072bd5dbada9e898e97294da7d3166e68f47eb033c9c4ff00346bc371e6be",
                          "typeString": "literal_string \"Hash not signed by owner.\""
                        }
                      ],
                      "id": 4502,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "3501:7:38",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 4508,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3501:64:38",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 4509,
                  "nodeType": "ExpressionStatement",
                  "src": "3501:64:38"
                },
                {
                  "documentation": "@dev    Mint the tokens to address.\n         [Ref Soulbound.sol].",
                  "expression": {
                    "arguments": [
                      {
                        "id": 4511,
                        "name": "addr",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4465,
                        "src": "3670:4:38",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 4512,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4471,
                        "src": "3676:7:38",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 4513,
                        "name": "tokenURI",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4473,
                        "src": "3685:8:38",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      ],
                      "id": 4510,
                      "name": "issue",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4167,
                      "src": "3664:5:38",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_string_memory_ptr_$returns$_t_bool_$",
                        "typeString": "function (address,uint256,string memory) returns (bool)"
                      }
                    },
                    "id": 4514,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3664:30:38",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 4515,
                  "nodeType": "ExpressionStatement",
                  "src": "3664:30:38"
                },
                {
                  "documentation": "@dev Emit the IssueWithSignature event.",
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 4517,
                        "name": "addr",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4465,
                        "src": "3780:4:38",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 4518,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4471,
                        "src": "3786:7:38",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 4516,
                      "name": "IssueWithSignature",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4408,
                      "src": "3761:18:38",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 4519,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3761:33:38",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 4520,
                  "nodeType": "EmitStatement",
                  "src": "3756:38:38"
                }
              ]
            },
            "documentation": {
              "id": 4463,
              "nodeType": "StructuredDocumentation",
              "src": "2175:627:38",
              "text": " @dev  Mints a particular quantity of tokens to `to`,\n       on the condition that the address has been\n       signed by the allowlistOwner off-chain.\n       This will emit the {MintSoulboundToken} event\n       from the Soulbound.sol.\n @notice Callable by anyone.\n @param addr       Address to mint tokens to.\n @param hash       Hashed message by the allowlistOwner.\n @param sig        Signature, signed by the allowlistOwner.\n @param tokenId    Id of the tokens to mint to the `addr`.\n @param tokenURI   URI of the token to be minted."
            },
            "functionSelector": "c9e4c54d",
            "id": 4522,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "issueWithSignature",
            "nameLocation": "2816:18:38",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 4474,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4465,
                  "mutability": "mutable",
                  "name": "addr",
                  "nameLocation": "2852:4:38",
                  "nodeType": "VariableDeclaration",
                  "scope": 4522,
                  "src": "2844:12:38",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 4464,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2844:7:38",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 4467,
                  "mutability": "mutable",
                  "name": "hash",
                  "nameLocation": "2874:4:38",
                  "nodeType": "VariableDeclaration",
                  "scope": 4522,
                  "src": "2866:12:38",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 4466,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "2866:7:38",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 4469,
                  "mutability": "mutable",
                  "name": "sig",
                  "nameLocation": "2901:3:38",
                  "nodeType": "VariableDeclaration",
                  "scope": 4522,
                  "src": "2888:16:38",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 4468,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "2888:5:38",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 4471,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nameLocation": "2922:7:38",
                  "nodeType": "VariableDeclaration",
                  "scope": 4522,
                  "src": "2914:15:38",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 4470,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2914:7:38",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 4473,
                  "mutability": "mutable",
                  "name": "tokenURI",
                  "nameLocation": "2953:8:38",
                  "nodeType": "VariableDeclaration",
                  "scope": 4522,
                  "src": "2939:22:38",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 4472,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "2939:6:38",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2834:133:38"
            },
            "returnParameters": {
              "id": 4475,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2975:0:38"
            },
            "scope": 4708,
            "src": "2807:994:38",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 4574,
              "nodeType": "Block",
              "src": "4389:812:38",
              "statements": [
                {
                  "documentation": "@dev Require that the token exists.",
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 4534,
                            "name": "tokenId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4529,
                            "src": "4463:7:38",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "id": 4533,
                          "name": "_exists",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 5797,
                          "src": "4455:7:38",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_bool_$",
                            "typeString": "function (uint256) view returns (bool)"
                          }
                        },
                        "id": 4535,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4455:16:38",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "5265766f6b65206f6620696e6578697374656e7420746f6b656e2e",
                        "id": 4536,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4473:29:38",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_a3bfeacbcc0a1d035b2bef35f193769daeb6b660d60698cecf4c107d00719373",
                          "typeString": "literal_string \"Revoke of inexistent token.\""
                        },
                        "value": "Revoke of inexistent token."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_a3bfeacbcc0a1d035b2bef35f193769daeb6b660d60698cecf4c107d00719373",
                          "typeString": "literal_string \"Revoke of inexistent token.\""
                        }
                      ],
                      "id": 4532,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "4447:7:38",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 4537,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4447:56:38",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 4538,
                  "nodeType": "ExpressionStatement",
                  "src": "4447:56:38"
                },
                {
                  "documentation": "@dev    Require that the hash is actually 32 [64 characters]\n         in length.",
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        },
                        "id": 4543,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 4540,
                            "name": "hash",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4525,
                            "src": "4625:4:38",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          "id": 4541,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "length",
                          "nodeType": "MemberAccess",
                          "src": "4625:11:38",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint8",
                            "typeString": "uint8"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "hexValue": "3332",
                          "id": 4542,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "4640:2:38",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_32_by_1",
                            "typeString": "int_const 32"
                          },
                          "value": "32"
                        },
                        "src": "4625:17:38",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "496e76616c696420686173682e",
                        "id": 4544,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4644:15:38",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_2a7fbb30cbfd2c1e85c73eb36daa5eb95b6ba858ce622fc97f840c43ac489678",
                          "typeString": "literal_string \"Invalid hash.\""
                        },
                        "value": "Invalid hash."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_2a7fbb30cbfd2c1e85c73eb36daa5eb95b6ba858ce622fc97f840c43ac489678",
                          "typeString": "literal_string \"Invalid hash.\""
                        }
                      ],
                      "id": 4539,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "4617:7:38",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 4545,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4617:43:38",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 4546,
                  "nodeType": "ExpressionStatement",
                  "src": "4617:43:38"
                },
                {
                  "documentation": "@dev Require the length of the signature is 65.",
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 4551,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 4548,
                            "name": "sig",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4527,
                            "src": "4738:3:38",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            }
                          },
                          "id": 4549,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "length",
                          "nodeType": "MemberAccess",
                          "src": "4738:10:38",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "hexValue": "3635",
                          "id": 4550,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "4752:2:38",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_65_by_1",
                            "typeString": "int_const 65"
                          },
                          "value": "65"
                        },
                        "src": "4738:16:38",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "496e76616c6964207369676e6174757265206c656e677468",
                        "id": 4552,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4756:26:38",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_d0e57016dfcfa997388e3f3d9ad75ea4d5a67a0f23b0489f2cdbaecf3ef0f78c",
                          "typeString": "literal_string \"Invalid signature length\""
                        },
                        "value": "Invalid signature length"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_d0e57016dfcfa997388e3f3d9ad75ea4d5a67a0f23b0489f2cdbaecf3ef0f78c",
                          "typeString": "literal_string \"Invalid signature length\""
                        }
                      ],
                      "id": 4547,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "4730:7:38",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 4553,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4730:53:38",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 4554,
                  "nodeType": "ExpressionStatement",
                  "src": "4730:53:38"
                },
                {
                  "documentation": "@dev    Verifies that the address was actually signed by the\n         allowlistOwner.",
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 4557,
                            "name": "hash",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4525,
                            "src": "4926:4:38",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          {
                            "id": 4558,
                            "name": "sig",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4527,
                            "src": "4932:3:38",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            },
                            {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            }
                          ],
                          "id": 4556,
                          "name": "verifySignature",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1007,
                          "src": "4910:15:38",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_bytes_memory_ptr_$returns$_t_bool_$",
                            "typeString": "function (bytes32,bytes memory) returns (bool)"
                          }
                        },
                        "id": 4559,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4910:26:38",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "48617368206e6f74207369676e6564206279206f776e65722e",
                        "id": 4560,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4938:27:38",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_8bd072bd5dbada9e898e97294da7d3166e68f47eb033c9c4ff00346bc371e6be",
                          "typeString": "literal_string \"Hash not signed by owner.\""
                        },
                        "value": "Hash not signed by owner."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_8bd072bd5dbada9e898e97294da7d3166e68f47eb033c9c4ff00346bc371e6be",
                          "typeString": "literal_string \"Hash not signed by owner.\""
                        }
                      ],
                      "id": 4555,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "4902:7:38",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 4561,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4902:64:38",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 4562,
                  "nodeType": "ExpressionStatement",
                  "src": "4902:64:38"
                },
                {
                  "documentation": "@dev    Mint the tokens to address.\n         [Ref Soulbound.sol].",
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 4565,
                            "name": "tokenId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4529,
                            "src": "5080:7:38",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "id": 4564,
                          "name": "ownerOf",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 5780,
                          "src": "5072:7:38",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$",
                            "typeString": "function (uint256) view returns (address)"
                          }
                        },
                        "id": 4566,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "5072:16:38",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 4567,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4529,
                        "src": "5090:7:38",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 4563,
                      "name": "revoke",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4200,
                      "src": "5065:6:38",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,uint256) returns (bool)"
                      }
                    },
                    "id": 4568,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5065:33:38",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 4569,
                  "nodeType": "ExpressionStatement",
                  "src": "5065:33:38"
                },
                {
                  "documentation": "@dev Emit the RevokeWithSignature event.",
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 4571,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4529,
                        "src": "5186:7:38",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 4570,
                      "name": "RevokeWithSignature",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4413,
                      "src": "5166:19:38",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 4572,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5166:28:38",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 4573,
                  "nodeType": "EmitStatement",
                  "src": "5161:33:38"
                }
              ]
            },
            "documentation": {
              "id": 4523,
              "nodeType": "StructuredDocumentation",
              "src": "3807:462:38",
              "text": " @dev  Revokes the ownership of `tokenId` from the owner.\n       The token must exist and the signature must be signed the\n       allowlistOwner.\n       This emits the {RevokeWithSignature} event.\n @notice Callable by anyone.\n @param hash       Hashed message by the allowlistOwner.\n @param sig        Signature, signed by the allowlistOwner.\n @param tokenId    Id of the token to revoke."
            },
            "functionSelector": "08c92e57",
            "id": 4575,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "revokeWithSignature",
            "nameLocation": "4283:19:38",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 4530,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4525,
                  "mutability": "mutable",
                  "name": "hash",
                  "nameLocation": "4320:4:38",
                  "nodeType": "VariableDeclaration",
                  "scope": 4575,
                  "src": "4312:12:38",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 4524,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "4312:7:38",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 4527,
                  "mutability": "mutable",
                  "name": "sig",
                  "nameLocation": "4347:3:38",
                  "nodeType": "VariableDeclaration",
                  "scope": 4575,
                  "src": "4334:16:38",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 4526,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "4334:5:38",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 4529,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nameLocation": "4368:7:38",
                  "nodeType": "VariableDeclaration",
                  "scope": 4575,
                  "src": "4360:15:38",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 4528,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4360:7:38",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4302:79:38"
            },
            "returnParameters": {
              "id": 4531,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4389:0:38"
            },
            "scope": 4708,
            "src": "4274:927:38",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 4592,
              "nodeType": "Block",
              "src": "5671:68:38",
              "statements": [
                {
                  "documentation": "@dev Set baseURI.",
                  "expression": {
                    "arguments": [
                      {
                        "id": 4589,
                        "name": "_baseURI",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4580,
                        "src": "5723:8:38",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      ],
                      "id": 4588,
                      "name": "_setBaseURI",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4360,
                      "src": "5711:11:38",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (string memory)"
                      }
                    },
                    "id": 4590,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5711:21:38",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 4591,
                  "nodeType": "ExpressionStatement",
                  "src": "5711:21:38"
                }
              ]
            },
            "documentation": {
              "id": 4576,
              "nodeType": "StructuredDocumentation",
              "src": "5207:327:38",
              "text": " @dev  Allows the `caller` (allowlistOwner) to set the baseURI.\n       This is really important when the caller wants to mint\n       Multiple tokens with the same base URI.\n @notice   Callable by the deployer of this contract [DaccredDeployer]\n           and the allowlistOwner."
            },
            "functionSelector": "88433651",
            "id": 4593,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 4583,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 4582,
                  "name": "onlyOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 6017,
                  "src": "5622:9:38"
                },
                "nodeType": "ModifierInvocation",
                "src": "5622:9:38"
              },
              {
                "arguments": [
                  {
                    "id": 4585,
                    "name": "caller",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 4578,
                    "src": "5659:6:38",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  }
                ],
                "id": 4586,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 4584,
                  "name": "onlyAllowlistOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 4428,
                  "src": "5640:18:38"
                },
                "nodeType": "ModifierInvocation",
                "src": "5640:26:38"
              }
            ],
            "name": "setBaseURI",
            "nameLocation": "5548:10:38",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 4581,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4578,
                  "mutability": "mutable",
                  "name": "caller",
                  "nameLocation": "5567:6:38",
                  "nodeType": "VariableDeclaration",
                  "scope": 4593,
                  "src": "5559:14:38",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 4577,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "5559:7:38",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 4580,
                  "mutability": "mutable",
                  "name": "_baseURI",
                  "nameLocation": "5589:8:38",
                  "nodeType": "VariableDeclaration",
                  "scope": 4593,
                  "src": "5575:22:38",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 4579,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "5575:6:38",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5558:40:38"
            },
            "returnParameters": {
              "id": 4587,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5671:0:38"
            },
            "scope": 4708,
            "src": "5539:200:38",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 4627,
              "nodeType": "Block",
              "src": "6256:265:38",
              "statements": [
                {
                  "documentation": "@dev Require baseURI length is not currently 0.",
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 4609,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "arguments": [
                              {
                                "arguments": [],
                                "expression": {
                                  "argumentTypes": [],
                                  "id": 4604,
                                  "name": "_getBaseURI",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 4382,
                                  "src": "6340:11:38",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_internal_view$__$returns$_t_string_memory_ptr_$",
                                    "typeString": "function () view returns (string memory)"
                                  }
                                },
                                "id": 4605,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "6340:13:38",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_string_memory_ptr",
                                  "typeString": "string memory"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_string_memory_ptr",
                                  "typeString": "string memory"
                                }
                              ],
                              "id": 4603,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "6334:5:38",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
                                "typeString": "type(bytes storage pointer)"
                              },
                              "typeName": {
                                "id": 4602,
                                "name": "bytes",
                                "nodeType": "ElementaryTypeName",
                                "src": "6334:5:38",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 4606,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "6334:20:38",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            }
                          },
                          "id": 4607,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "length",
                          "nodeType": "MemberAccess",
                          "src": "6334:27:38",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 4608,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "6365:1:38",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "6334:32:38",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "456d7074792062617365555249",
                        "id": 4610,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "6368:15:38",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_3247d8bc89d36854791dbafe948ddc082d8cf6636c64b41fbbdf5761acfb1e22",
                          "typeString": "literal_string \"Empty baseURI\""
                        },
                        "value": "Empty baseURI"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_3247d8bc89d36854791dbafe948ddc082d8cf6636c64b41fbbdf5761acfb1e22",
                          "typeString": "literal_string \"Empty baseURI\""
                        }
                      ],
                      "id": 4601,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "6326:7:38",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 4611,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6326:58:38",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 4612,
                  "nodeType": "ExpressionStatement",
                  "src": "6326:58:38"
                },
                {
                  "documentation": "@dev Return a packed tokenURI string.",
                  "expression": {
                    "id": 4625,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 4613,
                      "name": "_tokenURI",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4599,
                      "src": "6444:9:38",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string memory"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "arguments": [
                            {
                              "arguments": [],
                              "expression": {
                                "argumentTypes": [],
                                "id": 4618,
                                "name": "_getBaseURI",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 4382,
                                "src": "6480:11:38",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_view$__$returns$_t_string_memory_ptr_$",
                                  "typeString": "function () view returns (string memory)"
                                }
                              },
                              "id": 4619,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "6480:13:38",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_string_memory_ptr",
                                "typeString": "string memory"
                              }
                            },
                            {
                              "arguments": [
                                {
                                  "id": 4621,
                                  "name": "tokenId",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 4596,
                                  "src": "6504:7:38",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                ],
                                "id": 4620,
                                "name": "toString",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 4707,
                                "src": "6495:8:38",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_string_memory_ptr_$",
                                  "typeString": "function (uint256) pure returns (string memory)"
                                }
                              },
                              "id": 4622,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "6495:17:38",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_string_memory_ptr",
                                "typeString": "string memory"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_string_memory_ptr",
                                "typeString": "string memory"
                              },
                              {
                                "typeIdentifier": "t_string_memory_ptr",
                                "typeString": "string memory"
                              }
                            ],
                            "expression": {
                              "id": 4616,
                              "name": "abi",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -1,
                              "src": "6463:3:38",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_abi",
                                "typeString": "abi"
                              }
                            },
                            "id": 4617,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "memberName": "encodePacked",
                            "nodeType": "MemberAccess",
                            "src": "6463:16:38",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                              "typeString": "function () pure returns (bytes memory)"
                            }
                          },
                          "id": 4623,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "6463:50:38",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_memory_ptr",
                            "typeString": "bytes memory"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_bytes_memory_ptr",
                            "typeString": "bytes memory"
                          }
                        ],
                        "id": 4615,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "6456:6:38",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_string_storage_ptr_$",
                          "typeString": "type(string storage pointer)"
                        },
                        "typeName": {
                          "id": 4614,
                          "name": "string",
                          "nodeType": "ElementaryTypeName",
                          "src": "6456:6:38",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 4624,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "6456:58:38",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string memory"
                      }
                    },
                    "src": "6444:70:38",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory_ptr",
                      "typeString": "string memory"
                    }
                  },
                  "id": 4626,
                  "nodeType": "ExpressionStatement",
                  "src": "6444:70:38"
                }
              ]
            },
            "documentation": {
              "id": 4594,
              "nodeType": "StructuredDocumentation",
              "src": "5745:389:38",
              "text": " @dev  Using the `tokenId` passed, it generates a `stringified` tokenURI,\n       packing the baseURI and the current tokenId.\n       Makes use of OpenZeppelin's uint to string function.\n @notice Callable by anyone.\n @param tokenId ID of token whose tokenURI is desired.\n @return _tokenURI TokenURI of the passed tokenId."
            },
            "functionSelector": "210fa96b",
            "id": 4628,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "generateTokenURI",
            "nameLocation": "6148:16:38",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 4597,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4596,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nameLocation": "6173:7:38",
                  "nodeType": "VariableDeclaration",
                  "scope": 4628,
                  "src": "6165:15:38",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 4595,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "6165:7:38",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6164:17:38"
            },
            "returnParameters": {
              "id": 4600,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4599,
                  "mutability": "mutable",
                  "name": "_tokenURI",
                  "nameLocation": "6241:9:38",
                  "nodeType": "VariableDeclaration",
                  "scope": 4628,
                  "src": "6227:23:38",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 4598,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "6227:6:38",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6226:25:38"
            },
            "scope": 4708,
            "src": "6139:382:38",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 4706,
              "nodeType": "Block",
              "src": "6731:632:38",
              "statements": [
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 4638,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 4636,
                      "name": "value",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4631,
                      "src": "6933:5:38",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "hexValue": "30",
                      "id": 4637,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "6942:1:38",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "6933:10:38",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 4642,
                  "nodeType": "IfStatement",
                  "src": "6929:51:38",
                  "trueBody": {
                    "id": 4641,
                    "nodeType": "Block",
                    "src": "6945:35:38",
                    "statements": [
                      {
                        "expression": {
                          "hexValue": "30",
                          "id": 4639,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "string",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "6966:3:38",
                          "typeDescriptions": {
                            "typeIdentifier": "t_stringliteral_044852b2a670ade5407e78fb2863c51de9fcb96542a07186fe3aeda6bb8a116d",
                            "typeString": "literal_string \"0\""
                          },
                          "value": "0"
                        },
                        "functionReturnParameters": 4635,
                        "id": 4640,
                        "nodeType": "Return",
                        "src": "6959:10:38"
                      }
                    ]
                  }
                },
                {
                  "assignments": [
                    4644
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 4644,
                      "mutability": "mutable",
                      "name": "temp",
                      "nameLocation": "6997:4:38",
                      "nodeType": "VariableDeclaration",
                      "scope": 4706,
                      "src": "6989:12:38",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 4643,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "6989:7:38",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 4646,
                  "initialValue": {
                    "id": 4645,
                    "name": "value",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 4631,
                    "src": "7004:5:38",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "6989:20:38"
                },
                {
                  "assignments": [
                    4648
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 4648,
                      "mutability": "mutable",
                      "name": "digits",
                      "nameLocation": "7027:6:38",
                      "nodeType": "VariableDeclaration",
                      "scope": 4706,
                      "src": "7019:14:38",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 4647,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "7019:7:38",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 4649,
                  "nodeType": "VariableDeclarationStatement",
                  "src": "7019:14:38"
                },
                {
                  "body": {
                    "id": 4660,
                    "nodeType": "Block",
                    "src": "7061:57:38",
                    "statements": [
                      {
                        "expression": {
                          "id": 4654,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "UnaryOperation",
                          "operator": "++",
                          "prefix": false,
                          "src": "7075:8:38",
                          "subExpression": {
                            "id": 4653,
                            "name": "digits",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4648,
                            "src": "7075:6:38",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 4655,
                        "nodeType": "ExpressionStatement",
                        "src": "7075:8:38"
                      },
                      {
                        "expression": {
                          "id": 4658,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 4656,
                            "name": "temp",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4644,
                            "src": "7097:4:38",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "/=",
                          "rightHandSide": {
                            "hexValue": "3130",
                            "id": 4657,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "7105:2:38",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_10_by_1",
                              "typeString": "int_const 10"
                            },
                            "value": "10"
                          },
                          "src": "7097:10:38",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 4659,
                        "nodeType": "ExpressionStatement",
                        "src": "7097:10:38"
                      }
                    ]
                  },
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 4652,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 4650,
                      "name": "temp",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4644,
                      "src": "7050:4:38",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "!=",
                    "rightExpression": {
                      "hexValue": "30",
                      "id": 4651,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "7058:1:38",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "7050:9:38",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 4661,
                  "nodeType": "WhileStatement",
                  "src": "7043:75:38"
                },
                {
                  "assignments": [
                    4663
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 4663,
                      "mutability": "mutable",
                      "name": "buffer",
                      "nameLocation": "7140:6:38",
                      "nodeType": "VariableDeclaration",
                      "scope": 4706,
                      "src": "7127:19:38",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes_memory_ptr",
                        "typeString": "bytes"
                      },
                      "typeName": {
                        "id": 4662,
                        "name": "bytes",
                        "nodeType": "ElementaryTypeName",
                        "src": "7127:5:38",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_storage_ptr",
                          "typeString": "bytes"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 4668,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 4666,
                        "name": "digits",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4648,
                        "src": "7159:6:38",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 4665,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "NewExpression",
                      "src": "7149:9:38",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_bytes_memory_ptr_$",
                        "typeString": "function (uint256) pure returns (bytes memory)"
                      },
                      "typeName": {
                        "id": 4664,
                        "name": "bytes",
                        "nodeType": "ElementaryTypeName",
                        "src": "7153:5:38",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_storage_ptr",
                          "typeString": "bytes"
                        }
                      }
                    },
                    "id": 4667,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7149:17:38",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_memory_ptr",
                      "typeString": "bytes memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "7127:39:38"
                },
                {
                  "body": {
                    "id": 4699,
                    "nodeType": "Block",
                    "src": "7195:131:38",
                    "statements": [
                      {
                        "expression": {
                          "id": 4674,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 4672,
                            "name": "digits",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4648,
                            "src": "7209:6:38",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "-=",
                          "rightHandSide": {
                            "hexValue": "31",
                            "id": 4673,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "7219:1:38",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_1_by_1",
                              "typeString": "int_const 1"
                            },
                            "value": "1"
                          },
                          "src": "7209:11:38",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 4675,
                        "nodeType": "ExpressionStatement",
                        "src": "7209:11:38"
                      },
                      {
                        "expression": {
                          "id": 4693,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "baseExpression": {
                              "id": 4676,
                              "name": "buffer",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4663,
                              "src": "7234:6:38",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            },
                            "id": 4678,
                            "indexExpression": {
                              "id": 4677,
                              "name": "digits",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4648,
                              "src": "7241:6:38",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "7234:14:38",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes1",
                              "typeString": "bytes1"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "commonType": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    },
                                    "id": 4690,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "leftExpression": {
                                      "hexValue": "3438",
                                      "id": 4683,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "kind": "number",
                                      "lValueRequested": false,
                                      "nodeType": "Literal",
                                      "src": "7264:2:38",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_rational_48_by_1",
                                        "typeString": "int_const 48"
                                      },
                                      "value": "48"
                                    },
                                    "nodeType": "BinaryOperation",
                                    "operator": "+",
                                    "rightExpression": {
                                      "arguments": [
                                        {
                                          "commonType": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          },
                                          "id": 4688,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "leftExpression": {
                                            "id": 4686,
                                            "name": "value",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 4631,
                                            "src": "7277:5:38",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_uint256",
                                              "typeString": "uint256"
                                            }
                                          },
                                          "nodeType": "BinaryOperation",
                                          "operator": "%",
                                          "rightExpression": {
                                            "hexValue": "3130",
                                            "id": 4687,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": true,
                                            "kind": "number",
                                            "lValueRequested": false,
                                            "nodeType": "Literal",
                                            "src": "7285:2:38",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_rational_10_by_1",
                                              "typeString": "int_const 10"
                                            },
                                            "value": "10"
                                          },
                                          "src": "7277:10:38",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        }
                                      ],
                                      "expression": {
                                        "argumentTypes": [
                                          {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        ],
                                        "id": 4685,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "lValueRequested": false,
                                        "nodeType": "ElementaryTypeNameExpression",
                                        "src": "7269:7:38",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_type$_t_uint256_$",
                                          "typeString": "type(uint256)"
                                        },
                                        "typeName": {
                                          "id": 4684,
                                          "name": "uint256",
                                          "nodeType": "ElementaryTypeName",
                                          "src": "7269:7:38",
                                          "typeDescriptions": {}
                                        }
                                      },
                                      "id": 4689,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "kind": "typeConversion",
                                      "lValueRequested": false,
                                      "names": [],
                                      "nodeType": "FunctionCall",
                                      "src": "7269:19:38",
                                      "tryCall": false,
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "src": "7264:24:38",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  ],
                                  "id": 4682,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "nodeType": "ElementaryTypeNameExpression",
                                  "src": "7258:5:38",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_uint8_$",
                                    "typeString": "type(uint8)"
                                  },
                                  "typeName": {
                                    "id": 4681,
                                    "name": "uint8",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "7258:5:38",
                                    "typeDescriptions": {}
                                  }
                                },
                                "id": 4691,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "typeConversion",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "7258:31:38",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint8",
                                  "typeString": "uint8"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_uint8",
                                  "typeString": "uint8"
                                }
                              ],
                              "id": 4680,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "7251:6:38",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_bytes1_$",
                                "typeString": "type(bytes1)"
                              },
                              "typeName": {
                                "id": 4679,
                                "name": "bytes1",
                                "nodeType": "ElementaryTypeName",
                                "src": "7251:6:38",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 4692,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "7251:39:38",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes1",
                              "typeString": "bytes1"
                            }
                          },
                          "src": "7234:56:38",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes1",
                            "typeString": "bytes1"
                          }
                        },
                        "id": 4694,
                        "nodeType": "ExpressionStatement",
                        "src": "7234:56:38"
                      },
                      {
                        "expression": {
                          "id": 4697,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 4695,
                            "name": "value",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4631,
                            "src": "7304:5:38",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "/=",
                          "rightHandSide": {
                            "hexValue": "3130",
                            "id": 4696,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "7313:2:38",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_10_by_1",
                              "typeString": "int_const 10"
                            },
                            "value": "10"
                          },
                          "src": "7304:11:38",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 4698,
                        "nodeType": "ExpressionStatement",
                        "src": "7304:11:38"
                      }
                    ]
                  },
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 4671,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 4669,
                      "name": "value",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4631,
                      "src": "7183:5:38",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "!=",
                    "rightExpression": {
                      "hexValue": "30",
                      "id": 4670,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "7192:1:38",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "7183:10:38",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 4700,
                  "nodeType": "WhileStatement",
                  "src": "7176:150:38"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 4703,
                        "name": "buffer",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4663,
                        "src": "7349:6:38",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "id": 4702,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "ElementaryTypeNameExpression",
                      "src": "7342:6:38",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_string_storage_ptr_$",
                        "typeString": "type(string storage pointer)"
                      },
                      "typeName": {
                        "id": 4701,
                        "name": "string",
                        "nodeType": "ElementaryTypeName",
                        "src": "7342:6:38",
                        "typeDescriptions": {}
                      }
                    },
                    "id": 4704,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7342:14:38",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory_ptr",
                      "typeString": "string memory"
                    }
                  },
                  "functionReturnParameters": 4635,
                  "id": 4705,
                  "nodeType": "Return",
                  "src": "7335:21:38"
                }
              ]
            },
            "documentation": {
              "id": 4629,
              "nodeType": "StructuredDocumentation",
              "src": "6527:128:38",
              "text": " @dev Converts a `uint256` to its ASCII `string` decimal representation.\n      Copied from OpenZeppelin."
            },
            "id": 4707,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "toString",
            "nameLocation": "6669:8:38",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 4632,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4631,
                  "mutability": "mutable",
                  "name": "value",
                  "nameLocation": "6686:5:38",
                  "nodeType": "VariableDeclaration",
                  "scope": 4707,
                  "src": "6678:13:38",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 4630,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "6678:7:38",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6677:15:38"
            },
            "returnParameters": {
              "id": 4635,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4634,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 4707,
                  "src": "6716:13:38",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 4633,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "6716:6:38",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6715:15:38"
            },
            "scope": 4708,
            "src": "6660:703:38",
            "stateMutability": "pure",
            "virtual": false,
            "visibility": "internal"
          }
        ],
        "scope": 4709,
        "src": "857:6508:38",
        "usedErrors": [
          1138
        ]
      }
    ],
    "src": "429:6937:38"
  },
  "bytecode": "60806040523480156200001157600080fd5b5060405162001e6838038062001e6883398101604081905262000034916200022d565b818484818160006200004783826200034f565b5060016200005682826200034f565b505050620000736200006d6200010a60201b60201c565b6200010e565b50506001600160a01b038116620000c35760405162461bcd60e51b815260206004820152601060248201526f24b73b30b634b21020b2323932b9b99760811b604482015260640160405180910390fd5b600880546001600160a01b0319166001600160a01b03929092169190911790556000819003620000fa57620f424060095562000100565b60098190555b505050506200041b565b3390565b600580546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b634e487b7160e01b600052604160045260246000fd5b600082601f8301126200018857600080fd5b81516001600160401b0380821115620001a557620001a562000160565b604051601f8301601f19908116603f01168101908282118183101715620001d057620001d062000160565b81604052838152602092508683858801011115620001ed57600080fd5b600091505b83821015620002115785820183015181830184015290820190620001f2565b83821115620002235760008385830101525b9695505050505050565b600080600080608085870312156200024457600080fd5b84516001600160401b03808211156200025c57600080fd5b6200026a8883890162000176565b955060208701519150808211156200028157600080fd5b50620002908782880162000176565b604087015190945090506001600160a01b0381168114620002b057600080fd5b6060959095015193969295505050565b600181811c90821680620002d557607f821691505b602082108103620002f657634e487b7160e01b600052602260045260246000fd5b50919050565b601f8211156200034a57600081815260208120601f850160051c81016020861015620003255750805b601f850160051c820191505b81811015620003465782815560010162000331565b5050505b505050565b81516001600160401b038111156200036b576200036b62000160565b62000383816200037c8454620002c0565b84620002fc565b602080601f831160018114620003bb5760008415620003a25750858301515b600019600386901b1c1916600185901b17855562000346565b600085815260208120601f198616915b82811015620003ec57888601518255948401946001909101908401620003cb565b50858210156200040b5787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b611a3d806200042b6000396000f3fe608060405234801561001057600080fd5b506004361061012c5760003560e01c806388433651116100ad578063c9e4c54d11610071578063c9e4c54d1461028e578063daca6f78146102a1578063e92b0842146102b4578063f2fde38b146102c7578063fb8f198d146102da57600080fd5b806388433651146102475780638da5cb5b1461025a57806395d89b411461026b578063c87b56dd14610273578063c9dd94c71461028657600080fd5b80635899e7b2116100f45780635899e7b2146101a95780636352211e146101e25780636e0a87461461020d57806370a082311461021e578063715018a61461023f57600080fd5b806301ffc9a71461013157806306fdde031461015957806308c92e571461016e578063210fa96b1461018357806342966c6814610196575b600080fd5b61014461013f366004611451565b6102ed565b60405190151581526020015b60405180910390f35b61016161033f565b60405161015091906114ab565b61018161017c366004611581565b6103d1565b005b6101616101913660046115d1565b61050c565b6101816101a43660046115d1565b61058e565b6101446101b7366004611606565b6001600160a01b03919091166000908152600760209081526040808320938352929052205460ff1690565b6101f56101f03660046115d1565b610603565b6040516001600160a01b039091168152602001610150565b6008546001600160a01b03166101f5565b61023161022c366004611630565b610668565b604051908152602001610150565b6101816106f1565b61018161025536600461164b565b610727565b6005546001600160a01b03166101f5565b6101616107c9565b6101616102813660046115d1565b6107d8565b6101616108cd565b61018161029c366004611699565b61092a565b6101446102af366004611721565b610a5f565b6101446102c2366004611752565b610a72565b6101816102d5366004611630565b610b06565b6101f56102e8366004611606565b610b9e565b60006001600160e01b03198216635b5e139f60e01b148061031e57506001600160e01b03198216635164cf4760e01b145b8061033957506301ffc9a760e01b6001600160e01b03198316145b92915050565b60606000805461034e906117a9565b80601f016020809104026020016040519081016040528092919081815260200182805461037a906117a9565b80156103c75780601f1061039c576101008083540402835291602001916103c7565b820191906000526020600020905b8154815290600101906020018083116103aa57829003601f168201915b5050505050905090565b6103da81610cb2565b61042b5760405162461bcd60e51b815260206004820152601b60248201527f5265766f6b65206f6620696e6578697374656e7420746f6b656e2e000000000060448201526064015b60405180910390fd5b81516041146104775760405162461bcd60e51b8152602060048201526018602482015277092dcecc2d8d2c840e6d2cedcc2e8eae4ca40d8cadccee8d60431b6044820152606401610422565b6104818383610a5f565b6104c95760405162461bcd60e51b81526020600482015260196024820152782430b9b4103737ba1039b4b3b732b210313c9037bbb732b91760391b6044820152606401610422565b6104db6104d582610603565b82610ccf565b5060405181907ff947bf2266afede98f27ad2312db8b2a17921852307f979b6f14a2b41fa774bc90600090a2505050565b60606105166108cd565b516000036105565760405162461bcd60e51b815260206004820152600d60248201526c456d707479206261736555524960981b6044820152606401610422565b61055e6108cd565b61056783610d97565b6040516020016105789291906117e3565b6040516020818303038152906040529050919050565b61059781610603565b6001600160a01b0316336001600160a01b0316146105f75760405162461bcd60e51b815260206004820152601a60248201527f6275726e3a2073656e646572206d757374206265206f776e65720000000000006044820152606401610422565b61060081610ea0565b50565b6000818152600260205260408120546001600160a01b0316806103395760405162461bcd60e51b815260206004820152601c60248201527f6f776e65724f663a20746f6b656e20646f65736e2774206578697374000000006044820152606401610422565b60006001600160a01b0382166106d55760405162461bcd60e51b815260206004820152602c60248201527f62616c616e63654f663a2061646472657373207a65726f206973206e6f74206160448201526b103b30b634b21037bbb732b960a11b6064820152608401610422565b506001600160a01b031660009081526004602052604090205490565b6005546001600160a01b0316331461071b5760405162461bcd60e51b815260040161042290611812565b6107256000610f47565b565b6005546001600160a01b031633146107515760405162461bcd60e51b815260040161042290611812565b816107646008546001600160a01b031690565b6001600160a01b0316816001600160a01b0316146107bb5760405162461bcd60e51b81526020600482015260146024820152734e6f7420416c6c6f776c697374204f776e65722160601b6044820152606401610422565b6107c482610f99565b505050565b60606001805461034e906117a9565b60606107e382610cb2565b61082f5760405162461bcd60e51b815260206004820152601d60248201527f746f6b656e5552493a20746f6b656e20646f65736e27742065786973740000006044820152606401610422565b60008281526003602052604090208054610848906117a9565b80601f0160208091040260200160405190810160405280929190818152602001828054610874906117a9565b80156108c15780601f10610896576101008083540402835291602001916108c1565b820191906000526020600020905b8154815290600101906020018083116108a457829003601f168201915b50505050509050919050565b6060600680546108dc906117a9565b905060000361091d5760405162461bcd60e51b815260206004820152600d60248201526c456d707479206261736555524960981b6044820152606401610422565b6006805461034e906117a9565b6001600160a01b0385166109785760405162461bcd60e51b815260206004820152601560248201527426b4b73a103a37903d32b9379030b2323932b9b99760591b6044820152606401610422565b82516041146109c45760405162461bcd60e51b8152602060048201526018602482015277092dcecc2d8d2c840e6d2cedcc2e8eae4ca40d8cadccee8d60431b6044820152606401610422565b6109ce8484610a5f565b610a165760405162461bcd60e51b81526020600482015260196024820152782430b9b4103737ba1039b4b3b732b210313c9037bbb732b91760391b6044820152606401610422565b610a21858383610feb565b5060405182906001600160a01b038716907f79af0e59b31823dd289ceebabc4d63d25f35926b8548e3a084a500c9d4e1855690600090a35050505050565b6000610a6b8383611002565b9392505050565b602081810151604080840151606080860151835160008082528188018087528a905291821a81860181905292810186905260808101849052935190959293919260019260a080820193601f1981019281900390910190855afa158015610adc573d6000803e3d6000fd5b505050602060405103516001600160a01b0316876001600160a01b03161493505050509392505050565b6005546001600160a01b03163314610b305760405162461bcd60e51b815260040161042290611812565b6001600160a01b038116610b955760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b6064820152608401610422565b61060081610f47565b60006001600160a01b038316610bf65760405162461bcd60e51b815260206004820152601760248201527f517565727920666f72207a65726f20616464726573732e0000000000000000006044820152606401610422565b610bff82610cb2565b610c415760405162461bcd60e51b81526020600482015260136024820152722737b716b2bc34b9ba32b73a103a37b5b2b71760691b6044820152606401610422565b826001600160a01b0316610c5483610603565b6001600160a01b031614610caa5760405162461bcd60e51b815260206004820152601a60248201527f546f6b656e206e6f74206f776e656420627920616464726573730000000000006044820152606401610422565b503092915050565b6000908152600260205260409020546001600160a01b0316151590565b6000610cda82610cb2565b610d1c5760405162461bcd60e51b81526020600482015260136024820152722737b716b2bc34b9ba32b73a103a37b5b2b71760691b6044820152606401610422565b826001600160a01b0316610d2f83610603565b6001600160a01b031614610d855760405162461bcd60e51b815260206004820152601a60248201527f546f6b656e206e6f74206f776e656420627920616464726573730000000000006044820152606401610422565b610d8e826111a8565b50600192915050565b606081600003610dbe5750506040805180820190915260018152600360fc1b602082015290565b8160005b8115610de85780610dd28161185d565b9150610de19050600a8361188c565b9150610dc2565b60008167ffffffffffffffff811115610e0357610e036114de565b6040519080825280601f01601f191660200182016040528015610e2d576020820181803683370190505b5090505b8415610e9857610e426001836118a0565b9150610e4f600a866118b7565b610e5a9060306118cb565b60f81b818381518110610e6f57610e6f6118e3565b60200101906001600160f81b031916908160001a905350610e91600a8661188c565b9450610e31565b949350505050565b6000610eab82610603565b6001600160a01b03811660009081526004602052604081208054929350600192909190610ed99084906118a0565b9091555050600082815260026020908152604080832080546001600160a01b031916905560039091528120610f0d91611403565b60405182906001600160a01b038316907fec9ab91322523c899ede7830ec9bfc992b5981cdcc27b91162fb23de5791117b90600090a35050565b600580546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b8051600003610fdb5760405162461bcd60e51b815260206004820152600e60248201526d092dcecc2d8d2c840d8cadccee8d60931b6044820152606401610422565b6006610fe78282611947565b5050565b6000610ff884848461123e565b5060019392505050565b6005546000906001600160a01b0316331461102f5760405162461bcd60e51b815260040161042290611812565b6005546001600160a01b0316331461109d5760405162461bcd60e51b815260206004820152602b60248201527f4552433732313a3a2043616c6c20746f20636f6e7472616374206d616465206260448201526a3c903737b716b7bbb732b960a91b6064820152608401610422565b81516041146110ee5760405162461bcd60e51b815260206004820152601e60248201527f4572723a3a20496e76616c6964207369676e6174757265206c656e67746800006044820152606401610422565b602082810151604080850151606080870151835160008082529681018086528a905290861a938101849052908101849052608081018290529293909260019060a0016020604051602081039080840390855afa158015611152573d6000803e3d6000fd5b5050604051601f198101516008549093506001600160a01b038085169116149150819089907f7e4fe2a2a805a357593fdbdde58c02f6a53d8b4960744cd31a98697fc11c2e3690600090a3979650505050505050565b6111b181610cb2565b6111fd5760405162461bcd60e51b815260206004820152601860248201527f4275726e206f6620696e6578697374656e7420746f6b656e00000000000000006044820152606401610422565b600061120882610603565b905061121382610ea0565b6001600160a01b0316600090815260076020908152604080832093835292905220805460ff19169055565b6001600160a01b03831661128c5760405162461bcd60e51b815260206004820152601560248201527426b4b73a103a37903d32b9379030b2323932b9b99760591b6044820152606401610422565b80516000036112cf5760405162461bcd60e51b815260206004820152600f60248201526e22b6b83a3c903a37b5b2b72aa9249760891b6044820152606401610422565b6112da83838361130c565b50506001600160a01b03909116600090815260076020908152604080832093835292905220805460ff19166001179055565b600061131783610cb2565b1561135b5760405162461bcd60e51b81526020600482015260146024820152736d696e743a20746f6b656e49442065786973747360601b6044820152606401610422565b6001600160a01b03841660009081526004602052604081208054600192906113849084906118cb565b9091555050600083815260026020908152604080832080546001600160a01b0319166001600160a01b038916179055600390915290206113c48382611947565b5060405183906001600160a01b038616907fe9274a84b19e9428826de6bae8c48329354f8f0e73f771b97cae2d9dccd45a2790600090a3509092915050565b50805461140f906117a9565b6000825580601f1061141f575050565b601f01602090049060005260206000209081019061060091905b8082111561144d5760008155600101611439565b5090565b60006020828403121561146357600080fd5b81356001600160e01b031981168114610a6b57600080fd5b60005b8381101561149657818101518382015260200161147e565b838111156114a5576000848401525b50505050565b60208152600082518060208401526114ca81604085016020870161147b565b601f01601f19169190910160400192915050565b634e487b7160e01b600052604160045260246000fd5b600082601f83011261150557600080fd5b813567ffffffffffffffff80821115611520576115206114de565b604051601f8301601f19908116603f01168101908282118183101715611548576115486114de565b8160405283815286602085880101111561156157600080fd5b836020870160208301376000602085830101528094505050505092915050565b60008060006060848603121561159657600080fd5b83359250602084013567ffffffffffffffff8111156115b457600080fd5b6115c0868287016114f4565b925050604084013590509250925092565b6000602082840312156115e357600080fd5b5035919050565b80356001600160a01b038116811461160157600080fd5b919050565b6000806040838503121561161957600080fd5b611622836115ea565b946020939093013593505050565b60006020828403121561164257600080fd5b610a6b826115ea565b6000806040838503121561165e57600080fd5b611667836115ea565b9150602083013567ffffffffffffffff81111561168357600080fd5b61168f858286016114f4565b9150509250929050565b600080600080600060a086880312156116b157600080fd5b6116ba866115ea565b945060208601359350604086013567ffffffffffffffff808211156116de57600080fd5b6116ea89838a016114f4565b945060608801359350608088013591508082111561170757600080fd5b50611714888289016114f4565b9150509295509295909350565b6000806040838503121561173457600080fd5b82359150602083013567ffffffffffffffff81111561168357600080fd5b60008060006060848603121561176757600080fd5b611770846115ea565b925060208401359150604084013567ffffffffffffffff81111561179357600080fd5b61179f868287016114f4565b9150509250925092565b600181811c908216806117bd57607f821691505b6020821081036117dd57634e487b7160e01b600052602260045260246000fd5b50919050565b600083516117f581846020880161147b565b83519083019061180981836020880161147b565b01949350505050565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b634e487b7160e01b600052601160045260246000fd5b60006001820161186f5761186f611847565b5060010190565b634e487b7160e01b600052601260045260246000fd5b60008261189b5761189b611876565b500490565b6000828210156118b2576118b2611847565b500390565b6000826118c6576118c6611876565b500690565b600082198211156118de576118de611847565b500190565b634e487b7160e01b600052603260045260246000fd5b601f8211156107c457600081815260208120601f850160051c810160208610156119205750805b601f850160051c820191505b8181101561193f5782815560010161192c565b505050505050565b815167ffffffffffffffff811115611961576119616114de565b6119758161196f84546117a9565b846118f9565b602080601f8311600181146119aa57600084156119925750858301515b600019600386901b1c1916600185901b17855561193f565b600085815260208120601f198616915b828110156119d9578886015182559484019460019091019084016119ba565b50858210156119f75787850151600019600388901b60f8161c191681555b5050505050600190811b0190555056fea2646970667358221220a6ba1299b8bafdbc484d9107ecb85dcee755c4800dcce4ee4ee0da29e3f434f764736f6c634300080f0033",
  "bytecodeSha1": "333764c9d3663004bd705297770b3d2c6716ca21",
  "compiler": {
    "evm_version": "istanbul",
    "optimizer": {
      "enabled": true,
      "runs": 200
    },
    "version": "0.8.15+commit.e14f2714"
  },
  "contractName": "SoulboundCore",
  "coverageMap": {
    "branches": {
      "0": {
        "Ownable.transferOwnership": {
          "93": [
            2006,
            2028,
            true
          ]
        }
      },
      "14": {
        "Allowlist._verifySignature": {
          "87": [
            3897,
            3920,
            true
          ],
          "88": [
            4067,
            4083,
            true
          ]
        }
      },
      "15": {},
      "37": {
        "Soulbound._getBaseURI": {
          "94": [
            7561,
            7587,
            true
          ]
        },
        "Soulbound._setBaseURI": {
          "100": [
            7152,
            7179,
            true
          ]
        },
        "Soulbound.burnSoulboundToken": {
          "101": [
            6564,
            6580,
            true
          ]
        },
        "Soulbound.issuerOf": {
          "95": [
            4479,
            4496,
            true
          ],
          "96": [
            4581,
            4598,
            true
          ],
          "97": [
            4691,
            4715,
            true
          ]
        },
        "Soulbound.mintSoulboundToken": {
          "102": [
            5816,
            5832,
            true
          ],
          "103": [
            5998,
            6025,
            true
          ]
        },
        "Soulbound.revoke": {
          "98": [
            3468,
            3485,
            true
          ],
          "99": [
            3580,
            3606,
            true
          ]
        }
      },
      "38": {
        "Allowlist.getAllowlistOwner": {
          "82": [
            1693,
            1723,
            true
          ]
        },
        "SoulboundCore.generateTokenURI": {
          "81": [
            6334,
            6366,
            true
          ]
        },
        "SoulboundCore.issueWithSignature": {
          "83": [
            3058,
            3076,
            true
          ],
          "84": [
            3337,
            3353,
            true
          ],
          "85": [
            3509,
            3535,
            true
          ]
        },
        "SoulboundCore.revokeWithSignature": {
          "78": [
            4455,
            4471,
            true
          ],
          "79": [
            4738,
            4754,
            true
          ],
          "80": [
            4910,
            4936,
            true
          ]
        },
        "SoulboundCore.toString": {
          "86": [
            6933,
            6943,
            false
          ]
        }
      },
      "41": {
        "ERC4973._mint": {
          "92": [
            6201,
            6218,
            true
          ]
        },
        "ERC4973.balanceOf": {
          "90": [
            5570,
            5589,
            true
          ]
        },
        "ERC4973.burn": {
          "89": [
            5316,
            5346,
            true
          ]
        },
        "ERC4973.tokenURI": {
          "91": [
            5144,
            5160,
            true
          ]
        }
      },
      "5": {}
    },
    "statements": {
      "0": {
        "Ownable._transferOwnership": {
          "55": [
            2378,
            2395
          ],
          "56": [
            2405,
            2450
          ]
        },
        "Ownable.owner": {
          "2": [
            1101,
            1114
          ]
        },
        "Ownable.renounceOwnership": {
          "19": [
            1732,
            1762
          ]
        },
        "Ownable.transferOwnership": {
          "33": [
            1998,
            2071
          ],
          "34": [
            2081,
            2109
          ]
        }
      },
      "14": {
        "Allowlist._verifySignature": {
          "61": [
            3876,
            3989
          ],
          "62": [
            4059,
            4118
          ],
          "63": [
            4545,
            4595
          ],
          "64": [
            4641,
            4670
          ]
        },
        "Allowlist.getAllowlistOwner": {
          "1": [
            2240,
            2261
          ]
        },
        "Allowlist.verifySignature": {
          "31": [
            2604,
            2638
          ]
        },
        "Allowlist.verifySigner": {
          "32": [
            5068,
            5113
          ]
        }
      },
      "15": {},
      "37": {
        "Soulbound._getBaseURI": {
          "24": [
            7553,
            7605
          ],
          "25": [
            7648,
            7666
          ]
        },
        "Soulbound._setBaseURI": {
          "57": [
            7144,
            7198
          ],
          "58": [
            7238,
            7256
          ]
        },
        "Soulbound.burnSoulboundToken": {
          "65": [
            6556,
            6609
          ],
          "66": [
            6745,
            6759
          ],
          "67": [
            6816,
            6851
          ]
        },
        "Soulbound.isMinted": {
          "0": [
            5339,
            5366
          ]
        },
        "Soulbound.issue": {
          "59": [
            2400,
            2443
          ],
          "60": [
            2483,
            2494
          ]
        },
        "Soulbound.issuerOf": {
          "35": [
            4471,
            4524
          ],
          "36": [
            4573,
            4622
          ],
          "37": [
            4683,
            4746
          ],
          "38": [
            4795,
            4815
          ]
        },
        "Soulbound.mintSoulboundToken": {
          "68": [
            5808,
            5858
          ],
          "69": [
            5990,
            6045
          ],
          "70": [
            6160,
            6188
          ],
          "71": [
            6244,
            6269
          ]
        },
        "Soulbound.revoke": {
          "40": [
            3460,
            3509
          ],
          "41": [
            3572,
            3637
          ],
          "42": [
            3680,
            3708
          ],
          "43": [
            3748,
            3759
          ]
        }
      },
      "38": {
        "SoulboundCore.generateTokenURI": {
          "11": [
            6326,
            6384
          ],
          "12": [
            6444,
            6514
          ]
        },
        "SoulboundCore.issueWithSignature": {
          "26": [
            3050,
            3102
          ],
          "27": [
            3329,
            3382
          ],
          "28": [
            3501,
            3565
          ],
          "29": [
            3664,
            3694
          ],
          "30": [
            3756,
            3794
          ]
        },
        "SoulboundCore.revokeWithSignature": {
          "6": [
            4447,
            4503
          ],
          "7": [
            4730,
            4783
          ],
          "8": [
            4902,
            4966
          ],
          "9": [
            5065,
            5098
          ],
          "10": [
            5161,
            5194
          ]
        },
        "SoulboundCore.setBaseURI": {
          "20": [
            5711,
            5732
          ]
        },
        "SoulboundCore.toString": {
          "44": [
            6959,
            6969
          ],
          "45": [
            7075,
            7083
          ],
          "46": [
            7097,
            7107
          ],
          "47": [
            7209,
            7220
          ],
          "48": [
            7234,
            7290
          ],
          "49": [
            7304,
            7315
          ],
          "50": [
            7335,
            7356
          ]
        }
      },
      "41": {
        "ERC165.supportsInterface": {
          "4": [
            1750,
            1797
          ]
        },
        "ERC4973._burn": {
          "51": [
            6510,
            6531
          ],
          "52": [
            6541,
            6564
          ],
          "53": [
            6574,
            6600
          ],
          "54": [
            6611,
            6638
          ]
        },
        "ERC4973._exists": {
          "39": [
            6005,
            6042
          ]
        },
        "ERC4973._mint": {
          "72": [
            6193,
            6243
          ],
          "73": [
            6253,
            6271
          ],
          "74": [
            6281,
            6302
          ],
          "75": [
            6312,
            6337
          ],
          "76": [
            6347,
            6371
          ],
          "77": [
            6381,
            6395
          ]
        },
        "ERC4973.balanceOf": {
          "16": [
            5549,
            5659
          ],
          "17": [
            5669,
            5692
          ]
        },
        "ERC4973.burn": {
          "13": [
            5308,
            5377
          ],
          "14": [
            5387,
            5401
          ]
        },
        "ERC4973.name": {
          "5": [
            4861,
            4873
          ]
        },
        "ERC4973.ownerOf": {
          "15": [
            5829,
            5889
          ]
        },
        "ERC4973.supportsInterface": {
          "3": [
            4593,
            4769
          ]
        },
        "ERC4973.symbol": {
          "21": [
            4967,
            4981
          ]
        },
        "ERC4973.tokenURI": {
          "22": [
            5136,
            5194
          ],
          "23": [
            5204,
            5230
          ]
        }
      },
      "5": {
        "Context._msgSender": {
          "18": [
            712,
            729
          ]
        }
      }
    }
  },
  "dependencies": [
    "Allowlist",
    "OpenZeppelin/openzeppelin-contracts@4.6.0/Context",
    "ERC165",
    "ERC4973",
    "IAllowlist",
    "IERC165",
    "IERC4973",
    "IERC721Metadata",
    "OpenZeppelin/openzeppelin-contracts@4.6.0/Ownable",
    "Soulbound"
  ],
  "deployedBytecode": "608060405234801561001057600080fd5b506004361061012c5760003560e01c806388433651116100ad578063c9e4c54d11610071578063c9e4c54d1461028e578063daca6f78146102a1578063e92b0842146102b4578063f2fde38b146102c7578063fb8f198d146102da57600080fd5b806388433651146102475780638da5cb5b1461025a57806395d89b411461026b578063c87b56dd14610273578063c9dd94c71461028657600080fd5b80635899e7b2116100f45780635899e7b2146101a95780636352211e146101e25780636e0a87461461020d57806370a082311461021e578063715018a61461023f57600080fd5b806301ffc9a71461013157806306fdde031461015957806308c92e571461016e578063210fa96b1461018357806342966c6814610196575b600080fd5b61014461013f366004611451565b6102ed565b60405190151581526020015b60405180910390f35b61016161033f565b60405161015091906114ab565b61018161017c366004611581565b6103d1565b005b6101616101913660046115d1565b61050c565b6101816101a43660046115d1565b61058e565b6101446101b7366004611606565b6001600160a01b03919091166000908152600760209081526040808320938352929052205460ff1690565b6101f56101f03660046115d1565b610603565b6040516001600160a01b039091168152602001610150565b6008546001600160a01b03166101f5565b61023161022c366004611630565b610668565b604051908152602001610150565b6101816106f1565b61018161025536600461164b565b610727565b6005546001600160a01b03166101f5565b6101616107c9565b6101616102813660046115d1565b6107d8565b6101616108cd565b61018161029c366004611699565b61092a565b6101446102af366004611721565b610a5f565b6101446102c2366004611752565b610a72565b6101816102d5366004611630565b610b06565b6101f56102e8366004611606565b610b9e565b60006001600160e01b03198216635b5e139f60e01b148061031e57506001600160e01b03198216635164cf4760e01b145b8061033957506301ffc9a760e01b6001600160e01b03198316145b92915050565b60606000805461034e906117a9565b80601f016020809104026020016040519081016040528092919081815260200182805461037a906117a9565b80156103c75780601f1061039c576101008083540402835291602001916103c7565b820191906000526020600020905b8154815290600101906020018083116103aa57829003601f168201915b5050505050905090565b6103da81610cb2565b61042b5760405162461bcd60e51b815260206004820152601b60248201527f5265766f6b65206f6620696e6578697374656e7420746f6b656e2e000000000060448201526064015b60405180910390fd5b81516041146104775760405162461bcd60e51b8152602060048201526018602482015277092dcecc2d8d2c840e6d2cedcc2e8eae4ca40d8cadccee8d60431b6044820152606401610422565b6104818383610a5f565b6104c95760405162461bcd60e51b81526020600482015260196024820152782430b9b4103737ba1039b4b3b732b210313c9037bbb732b91760391b6044820152606401610422565b6104db6104d582610603565b82610ccf565b5060405181907ff947bf2266afede98f27ad2312db8b2a17921852307f979b6f14a2b41fa774bc90600090a2505050565b60606105166108cd565b516000036105565760405162461bcd60e51b815260206004820152600d60248201526c456d707479206261736555524960981b6044820152606401610422565b61055e6108cd565b61056783610d97565b6040516020016105789291906117e3565b6040516020818303038152906040529050919050565b61059781610603565b6001600160a01b0316336001600160a01b0316146105f75760405162461bcd60e51b815260206004820152601a60248201527f6275726e3a2073656e646572206d757374206265206f776e65720000000000006044820152606401610422565b61060081610ea0565b50565b6000818152600260205260408120546001600160a01b0316806103395760405162461bcd60e51b815260206004820152601c60248201527f6f776e65724f663a20746f6b656e20646f65736e2774206578697374000000006044820152606401610422565b60006001600160a01b0382166106d55760405162461bcd60e51b815260206004820152602c60248201527f62616c616e63654f663a2061646472657373207a65726f206973206e6f74206160448201526b103b30b634b21037bbb732b960a11b6064820152608401610422565b506001600160a01b031660009081526004602052604090205490565b6005546001600160a01b0316331461071b5760405162461bcd60e51b815260040161042290611812565b6107256000610f47565b565b6005546001600160a01b031633146107515760405162461bcd60e51b815260040161042290611812565b816107646008546001600160a01b031690565b6001600160a01b0316816001600160a01b0316146107bb5760405162461bcd60e51b81526020600482015260146024820152734e6f7420416c6c6f776c697374204f776e65722160601b6044820152606401610422565b6107c482610f99565b505050565b60606001805461034e906117a9565b60606107e382610cb2565b61082f5760405162461bcd60e51b815260206004820152601d60248201527f746f6b656e5552493a20746f6b656e20646f65736e27742065786973740000006044820152606401610422565b60008281526003602052604090208054610848906117a9565b80601f0160208091040260200160405190810160405280929190818152602001828054610874906117a9565b80156108c15780601f10610896576101008083540402835291602001916108c1565b820191906000526020600020905b8154815290600101906020018083116108a457829003601f168201915b50505050509050919050565b6060600680546108dc906117a9565b905060000361091d5760405162461bcd60e51b815260206004820152600d60248201526c456d707479206261736555524960981b6044820152606401610422565b6006805461034e906117a9565b6001600160a01b0385166109785760405162461bcd60e51b815260206004820152601560248201527426b4b73a103a37903d32b9379030b2323932b9b99760591b6044820152606401610422565b82516041146109c45760405162461bcd60e51b8152602060048201526018602482015277092dcecc2d8d2c840e6d2cedcc2e8eae4ca40d8cadccee8d60431b6044820152606401610422565b6109ce8484610a5f565b610a165760405162461bcd60e51b81526020600482015260196024820152782430b9b4103737ba1039b4b3b732b210313c9037bbb732b91760391b6044820152606401610422565b610a21858383610feb565b5060405182906001600160a01b038716907f79af0e59b31823dd289ceebabc4d63d25f35926b8548e3a084a500c9d4e1855690600090a35050505050565b6000610a6b8383611002565b9392505050565b602081810151604080840151606080860151835160008082528188018087528a905291821a81860181905292810186905260808101849052935190959293919260019260a080820193601f1981019281900390910190855afa158015610adc573d6000803e3d6000fd5b505050602060405103516001600160a01b0316876001600160a01b03161493505050509392505050565b6005546001600160a01b03163314610b305760405162461bcd60e51b815260040161042290611812565b6001600160a01b038116610b955760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b6064820152608401610422565b61060081610f47565b60006001600160a01b038316610bf65760405162461bcd60e51b815260206004820152601760248201527f517565727920666f72207a65726f20616464726573732e0000000000000000006044820152606401610422565b610bff82610cb2565b610c415760405162461bcd60e51b81526020600482015260136024820152722737b716b2bc34b9ba32b73a103a37b5b2b71760691b6044820152606401610422565b826001600160a01b0316610c5483610603565b6001600160a01b031614610caa5760405162461bcd60e51b815260206004820152601a60248201527f546f6b656e206e6f74206f776e656420627920616464726573730000000000006044820152606401610422565b503092915050565b6000908152600260205260409020546001600160a01b0316151590565b6000610cda82610cb2565b610d1c5760405162461bcd60e51b81526020600482015260136024820152722737b716b2bc34b9ba32b73a103a37b5b2b71760691b6044820152606401610422565b826001600160a01b0316610d2f83610603565b6001600160a01b031614610d855760405162461bcd60e51b815260206004820152601a60248201527f546f6b656e206e6f74206f776e656420627920616464726573730000000000006044820152606401610422565b610d8e826111a8565b50600192915050565b606081600003610dbe5750506040805180820190915260018152600360fc1b602082015290565b8160005b8115610de85780610dd28161185d565b9150610de19050600a8361188c565b9150610dc2565b60008167ffffffffffffffff811115610e0357610e036114de565b6040519080825280601f01601f191660200182016040528015610e2d576020820181803683370190505b5090505b8415610e9857610e426001836118a0565b9150610e4f600a866118b7565b610e5a9060306118cb565b60f81b818381518110610e6f57610e6f6118e3565b60200101906001600160f81b031916908160001a905350610e91600a8661188c565b9450610e31565b949350505050565b6000610eab82610603565b6001600160a01b03811660009081526004602052604081208054929350600192909190610ed99084906118a0565b9091555050600082815260026020908152604080832080546001600160a01b031916905560039091528120610f0d91611403565b60405182906001600160a01b038316907fec9ab91322523c899ede7830ec9bfc992b5981cdcc27b91162fb23de5791117b90600090a35050565b600580546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b8051600003610fdb5760405162461bcd60e51b815260206004820152600e60248201526d092dcecc2d8d2c840d8cadccee8d60931b6044820152606401610422565b6006610fe78282611947565b5050565b6000610ff884848461123e565b5060019392505050565b6005546000906001600160a01b0316331461102f5760405162461bcd60e51b815260040161042290611812565b6005546001600160a01b0316331461109d5760405162461bcd60e51b815260206004820152602b60248201527f4552433732313a3a2043616c6c20746f20636f6e7472616374206d616465206260448201526a3c903737b716b7bbb732b960a91b6064820152608401610422565b81516041146110ee5760405162461bcd60e51b815260206004820152601e60248201527f4572723a3a20496e76616c6964207369676e6174757265206c656e67746800006044820152606401610422565b602082810151604080850151606080870151835160008082529681018086528a905290861a938101849052908101849052608081018290529293909260019060a0016020604051602081039080840390855afa158015611152573d6000803e3d6000fd5b5050604051601f198101516008549093506001600160a01b038085169116149150819089907f7e4fe2a2a805a357593fdbdde58c02f6a53d8b4960744cd31a98697fc11c2e3690600090a3979650505050505050565b6111b181610cb2565b6111fd5760405162461bcd60e51b815260206004820152601860248201527f4275726e206f6620696e6578697374656e7420746f6b656e00000000000000006044820152606401610422565b600061120882610603565b905061121382610ea0565b6001600160a01b0316600090815260076020908152604080832093835292905220805460ff19169055565b6001600160a01b03831661128c5760405162461bcd60e51b815260206004820152601560248201527426b4b73a103a37903d32b9379030b2323932b9b99760591b6044820152606401610422565b80516000036112cf5760405162461bcd60e51b815260206004820152600f60248201526e22b6b83a3c903a37b5b2b72aa9249760891b6044820152606401610422565b6112da83838361130c565b50506001600160a01b03909116600090815260076020908152604080832093835292905220805460ff19166001179055565b600061131783610cb2565b1561135b5760405162461bcd60e51b81526020600482015260146024820152736d696e743a20746f6b656e49442065786973747360601b6044820152606401610422565b6001600160a01b03841660009081526004602052604081208054600192906113849084906118cb565b9091555050600083815260026020908152604080832080546001600160a01b0319166001600160a01b038916179055600390915290206113c48382611947565b5060405183906001600160a01b038616907fe9274a84b19e9428826de6bae8c48329354f8f0e73f771b97cae2d9dccd45a2790600090a3509092915050565b50805461140f906117a9565b6000825580601f1061141f575050565b601f01602090049060005260206000209081019061060091905b8082111561144d5760008155600101611439565b5090565b60006020828403121561146357600080fd5b81356001600160e01b031981168114610a6b57600080fd5b60005b8381101561149657818101518382015260200161147e565b838111156114a5576000848401525b50505050565b60208152600082518060208401526114ca81604085016020870161147b565b601f01601f19169190910160400192915050565b634e487b7160e01b600052604160045260246000fd5b600082601f83011261150557600080fd5b813567ffffffffffffffff80821115611520576115206114de565b604051601f8301601f19908116603f01168101908282118183101715611548576115486114de565b8160405283815286602085880101111561156157600080fd5b836020870160208301376000602085830101528094505050505092915050565b60008060006060848603121561159657600080fd5b83359250602084013567ffffffffffffffff8111156115b457600080fd5b6115c0868287016114f4565b925050604084013590509250925092565b6000602082840312156115e357600080fd5b5035919050565b80356001600160a01b038116811461160157600080fd5b919050565b6000806040838503121561161957600080fd5b611622836115ea565b946020939093013593505050565b60006020828403121561164257600080fd5b610a6b826115ea565b6000806040838503121561165e57600080fd5b611667836115ea565b9150602083013567ffffffffffffffff81111561168357600080fd5b61168f858286016114f4565b9150509250929050565b600080600080600060a086880312156116b157600080fd5b6116ba866115ea565b945060208601359350604086013567ffffffffffffffff808211156116de57600080fd5b6116ea89838a016114f4565b945060608801359350608088013591508082111561170757600080fd5b50611714888289016114f4565b9150509295509295909350565b6000806040838503121561173457600080fd5b82359150602083013567ffffffffffffffff81111561168357600080fd5b60008060006060848603121561176757600080fd5b611770846115ea565b925060208401359150604084013567ffffffffffffffff81111561179357600080fd5b61179f868287016114f4565b9150509250925092565b600181811c908216806117bd57607f821691505b6020821081036117dd57634e487b7160e01b600052602260045260246000fd5b50919050565b600083516117f581846020880161147b565b83519083019061180981836020880161147b565b01949350505050565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b634e487b7160e01b600052601160045260246000fd5b60006001820161186f5761186f611847565b5060010190565b634e487b7160e01b600052601260045260246000fd5b60008261189b5761189b611876565b500490565b6000828210156118b2576118b2611847565b500390565b6000826118c6576118c6611876565b500690565b600082198211156118de576118de611847565b500190565b634e487b7160e01b600052603260045260246000fd5b601f8211156107c457600081815260208120601f850160051c810160208610156119205750805b601f850160051c820191505b8181101561193f5782815560010161192c565b505050505050565b815167ffffffffffffffff811115611961576119616114de565b6119758161196f84546117a9565b846118f9565b602080601f8311600181146119aa57600084156119925750858301515b600019600386901b1c1916600185901b17855561193f565b600085815260208120601f198616915b828110156119d9578886015182559484019460019091019084016119ba565b50858210156119f75787850151600019600388901b60f8161c191681555b5050505050600190811b0190555056fea2646970667358221220a6ba1299b8bafdbc484d9107ecb85dcee755c4800dcce4ee4ee0da29e3f434f764736f6c634300080f0033",
  "deployedSourceMap": "857:6508:38:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4448:328:41;;;;;;:::i;:::-;;:::i;:::-;;;470:14:43;;463:22;445:41;;433:2;418:18;4448:328:41;;;;;;;;4782:98;;;:::i;:::-;;;;;;;:::i;4274:927:38:-;;;;;;:::i;:::-;;:::i;:::-;;6139:382;;;;;;:::i;:::-;;:::i;5243:165:41:-;;;;;;:::i;:::-;;:::i;5225:148:37:-;;;;;;:::i;:::-;-1:-1:-1;;;;;5346:10:37;;;;5319:4;5346:10;;;:5;:10;;;;;;;;:20;;;;;;;;;;;5225:148;5705:213:41;;;;;;:::i;:::-;;:::i;:::-;;;-1:-1:-1;;;;;3250:32:43;;;3232:51;;3220:2;3205:18;5705:213:41;3086:203:43;2171:97:14;2247:14;;-1:-1:-1;;;;;2247:14:14;2171:97;;5414:285:41;;;;;;:::i;:::-;;:::i;:::-;;;3631:25:43;;;3619:2;3604:18;5414:285:41;3485:177:43;1668:101:0;;;:::i;5539:200:38:-;;;;;;:::i;:::-;;:::i;1036:85:0:-;1108:6;;-1:-1:-1;;;;;1108:6:0;1036:85;;4886:102:41;;;:::i;4994:243::-;;;;;;:::i;:::-;;:::i;7425:248:37:-;;;:::i;2807:994:38:-;;;;;;:::i;:::-;;:::i;2495:150:14:-;;;;;;:::i;:::-;;:::i;4852:268::-;;;;;;:::i;:::-;;:::i;1918:198:0:-;;;;;;:::i;:::-;;:::i;4302:520:37:-;;;;;;:::i;:::-;;:::i;4448:328:41:-;4573:4;-1:-1:-1;;;;;;4612:48:41;;-1:-1:-1;;;4612:48:41;;:105;;-1:-1:-1;;;;;;;4676:41:41;;-1:-1:-1;;;4676:41:41;4612:105;:157;;;-1:-1:-1;;;;;;;;;;1757:40:41;;;4733:36;4593:176;4448:328;-1:-1:-1;;4448:328:41:o;4782:98::-;4836:13;4868:5;4861:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4782:98;:::o;4274:927:38:-;4455:16;4463:7;4455;:16::i;:::-;4447:56;;;;-1:-1:-1;;;4447:56:38;;6271:2:43;4447:56:38;;;6253:21:43;6310:2;6290:18;;;6283:30;6349:29;6329:18;;;6322:57;6396:18;;4447:56:38;;;;;;;;;4738:3;:10;4752:2;4738:16;4730:53;;;;-1:-1:-1;;;4730:53:38;;6969:2:43;4730:53:38;;;6951:21:43;7008:2;6988:18;;;6981:30;-1:-1:-1;;;7027:18:43;;;7020:54;7091:18;;4730:53:38;6767:348:43;4730:53:38;4910:26;4926:4;4932:3;4910:15;:26::i;:::-;4902:64;;;;-1:-1:-1;;;4902:64:38;;7322:2:43;4902:64:38;;;7304:21:43;7361:2;7341:18;;;7334:30;-1:-1:-1;;;7380:18:43;;;7373:55;7445:18;;4902:64:38;7120:349:43;4902:64:38;5065:33;5072:16;5080:7;5072;:16::i;:::-;5090:7;5065:6;:33::i;:::-;-1:-1:-1;5166:28:38;;5186:7;;5166:28;;;;;4274:927;;;:::o;6139:382::-;6227:23;6340:13;:11;:13::i;:::-;6334:27;6365:1;6334:32;6326:58;;;;-1:-1:-1;;;6326:58:38;;7676:2:43;6326:58:38;;;7658:21:43;7715:2;7695:18;;;7688:30;-1:-1:-1;;;7734:18:43;;;7727:43;7787:18;;6326:58:38;7474:337:43;6326:58:38;6480:13;:11;:13::i;:::-;6495:17;6504:7;6495:8;:17::i;:::-;6463:50;;;;;;;;;:::i;:::-;;;;;;;;;;;;;6444:70;;6139:382;;;:::o;5243:165:41:-;5330:16;5338:7;5330;:16::i;:::-;-1:-1:-1;;;;;5316:30:41;:10;-1:-1:-1;;;;;5316:30:41;;5308:69;;;;-1:-1:-1;;;5308:69:41;;8493:2:43;5308:69:41;;;8475:21:43;8532:2;8512:18;;;8505:30;8571:28;8551:18;;;8544:56;8617:18;;5308:69:41;8291:350:43;5308:69:41;5387:14;5393:7;5387:5;:14::i;:::-;5243:165;:::o;5705:213::-;5768:7;5803:16;;;:7;:16;;;;;;-1:-1:-1;;;;;5803:16:41;;5829:60;;;;-1:-1:-1;;;5829:60:41;;8848:2:43;5829:60:41;;;8830:21:43;8887:2;8867:18;;;8860:30;8926;8906:18;;;8899:58;8974:18;;5829:60:41;8646:352:43;5414:285:41;5526:7;-1:-1:-1;;;;;5570:19:41;;5549:110;;;;-1:-1:-1;;;5549:110:41;;9205:2:43;5549:110:41;;;9187:21:43;9244:2;9224:18;;;9217:30;9283:34;9263:18;;;9256:62;-1:-1:-1;;;9334:18:43;;;9327:42;9386:19;;5549:110:41;9003:408:43;5549:110:41;-1:-1:-1;;;;;;5676:16:41;;;;;:9;:16;;;;;;;5414:285::o;1668:101:0:-;1108:6;;-1:-1:-1;;;;;1108:6:0;719:10:5;1248:23:0;1240:68;;;;-1:-1:-1;;;1240:68:0;;;;;;;:::i;:::-;1732:30:::1;1759:1;1732:18;:30::i;:::-;1668:101::o:0;5539:200:38:-;1108:6:0;;-1:-1:-1;;;;;1108:6:0;719:10:5;1248:23:0;1240:68;;;;-1:-1:-1;;;1240:68:0;;;;;;;:::i;:::-;5659:6:38::1;1704:19;2247:14:14::0;;-1:-1:-1;;;;;2247:14:14;;2171:97;1704:19:38::1;-1:-1:-1::0;;;;;1693:30:38::1;:7;-1:-1:-1::0;;;;;1693:30:38::1;;1685:63;;;::::0;-1:-1:-1;;;1685:63:38;;9979:2:43;1685:63:38::1;::::0;::::1;9961:21:43::0;10018:2;9998:18;;;9991:30;-1:-1:-1;;;10037:18:43;;;10030:50;10097:18;;1685:63:38::1;9777:344:43::0;1685:63:38::1;5711:21:::2;5723:8;5711:11;:21::i;:::-;1318:1:0::1;5539:200:38::0;;:::o;4886:102:41:-;4942:13;4974:7;4967:14;;;;;:::i;4994:243::-;5107:13;5144:16;5152:7;5144;:16::i;:::-;5136:58;;;;-1:-1:-1;;;5136:58:41;;10328:2:43;5136:58:41;;;10310:21:43;10367:2;10347:18;;;10340:30;10406:31;10386:18;;;10379:59;10455:18;;5136:58:41;10126:353:43;5136:58:41;5211:19;;;;:10;:19;;;;;5204:26;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4994:243;;;:::o;7425:248:37:-;7469:22;7567:7;7561:21;;;;;:::i;:::-;;;7586:1;7561:26;7553:52;;;;-1:-1:-1;;;7553:52:37;;7676:2:43;7553:52:37;;;7658:21:43;7715:2;7695:18;;;7688:30;-1:-1:-1;;;7734:18:43;;;7727:43;7787:18;;7553:52:37;7474:337:43;7553:52:37;7659:7;7648:18;;;;;:::i;2807:994:38:-;-1:-1:-1;;;;;3058:18:38;;3050:52;;;;-1:-1:-1;;;3050:52:38;;10686:2:43;3050:52:38;;;10668:21:43;10725:2;10705:18;;;10698:30;-1:-1:-1;;;10744:18:43;;;10737:51;10805:18;;3050:52:38;10484:345:43;3050:52:38;3337:3;:10;3351:2;3337:16;3329:53;;;;-1:-1:-1;;;3329:53:38;;6969:2:43;3329:53:38;;;6951:21:43;7008:2;6988:18;;;6981:30;-1:-1:-1;;;7027:18:43;;;7020:54;7091:18;;3329:53:38;6767:348:43;3329:53:38;3509:26;3525:4;3531:3;3509:15;:26::i;:::-;3501:64;;;;-1:-1:-1;;;3501:64:38;;7322:2:43;3501:64:38;;;7304:21:43;7361:2;7341:18;;;7334:30;-1:-1:-1;;;7380:18:43;;;7373:55;7445:18;;3501:64:38;7120:349:43;3501:64:38;3664:30;3670:4;3676:7;3685:8;3664:5;:30::i;:::-;-1:-1:-1;3761:33:38;;3786:7;;-1:-1:-1;;;;;3761:33:38;;;;;;;;2807:994;;;;;:::o;2495:150:14:-;2584:4;2611:27;2628:4;2634:3;2611:16;:27::i;:::-;2604:34;2495:150;-1:-1:-1;;;2495:150:14:o;4852:268::-;6067:2;6058:12;;;6052:19;6142:2;6133:12;;;6127:19;6254:2;6245:12;;;6239:19;5087:25;;4982:4;5087:25;;;;;;;;;11061::43;;;6231:28:14;;;11102:18:43;;;11095:45;;;11156:18;;;11149:34;;;11199:18;;;11192:34;;;5087:25:14;;4982:4;;6127:19;;6231:28;;5087:25;;11033:19:43;;;;;-1:-1:-1;;5087:25:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;5076:36:14;:7;-1:-1:-1;;;;;5076:36:14;;5068:45;;;;;4852:268;;;;;:::o;1918:198:0:-;1108:6;;-1:-1:-1;;;;;1108:6:0;719:10:5;1248:23:0;1240:68;;;;-1:-1:-1;;;1240:68:0;;;;;;;:::i;:::-;-1:-1:-1;;;;;2006:22:0;::::1;1998:73;;;::::0;-1:-1:-1;;;1998:73:0;;11439:2:43;1998:73:0::1;::::0;::::1;11421:21:43::0;11478:2;11458:18;;;11451:30;11517:34;11497:18;;;11490:62;-1:-1:-1;;;11568:18:43;;;11561:36;11614:19;;1998:73:0::1;11237:402:43::0;1998:73:0::1;2081:28;2100:8;2081:18;:28::i;4302:520:37:-:0;4396:7;-1:-1:-1;;;;;4479:17:37;;4471:53;;;;-1:-1:-1;;;4471:53:37;;11846:2:43;4471:53:37;;;11828:21:43;11885:2;11865:18;;;11858:30;11924:25;11904:18;;;11897:53;11967:18;;4471:53:37;11644:347:43;4471:53:37;4581:17;4589:8;4581:7;:17::i;:::-;4573:49;;;;-1:-1:-1;;;4573:49:37;;12198:2:43;4573:49:37;;;12180:21:43;12237:2;12217:18;;;12210:30;-1:-1:-1;;;12256:18:43;;;12249:49;12315:18;;4573:49:37;11996:343:43;4573:49:37;4712:3;-1:-1:-1;;;;;4691:24:37;:17;4699:8;4691:7;:17::i;:::-;-1:-1:-1;;;;;4691:24:37;;4683:63;;;;-1:-1:-1;;;4683:63:37;;12546:2:43;4683:63:37;;;12528:21:43;12585:2;12565:18;;;12558:30;12624:28;12604:18;;;12597:56;12670:18;;4683:63:37;12344:350:43;4683:63:37;-1:-1:-1;4810:4:37;4302:520;;;;:::o;5924:125:41:-;5989:4;6012:16;;;:7;:16;;;;;;-1:-1:-1;;;;;6012:16:41;:30;;;5924:125::o;3338:428:37:-;3405:4;3468:17;3476:8;3468:7;:17::i;:::-;3460:49;;;;-1:-1:-1;;;3460:49:37;;12198:2:43;3460:49:37;;;12180:21:43;12237:2;12217:18;;;12210:30;-1:-1:-1;;;12256:18:43;;;12249:49;12315:18;;3460:49:37;11996:343:43;3460:49:37;3601:5;-1:-1:-1;;;;;3580:26:37;:17;3588:8;3580:7;:17::i;:::-;-1:-1:-1;;;;;3580:26:37;;3572:65;;;;-1:-1:-1;;;3572:65:37;;12546:2:43;3572:65:37;;;12528:21:43;12585:2;12565:18;;;12558:30;12624:28;12604:18;;;12597:56;12670:18;;3572:65:37;12344:350:43;3572:65:37;3680:28;3699:8;3680:18;:28::i;:::-;-1:-1:-1;3755:4:37;3338:428;;;;:::o;6660:703:38:-;6716:13;6933:5;6942:1;6933:10;6929:51;;-1:-1:-1;;6959:10:38;;;;;;;;;;;;-1:-1:-1;;;6959:10:38;;;;;6660:703::o;6929:51::-;7004:5;6989:12;7043:75;7050:9;;7043:75;;7075:8;;;;:::i;:::-;;-1:-1:-1;7097:10:38;;-1:-1:-1;7105:2:38;7097:10;;:::i;:::-;;;7043:75;;;7127:19;7159:6;7149:17;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;7149:17:38;;7127:39;;7176:150;7183:10;;7176:150;;7209:11;7219:1;7209:11;;:::i;:::-;;-1:-1:-1;7277:10:38;7285:2;7277:5;:10;:::i;:::-;7264:24;;:2;:24;:::i;:::-;7251:39;;7234:6;7241;7234:14;;;;;;;;:::i;:::-;;;;:56;-1:-1:-1;;;;;7234:56:38;;;;;;;;-1:-1:-1;7304:11:38;7313:2;7304:11;;:::i;:::-;;;7176:150;;;7349:6;6660:703;-1:-1:-1;;;;6660:703:38:o;6408:237:41:-;6467:13;6483:16;6491:7;6483;:16::i;:::-;-1:-1:-1;;;;;6510:16:41;;;;;;:9;:16;;;;;:21;;6467:32;;-1:-1:-1;6530:1:41;;6510:16;;;:21;;6530:1;;6510:21;:::i;:::-;;;;-1:-1:-1;;6548:16:41;;;;:7;:16;;;;;;;;6541:23;;-1:-1:-1;;;;;;6541:23:41;;;6581:10;:19;;;;;6574:26;;;:::i;:::-;6616:22;;6630:7;;-1:-1:-1;;;;;6616:22:41;;;;;;;;6457:188;6408:237;:::o;2270:187:0:-;2362:6;;;-1:-1:-1;;;;;2378:17:0;;;-1:-1:-1;;;;;;2378:17:0;;;;;;;2410:40;;2362:6;;;2378:17;2362:6;;2410:40;;2343:16;;2410:40;2333:124;2270:187;:::o;7029:234:37:-;7158:8;7152:22;7178:1;7152:27;7144:54;;;;-1:-1:-1;;;7144:54:37;;13942:2:43;7144:54:37;;;13924:21:43;13981:2;13961:18;;;13954:30;-1:-1:-1;;;14000:18:43;;;13993:44;14054:18;;7144:54:37;13740:338:43;7144:54:37;7238:7;:18;7248:8;7238:7;:18;:::i;:::-;;7029:234;:::o;2196:305::-;2314:4;2400:43;2419:3;2424:8;2434;2400:18;:43::i;:::-;-1:-1:-1;2490:4:37;2196:305;;;;;:::o;3622:1055:14:-;1108:6:0;;3732:4:14;;-1:-1:-1;;;;;1108:6:0;719:10:5;1248:23:0;1240:68;;;;-1:-1:-1;;;1240:68:0;;;;;;;:::i;:::-;1108:6;;-1:-1:-1;;;;;1108:6:0;719:10:5;3897:23:14::1;3876:113;;;::::0;-1:-1:-1;;;3876:113:14;;16489:2:43;3876:113:14::1;::::0;::::1;16471:21:43::0;16528:2;16508:18;;;16501:30;16567:34;16547:18;;;16540:62;-1:-1:-1;;;16618:18:43;;;16611:41;16669:19;;3876:113:14::1;16287:407:43::0;3876:113:14::1;4067:3;:10;4081:2;4067:16;4059:59;;;::::0;-1:-1:-1;;;4059:59:14;;16901:2:43;4059:59:14::1;::::0;::::1;16883:21:43::0;16940:2;16920:18;;;16913:30;16979:32;16959:18;;;16952:60;17029:18;;4059:59:14::1;16699:354:43::0;4059:59:14::1;6067:2:::0;6058:12;;;6052:19;6142:2;6133:12;;;6127:19;6254:2;6245:12;;;6239:19;4331:24;;4197:9:::1;4331:24:::0;;;;;::::1;::::0;;;11061:25:43;;;6231:28:14;;;11102:18:43;;;11095:45;;;11156:18;;;11149:34;;;11199:18;;;11192:34;;;6052:19:14;;6127;;4331:24:::1;::::0;11033:19:43;;4331:24:14::1;;;;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;-1:-1:-1::0;;4331:24:14::1;::::0;-1:-1:-1;;4331:24:14;;;4469:14:::1;::::0;4331:24;;-1:-1:-1;;;;;;4459:24:14;;::::1;4469:14:::0;::::1;4459:24;::::0;-1:-1:-1;4459:24:14;;4566:4;;4550:45:::1;::::0;4428:27:::1;::::0;4550:45:::1;4648:22:::0;3622:1055;-1:-1:-1;;;;;;;3622:1055:14:o;6437:421:37:-;6564:16;6572:7;6564;:16::i;:::-;6556:53;;;;-1:-1:-1;;;6556:53:37;;17260:2:43;6556:53:37;;;17242:21:43;17299:2;17279:18;;;17272:30;17338:26;17318:18;;;17311:54;17382:18;;6556:53:37;17058:348:43;6556:53:37;6664:19;6686:16;6694:7;6686;:16::i;:::-;6664:38;;6745:14;6751:7;6745:5;:14::i;:::-;-1:-1:-1;;;;;6816:18:37;6846:5;6816:18;;;:5;:18;;;;;;;;:27;;;;;;;:35;;-1:-1:-1;;6816:35:37;;;6437:421::o;5609:667::-;-1:-1:-1;;;;;5816:16:37;;5808:50;;;;-1:-1:-1;;;5808:50:37;;10686:2:43;5808:50:37;;;10668:21:43;10725:2;10705:18;;;10698:30;-1:-1:-1;;;10744:18:43;;;10737:51;10805:18;;5808:50:37;10484:345:43;5808:50:37;6004:8;5998:22;6024:1;5998:27;5990:55;;;;-1:-1:-1;;;5990:55:37;;17613:2:43;5990:55:37;;;17595:21:43;17652:2;17632:18;;;17625:30;-1:-1:-1;;;17671:18:43;;;17664:45;17726:18;;5990:55:37;17411:339:43;5990:55:37;6160:28;6166:2;6170:7;6179:8;6160:5;:28::i;:::-;-1:-1:-1;;;;;;;6244:9:37;;;;;;;:5;:9;;;;;;;;:18;;;;;;;:25;;-1:-1:-1;;6244:25:37;6265:4;6244:25;;;5609:667::o;6055:347:41:-;6174:7;6202:16;6210:7;6202;:16::i;:::-;6201:17;6193:50;;;;-1:-1:-1;;;6193:50:41;;17957:2:43;6193:50:41;;;17939:21:43;17996:2;17976:18;;;17969:30;-1:-1:-1;;;18015:18:43;;;18008:50;18075:18;;6193:50:41;17755:344:43;6193:50:41;-1:-1:-1;;;;;6253:13:41;;;;;;:9;:13;;;;;:18;;6270:1;;6253:13;:18;;6270:1;;6253:18;:::i;:::-;;;;-1:-1:-1;;6281:16:41;;;;:7;:16;;;;;;;;:21;;-1:-1:-1;;;;;;6281:21:41;-1:-1:-1;;;;;6281:21:41;;;;;6312:10;:19;;;;;:25;6334:3;6312:19;:25;:::i;:::-;-1:-1:-1;6352:19:41;;6363:7;;-1:-1:-1;;;;;6352:19:41;;;;;;;;-1:-1:-1;6388:7:41;;6055:347;-1:-1:-1;;6055:347:41:o;-1:-1:-1:-;;;;;;;:::i;:::-;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;14:286:43:-;72:6;125:2;113:9;104:7;100:23;96:32;93:52;;;141:1;138;131:12;93:52;167:23;;-1:-1:-1;;;;;;219:32:43;;209:43;;199:71;;266:1;263;256:12;497:258;569:1;579:113;593:6;590:1;587:13;579:113;;;669:11;;;663:18;650:11;;;643:39;615:2;608:10;579:113;;;710:6;707:1;704:13;701:48;;;745:1;736:6;731:3;727:16;720:27;701:48;;497:258;;;:::o;760:383::-;909:2;898:9;891:21;872:4;941:6;935:13;984:6;979:2;968:9;964:18;957:34;1000:66;1059:6;1054:2;1043:9;1039:18;1034:2;1026:6;1022:15;1000:66;:::i;:::-;1127:2;1106:15;-1:-1:-1;;1102:29:43;1087:45;;;;1134:2;1083:54;;760:383;-1:-1:-1;;760:383:43:o;1148:127::-;1209:10;1204:3;1200:20;1197:1;1190:31;1240:4;1237:1;1230:15;1264:4;1261:1;1254:15;1280:718;1322:5;1375:3;1368:4;1360:6;1356:17;1352:27;1342:55;;1393:1;1390;1383:12;1342:55;1429:6;1416:20;1455:18;1492:2;1488;1485:10;1482:36;;;1498:18;;:::i;:::-;1573:2;1567:9;1541:2;1627:13;;-1:-1:-1;;1623:22:43;;;1647:2;1619:31;1615:40;1603:53;;;1671:18;;;1691:22;;;1668:46;1665:72;;;1717:18;;:::i;:::-;1757:10;1753:2;1746:22;1792:2;1784:6;1777:18;1838:3;1831:4;1826:2;1818:6;1814:15;1810:26;1807:35;1804:55;;;1855:1;1852;1845:12;1804:55;1919:2;1912:4;1904:6;1900:17;1893:4;1885:6;1881:17;1868:54;1966:1;1959:4;1954:2;1946:6;1942:15;1938:26;1931:37;1986:6;1977:15;;;;;;1280:718;;;;:::o;2003:456::-;2089:6;2097;2105;2158:2;2146:9;2137:7;2133:23;2129:32;2126:52;;;2174:1;2171;2164:12;2126:52;2210:9;2197:23;2187:33;;2271:2;2260:9;2256:18;2243:32;2298:18;2290:6;2287:30;2284:50;;;2330:1;2327;2320:12;2284:50;2353:49;2394:7;2385:6;2374:9;2370:22;2353:49;:::i;:::-;2343:59;;;2449:2;2438:9;2434:18;2421:32;2411:42;;2003:456;;;;;:::o;2464:180::-;2523:6;2576:2;2564:9;2555:7;2551:23;2547:32;2544:52;;;2592:1;2589;2582:12;2544:52;-1:-1:-1;2615:23:43;;2464:180;-1:-1:-1;2464:180:43:o;2649:173::-;2717:20;;-1:-1:-1;;;;;2766:31:43;;2756:42;;2746:70;;2812:1;2809;2802:12;2746:70;2649:173;;;:::o;2827:254::-;2895:6;2903;2956:2;2944:9;2935:7;2931:23;2927:32;2924:52;;;2972:1;2969;2962:12;2924:52;2995:29;3014:9;2995:29;:::i;:::-;2985:39;3071:2;3056:18;;;;3043:32;;-1:-1:-1;;;2827:254:43:o;3294:186::-;3353:6;3406:2;3394:9;3385:7;3381:23;3377:32;3374:52;;;3422:1;3419;3412:12;3374:52;3445:29;3464:9;3445:29;:::i;3667:395::-;3745:6;3753;3806:2;3794:9;3785:7;3781:23;3777:32;3774:52;;;3822:1;3819;3812:12;3774:52;3845:29;3864:9;3845:29;:::i;:::-;3835:39;;3925:2;3914:9;3910:18;3897:32;3952:18;3944:6;3941:30;3938:50;;;3984:1;3981;3974:12;3938:50;4007:49;4048:7;4039:6;4028:9;4024:22;4007:49;:::i;:::-;3997:59;;;3667:395;;;;;:::o;4067:752::-;4181:6;4189;4197;4205;4213;4266:3;4254:9;4245:7;4241:23;4237:33;4234:53;;;4283:1;4280;4273:12;4234:53;4306:29;4325:9;4306:29;:::i;:::-;4296:39;;4382:2;4371:9;4367:18;4354:32;4344:42;;4437:2;4426:9;4422:18;4409:32;4460:18;4501:2;4493:6;4490:14;4487:34;;;4517:1;4514;4507:12;4487:34;4540:49;4581:7;4572:6;4561:9;4557:22;4540:49;:::i;:::-;4530:59;;4636:2;4625:9;4621:18;4608:32;4598:42;;4693:3;4682:9;4678:19;4665:33;4649:49;;4723:2;4713:8;4710:16;4707:36;;;4739:1;4736;4729:12;4707:36;;4762:51;4805:7;4794:8;4783:9;4779:24;4762:51;:::i;:::-;4752:61;;;4067:752;;;;;;;;:::o;4824:388::-;4901:6;4909;4962:2;4950:9;4941:7;4937:23;4933:32;4930:52;;;4978:1;4975;4968:12;4930:52;5014:9;5001:23;4991:33;;5075:2;5064:9;5060:18;5047:32;5102:18;5094:6;5091:30;5088:50;;;5134:1;5131;5124:12;5217:462;5303:6;5311;5319;5372:2;5360:9;5351:7;5347:23;5343:32;5340:52;;;5388:1;5385;5378:12;5340:52;5411:29;5430:9;5411:29;:::i;:::-;5401:39;;5487:2;5476:9;5472:18;5459:32;5449:42;;5542:2;5531:9;5527:18;5514:32;5569:18;5561:6;5558:30;5555:50;;;5601:1;5598;5591:12;5555:50;5624:49;5665:7;5656:6;5645:9;5641:22;5624:49;:::i;:::-;5614:59;;;5217:462;;;;;:::o;5684:380::-;5763:1;5759:12;;;;5806;;;5827:61;;5881:4;5873:6;5869:17;5859:27;;5827:61;5934:2;5926:6;5923:14;5903:18;5900:38;5897:161;;5980:10;5975:3;5971:20;5968:1;5961:31;6015:4;6012:1;6005:15;6043:4;6040:1;6033:15;5897:161;;5684:380;;;:::o;7816:470::-;7995:3;8033:6;8027:13;8049:53;8095:6;8090:3;8083:4;8075:6;8071:17;8049:53;:::i;:::-;8165:13;;8124:16;;;;8187:57;8165:13;8124:16;8221:4;8209:17;;8187:57;:::i;:::-;8260:20;;7816:470;-1:-1:-1;;;;7816:470:43:o;9416:356::-;9618:2;9600:21;;;9637:18;;;9630:30;9696:34;9691:2;9676:18;;9669:62;9763:2;9748:18;;9416:356::o;12699:127::-;12760:10;12755:3;12751:20;12748:1;12741:31;12791:4;12788:1;12781:15;12815:4;12812:1;12805:15;12831:135;12870:3;12891:17;;;12888:43;;12911:18;;:::i;:::-;-1:-1:-1;12958:1:43;12947:13;;12831:135::o;12971:127::-;13032:10;13027:3;13023:20;13020:1;13013:31;13063:4;13060:1;13053:15;13087:4;13084:1;13077:15;13103:120;13143:1;13169;13159:35;;13174:18;;:::i;:::-;-1:-1:-1;13208:9:43;;13103:120::o;13228:125::-;13268:4;13296:1;13293;13290:8;13287:34;;;13301:18;;:::i;:::-;-1:-1:-1;13338:9:43;;13228:125::o;13358:112::-;13390:1;13416;13406:35;;13421:18;;:::i;:::-;-1:-1:-1;13455:9:43;;13358:112::o;13475:128::-;13515:3;13546:1;13542:6;13539:1;13536:13;13533:39;;;13552:18;;:::i;:::-;-1:-1:-1;13588:9:43;;13475:128::o;13608:127::-;13669:10;13664:3;13660:20;13657:1;13650:31;13700:4;13697:1;13690:15;13724:4;13721:1;13714:15;14209:545;14311:2;14306:3;14303:11;14300:448;;;14347:1;14372:5;14368:2;14361:17;14417:4;14413:2;14403:19;14487:2;14475:10;14471:19;14468:1;14464:27;14458:4;14454:38;14523:4;14511:10;14508:20;14505:47;;;-1:-1:-1;14546:4:43;14505:47;14601:2;14596:3;14592:12;14589:1;14585:20;14579:4;14575:31;14565:41;;14656:82;14674:2;14667:5;14664:13;14656:82;;;14719:17;;;14700:1;14689:13;14656:82;;;14660:3;;;14209:545;;;:::o;14930:1352::-;15056:3;15050:10;15083:18;15075:6;15072:30;15069:56;;;15105:18;;:::i;:::-;15134:97;15224:6;15184:38;15216:4;15210:11;15184:38;:::i;:::-;15178:4;15134:97;:::i;:::-;15286:4;;15350:2;15339:14;;15367:1;15362:663;;;;16069:1;16086:6;16083:89;;;-1:-1:-1;16138:19:43;;;16132:26;16083:89;-1:-1:-1;;14887:1:43;14883:11;;;14879:24;14875:29;14865:40;14911:1;14907:11;;;14862:57;16185:81;;15332:944;;15362:663;14156:1;14149:14;;;14193:4;14180:18;;-1:-1:-1;;15398:20:43;;;15516:236;15530:7;15527:1;15524:14;15516:236;;;15619:19;;;15613:26;15598:42;;15711:27;;;;15679:1;15667:14;;;;15546:19;;15516:236;;;15520:3;15780:6;15771:7;15768:19;15765:201;;;15841:19;;;15835:26;-1:-1:-1;;15924:1:43;15920:14;;;15936:3;15916:24;15912:37;15908:42;15893:58;15878:74;;15765:201;-1:-1:-1;;;;;16012:1:43;15996:14;;;15992:22;15979:36;;-1:-1:-1;14930:1352:43:o",
  "language": "Solidity",
  "natspec": {
    "author": "Daccred.",
    "details": "Soulbound Core template. This contract aims at a soulbound token with       capped supply, set by the deployer or defaulted to 1000000.       Mints and burns affect the current supply of tokens respectively.",
    "errors": {
      "Unsigned(address)": [
        {
          "details": "Thrown when the address passed to the verify function is not signed."
        }
      ]
    },
    "events": {
      "IssueWithSignature(address,uint256)": {
        "details": "Emitted when a token is minted from Signature."
      },
      "RevokeWithSignature(uint256)": {
        "details": "Emitted when a token is revoked with Signature."
      }
    },
    "kind": "dev",
    "methods": {
      "_getBaseURI()": {
        "details": "Returns already set baseURI if it exists.",
        "notice": "Callable by anyone.",
        "returns": {
          "_baseURI": "baseURI set."
        }
      },
      "balanceOf(address)": {
        "details": "ABTs assigned to the zero address are considered invalid, and this  function throws for queries about the zero address.",
        "notice": "Count all ABTs assigned to an owner",
        "params": {
          "owner": "An address for whom to query the balance"
        },
        "returns": {
          "_0": "The number of ABTs owned by `owner`, possibly zero"
        }
      },
      "burn(uint256)": {
        "details": "Must emit a `event Revoke` with the `address to` field pointing to  the zero address.",
        "notice": "Destroys `tokenId`. At any time, an ABT receiver must be able to  disassociate themselves from an ABT publicly through calling this  function.",
        "params": {
          "tokenId": "The identifier for an ABT"
        }
      },
      "constructor": {
        "details": "Deploys the 3 contracts inherited by the SoulboundCore."
      },
      "generateTokenURI(uint256)": {
        "details": "Using the `tokenId` passed, it generates a `stringified` tokenURI,       packing the baseURI and the current tokenId.       Makes use of OpenZeppelin's uint to string function.",
        "notice": "Callable by anyone.",
        "params": {
          "tokenId": "ID of token whose tokenURI is desired."
        },
        "returns": {
          "_tokenURI": "TokenURI of the passed tokenId."
        }
      },
      "getAllowlistOwner()": {
        "details": "Return the allowlistOwner.",
        "notice": "Callable by anyone.",
        "returns": {
          "_0": "address of allowlistOwner."
        }
      },
      "isMinted(address,uint256)": {
        "details": "Returns true if token `_tokenId` was minted from this contract to `_to`.       `_to` must not be a 0 address.       `_tokenId` must be an existent token.",
        "notice": "Callable by anyone.",
        "params": {
          "_to": "Address to which token `_tokenId` is minted.",
          "_tokenId": "Token minted."
        },
        "returns": {
          "_0": "bool true or false."
        }
      },
      "issueWithSignature(address,bytes32,bytes,uint256,string)": {
        "details": "Mints a particular quantity of tokens to `to`,       on the condition that the address has been       signed by the allowlistOwner off-chain.       This will emit the {MintSoulboundToken} event       from the Soulbound.sol.",
        "notice": "Callable by anyone.",
        "params": {
          "addr": "Address to mint tokens to.",
          "hash": "Hashed message by the allowlistOwner.",
          "sig": "Signature, signed by the allowlistOwner.",
          "tokenId": "Id of the tokens to mint to the `addr`.",
          "tokenURI": "URI of the token to be minted."
        }
      },
      "issuerOf(address,uint256)": {
        "details": "Since a token cannnot be minted twice.       This function returns the address that minted token `_tokenId` to `_to`,       otherwise this contract.       `_to` must not be a 0 address.       `_tokenId` must be an existent token.       Owner of _tokenId must be _to.",
        "notice": "Callable by anyone.",
        "params": {
          "_to": "Address to which token `_tokenId` is minted.",
          "_tokenId": "Token minted."
        },
        "returns": {
          "_0": "address of issuer."
        }
      },
      "owner()": {
        "details": "Returns the address of the current owner."
      },
      "ownerOf(uint256)": {
        "details": "ABTs assigned to zero address are considered invalid, and queries  about them do throw.",
        "notice": "Find the address bound to an ERC4973 account-bound token",
        "params": {
          "tokenId": "The identifier for an ABT"
        },
        "returns": {
          "_0": "The address of the owner bound to the ABT"
        }
      },
      "renounceOwnership()": {
        "details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
      },
      "revokeWithSignature(bytes32,bytes,uint256)": {
        "details": "Revokes the ownership of `tokenId` from the owner.       The token must exist and the signature must be signed the       allowlistOwner.       This emits the {RevokeWithSignature} event.",
        "notice": "Callable by anyone.",
        "params": {
          "hash": "Hashed message by the allowlistOwner.",
          "sig": "Signature, signed by the allowlistOwner.",
          "tokenId": "Id of the token to revoke."
        }
      },
      "setBaseURI(address,string)": {
        "details": "Allows the `caller` (allowlistOwner) to set the baseURI.       This is really important when the caller wants to mint       Multiple tokens with the same base URI.",
        "notice": "Callable by the deployer of this contract [DaccredDeployer]           and the allowlistOwner."
      },
      "supportsInterface(bytes4)": {
        "details": "See {IERC165-supportsInterface}."
      },
      "transferOwnership(address)": {
        "details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
      },
      "verifySignature(bytes32,bytes)": {
        "details": "Returns true if the signer of signature `sig` is the `allowlistOwner`.       And false if otherwise.",
        "notice": "Callable by anyone.",
        "returns": {
          "_0": "bool true or false."
        }
      },
      "verifySigner(address,bytes32,bytes)": {
        "details": "Returns true if the signer of `_signature` is `_signer`.",
        "notice": "Callable by anyone.",
        "returns": {
          "_0": "bool true or false."
        }
      }
    },
    "stateVariables": {
      "supply": {
        "details": "With every issue and revoke, this value         increases and reduces.         It cannot be GT the TOTAL_SUPPLY."
      },
      "totalSupply": {
        "details": "Total supply limit set by deployer or defaulted to 1000000."
      }
    },
    "title": "Soulbound Core Contract.",
    "version": 1
  },
  "offset": [
    857,
    7365
  ],
  "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x12C JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x88433651 GT PUSH2 0xAD JUMPI DUP1 PUSH4 0xC9E4C54D GT PUSH2 0x71 JUMPI DUP1 PUSH4 0xC9E4C54D EQ PUSH2 0x28E JUMPI DUP1 PUSH4 0xDACA6F78 EQ PUSH2 0x2A1 JUMPI DUP1 PUSH4 0xE92B0842 EQ PUSH2 0x2B4 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x2C7 JUMPI DUP1 PUSH4 0xFB8F198D EQ PUSH2 0x2DA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x88433651 EQ PUSH2 0x247 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x25A JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x26B JUMPI DUP1 PUSH4 0xC87B56DD EQ PUSH2 0x273 JUMPI DUP1 PUSH4 0xC9DD94C7 EQ PUSH2 0x286 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x5899E7B2 GT PUSH2 0xF4 JUMPI DUP1 PUSH4 0x5899E7B2 EQ PUSH2 0x1A9 JUMPI DUP1 PUSH4 0x6352211E EQ PUSH2 0x1E2 JUMPI DUP1 PUSH4 0x6E0A8746 EQ PUSH2 0x20D JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x21E JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x23F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0x131 JUMPI DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x159 JUMPI DUP1 PUSH4 0x8C92E57 EQ PUSH2 0x16E JUMPI DUP1 PUSH4 0x210FA96B EQ PUSH2 0x183 JUMPI DUP1 PUSH4 0x42966C68 EQ PUSH2 0x196 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x144 PUSH2 0x13F CALLDATASIZE PUSH1 0x4 PUSH2 0x1451 JUMP JUMPDEST PUSH2 0x2ED JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x161 PUSH2 0x33F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x150 SWAP2 SWAP1 PUSH2 0x14AB JUMP JUMPDEST PUSH2 0x181 PUSH2 0x17C CALLDATASIZE PUSH1 0x4 PUSH2 0x1581 JUMP JUMPDEST PUSH2 0x3D1 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x161 PUSH2 0x191 CALLDATASIZE PUSH1 0x4 PUSH2 0x15D1 JUMP JUMPDEST PUSH2 0x50C JUMP JUMPDEST PUSH2 0x181 PUSH2 0x1A4 CALLDATASIZE PUSH1 0x4 PUSH2 0x15D1 JUMP JUMPDEST PUSH2 0x58E JUMP JUMPDEST PUSH2 0x144 PUSH2 0x1B7 CALLDATASIZE PUSH1 0x4 PUSH2 0x1606 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 SWAP1 SWAP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 DUP4 MSTORE SWAP3 SWAP1 MSTORE KECCAK256 SLOAD PUSH1 0xFF AND SWAP1 JUMP JUMPDEST PUSH2 0x1F5 PUSH2 0x1F0 CALLDATASIZE PUSH1 0x4 PUSH2 0x15D1 JUMP JUMPDEST PUSH2 0x603 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x150 JUMP JUMPDEST PUSH1 0x8 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x1F5 JUMP JUMPDEST PUSH2 0x231 PUSH2 0x22C CALLDATASIZE PUSH1 0x4 PUSH2 0x1630 JUMP JUMPDEST PUSH2 0x668 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x150 JUMP JUMPDEST PUSH2 0x181 PUSH2 0x6F1 JUMP JUMPDEST PUSH2 0x181 PUSH2 0x255 CALLDATASIZE PUSH1 0x4 PUSH2 0x164B JUMP JUMPDEST PUSH2 0x727 JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x1F5 JUMP JUMPDEST PUSH2 0x161 PUSH2 0x7C9 JUMP JUMPDEST PUSH2 0x161 PUSH2 0x281 CALLDATASIZE PUSH1 0x4 PUSH2 0x15D1 JUMP JUMPDEST PUSH2 0x7D8 JUMP JUMPDEST PUSH2 0x161 PUSH2 0x8CD JUMP JUMPDEST PUSH2 0x181 PUSH2 0x29C CALLDATASIZE PUSH1 0x4 PUSH2 0x1699 JUMP JUMPDEST PUSH2 0x92A JUMP JUMPDEST PUSH2 0x144 PUSH2 0x2AF CALLDATASIZE PUSH1 0x4 PUSH2 0x1721 JUMP JUMPDEST PUSH2 0xA5F JUMP JUMPDEST PUSH2 0x144 PUSH2 0x2C2 CALLDATASIZE PUSH1 0x4 PUSH2 0x1752 JUMP JUMPDEST PUSH2 0xA72 JUMP JUMPDEST PUSH2 0x181 PUSH2 0x2D5 CALLDATASIZE PUSH1 0x4 PUSH2 0x1630 JUMP JUMPDEST PUSH2 0xB06 JUMP JUMPDEST PUSH2 0x1F5 PUSH2 0x2E8 CALLDATASIZE PUSH1 0x4 PUSH2 0x1606 JUMP JUMPDEST PUSH2 0xB9E JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND PUSH4 0x5B5E139F PUSH1 0xE0 SHL EQ DUP1 PUSH2 0x31E JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND PUSH4 0x5164CF47 PUSH1 0xE0 SHL EQ JUMPDEST DUP1 PUSH2 0x339 JUMPI POP PUSH4 0x1FFC9A7 PUSH1 0xE0 SHL PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP4 AND EQ JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 DUP1 SLOAD PUSH2 0x34E SWAP1 PUSH2 0x17A9 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x37A SWAP1 PUSH2 0x17A9 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x3C7 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x39C JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x3C7 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x3AA JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x3DA DUP2 PUSH2 0xCB2 JUMP JUMPDEST PUSH2 0x42B JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5265766F6B65206F6620696E6578697374656E7420746F6B656E2E0000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 MLOAD PUSH1 0x41 EQ PUSH2 0x477 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x18 PUSH1 0x24 DUP3 ADD MSTORE PUSH24 0x92DCECC2D8D2C840E6D2CEDCC2E8EAE4CA40D8CADCCEE8D PUSH1 0x43 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x422 JUMP JUMPDEST PUSH2 0x481 DUP4 DUP4 PUSH2 0xA5F JUMP JUMPDEST PUSH2 0x4C9 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x19 PUSH1 0x24 DUP3 ADD MSTORE PUSH25 0x2430B9B4103737BA1039B4B3B732B210313C9037BBB732B917 PUSH1 0x39 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x422 JUMP JUMPDEST PUSH2 0x4DB PUSH2 0x4D5 DUP3 PUSH2 0x603 JUMP JUMPDEST DUP3 PUSH2 0xCCF JUMP JUMPDEST POP PUSH1 0x40 MLOAD DUP2 SWAP1 PUSH32 0xF947BF2266AFEDE98F27AD2312DB8B2A17921852307F979B6F14A2B41FA774BC SWAP1 PUSH1 0x0 SWAP1 LOG2 POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH2 0x516 PUSH2 0x8CD JUMP JUMPDEST MLOAD PUSH1 0x0 SUB PUSH2 0x556 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xD PUSH1 0x24 DUP3 ADD MSTORE PUSH13 0x456D7074792062617365555249 PUSH1 0x98 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x422 JUMP JUMPDEST PUSH2 0x55E PUSH2 0x8CD JUMP JUMPDEST PUSH2 0x567 DUP4 PUSH2 0xD97 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x578 SWAP3 SWAP2 SWAP1 PUSH2 0x17E3 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x597 DUP2 PUSH2 0x603 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0x5F7 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x6275726E3A2073656E646572206D757374206265206F776E6572000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x422 JUMP JUMPDEST PUSH2 0x600 DUP2 PUSH2 0xEA0 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP1 PUSH2 0x339 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1C PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x6F776E65724F663A20746F6B656E20646F65736E277420657869737400000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x422 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x6D5 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2C PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x62616C616E63654F663A2061646472657373207A65726F206973206E6F742061 PUSH1 0x44 DUP3 ADD MSTORE PUSH12 0x103B30B634B21037BBB732B9 PUSH1 0xA1 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x422 JUMP JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x71B JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x422 SWAP1 PUSH2 0x1812 JUMP JUMPDEST PUSH2 0x725 PUSH1 0x0 PUSH2 0xF47 JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x751 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x422 SWAP1 PUSH2 0x1812 JUMP JUMPDEST DUP2 PUSH2 0x764 PUSH1 0x8 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0x7BB JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x14 PUSH1 0x24 DUP3 ADD MSTORE PUSH20 0x4E6F7420416C6C6F776C697374204F776E657221 PUSH1 0x60 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x422 JUMP JUMPDEST PUSH2 0x7C4 DUP3 PUSH2 0xF99 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x1 DUP1 SLOAD PUSH2 0x34E SWAP1 PUSH2 0x17A9 JUMP JUMPDEST PUSH1 0x60 PUSH2 0x7E3 DUP3 PUSH2 0xCB2 JUMP JUMPDEST PUSH2 0x82F JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x746F6B656E5552493A20746F6B656E20646F65736E2774206578697374000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x422 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH2 0x848 SWAP1 PUSH2 0x17A9 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x874 SWAP1 PUSH2 0x17A9 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x8C1 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x896 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x8C1 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x8A4 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x6 DUP1 SLOAD PUSH2 0x8DC SWAP1 PUSH2 0x17A9 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 SUB PUSH2 0x91D JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xD PUSH1 0x24 DUP3 ADD MSTORE PUSH13 0x456D7074792062617365555249 PUSH1 0x98 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x422 JUMP JUMPDEST PUSH1 0x6 DUP1 SLOAD PUSH2 0x34E SWAP1 PUSH2 0x17A9 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH2 0x978 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x15 PUSH1 0x24 DUP3 ADD MSTORE PUSH21 0x26B4B73A103A37903D32B9379030B2323932B9B997 PUSH1 0x59 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x422 JUMP JUMPDEST DUP3 MLOAD PUSH1 0x41 EQ PUSH2 0x9C4 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x18 PUSH1 0x24 DUP3 ADD MSTORE PUSH24 0x92DCECC2D8D2C840E6D2CEDCC2E8EAE4CA40D8CADCCEE8D PUSH1 0x43 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x422 JUMP JUMPDEST PUSH2 0x9CE DUP5 DUP5 PUSH2 0xA5F JUMP JUMPDEST PUSH2 0xA16 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x19 PUSH1 0x24 DUP3 ADD MSTORE PUSH25 0x2430B9B4103737BA1039B4B3B732B210313C9037BBB732B917 PUSH1 0x39 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x422 JUMP JUMPDEST PUSH2 0xA21 DUP6 DUP4 DUP4 PUSH2 0xFEB JUMP JUMPDEST POP PUSH1 0x40 MLOAD DUP3 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 AND SWAP1 PUSH32 0x79AF0E59B31823DD289CEEBABC4D63D25F35926B8548E3A084A500C9D4E18556 SWAP1 PUSH1 0x0 SWAP1 LOG3 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xA6B DUP4 DUP4 PUSH2 0x1002 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x20 DUP2 DUP2 ADD MLOAD PUSH1 0x40 DUP1 DUP5 ADD MLOAD PUSH1 0x60 DUP1 DUP7 ADD MLOAD DUP4 MLOAD PUSH1 0x0 DUP1 DUP3 MSTORE DUP2 DUP9 ADD DUP1 DUP8 MSTORE DUP11 SWAP1 MSTORE SWAP2 DUP3 BYTE DUP2 DUP7 ADD DUP2 SWAP1 MSTORE SWAP3 DUP2 ADD DUP7 SWAP1 MSTORE PUSH1 0x80 DUP2 ADD DUP5 SWAP1 MSTORE SWAP4 MLOAD SWAP1 SWAP6 SWAP3 SWAP4 SWAP2 SWAP3 PUSH1 0x1 SWAP3 PUSH1 0xA0 DUP1 DUP3 ADD SWAP4 PUSH1 0x1F NOT DUP2 ADD SWAP3 DUP2 SWAP1 SUB SWAP1 SWAP2 ADD SWAP1 DUP6 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xADC JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP PUSH1 0x20 PUSH1 0x40 MLOAD SUB MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP8 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ SWAP4 POP POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0xB30 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x422 SWAP1 PUSH2 0x1812 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0xB95 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x646472657373 PUSH1 0xD0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x422 JUMP JUMPDEST PUSH2 0x600 DUP2 PUSH2 0xF47 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0xBF6 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x17 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x517565727920666F72207A65726F20616464726573732E000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x422 JUMP JUMPDEST PUSH2 0xBFF DUP3 PUSH2 0xCB2 JUMP JUMPDEST PUSH2 0xC41 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x13 PUSH1 0x24 DUP3 ADD MSTORE PUSH19 0x2737B716B2BC34B9BA32B73A103A37B5B2B717 PUSH1 0x69 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x422 JUMP JUMPDEST DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0xC54 DUP4 PUSH2 0x603 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0xCAA JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x546F6B656E206E6F74206F776E65642062792061646472657373000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x422 JUMP JUMPDEST POP ADDRESS SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND ISZERO ISZERO SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0xCDA DUP3 PUSH2 0xCB2 JUMP JUMPDEST PUSH2 0xD1C JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x13 PUSH1 0x24 DUP3 ADD MSTORE PUSH19 0x2737B716B2BC34B9BA32B73A103A37B5B2B717 PUSH1 0x69 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x422 JUMP JUMPDEST DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0xD2F DUP4 PUSH2 0x603 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0xD85 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x546F6B656E206E6F74206F776E65642062792061646472657373000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x422 JUMP JUMPDEST PUSH2 0xD8E DUP3 PUSH2 0x11A8 JUMP JUMPDEST POP PUSH1 0x1 SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x60 DUP2 PUSH1 0x0 SUB PUSH2 0xDBE JUMPI POP POP PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD SWAP1 SWAP2 MSTORE PUSH1 0x1 DUP2 MSTORE PUSH1 0x3 PUSH1 0xFC SHL PUSH1 0x20 DUP3 ADD MSTORE SWAP1 JUMP JUMPDEST DUP2 PUSH1 0x0 JUMPDEST DUP2 ISZERO PUSH2 0xDE8 JUMPI DUP1 PUSH2 0xDD2 DUP2 PUSH2 0x185D JUMP JUMPDEST SWAP2 POP PUSH2 0xDE1 SWAP1 POP PUSH1 0xA DUP4 PUSH2 0x188C JUMP JUMPDEST SWAP2 POP PUSH2 0xDC2 JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0xE03 JUMPI PUSH2 0xE03 PUSH2 0x14DE JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x1F ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0xE2D JUMPI PUSH1 0x20 DUP3 ADD DUP2 DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP JUMPDEST POP SWAP1 POP JUMPDEST DUP5 ISZERO PUSH2 0xE98 JUMPI PUSH2 0xE42 PUSH1 0x1 DUP4 PUSH2 0x18A0 JUMP JUMPDEST SWAP2 POP PUSH2 0xE4F PUSH1 0xA DUP7 PUSH2 0x18B7 JUMP JUMPDEST PUSH2 0xE5A SWAP1 PUSH1 0x30 PUSH2 0x18CB JUMP JUMPDEST PUSH1 0xF8 SHL DUP2 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0xE6F JUMPI PUSH2 0xE6F PUSH2 0x18E3 JUMP JUMPDEST PUSH1 0x20 ADD ADD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xF8 SHL SUB NOT AND SWAP1 DUP2 PUSH1 0x0 BYTE SWAP1 MSTORE8 POP PUSH2 0xE91 PUSH1 0xA DUP7 PUSH2 0x188C JUMP JUMPDEST SWAP5 POP PUSH2 0xE31 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xEAB DUP3 PUSH2 0x603 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD SWAP3 SWAP4 POP PUSH1 0x1 SWAP3 SWAP1 SWAP2 SWAP1 PUSH2 0xED9 SWAP1 DUP5 SWAP1 PUSH2 0x18A0 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND SWAP1 SSTORE PUSH1 0x3 SWAP1 SWAP2 MSTORE DUP2 KECCAK256 PUSH2 0xF0D SWAP2 PUSH2 0x1403 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP3 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND SWAP1 PUSH32 0xEC9AB91322523C899EDE7830EC9BFC992B5981CDCC27B91162FB23DE5791117B SWAP1 PUSH1 0x0 SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x5 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR SWAP1 SWAP4 SSTORE PUSH1 0x40 MLOAD SWAP2 AND SWAP2 SWAP1 DUP3 SWAP1 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP1 PUSH1 0x0 SWAP1 LOG3 POP POP JUMP JUMPDEST DUP1 MLOAD PUSH1 0x0 SUB PUSH2 0xFDB JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xE PUSH1 0x24 DUP3 ADD MSTORE PUSH14 0x92DCECC2D8D2C840D8CADCCEE8D PUSH1 0x93 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x422 JUMP JUMPDEST PUSH1 0x6 PUSH2 0xFE7 DUP3 DUP3 PUSH2 0x1947 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xFF8 DUP5 DUP5 DUP5 PUSH2 0x123E JUMP JUMPDEST POP PUSH1 0x1 SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH1 0x0 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x102F JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x422 SWAP1 PUSH2 0x1812 JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x109D JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433732313A3A2043616C6C20746F20636F6E7472616374206D6164652062 PUSH1 0x44 DUP3 ADD MSTORE PUSH11 0x3C903737B716B7BBB732B9 PUSH1 0xA9 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x422 JUMP JUMPDEST DUP2 MLOAD PUSH1 0x41 EQ PUSH2 0x10EE JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1E PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4572723A3A20496E76616C6964207369676E6174757265206C656E6774680000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x422 JUMP JUMPDEST PUSH1 0x20 DUP3 DUP2 ADD MLOAD PUSH1 0x40 DUP1 DUP6 ADD MLOAD PUSH1 0x60 DUP1 DUP8 ADD MLOAD DUP4 MLOAD PUSH1 0x0 DUP1 DUP3 MSTORE SWAP7 DUP2 ADD DUP1 DUP7 MSTORE DUP11 SWAP1 MSTORE SWAP1 DUP7 BYTE SWAP4 DUP2 ADD DUP5 SWAP1 MSTORE SWAP1 DUP2 ADD DUP5 SWAP1 MSTORE PUSH1 0x80 DUP2 ADD DUP3 SWAP1 MSTORE SWAP3 SWAP4 SWAP1 SWAP3 PUSH1 0x1 SWAP1 PUSH1 0xA0 ADD PUSH1 0x20 PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 SUB SWAP1 DUP1 DUP5 SUB SWAP1 DUP6 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1152 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP PUSH1 0x40 MLOAD PUSH1 0x1F NOT DUP2 ADD MLOAD PUSH1 0x8 SLOAD SWAP1 SWAP4 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP6 AND SWAP2 AND EQ SWAP2 POP DUP2 SWAP1 DUP10 SWAP1 PUSH32 0x7E4FE2A2A805A357593FDBDDE58C02F6A53D8B4960744CD31A98697FC11C2E36 SWAP1 PUSH1 0x0 SWAP1 LOG3 SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0x11B1 DUP2 PUSH2 0xCB2 JUMP JUMPDEST PUSH2 0x11FD JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x18 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4275726E206F6620696E6578697374656E7420746F6B656E0000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x422 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1208 DUP3 PUSH2 0x603 JUMP JUMPDEST SWAP1 POP PUSH2 0x1213 DUP3 PUSH2 0xEA0 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 DUP4 MSTORE SWAP3 SWAP1 MSTORE KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x128C JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x15 PUSH1 0x24 DUP3 ADD MSTORE PUSH21 0x26B4B73A103A37903D32B9379030B2323932B9B997 PUSH1 0x59 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x422 JUMP JUMPDEST DUP1 MLOAD PUSH1 0x0 SUB PUSH2 0x12CF JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xF PUSH1 0x24 DUP3 ADD MSTORE PUSH15 0x22B6B83A3C903A37B5B2B72AA92497 PUSH1 0x89 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x422 JUMP JUMPDEST PUSH2 0x12DA DUP4 DUP4 DUP4 PUSH2 0x130C JUMP JUMPDEST POP POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 DUP4 MSTORE SWAP3 SWAP1 MSTORE KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1317 DUP4 PUSH2 0xCB2 JUMP JUMPDEST ISZERO PUSH2 0x135B JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x14 PUSH1 0x24 DUP3 ADD MSTORE PUSH20 0x6D696E743A20746F6B656E494420657869737473 PUSH1 0x60 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x422 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD PUSH1 0x1 SWAP3 SWAP1 PUSH2 0x1384 SWAP1 DUP5 SWAP1 PUSH2 0x18CB JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP10 AND OR SWAP1 SSTORE PUSH1 0x3 SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 PUSH2 0x13C4 DUP4 DUP3 PUSH2 0x1947 JUMP JUMPDEST POP PUSH1 0x40 MLOAD DUP4 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND SWAP1 PUSH32 0xE9274A84B19E9428826DE6BAE8C48329354F8F0E73F771B97CAE2D9DCCD45A27 SWAP1 PUSH1 0x0 SWAP1 LOG3 POP SWAP1 SWAP3 SWAP2 POP POP JUMP JUMPDEST POP DUP1 SLOAD PUSH2 0x140F SWAP1 PUSH2 0x17A9 JUMP JUMPDEST PUSH1 0x0 DUP3 SSTORE DUP1 PUSH1 0x1F LT PUSH2 0x141F JUMPI POP POP JUMP JUMPDEST PUSH1 0x1F ADD PUSH1 0x20 SWAP1 DIV SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 DUP2 ADD SWAP1 PUSH2 0x600 SWAP2 SWAP1 JUMPDEST DUP1 DUP3 GT ISZERO PUSH2 0x144D JUMPI PUSH1 0x0 DUP2 SSTORE PUSH1 0x1 ADD PUSH2 0x1439 JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1463 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP2 AND DUP2 EQ PUSH2 0xA6B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x1496 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x147E JUMP JUMPDEST DUP4 DUP2 GT ISZERO PUSH2 0x14A5 JUMPI PUSH1 0x0 DUP5 DUP5 ADD MSTORE JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH1 0x0 DUP3 MLOAD DUP1 PUSH1 0x20 DUP5 ADD MSTORE PUSH2 0x14CA DUP2 PUSH1 0x40 DUP6 ADD PUSH1 0x20 DUP8 ADD PUSH2 0x147B JUMP JUMPDEST PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP2 SWAP1 SWAP2 ADD PUSH1 0x40 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x1505 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x1520 JUMPI PUSH2 0x1520 PUSH2 0x14DE JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1F DUP4 ADD PUSH1 0x1F NOT SWAP1 DUP2 AND PUSH1 0x3F ADD AND DUP2 ADD SWAP1 DUP3 DUP3 GT DUP2 DUP4 LT OR ISZERO PUSH2 0x1548 JUMPI PUSH2 0x1548 PUSH2 0x14DE JUMP JUMPDEST DUP2 PUSH1 0x40 MSTORE DUP4 DUP2 MSTORE DUP7 PUSH1 0x20 DUP6 DUP9 ADD ADD GT ISZERO PUSH2 0x1561 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP4 PUSH1 0x20 DUP8 ADD PUSH1 0x20 DUP4 ADD CALLDATACOPY PUSH1 0x0 PUSH1 0x20 DUP6 DUP4 ADD ADD MSTORE DUP1 SWAP5 POP POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x1596 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP4 CALLDATALOAD SWAP3 POP PUSH1 0x20 DUP5 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x15B4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x15C0 DUP7 DUP3 DUP8 ADD PUSH2 0x14F4 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 DUP5 ADD CALLDATALOAD SWAP1 POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x15E3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x1601 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1619 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1622 DUP4 PUSH2 0x15EA JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1642 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xA6B DUP3 PUSH2 0x15EA JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x165E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1667 DUP4 PUSH2 0x15EA JUMP JUMPDEST SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1683 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x168F DUP6 DUP3 DUP7 ADD PUSH2 0x14F4 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xA0 DUP7 DUP9 SUB SLT ISZERO PUSH2 0x16B1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x16BA DUP7 PUSH2 0x15EA JUMP JUMPDEST SWAP5 POP PUSH1 0x20 DUP7 ADD CALLDATALOAD SWAP4 POP PUSH1 0x40 DUP7 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x16DE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x16EA DUP10 DUP4 DUP11 ADD PUSH2 0x14F4 JUMP JUMPDEST SWAP5 POP PUSH1 0x60 DUP9 ADD CALLDATALOAD SWAP4 POP PUSH1 0x80 DUP9 ADD CALLDATALOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH2 0x1707 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1714 DUP9 DUP3 DUP10 ADD PUSH2 0x14F4 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 POP SWAP3 SWAP6 SWAP1 SWAP4 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1734 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1683 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x1767 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1770 DUP5 PUSH2 0x15EA JUMP JUMPDEST SWAP3 POP PUSH1 0x20 DUP5 ADD CALLDATALOAD SWAP2 POP PUSH1 0x40 DUP5 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1793 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x179F DUP7 DUP3 DUP8 ADD PUSH2 0x14F4 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0x17BD JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x17DD JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP4 MLOAD PUSH2 0x17F5 DUP2 DUP5 PUSH1 0x20 DUP9 ADD PUSH2 0x147B JUMP JUMPDEST DUP4 MLOAD SWAP1 DUP4 ADD SWAP1 PUSH2 0x1809 DUP2 DUP4 PUSH1 0x20 DUP9 ADD PUSH2 0x147B JUMP JUMPDEST ADD SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE DUP2 DUP2 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1 DUP3 ADD PUSH2 0x186F JUMPI PUSH2 0x186F PUSH2 0x1847 JUMP JUMPDEST POP PUSH1 0x1 ADD SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x189B JUMPI PUSH2 0x189B PUSH2 0x1876 JUMP JUMPDEST POP DIV SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 LT ISZERO PUSH2 0x18B2 JUMPI PUSH2 0x18B2 PUSH2 0x1847 JUMP JUMPDEST POP SUB SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x18C6 JUMPI PUSH2 0x18C6 PUSH2 0x1876 JUMP JUMPDEST POP MOD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 NOT DUP3 GT ISZERO PUSH2 0x18DE JUMPI PUSH2 0x18DE PUSH2 0x1847 JUMP JUMPDEST POP ADD SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH2 0x7C4 JUMPI PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x20 DUP2 KECCAK256 PUSH1 0x1F DUP6 ADD PUSH1 0x5 SHR DUP2 ADD PUSH1 0x20 DUP7 LT ISZERO PUSH2 0x1920 JUMPI POP DUP1 JUMPDEST PUSH1 0x1F DUP6 ADD PUSH1 0x5 SHR DUP3 ADD SWAP2 POP JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x193F JUMPI DUP3 DUP2 SSTORE PUSH1 0x1 ADD PUSH2 0x192C JUMP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST DUP2 MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1961 JUMPI PUSH2 0x1961 PUSH2 0x14DE JUMP JUMPDEST PUSH2 0x1975 DUP2 PUSH2 0x196F DUP5 SLOAD PUSH2 0x17A9 JUMP JUMPDEST DUP5 PUSH2 0x18F9 JUMP JUMPDEST PUSH1 0x20 DUP1 PUSH1 0x1F DUP4 GT PUSH1 0x1 DUP2 EQ PUSH2 0x19AA JUMPI PUSH1 0x0 DUP5 ISZERO PUSH2 0x1992 JUMPI POP DUP6 DUP4 ADD MLOAD JUMPDEST PUSH1 0x0 NOT PUSH1 0x3 DUP7 SWAP1 SHL SHR NOT AND PUSH1 0x1 DUP6 SWAP1 SHL OR DUP6 SSTORE PUSH2 0x193F JUMP JUMPDEST PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 DUP2 KECCAK256 PUSH1 0x1F NOT DUP7 AND SWAP2 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x19D9 JUMPI DUP9 DUP7 ADD MLOAD DUP3 SSTORE SWAP5 DUP5 ADD SWAP5 PUSH1 0x1 SWAP1 SWAP2 ADD SWAP1 DUP5 ADD PUSH2 0x19BA JUMP JUMPDEST POP DUP6 DUP3 LT ISZERO PUSH2 0x19F7 JUMPI DUP8 DUP6 ADD MLOAD PUSH1 0x0 NOT PUSH1 0x3 DUP9 SWAP1 SHL PUSH1 0xF8 AND SHR NOT AND DUP2 SSTORE JUMPDEST POP POP POP POP POP PUSH1 0x1 SWAP1 DUP2 SHL ADD SWAP1 SSTORE POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xA6 0xBA SLT SWAP10 0xB8 0xBA REVERT 0xBC BASEFEE 0x4D SWAP2 SMOD 0xEC 0xB8 0x5D 0xCE 0xE7 SSTORE 0xC4 DUP1 0xD 0xCC 0xE4 0xEE 0x4E 0xE0 0xDA 0x29 0xE3 DELEGATECALL CALLVALUE 0xF7 PUSH5 0x736F6C6343 STOP ADDMOD 0xF STOP CALLER ",
  "pcMap": {
    "0": {
      "offset": [
        857,
        7365
      ],
      "op": "PUSH1",
      "path": "38",
      "value": "0x80"
    },
    "2": {
      "fn": null,
      "offset": [
        857,
        7365
      ],
      "op": "PUSH1",
      "path": "38",
      "value": "0x40"
    },
    "4": {
      "fn": null,
      "offset": [
        857,
        7365
      ],
      "op": "MSTORE",
      "path": "38"
    },
    "5": {
      "fn": null,
      "offset": [
        857,
        7365
      ],
      "op": "CALLVALUE",
      "path": "38"
    },
    "6": {
      "fn": null,
      "offset": [
        857,
        7365
      ],
      "op": "DUP1",
      "path": "38"
    },
    "7": {
      "fn": null,
      "offset": [
        857,
        7365
      ],
      "op": "ISZERO",
      "path": "38"
    },
    "8": {
      "fn": null,
      "offset": [
        857,
        7365
      ],
      "op": "PUSH2",
      "path": "38",
      "value": "0x10"
    },
    "11": {
      "fn": null,
      "offset": [
        857,
        7365
      ],
      "op": "JUMPI",
      "path": "38"
    },
    "12": {
      "fn": null,
      "offset": [
        857,
        7365
      ],
      "op": "PUSH1",
      "path": "38",
      "value": "0x0"
    },
    "14": {
      "fn": null,
      "offset": [
        857,
        7365
      ],
      "op": "DUP1",
      "path": "38"
    },
    "15": {
      "dev": "Cannot send ether to nonpayable function",
      "fn": null,
      "offset": [
        857,
        7365
      ],
      "op": "REVERT",
      "path": "38"
    },
    "16": {
      "fn": null,
      "offset": [
        857,
        7365
      ],
      "op": "JUMPDEST",
      "path": "38"
    },
    "17": {
      "fn": null,
      "offset": [
        857,
        7365
      ],
      "op": "POP",
      "path": "38"
    },
    "18": {
      "fn": null,
      "offset": [
        857,
        7365
      ],
      "op": "PUSH1",
      "path": "38",
      "value": "0x4"
    },
    "20": {
      "fn": null,
      "offset": [
        857,
        7365
      ],
      "op": "CALLDATASIZE",
      "path": "38"
    },
    "21": {
      "fn": null,
      "offset": [
        857,
        7365
      ],
      "op": "LT",
      "path": "38"
    },
    "22": {
      "fn": null,
      "offset": [
        857,
        7365
      ],
      "op": "PUSH2",
      "path": "38",
      "value": "0x12C"
    },
    "25": {
      "fn": null,
      "offset": [
        857,
        7365
      ],
      "op": "JUMPI",
      "path": "38"
    },
    "26": {
      "fn": null,
      "offset": [
        857,
        7365
      ],
      "op": "PUSH1",
      "path": "38",
      "value": "0x0"
    },
    "28": {
      "fn": null,
      "offset": [
        857,
        7365
      ],
      "op": "CALLDATALOAD",
      "path": "38"
    },
    "29": {
      "fn": null,
      "offset": [
        857,
        7365
      ],
      "op": "PUSH1",
      "path": "38",
      "value": "0xE0"
    },
    "31": {
      "fn": null,
      "offset": [
        857,
        7365
      ],
      "op": "SHR",
      "path": "38"
    },
    "32": {
      "fn": null,
      "offset": [
        857,
        7365
      ],
      "op": "DUP1",
      "path": "38"
    },
    "33": {
      "fn": null,
      "offset": [
        857,
        7365
      ],
      "op": "PUSH4",
      "path": "38",
      "value": "0x88433651"
    },
    "38": {
      "fn": null,
      "offset": [
        857,
        7365
      ],
      "op": "GT",
      "path": "38"
    },
    "39": {
      "fn": null,
      "offset": [
        857,
        7365
      ],
      "op": "PUSH2",
      "path": "38",
      "value": "0xAD"
    },
    "42": {
      "fn": null,
      "offset": [
        857,
        7365
      ],
      "op": "JUMPI",
      "path": "38"
    },
    "43": {
      "fn": null,
      "offset": [
        857,
        7365
      ],
      "op": "DUP1",
      "path": "38"
    },
    "44": {
      "fn": null,
      "offset": [
        857,
        7365
      ],
      "op": "PUSH4",
      "path": "38",
      "value": "0xC9E4C54D"
    },
    "49": {
      "fn": null,
      "offset": [
        857,
        7365
      ],
      "op": "GT",
      "path": "38"
    },
    "50": {
      "fn": null,
      "offset": [
        857,
        7365
      ],
      "op": "PUSH2",
      "path": "38",
      "value": "0x71"
    },
    "53": {
      "fn": null,
      "offset": [
        857,
        7365
      ],
      "op": "JUMPI",
      "path": "38"
    },
    "54": {
      "fn": null,
      "offset": [
        857,
        7365
      ],
      "op": "DUP1",
      "path": "38"
    },
    "55": {
      "fn": null,
      "offset": [
        857,
        7365
      ],
      "op": "PUSH4",
      "path": "38",
      "value": "0xC9E4C54D"
    },
    "60": {
      "fn": null,
      "offset": [
        857,
        7365
      ],
      "op": "EQ",
      "path": "38"
    },
    "61": {
      "fn": null,
      "offset": [
        857,
        7365
      ],
      "op": "PUSH2",
      "path": "38",
      "value": "0x28E"
    },
    "64": {
      "fn": null,
      "offset": [
        857,
        7365
      ],
      "op": "JUMPI",
      "path": "38"
    },
    "65": {
      "fn": null,
      "offset": [
        857,
        7365
      ],
      "op": "DUP1",
      "path": "38"
    },
    "66": {
      "fn": null,
      "offset": [
        857,
        7365
      ],
      "op": "PUSH4",
      "path": "38",
      "value": "0xDACA6F78"
    },
    "71": {
      "fn": null,
      "offset": [
        857,
        7365
      ],
      "op": "EQ",
      "path": "38"
    },
    "72": {
      "fn": null,
      "offset": [
        857,
        7365
      ],
      "op": "PUSH2",
      "path": "38",
      "value": "0x2A1"
    },
    "75": {
      "fn": null,
      "offset": [
        857,
        7365
      ],
      "op": "JUMPI",
      "path": "38"
    },
    "76": {
      "fn": null,
      "offset": [
        857,
        7365
      ],
      "op": "DUP1",
      "path": "38"
    },
    "77": {
      "fn": null,
      "offset": [
        857,
        7365
      ],
      "op": "PUSH4",
      "path": "38",
      "value": "0xE92B0842"
    },
    "82": {
      "fn": null,
      "offset": [
        857,
        7365
      ],
      "op": "EQ",
      "path": "38"
    },
    "83": {
      "fn": null,
      "offset": [
        857,
        7365
      ],
      "op": "PUSH2",
      "path": "38",
      "value": "0x2B4"
    },
    "86": {
      "fn": null,
      "offset": [
        857,
        7365
      ],
      "op": "JUMPI",
      "path": "38"
    },
    "87": {
      "fn": null,
      "offset": [
        857,
        7365
      ],
      "op": "DUP1",
      "path": "38"
    },
    "88": {
      "fn": null,
      "offset": [
        857,
        7365
      ],
      "op": "PUSH4",
      "path": "38",
      "value": "0xF2FDE38B"
    },
    "93": {
      "fn": null,
      "offset": [
        857,
        7365
      ],
      "op": "EQ",
      "path": "38"
    },
    "94": {
      "fn": null,
      "offset": [
        857,
        7365
      ],
      "op": "PUSH2",
      "path": "38",
      "value": "0x2C7"
    },
    "97": {
      "fn": null,
      "offset": [
        857,
        7365
      ],
      "op": "JUMPI",
      "path": "38"
    },
    "98": {
      "fn": null,
      "offset": [
        857,
        7365
      ],
      "op": "DUP1",
      "path": "38"
    },
    "99": {
      "fn": null,
      "offset": [
        857,
        7365
      ],
      "op": "PUSH4",
      "path": "38",
      "value": "0xFB8F198D"
    },
    "104": {
      "fn": null,
      "offset": [
        857,
        7365
      ],
      "op": "EQ",
      "path": "38"
    },
    "105": {
      "fn": null,
      "offset": [
        857,
        7365
      ],
      "op": "PUSH2",
      "path": "38",
      "value": "0x2DA"
    },
    "108": {
      "fn": null,
      "offset": [
        857,
        7365
      ],
      "op": "JUMPI",
      "path": "38"
    },
    "109": {
      "fn": null,
      "offset": [
        857,
        7365
      ],
      "op": "PUSH1",
      "path": "38",
      "value": "0x0"
    },
    "111": {
      "fn": null,
      "offset": [
        857,
        7365
      ],
      "op": "DUP1",
      "path": "38"
    },
    "112": {
      "fn": null,
      "offset": [
        857,
        7365
      ],
      "op": "REVERT",
      "path": "38"
    },
    "113": {
      "fn": null,
      "offset": [
        857,
        7365
      ],
      "op": "JUMPDEST",
      "path": "38"
    },
    "114": {
      "fn": null,
      "offset": [
        857,
        7365
      ],
      "op": "DUP1",
      "path": "38"
    },
    "115": {
      "fn": null,
      "offset": [
        857,
        7365
      ],
      "op": "PUSH4",
      "path": "38",
      "value": "0x88433651"
    },
    "120": {
      "fn": null,
      "offset": [
        857,
        7365
      ],
      "op": "EQ",
      "path": "38"
    },
    "121": {
      "fn": null,
      "offset": [
        857,
        7365
      ],
      "op": "PUSH2",
      "path": "38",
      "value": "0x247"
    },
    "124": {
      "fn": null,
      "offset": [
        857,
        7365
      ],
      "op": "JUMPI",
      "path": "38"
    },
    "125": {
      "fn": null,
      "offset": [
        857,
        7365
      ],
      "op": "DUP1",
      "path": "38"
    },
    "126": {
      "fn": null,
      "offset": [
        857,
        7365
      ],
      "op": "PUSH4",
      "path": "38",
      "value": "0x8DA5CB5B"
    },
    "131": {
      "fn": null,
      "offset": [
        857,
        7365
      ],
      "op": "EQ",
      "path": "38"
    },
    "132": {
      "fn": null,
      "offset": [
        857,
        7365
      ],
      "op": "PUSH2",
      "path": "38",
      "value": "0x25A"
    },
    "135": {
      "fn": null,
      "offset": [
        857,
        7365
      ],
      "op": "JUMPI",
      "path": "38"
    },
    "136": {
      "fn": null,
      "offset": [
        857,
        7365
      ],
      "op": "DUP1",
      "path": "38"
    },
    "137": {
      "fn": null,
      "offset": [
        857,
        7365
      ],
      "op": "PUSH4",
      "path": "38",
      "value": "0x95D89B41"
    },
    "142": {
      "fn": null,
      "offset": [
        857,
        7365
      ],
      "op": "EQ",
      "path": "38"
    },
    "143": {
      "fn": null,
      "offset": [
        857,
        7365
      ],
      "op": "PUSH2",
      "path": "38",
      "value": "0x26B"
    },
    "146": {
      "fn": null,
      "offset": [
        857,
        7365
      ],
      "op": "JUMPI",
      "path": "38"
    },
    "147": {
      "fn": null,
      "offset": [
        857,
        7365
      ],
      "op": "DUP1",
      "path": "38"
    },
    "148": {
      "fn": null,
      "offset": [
        857,
        7365
      ],
      "op": "PUSH4",
      "path": "38",
      "value": "0xC87B56DD"
    },
    "153": {
      "fn": null,
      "offset": [
        857,
        7365
      ],
      "op": "EQ",
      "path": "38"
    },
    "154": {
      "fn": null,
      "offset": [
        857,
        7365
      ],
      "op": "PUSH2",
      "path": "38",
      "value": "0x273"
    },
    "157": {
      "fn": null,
      "offset": [
        857,
        7365
      ],
      "op": "JUMPI",
      "path": "38"
    },
    "158": {
      "fn": null,
      "offset": [
        857,
        7365
      ],
      "op": "DUP1",
      "path": "38"
    },
    "159": {
      "fn": null,
      "offset": [
        857,
        7365
      ],
      "op": "PUSH4",
      "path": "38",
      "value": "0xC9DD94C7"
    },
    "164": {
      "fn": null,
      "offset": [
        857,
        7365
      ],
      "op": "EQ",
      "path": "38"
    },
    "165": {
      "fn": null,
      "offset": [
        857,
        7365
      ],
      "op": "PUSH2",
      "path": "38",
      "value": "0x286"
    },
    "168": {
      "fn": null,
      "offset": [
        857,
        7365
      ],
      "op": "JUMPI",
      "path": "38"
    },
    "169": {
      "fn": null,
      "offset": [
        857,
        7365
      ],
      "op": "PUSH1",
      "path": "38",
      "value": "0x0"
    },
    "171": {
      "fn": null,
      "offset": [
        857,
        7365
      ],
      "op": "DUP1",
      "path": "38"
    },
    "172": {
      "fn": null,
      "offset": [
        857,
        7365
      ],
      "op": "REVERT",
      "path": "38"
    },
    "173": {
      "fn": null,
      "offset": [
        857,
        7365
      ],
      "op": "JUMPDEST",
      "path": "38"
    },
    "174": {
      "fn": null,
      "offset": [
        857,
        7365
      ],
      "op": "DUP1",
      "path": "38"
    },
    "175": {
      "fn": null,
      "offset": [
        857,
        7365
      ],
      "op": "PUSH4",
      "path": "38",
      "value": "0x5899E7B2"
    },
    "180": {
      "fn": null,
      "offset": [
        857,
        7365
      ],
      "op": "GT",
      "path": "38"
    },
    "181": {
      "fn": null,
      "offset": [
        857,
        7365
      ],
      "op": "PUSH2",
      "path": "38",
      "value": "0xF4"
    },
    "184": {
      "fn": null,
      "offset": [
        857,
        7365
      ],
      "op": "JUMPI",
      "path": "38"
    },
    "185": {
      "fn": null,
      "offset": [
        857,
        7365
      ],
      "op": "DUP1",
      "path": "38"
    },
    "186": {
      "fn": null,
      "offset": [
        857,
        7365
      ],
      "op": "PUSH4",
      "path": "38",
      "value": "0x5899E7B2"
    },
    "191": {
      "fn": null,
      "offset": [
        857,
        7365
      ],
      "op": "EQ",
      "path": "38"
    },
    "192": {
      "fn": null,
      "offset": [
        857,
        7365
      ],
      "op": "PUSH2",
      "path": "38",
      "value": "0x1A9"
    },
    "195": {
      "fn": null,
      "offset": [
        857,
        7365
      ],
      "op": "JUMPI",
      "path": "38"
    },
    "196": {
      "fn": null,
      "offset": [
        857,
        7365
      ],
      "op": "DUP1",
      "path": "38"
    },
    "197": {
      "fn": null,
      "offset": [
        857,
        7365
      ],
      "op": "PUSH4",
      "path": "38",
      "value": "0x6352211E"
    },
    "202": {
      "fn": null,
      "offset": [
        857,
        7365
      ],
      "op": "EQ",
      "path": "38"
    },
    "203": {
      "fn": null,
      "offset": [
        857,
        7365
      ],
      "op": "PUSH2",
      "path": "38",
      "value": "0x1E2"
    },
    "206": {
      "fn": null,
      "offset": [
        857,
        7365
      ],
      "op": "JUMPI",
      "path": "38"
    },
    "207": {
      "fn": null,
      "offset": [
        857,
        7365
      ],
      "op": "DUP1",
      "path": "38"
    },
    "208": {
      "fn": null,
      "offset": [
        857,
        7365
      ],
      "op": "PUSH4",
      "path": "38",
      "value": "0x6E0A8746"
    },
    "213": {
      "fn": null,
      "offset": [
        857,
        7365
      ],
      "op": "EQ",
      "path": "38"
    },
    "214": {
      "fn": null,
      "offset": [
        857,
        7365
      ],
      "op": "PUSH2",
      "path": "38",
      "value": "0x20D"
    },
    "217": {
      "fn": null,
      "offset": [
        857,
        7365
      ],
      "op": "JUMPI",
      "path": "38"
    },
    "218": {
      "fn": null,
      "offset": [
        857,
        7365
      ],
      "op": "DUP1",
      "path": "38"
    },
    "219": {
      "fn": null,
      "offset": [
        857,
        7365
      ],
      "op": "PUSH4",
      "path": "38",
      "value": "0x70A08231"
    },
    "224": {
      "fn": null,
      "offset": [
        857,
        7365
      ],
      "op": "EQ",
      "path": "38"
    },
    "225": {
      "fn": null,
      "offset": [
        857,
        7365
      ],
      "op": "PUSH2",
      "path": "38",
      "value": "0x21E"
    },
    "228": {
      "fn": null,
      "offset": [
        857,
        7365
      ],
      "op": "JUMPI",
      "path": "38"
    },
    "229": {
      "fn": null,
      "offset": [
        857,
        7365
      ],
      "op": "DUP1",
      "path": "38"
    },
    "230": {
      "fn": null,
      "offset": [
        857,
        7365
      ],
      "op": "PUSH4",
      "path": "38",
      "value": "0x715018A6"
    },
    "235": {
      "fn": null,
      "offset": [
        857,
        7365
      ],
      "op": "EQ",
      "path": "38"
    },
    "236": {
      "fn": null,
      "offset": [
        857,
        7365
      ],
      "op": "PUSH2",
      "path": "38",
      "value": "0x23F"
    },
    "239": {
      "fn": null,
      "offset": [
        857,
        7365
      ],
      "op": "JUMPI",
      "path": "38"
    },
    "240": {
      "fn": null,
      "offset": [
        857,
        7365
      ],
      "op": "PUSH1",
      "path": "38",
      "value": "0x0"
    },
    "242": {
      "fn": null,
      "offset": [
        857,
        7365
      ],
      "op": "DUP1",
      "path": "38"
    },
    "243": {
      "fn": null,
      "offset": [
        857,
        7365
      ],
      "op": "REVERT",
      "path": "38"
    },
    "244": {
      "fn": null,
      "offset": [
        857,
        7365
      ],
      "op": "JUMPDEST",
      "path": "38"
    },
    "245": {
      "fn": null,
      "offset": [
        857,
        7365
      ],
      "op": "DUP1",
      "path": "38"
    },
    "246": {
      "fn": null,
      "offset": [
        857,
        7365
      ],
      "op": "PUSH4",
      "path": "38",
      "value": "0x1FFC9A7"
    },
    "251": {
      "fn": null,
      "offset": [
        857,
        7365
      ],
      "op": "EQ",
      "path": "38"
    },
    "252": {
      "fn": null,
      "offset": [
        857,
        7365
      ],
      "op": "PUSH2",
      "path": "38",
      "value": "0x131"
    },
    "255": {
      "fn": null,
      "offset": [
        857,
        7365
      ],
      "op": "JUMPI",
      "path": "38"
    },
    "256": {
      "fn": null,
      "offset": [
        857,
        7365
      ],
      "op": "DUP1",
      "path": "38"
    },
    "257": {
      "fn": null,
      "offset": [
        857,
        7365
      ],
      "op": "PUSH4",
      "path": "38",
      "value": "0x6FDDE03"
    },
    "262": {
      "fn": null,
      "offset": [
        857,
        7365
      ],
      "op": "EQ",
      "path": "38"
    },
    "263": {
      "fn": null,
      "offset": [
        857,
        7365
      ],
      "op": "PUSH2",
      "path": "38",
      "value": "0x159"
    },
    "266": {
      "fn": null,
      "offset": [
        857,
        7365
      ],
      "op": "JUMPI",
      "path": "38"
    },
    "267": {
      "fn": null,
      "offset": [
        857,
        7365
      ],
      "op": "DUP1",
      "path": "38"
    },
    "268": {
      "fn": null,
      "offset": [
        857,
        7365
      ],
      "op": "PUSH4",
      "path": "38",
      "value": "0x8C92E57"
    },
    "273": {
      "fn": null,
      "offset": [
        857,
        7365
      ],
      "op": "EQ",
      "path": "38"
    },
    "274": {
      "fn": null,
      "offset": [
        857,
        7365
      ],
      "op": "PUSH2",
      "path": "38",
      "value": "0x16E"
    },
    "277": {
      "fn": null,
      "offset": [
        857,
        7365
      ],
      "op": "JUMPI",
      "path": "38"
    },
    "278": {
      "fn": null,
      "offset": [
        857,
        7365
      ],
      "op": "DUP1",
      "path": "38"
    },
    "279": {
      "fn": null,
      "offset": [
        857,
        7365
      ],
      "op": "PUSH4",
      "path": "38",
      "value": "0x210FA96B"
    },
    "284": {
      "fn": null,
      "offset": [
        857,
        7365
      ],
      "op": "EQ",
      "path": "38"
    },
    "285": {
      "fn": null,
      "offset": [
        857,
        7365
      ],
      "op": "PUSH2",
      "path": "38",
      "value": "0x183"
    },
    "288": {
      "fn": null,
      "offset": [
        857,
        7365
      ],
      "op": "JUMPI",
      "path": "38"
    },
    "289": {
      "fn": null,
      "offset": [
        857,
        7365
      ],
      "op": "DUP1",
      "path": "38"
    },
    "290": {
      "fn": null,
      "offset": [
        857,
        7365
      ],
      "op": "PUSH4",
      "path": "38",
      "value": "0x42966C68"
    },
    "295": {
      "fn": null,
      "offset": [
        857,
        7365
      ],
      "op": "EQ",
      "path": "38"
    },
    "296": {
      "fn": null,
      "offset": [
        857,
        7365
      ],
      "op": "PUSH2",
      "path": "38",
      "value": "0x196"
    },
    "299": {
      "fn": null,
      "offset": [
        857,
        7365
      ],
      "op": "JUMPI",
      "path": "38"
    },
    "300": {
      "fn": null,
      "offset": [
        857,
        7365
      ],
      "op": "JUMPDEST",
      "path": "38"
    },
    "301": {
      "fn": null,
      "offset": [
        857,
        7365
      ],
      "op": "PUSH1",
      "path": "38",
      "value": "0x0"
    },
    "303": {
      "fn": null,
      "offset": [
        857,
        7365
      ],
      "op": "DUP1",
      "path": "38"
    },
    "304": {
      "first_revert": true,
      "fn": null,
      "offset": [
        857,
        7365
      ],
      "op": "REVERT",
      "path": "38"
    },
    "305": {
      "fn": "ERC4973.supportsInterface",
      "offset": [
        4448,
        4776
      ],
      "op": "JUMPDEST",
      "path": "41"
    },
    "306": {
      "fn": "ERC4973.supportsInterface",
      "offset": [
        4448,
        4776
      ],
      "op": "PUSH2",
      "path": "41",
      "value": "0x144"
    },
    "309": {
      "fn": "ERC4973.supportsInterface",
      "offset": [
        4448,
        4776
      ],
      "op": "PUSH2",
      "path": "41",
      "value": "0x13F"
    },
    "312": {
      "fn": "ERC4973.supportsInterface",
      "offset": [
        4448,
        4776
      ],
      "op": "CALLDATASIZE",
      "path": "41"
    },
    "313": {
      "fn": "ERC4973.supportsInterface",
      "offset": [
        4448,
        4776
      ],
      "op": "PUSH1",
      "path": "41",
      "value": "0x4"
    },
    "315": {
      "fn": "ERC4973.supportsInterface",
      "offset": [
        4448,
        4776
      ],
      "op": "PUSH2",
      "path": "41",
      "value": "0x1451"
    },
    "318": {
      "fn": "ERC4973.supportsInterface",
      "jump": "i",
      "offset": [
        4448,
        4776
      ],
      "op": "JUMP",
      "path": "41"
    },
    "319": {
      "fn": "ERC4973.supportsInterface",
      "offset": [
        4448,
        4776
      ],
      "op": "JUMPDEST",
      "path": "41"
    },
    "320": {
      "fn": "ERC4973.supportsInterface",
      "offset": [
        4448,
        4776
      ],
      "op": "PUSH2",
      "path": "41",
      "value": "0x2ED"
    },
    "323": {
      "fn": "ERC4973.supportsInterface",
      "jump": "i",
      "offset": [
        4448,
        4776
      ],
      "op": "JUMP",
      "path": "41"
    },
    "324": {
      "fn": "ERC4973.supportsInterface",
      "offset": [
        4448,
        4776
      ],
      "op": "JUMPDEST",
      "path": "41"
    },
    "325": {
      "fn": "ERC4973.supportsInterface",
      "offset": [
        4448,
        4776
      ],
      "op": "PUSH1",
      "path": "41",
      "value": "0x40"
    },
    "327": {
      "fn": "ERC4973.supportsInterface",
      "offset": [
        4448,
        4776
      ],
      "op": "MLOAD",
      "path": "41"
    },
    "328": {
      "op": "SWAP1"
    },
    "329": {
      "op": "ISZERO"
    },
    "330": {
      "op": "ISZERO"
    },
    "331": {
      "op": "DUP2"
    },
    "332": {
      "op": "MSTORE"
    },
    "333": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "335": {
      "op": "ADD"
    },
    "336": {
      "fn": "ERC4973.supportsInterface",
      "offset": [
        4448,
        4776
      ],
      "op": "JUMPDEST",
      "path": "41"
    },
    "337": {
      "fn": "ERC4973.supportsInterface",
      "offset": [
        4448,
        4776
      ],
      "op": "PUSH1",
      "path": "41",
      "value": "0x40"
    },
    "339": {
      "fn": "ERC4973.supportsInterface",
      "offset": [
        4448,
        4776
      ],
      "op": "MLOAD",
      "path": "41"
    },
    "340": {
      "fn": "ERC4973.supportsInterface",
      "offset": [
        4448,
        4776
      ],
      "op": "DUP1",
      "path": "41"
    },
    "341": {
      "fn": "ERC4973.supportsInterface",
      "offset": [
        4448,
        4776
      ],
      "op": "SWAP2",
      "path": "41"
    },
    "342": {
      "fn": "ERC4973.supportsInterface",
      "offset": [
        4448,
        4776
      ],
      "op": "SUB",
      "path": "41"
    },
    "343": {
      "fn": "ERC4973.supportsInterface",
      "offset": [
        4448,
        4776
      ],
      "op": "SWAP1",
      "path": "41"
    },
    "344": {
      "fn": "ERC4973.supportsInterface",
      "offset": [
        4448,
        4776
      ],
      "op": "RETURN",
      "path": "41"
    },
    "345": {
      "fn": "ERC4973.name",
      "offset": [
        4782,
        4880
      ],
      "op": "JUMPDEST",
      "path": "41"
    },
    "346": {
      "fn": "ERC4973.name",
      "offset": [
        4782,
        4880
      ],
      "op": "PUSH2",
      "path": "41",
      "value": "0x161"
    },
    "349": {
      "fn": "ERC4973.name",
      "offset": [
        4782,
        4880
      ],
      "op": "PUSH2",
      "path": "41",
      "value": "0x33F"
    },
    "352": {
      "fn": "ERC4973.name",
      "jump": "i",
      "offset": [
        4782,
        4880
      ],
      "op": "JUMP",
      "path": "41"
    },
    "353": {
      "fn": "ERC4973.name",
      "offset": [
        4782,
        4880
      ],
      "op": "JUMPDEST",
      "path": "41"
    },
    "354": {
      "fn": "ERC4973.name",
      "offset": [
        4782,
        4880
      ],
      "op": "PUSH1",
      "path": "41",
      "value": "0x40"
    },
    "356": {
      "fn": "ERC4973.name",
      "offset": [
        4782,
        4880
      ],
      "op": "MLOAD",
      "path": "41"
    },
    "357": {
      "fn": "ERC4973.name",
      "offset": [
        4782,
        4880
      ],
      "op": "PUSH2",
      "path": "41",
      "value": "0x150"
    },
    "360": {
      "fn": "ERC4973.name",
      "offset": [
        4782,
        4880
      ],
      "op": "SWAP2",
      "path": "41"
    },
    "361": {
      "fn": "ERC4973.name",
      "offset": [
        4782,
        4880
      ],
      "op": "SWAP1",
      "path": "41"
    },
    "362": {
      "fn": "ERC4973.name",
      "offset": [
        4782,
        4880
      ],
      "op": "PUSH2",
      "path": "41",
      "value": "0x14AB"
    },
    "365": {
      "fn": "ERC4973.name",
      "jump": "i",
      "offset": [
        4782,
        4880
      ],
      "op": "JUMP",
      "path": "41"
    },
    "366": {
      "fn": "SoulboundCore.revokeWithSignature",
      "offset": [
        4274,
        5201
      ],
      "op": "JUMPDEST",
      "path": "38"
    },
    "367": {
      "fn": "SoulboundCore.revokeWithSignature",
      "offset": [
        4274,
        5201
      ],
      "op": "PUSH2",
      "path": "38",
      "value": "0x181"
    },
    "370": {
      "fn": "SoulboundCore.revokeWithSignature",
      "offset": [
        4274,
        5201
      ],
      "op": "PUSH2",
      "path": "38",
      "value": "0x17C"
    },
    "373": {
      "fn": "SoulboundCore.revokeWithSignature",
      "offset": [
        4274,
        5201
      ],
      "op": "CALLDATASIZE",
      "path": "38"
    },
    "374": {
      "fn": "SoulboundCore.revokeWithSignature",
      "offset": [
        4274,
        5201
      ],
      "op": "PUSH1",
      "path": "38",
      "value": "0x4"
    },
    "376": {
      "fn": "SoulboundCore.revokeWithSignature",
      "offset": [
        4274,
        5201
      ],
      "op": "PUSH2",
      "path": "38",
      "value": "0x1581"
    },
    "379": {
      "fn": "SoulboundCore.revokeWithSignature",
      "jump": "i",
      "offset": [
        4274,
        5201
      ],
      "op": "JUMP",
      "path": "38"
    },
    "380": {
      "fn": "SoulboundCore.revokeWithSignature",
      "offset": [
        4274,
        5201
      ],
      "op": "JUMPDEST",
      "path": "38"
    },
    "381": {
      "fn": "SoulboundCore.revokeWithSignature",
      "offset": [
        4274,
        5201
      ],
      "op": "PUSH2",
      "path": "38",
      "value": "0x3D1"
    },
    "384": {
      "fn": "SoulboundCore.revokeWithSignature",
      "jump": "i",
      "offset": [
        4274,
        5201
      ],
      "op": "JUMP",
      "path": "38"
    },
    "385": {
      "fn": "SoulboundCore.revokeWithSignature",
      "offset": [
        4274,
        5201
      ],
      "op": "JUMPDEST",
      "path": "38"
    },
    "386": {
      "fn": "SoulboundCore.revokeWithSignature",
      "offset": [
        4274,
        5201
      ],
      "op": "STOP",
      "path": "38"
    },
    "387": {
      "fn": "SoulboundCore.generateTokenURI",
      "offset": [
        6139,
        6521
      ],
      "op": "JUMPDEST",
      "path": "38"
    },
    "388": {
      "fn": "SoulboundCore.generateTokenURI",
      "offset": [
        6139,
        6521
      ],
      "op": "PUSH2",
      "path": "38",
      "value": "0x161"
    },
    "391": {
      "fn": "SoulboundCore.generateTokenURI",
      "offset": [
        6139,
        6521
      ],
      "op": "PUSH2",
      "path": "38",
      "value": "0x191"
    },
    "394": {
      "fn": "SoulboundCore.generateTokenURI",
      "offset": [
        6139,
        6521
      ],
      "op": "CALLDATASIZE",
      "path": "38"
    },
    "395": {
      "fn": "SoulboundCore.generateTokenURI",
      "offset": [
        6139,
        6521
      ],
      "op": "PUSH1",
      "path": "38",
      "value": "0x4"
    },
    "397": {
      "fn": "SoulboundCore.generateTokenURI",
      "offset": [
        6139,
        6521
      ],
      "op": "PUSH2",
      "path": "38",
      "value": "0x15D1"
    },
    "400": {
      "fn": "SoulboundCore.generateTokenURI",
      "jump": "i",
      "offset": [
        6139,
        6521
      ],
      "op": "JUMP",
      "path": "38"
    },
    "401": {
      "fn": "SoulboundCore.generateTokenURI",
      "offset": [
        6139,
        6521
      ],
      "op": "JUMPDEST",
      "path": "38"
    },
    "402": {
      "fn": "SoulboundCore.generateTokenURI",
      "offset": [
        6139,
        6521
      ],
      "op": "PUSH2",
      "path": "38",
      "value": "0x50C"
    },
    "405": {
      "fn": "SoulboundCore.generateTokenURI",
      "jump": "i",
      "offset": [
        6139,
        6521
      ],
      "op": "JUMP",
      "path": "38"
    },
    "406": {
      "fn": "ERC4973.burn",
      "offset": [
        5243,
        5408
      ],
      "op": "JUMPDEST",
      "path": "41"
    },
    "407": {
      "fn": "ERC4973.burn",
      "offset": [
        5243,
        5408
      ],
      "op": "PUSH2",
      "path": "41",
      "value": "0x181"
    },
    "410": {
      "fn": "ERC4973.burn",
      "offset": [
        5243,
        5408
      ],
      "op": "PUSH2",
      "path": "41",
      "value": "0x1A4"
    },
    "413": {
      "fn": "ERC4973.burn",
      "offset": [
        5243,
        5408
      ],
      "op": "CALLDATASIZE",
      "path": "41"
    },
    "414": {
      "fn": "ERC4973.burn",
      "offset": [
        5243,
        5408
      ],
      "op": "PUSH1",
      "path": "41",
      "value": "0x4"
    },
    "416": {
      "fn": "ERC4973.burn",
      "offset": [
        5243,
        5408
      ],
      "op": "PUSH2",
      "path": "41",
      "value": "0x15D1"
    },
    "419": {
      "fn": "ERC4973.burn",
      "jump": "i",
      "offset": [
        5243,
        5408
      ],
      "op": "JUMP",
      "path": "41"
    },
    "420": {
      "fn": "ERC4973.burn",
      "offset": [
        5243,
        5408
      ],
      "op": "JUMPDEST",
      "path": "41"
    },
    "421": {
      "fn": "ERC4973.burn",
      "offset": [
        5243,
        5408
      ],
      "op": "PUSH2",
      "path": "41",
      "value": "0x58E"
    },
    "424": {
      "fn": "ERC4973.burn",
      "jump": "i",
      "offset": [
        5243,
        5408
      ],
      "op": "JUMP",
      "path": "41"
    },
    "425": {
      "fn": "Soulbound.isMinted",
      "offset": [
        5225,
        5373
      ],
      "op": "JUMPDEST",
      "path": "37"
    },
    "426": {
      "fn": "Soulbound.isMinted",
      "offset": [
        5225,
        5373
      ],
      "op": "PUSH2",
      "path": "37",
      "value": "0x144"
    },
    "429": {
      "fn": "Soulbound.isMinted",
      "offset": [
        5225,
        5373
      ],
      "op": "PUSH2",
      "path": "37",
      "value": "0x1B7"
    },
    "432": {
      "fn": "Soulbound.isMinted",
      "offset": [
        5225,
        5373
      ],
      "op": "CALLDATASIZE",
      "path": "37"
    },
    "433": {
      "fn": "Soulbound.isMinted",
      "offset": [
        5225,
        5373
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0x4"
    },
    "435": {
      "fn": "Soulbound.isMinted",
      "offset": [
        5225,
        5373
      ],
      "op": "PUSH2",
      "path": "37",
      "value": "0x1606"
    },
    "438": {
      "fn": "Soulbound.isMinted",
      "jump": "i",
      "offset": [
        5225,
        5373
      ],
      "op": "JUMP",
      "path": "37"
    },
    "439": {
      "fn": "Soulbound.isMinted",
      "offset": [
        5225,
        5373
      ],
      "op": "JUMPDEST",
      "path": "37"
    },
    "440": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "442": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "444": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "446": {
      "op": "SHL"
    },
    "447": {
      "op": "SUB"
    },
    "448": {
      "fn": "Soulbound.isMinted",
      "offset": [
        5346,
        5356
      ],
      "op": "SWAP2",
      "path": "37",
      "statement": 0
    },
    "449": {
      "fn": "Soulbound.isMinted",
      "offset": [
        5346,
        5356
      ],
      "op": "SWAP1",
      "path": "37"
    },
    "450": {
      "fn": "Soulbound.isMinted",
      "offset": [
        5346,
        5356
      ],
      "op": "SWAP2",
      "path": "37"
    },
    "451": {
      "fn": "Soulbound.isMinted",
      "offset": [
        5346,
        5356
      ],
      "op": "AND",
      "path": "37"
    },
    "452": {
      "fn": "Soulbound.isMinted",
      "offset": [
        5319,
        5323
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0x0"
    },
    "454": {
      "fn": "Soulbound.isMinted",
      "offset": [
        5346,
        5356
      ],
      "op": "SWAP1",
      "path": "37"
    },
    "455": {
      "fn": "Soulbound.isMinted",
      "offset": [
        5346,
        5356
      ],
      "op": "DUP2",
      "path": "37"
    },
    "456": {
      "fn": "Soulbound.isMinted",
      "offset": [
        5346,
        5356
      ],
      "op": "MSTORE",
      "path": "37"
    },
    "457": {
      "fn": "Soulbound.isMinted",
      "offset": [
        5346,
        5351
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0x7"
    },
    "459": {
      "fn": "Soulbound.isMinted",
      "offset": [
        5346,
        5356
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0x20"
    },
    "461": {
      "fn": "Soulbound.isMinted",
      "offset": [
        5346,
        5356
      ],
      "op": "SWAP1",
      "path": "37"
    },
    "462": {
      "fn": "Soulbound.isMinted",
      "offset": [
        5346,
        5356
      ],
      "op": "DUP2",
      "path": "37"
    },
    "463": {
      "fn": "Soulbound.isMinted",
      "offset": [
        5346,
        5356
      ],
      "op": "MSTORE",
      "path": "37"
    },
    "464": {
      "fn": "Soulbound.isMinted",
      "offset": [
        5346,
        5356
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0x40"
    },
    "466": {
      "fn": "Soulbound.isMinted",
      "offset": [
        5346,
        5356
      ],
      "op": "DUP1",
      "path": "37"
    },
    "467": {
      "fn": "Soulbound.isMinted",
      "offset": [
        5346,
        5356
      ],
      "op": "DUP4",
      "path": "37"
    },
    "468": {
      "fn": "Soulbound.isMinted",
      "offset": [
        5346,
        5356
      ],
      "op": "KECCAK256",
      "path": "37"
    },
    "469": {
      "fn": "Soulbound.isMinted",
      "offset": [
        5346,
        5366
      ],
      "op": "SWAP4",
      "path": "37"
    },
    "470": {
      "fn": "Soulbound.isMinted",
      "offset": [
        5346,
        5366
      ],
      "op": "DUP4",
      "path": "37"
    },
    "471": {
      "fn": "Soulbound.isMinted",
      "offset": [
        5346,
        5366
      ],
      "op": "MSTORE",
      "path": "37"
    },
    "472": {
      "fn": "Soulbound.isMinted",
      "offset": [
        5346,
        5366
      ],
      "op": "SWAP3",
      "path": "37"
    },
    "473": {
      "fn": "Soulbound.isMinted",
      "offset": [
        5346,
        5366
      ],
      "op": "SWAP1",
      "path": "37"
    },
    "474": {
      "fn": "Soulbound.isMinted",
      "offset": [
        5346,
        5366
      ],
      "op": "MSTORE",
      "path": "37"
    },
    "475": {
      "fn": "Soulbound.isMinted",
      "offset": [
        5346,
        5366
      ],
      "op": "KECCAK256",
      "path": "37"
    },
    "476": {
      "fn": "Soulbound.isMinted",
      "offset": [
        5346,
        5366
      ],
      "op": "SLOAD",
      "path": "37"
    },
    "477": {
      "fn": "Soulbound.isMinted",
      "offset": [
        5346,
        5366
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0xFF"
    },
    "479": {
      "fn": "Soulbound.isMinted",
      "offset": [
        5346,
        5366
      ],
      "op": "AND",
      "path": "37"
    },
    "480": {
      "fn": "Soulbound.isMinted",
      "offset": [
        5346,
        5366
      ],
      "op": "SWAP1",
      "path": "37"
    },
    "481": {
      "fn": "Soulbound.isMinted",
      "offset": [
        5225,
        5373
      ],
      "op": "JUMP",
      "path": "37"
    },
    "482": {
      "fn": "ERC4973.ownerOf",
      "offset": [
        5705,
        5918
      ],
      "op": "JUMPDEST",
      "path": "41"
    },
    "483": {
      "fn": "ERC4973.ownerOf",
      "offset": [
        5705,
        5918
      ],
      "op": "PUSH2",
      "path": "41",
      "value": "0x1F5"
    },
    "486": {
      "fn": "ERC4973.ownerOf",
      "offset": [
        5705,
        5918
      ],
      "op": "PUSH2",
      "path": "41",
      "value": "0x1F0"
    },
    "489": {
      "fn": "ERC4973.ownerOf",
      "offset": [
        5705,
        5918
      ],
      "op": "CALLDATASIZE",
      "path": "41"
    },
    "490": {
      "fn": "ERC4973.ownerOf",
      "offset": [
        5705,
        5918
      ],
      "op": "PUSH1",
      "path": "41",
      "value": "0x4"
    },
    "492": {
      "fn": "ERC4973.ownerOf",
      "offset": [
        5705,
        5918
      ],
      "op": "PUSH2",
      "path": "41",
      "value": "0x15D1"
    },
    "495": {
      "fn": "ERC4973.ownerOf",
      "jump": "i",
      "offset": [
        5705,
        5918
      ],
      "op": "JUMP",
      "path": "41"
    },
    "496": {
      "fn": "ERC4973.ownerOf",
      "offset": [
        5705,
        5918
      ],
      "op": "JUMPDEST",
      "path": "41"
    },
    "497": {
      "fn": "ERC4973.ownerOf",
      "offset": [
        5705,
        5918
      ],
      "op": "PUSH2",
      "path": "41",
      "value": "0x603"
    },
    "500": {
      "fn": "ERC4973.ownerOf",
      "jump": "i",
      "offset": [
        5705,
        5918
      ],
      "op": "JUMP",
      "path": "41"
    },
    "501": {
      "fn": "ERC4973.ownerOf",
      "offset": [
        5705,
        5918
      ],
      "op": "JUMPDEST",
      "path": "41"
    },
    "502": {
      "fn": "ERC4973.ownerOf",
      "offset": [
        5705,
        5918
      ],
      "op": "PUSH1",
      "path": "41",
      "value": "0x40"
    },
    "504": {
      "fn": "ERC4973.ownerOf",
      "offset": [
        5705,
        5918
      ],
      "op": "MLOAD",
      "path": "41"
    },
    "505": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "507": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "509": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "511": {
      "op": "SHL"
    },
    "512": {
      "op": "SUB"
    },
    "513": {
      "op": "SWAP1"
    },
    "514": {
      "op": "SWAP2"
    },
    "515": {
      "op": "AND"
    },
    "516": {
      "op": "DUP2"
    },
    "517": {
      "op": "MSTORE"
    },
    "518": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "520": {
      "op": "ADD"
    },
    "521": {
      "fn": "ERC4973.ownerOf",
      "offset": [
        5705,
        5918
      ],
      "op": "PUSH2",
      "path": "41",
      "value": "0x150"
    },
    "524": {
      "op": "JUMP"
    },
    "525": {
      "fn": "Allowlist.getAllowlistOwner",
      "offset": [
        2171,
        2268
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "526": {
      "fn": "Allowlist.getAllowlistOwner",
      "offset": [
        2247,
        2261
      ],
      "op": "PUSH1",
      "path": "14",
      "statement": 1,
      "value": "0x8"
    },
    "528": {
      "fn": "Allowlist.getAllowlistOwner",
      "offset": [
        2247,
        2261
      ],
      "op": "SLOAD",
      "path": "14"
    },
    "529": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "531": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "533": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "535": {
      "op": "SHL"
    },
    "536": {
      "op": "SUB"
    },
    "537": {
      "fn": "Allowlist.getAllowlistOwner",
      "offset": [
        2247,
        2261
      ],
      "op": "AND",
      "path": "14"
    },
    "538": {
      "fn": "Allowlist.getAllowlistOwner",
      "offset": [
        2171,
        2268
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x1F5"
    },
    "541": {
      "fn": "Allowlist.getAllowlistOwner",
      "offset": [
        2171,
        2268
      ],
      "op": "JUMP",
      "path": "14"
    },
    "542": {
      "fn": "ERC4973.balanceOf",
      "offset": [
        5414,
        5699
      ],
      "op": "JUMPDEST",
      "path": "41"
    },
    "543": {
      "fn": "ERC4973.balanceOf",
      "offset": [
        5414,
        5699
      ],
      "op": "PUSH2",
      "path": "41",
      "value": "0x231"
    },
    "546": {
      "fn": "ERC4973.balanceOf",
      "offset": [
        5414,
        5699
      ],
      "op": "PUSH2",
      "path": "41",
      "value": "0x22C"
    },
    "549": {
      "fn": "ERC4973.balanceOf",
      "offset": [
        5414,
        5699
      ],
      "op": "CALLDATASIZE",
      "path": "41"
    },
    "550": {
      "fn": "ERC4973.balanceOf",
      "offset": [
        5414,
        5699
      ],
      "op": "PUSH1",
      "path": "41",
      "value": "0x4"
    },
    "552": {
      "fn": "ERC4973.balanceOf",
      "offset": [
        5414,
        5699
      ],
      "op": "PUSH2",
      "path": "41",
      "value": "0x1630"
    },
    "555": {
      "fn": "ERC4973.balanceOf",
      "jump": "i",
      "offset": [
        5414,
        5699
      ],
      "op": "JUMP",
      "path": "41"
    },
    "556": {
      "fn": "ERC4973.balanceOf",
      "offset": [
        5414,
        5699
      ],
      "op": "JUMPDEST",
      "path": "41"
    },
    "557": {
      "fn": "ERC4973.balanceOf",
      "offset": [
        5414,
        5699
      ],
      "op": "PUSH2",
      "path": "41",
      "value": "0x668"
    },
    "560": {
      "fn": "ERC4973.balanceOf",
      "jump": "i",
      "offset": [
        5414,
        5699
      ],
      "op": "JUMP",
      "path": "41"
    },
    "561": {
      "fn": "ERC4973.balanceOf",
      "offset": [
        5414,
        5699
      ],
      "op": "JUMPDEST",
      "path": "41"
    },
    "562": {
      "fn": "ERC4973.balanceOf",
      "offset": [
        5414,
        5699
      ],
      "op": "PUSH1",
      "path": "41",
      "value": "0x40"
    },
    "564": {
      "fn": "ERC4973.balanceOf",
      "offset": [
        5414,
        5699
      ],
      "op": "MLOAD",
      "path": "41"
    },
    "565": {
      "op": "SWAP1"
    },
    "566": {
      "op": "DUP2"
    },
    "567": {
      "op": "MSTORE"
    },
    "568": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "570": {
      "op": "ADD"
    },
    "571": {
      "fn": "ERC4973.balanceOf",
      "offset": [
        5414,
        5699
      ],
      "op": "PUSH2",
      "path": "41",
      "value": "0x150"
    },
    "574": {
      "op": "JUMP"
    },
    "575": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1668,
        1769
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "576": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1668,
        1769
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x181"
    },
    "579": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1668,
        1769
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x6F1"
    },
    "582": {
      "fn": "Ownable.renounceOwnership",
      "jump": "i",
      "offset": [
        1668,
        1769
      ],
      "op": "JUMP",
      "path": "0"
    },
    "583": {
      "fn": "SoulboundCore.setBaseURI",
      "offset": [
        5539,
        5739
      ],
      "op": "JUMPDEST",
      "path": "38"
    },
    "584": {
      "fn": "SoulboundCore.setBaseURI",
      "offset": [
        5539,
        5739
      ],
      "op": "PUSH2",
      "path": "38",
      "value": "0x181"
    },
    "587": {
      "fn": "SoulboundCore.setBaseURI",
      "offset": [
        5539,
        5739
      ],
      "op": "PUSH2",
      "path": "38",
      "value": "0x255"
    },
    "590": {
      "fn": "SoulboundCore.setBaseURI",
      "offset": [
        5539,
        5739
      ],
      "op": "CALLDATASIZE",
      "path": "38"
    },
    "591": {
      "fn": "SoulboundCore.setBaseURI",
      "offset": [
        5539,
        5739
      ],
      "op": "PUSH1",
      "path": "38",
      "value": "0x4"
    },
    "593": {
      "fn": "SoulboundCore.setBaseURI",
      "offset": [
        5539,
        5739
      ],
      "op": "PUSH2",
      "path": "38",
      "value": "0x164B"
    },
    "596": {
      "fn": "SoulboundCore.setBaseURI",
      "jump": "i",
      "offset": [
        5539,
        5739
      ],
      "op": "JUMP",
      "path": "38"
    },
    "597": {
      "fn": "SoulboundCore.setBaseURI",
      "offset": [
        5539,
        5739
      ],
      "op": "JUMPDEST",
      "path": "38"
    },
    "598": {
      "fn": "SoulboundCore.setBaseURI",
      "offset": [
        5539,
        5739
      ],
      "op": "PUSH2",
      "path": "38",
      "value": "0x727"
    },
    "601": {
      "fn": "SoulboundCore.setBaseURI",
      "jump": "i",
      "offset": [
        5539,
        5739
      ],
      "op": "JUMP",
      "path": "38"
    },
    "602": {
      "fn": "Ownable.owner",
      "offset": [
        1036,
        1121
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "603": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 2,
      "value": "0x5"
    },
    "605": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "606": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "608": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "610": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "612": {
      "op": "SHL"
    },
    "613": {
      "op": "SUB"
    },
    "614": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "AND",
      "path": "0"
    },
    "615": {
      "fn": "Ownable.owner",
      "offset": [
        1036,
        1121
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1F5"
    },
    "618": {
      "fn": "Ownable.owner",
      "offset": [
        1036,
        1121
      ],
      "op": "JUMP",
      "path": "0"
    },
    "619": {
      "fn": "ERC4973.symbol",
      "offset": [
        4886,
        4988
      ],
      "op": "JUMPDEST",
      "path": "41"
    },
    "620": {
      "fn": "ERC4973.symbol",
      "offset": [
        4886,
        4988
      ],
      "op": "PUSH2",
      "path": "41",
      "value": "0x161"
    },
    "623": {
      "fn": "ERC4973.symbol",
      "offset": [
        4886,
        4988
      ],
      "op": "PUSH2",
      "path": "41",
      "value": "0x7C9"
    },
    "626": {
      "fn": "ERC4973.symbol",
      "jump": "i",
      "offset": [
        4886,
        4988
      ],
      "op": "JUMP",
      "path": "41"
    },
    "627": {
      "fn": "ERC4973.tokenURI",
      "offset": [
        4994,
        5237
      ],
      "op": "JUMPDEST",
      "path": "41"
    },
    "628": {
      "fn": "ERC4973.tokenURI",
      "offset": [
        4994,
        5237
      ],
      "op": "PUSH2",
      "path": "41",
      "value": "0x161"
    },
    "631": {
      "fn": "ERC4973.tokenURI",
      "offset": [
        4994,
        5237
      ],
      "op": "PUSH2",
      "path": "41",
      "value": "0x281"
    },
    "634": {
      "fn": "ERC4973.tokenURI",
      "offset": [
        4994,
        5237
      ],
      "op": "CALLDATASIZE",
      "path": "41"
    },
    "635": {
      "fn": "ERC4973.tokenURI",
      "offset": [
        4994,
        5237
      ],
      "op": "PUSH1",
      "path": "41",
      "value": "0x4"
    },
    "637": {
      "fn": "ERC4973.tokenURI",
      "offset": [
        4994,
        5237
      ],
      "op": "PUSH2",
      "path": "41",
      "value": "0x15D1"
    },
    "640": {
      "fn": "ERC4973.tokenURI",
      "jump": "i",
      "offset": [
        4994,
        5237
      ],
      "op": "JUMP",
      "path": "41"
    },
    "641": {
      "fn": "ERC4973.tokenURI",
      "offset": [
        4994,
        5237
      ],
      "op": "JUMPDEST",
      "path": "41"
    },
    "642": {
      "fn": "ERC4973.tokenURI",
      "offset": [
        4994,
        5237
      ],
      "op": "PUSH2",
      "path": "41",
      "value": "0x7D8"
    },
    "645": {
      "fn": "ERC4973.tokenURI",
      "jump": "i",
      "offset": [
        4994,
        5237
      ],
      "op": "JUMP",
      "path": "41"
    },
    "646": {
      "fn": "Soulbound._getBaseURI",
      "offset": [
        7425,
        7673
      ],
      "op": "JUMPDEST",
      "path": "37"
    },
    "647": {
      "fn": "Soulbound._getBaseURI",
      "offset": [
        7425,
        7673
      ],
      "op": "PUSH2",
      "path": "37",
      "value": "0x161"
    },
    "650": {
      "fn": "Soulbound._getBaseURI",
      "offset": [
        7425,
        7673
      ],
      "op": "PUSH2",
      "path": "37",
      "value": "0x8CD"
    },
    "653": {
      "fn": "Soulbound._getBaseURI",
      "jump": "i",
      "offset": [
        7425,
        7673
      ],
      "op": "JUMP",
      "path": "37"
    },
    "654": {
      "fn": "SoulboundCore.issueWithSignature",
      "offset": [
        2807,
        3801
      ],
      "op": "JUMPDEST",
      "path": "38"
    },
    "655": {
      "fn": "SoulboundCore.issueWithSignature",
      "offset": [
        2807,
        3801
      ],
      "op": "PUSH2",
      "path": "38",
      "value": "0x181"
    },
    "658": {
      "fn": "SoulboundCore.issueWithSignature",
      "offset": [
        2807,
        3801
      ],
      "op": "PUSH2",
      "path": "38",
      "value": "0x29C"
    },
    "661": {
      "fn": "SoulboundCore.issueWithSignature",
      "offset": [
        2807,
        3801
      ],
      "op": "CALLDATASIZE",
      "path": "38"
    },
    "662": {
      "fn": "SoulboundCore.issueWithSignature",
      "offset": [
        2807,
        3801
      ],
      "op": "PUSH1",
      "path": "38",
      "value": "0x4"
    },
    "664": {
      "fn": "SoulboundCore.issueWithSignature",
      "offset": [
        2807,
        3801
      ],
      "op": "PUSH2",
      "path": "38",
      "value": "0x1699"
    },
    "667": {
      "fn": "SoulboundCore.issueWithSignature",
      "jump": "i",
      "offset": [
        2807,
        3801
      ],
      "op": "JUMP",
      "path": "38"
    },
    "668": {
      "fn": "SoulboundCore.issueWithSignature",
      "offset": [
        2807,
        3801
      ],
      "op": "JUMPDEST",
      "path": "38"
    },
    "669": {
      "fn": "SoulboundCore.issueWithSignature",
      "offset": [
        2807,
        3801
      ],
      "op": "PUSH2",
      "path": "38",
      "value": "0x92A"
    },
    "672": {
      "fn": "SoulboundCore.issueWithSignature",
      "jump": "i",
      "offset": [
        2807,
        3801
      ],
      "op": "JUMP",
      "path": "38"
    },
    "673": {
      "fn": "Allowlist.verifySignature",
      "offset": [
        2495,
        2645
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "674": {
      "fn": "Allowlist.verifySignature",
      "offset": [
        2495,
        2645
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x144"
    },
    "677": {
      "fn": "Allowlist.verifySignature",
      "offset": [
        2495,
        2645
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x2AF"
    },
    "680": {
      "fn": "Allowlist.verifySignature",
      "offset": [
        2495,
        2645
      ],
      "op": "CALLDATASIZE",
      "path": "14"
    },
    "681": {
      "fn": "Allowlist.verifySignature",
      "offset": [
        2495,
        2645
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x4"
    },
    "683": {
      "fn": "Allowlist.verifySignature",
      "offset": [
        2495,
        2645
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x1721"
    },
    "686": {
      "fn": "Allowlist.verifySignature",
      "jump": "i",
      "offset": [
        2495,
        2645
      ],
      "op": "JUMP",
      "path": "14"
    },
    "687": {
      "fn": "Allowlist.verifySignature",
      "offset": [
        2495,
        2645
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "688": {
      "fn": "Allowlist.verifySignature",
      "offset": [
        2495,
        2645
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0xA5F"
    },
    "691": {
      "fn": "Allowlist.verifySignature",
      "jump": "i",
      "offset": [
        2495,
        2645
      ],
      "op": "JUMP",
      "path": "14"
    },
    "692": {
      "fn": "Allowlist.verifySigner",
      "offset": [
        4852,
        5120
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "693": {
      "fn": "Allowlist.verifySigner",
      "offset": [
        4852,
        5120
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x144"
    },
    "696": {
      "fn": "Allowlist.verifySigner",
      "offset": [
        4852,
        5120
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x2C2"
    },
    "699": {
      "fn": "Allowlist.verifySigner",
      "offset": [
        4852,
        5120
      ],
      "op": "CALLDATASIZE",
      "path": "14"
    },
    "700": {
      "fn": "Allowlist.verifySigner",
      "offset": [
        4852,
        5120
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x4"
    },
    "702": {
      "fn": "Allowlist.verifySigner",
      "offset": [
        4852,
        5120
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x1752"
    },
    "705": {
      "fn": "Allowlist.verifySigner",
      "jump": "i",
      "offset": [
        4852,
        5120
      ],
      "op": "JUMP",
      "path": "14"
    },
    "706": {
      "fn": "Allowlist.verifySigner",
      "offset": [
        4852,
        5120
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "707": {
      "fn": "Allowlist.verifySigner",
      "offset": [
        4852,
        5120
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0xA72"
    },
    "710": {
      "fn": "Allowlist.verifySigner",
      "jump": "i",
      "offset": [
        4852,
        5120
      ],
      "op": "JUMP",
      "path": "14"
    },
    "711": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1918,
        2116
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "712": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1918,
        2116
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x181"
    },
    "715": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1918,
        2116
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2D5"
    },
    "718": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1918,
        2116
      ],
      "op": "CALLDATASIZE",
      "path": "0"
    },
    "719": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1918,
        2116
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "721": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1918,
        2116
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1630"
    },
    "724": {
      "fn": "Ownable.transferOwnership",
      "jump": "i",
      "offset": [
        1918,
        2116
      ],
      "op": "JUMP",
      "path": "0"
    },
    "725": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1918,
        2116
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "726": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1918,
        2116
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xB06"
    },
    "729": {
      "fn": "Ownable.transferOwnership",
      "jump": "i",
      "offset": [
        1918,
        2116
      ],
      "op": "JUMP",
      "path": "0"
    },
    "730": {
      "fn": "Soulbound.issuerOf",
      "offset": [
        4302,
        4822
      ],
      "op": "JUMPDEST",
      "path": "37"
    },
    "731": {
      "fn": "Soulbound.issuerOf",
      "offset": [
        4302,
        4822
      ],
      "op": "PUSH2",
      "path": "37",
      "value": "0x1F5"
    },
    "734": {
      "fn": "Soulbound.issuerOf",
      "offset": [
        4302,
        4822
      ],
      "op": "PUSH2",
      "path": "37",
      "value": "0x2E8"
    },
    "737": {
      "fn": "Soulbound.issuerOf",
      "offset": [
        4302,
        4822
      ],
      "op": "CALLDATASIZE",
      "path": "37"
    },
    "738": {
      "fn": "Soulbound.issuerOf",
      "offset": [
        4302,
        4822
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0x4"
    },
    "740": {
      "fn": "Soulbound.issuerOf",
      "offset": [
        4302,
        4822
      ],
      "op": "PUSH2",
      "path": "37",
      "value": "0x1606"
    },
    "743": {
      "fn": "Soulbound.issuerOf",
      "jump": "i",
      "offset": [
        4302,
        4822
      ],
      "op": "JUMP",
      "path": "37"
    },
    "744": {
      "fn": "Soulbound.issuerOf",
      "offset": [
        4302,
        4822
      ],
      "op": "JUMPDEST",
      "path": "37"
    },
    "745": {
      "fn": "Soulbound.issuerOf",
      "offset": [
        4302,
        4822
      ],
      "op": "PUSH2",
      "path": "37",
      "value": "0xB9E"
    },
    "748": {
      "fn": "Soulbound.issuerOf",
      "jump": "i",
      "offset": [
        4302,
        4822
      ],
      "op": "JUMP",
      "path": "37"
    },
    "749": {
      "fn": "ERC4973.supportsInterface",
      "offset": [
        4448,
        4776
      ],
      "op": "JUMPDEST",
      "path": "41"
    },
    "750": {
      "fn": "ERC4973.supportsInterface",
      "offset": [
        4573,
        4577
      ],
      "op": "PUSH1",
      "path": "41",
      "value": "0x0"
    },
    "752": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "754": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "756": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "758": {
      "op": "SHL"
    },
    "759": {
      "op": "SUB"
    },
    "760": {
      "op": "NOT"
    },
    "761": {
      "fn": "ERC4973.supportsInterface",
      "offset": [
        4612,
        4660
      ],
      "op": "DUP3",
      "path": "41",
      "statement": 3
    },
    "762": {
      "fn": "ERC4973.supportsInterface",
      "offset": [
        4612,
        4660
      ],
      "op": "AND",
      "path": "41"
    },
    "763": {
      "op": "PUSH4",
      "value": "0x5B5E139F"
    },
    "768": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "770": {
      "op": "SHL"
    },
    "771": {
      "fn": "ERC4973.supportsInterface",
      "offset": [
        4612,
        4660
      ],
      "op": "EQ",
      "path": "41"
    },
    "772": {
      "fn": "ERC4973.supportsInterface",
      "offset": [
        4612,
        4660
      ],
      "op": "DUP1",
      "path": "41"
    },
    "773": {
      "fn": "ERC4973.supportsInterface",
      "offset": [
        4612,
        4717
      ],
      "op": "PUSH2",
      "path": "41",
      "value": "0x31E"
    },
    "776": {
      "fn": "ERC4973.supportsInterface",
      "offset": [
        4612,
        4717
      ],
      "op": "JUMPI",
      "path": "41"
    },
    "777": {
      "op": "POP"
    },
    "778": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "780": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "782": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "784": {
      "op": "SHL"
    },
    "785": {
      "op": "SUB"
    },
    "786": {
      "op": "NOT"
    },
    "787": {
      "fn": "ERC4973.supportsInterface",
      "offset": [
        4676,
        4717
      ],
      "op": "DUP3",
      "path": "41"
    },
    "788": {
      "fn": "ERC4973.supportsInterface",
      "offset": [
        4676,
        4717
      ],
      "op": "AND",
      "path": "41"
    },
    "789": {
      "op": "PUSH4",
      "value": "0x5164CF47"
    },
    "794": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "796": {
      "op": "SHL"
    },
    "797": {
      "fn": "ERC4973.supportsInterface",
      "offset": [
        4676,
        4717
      ],
      "op": "EQ",
      "path": "41"
    },
    "798": {
      "fn": "ERC4973.supportsInterface",
      "offset": [
        4612,
        4717
      ],
      "op": "JUMPDEST",
      "path": "41"
    },
    "799": {
      "fn": "ERC4973.supportsInterface",
      "offset": [
        4612,
        4769
      ],
      "op": "DUP1",
      "path": "41"
    },
    "800": {
      "fn": "ERC4973.supportsInterface",
      "offset": [
        4612,
        4769
      ],
      "op": "PUSH2",
      "path": "41",
      "value": "0x339"
    },
    "803": {
      "fn": "ERC4973.supportsInterface",
      "offset": [
        4612,
        4769
      ],
      "op": "JUMPI",
      "path": "41"
    },
    "804": {
      "op": "POP"
    },
    "805": {
      "op": "PUSH4",
      "value": "0x1FFC9A7"
    },
    "810": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "812": {
      "op": "SHL"
    },
    "813": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "815": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "817": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "819": {
      "op": "SHL"
    },
    "820": {
      "op": "SUB"
    },
    "821": {
      "op": "NOT"
    },
    "822": {
      "fn": "ERC165.supportsInterface",
      "offset": [
        1757,
        1797
      ],
      "op": "DUP4",
      "path": "41",
      "statement": 4
    },
    "823": {
      "fn": "ERC165.supportsInterface",
      "offset": [
        1757,
        1797
      ],
      "op": "AND",
      "path": "41"
    },
    "824": {
      "fn": "ERC165.supportsInterface",
      "offset": [
        1757,
        1797
      ],
      "op": "EQ",
      "path": "41"
    },
    "825": {
      "fn": "ERC4973.supportsInterface",
      "offset": [
        4733,
        4769
      ],
      "op": "JUMPDEST",
      "path": "41"
    },
    "826": {
      "fn": "ERC4973.supportsInterface",
      "offset": [
        4593,
        4769
      ],
      "op": "SWAP3",
      "path": "41"
    },
    "827": {
      "fn": "ERC4973.supportsInterface",
      "offset": [
        4448,
        4776
      ],
      "op": "SWAP2",
      "path": "41"
    },
    "828": {
      "op": "POP"
    },
    "829": {
      "op": "POP"
    },
    "830": {
      "fn": "ERC4973.supportsInterface",
      "jump": "o",
      "offset": [
        4448,
        4776
      ],
      "op": "JUMP",
      "path": "41"
    },
    "831": {
      "fn": "ERC4973.name",
      "offset": [
        4782,
        4880
      ],
      "op": "JUMPDEST",
      "path": "41"
    },
    "832": {
      "fn": "ERC4973.name",
      "offset": [
        4836,
        4849
      ],
      "op": "PUSH1",
      "path": "41",
      "value": "0x60"
    },
    "834": {
      "fn": "ERC4973.name",
      "offset": [
        4868,
        4873
      ],
      "op": "PUSH1",
      "path": "41",
      "statement": 5,
      "value": "0x0"
    },
    "836": {
      "fn": "ERC4973.name",
      "offset": [
        4861,
        4873
      ],
      "op": "DUP1",
      "path": "41"
    },
    "837": {
      "fn": "ERC4973.name",
      "offset": [
        4861,
        4873
      ],
      "op": "SLOAD",
      "path": "41"
    },
    "838": {
      "fn": "ERC4973.name",
      "offset": [
        4861,
        4873
      ],
      "op": "PUSH2",
      "path": "41",
      "value": "0x34E"
    },
    "841": {
      "fn": "ERC4973.name",
      "offset": [
        4861,
        4873
      ],
      "op": "SWAP1",
      "path": "41"
    },
    "842": {
      "fn": "ERC4973.name",
      "offset": [
        4861,
        4873
      ],
      "op": "PUSH2",
      "path": "41",
      "value": "0x17A9"
    },
    "845": {
      "fn": "ERC4973.name",
      "jump": "i",
      "offset": [
        4861,
        4873
      ],
      "op": "JUMP",
      "path": "41"
    },
    "846": {
      "fn": "ERC4973.name",
      "offset": [
        4861,
        4873
      ],
      "op": "JUMPDEST",
      "path": "41"
    },
    "847": {
      "fn": "ERC4973.name",
      "offset": [
        4861,
        4873
      ],
      "op": "DUP1",
      "path": "41"
    },
    "848": {
      "fn": "ERC4973.name",
      "offset": [
        4861,
        4873
      ],
      "op": "PUSH1",
      "path": "41",
      "value": "0x1F"
    },
    "850": {
      "fn": "ERC4973.name",
      "offset": [
        4861,
        4873
      ],
      "op": "ADD",
      "path": "41"
    },
    "851": {
      "fn": "ERC4973.name",
      "offset": [
        4861,
        4873
      ],
      "op": "PUSH1",
      "path": "41",
      "value": "0x20"
    },
    "853": {
      "fn": "ERC4973.name",
      "offset": [
        4861,
        4873
      ],
      "op": "DUP1",
      "path": "41"
    },
    "854": {
      "fn": "ERC4973.name",
      "offset": [
        4861,
        4873
      ],
      "op": "SWAP2",
      "path": "41"
    },
    "855": {
      "fn": "ERC4973.name",
      "offset": [
        4861,
        4873
      ],
      "op": "DIV",
      "path": "41"
    },
    "856": {
      "fn": "ERC4973.name",
      "offset": [
        4861,
        4873
      ],
      "op": "MUL",
      "path": "41"
    },
    "857": {
      "fn": "ERC4973.name",
      "offset": [
        4861,
        4873
      ],
      "op": "PUSH1",
      "path": "41",
      "value": "0x20"
    },
    "859": {
      "fn": "ERC4973.name",
      "offset": [
        4861,
        4873
      ],
      "op": "ADD",
      "path": "41"
    },
    "860": {
      "fn": "ERC4973.name",
      "offset": [
        4861,
        4873
      ],
      "op": "PUSH1",
      "path": "41",
      "value": "0x40"
    },
    "862": {
      "fn": "ERC4973.name",
      "offset": [
        4861,
        4873
      ],
      "op": "MLOAD",
      "path": "41"
    },
    "863": {
      "fn": "ERC4973.name",
      "offset": [
        4861,
        4873
      ],
      "op": "SWAP1",
      "path": "41"
    },
    "864": {
      "fn": "ERC4973.name",
      "offset": [
        4861,
        4873
      ],
      "op": "DUP2",
      "path": "41"
    },
    "865": {
      "fn": "ERC4973.name",
      "offset": [
        4861,
        4873
      ],
      "op": "ADD",
      "path": "41"
    },
    "866": {
      "fn": "ERC4973.name",
      "offset": [
        4861,
        4873
      ],
      "op": "PUSH1",
      "path": "41",
      "value": "0x40"
    },
    "868": {
      "fn": "ERC4973.name",
      "offset": [
        4861,
        4873
      ],
      "op": "MSTORE",
      "path": "41"
    },
    "869": {
      "fn": "ERC4973.name",
      "offset": [
        4861,
        4873
      ],
      "op": "DUP1",
      "path": "41"
    },
    "870": {
      "fn": "ERC4973.name",
      "offset": [
        4861,
        4873
      ],
      "op": "SWAP3",
      "path": "41"
    },
    "871": {
      "fn": "ERC4973.name",
      "offset": [
        4861,
        4873
      ],
      "op": "SWAP2",
      "path": "41"
    },
    "872": {
      "fn": "ERC4973.name",
      "offset": [
        4861,
        4873
      ],
      "op": "SWAP1",
      "path": "41"
    },
    "873": {
      "fn": "ERC4973.name",
      "offset": [
        4861,
        4873
      ],
      "op": "DUP2",
      "path": "41"
    },
    "874": {
      "fn": "ERC4973.name",
      "offset": [
        4861,
        4873
      ],
      "op": "DUP2",
      "path": "41"
    },
    "875": {
      "fn": "ERC4973.name",
      "offset": [
        4861,
        4873
      ],
      "op": "MSTORE",
      "path": "41"
    },
    "876": {
      "fn": "ERC4973.name",
      "offset": [
        4861,
        4873
      ],
      "op": "PUSH1",
      "path": "41",
      "value": "0x20"
    },
    "878": {
      "fn": "ERC4973.name",
      "offset": [
        4861,
        4873
      ],
      "op": "ADD",
      "path": "41"
    },
    "879": {
      "fn": "ERC4973.name",
      "offset": [
        4861,
        4873
      ],
      "op": "DUP3",
      "path": "41"
    },
    "880": {
      "fn": "ERC4973.name",
      "offset": [
        4861,
        4873
      ],
      "op": "DUP1",
      "path": "41"
    },
    "881": {
      "fn": "ERC4973.name",
      "offset": [
        4861,
        4873
      ],
      "op": "SLOAD",
      "path": "41"
    },
    "882": {
      "fn": "ERC4973.name",
      "offset": [
        4861,
        4873
      ],
      "op": "PUSH2",
      "path": "41",
      "value": "0x37A"
    },
    "885": {
      "fn": "ERC4973.name",
      "offset": [
        4861,
        4873
      ],
      "op": "SWAP1",
      "path": "41"
    },
    "886": {
      "fn": "ERC4973.name",
      "offset": [
        4861,
        4873
      ],
      "op": "PUSH2",
      "path": "41",
      "value": "0x17A9"
    },
    "889": {
      "fn": "ERC4973.name",
      "jump": "i",
      "offset": [
        4861,
        4873
      ],
      "op": "JUMP",
      "path": "41"
    },
    "890": {
      "fn": "ERC4973.name",
      "offset": [
        4861,
        4873
      ],
      "op": "JUMPDEST",
      "path": "41"
    },
    "891": {
      "fn": "ERC4973.name",
      "offset": [
        4861,
        4873
      ],
      "op": "DUP1",
      "path": "41"
    },
    "892": {
      "fn": "ERC4973.name",
      "offset": [
        4861,
        4873
      ],
      "op": "ISZERO",
      "path": "41"
    },
    "893": {
      "fn": "ERC4973.name",
      "offset": [
        4861,
        4873
      ],
      "op": "PUSH2",
      "path": "41",
      "value": "0x3C7"
    },
    "896": {
      "fn": "ERC4973.name",
      "offset": [
        4861,
        4873
      ],
      "op": "JUMPI",
      "path": "41"
    },
    "897": {
      "fn": "ERC4973.name",
      "offset": [
        4861,
        4873
      ],
      "op": "DUP1",
      "path": "41"
    },
    "898": {
      "fn": "ERC4973.name",
      "offset": [
        4861,
        4873
      ],
      "op": "PUSH1",
      "path": "41",
      "value": "0x1F"
    },
    "900": {
      "fn": "ERC4973.name",
      "offset": [
        4861,
        4873
      ],
      "op": "LT",
      "path": "41"
    },
    "901": {
      "fn": "ERC4973.name",
      "offset": [
        4861,
        4873
      ],
      "op": "PUSH2",
      "path": "41",
      "value": "0x39C"
    },
    "904": {
      "fn": "ERC4973.name",
      "offset": [
        4861,
        4873
      ],
      "op": "JUMPI",
      "path": "41"
    },
    "905": {
      "fn": "ERC4973.name",
      "offset": [
        4861,
        4873
      ],
      "op": "PUSH2",
      "path": "41",
      "value": "0x100"
    },
    "908": {
      "fn": "ERC4973.name",
      "offset": [
        4861,
        4873
      ],
      "op": "DUP1",
      "path": "41"
    },
    "909": {
      "fn": "ERC4973.name",
      "offset": [
        4861,
        4873
      ],
      "op": "DUP4",
      "path": "41"
    },
    "910": {
      "fn": "ERC4973.name",
      "offset": [
        4861,
        4873
      ],
      "op": "SLOAD",
      "path": "41"
    },
    "911": {
      "fn": "ERC4973.name",
      "offset": [
        4861,
        4873
      ],
      "op": "DIV",
      "path": "41"
    },
    "912": {
      "fn": "ERC4973.name",
      "offset": [
        4861,
        4873
      ],
      "op": "MUL",
      "path": "41"
    },
    "913": {
      "fn": "ERC4973.name",
      "offset": [
        4861,
        4873
      ],
      "op": "DUP4",
      "path": "41"
    },
    "914": {
      "fn": "ERC4973.name",
      "offset": [
        4861,
        4873
      ],
      "op": "MSTORE",
      "path": "41"
    },
    "915": {
      "fn": "ERC4973.name",
      "offset": [
        4861,
        4873
      ],
      "op": "SWAP2",
      "path": "41"
    },
    "916": {
      "fn": "ERC4973.name",
      "offset": [
        4861,
        4873
      ],
      "op": "PUSH1",
      "path": "41",
      "value": "0x20"
    },
    "918": {
      "fn": "ERC4973.name",
      "offset": [
        4861,
        4873
      ],
      "op": "ADD",
      "path": "41"
    },
    "919": {
      "fn": "ERC4973.name",
      "offset": [
        4861,
        4873
      ],
      "op": "SWAP2",
      "path": "41"
    },
    "920": {
      "fn": "ERC4973.name",
      "offset": [
        4861,
        4873
      ],
      "op": "PUSH2",
      "path": "41",
      "value": "0x3C7"
    },
    "923": {
      "fn": "ERC4973.name",
      "offset": [
        4861,
        4873
      ],
      "op": "JUMP",
      "path": "41"
    },
    "924": {
      "fn": "ERC4973.name",
      "offset": [
        4861,
        4873
      ],
      "op": "JUMPDEST",
      "path": "41"
    },
    "925": {
      "fn": "ERC4973.name",
      "offset": [
        4861,
        4873
      ],
      "op": "DUP3",
      "path": "41"
    },
    "926": {
      "fn": "ERC4973.name",
      "offset": [
        4861,
        4873
      ],
      "op": "ADD",
      "path": "41"
    },
    "927": {
      "fn": "ERC4973.name",
      "offset": [
        4861,
        4873
      ],
      "op": "SWAP2",
      "path": "41"
    },
    "928": {
      "fn": "ERC4973.name",
      "offset": [
        4861,
        4873
      ],
      "op": "SWAP1",
      "path": "41"
    },
    "929": {
      "fn": "ERC4973.name",
      "offset": [
        4861,
        4873
      ],
      "op": "PUSH1",
      "path": "41",
      "value": "0x0"
    },
    "931": {
      "fn": "ERC4973.name",
      "offset": [
        4861,
        4873
      ],
      "op": "MSTORE",
      "path": "41"
    },
    "932": {
      "fn": "ERC4973.name",
      "offset": [
        4861,
        4873
      ],
      "op": "PUSH1",
      "path": "41",
      "value": "0x20"
    },
    "934": {
      "fn": "ERC4973.name",
      "offset": [
        4861,
        4873
      ],
      "op": "PUSH1",
      "path": "41",
      "value": "0x0"
    },
    "936": {
      "fn": "ERC4973.name",
      "offset": [
        4861,
        4873
      ],
      "op": "KECCAK256",
      "path": "41"
    },
    "937": {
      "fn": "ERC4973.name",
      "offset": [
        4861,
        4873
      ],
      "op": "SWAP1",
      "path": "41"
    },
    "938": {
      "fn": "ERC4973.name",
      "offset": [
        4861,
        4873
      ],
      "op": "JUMPDEST",
      "path": "41"
    },
    "939": {
      "fn": "ERC4973.name",
      "offset": [
        4861,
        4873
      ],
      "op": "DUP2",
      "path": "41"
    },
    "940": {
      "fn": "ERC4973.name",
      "offset": [
        4861,
        4873
      ],
      "op": "SLOAD",
      "path": "41"
    },
    "941": {
      "fn": "ERC4973.name",
      "offset": [
        4861,
        4873
      ],
      "op": "DUP2",
      "path": "41"
    },
    "942": {
      "fn": "ERC4973.name",
      "offset": [
        4861,
        4873
      ],
      "op": "MSTORE",
      "path": "41"
    },
    "943": {
      "fn": "ERC4973.name",
      "offset": [
        4861,
        4873
      ],
      "op": "SWAP1",
      "path": "41"
    },
    "944": {
      "fn": "ERC4973.name",
      "offset": [
        4861,
        4873
      ],
      "op": "PUSH1",
      "path": "41",
      "value": "0x1"
    },
    "946": {
      "fn": "ERC4973.name",
      "offset": [
        4861,
        4873
      ],
      "op": "ADD",
      "path": "41"
    },
    "947": {
      "fn": "ERC4973.name",
      "offset": [
        4861,
        4873
      ],
      "op": "SWAP1",
      "path": "41"
    },
    "948": {
      "fn": "ERC4973.name",
      "offset": [
        4861,
        4873
      ],
      "op": "PUSH1",
      "path": "41",
      "value": "0x20"
    },
    "950": {
      "fn": "ERC4973.name",
      "offset": [
        4861,
        4873
      ],
      "op": "ADD",
      "path": "41"
    },
    "951": {
      "fn": "ERC4973.name",
      "offset": [
        4861,
        4873
      ],
      "op": "DUP1",
      "path": "41"
    },
    "952": {
      "fn": "ERC4973.name",
      "offset": [
        4861,
        4873
      ],
      "op": "DUP4",
      "path": "41"
    },
    "953": {
      "fn": "ERC4973.name",
      "offset": [
        4861,
        4873
      ],
      "op": "GT",
      "path": "41"
    },
    "954": {
      "fn": "ERC4973.name",
      "offset": [
        4861,
        4873
      ],
      "op": "PUSH2",
      "path": "41",
      "value": "0x3AA"
    },
    "957": {
      "fn": "ERC4973.name",
      "offset": [
        4861,
        4873
      ],
      "op": "JUMPI",
      "path": "41"
    },
    "958": {
      "fn": "ERC4973.name",
      "offset": [
        4861,
        4873
      ],
      "op": "DUP3",
      "path": "41"
    },
    "959": {
      "fn": "ERC4973.name",
      "offset": [
        4861,
        4873
      ],
      "op": "SWAP1",
      "path": "41"
    },
    "960": {
      "fn": "ERC4973.name",
      "offset": [
        4861,
        4873
      ],
      "op": "SUB",
      "path": "41"
    },
    "961": {
      "fn": "ERC4973.name",
      "offset": [
        4861,
        4873
      ],
      "op": "PUSH1",
      "path": "41",
      "value": "0x1F"
    },
    "963": {
      "fn": "ERC4973.name",
      "offset": [
        4861,
        4873
      ],
      "op": "AND",
      "path": "41"
    },
    "964": {
      "fn": "ERC4973.name",
      "offset": [
        4861,
        4873
      ],
      "op": "DUP3",
      "path": "41"
    },
    "965": {
      "fn": "ERC4973.name",
      "offset": [
        4861,
        4873
      ],
      "op": "ADD",
      "path": "41"
    },
    "966": {
      "fn": "ERC4973.name",
      "offset": [
        4861,
        4873
      ],
      "op": "SWAP2",
      "path": "41"
    },
    "967": {
      "fn": "ERC4973.name",
      "offset": [
        4861,
        4873
      ],
      "op": "JUMPDEST",
      "path": "41"
    },
    "968": {
      "fn": "ERC4973.name",
      "offset": [
        4861,
        4873
      ],
      "op": "POP",
      "path": "41"
    },
    "969": {
      "fn": "ERC4973.name",
      "offset": [
        4861,
        4873
      ],
      "op": "POP",
      "path": "41"
    },
    "970": {
      "fn": "ERC4973.name",
      "offset": [
        4861,
        4873
      ],
      "op": "POP",
      "path": "41"
    },
    "971": {
      "fn": "ERC4973.name",
      "offset": [
        4861,
        4873
      ],
      "op": "POP",
      "path": "41"
    },
    "972": {
      "fn": "ERC4973.name",
      "offset": [
        4861,
        4873
      ],
      "op": "POP",
      "path": "41"
    },
    "973": {
      "fn": "ERC4973.name",
      "offset": [
        4861,
        4873
      ],
      "op": "SWAP1",
      "path": "41"
    },
    "974": {
      "fn": "ERC4973.name",
      "offset": [
        4861,
        4873
      ],
      "op": "POP",
      "path": "41"
    },
    "975": {
      "fn": "ERC4973.name",
      "offset": [
        4782,
        4880
      ],
      "op": "SWAP1",
      "path": "41"
    },
    "976": {
      "fn": "ERC4973.name",
      "jump": "o",
      "offset": [
        4782,
        4880
      ],
      "op": "JUMP",
      "path": "41"
    },
    "977": {
      "fn": "SoulboundCore.revokeWithSignature",
      "offset": [
        4274,
        5201
      ],
      "op": "JUMPDEST",
      "path": "38"
    },
    "978": {
      "fn": "SoulboundCore.revokeWithSignature",
      "offset": [
        4455,
        4471
      ],
      "op": "PUSH2",
      "path": "38",
      "statement": 6,
      "value": "0x3DA"
    },
    "981": {
      "fn": "SoulboundCore.revokeWithSignature",
      "offset": [
        4463,
        4470
      ],
      "op": "DUP2",
      "path": "38"
    },
    "982": {
      "fn": "SoulboundCore.revokeWithSignature",
      "offset": [
        4455,
        4462
      ],
      "op": "PUSH2",
      "path": "38",
      "value": "0xCB2"
    },
    "985": {
      "fn": "SoulboundCore.revokeWithSignature",
      "jump": "i",
      "offset": [
        4455,
        4471
      ],
      "op": "JUMP",
      "path": "38"
    },
    "986": {
      "branch": 78,
      "fn": "SoulboundCore.revokeWithSignature",
      "offset": [
        4455,
        4471
      ],
      "op": "JUMPDEST",
      "path": "38"
    },
    "987": {
      "fn": "SoulboundCore.revokeWithSignature",
      "offset": [
        4447,
        4503
      ],
      "op": "PUSH2",
      "path": "38",
      "value": "0x42B"
    },
    "990": {
      "branch": 78,
      "fn": "SoulboundCore.revokeWithSignature",
      "offset": [
        4447,
        4503
      ],
      "op": "JUMPI",
      "path": "38"
    },
    "991": {
      "fn": "SoulboundCore.revokeWithSignature",
      "offset": [
        4447,
        4503
      ],
      "op": "PUSH1",
      "path": "38",
      "value": "0x40"
    },
    "993": {
      "fn": "SoulboundCore.revokeWithSignature",
      "offset": [
        4447,
        4503
      ],
      "op": "MLOAD",
      "path": "38"
    },
    "994": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "998": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1000": {
      "op": "SHL"
    },
    "1001": {
      "fn": "SoulboundCore.revokeWithSignature",
      "offset": [
        4447,
        4503
      ],
      "op": "DUP2",
      "path": "38"
    },
    "1002": {
      "fn": "SoulboundCore.revokeWithSignature",
      "offset": [
        4447,
        4503
      ],
      "op": "MSTORE",
      "path": "38"
    },
    "1003": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1005": {
      "fn": "SoulboundCore.revokeWithSignature",
      "offset": [
        4447,
        4503
      ],
      "op": "PUSH1",
      "path": "38",
      "value": "0x4"
    },
    "1007": {
      "fn": "SoulboundCore.revokeWithSignature",
      "offset": [
        4447,
        4503
      ],
      "op": "DUP3",
      "path": "38"
    },
    "1008": {
      "fn": "SoulboundCore.revokeWithSignature",
      "offset": [
        4447,
        4503
      ],
      "op": "ADD",
      "path": "38"
    },
    "1009": {
      "op": "MSTORE"
    },
    "1010": {
      "op": "PUSH1",
      "value": "0x1B"
    },
    "1012": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "1014": {
      "op": "DUP3"
    },
    "1015": {
      "op": "ADD"
    },
    "1016": {
      "op": "MSTORE"
    },
    "1017": {
      "op": "PUSH32",
      "value": "0x5265766F6B65206F6620696E6578697374656E7420746F6B656E2E0000000000"
    },
    "1050": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "1052": {
      "op": "DUP3"
    },
    "1053": {
      "op": "ADD"
    },
    "1054": {
      "op": "MSTORE"
    },
    "1055": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "1057": {
      "op": "ADD"
    },
    "1058": {
      "fn": "SoulboundCore.revokeWithSignature",
      "offset": [
        4447,
        4503
      ],
      "op": "JUMPDEST",
      "path": "38"
    },
    "1059": {
      "fn": "SoulboundCore.revokeWithSignature",
      "offset": [
        4447,
        4503
      ],
      "op": "PUSH1",
      "path": "38",
      "value": "0x40"
    },
    "1061": {
      "fn": "SoulboundCore.revokeWithSignature",
      "offset": [
        4447,
        4503
      ],
      "op": "MLOAD",
      "path": "38"
    },
    "1062": {
      "fn": "SoulboundCore.revokeWithSignature",
      "offset": [
        4447,
        4503
      ],
      "op": "DUP1",
      "path": "38"
    },
    "1063": {
      "fn": "SoulboundCore.revokeWithSignature",
      "offset": [
        4447,
        4503
      ],
      "op": "SWAP2",
      "path": "38"
    },
    "1064": {
      "fn": "SoulboundCore.revokeWithSignature",
      "offset": [
        4447,
        4503
      ],
      "op": "SUB",
      "path": "38"
    },
    "1065": {
      "fn": "SoulboundCore.revokeWithSignature",
      "offset": [
        4447,
        4503
      ],
      "op": "SWAP1",
      "path": "38"
    },
    "1066": {
      "fn": "SoulboundCore.revokeWithSignature",
      "offset": [
        4447,
        4503
      ],
      "op": "REVERT",
      "optimizer_revert": true,
      "path": "38"
    },
    "1067": {
      "fn": "SoulboundCore.revokeWithSignature",
      "offset": [
        4447,
        4503
      ],
      "op": "JUMPDEST",
      "path": "38"
    },
    "1068": {
      "fn": "SoulboundCore.revokeWithSignature",
      "offset": [
        4738,
        4741
      ],
      "op": "DUP2",
      "path": "38",
      "statement": 7
    },
    "1069": {
      "fn": "SoulboundCore.revokeWithSignature",
      "offset": [
        4738,
        4748
      ],
      "op": "MLOAD",
      "path": "38"
    },
    "1070": {
      "fn": "SoulboundCore.revokeWithSignature",
      "offset": [
        4752,
        4754
      ],
      "op": "PUSH1",
      "path": "38",
      "value": "0x41"
    },
    "1072": {
      "branch": 79,
      "fn": "SoulboundCore.revokeWithSignature",
      "offset": [
        4738,
        4754
      ],
      "op": "EQ",
      "path": "38"
    },
    "1073": {
      "fn": "SoulboundCore.revokeWithSignature",
      "offset": [
        4730,
        4783
      ],
      "op": "PUSH2",
      "path": "38",
      "value": "0x477"
    },
    "1076": {
      "branch": 79,
      "fn": "SoulboundCore.revokeWithSignature",
      "offset": [
        4730,
        4783
      ],
      "op": "JUMPI",
      "path": "38"
    },
    "1077": {
      "fn": "SoulboundCore.revokeWithSignature",
      "offset": [
        4730,
        4783
      ],
      "op": "PUSH1",
      "path": "38",
      "value": "0x40"
    },
    "1079": {
      "fn": "SoulboundCore.revokeWithSignature",
      "offset": [
        4730,
        4783
      ],
      "op": "MLOAD",
      "path": "38"
    },
    "1080": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1084": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1086": {
      "op": "SHL"
    },
    "1087": {
      "fn": "SoulboundCore.revokeWithSignature",
      "offset": [
        4730,
        4783
      ],
      "op": "DUP2",
      "path": "38"
    },
    "1088": {
      "fn": "SoulboundCore.revokeWithSignature",
      "offset": [
        4730,
        4783
      ],
      "op": "MSTORE",
      "path": "38"
    },
    "1089": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1091": {
      "fn": "SoulboundCore.revokeWithSignature",
      "offset": [
        4730,
        4783
      ],
      "op": "PUSH1",
      "path": "38",
      "value": "0x4"
    },
    "1093": {
      "fn": "SoulboundCore.revokeWithSignature",
      "offset": [
        4730,
        4783
      ],
      "op": "DUP3",
      "path": "38"
    },
    "1094": {
      "fn": "SoulboundCore.revokeWithSignature",
      "offset": [
        4730,
        4783
      ],
      "op": "ADD",
      "path": "38"
    },
    "1095": {
      "op": "MSTORE"
    },
    "1096": {
      "op": "PUSH1",
      "value": "0x18"
    },
    "1098": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "1100": {
      "op": "DUP3"
    },
    "1101": {
      "op": "ADD"
    },
    "1102": {
      "op": "MSTORE"
    },
    "1103": {
      "op": "PUSH24",
      "value": "0x92DCECC2D8D2C840E6D2CEDCC2E8EAE4CA40D8CADCCEE8D"
    },
    "1128": {
      "op": "PUSH1",
      "value": "0x43"
    },
    "1130": {
      "op": "SHL"
    },
    "1131": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "1133": {
      "op": "DUP3"
    },
    "1134": {
      "op": "ADD"
    },
    "1135": {
      "op": "MSTORE"
    },
    "1136": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "1138": {
      "op": "ADD"
    },
    "1139": {
      "fn": "SoulboundCore.revokeWithSignature",
      "offset": [
        4730,
        4783
      ],
      "op": "PUSH2",
      "path": "38",
      "value": "0x422"
    },
    "1142": {
      "op": "JUMP"
    },
    "1143": {
      "fn": "SoulboundCore.revokeWithSignature",
      "offset": [
        4730,
        4783
      ],
      "op": "JUMPDEST",
      "path": "38"
    },
    "1144": {
      "fn": "SoulboundCore.revokeWithSignature",
      "offset": [
        4910,
        4936
      ],
      "op": "PUSH2",
      "path": "38",
      "statement": 8,
      "value": "0x481"
    },
    "1147": {
      "fn": "SoulboundCore.revokeWithSignature",
      "offset": [
        4926,
        4930
      ],
      "op": "DUP4",
      "path": "38"
    },
    "1148": {
      "fn": "SoulboundCore.revokeWithSignature",
      "offset": [
        4932,
        4935
      ],
      "op": "DUP4",
      "path": "38"
    },
    "1149": {
      "fn": "SoulboundCore.revokeWithSignature",
      "offset": [
        4910,
        4925
      ],
      "op": "PUSH2",
      "path": "38",
      "value": "0xA5F"
    },
    "1152": {
      "fn": "SoulboundCore.revokeWithSignature",
      "jump": "i",
      "offset": [
        4910,
        4936
      ],
      "op": "JUMP",
      "path": "38"
    },
    "1153": {
      "branch": 80,
      "fn": "SoulboundCore.revokeWithSignature",
      "offset": [
        4910,
        4936
      ],
      "op": "JUMPDEST",
      "path": "38"
    },
    "1154": {
      "fn": "SoulboundCore.revokeWithSignature",
      "offset": [
        4902,
        4966
      ],
      "op": "PUSH2",
      "path": "38",
      "value": "0x4C9"
    },
    "1157": {
      "branch": 80,
      "fn": "SoulboundCore.revokeWithSignature",
      "offset": [
        4902,
        4966
      ],
      "op": "JUMPI",
      "path": "38"
    },
    "1158": {
      "fn": "SoulboundCore.revokeWithSignature",
      "offset": [
        4902,
        4966
      ],
      "op": "PUSH1",
      "path": "38",
      "value": "0x40"
    },
    "1160": {
      "fn": "SoulboundCore.revokeWithSignature",
      "offset": [
        4902,
        4966
      ],
      "op": "MLOAD",
      "path": "38"
    },
    "1161": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1165": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1167": {
      "op": "SHL"
    },
    "1168": {
      "fn": "SoulboundCore.revokeWithSignature",
      "offset": [
        4902,
        4966
      ],
      "op": "DUP2",
      "path": "38"
    },
    "1169": {
      "fn": "SoulboundCore.revokeWithSignature",
      "offset": [
        4902,
        4966
      ],
      "op": "MSTORE",
      "path": "38"
    },
    "1170": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1172": {
      "fn": "SoulboundCore.revokeWithSignature",
      "offset": [
        4902,
        4966
      ],
      "op": "PUSH1",
      "path": "38",
      "value": "0x4"
    },
    "1174": {
      "fn": "SoulboundCore.revokeWithSignature",
      "offset": [
        4902,
        4966
      ],
      "op": "DUP3",
      "path": "38"
    },
    "1175": {
      "fn": "SoulboundCore.revokeWithSignature",
      "offset": [
        4902,
        4966
      ],
      "op": "ADD",
      "path": "38"
    },
    "1176": {
      "op": "MSTORE"
    },
    "1177": {
      "op": "PUSH1",
      "value": "0x19"
    },
    "1179": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "1181": {
      "op": "DUP3"
    },
    "1182": {
      "op": "ADD"
    },
    "1183": {
      "op": "MSTORE"
    },
    "1184": {
      "op": "PUSH25",
      "value": "0x2430B9B4103737BA1039B4B3B732B210313C9037BBB732B917"
    },
    "1210": {
      "op": "PUSH1",
      "value": "0x39"
    },
    "1212": {
      "op": "SHL"
    },
    "1213": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "1215": {
      "op": "DUP3"
    },
    "1216": {
      "op": "ADD"
    },
    "1217": {
      "op": "MSTORE"
    },
    "1218": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "1220": {
      "op": "ADD"
    },
    "1221": {
      "fn": "SoulboundCore.revokeWithSignature",
      "offset": [
        4902,
        4966
      ],
      "op": "PUSH2",
      "path": "38",
      "value": "0x422"
    },
    "1224": {
      "op": "JUMP"
    },
    "1225": {
      "fn": "SoulboundCore.revokeWithSignature",
      "offset": [
        4902,
        4966
      ],
      "op": "JUMPDEST",
      "path": "38"
    },
    "1226": {
      "fn": "SoulboundCore.revokeWithSignature",
      "offset": [
        5065,
        5098
      ],
      "op": "PUSH2",
      "path": "38",
      "statement": 9,
      "value": "0x4DB"
    },
    "1229": {
      "fn": "SoulboundCore.revokeWithSignature",
      "offset": [
        5072,
        5088
      ],
      "op": "PUSH2",
      "path": "38",
      "value": "0x4D5"
    },
    "1232": {
      "fn": "SoulboundCore.revokeWithSignature",
      "offset": [
        5080,
        5087
      ],
      "op": "DUP3",
      "path": "38"
    },
    "1233": {
      "fn": "SoulboundCore.revokeWithSignature",
      "offset": [
        5072,
        5079
      ],
      "op": "PUSH2",
      "path": "38",
      "value": "0x603"
    },
    "1236": {
      "fn": "SoulboundCore.revokeWithSignature",
      "jump": "i",
      "offset": [
        5072,
        5088
      ],
      "op": "JUMP",
      "path": "38"
    },
    "1237": {
      "fn": "SoulboundCore.revokeWithSignature",
      "offset": [
        5072,
        5088
      ],
      "op": "JUMPDEST",
      "path": "38"
    },
    "1238": {
      "fn": "SoulboundCore.revokeWithSignature",
      "offset": [
        5090,
        5097
      ],
      "op": "DUP3",
      "path": "38"
    },
    "1239": {
      "fn": "SoulboundCore.revokeWithSignature",
      "offset": [
        5065,
        5071
      ],
      "op": "PUSH2",
      "path": "38",
      "value": "0xCCF"
    },
    "1242": {
      "fn": "SoulboundCore.revokeWithSignature",
      "jump": "i",
      "offset": [
        5065,
        5098
      ],
      "op": "JUMP",
      "path": "38"
    },
    "1243": {
      "fn": "SoulboundCore.revokeWithSignature",
      "offset": [
        5065,
        5098
      ],
      "op": "JUMPDEST",
      "path": "38"
    },
    "1244": {
      "op": "POP"
    },
    "1245": {
      "fn": "SoulboundCore.revokeWithSignature",
      "offset": [
        5166,
        5194
      ],
      "op": "PUSH1",
      "path": "38",
      "statement": 10,
      "value": "0x40"
    },
    "1247": {
      "fn": "SoulboundCore.revokeWithSignature",
      "offset": [
        5166,
        5194
      ],
      "op": "MLOAD",
      "path": "38"
    },
    "1248": {
      "fn": "SoulboundCore.revokeWithSignature",
      "offset": [
        5186,
        5193
      ],
      "op": "DUP2",
      "path": "38"
    },
    "1249": {
      "fn": "SoulboundCore.revokeWithSignature",
      "offset": [
        5186,
        5193
      ],
      "op": "SWAP1",
      "path": "38"
    },
    "1250": {
      "fn": "SoulboundCore.revokeWithSignature",
      "offset": [
        5166,
        5194
      ],
      "op": "PUSH32",
      "path": "38",
      "value": "0xF947BF2266AFEDE98F27AD2312DB8B2A17921852307F979B6F14A2B41FA774BC"
    },
    "1283": {
      "fn": "SoulboundCore.revokeWithSignature",
      "offset": [
        5166,
        5194
      ],
      "op": "SWAP1",
      "path": "38"
    },
    "1284": {
      "fn": "SoulboundCore.revokeWithSignature",
      "offset": [
        5166,
        5194
      ],
      "op": "PUSH1",
      "path": "38",
      "value": "0x0"
    },
    "1286": {
      "fn": "SoulboundCore.revokeWithSignature",
      "offset": [
        5166,
        5194
      ],
      "op": "SWAP1",
      "path": "38"
    },
    "1287": {
      "fn": "SoulboundCore.revokeWithSignature",
      "offset": [
        5166,
        5194
      ],
      "op": "LOG2",
      "path": "38"
    },
    "1288": {
      "fn": "SoulboundCore.revokeWithSignature",
      "offset": [
        4274,
        5201
      ],
      "op": "POP",
      "path": "38"
    },
    "1289": {
      "fn": "SoulboundCore.revokeWithSignature",
      "offset": [
        4274,
        5201
      ],
      "op": "POP",
      "path": "38"
    },
    "1290": {
      "fn": "SoulboundCore.revokeWithSignature",
      "offset": [
        4274,
        5201
      ],
      "op": "POP",
      "path": "38"
    },
    "1291": {
      "fn": "SoulboundCore.revokeWithSignature",
      "jump": "o",
      "offset": [
        4274,
        5201
      ],
      "op": "JUMP",
      "path": "38"
    },
    "1292": {
      "fn": "SoulboundCore.generateTokenURI",
      "offset": [
        6139,
        6521
      ],
      "op": "JUMPDEST",
      "path": "38"
    },
    "1293": {
      "fn": "SoulboundCore.generateTokenURI",
      "offset": [
        6227,
        6250
      ],
      "op": "PUSH1",
      "path": "38",
      "value": "0x60"
    },
    "1295": {
      "fn": "SoulboundCore.generateTokenURI",
      "offset": [
        6340,
        6353
      ],
      "op": "PUSH2",
      "path": "38",
      "statement": 11,
      "value": "0x516"
    },
    "1298": {
      "fn": "SoulboundCore.generateTokenURI",
      "offset": [
        6340,
        6351
      ],
      "op": "PUSH2",
      "path": "38",
      "value": "0x8CD"
    },
    "1301": {
      "fn": "SoulboundCore.generateTokenURI",
      "jump": "i",
      "offset": [
        6340,
        6353
      ],
      "op": "JUMP",
      "path": "38"
    },
    "1302": {
      "fn": "SoulboundCore.generateTokenURI",
      "offset": [
        6340,
        6353
      ],
      "op": "JUMPDEST",
      "path": "38"
    },
    "1303": {
      "fn": "SoulboundCore.generateTokenURI",
      "offset": [
        6334,
        6361
      ],
      "op": "MLOAD",
      "path": "38"
    },
    "1304": {
      "fn": "SoulboundCore.generateTokenURI",
      "offset": [
        6365,
        6366
      ],
      "op": "PUSH1",
      "path": "38",
      "value": "0x0"
    },
    "1306": {
      "branch": 81,
      "fn": "SoulboundCore.generateTokenURI",
      "offset": [
        6334,
        6366
      ],
      "op": "SUB",
      "path": "38"
    },
    "1307": {
      "fn": "SoulboundCore.generateTokenURI",
      "offset": [
        6326,
        6384
      ],
      "op": "PUSH2",
      "path": "38",
      "value": "0x556"
    },
    "1310": {
      "branch": 81,
      "fn": "SoulboundCore.generateTokenURI",
      "offset": [
        6326,
        6384
      ],
      "op": "JUMPI",
      "path": "38"
    },
    "1311": {
      "fn": "SoulboundCore.generateTokenURI",
      "offset": [
        6326,
        6384
      ],
      "op": "PUSH1",
      "path": "38",
      "value": "0x40"
    },
    "1313": {
      "fn": "SoulboundCore.generateTokenURI",
      "offset": [
        6326,
        6384
      ],
      "op": "MLOAD",
      "path": "38"
    },
    "1314": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1318": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1320": {
      "op": "SHL"
    },
    "1321": {
      "fn": "SoulboundCore.generateTokenURI",
      "offset": [
        6326,
        6384
      ],
      "op": "DUP2",
      "path": "38"
    },
    "1322": {
      "fn": "SoulboundCore.generateTokenURI",
      "offset": [
        6326,
        6384
      ],
      "op": "MSTORE",
      "path": "38"
    },
    "1323": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1325": {
      "fn": "SoulboundCore.generateTokenURI",
      "offset": [
        6326,
        6384
      ],
      "op": "PUSH1",
      "path": "38",
      "value": "0x4"
    },
    "1327": {
      "fn": "SoulboundCore.generateTokenURI",
      "offset": [
        6326,
        6384
      ],
      "op": "DUP3",
      "path": "38"
    },
    "1328": {
      "fn": "SoulboundCore.generateTokenURI",
      "offset": [
        6326,
        6384
      ],
      "op": "ADD",
      "path": "38"
    },
    "1329": {
      "op": "MSTORE"
    },
    "1330": {
      "op": "PUSH1",
      "value": "0xD"
    },
    "1332": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "1334": {
      "op": "DUP3"
    },
    "1335": {
      "op": "ADD"
    },
    "1336": {
      "op": "MSTORE"
    },
    "1337": {
      "op": "PUSH13",
      "value": "0x456D7074792062617365555249"
    },
    "1351": {
      "op": "PUSH1",
      "value": "0x98"
    },
    "1353": {
      "op": "SHL"
    },
    "1354": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "1356": {
      "op": "DUP3"
    },
    "1357": {
      "op": "ADD"
    },
    "1358": {
      "op": "MSTORE"
    },
    "1359": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "1361": {
      "op": "ADD"
    },
    "1362": {
      "fn": "SoulboundCore.generateTokenURI",
      "offset": [
        6326,
        6384
      ],
      "op": "PUSH2",
      "path": "38",
      "value": "0x422"
    },
    "1365": {
      "op": "JUMP"
    },
    "1366": {
      "fn": "SoulboundCore.generateTokenURI",
      "offset": [
        6326,
        6384
      ],
      "op": "JUMPDEST",
      "path": "38"
    },
    "1367": {
      "fn": "SoulboundCore.generateTokenURI",
      "offset": [
        6480,
        6493
      ],
      "op": "PUSH2",
      "path": "38",
      "statement": 12,
      "value": "0x55E"
    },
    "1370": {
      "fn": "SoulboundCore.generateTokenURI",
      "offset": [
        6480,
        6491
      ],
      "op": "PUSH2",
      "path": "38",
      "value": "0x8CD"
    },
    "1373": {
      "fn": "SoulboundCore.generateTokenURI",
      "jump": "i",
      "offset": [
        6480,
        6493
      ],
      "op": "JUMP",
      "path": "38"
    },
    "1374": {
      "fn": "SoulboundCore.generateTokenURI",
      "offset": [
        6480,
        6493
      ],
      "op": "JUMPDEST",
      "path": "38"
    },
    "1375": {
      "fn": "SoulboundCore.generateTokenURI",
      "offset": [
        6495,
        6512
      ],
      "op": "PUSH2",
      "path": "38",
      "value": "0x567"
    },
    "1378": {
      "fn": "SoulboundCore.generateTokenURI",
      "offset": [
        6504,
        6511
      ],
      "op": "DUP4",
      "path": "38"
    },
    "1379": {
      "fn": "SoulboundCore.generateTokenURI",
      "offset": [
        6495,
        6503
      ],
      "op": "PUSH2",
      "path": "38",
      "value": "0xD97"
    },
    "1382": {
      "fn": "SoulboundCore.generateTokenURI",
      "jump": "i",
      "offset": [
        6495,
        6512
      ],
      "op": "JUMP",
      "path": "38"
    },
    "1383": {
      "fn": "SoulboundCore.generateTokenURI",
      "offset": [
        6495,
        6512
      ],
      "op": "JUMPDEST",
      "path": "38"
    },
    "1384": {
      "fn": "SoulboundCore.generateTokenURI",
      "offset": [
        6463,
        6513
      ],
      "op": "PUSH1",
      "path": "38",
      "value": "0x40"
    },
    "1386": {
      "fn": "SoulboundCore.generateTokenURI",
      "offset": [
        6463,
        6513
      ],
      "op": "MLOAD",
      "path": "38"
    },
    "1387": {
      "fn": "SoulboundCore.generateTokenURI",
      "offset": [
        6463,
        6513
      ],
      "op": "PUSH1",
      "path": "38",
      "value": "0x20"
    },
    "1389": {
      "fn": "SoulboundCore.generateTokenURI",
      "offset": [
        6463,
        6513
      ],
      "op": "ADD",
      "path": "38"
    },
    "1390": {
      "fn": "SoulboundCore.generateTokenURI",
      "offset": [
        6463,
        6513
      ],
      "op": "PUSH2",
      "path": "38",
      "value": "0x578"
    },
    "1393": {
      "fn": "SoulboundCore.generateTokenURI",
      "offset": [
        6463,
        6513
      ],
      "op": "SWAP3",
      "path": "38"
    },
    "1394": {
      "fn": "SoulboundCore.generateTokenURI",
      "offset": [
        6463,
        6513
      ],
      "op": "SWAP2",
      "path": "38"
    },
    "1395": {
      "fn": "SoulboundCore.generateTokenURI",
      "offset": [
        6463,
        6513
      ],
      "op": "SWAP1",
      "path": "38"
    },
    "1396": {
      "fn": "SoulboundCore.generateTokenURI",
      "offset": [
        6463,
        6513
      ],
      "op": "PUSH2",
      "path": "38",
      "value": "0x17E3"
    },
    "1399": {
      "fn": "SoulboundCore.generateTokenURI",
      "jump": "i",
      "offset": [
        6463,
        6513
      ],
      "op": "JUMP",
      "path": "38"
    },
    "1400": {
      "fn": "SoulboundCore.generateTokenURI",
      "offset": [
        6463,
        6513
      ],
      "op": "JUMPDEST",
      "path": "38"
    },
    "1401": {
      "fn": "SoulboundCore.generateTokenURI",
      "offset": [
        6463,
        6513
      ],
      "op": "PUSH1",
      "path": "38",
      "value": "0x40"
    },
    "1403": {
      "fn": "SoulboundCore.generateTokenURI",
      "offset": [
        6463,
        6513
      ],
      "op": "MLOAD",
      "path": "38"
    },
    "1404": {
      "fn": "SoulboundCore.generateTokenURI",
      "offset": [
        6463,
        6513
      ],
      "op": "PUSH1",
      "path": "38",
      "value": "0x20"
    },
    "1406": {
      "fn": "SoulboundCore.generateTokenURI",
      "offset": [
        6463,
        6513
      ],
      "op": "DUP2",
      "path": "38"
    },
    "1407": {
      "fn": "SoulboundCore.generateTokenURI",
      "offset": [
        6463,
        6513
      ],
      "op": "DUP4",
      "path": "38"
    },
    "1408": {
      "fn": "SoulboundCore.generateTokenURI",
      "offset": [
        6463,
        6513
      ],
      "op": "SUB",
      "path": "38"
    },
    "1409": {
      "fn": "SoulboundCore.generateTokenURI",
      "offset": [
        6463,
        6513
      ],
      "op": "SUB",
      "path": "38"
    },
    "1410": {
      "fn": "SoulboundCore.generateTokenURI",
      "offset": [
        6463,
        6513
      ],
      "op": "DUP2",
      "path": "38"
    },
    "1411": {
      "fn": "SoulboundCore.generateTokenURI",
      "offset": [
        6463,
        6513
      ],
      "op": "MSTORE",
      "path": "38"
    },
    "1412": {
      "fn": "SoulboundCore.generateTokenURI",
      "offset": [
        6463,
        6513
      ],
      "op": "SWAP1",
      "path": "38"
    },
    "1413": {
      "fn": "SoulboundCore.generateTokenURI",
      "offset": [
        6463,
        6513
      ],
      "op": "PUSH1",
      "path": "38",
      "value": "0x40"
    },
    "1415": {
      "fn": "SoulboundCore.generateTokenURI",
      "offset": [
        6463,
        6513
      ],
      "op": "MSTORE",
      "path": "38"
    },
    "1416": {
      "fn": "SoulboundCore.generateTokenURI",
      "offset": [
        6444,
        6514
      ],
      "op": "SWAP1",
      "path": "38"
    },
    "1417": {
      "fn": "SoulboundCore.generateTokenURI",
      "offset": [
        6444,
        6514
      ],
      "op": "POP",
      "path": "38"
    },
    "1418": {
      "fn": "SoulboundCore.generateTokenURI",
      "offset": [
        6139,
        6521
      ],
      "op": "SWAP2",
      "path": "38"
    },
    "1419": {
      "fn": "SoulboundCore.generateTokenURI",
      "offset": [
        6139,
        6521
      ],
      "op": "SWAP1",
      "path": "38"
    },
    "1420": {
      "fn": "SoulboundCore.generateTokenURI",
      "offset": [
        6139,
        6521
      ],
      "op": "POP",
      "path": "38"
    },
    "1421": {
      "fn": "SoulboundCore.generateTokenURI",
      "jump": "o",
      "offset": [
        6139,
        6521
      ],
      "op": "JUMP",
      "path": "38"
    },
    "1422": {
      "fn": "ERC4973.burn",
      "offset": [
        5243,
        5408
      ],
      "op": "JUMPDEST",
      "path": "41"
    },
    "1423": {
      "fn": "ERC4973.burn",
      "offset": [
        5330,
        5346
      ],
      "op": "PUSH2",
      "path": "41",
      "statement": 13,
      "value": "0x597"
    },
    "1426": {
      "fn": "ERC4973.burn",
      "offset": [
        5338,
        5345
      ],
      "op": "DUP2",
      "path": "41"
    },
    "1427": {
      "fn": "ERC4973.burn",
      "offset": [
        5330,
        5337
      ],
      "op": "PUSH2",
      "path": "41",
      "value": "0x603"
    },
    "1430": {
      "fn": "ERC4973.burn",
      "jump": "i",
      "offset": [
        5330,
        5346
      ],
      "op": "JUMP",
      "path": "41"
    },
    "1431": {
      "fn": "ERC4973.burn",
      "offset": [
        5330,
        5346
      ],
      "op": "JUMPDEST",
      "path": "41"
    },
    "1432": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1434": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1436": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1438": {
      "op": "SHL"
    },
    "1439": {
      "op": "SUB"
    },
    "1440": {
      "fn": "ERC4973.burn",
      "offset": [
        5316,
        5346
      ],
      "op": "AND",
      "path": "41"
    },
    "1441": {
      "fn": "ERC4973.burn",
      "offset": [
        5316,
        5326
      ],
      "op": "CALLER",
      "path": "41"
    },
    "1442": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1444": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1446": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1448": {
      "op": "SHL"
    },
    "1449": {
      "op": "SUB"
    },
    "1450": {
      "fn": "ERC4973.burn",
      "offset": [
        5316,
        5346
      ],
      "op": "AND",
      "path": "41"
    },
    "1451": {
      "branch": 89,
      "fn": "ERC4973.burn",
      "offset": [
        5316,
        5346
      ],
      "op": "EQ",
      "path": "41"
    },
    "1452": {
      "fn": "ERC4973.burn",
      "offset": [
        5308,
        5377
      ],
      "op": "PUSH2",
      "path": "41",
      "value": "0x5F7"
    },
    "1455": {
      "branch": 89,
      "fn": "ERC4973.burn",
      "offset": [
        5308,
        5377
      ],
      "op": "JUMPI",
      "path": "41"
    },
    "1456": {
      "fn": "ERC4973.burn",
      "offset": [
        5308,
        5377
      ],
      "op": "PUSH1",
      "path": "41",
      "value": "0x40"
    },
    "1458": {
      "fn": "ERC4973.burn",
      "offset": [
        5308,
        5377
      ],
      "op": "MLOAD",
      "path": "41"
    },
    "1459": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1463": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1465": {
      "op": "SHL"
    },
    "1466": {
      "fn": "ERC4973.burn",
      "offset": [
        5308,
        5377
      ],
      "op": "DUP2",
      "path": "41"
    },
    "1467": {
      "fn": "ERC4973.burn",
      "offset": [
        5308,
        5377
      ],
      "op": "MSTORE",
      "path": "41"
    },
    "1468": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1470": {
      "fn": "ERC4973.burn",
      "offset": [
        5308,
        5377
      ],
      "op": "PUSH1",
      "path": "41",
      "value": "0x4"
    },
    "1472": {
      "fn": "ERC4973.burn",
      "offset": [
        5308,
        5377
      ],
      "op": "DUP3",
      "path": "41"
    },
    "1473": {
      "fn": "ERC4973.burn",
      "offset": [
        5308,
        5377
      ],
      "op": "ADD",
      "path": "41"
    },
    "1474": {
      "op": "MSTORE"
    },
    "1475": {
      "op": "PUSH1",
      "value": "0x1A"
    },
    "1477": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "1479": {
      "op": "DUP3"
    },
    "1480": {
      "op": "ADD"
    },
    "1481": {
      "op": "MSTORE"
    },
    "1482": {
      "op": "PUSH32",
      "value": "0x6275726E3A2073656E646572206D757374206265206F776E6572000000000000"
    },
    "1515": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "1517": {
      "op": "DUP3"
    },
    "1518": {
      "op": "ADD"
    },
    "1519": {
      "op": "MSTORE"
    },
    "1520": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "1522": {
      "op": "ADD"
    },
    "1523": {
      "fn": "ERC4973.burn",
      "offset": [
        5308,
        5377
      ],
      "op": "PUSH2",
      "path": "41",
      "value": "0x422"
    },
    "1526": {
      "op": "JUMP"
    },
    "1527": {
      "fn": "ERC4973.burn",
      "offset": [
        5308,
        5377
      ],
      "op": "JUMPDEST",
      "path": "41"
    },
    "1528": {
      "fn": "ERC4973.burn",
      "offset": [
        5387,
        5401
      ],
      "op": "PUSH2",
      "path": "41",
      "statement": 14,
      "value": "0x600"
    },
    "1531": {
      "fn": "ERC4973.burn",
      "offset": [
        5393,
        5400
      ],
      "op": "DUP2",
      "path": "41"
    },
    "1532": {
      "fn": "ERC4973.burn",
      "offset": [
        5387,
        5392
      ],
      "op": "PUSH2",
      "path": "41",
      "value": "0xEA0"
    },
    "1535": {
      "fn": "ERC4973.burn",
      "jump": "i",
      "offset": [
        5387,
        5401
      ],
      "op": "JUMP",
      "path": "41"
    },
    "1536": {
      "fn": "ERC4973.burn",
      "offset": [
        5387,
        5401
      ],
      "op": "JUMPDEST",
      "path": "41"
    },
    "1537": {
      "fn": "ERC4973.burn",
      "offset": [
        5243,
        5408
      ],
      "op": "POP",
      "path": "41"
    },
    "1538": {
      "fn": "ERC4973.burn",
      "jump": "o",
      "offset": [
        5243,
        5408
      ],
      "op": "JUMP",
      "path": "41"
    },
    "1539": {
      "fn": "ERC4973.ownerOf",
      "offset": [
        5705,
        5918
      ],
      "op": "JUMPDEST",
      "path": "41"
    },
    "1540": {
      "fn": "ERC4973.ownerOf",
      "offset": [
        5768,
        5775
      ],
      "op": "PUSH1",
      "path": "41",
      "value": "0x0"
    },
    "1542": {
      "fn": "ERC4973.ownerOf",
      "offset": [
        5803,
        5819
      ],
      "op": "DUP2",
      "path": "41"
    },
    "1543": {
      "fn": "ERC4973.ownerOf",
      "offset": [
        5803,
        5819
      ],
      "op": "DUP2",
      "path": "41"
    },
    "1544": {
      "fn": "ERC4973.ownerOf",
      "offset": [
        5803,
        5819
      ],
      "op": "MSTORE",
      "path": "41"
    },
    "1545": {
      "fn": "ERC4973.ownerOf",
      "offset": [
        5803,
        5810
      ],
      "op": "PUSH1",
      "path": "41",
      "value": "0x2"
    },
    "1547": {
      "fn": "ERC4973.ownerOf",
      "offset": [
        5803,
        5819
      ],
      "op": "PUSH1",
      "path": "41",
      "value": "0x20"
    },
    "1549": {
      "fn": "ERC4973.ownerOf",
      "offset": [
        5803,
        5819
      ],
      "op": "MSTORE",
      "path": "41"
    },
    "1550": {
      "fn": "ERC4973.ownerOf",
      "offset": [
        5803,
        5819
      ],
      "op": "PUSH1",
      "path": "41",
      "value": "0x40"
    },
    "1552": {
      "fn": "ERC4973.ownerOf",
      "offset": [
        5803,
        5819
      ],
      "op": "DUP2",
      "path": "41"
    },
    "1553": {
      "fn": "ERC4973.ownerOf",
      "offset": [
        5803,
        5819
      ],
      "op": "KECCAK256",
      "path": "41"
    },
    "1554": {
      "fn": "ERC4973.ownerOf",
      "offset": [
        5803,
        5819
      ],
      "op": "SLOAD",
      "path": "41"
    },
    "1555": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1557": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1559": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1561": {
      "op": "SHL"
    },
    "1562": {
      "op": "SUB"
    },
    "1563": {
      "fn": "ERC4973.ownerOf",
      "offset": [
        5803,
        5819
      ],
      "op": "AND",
      "path": "41"
    },
    "1564": {
      "fn": "ERC4973.ownerOf",
      "offset": [
        5803,
        5819
      ],
      "op": "DUP1",
      "path": "41"
    },
    "1565": {
      "fn": "ERC4973.ownerOf",
      "offset": [
        5829,
        5889
      ],
      "op": "PUSH2",
      "path": "41",
      "statement": 15,
      "value": "0x339"
    },
    "1568": {
      "fn": "ERC4973.ownerOf",
      "offset": [
        5829,
        5889
      ],
      "op": "JUMPI",
      "path": "41"
    },
    "1569": {
      "fn": "ERC4973.ownerOf",
      "offset": [
        5829,
        5889
      ],
      "op": "PUSH1",
      "path": "41",
      "value": "0x40"
    },
    "1571": {
      "fn": "ERC4973.ownerOf",
      "offset": [
        5829,
        5889
      ],
      "op": "MLOAD",
      "path": "41"
    },
    "1572": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1576": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1578": {
      "op": "SHL"
    },
    "1579": {
      "fn": "ERC4973.ownerOf",
      "offset": [
        5829,
        5889
      ],
      "op": "DUP2",
      "path": "41"
    },
    "1580": {
      "fn": "ERC4973.ownerOf",
      "offset": [
        5829,
        5889
      ],
      "op": "MSTORE",
      "path": "41"
    },
    "1581": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1583": {
      "fn": "ERC4973.ownerOf",
      "offset": [
        5829,
        5889
      ],
      "op": "PUSH1",
      "path": "41",
      "value": "0x4"
    },
    "1585": {
      "fn": "ERC4973.ownerOf",
      "offset": [
        5829,
        5889
      ],
      "op": "DUP3",
      "path": "41"
    },
    "1586": {
      "fn": "ERC4973.ownerOf",
      "offset": [
        5829,
        5889
      ],
      "op": "ADD",
      "path": "41"
    },
    "1587": {
      "op": "MSTORE"
    },
    "1588": {
      "op": "PUSH1",
      "value": "0x1C"
    },
    "1590": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "1592": {
      "op": "DUP3"
    },
    "1593": {
      "op": "ADD"
    },
    "1594": {
      "op": "MSTORE"
    },
    "1595": {
      "op": "PUSH32",
      "value": "0x6F776E65724F663A20746F6B656E20646F65736E277420657869737400000000"
    },
    "1628": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "1630": {
      "op": "DUP3"
    },
    "1631": {
      "op": "ADD"
    },
    "1632": {
      "op": "MSTORE"
    },
    "1633": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "1635": {
      "op": "ADD"
    },
    "1636": {
      "fn": "ERC4973.ownerOf",
      "offset": [
        5829,
        5889
      ],
      "op": "PUSH2",
      "path": "41",
      "value": "0x422"
    },
    "1639": {
      "op": "JUMP"
    },
    "1640": {
      "fn": "ERC4973.balanceOf",
      "offset": [
        5414,
        5699
      ],
      "op": "JUMPDEST",
      "path": "41"
    },
    "1641": {
      "fn": "ERC4973.balanceOf",
      "offset": [
        5526,
        5533
      ],
      "op": "PUSH1",
      "path": "41",
      "value": "0x0"
    },
    "1643": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1645": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1647": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1649": {
      "op": "SHL"
    },
    "1650": {
      "op": "SUB"
    },
    "1651": {
      "fn": "ERC4973.balanceOf",
      "offset": [
        5570,
        5589
      ],
      "op": "DUP3",
      "path": "41",
      "statement": 16
    },
    "1652": {
      "branch": 90,
      "fn": "ERC4973.balanceOf",
      "offset": [
        5570,
        5589
      ],
      "op": "AND",
      "path": "41"
    },
    "1653": {
      "fn": "ERC4973.balanceOf",
      "offset": [
        5549,
        5659
      ],
      "op": "PUSH2",
      "path": "41",
      "value": "0x6D5"
    },
    "1656": {
      "branch": 90,
      "fn": "ERC4973.balanceOf",
      "offset": [
        5549,
        5659
      ],
      "op": "JUMPI",
      "path": "41"
    },
    "1657": {
      "fn": "ERC4973.balanceOf",
      "offset": [
        5549,
        5659
      ],
      "op": "PUSH1",
      "path": "41",
      "value": "0x40"
    },
    "1659": {
      "fn": "ERC4973.balanceOf",
      "offset": [
        5549,
        5659
      ],
      "op": "MLOAD",
      "path": "41"
    },
    "1660": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1664": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1666": {
      "op": "SHL"
    },
    "1667": {
      "fn": "ERC4973.balanceOf",
      "offset": [
        5549,
        5659
      ],
      "op": "DUP2",
      "path": "41"
    },
    "1668": {
      "fn": "ERC4973.balanceOf",
      "offset": [
        5549,
        5659
      ],
      "op": "MSTORE",
      "path": "41"
    },
    "1669": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1671": {
      "fn": "ERC4973.balanceOf",
      "offset": [
        5549,
        5659
      ],
      "op": "PUSH1",
      "path": "41",
      "value": "0x4"
    },
    "1673": {
      "fn": "ERC4973.balanceOf",
      "offset": [
        5549,
        5659
      ],
      "op": "DUP3",
      "path": "41"
    },
    "1674": {
      "fn": "ERC4973.balanceOf",
      "offset": [
        5549,
        5659
      ],
      "op": "ADD",
      "path": "41"
    },
    "1675": {
      "op": "MSTORE"
    },
    "1676": {
      "op": "PUSH1",
      "value": "0x2C"
    },
    "1678": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "1680": {
      "op": "DUP3"
    },
    "1681": {
      "op": "ADD"
    },
    "1682": {
      "op": "MSTORE"
    },
    "1683": {
      "op": "PUSH32",
      "value": "0x62616C616E63654F663A2061646472657373207A65726F206973206E6F742061"
    },
    "1716": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "1718": {
      "op": "DUP3"
    },
    "1719": {
      "op": "ADD"
    },
    "1720": {
      "op": "MSTORE"
    },
    "1721": {
      "op": "PUSH12",
      "value": "0x103B30B634B21037BBB732B9"
    },
    "1734": {
      "op": "PUSH1",
      "value": "0xA1"
    },
    "1736": {
      "op": "SHL"
    },
    "1737": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "1739": {
      "op": "DUP3"
    },
    "1740": {
      "op": "ADD"
    },
    "1741": {
      "op": "MSTORE"
    },
    "1742": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "1744": {
      "op": "ADD"
    },
    "1745": {
      "fn": "ERC4973.balanceOf",
      "offset": [
        5549,
        5659
      ],
      "op": "PUSH2",
      "path": "41",
      "value": "0x422"
    },
    "1748": {
      "op": "JUMP"
    },
    "1749": {
      "fn": "ERC4973.balanceOf",
      "offset": [
        5549,
        5659
      ],
      "op": "JUMPDEST",
      "path": "41"
    },
    "1750": {
      "op": "POP"
    },
    "1751": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1753": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1755": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1757": {
      "op": "SHL"
    },
    "1758": {
      "op": "SUB"
    },
    "1759": {
      "fn": "ERC4973.balanceOf",
      "offset": [
        5676,
        5692
      ],
      "op": "AND",
      "path": "41",
      "statement": 17
    },
    "1760": {
      "fn": "ERC4973.balanceOf",
      "offset": [
        5676,
        5692
      ],
      "op": "PUSH1",
      "path": "41",
      "value": "0x0"
    },
    "1762": {
      "fn": "ERC4973.balanceOf",
      "offset": [
        5676,
        5692
      ],
      "op": "SWAP1",
      "path": "41"
    },
    "1763": {
      "fn": "ERC4973.balanceOf",
      "offset": [
        5676,
        5692
      ],
      "op": "DUP2",
      "path": "41"
    },
    "1764": {
      "fn": "ERC4973.balanceOf",
      "offset": [
        5676,
        5692
      ],
      "op": "MSTORE",
      "path": "41"
    },
    "1765": {
      "fn": "ERC4973.balanceOf",
      "offset": [
        5676,
        5685
      ],
      "op": "PUSH1",
      "path": "41",
      "value": "0x4"
    },
    "1767": {
      "fn": "ERC4973.balanceOf",
      "offset": [
        5676,
        5692
      ],
      "op": "PUSH1",
      "path": "41",
      "value": "0x20"
    },
    "1769": {
      "fn": "ERC4973.balanceOf",
      "offset": [
        5676,
        5692
      ],
      "op": "MSTORE",
      "path": "41"
    },
    "1770": {
      "fn": "ERC4973.balanceOf",
      "offset": [
        5676,
        5692
      ],
      "op": "PUSH1",
      "path": "41",
      "value": "0x40"
    },
    "1772": {
      "fn": "ERC4973.balanceOf",
      "offset": [
        5676,
        5692
      ],
      "op": "SWAP1",
      "path": "41"
    },
    "1773": {
      "fn": "ERC4973.balanceOf",
      "offset": [
        5676,
        5692
      ],
      "op": "KECCAK256",
      "path": "41"
    },
    "1774": {
      "fn": "ERC4973.balanceOf",
      "offset": [
        5676,
        5692
      ],
      "op": "SLOAD",
      "path": "41"
    },
    "1775": {
      "fn": "ERC4973.balanceOf",
      "offset": [
        5676,
        5692
      ],
      "op": "SWAP1",
      "path": "41"
    },
    "1776": {
      "fn": "ERC4973.balanceOf",
      "jump": "o",
      "offset": [
        5414,
        5699
      ],
      "op": "JUMP",
      "path": "41"
    },
    "1777": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1668,
        1769
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1778": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x5"
    },
    "1780": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "1781": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1783": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1785": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1787": {
      "op": "SHL"
    },
    "1788": {
      "op": "SUB"
    },
    "1789": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "AND",
      "path": "0"
    },
    "1790": {
      "fn": "Context._msgSender",
      "offset": [
        719,
        729
      ],
      "op": "CALLER",
      "path": "5",
      "statement": 18
    },
    "1791": {
      "offset": [
        1248,
        1271
      ],
      "op": "EQ",
      "path": "0"
    },
    "1792": {
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x71B"
    },
    "1795": {
      "offset": [
        1240,
        1308
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "1796": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "1798": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "1799": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1803": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1805": {
      "op": "SHL"
    },
    "1806": {
      "offset": [
        1240,
        1308
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1807": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1808": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "1810": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "ADD",
      "path": "0"
    },
    "1811": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x422"
    },
    "1814": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1815": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1812"
    },
    "1818": {
      "fn": "Context._msgSender",
      "jump": "i",
      "offset": [
        1240,
        1308
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1819": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1820": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1732,
        1762
      ],
      "op": "PUSH2",
      "path": "0",
      "statement": 19,
      "value": "0x725"
    },
    "1823": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1759,
        1760
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1825": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1732,
        1750
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xF47"
    },
    "1828": {
      "fn": "Ownable.renounceOwnership",
      "jump": "i",
      "offset": [
        1732,
        1762
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1829": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1732,
        1762
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1830": {
      "fn": "Ownable.renounceOwnership",
      "jump": "o",
      "offset": [
        1668,
        1769
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1831": {
      "fn": "SoulboundCore.setBaseURI",
      "offset": [
        5539,
        5739
      ],
      "op": "JUMPDEST",
      "path": "38"
    },
    "1832": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x5"
    },
    "1834": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "1835": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1837": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1839": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1841": {
      "op": "SHL"
    },
    "1842": {
      "op": "SUB"
    },
    "1843": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "AND",
      "path": "0"
    },
    "1844": {
      "fn": "Context._msgSender",
      "offset": [
        719,
        729
      ],
      "op": "CALLER",
      "path": "5"
    },
    "1845": {
      "offset": [
        1248,
        1271
      ],
      "op": "EQ",
      "path": "0"
    },
    "1846": {
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x751"
    },
    "1849": {
      "offset": [
        1240,
        1308
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "1850": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "1852": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "1853": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1857": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1859": {
      "op": "SHL"
    },
    "1860": {
      "offset": [
        1240,
        1308
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1861": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1862": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "1864": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "ADD",
      "path": "0"
    },
    "1865": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x422"
    },
    "1868": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1869": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1812"
    },
    "1872": {
      "fn": "Context._msgSender",
      "jump": "i",
      "offset": [
        1240,
        1308
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1873": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1874": {
      "fn": "SoulboundCore.setBaseURI",
      "offset": [
        5659,
        5665
      ],
      "op": "DUP2",
      "path": "38"
    },
    "1875": {
      "offset": [
        1704,
        1723
      ],
      "op": "PUSH2",
      "path": "38",
      "value": "0x764"
    },
    "1878": {
      "fn": "Allowlist.getAllowlistOwner",
      "offset": [
        2247,
        2261
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x8"
    },
    "1880": {
      "fn": "Allowlist.getAllowlistOwner",
      "offset": [
        2247,
        2261
      ],
      "op": "SLOAD",
      "path": "14"
    },
    "1881": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1883": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1885": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1887": {
      "op": "SHL"
    },
    "1888": {
      "op": "SUB"
    },
    "1889": {
      "fn": "Allowlist.getAllowlistOwner",
      "offset": [
        2247,
        2261
      ],
      "op": "AND",
      "path": "14"
    },
    "1890": {
      "fn": "Allowlist.getAllowlistOwner",
      "offset": [
        2247,
        2261
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "1891": {
      "fn": "Allowlist.getAllowlistOwner",
      "offset": [
        2171,
        2268
      ],
      "op": "JUMP",
      "path": "14"
    },
    "1892": {
      "offset": [
        1704,
        1723
      ],
      "op": "JUMPDEST",
      "path": "38"
    },
    "1893": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1895": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1897": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1899": {
      "op": "SHL"
    },
    "1900": {
      "op": "SUB"
    },
    "1901": {
      "offset": [
        1693,
        1723
      ],
      "op": "AND",
      "path": "38"
    },
    "1902": {
      "offset": [
        1693,
        1700
      ],
      "op": "DUP2",
      "path": "38"
    },
    "1903": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1905": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1907": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1909": {
      "op": "SHL"
    },
    "1910": {
      "op": "SUB"
    },
    "1911": {
      "offset": [
        1693,
        1723
      ],
      "op": "AND",
      "path": "38"
    },
    "1912": {
      "branch": 82,
      "fn": "Allowlist.getAllowlistOwner",
      "offset": [
        1693,
        1723
      ],
      "op": "EQ",
      "path": "38"
    },
    "1913": {
      "offset": [
        1685,
        1748
      ],
      "op": "PUSH2",
      "path": "38",
      "value": "0x7BB"
    },
    "1916": {
      "branch": 82,
      "offset": [
        1685,
        1748
      ],
      "op": "JUMPI",
      "path": "38"
    },
    "1917": {
      "fn": "Allowlist.getAllowlistOwner",
      "offset": [
        1685,
        1748
      ],
      "op": "PUSH1",
      "path": "38",
      "value": "0x40"
    },
    "1919": {
      "fn": "Allowlist.getAllowlistOwner",
      "offset": [
        1685,
        1748
      ],
      "op": "MLOAD",
      "path": "38"
    },
    "1920": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1924": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1926": {
      "op": "SHL"
    },
    "1927": {
      "offset": [
        1685,
        1748
      ],
      "op": "DUP2",
      "path": "38"
    },
    "1928": {
      "fn": "Allowlist.getAllowlistOwner",
      "offset": [
        1685,
        1748
      ],
      "op": "MSTORE",
      "path": "38"
    },
    "1929": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1931": {
      "offset": [
        1685,
        1748
      ],
      "op": "PUSH1",
      "path": "38",
      "value": "0x4"
    },
    "1933": {
      "fn": "Allowlist.getAllowlistOwner",
      "offset": [
        1685,
        1748
      ],
      "op": "DUP3",
      "path": "38"
    },
    "1934": {
      "fn": "Allowlist.getAllowlistOwner",
      "offset": [
        1685,
        1748
      ],
      "op": "ADD",
      "path": "38"
    },
    "1935": {
      "op": "MSTORE"
    },
    "1936": {
      "op": "PUSH1",
      "value": "0x14"
    },
    "1938": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "1940": {
      "op": "DUP3"
    },
    "1941": {
      "op": "ADD"
    },
    "1942": {
      "op": "MSTORE"
    },
    "1943": {
      "op": "PUSH20",
      "value": "0x4E6F7420416C6C6F776C697374204F776E657221"
    },
    "1964": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "1966": {
      "op": "SHL"
    },
    "1967": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "1969": {
      "op": "DUP3"
    },
    "1970": {
      "op": "ADD"
    },
    "1971": {
      "op": "MSTORE"
    },
    "1972": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "1974": {
      "op": "ADD"
    },
    "1975": {
      "offset": [
        1685,
        1748
      ],
      "op": "PUSH2",
      "path": "38",
      "value": "0x422"
    },
    "1978": {
      "op": "JUMP"
    },
    "1979": {
      "offset": [
        1685,
        1748
      ],
      "op": "JUMPDEST",
      "path": "38"
    },
    "1980": {
      "fn": "SoulboundCore.setBaseURI",
      "offset": [
        5711,
        5732
      ],
      "op": "PUSH2",
      "path": "38",
      "statement": 20,
      "value": "0x7C4"
    },
    "1983": {
      "fn": "SoulboundCore.setBaseURI",
      "offset": [
        5723,
        5731
      ],
      "op": "DUP3",
      "path": "38"
    },
    "1984": {
      "fn": "SoulboundCore.setBaseURI",
      "offset": [
        5711,
        5722
      ],
      "op": "PUSH2",
      "path": "38",
      "value": "0xF99"
    },
    "1987": {
      "fn": "SoulboundCore.setBaseURI",
      "jump": "i",
      "offset": [
        5711,
        5732
      ],
      "op": "JUMP",
      "path": "38"
    },
    "1988": {
      "fn": "SoulboundCore.setBaseURI",
      "offset": [
        5711,
        5732
      ],
      "op": "JUMPDEST",
      "path": "38"
    },
    "1989": {
      "offset": [
        1318,
        1319
      ],
      "op": "POP",
      "path": "0"
    },
    "1990": {
      "fn": "SoulboundCore.setBaseURI",
      "offset": [
        5539,
        5739
      ],
      "op": "POP",
      "path": "38"
    },
    "1991": {
      "fn": "SoulboundCore.setBaseURI",
      "offset": [
        5539,
        5739
      ],
      "op": "POP",
      "path": "38"
    },
    "1992": {
      "fn": "SoulboundCore.setBaseURI",
      "jump": "o",
      "offset": [
        5539,
        5739
      ],
      "op": "JUMP",
      "path": "38"
    },
    "1993": {
      "fn": "ERC4973.symbol",
      "offset": [
        4886,
        4988
      ],
      "op": "JUMPDEST",
      "path": "41"
    },
    "1994": {
      "fn": "ERC4973.symbol",
      "offset": [
        4942,
        4955
      ],
      "op": "PUSH1",
      "path": "41",
      "value": "0x60"
    },
    "1996": {
      "fn": "ERC4973.symbol",
      "offset": [
        4974,
        4981
      ],
      "op": "PUSH1",
      "path": "41",
      "statement": 21,
      "value": "0x1"
    },
    "1998": {
      "fn": "ERC4973.symbol",
      "offset": [
        4967,
        4981
      ],
      "op": "DUP1",
      "path": "41"
    },
    "1999": {
      "fn": "ERC4973.symbol",
      "offset": [
        4967,
        4981
      ],
      "op": "SLOAD",
      "path": "41"
    },
    "2000": {
      "fn": "ERC4973.symbol",
      "offset": [
        4967,
        4981
      ],
      "op": "PUSH2",
      "path": "41",
      "value": "0x34E"
    },
    "2003": {
      "fn": "ERC4973.symbol",
      "offset": [
        4967,
        4981
      ],
      "op": "SWAP1",
      "path": "41"
    },
    "2004": {
      "fn": "ERC4973.symbol",
      "offset": [
        4967,
        4981
      ],
      "op": "PUSH2",
      "path": "41",
      "value": "0x17A9"
    },
    "2007": {
      "fn": "ERC4973.symbol",
      "jump": "i",
      "offset": [
        4967,
        4981
      ],
      "op": "JUMP",
      "path": "41"
    },
    "2008": {
      "fn": "ERC4973.tokenURI",
      "offset": [
        4994,
        5237
      ],
      "op": "JUMPDEST",
      "path": "41"
    },
    "2009": {
      "fn": "ERC4973.tokenURI",
      "offset": [
        5107,
        5120
      ],
      "op": "PUSH1",
      "path": "41",
      "value": "0x60"
    },
    "2011": {
      "fn": "ERC4973.tokenURI",
      "offset": [
        5144,
        5160
      ],
      "op": "PUSH2",
      "path": "41",
      "statement": 22,
      "value": "0x7E3"
    },
    "2014": {
      "fn": "ERC4973.tokenURI",
      "offset": [
        5152,
        5159
      ],
      "op": "DUP3",
      "path": "41"
    },
    "2015": {
      "fn": "ERC4973.tokenURI",
      "offset": [
        5144,
        5151
      ],
      "op": "PUSH2",
      "path": "41",
      "value": "0xCB2"
    },
    "2018": {
      "fn": "ERC4973.tokenURI",
      "jump": "i",
      "offset": [
        5144,
        5160
      ],
      "op": "JUMP",
      "path": "41"
    },
    "2019": {
      "branch": 91,
      "fn": "ERC4973.tokenURI",
      "offset": [
        5144,
        5160
      ],
      "op": "JUMPDEST",
      "path": "41"
    },
    "2020": {
      "fn": "ERC4973.tokenURI",
      "offset": [
        5136,
        5194
      ],
      "op": "PUSH2",
      "path": "41",
      "value": "0x82F"
    },
    "2023": {
      "branch": 91,
      "fn": "ERC4973.tokenURI",
      "offset": [
        5136,
        5194
      ],
      "op": "JUMPI",
      "path": "41"
    },
    "2024": {
      "fn": "ERC4973.tokenURI",
      "offset": [
        5136,
        5194
      ],
      "op": "PUSH1",
      "path": "41",
      "value": "0x40"
    },
    "2026": {
      "fn": "ERC4973.tokenURI",
      "offset": [
        5136,
        5194
      ],
      "op": "MLOAD",
      "path": "41"
    },
    "2027": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "2031": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "2033": {
      "op": "SHL"
    },
    "2034": {
      "fn": "ERC4973.tokenURI",
      "offset": [
        5136,
        5194
      ],
      "op": "DUP2",
      "path": "41"
    },
    "2035": {
      "fn": "ERC4973.tokenURI",
      "offset": [
        5136,
        5194
      ],
      "op": "MSTORE",
      "path": "41"
    },
    "2036": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2038": {
      "fn": "ERC4973.tokenURI",
      "offset": [
        5136,
        5194
      ],
      "op": "PUSH1",
      "path": "41",
      "value": "0x4"
    },
    "2040": {
      "fn": "ERC4973.tokenURI",
      "offset": [
        5136,
        5194
      ],
      "op": "DUP3",
      "path": "41"
    },
    "2041": {
      "fn": "ERC4973.tokenURI",
      "offset": [
        5136,
        5194
      ],
      "op": "ADD",
      "path": "41"
    },
    "2042": {
      "op": "MSTORE"
    },
    "2043": {
      "op": "PUSH1",
      "value": "0x1D"
    },
    "2045": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "2047": {
      "op": "DUP3"
    },
    "2048": {
      "op": "ADD"
    },
    "2049": {
      "op": "MSTORE"
    },
    "2050": {
      "op": "PUSH32",
      "value": "0x746F6B656E5552493A20746F6B656E20646F65736E2774206578697374000000"
    },
    "2083": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "2085": {
      "op": "DUP3"
    },
    "2086": {
      "op": "ADD"
    },
    "2087": {
      "op": "MSTORE"
    },
    "2088": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "2090": {
      "op": "ADD"
    },
    "2091": {
      "fn": "ERC4973.tokenURI",
      "offset": [
        5136,
        5194
      ],
      "op": "PUSH2",
      "path": "41",
      "value": "0x422"
    },
    "2094": {
      "op": "JUMP"
    },
    "2095": {
      "fn": "ERC4973.tokenURI",
      "offset": [
        5136,
        5194
      ],
      "op": "JUMPDEST",
      "path": "41"
    },
    "2096": {
      "fn": "ERC4973.tokenURI",
      "offset": [
        5211,
        5230
      ],
      "op": "PUSH1",
      "path": "41",
      "statement": 23,
      "value": "0x0"
    },
    "2098": {
      "fn": "ERC4973.tokenURI",
      "offset": [
        5211,
        5230
      ],
      "op": "DUP3",
      "path": "41"
    },
    "2099": {
      "fn": "ERC4973.tokenURI",
      "offset": [
        5211,
        5230
      ],
      "op": "DUP2",
      "path": "41"
    },
    "2100": {
      "fn": "ERC4973.tokenURI",
      "offset": [
        5211,
        5230
      ],
      "op": "MSTORE",
      "path": "41"
    },
    "2101": {
      "fn": "ERC4973.tokenURI",
      "offset": [
        5211,
        5221
      ],
      "op": "PUSH1",
      "path": "41",
      "value": "0x3"
    },
    "2103": {
      "fn": "ERC4973.tokenURI",
      "offset": [
        5211,
        5230
      ],
      "op": "PUSH1",
      "path": "41",
      "value": "0x20"
    },
    "2105": {
      "fn": "ERC4973.tokenURI",
      "offset": [
        5211,
        5230
      ],
      "op": "MSTORE",
      "path": "41"
    },
    "2106": {
      "fn": "ERC4973.tokenURI",
      "offset": [
        5211,
        5230
      ],
      "op": "PUSH1",
      "path": "41",
      "value": "0x40"
    },
    "2108": {
      "fn": "ERC4973.tokenURI",
      "offset": [
        5211,
        5230
      ],
      "op": "SWAP1",
      "path": "41"
    },
    "2109": {
      "fn": "ERC4973.tokenURI",
      "offset": [
        5211,
        5230
      ],
      "op": "KECCAK256",
      "path": "41"
    },
    "2110": {
      "fn": "ERC4973.tokenURI",
      "offset": [
        5204,
        5230
      ],
      "op": "DUP1",
      "path": "41"
    },
    "2111": {
      "fn": "ERC4973.tokenURI",
      "offset": [
        5204,
        5230
      ],
      "op": "SLOAD",
      "path": "41"
    },
    "2112": {
      "fn": "ERC4973.tokenURI",
      "offset": [
        5204,
        5230
      ],
      "op": "PUSH2",
      "path": "41",
      "value": "0x848"
    },
    "2115": {
      "fn": "ERC4973.tokenURI",
      "offset": [
        5204,
        5230
      ],
      "op": "SWAP1",
      "path": "41"
    },
    "2116": {
      "fn": "ERC4973.tokenURI",
      "offset": [
        5204,
        5230
      ],
      "op": "PUSH2",
      "path": "41",
      "value": "0x17A9"
    },
    "2119": {
      "fn": "ERC4973.tokenURI",
      "jump": "i",
      "offset": [
        5204,
        5230
      ],
      "op": "JUMP",
      "path": "41"
    },
    "2120": {
      "fn": "ERC4973.tokenURI",
      "offset": [
        5204,
        5230
      ],
      "op": "JUMPDEST",
      "path": "41"
    },
    "2121": {
      "fn": "ERC4973.tokenURI",
      "offset": [
        5204,
        5230
      ],
      "op": "DUP1",
      "path": "41"
    },
    "2122": {
      "fn": "ERC4973.tokenURI",
      "offset": [
        5204,
        5230
      ],
      "op": "PUSH1",
      "path": "41",
      "value": "0x1F"
    },
    "2124": {
      "fn": "ERC4973.tokenURI",
      "offset": [
        5204,
        5230
      ],
      "op": "ADD",
      "path": "41"
    },
    "2125": {
      "fn": "ERC4973.tokenURI",
      "offset": [
        5204,
        5230
      ],
      "op": "PUSH1",
      "path": "41",
      "value": "0x20"
    },
    "2127": {
      "fn": "ERC4973.tokenURI",
      "offset": [
        5204,
        5230
      ],
      "op": "DUP1",
      "path": "41"
    },
    "2128": {
      "fn": "ERC4973.tokenURI",
      "offset": [
        5204,
        5230
      ],
      "op": "SWAP2",
      "path": "41"
    },
    "2129": {
      "fn": "ERC4973.tokenURI",
      "offset": [
        5204,
        5230
      ],
      "op": "DIV",
      "path": "41"
    },
    "2130": {
      "fn": "ERC4973.tokenURI",
      "offset": [
        5204,
        5230
      ],
      "op": "MUL",
      "path": "41"
    },
    "2131": {
      "fn": "ERC4973.tokenURI",
      "offset": [
        5204,
        5230
      ],
      "op": "PUSH1",
      "path": "41",
      "value": "0x20"
    },
    "2133": {
      "fn": "ERC4973.tokenURI",
      "offset": [
        5204,
        5230
      ],
      "op": "ADD",
      "path": "41"
    },
    "2134": {
      "fn": "ERC4973.tokenURI",
      "offset": [
        5204,
        5230
      ],
      "op": "PUSH1",
      "path": "41",
      "value": "0x40"
    },
    "2136": {
      "fn": "ERC4973.tokenURI",
      "offset": [
        5204,
        5230
      ],
      "op": "MLOAD",
      "path": "41"
    },
    "2137": {
      "fn": "ERC4973.tokenURI",
      "offset": [
        5204,
        5230
      ],
      "op": "SWAP1",
      "path": "41"
    },
    "2138": {
      "fn": "ERC4973.tokenURI",
      "offset": [
        5204,
        5230
      ],
      "op": "DUP2",
      "path": "41"
    },
    "2139": {
      "fn": "ERC4973.tokenURI",
      "offset": [
        5204,
        5230
      ],
      "op": "ADD",
      "path": "41"
    },
    "2140": {
      "fn": "ERC4973.tokenURI",
      "offset": [
        5204,
        5230
      ],
      "op": "PUSH1",
      "path": "41",
      "value": "0x40"
    },
    "2142": {
      "fn": "ERC4973.tokenURI",
      "offset": [
        5204,
        5230
      ],
      "op": "MSTORE",
      "path": "41"
    },
    "2143": {
      "fn": "ERC4973.tokenURI",
      "offset": [
        5204,
        5230
      ],
      "op": "DUP1",
      "path": "41"
    },
    "2144": {
      "fn": "ERC4973.tokenURI",
      "offset": [
        5204,
        5230
      ],
      "op": "SWAP3",
      "path": "41"
    },
    "2145": {
      "fn": "ERC4973.tokenURI",
      "offset": [
        5204,
        5230
      ],
      "op": "SWAP2",
      "path": "41"
    },
    "2146": {
      "fn": "ERC4973.tokenURI",
      "offset": [
        5204,
        5230
      ],
      "op": "SWAP1",
      "path": "41"
    },
    "2147": {
      "fn": "ERC4973.tokenURI",
      "offset": [
        5204,
        5230
      ],
      "op": "DUP2",
      "path": "41"
    },
    "2148": {
      "fn": "ERC4973.tokenURI",
      "offset": [
        5204,
        5230
      ],
      "op": "DUP2",
      "path": "41"
    },
    "2149": {
      "fn": "ERC4973.tokenURI",
      "offset": [
        5204,
        5230
      ],
      "op": "MSTORE",
      "path": "41"
    },
    "2150": {
      "fn": "ERC4973.tokenURI",
      "offset": [
        5204,
        5230
      ],
      "op": "PUSH1",
      "path": "41",
      "value": "0x20"
    },
    "2152": {
      "fn": "ERC4973.tokenURI",
      "offset": [
        5204,
        5230
      ],
      "op": "ADD",
      "path": "41"
    },
    "2153": {
      "fn": "ERC4973.tokenURI",
      "offset": [
        5204,
        5230
      ],
      "op": "DUP3",
      "path": "41"
    },
    "2154": {
      "fn": "ERC4973.tokenURI",
      "offset": [
        5204,
        5230
      ],
      "op": "DUP1",
      "path": "41"
    },
    "2155": {
      "fn": "ERC4973.tokenURI",
      "offset": [
        5204,
        5230
      ],
      "op": "SLOAD",
      "path": "41"
    },
    "2156": {
      "fn": "ERC4973.tokenURI",
      "offset": [
        5204,
        5230
      ],
      "op": "PUSH2",
      "path": "41",
      "value": "0x874"
    },
    "2159": {
      "fn": "ERC4973.tokenURI",
      "offset": [
        5204,
        5230
      ],
      "op": "SWAP1",
      "path": "41"
    },
    "2160": {
      "fn": "ERC4973.tokenURI",
      "offset": [
        5204,
        5230
      ],
      "op": "PUSH2",
      "path": "41",
      "value": "0x17A9"
    },
    "2163": {
      "fn": "ERC4973.tokenURI",
      "jump": "i",
      "offset": [
        5204,
        5230
      ],
      "op": "JUMP",
      "path": "41"
    },
    "2164": {
      "fn": "ERC4973.tokenURI",
      "offset": [
        5204,
        5230
      ],
      "op": "JUMPDEST",
      "path": "41"
    },
    "2165": {
      "fn": "ERC4973.tokenURI",
      "offset": [
        5204,
        5230
      ],
      "op": "DUP1",
      "path": "41"
    },
    "2166": {
      "fn": "ERC4973.tokenURI",
      "offset": [
        5204,
        5230
      ],
      "op": "ISZERO",
      "path": "41"
    },
    "2167": {
      "fn": "ERC4973.tokenURI",
      "offset": [
        5204,
        5230
      ],
      "op": "PUSH2",
      "path": "41",
      "value": "0x8C1"
    },
    "2170": {
      "fn": "ERC4973.tokenURI",
      "offset": [
        5204,
        5230
      ],
      "op": "JUMPI",
      "path": "41"
    },
    "2171": {
      "fn": "ERC4973.tokenURI",
      "offset": [
        5204,
        5230
      ],
      "op": "DUP1",
      "path": "41"
    },
    "2172": {
      "fn": "ERC4973.tokenURI",
      "offset": [
        5204,
        5230
      ],
      "op": "PUSH1",
      "path": "41",
      "value": "0x1F"
    },
    "2174": {
      "fn": "ERC4973.tokenURI",
      "offset": [
        5204,
        5230
      ],
      "op": "LT",
      "path": "41"
    },
    "2175": {
      "fn": "ERC4973.tokenURI",
      "offset": [
        5204,
        5230
      ],
      "op": "PUSH2",
      "path": "41",
      "value": "0x896"
    },
    "2178": {
      "fn": "ERC4973.tokenURI",
      "offset": [
        5204,
        5230
      ],
      "op": "JUMPI",
      "path": "41"
    },
    "2179": {
      "fn": "ERC4973.tokenURI",
      "offset": [
        5204,
        5230
      ],
      "op": "PUSH2",
      "path": "41",
      "value": "0x100"
    },
    "2182": {
      "fn": "ERC4973.tokenURI",
      "offset": [
        5204,
        5230
      ],
      "op": "DUP1",
      "path": "41"
    },
    "2183": {
      "fn": "ERC4973.tokenURI",
      "offset": [
        5204,
        5230
      ],
      "op": "DUP4",
      "path": "41"
    },
    "2184": {
      "fn": "ERC4973.tokenURI",
      "offset": [
        5204,
        5230
      ],
      "op": "SLOAD",
      "path": "41"
    },
    "2185": {
      "fn": "ERC4973.tokenURI",
      "offset": [
        5204,
        5230
      ],
      "op": "DIV",
      "path": "41"
    },
    "2186": {
      "fn": "ERC4973.tokenURI",
      "offset": [
        5204,
        5230
      ],
      "op": "MUL",
      "path": "41"
    },
    "2187": {
      "fn": "ERC4973.tokenURI",
      "offset": [
        5204,
        5230
      ],
      "op": "DUP4",
      "path": "41"
    },
    "2188": {
      "fn": "ERC4973.tokenURI",
      "offset": [
        5204,
        5230
      ],
      "op": "MSTORE",
      "path": "41"
    },
    "2189": {
      "fn": "ERC4973.tokenURI",
      "offset": [
        5204,
        5230
      ],
      "op": "SWAP2",
      "path": "41"
    },
    "2190": {
      "fn": "ERC4973.tokenURI",
      "offset": [
        5204,
        5230
      ],
      "op": "PUSH1",
      "path": "41",
      "value": "0x20"
    },
    "2192": {
      "fn": "ERC4973.tokenURI",
      "offset": [
        5204,
        5230
      ],
      "op": "ADD",
      "path": "41"
    },
    "2193": {
      "fn": "ERC4973.tokenURI",
      "offset": [
        5204,
        5230
      ],
      "op": "SWAP2",
      "path": "41"
    },
    "2194": {
      "fn": "ERC4973.tokenURI",
      "offset": [
        5204,
        5230
      ],
      "op": "PUSH2",
      "path": "41",
      "value": "0x8C1"
    },
    "2197": {
      "fn": "ERC4973.tokenURI",
      "offset": [
        5204,
        5230
      ],
      "op": "JUMP",
      "path": "41"
    },
    "2198": {
      "fn": "ERC4973.tokenURI",
      "offset": [
        5204,
        5230
      ],
      "op": "JUMPDEST",
      "path": "41"
    },
    "2199": {
      "fn": "ERC4973.tokenURI",
      "offset": [
        5204,
        5230
      ],
      "op": "DUP3",
      "path": "41"
    },
    "2200": {
      "fn": "ERC4973.tokenURI",
      "offset": [
        5204,
        5230
      ],
      "op": "ADD",
      "path": "41"
    },
    "2201": {
      "fn": "ERC4973.tokenURI",
      "offset": [
        5204,
        5230
      ],
      "op": "SWAP2",
      "path": "41"
    },
    "2202": {
      "fn": "ERC4973.tokenURI",
      "offset": [
        5204,
        5230
      ],
      "op": "SWAP1",
      "path": "41"
    },
    "2203": {
      "fn": "ERC4973.tokenURI",
      "offset": [
        5204,
        5230
      ],
      "op": "PUSH1",
      "path": "41",
      "value": "0x0"
    },
    "2205": {
      "fn": "ERC4973.tokenURI",
      "offset": [
        5204,
        5230
      ],
      "op": "MSTORE",
      "path": "41"
    },
    "2206": {
      "fn": "ERC4973.tokenURI",
      "offset": [
        5204,
        5230
      ],
      "op": "PUSH1",
      "path": "41",
      "value": "0x20"
    },
    "2208": {
      "fn": "ERC4973.tokenURI",
      "offset": [
        5204,
        5230
      ],
      "op": "PUSH1",
      "path": "41",
      "value": "0x0"
    },
    "2210": {
      "fn": "ERC4973.tokenURI",
      "offset": [
        5204,
        5230
      ],
      "op": "KECCAK256",
      "path": "41"
    },
    "2211": {
      "fn": "ERC4973.tokenURI",
      "offset": [
        5204,
        5230
      ],
      "op": "SWAP1",
      "path": "41"
    },
    "2212": {
      "fn": "ERC4973.tokenURI",
      "offset": [
        5204,
        5230
      ],
      "op": "JUMPDEST",
      "path": "41"
    },
    "2213": {
      "fn": "ERC4973.tokenURI",
      "offset": [
        5204,
        5230
      ],
      "op": "DUP2",
      "path": "41"
    },
    "2214": {
      "fn": "ERC4973.tokenURI",
      "offset": [
        5204,
        5230
      ],
      "op": "SLOAD",
      "path": "41"
    },
    "2215": {
      "fn": "ERC4973.tokenURI",
      "offset": [
        5204,
        5230
      ],
      "op": "DUP2",
      "path": "41"
    },
    "2216": {
      "fn": "ERC4973.tokenURI",
      "offset": [
        5204,
        5230
      ],
      "op": "MSTORE",
      "path": "41"
    },
    "2217": {
      "fn": "ERC4973.tokenURI",
      "offset": [
        5204,
        5230
      ],
      "op": "SWAP1",
      "path": "41"
    },
    "2218": {
      "fn": "ERC4973.tokenURI",
      "offset": [
        5204,
        5230
      ],
      "op": "PUSH1",
      "path": "41",
      "value": "0x1"
    },
    "2220": {
      "fn": "ERC4973.tokenURI",
      "offset": [
        5204,
        5230
      ],
      "op": "ADD",
      "path": "41"
    },
    "2221": {
      "fn": "ERC4973.tokenURI",
      "offset": [
        5204,
        5230
      ],
      "op": "SWAP1",
      "path": "41"
    },
    "2222": {
      "fn": "ERC4973.tokenURI",
      "offset": [
        5204,
        5230
      ],
      "op": "PUSH1",
      "path": "41",
      "value": "0x20"
    },
    "2224": {
      "fn": "ERC4973.tokenURI",
      "offset": [
        5204,
        5230
      ],
      "op": "ADD",
      "path": "41"
    },
    "2225": {
      "fn": "ERC4973.tokenURI",
      "offset": [
        5204,
        5230
      ],
      "op": "DUP1",
      "path": "41"
    },
    "2226": {
      "fn": "ERC4973.tokenURI",
      "offset": [
        5204,
        5230
      ],
      "op": "DUP4",
      "path": "41"
    },
    "2227": {
      "fn": "ERC4973.tokenURI",
      "offset": [
        5204,
        5230
      ],
      "op": "GT",
      "path": "41"
    },
    "2228": {
      "fn": "ERC4973.tokenURI",
      "offset": [
        5204,
        5230
      ],
      "op": "PUSH2",
      "path": "41",
      "value": "0x8A4"
    },
    "2231": {
      "fn": "ERC4973.tokenURI",
      "offset": [
        5204,
        5230
      ],
      "op": "JUMPI",
      "path": "41"
    },
    "2232": {
      "fn": "ERC4973.tokenURI",
      "offset": [
        5204,
        5230
      ],
      "op": "DUP3",
      "path": "41"
    },
    "2233": {
      "fn": "ERC4973.tokenURI",
      "offset": [
        5204,
        5230
      ],
      "op": "SWAP1",
      "path": "41"
    },
    "2234": {
      "fn": "ERC4973.tokenURI",
      "offset": [
        5204,
        5230
      ],
      "op": "SUB",
      "path": "41"
    },
    "2235": {
      "fn": "ERC4973.tokenURI",
      "offset": [
        5204,
        5230
      ],
      "op": "PUSH1",
      "path": "41",
      "value": "0x1F"
    },
    "2237": {
      "fn": "ERC4973.tokenURI",
      "offset": [
        5204,
        5230
      ],
      "op": "AND",
      "path": "41"
    },
    "2238": {
      "fn": "ERC4973.tokenURI",
      "offset": [
        5204,
        5230
      ],
      "op": "DUP3",
      "path": "41"
    },
    "2239": {
      "fn": "ERC4973.tokenURI",
      "offset": [
        5204,
        5230
      ],
      "op": "ADD",
      "path": "41"
    },
    "2240": {
      "fn": "ERC4973.tokenURI",
      "offset": [
        5204,
        5230
      ],
      "op": "SWAP2",
      "path": "41"
    },
    "2241": {
      "fn": "ERC4973.tokenURI",
      "offset": [
        5204,
        5230
      ],
      "op": "JUMPDEST",
      "path": "41"
    },
    "2242": {
      "fn": "ERC4973.tokenURI",
      "offset": [
        5204,
        5230
      ],
      "op": "POP",
      "path": "41"
    },
    "2243": {
      "fn": "ERC4973.tokenURI",
      "offset": [
        5204,
        5230
      ],
      "op": "POP",
      "path": "41"
    },
    "2244": {
      "fn": "ERC4973.tokenURI",
      "offset": [
        5204,
        5230
      ],
      "op": "POP",
      "path": "41"
    },
    "2245": {
      "fn": "ERC4973.tokenURI",
      "offset": [
        5204,
        5230
      ],
      "op": "POP",
      "path": "41"
    },
    "2246": {
      "fn": "ERC4973.tokenURI",
      "offset": [
        5204,
        5230
      ],
      "op": "POP",
      "path": "41"
    },
    "2247": {
      "fn": "ERC4973.tokenURI",
      "offset": [
        5204,
        5230
      ],
      "op": "SWAP1",
      "path": "41"
    },
    "2248": {
      "fn": "ERC4973.tokenURI",
      "offset": [
        5204,
        5230
      ],
      "op": "POP",
      "path": "41"
    },
    "2249": {
      "fn": "ERC4973.tokenURI",
      "offset": [
        4994,
        5237
      ],
      "op": "SWAP2",
      "path": "41"
    },
    "2250": {
      "fn": "ERC4973.tokenURI",
      "offset": [
        4994,
        5237
      ],
      "op": "SWAP1",
      "path": "41"
    },
    "2251": {
      "fn": "ERC4973.tokenURI",
      "offset": [
        4994,
        5237
      ],
      "op": "POP",
      "path": "41"
    },
    "2252": {
      "fn": "ERC4973.tokenURI",
      "jump": "o",
      "offset": [
        4994,
        5237
      ],
      "op": "JUMP",
      "path": "41"
    },
    "2253": {
      "fn": "Soulbound._getBaseURI",
      "offset": [
        7425,
        7673
      ],
      "op": "JUMPDEST",
      "path": "37"
    },
    "2254": {
      "fn": "Soulbound._getBaseURI",
      "offset": [
        7469,
        7491
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0x60"
    },
    "2256": {
      "fn": "Soulbound._getBaseURI",
      "offset": [
        7567,
        7574
      ],
      "op": "PUSH1",
      "path": "37",
      "statement": 24,
      "value": "0x6"
    },
    "2258": {
      "fn": "Soulbound._getBaseURI",
      "offset": [
        7561,
        7582
      ],
      "op": "DUP1",
      "path": "37"
    },
    "2259": {
      "fn": "Soulbound._getBaseURI",
      "offset": [
        7561,
        7582
      ],
      "op": "SLOAD",
      "path": "37"
    },
    "2260": {
      "fn": "Soulbound._getBaseURI",
      "offset": [
        7561,
        7582
      ],
      "op": "PUSH2",
      "path": "37",
      "value": "0x8DC"
    },
    "2263": {
      "fn": "Soulbound._getBaseURI",
      "offset": [
        7561,
        7582
      ],
      "op": "SWAP1",
      "path": "37"
    },
    "2264": {
      "fn": "Soulbound._getBaseURI",
      "offset": [
        7561,
        7582
      ],
      "op": "PUSH2",
      "path": "37",
      "value": "0x17A9"
    },
    "2267": {
      "fn": "Soulbound._getBaseURI",
      "jump": "i",
      "offset": [
        7561,
        7582
      ],
      "op": "JUMP",
      "path": "37"
    },
    "2268": {
      "fn": "Soulbound._getBaseURI",
      "offset": [
        7561,
        7582
      ],
      "op": "JUMPDEST",
      "path": "37"
    },
    "2269": {
      "fn": "Soulbound._getBaseURI",
      "offset": [
        7561,
        7582
      ],
      "op": "SWAP1",
      "path": "37"
    },
    "2270": {
      "fn": "Soulbound._getBaseURI",
      "offset": [
        7561,
        7582
      ],
      "op": "POP",
      "path": "37"
    },
    "2271": {
      "fn": "Soulbound._getBaseURI",
      "offset": [
        7586,
        7587
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0x0"
    },
    "2273": {
      "branch": 94,
      "fn": "Soulbound._getBaseURI",
      "offset": [
        7561,
        7587
      ],
      "op": "SUB",
      "path": "37"
    },
    "2274": {
      "fn": "Soulbound._getBaseURI",
      "offset": [
        7553,
        7605
      ],
      "op": "PUSH2",
      "path": "37",
      "value": "0x91D"
    },
    "2277": {
      "branch": 94,
      "fn": "Soulbound._getBaseURI",
      "offset": [
        7553,
        7605
      ],
      "op": "JUMPI",
      "path": "37"
    },
    "2278": {
      "fn": "Soulbound._getBaseURI",
      "offset": [
        7553,
        7605
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0x40"
    },
    "2280": {
      "fn": "Soulbound._getBaseURI",
      "offset": [
        7553,
        7605
      ],
      "op": "MLOAD",
      "path": "37"
    },
    "2281": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "2285": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "2287": {
      "op": "SHL"
    },
    "2288": {
      "fn": "Soulbound._getBaseURI",
      "offset": [
        7553,
        7605
      ],
      "op": "DUP2",
      "path": "37"
    },
    "2289": {
      "fn": "Soulbound._getBaseURI",
      "offset": [
        7553,
        7605
      ],
      "op": "MSTORE",
      "path": "37"
    },
    "2290": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2292": {
      "fn": "Soulbound._getBaseURI",
      "offset": [
        7553,
        7605
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0x4"
    },
    "2294": {
      "fn": "Soulbound._getBaseURI",
      "offset": [
        7553,
        7605
      ],
      "op": "DUP3",
      "path": "37"
    },
    "2295": {
      "fn": "Soulbound._getBaseURI",
      "offset": [
        7553,
        7605
      ],
      "op": "ADD",
      "path": "37"
    },
    "2296": {
      "op": "MSTORE"
    },
    "2297": {
      "op": "PUSH1",
      "value": "0xD"
    },
    "2299": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "2301": {
      "op": "DUP3"
    },
    "2302": {
      "op": "ADD"
    },
    "2303": {
      "op": "MSTORE"
    },
    "2304": {
      "op": "PUSH13",
      "value": "0x456D7074792062617365555249"
    },
    "2318": {
      "op": "PUSH1",
      "value": "0x98"
    },
    "2320": {
      "op": "SHL"
    },
    "2321": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "2323": {
      "op": "DUP3"
    },
    "2324": {
      "op": "ADD"
    },
    "2325": {
      "op": "MSTORE"
    },
    "2326": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "2328": {
      "op": "ADD"
    },
    "2329": {
      "fn": "Soulbound._getBaseURI",
      "offset": [
        7553,
        7605
      ],
      "op": "PUSH2",
      "path": "37",
      "value": "0x422"
    },
    "2332": {
      "op": "JUMP"
    },
    "2333": {
      "fn": "Soulbound._getBaseURI",
      "offset": [
        7553,
        7605
      ],
      "op": "JUMPDEST",
      "path": "37"
    },
    "2334": {
      "fn": "Soulbound._getBaseURI",
      "offset": [
        7659,
        7666
      ],
      "op": "PUSH1",
      "path": "37",
      "statement": 25,
      "value": "0x6"
    },
    "2336": {
      "fn": "Soulbound._getBaseURI",
      "offset": [
        7648,
        7666
      ],
      "op": "DUP1",
      "path": "37"
    },
    "2337": {
      "fn": "Soulbound._getBaseURI",
      "offset": [
        7648,
        7666
      ],
      "op": "SLOAD",
      "path": "37"
    },
    "2338": {
      "fn": "Soulbound._getBaseURI",
      "offset": [
        7648,
        7666
      ],
      "op": "PUSH2",
      "path": "37",
      "value": "0x34E"
    },
    "2341": {
      "fn": "Soulbound._getBaseURI",
      "offset": [
        7648,
        7666
      ],
      "op": "SWAP1",
      "path": "37"
    },
    "2342": {
      "fn": "Soulbound._getBaseURI",
      "offset": [
        7648,
        7666
      ],
      "op": "PUSH2",
      "path": "37",
      "value": "0x17A9"
    },
    "2345": {
      "fn": "Soulbound._getBaseURI",
      "jump": "i",
      "offset": [
        7648,
        7666
      ],
      "op": "JUMP",
      "path": "37"
    },
    "2346": {
      "fn": "SoulboundCore.issueWithSignature",
      "offset": [
        2807,
        3801
      ],
      "op": "JUMPDEST",
      "path": "38"
    },
    "2347": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2349": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2351": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2353": {
      "op": "SHL"
    },
    "2354": {
      "op": "SUB"
    },
    "2355": {
      "fn": "SoulboundCore.issueWithSignature",
      "offset": [
        3058,
        3076
      ],
      "op": "DUP6",
      "path": "38",
      "statement": 26
    },
    "2356": {
      "branch": 83,
      "fn": "SoulboundCore.issueWithSignature",
      "offset": [
        3058,
        3076
      ],
      "op": "AND",
      "path": "38"
    },
    "2357": {
      "fn": "SoulboundCore.issueWithSignature",
      "offset": [
        3050,
        3102
      ],
      "op": "PUSH2",
      "path": "38",
      "value": "0x978"
    },
    "2360": {
      "branch": 83,
      "fn": "SoulboundCore.issueWithSignature",
      "offset": [
        3050,
        3102
      ],
      "op": "JUMPI",
      "path": "38"
    },
    "2361": {
      "fn": "SoulboundCore.issueWithSignature",
      "offset": [
        3050,
        3102
      ],
      "op": "PUSH1",
      "path": "38",
      "value": "0x40"
    },
    "2363": {
      "fn": "SoulboundCore.issueWithSignature",
      "offset": [
        3050,
        3102
      ],
      "op": "MLOAD",
      "path": "38"
    },
    "2364": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "2368": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "2370": {
      "op": "SHL"
    },
    "2371": {
      "fn": "SoulboundCore.issueWithSignature",
      "offset": [
        3050,
        3102
      ],
      "op": "DUP2",
      "path": "38"
    },
    "2372": {
      "fn": "SoulboundCore.issueWithSignature",
      "offset": [
        3050,
        3102
      ],
      "op": "MSTORE",
      "path": "38"
    },
    "2373": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2375": {
      "fn": "SoulboundCore.issueWithSignature",
      "offset": [
        3050,
        3102
      ],
      "op": "PUSH1",
      "path": "38",
      "value": "0x4"
    },
    "2377": {
      "fn": "SoulboundCore.issueWithSignature",
      "offset": [
        3050,
        3102
      ],
      "op": "DUP3",
      "path": "38"
    },
    "2378": {
      "fn": "SoulboundCore.issueWithSignature",
      "offset": [
        3050,
        3102
      ],
      "op": "ADD",
      "path": "38"
    },
    "2379": {
      "op": "MSTORE"
    },
    "2380": {
      "op": "PUSH1",
      "value": "0x15"
    },
    "2382": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "2384": {
      "op": "DUP3"
    },
    "2385": {
      "op": "ADD"
    },
    "2386": {
      "op": "MSTORE"
    },
    "2387": {
      "op": "PUSH21",
      "value": "0x26B4B73A103A37903D32B9379030B2323932B9B997"
    },
    "2409": {
      "op": "PUSH1",
      "value": "0x59"
    },
    "2411": {
      "op": "SHL"
    },
    "2412": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "2414": {
      "op": "DUP3"
    },
    "2415": {
      "op": "ADD"
    },
    "2416": {
      "op": "MSTORE"
    },
    "2417": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "2419": {
      "op": "ADD"
    },
    "2420": {
      "fn": "SoulboundCore.issueWithSignature",
      "offset": [
        3050,
        3102
      ],
      "op": "PUSH2",
      "path": "38",
      "value": "0x422"
    },
    "2423": {
      "op": "JUMP"
    },
    "2424": {
      "fn": "SoulboundCore.issueWithSignature",
      "offset": [
        3050,
        3102
      ],
      "op": "JUMPDEST",
      "path": "38"
    },
    "2425": {
      "fn": "SoulboundCore.issueWithSignature",
      "offset": [
        3337,
        3340
      ],
      "op": "DUP3",
      "path": "38",
      "statement": 27
    },
    "2426": {
      "fn": "SoulboundCore.issueWithSignature",
      "offset": [
        3337,
        3347
      ],
      "op": "MLOAD",
      "path": "38"
    },
    "2427": {
      "fn": "SoulboundCore.issueWithSignature",
      "offset": [
        3351,
        3353
      ],
      "op": "PUSH1",
      "path": "38",
      "value": "0x41"
    },
    "2429": {
      "branch": 84,
      "fn": "SoulboundCore.issueWithSignature",
      "offset": [
        3337,
        3353
      ],
      "op": "EQ",
      "path": "38"
    },
    "2430": {
      "fn": "SoulboundCore.issueWithSignature",
      "offset": [
        3329,
        3382
      ],
      "op": "PUSH2",
      "path": "38",
      "value": "0x9C4"
    },
    "2433": {
      "branch": 84,
      "fn": "SoulboundCore.issueWithSignature",
      "offset": [
        3329,
        3382
      ],
      "op": "JUMPI",
      "path": "38"
    },
    "2434": {
      "fn": "SoulboundCore.issueWithSignature",
      "offset": [
        3329,
        3382
      ],
      "op": "PUSH1",
      "path": "38",
      "value": "0x40"
    },
    "2436": {
      "fn": "SoulboundCore.issueWithSignature",
      "offset": [
        3329,
        3382
      ],
      "op": "MLOAD",
      "path": "38"
    },
    "2437": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "2441": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "2443": {
      "op": "SHL"
    },
    "2444": {
      "fn": "SoulboundCore.issueWithSignature",
      "offset": [
        3329,
        3382
      ],
      "op": "DUP2",
      "path": "38"
    },
    "2445": {
      "fn": "SoulboundCore.issueWithSignature",
      "offset": [
        3329,
        3382
      ],
      "op": "MSTORE",
      "path": "38"
    },
    "2446": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2448": {
      "fn": "SoulboundCore.issueWithSignature",
      "offset": [
        3329,
        3382
      ],
      "op": "PUSH1",
      "path": "38",
      "value": "0x4"
    },
    "2450": {
      "fn": "SoulboundCore.issueWithSignature",
      "offset": [
        3329,
        3382
      ],
      "op": "DUP3",
      "path": "38"
    },
    "2451": {
      "fn": "SoulboundCore.issueWithSignature",
      "offset": [
        3329,
        3382
      ],
      "op": "ADD",
      "path": "38"
    },
    "2452": {
      "op": "MSTORE"
    },
    "2453": {
      "op": "PUSH1",
      "value": "0x18"
    },
    "2455": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "2457": {
      "op": "DUP3"
    },
    "2458": {
      "op": "ADD"
    },
    "2459": {
      "op": "MSTORE"
    },
    "2460": {
      "op": "PUSH24",
      "value": "0x92DCECC2D8D2C840E6D2CEDCC2E8EAE4CA40D8CADCCEE8D"
    },
    "2485": {
      "op": "PUSH1",
      "value": "0x43"
    },
    "2487": {
      "op": "SHL"
    },
    "2488": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "2490": {
      "op": "DUP3"
    },
    "2491": {
      "op": "ADD"
    },
    "2492": {
      "op": "MSTORE"
    },
    "2493": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "2495": {
      "op": "ADD"
    },
    "2496": {
      "fn": "SoulboundCore.issueWithSignature",
      "offset": [
        3329,
        3382
      ],
      "op": "PUSH2",
      "path": "38",
      "value": "0x422"
    },
    "2499": {
      "op": "JUMP"
    },
    "2500": {
      "fn": "SoulboundCore.issueWithSignature",
      "offset": [
        3329,
        3382
      ],
      "op": "JUMPDEST",
      "path": "38"
    },
    "2501": {
      "fn": "SoulboundCore.issueWithSignature",
      "offset": [
        3509,
        3535
      ],
      "op": "PUSH2",
      "path": "38",
      "statement": 28,
      "value": "0x9CE"
    },
    "2504": {
      "fn": "SoulboundCore.issueWithSignature",
      "offset": [
        3525,
        3529
      ],
      "op": "DUP5",
      "path": "38"
    },
    "2505": {
      "fn": "SoulboundCore.issueWithSignature",
      "offset": [
        3531,
        3534
      ],
      "op": "DUP5",
      "path": "38"
    },
    "2506": {
      "fn": "SoulboundCore.issueWithSignature",
      "offset": [
        3509,
        3524
      ],
      "op": "PUSH2",
      "path": "38",
      "value": "0xA5F"
    },
    "2509": {
      "fn": "SoulboundCore.issueWithSignature",
      "jump": "i",
      "offset": [
        3509,
        3535
      ],
      "op": "JUMP",
      "path": "38"
    },
    "2510": {
      "branch": 85,
      "fn": "SoulboundCore.issueWithSignature",
      "offset": [
        3509,
        3535
      ],
      "op": "JUMPDEST",
      "path": "38"
    },
    "2511": {
      "fn": "SoulboundCore.issueWithSignature",
      "offset": [
        3501,
        3565
      ],
      "op": "PUSH2",
      "path": "38",
      "value": "0xA16"
    },
    "2514": {
      "branch": 85,
      "fn": "SoulboundCore.issueWithSignature",
      "offset": [
        3501,
        3565
      ],
      "op": "JUMPI",
      "path": "38"
    },
    "2515": {
      "fn": "SoulboundCore.issueWithSignature",
      "offset": [
        3501,
        3565
      ],
      "op": "PUSH1",
      "path": "38",
      "value": "0x40"
    },
    "2517": {
      "fn": "SoulboundCore.issueWithSignature",
      "offset": [
        3501,
        3565
      ],
      "op": "MLOAD",
      "path": "38"
    },
    "2518": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "2522": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "2524": {
      "op": "SHL"
    },
    "2525": {
      "fn": "SoulboundCore.issueWithSignature",
      "offset": [
        3501,
        3565
      ],
      "op": "DUP2",
      "path": "38"
    },
    "2526": {
      "fn": "SoulboundCore.issueWithSignature",
      "offset": [
        3501,
        3565
      ],
      "op": "MSTORE",
      "path": "38"
    },
    "2527": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2529": {
      "fn": "SoulboundCore.issueWithSignature",
      "offset": [
        3501,
        3565
      ],
      "op": "PUSH1",
      "path": "38",
      "value": "0x4"
    },
    "2531": {
      "fn": "SoulboundCore.issueWithSignature",
      "offset": [
        3501,
        3565
      ],
      "op": "DUP3",
      "path": "38"
    },
    "2532": {
      "fn": "SoulboundCore.issueWithSignature",
      "offset": [
        3501,
        3565
      ],
      "op": "ADD",
      "path": "38"
    },
    "2533": {
      "op": "MSTORE"
    },
    "2534": {
      "op": "PUSH1",
      "value": "0x19"
    },
    "2536": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "2538": {
      "op": "DUP3"
    },
    "2539": {
      "op": "ADD"
    },
    "2540": {
      "op": "MSTORE"
    },
    "2541": {
      "op": "PUSH25",
      "value": "0x2430B9B4103737BA1039B4B3B732B210313C9037BBB732B917"
    },
    "2567": {
      "op": "PUSH1",
      "value": "0x39"
    },
    "2569": {
      "op": "SHL"
    },
    "2570": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "2572": {
      "op": "DUP3"
    },
    "2573": {
      "op": "ADD"
    },
    "2574": {
      "op": "MSTORE"
    },
    "2575": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "2577": {
      "op": "ADD"
    },
    "2578": {
      "fn": "SoulboundCore.issueWithSignature",
      "offset": [
        3501,
        3565
      ],
      "op": "PUSH2",
      "path": "38",
      "value": "0x422"
    },
    "2581": {
      "op": "JUMP"
    },
    "2582": {
      "fn": "SoulboundCore.issueWithSignature",
      "offset": [
        3501,
        3565
      ],
      "op": "JUMPDEST",
      "path": "38"
    },
    "2583": {
      "fn": "SoulboundCore.issueWithSignature",
      "offset": [
        3664,
        3694
      ],
      "op": "PUSH2",
      "path": "38",
      "statement": 29,
      "value": "0xA21"
    },
    "2586": {
      "fn": "SoulboundCore.issueWithSignature",
      "offset": [
        3670,
        3674
      ],
      "op": "DUP6",
      "path": "38"
    },
    "2587": {
      "fn": "SoulboundCore.issueWithSignature",
      "offset": [
        3676,
        3683
      ],
      "op": "DUP4",
      "path": "38"
    },
    "2588": {
      "fn": "SoulboundCore.issueWithSignature",
      "offset": [
        3685,
        3693
      ],
      "op": "DUP4",
      "path": "38"
    },
    "2589": {
      "fn": "SoulboundCore.issueWithSignature",
      "offset": [
        3664,
        3669
      ],
      "op": "PUSH2",
      "path": "38",
      "value": "0xFEB"
    },
    "2592": {
      "fn": "SoulboundCore.issueWithSignature",
      "jump": "i",
      "offset": [
        3664,
        3694
      ],
      "op": "JUMP",
      "path": "38"
    },
    "2593": {
      "fn": "SoulboundCore.issueWithSignature",
      "offset": [
        3664,
        3694
      ],
      "op": "JUMPDEST",
      "path": "38"
    },
    "2594": {
      "op": "POP"
    },
    "2595": {
      "fn": "SoulboundCore.issueWithSignature",
      "offset": [
        3761,
        3794
      ],
      "op": "PUSH1",
      "path": "38",
      "statement": 30,
      "value": "0x40"
    },
    "2597": {
      "fn": "SoulboundCore.issueWithSignature",
      "offset": [
        3761,
        3794
      ],
      "op": "MLOAD",
      "path": "38"
    },
    "2598": {
      "fn": "SoulboundCore.issueWithSignature",
      "offset": [
        3786,
        3793
      ],
      "op": "DUP3",
      "path": "38"
    },
    "2599": {
      "fn": "SoulboundCore.issueWithSignature",
      "offset": [
        3786,
        3793
      ],
      "op": "SWAP1",
      "path": "38"
    },
    "2600": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2602": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2604": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2606": {
      "op": "SHL"
    },
    "2607": {
      "op": "SUB"
    },
    "2608": {
      "fn": "SoulboundCore.issueWithSignature",
      "offset": [
        3761,
        3794
      ],
      "op": "DUP8",
      "path": "38"
    },
    "2609": {
      "fn": "SoulboundCore.issueWithSignature",
      "offset": [
        3761,
        3794
      ],
      "op": "AND",
      "path": "38"
    },
    "2610": {
      "fn": "SoulboundCore.issueWithSignature",
      "offset": [
        3761,
        3794
      ],
      "op": "SWAP1",
      "path": "38"
    },
    "2611": {
      "fn": "SoulboundCore.issueWithSignature",
      "offset": [
        3761,
        3794
      ],
      "op": "PUSH32",
      "path": "38",
      "value": "0x79AF0E59B31823DD289CEEBABC4D63D25F35926B8548E3A084A500C9D4E18556"
    },
    "2644": {
      "fn": "SoulboundCore.issueWithSignature",
      "offset": [
        3761,
        3794
      ],
      "op": "SWAP1",
      "path": "38"
    },
    "2645": {
      "fn": "SoulboundCore.issueWithSignature",
      "offset": [
        3761,
        3794
      ],
      "op": "PUSH1",
      "path": "38",
      "value": "0x0"
    },
    "2647": {
      "fn": "SoulboundCore.issueWithSignature",
      "offset": [
        3761,
        3794
      ],
      "op": "SWAP1",
      "path": "38"
    },
    "2648": {
      "fn": "SoulboundCore.issueWithSignature",
      "offset": [
        3761,
        3794
      ],
      "op": "LOG3",
      "path": "38"
    },
    "2649": {
      "fn": "SoulboundCore.issueWithSignature",
      "offset": [
        2807,
        3801
      ],
      "op": "POP",
      "path": "38"
    },
    "2650": {
      "fn": "SoulboundCore.issueWithSignature",
      "offset": [
        2807,
        3801
      ],
      "op": "POP",
      "path": "38"
    },
    "2651": {
      "fn": "SoulboundCore.issueWithSignature",
      "offset": [
        2807,
        3801
      ],
      "op": "POP",
      "path": "38"
    },
    "2652": {
      "fn": "SoulboundCore.issueWithSignature",
      "offset": [
        2807,
        3801
      ],
      "op": "POP",
      "path": "38"
    },
    "2653": {
      "fn": "SoulboundCore.issueWithSignature",
      "offset": [
        2807,
        3801
      ],
      "op": "POP",
      "path": "38"
    },
    "2654": {
      "fn": "SoulboundCore.issueWithSignature",
      "jump": "o",
      "offset": [
        2807,
        3801
      ],
      "op": "JUMP",
      "path": "38"
    },
    "2655": {
      "fn": "Allowlist.verifySignature",
      "offset": [
        2495,
        2645
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "2656": {
      "fn": "Allowlist.verifySignature",
      "offset": [
        2584,
        2588
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x0"
    },
    "2658": {
      "fn": "Allowlist.verifySignature",
      "offset": [
        2611,
        2638
      ],
      "op": "PUSH2",
      "path": "14",
      "statement": 31,
      "value": "0xA6B"
    },
    "2661": {
      "fn": "Allowlist.verifySignature",
      "offset": [
        2628,
        2632
      ],
      "op": "DUP4",
      "path": "14"
    },
    "2662": {
      "fn": "Allowlist.verifySignature",
      "offset": [
        2634,
        2637
      ],
      "op": "DUP4",
      "path": "14"
    },
    "2663": {
      "fn": "Allowlist.verifySignature",
      "offset": [
        2611,
        2627
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x1002"
    },
    "2666": {
      "fn": "Allowlist.verifySignature",
      "jump": "i",
      "offset": [
        2611,
        2638
      ],
      "op": "JUMP",
      "path": "14"
    },
    "2667": {
      "fn": "Allowlist.verifySignature",
      "offset": [
        2611,
        2638
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "2668": {
      "fn": "Allowlist.verifySignature",
      "offset": [
        2604,
        2638
      ],
      "op": "SWAP4",
      "path": "14"
    },
    "2669": {
      "fn": "Allowlist.verifySignature",
      "offset": [
        2495,
        2645
      ],
      "op": "SWAP3",
      "path": "14"
    },
    "2670": {
      "op": "POP"
    },
    "2671": {
      "op": "POP"
    },
    "2672": {
      "op": "POP"
    },
    "2673": {
      "fn": "Allowlist.verifySignature",
      "jump": "o",
      "offset": [
        2495,
        2645
      ],
      "op": "JUMP",
      "path": "14"
    },
    "2674": {
      "fn": "Allowlist.verifySigner",
      "offset": [
        4852,
        5120
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "2675": {
      "fn": "Allowlist.splitSignature",
      "offset": [
        6067,
        6069
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x20"
    },
    "2677": {
      "fn": "Allowlist.splitSignature",
      "offset": [
        6058,
        6070
      ],
      "op": "DUP2",
      "path": "14"
    },
    "2678": {
      "fn": "Allowlist.splitSignature",
      "offset": [
        6058,
        6070
      ],
      "op": "DUP2",
      "path": "14"
    },
    "2679": {
      "fn": "Allowlist.splitSignature",
      "offset": [
        6058,
        6070
      ],
      "op": "ADD",
      "path": "14"
    },
    "2680": {
      "fn": "Allowlist.splitSignature",
      "offset": [
        6052,
        6071
      ],
      "op": "MLOAD",
      "path": "14"
    },
    "2681": {
      "fn": "Allowlist.splitSignature",
      "offset": [
        6142,
        6144
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x40"
    },
    "2683": {
      "fn": "Allowlist.splitSignature",
      "offset": [
        6133,
        6145
      ],
      "op": "DUP1",
      "path": "14"
    },
    "2684": {
      "fn": "Allowlist.splitSignature",
      "offset": [
        6133,
        6145
      ],
      "op": "DUP5",
      "path": "14"
    },
    "2685": {
      "fn": "Allowlist.splitSignature",
      "offset": [
        6133,
        6145
      ],
      "op": "ADD",
      "path": "14"
    },
    "2686": {
      "fn": "Allowlist.splitSignature",
      "offset": [
        6127,
        6146
      ],
      "op": "MLOAD",
      "path": "14"
    },
    "2687": {
      "fn": "Allowlist.splitSignature",
      "offset": [
        6254,
        6256
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x60"
    },
    "2689": {
      "fn": "Allowlist.splitSignature",
      "offset": [
        6245,
        6257
      ],
      "op": "DUP1",
      "path": "14"
    },
    "2690": {
      "fn": "Allowlist.splitSignature",
      "offset": [
        6245,
        6257
      ],
      "op": "DUP7",
      "path": "14"
    },
    "2691": {
      "fn": "Allowlist.splitSignature",
      "offset": [
        6245,
        6257
      ],
      "op": "ADD",
      "path": "14"
    },
    "2692": {
      "fn": "Allowlist.splitSignature",
      "offset": [
        6239,
        6258
      ],
      "op": "MLOAD",
      "path": "14"
    },
    "2693": {
      "fn": "Allowlist.verifySigner",
      "offset": [
        5087,
        5112
      ],
      "op": "DUP4",
      "path": "14",
      "statement": 32
    },
    "2694": {
      "fn": "Allowlist.verifySigner",
      "offset": [
        5087,
        5112
      ],
      "op": "MLOAD",
      "path": "14"
    },
    "2695": {
      "fn": "Allowlist.verifySigner",
      "offset": [
        4982,
        4986
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x0"
    },
    "2697": {
      "fn": "Allowlist.verifySigner",
      "offset": [
        5087,
        5112
      ],
      "op": "DUP1",
      "path": "14"
    },
    "2698": {
      "fn": "Allowlist.verifySigner",
      "offset": [
        5087,
        5112
      ],
      "op": "DUP3",
      "path": "14"
    },
    "2699": {
      "fn": "Allowlist.verifySigner",
      "offset": [
        5087,
        5112
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "2700": {
      "fn": "Allowlist.verifySigner",
      "offset": [
        5087,
        5112
      ],
      "op": "DUP2",
      "path": "14"
    },
    "2701": {
      "fn": "Allowlist.verifySigner",
      "offset": [
        5087,
        5112
      ],
      "op": "DUP9",
      "path": "14"
    },
    "2702": {
      "fn": "Allowlist.verifySigner",
      "offset": [
        5087,
        5112
      ],
      "op": "ADD",
      "path": "14"
    },
    "2703": {
      "fn": "Allowlist.verifySigner",
      "offset": [
        5087,
        5112
      ],
      "op": "DUP1",
      "path": "14"
    },
    "2704": {
      "fn": "Allowlist.verifySigner",
      "offset": [
        5087,
        5112
      ],
      "op": "DUP8",
      "path": "14"
    },
    "2705": {
      "fn": "Allowlist.verifySigner",
      "offset": [
        5087,
        5112
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "2706": {
      "op": "DUP11"
    },
    "2707": {
      "op": "SWAP1"
    },
    "2708": {
      "op": "MSTORE"
    },
    "2709": {
      "fn": "Allowlist.splitSignature",
      "offset": [
        6231,
        6259
      ],
      "op": "SWAP2",
      "path": "14"
    },
    "2710": {
      "fn": "Allowlist.splitSignature",
      "offset": [
        6231,
        6259
      ],
      "op": "DUP3",
      "path": "14"
    },
    "2711": {
      "fn": "Allowlist.splitSignature",
      "offset": [
        6231,
        6259
      ],
      "op": "BYTE",
      "path": "14"
    },
    "2712": {
      "op": "DUP2"
    },
    "2713": {
      "op": "DUP7"
    },
    "2714": {
      "op": "ADD"
    },
    "2715": {
      "op": "DUP2"
    },
    "2716": {
      "op": "SWAP1"
    },
    "2717": {
      "op": "MSTORE"
    },
    "2718": {
      "op": "SWAP3"
    },
    "2719": {
      "op": "DUP2"
    },
    "2720": {
      "op": "ADD"
    },
    "2721": {
      "op": "DUP7"
    },
    "2722": {
      "op": "SWAP1"
    },
    "2723": {
      "op": "MSTORE"
    },
    "2724": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "2726": {
      "op": "DUP2"
    },
    "2727": {
      "op": "ADD"
    },
    "2728": {
      "op": "DUP5"
    },
    "2729": {
      "op": "SWAP1"
    },
    "2730": {
      "op": "MSTORE"
    },
    "2731": {
      "fn": "Allowlist.verifySigner",
      "offset": [
        5087,
        5112
      ],
      "op": "SWAP4",
      "path": "14"
    },
    "2732": {
      "fn": "Allowlist.verifySigner",
      "offset": [
        5087,
        5112
      ],
      "op": "MLOAD",
      "path": "14"
    },
    "2733": {
      "fn": "Allowlist.verifySigner",
      "offset": [
        4982,
        4986
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "2734": {
      "fn": "Allowlist.verifySigner",
      "offset": [
        4982,
        4986
      ],
      "op": "SWAP6",
      "path": "14"
    },
    "2735": {
      "fn": "Allowlist.splitSignature",
      "offset": [
        6127,
        6146
      ],
      "op": "SWAP3",
      "path": "14"
    },
    "2736": {
      "fn": "Allowlist.splitSignature",
      "offset": [
        6127,
        6146
      ],
      "op": "SWAP4",
      "path": "14"
    },
    "2737": {
      "fn": "Allowlist.splitSignature",
      "offset": [
        6231,
        6259
      ],
      "op": "SWAP2",
      "path": "14"
    },
    "2738": {
      "fn": "Allowlist.splitSignature",
      "offset": [
        6231,
        6259
      ],
      "op": "SWAP3",
      "path": "14"
    },
    "2739": {
      "fn": "Allowlist.verifySigner",
      "offset": [
        5087,
        5112
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x1"
    },
    "2741": {
      "fn": "Allowlist.verifySigner",
      "offset": [
        5087,
        5112
      ],
      "op": "SWAP3",
      "path": "14"
    },
    "2742": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2744": {
      "op": "DUP1"
    },
    "2745": {
      "op": "DUP3"
    },
    "2746": {
      "op": "ADD"
    },
    "2747": {
      "op": "SWAP4"
    },
    "2748": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "2750": {
      "op": "NOT"
    },
    "2751": {
      "fn": "Allowlist.verifySigner",
      "offset": [
        5087,
        5112
      ],
      "op": "DUP2",
      "path": "14"
    },
    "2752": {
      "fn": "Allowlist.verifySigner",
      "offset": [
        5087,
        5112
      ],
      "op": "ADD",
      "path": "14"
    },
    "2753": {
      "fn": "Allowlist.verifySigner",
      "offset": [
        5087,
        5112
      ],
      "op": "SWAP3",
      "path": "14"
    },
    "2754": {
      "fn": "Allowlist.verifySigner",
      "offset": [
        5087,
        5112
      ],
      "op": "DUP2",
      "path": "14"
    },
    "2755": {
      "fn": "Allowlist.verifySigner",
      "offset": [
        5087,
        5112
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "2756": {
      "fn": "Allowlist.verifySigner",
      "offset": [
        5087,
        5112
      ],
      "op": "SUB",
      "path": "14"
    },
    "2757": {
      "fn": "Allowlist.verifySigner",
      "offset": [
        5087,
        5112
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "2758": {
      "fn": "Allowlist.verifySigner",
      "offset": [
        5087,
        5112
      ],
      "op": "SWAP2",
      "path": "14"
    },
    "2759": {
      "fn": "Allowlist.verifySigner",
      "offset": [
        5087,
        5112
      ],
      "op": "ADD",
      "path": "14"
    },
    "2760": {
      "fn": "Allowlist.verifySigner",
      "offset": [
        5087,
        5112
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "2761": {
      "fn": "Allowlist.verifySigner",
      "offset": [
        5087,
        5112
      ],
      "op": "DUP6",
      "path": "14"
    },
    "2762": {
      "fn": "Allowlist.verifySigner",
      "offset": [
        5087,
        5112
      ],
      "op": "GAS",
      "path": "14"
    },
    "2763": {
      "fn": "Allowlist.verifySigner",
      "offset": [
        5087,
        5112
      ],
      "op": "STATICCALL",
      "path": "14"
    },
    "2764": {
      "fn": "Allowlist.verifySigner",
      "offset": [
        5087,
        5112
      ],
      "op": "ISZERO",
      "path": "14"
    },
    "2765": {
      "fn": "Allowlist.verifySigner",
      "offset": [
        5087,
        5112
      ],
      "op": "DUP1",
      "path": "14"
    },
    "2766": {
      "fn": "Allowlist.verifySigner",
      "offset": [
        5087,
        5112
      ],
      "op": "ISZERO",
      "path": "14"
    },
    "2767": {
      "fn": "Allowlist.verifySigner",
      "offset": [
        5087,
        5112
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0xADC"
    },
    "2770": {
      "fn": "Allowlist.verifySigner",
      "offset": [
        5087,
        5112
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "2771": {
      "fn": "Allowlist.verifySigner",
      "offset": [
        5087,
        5112
      ],
      "op": "RETURNDATASIZE",
      "path": "14"
    },
    "2772": {
      "fn": "Allowlist.verifySigner",
      "offset": [
        5087,
        5112
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x0"
    },
    "2774": {
      "fn": "Allowlist.verifySigner",
      "offset": [
        5087,
        5112
      ],
      "op": "DUP1",
      "path": "14"
    },
    "2775": {
      "fn": "Allowlist.verifySigner",
      "offset": [
        5087,
        5112
      ],
      "op": "RETURNDATACOPY",
      "path": "14"
    },
    "2776": {
      "fn": "Allowlist.verifySigner",
      "offset": [
        5087,
        5112
      ],
      "op": "RETURNDATASIZE",
      "path": "14"
    },
    "2777": {
      "fn": "Allowlist.verifySigner",
      "offset": [
        5087,
        5112
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x0"
    },
    "2779": {
      "fn": "Allowlist.verifySigner",
      "offset": [
        5087,
        5112
      ],
      "op": "REVERT",
      "path": "14"
    },
    "2780": {
      "fn": "Allowlist.verifySigner",
      "offset": [
        5087,
        5112
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "2781": {
      "fn": "Allowlist.verifySigner",
      "offset": [
        5087,
        5112
      ],
      "op": "POP",
      "path": "14"
    },
    "2782": {
      "fn": "Allowlist.verifySigner",
      "offset": [
        5087,
        5112
      ],
      "op": "POP",
      "path": "14"
    },
    "2783": {
      "fn": "Allowlist.verifySigner",
      "offset": [
        5087,
        5112
      ],
      "op": "POP",
      "path": "14"
    },
    "2784": {
      "fn": "Allowlist.verifySigner",
      "offset": [
        5087,
        5112
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x20"
    },
    "2786": {
      "fn": "Allowlist.verifySigner",
      "offset": [
        5087,
        5112
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x40"
    },
    "2788": {
      "fn": "Allowlist.verifySigner",
      "offset": [
        5087,
        5112
      ],
      "op": "MLOAD",
      "path": "14"
    },
    "2789": {
      "fn": "Allowlist.verifySigner",
      "offset": [
        5087,
        5112
      ],
      "op": "SUB",
      "path": "14"
    },
    "2790": {
      "fn": "Allowlist.verifySigner",
      "offset": [
        5087,
        5112
      ],
      "op": "MLOAD",
      "path": "14"
    },
    "2791": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2793": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2795": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2797": {
      "op": "SHL"
    },
    "2798": {
      "op": "SUB"
    },
    "2799": {
      "fn": "Allowlist.verifySigner",
      "offset": [
        5076,
        5112
      ],
      "op": "AND",
      "path": "14"
    },
    "2800": {
      "fn": "Allowlist.verifySigner",
      "offset": [
        5076,
        5083
      ],
      "op": "DUP8",
      "path": "14"
    },
    "2801": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2803": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2805": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2807": {
      "op": "SHL"
    },
    "2808": {
      "op": "SUB"
    },
    "2809": {
      "fn": "Allowlist.verifySigner",
      "offset": [
        5076,
        5112
      ],
      "op": "AND",
      "path": "14"
    },
    "2810": {
      "fn": "Allowlist.verifySigner",
      "offset": [
        5076,
        5112
      ],
      "op": "EQ",
      "path": "14"
    },
    "2811": {
      "fn": "Allowlist.verifySigner",
      "offset": [
        5068,
        5113
      ],
      "op": "SWAP4",
      "path": "14"
    },
    "2812": {
      "fn": "Allowlist.verifySigner",
      "offset": [
        5068,
        5113
      ],
      "op": "POP",
      "path": "14"
    },
    "2813": {
      "fn": "Allowlist.verifySigner",
      "offset": [
        5068,
        5113
      ],
      "op": "POP",
      "path": "14"
    },
    "2814": {
      "fn": "Allowlist.verifySigner",
      "offset": [
        5068,
        5113
      ],
      "op": "POP",
      "path": "14"
    },
    "2815": {
      "fn": "Allowlist.verifySigner",
      "offset": [
        5068,
        5113
      ],
      "op": "POP",
      "path": "14"
    },
    "2816": {
      "fn": "Allowlist.verifySigner",
      "offset": [
        4852,
        5120
      ],
      "op": "SWAP4",
      "path": "14"
    },
    "2817": {
      "fn": "Allowlist.verifySigner",
      "offset": [
        4852,
        5120
      ],
      "op": "SWAP3",
      "path": "14"
    },
    "2818": {
      "fn": "Allowlist.verifySigner",
      "offset": [
        4852,
        5120
      ],
      "op": "POP",
      "path": "14"
    },
    "2819": {
      "fn": "Allowlist.verifySigner",
      "offset": [
        4852,
        5120
      ],
      "op": "POP",
      "path": "14"
    },
    "2820": {
      "fn": "Allowlist.verifySigner",
      "offset": [
        4852,
        5120
      ],
      "op": "POP",
      "path": "14"
    },
    "2821": {
      "fn": "Allowlist.verifySigner",
      "jump": "o",
      "offset": [
        4852,
        5120
      ],
      "op": "JUMP",
      "path": "14"
    },
    "2822": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1918,
        2116
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2823": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x5"
    },
    "2825": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "2826": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2828": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2830": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2832": {
      "op": "SHL"
    },
    "2833": {
      "op": "SUB"
    },
    "2834": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "AND",
      "path": "0"
    },
    "2835": {
      "fn": "Context._msgSender",
      "offset": [
        719,
        729
      ],
      "op": "CALLER",
      "path": "5"
    },
    "2836": {
      "offset": [
        1248,
        1271
      ],
      "op": "EQ",
      "path": "0"
    },
    "2837": {
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xB30"
    },
    "2840": {
      "offset": [
        1240,
        1308
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "2841": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "2843": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "2844": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "2848": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "2850": {
      "op": "SHL"
    },
    "2851": {
      "offset": [
        1240,
        1308
      ],
      "op": "DUP2",
      "path": "0"
    },
    "2852": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "2853": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "2855": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "ADD",
      "path": "0"
    },
    "2856": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x422"
    },
    "2859": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2860": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1812"
    },
    "2863": {
      "fn": "Context._msgSender",
      "jump": "i",
      "offset": [
        1240,
        1308
      ],
      "op": "JUMP",
      "path": "0"
    },
    "2864": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2865": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2867": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2869": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2871": {
      "op": "SHL"
    },
    "2872": {
      "op": "SUB"
    },
    "2873": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2006,
        2028
      ],
      "op": "DUP2",
      "path": "0",
      "statement": 33
    },
    "2874": {
      "branch": 93,
      "fn": "Ownable.transferOwnership",
      "offset": [
        2006,
        2028
      ],
      "op": "AND",
      "path": "0"
    },
    "2875": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1998,
        2071
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xB95"
    },
    "2878": {
      "branch": 93,
      "fn": "Ownable.transferOwnership",
      "offset": [
        1998,
        2071
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "2879": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1998,
        2071
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "2881": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1998,
        2071
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "2882": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "2886": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "2888": {
      "op": "SHL"
    },
    "2889": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1998,
        2071
      ],
      "op": "DUP2",
      "path": "0"
    },
    "2890": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1998,
        2071
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "2891": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2893": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1998,
        2071
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "2895": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1998,
        2071
      ],
      "op": "DUP3",
      "path": "0"
    },
    "2896": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1998,
        2071
      ],
      "op": "ADD",
      "path": "0"
    },
    "2897": {
      "op": "MSTORE"
    },
    "2898": {
      "op": "PUSH1",
      "value": "0x26"
    },
    "2900": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "2902": {
      "op": "DUP3"
    },
    "2903": {
      "op": "ADD"
    },
    "2904": {
      "op": "MSTORE"
    },
    "2905": {
      "op": "PUSH32",
      "value": "0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061"
    },
    "2938": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "2940": {
      "op": "DUP3"
    },
    "2941": {
      "op": "ADD"
    },
    "2942": {
      "op": "MSTORE"
    },
    "2943": {
      "op": "PUSH6",
      "value": "0x646472657373"
    },
    "2950": {
      "op": "PUSH1",
      "value": "0xD0"
    },
    "2952": {
      "op": "SHL"
    },
    "2953": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "2955": {
      "op": "DUP3"
    },
    "2956": {
      "op": "ADD"
    },
    "2957": {
      "op": "MSTORE"
    },
    "2958": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "2960": {
      "op": "ADD"
    },
    "2961": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1998,
        2071
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x422"
    },
    "2964": {
      "op": "JUMP"
    },
    "2965": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1998,
        2071
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2966": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2081,
        2109
      ],
      "op": "PUSH2",
      "path": "0",
      "statement": 34,
      "value": "0x600"
    },
    "2969": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2100,
        2108
      ],
      "op": "DUP2",
      "path": "0"
    },
    "2970": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2081,
        2099
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xF47"
    },
    "2973": {
      "fn": "Ownable.transferOwnership",
      "jump": "i",
      "offset": [
        2081,
        2109
      ],
      "op": "JUMP",
      "path": "0"
    },
    "2974": {
      "fn": "Soulbound.issuerOf",
      "offset": [
        4302,
        4822
      ],
      "op": "JUMPDEST",
      "path": "37"
    },
    "2975": {
      "fn": "Soulbound.issuerOf",
      "offset": [
        4396,
        4403
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0x0"
    },
    "2977": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2979": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2981": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2983": {
      "op": "SHL"
    },
    "2984": {
      "op": "SUB"
    },
    "2985": {
      "fn": "Soulbound.issuerOf",
      "offset": [
        4479,
        4496
      ],
      "op": "DUP4",
      "path": "37",
      "statement": 35
    },
    "2986": {
      "branch": 95,
      "fn": "Soulbound.issuerOf",
      "offset": [
        4479,
        4496
      ],
      "op": "AND",
      "path": "37"
    },
    "2987": {
      "fn": "Soulbound.issuerOf",
      "offset": [
        4471,
        4524
      ],
      "op": "PUSH2",
      "path": "37",
      "value": "0xBF6"
    },
    "2990": {
      "branch": 95,
      "fn": "Soulbound.issuerOf",
      "offset": [
        4471,
        4524
      ],
      "op": "JUMPI",
      "path": "37"
    },
    "2991": {
      "fn": "Soulbound.issuerOf",
      "offset": [
        4471,
        4524
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0x40"
    },
    "2993": {
      "fn": "Soulbound.issuerOf",
      "offset": [
        4471,
        4524
      ],
      "op": "MLOAD",
      "path": "37"
    },
    "2994": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "2998": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "3000": {
      "op": "SHL"
    },
    "3001": {
      "fn": "Soulbound.issuerOf",
      "offset": [
        4471,
        4524
      ],
      "op": "DUP2",
      "path": "37"
    },
    "3002": {
      "fn": "Soulbound.issuerOf",
      "offset": [
        4471,
        4524
      ],
      "op": "MSTORE",
      "path": "37"
    },
    "3003": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3005": {
      "fn": "Soulbound.issuerOf",
      "offset": [
        4471,
        4524
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0x4"
    },
    "3007": {
      "fn": "Soulbound.issuerOf",
      "offset": [
        4471,
        4524
      ],
      "op": "DUP3",
      "path": "37"
    },
    "3008": {
      "fn": "Soulbound.issuerOf",
      "offset": [
        4471,
        4524
      ],
      "op": "ADD",
      "path": "37"
    },
    "3009": {
      "op": "MSTORE"
    },
    "3010": {
      "op": "PUSH1",
      "value": "0x17"
    },
    "3012": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "3014": {
      "op": "DUP3"
    },
    "3015": {
      "op": "ADD"
    },
    "3016": {
      "op": "MSTORE"
    },
    "3017": {
      "op": "PUSH32",
      "value": "0x517565727920666F72207A65726F20616464726573732E000000000000000000"
    },
    "3050": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "3052": {
      "op": "DUP3"
    },
    "3053": {
      "op": "ADD"
    },
    "3054": {
      "op": "MSTORE"
    },
    "3055": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "3057": {
      "op": "ADD"
    },
    "3058": {
      "fn": "Soulbound.issuerOf",
      "offset": [
        4471,
        4524
      ],
      "op": "PUSH2",
      "path": "37",
      "value": "0x422"
    },
    "3061": {
      "op": "JUMP"
    },
    "3062": {
      "fn": "Soulbound.issuerOf",
      "offset": [
        4471,
        4524
      ],
      "op": "JUMPDEST",
      "path": "37"
    },
    "3063": {
      "fn": "Soulbound.issuerOf",
      "offset": [
        4581,
        4598
      ],
      "op": "PUSH2",
      "path": "37",
      "statement": 36,
      "value": "0xBFF"
    },
    "3066": {
      "fn": "Soulbound.issuerOf",
      "offset": [
        4589,
        4597
      ],
      "op": "DUP3",
      "path": "37"
    },
    "3067": {
      "fn": "Soulbound.issuerOf",
      "offset": [
        4581,
        4588
      ],
      "op": "PUSH2",
      "path": "37",
      "value": "0xCB2"
    },
    "3070": {
      "fn": "Soulbound.issuerOf",
      "jump": "i",
      "offset": [
        4581,
        4598
      ],
      "op": "JUMP",
      "path": "37"
    },
    "3071": {
      "branch": 96,
      "fn": "Soulbound.issuerOf",
      "offset": [
        4581,
        4598
      ],
      "op": "JUMPDEST",
      "path": "37"
    },
    "3072": {
      "fn": "Soulbound.issuerOf",
      "offset": [
        4573,
        4622
      ],
      "op": "PUSH2",
      "path": "37",
      "value": "0xC41"
    },
    "3075": {
      "branch": 96,
      "fn": "Soulbound.issuerOf",
      "offset": [
        4573,
        4622
      ],
      "op": "JUMPI",
      "path": "37"
    },
    "3076": {
      "fn": "Soulbound.issuerOf",
      "offset": [
        4573,
        4622
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0x40"
    },
    "3078": {
      "fn": "Soulbound.issuerOf",
      "offset": [
        4573,
        4622
      ],
      "op": "MLOAD",
      "path": "37"
    },
    "3079": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "3083": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "3085": {
      "op": "SHL"
    },
    "3086": {
      "fn": "Soulbound.issuerOf",
      "offset": [
        4573,
        4622
      ],
      "op": "DUP2",
      "path": "37"
    },
    "3087": {
      "fn": "Soulbound.issuerOf",
      "offset": [
        4573,
        4622
      ],
      "op": "MSTORE",
      "path": "37"
    },
    "3088": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3090": {
      "fn": "Soulbound.issuerOf",
      "offset": [
        4573,
        4622
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0x4"
    },
    "3092": {
      "fn": "Soulbound.issuerOf",
      "offset": [
        4573,
        4622
      ],
      "op": "DUP3",
      "path": "37"
    },
    "3093": {
      "fn": "Soulbound.issuerOf",
      "offset": [
        4573,
        4622
      ],
      "op": "ADD",
      "path": "37"
    },
    "3094": {
      "op": "MSTORE"
    },
    "3095": {
      "op": "PUSH1",
      "value": "0x13"
    },
    "3097": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "3099": {
      "op": "DUP3"
    },
    "3100": {
      "op": "ADD"
    },
    "3101": {
      "op": "MSTORE"
    },
    "3102": {
      "op": "PUSH19",
      "value": "0x2737B716B2BC34B9BA32B73A103A37B5B2B717"
    },
    "3122": {
      "op": "PUSH1",
      "value": "0x69"
    },
    "3124": {
      "op": "SHL"
    },
    "3125": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "3127": {
      "op": "DUP3"
    },
    "3128": {
      "op": "ADD"
    },
    "3129": {
      "op": "MSTORE"
    },
    "3130": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "3132": {
      "op": "ADD"
    },
    "3133": {
      "fn": "Soulbound.issuerOf",
      "offset": [
        4573,
        4622
      ],
      "op": "PUSH2",
      "path": "37",
      "value": "0x422"
    },
    "3136": {
      "op": "JUMP"
    },
    "3137": {
      "fn": "Soulbound.issuerOf",
      "offset": [
        4573,
        4622
      ],
      "op": "JUMPDEST",
      "path": "37"
    },
    "3138": {
      "fn": "Soulbound.issuerOf",
      "offset": [
        4712,
        4715
      ],
      "op": "DUP3",
      "path": "37",
      "statement": 37
    },
    "3139": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3141": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3143": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3145": {
      "op": "SHL"
    },
    "3146": {
      "op": "SUB"
    },
    "3147": {
      "fn": "Soulbound.issuerOf",
      "offset": [
        4691,
        4715
      ],
      "op": "AND",
      "path": "37"
    },
    "3148": {
      "fn": "Soulbound.issuerOf",
      "offset": [
        4691,
        4708
      ],
      "op": "PUSH2",
      "path": "37",
      "value": "0xC54"
    },
    "3151": {
      "fn": "Soulbound.issuerOf",
      "offset": [
        4699,
        4707
      ],
      "op": "DUP4",
      "path": "37"
    },
    "3152": {
      "fn": "Soulbound.issuerOf",
      "offset": [
        4691,
        4698
      ],
      "op": "PUSH2",
      "path": "37",
      "value": "0x603"
    },
    "3155": {
      "fn": "Soulbound.issuerOf",
      "jump": "i",
      "offset": [
        4691,
        4708
      ],
      "op": "JUMP",
      "path": "37"
    },
    "3156": {
      "fn": "Soulbound.issuerOf",
      "offset": [
        4691,
        4708
      ],
      "op": "JUMPDEST",
      "path": "37"
    },
    "3157": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3159": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3161": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3163": {
      "op": "SHL"
    },
    "3164": {
      "op": "SUB"
    },
    "3165": {
      "fn": "Soulbound.issuerOf",
      "offset": [
        4691,
        4715
      ],
      "op": "AND",
      "path": "37"
    },
    "3166": {
      "branch": 97,
      "fn": "Soulbound.issuerOf",
      "offset": [
        4691,
        4715
      ],
      "op": "EQ",
      "path": "37"
    },
    "3167": {
      "fn": "Soulbound.issuerOf",
      "offset": [
        4683,
        4746
      ],
      "op": "PUSH2",
      "path": "37",
      "value": "0xCAA"
    },
    "3170": {
      "branch": 97,
      "fn": "Soulbound.issuerOf",
      "offset": [
        4683,
        4746
      ],
      "op": "JUMPI",
      "path": "37"
    },
    "3171": {
      "fn": "Soulbound.issuerOf",
      "offset": [
        4683,
        4746
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0x40"
    },
    "3173": {
      "fn": "Soulbound.issuerOf",
      "offset": [
        4683,
        4746
      ],
      "op": "MLOAD",
      "path": "37"
    },
    "3174": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "3178": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "3180": {
      "op": "SHL"
    },
    "3181": {
      "fn": "Soulbound.issuerOf",
      "offset": [
        4683,
        4746
      ],
      "op": "DUP2",
      "path": "37"
    },
    "3182": {
      "fn": "Soulbound.issuerOf",
      "offset": [
        4683,
        4746
      ],
      "op": "MSTORE",
      "path": "37"
    },
    "3183": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3185": {
      "fn": "Soulbound.issuerOf",
      "offset": [
        4683,
        4746
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0x4"
    },
    "3187": {
      "fn": "Soulbound.issuerOf",
      "offset": [
        4683,
        4746
      ],
      "op": "DUP3",
      "path": "37"
    },
    "3188": {
      "fn": "Soulbound.issuerOf",
      "offset": [
        4683,
        4746
      ],
      "op": "ADD",
      "path": "37"
    },
    "3189": {
      "op": "MSTORE"
    },
    "3190": {
      "op": "PUSH1",
      "value": "0x1A"
    },
    "3192": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "3194": {
      "op": "DUP3"
    },
    "3195": {
      "op": "ADD"
    },
    "3196": {
      "op": "MSTORE"
    },
    "3197": {
      "op": "PUSH32",
      "value": "0x546F6B656E206E6F74206F776E65642062792061646472657373000000000000"
    },
    "3230": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "3232": {
      "op": "DUP3"
    },
    "3233": {
      "op": "ADD"
    },
    "3234": {
      "op": "MSTORE"
    },
    "3235": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "3237": {
      "op": "ADD"
    },
    "3238": {
      "fn": "Soulbound.issuerOf",
      "offset": [
        4683,
        4746
      ],
      "op": "PUSH2",
      "path": "37",
      "value": "0x422"
    },
    "3241": {
      "op": "JUMP"
    },
    "3242": {
      "fn": "Soulbound.issuerOf",
      "offset": [
        4683,
        4746
      ],
      "op": "JUMPDEST",
      "path": "37"
    },
    "3243": {
      "op": "POP"
    },
    "3244": {
      "fn": "Soulbound.issuerOf",
      "offset": [
        4810,
        4814
      ],
      "op": "ADDRESS",
      "path": "37",
      "statement": 38
    },
    "3245": {
      "fn": "Soulbound.issuerOf",
      "offset": [
        4302,
        4822
      ],
      "op": "SWAP3",
      "path": "37"
    },
    "3246": {
      "fn": "Soulbound.issuerOf",
      "offset": [
        4302,
        4822
      ],
      "op": "SWAP2",
      "path": "37"
    },
    "3247": {
      "fn": "Soulbound.issuerOf",
      "offset": [
        4302,
        4822
      ],
      "op": "POP",
      "path": "37"
    },
    "3248": {
      "fn": "Soulbound.issuerOf",
      "offset": [
        4302,
        4822
      ],
      "op": "POP",
      "path": "37"
    },
    "3249": {
      "fn": "Soulbound.issuerOf",
      "jump": "o",
      "offset": [
        4302,
        4822
      ],
      "op": "JUMP",
      "path": "37"
    },
    "3250": {
      "fn": "ERC4973._exists",
      "offset": [
        5924,
        6049
      ],
      "op": "JUMPDEST",
      "path": "41"
    },
    "3251": {
      "fn": "ERC4973._exists",
      "offset": [
        5989,
        5993
      ],
      "op": "PUSH1",
      "path": "41",
      "value": "0x0"
    },
    "3253": {
      "fn": "ERC4973._exists",
      "offset": [
        6012,
        6028
      ],
      "op": "SWAP1",
      "path": "41",
      "statement": 39
    },
    "3254": {
      "fn": "ERC4973._exists",
      "offset": [
        6012,
        6028
      ],
      "op": "DUP2",
      "path": "41"
    },
    "3255": {
      "fn": "ERC4973._exists",
      "offset": [
        6012,
        6028
      ],
      "op": "MSTORE",
      "path": "41"
    },
    "3256": {
      "fn": "ERC4973._exists",
      "offset": [
        6012,
        6019
      ],
      "op": "PUSH1",
      "path": "41",
      "value": "0x2"
    },
    "3258": {
      "fn": "ERC4973._exists",
      "offset": [
        6012,
        6028
      ],
      "op": "PUSH1",
      "path": "41",
      "value": "0x20"
    },
    "3260": {
      "fn": "ERC4973._exists",
      "offset": [
        6012,
        6028
      ],
      "op": "MSTORE",
      "path": "41"
    },
    "3261": {
      "fn": "ERC4973._exists",
      "offset": [
        6012,
        6028
      ],
      "op": "PUSH1",
      "path": "41",
      "value": "0x40"
    },
    "3263": {
      "fn": "ERC4973._exists",
      "offset": [
        6012,
        6028
      ],
      "op": "SWAP1",
      "path": "41"
    },
    "3264": {
      "fn": "ERC4973._exists",
      "offset": [
        6012,
        6028
      ],
      "op": "KECCAK256",
      "path": "41"
    },
    "3265": {
      "fn": "ERC4973._exists",
      "offset": [
        6012,
        6028
      ],
      "op": "SLOAD",
      "path": "41"
    },
    "3266": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3268": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3270": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3272": {
      "op": "SHL"
    },
    "3273": {
      "op": "SUB"
    },
    "3274": {
      "fn": "ERC4973._exists",
      "offset": [
        6012,
        6028
      ],
      "op": "AND",
      "path": "41"
    },
    "3275": {
      "fn": "ERC4973._exists",
      "offset": [
        6012,
        6042
      ],
      "op": "ISZERO",
      "path": "41"
    },
    "3276": {
      "fn": "ERC4973._exists",
      "offset": [
        6012,
        6042
      ],
      "op": "ISZERO",
      "path": "41"
    },
    "3277": {
      "fn": "ERC4973._exists",
      "offset": [
        6012,
        6042
      ],
      "op": "SWAP1",
      "path": "41"
    },
    "3278": {
      "fn": "ERC4973._exists",
      "jump": "o",
      "offset": [
        5924,
        6049
      ],
      "op": "JUMP",
      "path": "41"
    },
    "3279": {
      "fn": "Soulbound.revoke",
      "offset": [
        3338,
        3766
      ],
      "op": "JUMPDEST",
      "path": "37"
    },
    "3280": {
      "fn": "Soulbound.revoke",
      "offset": [
        3405,
        3409
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0x0"
    },
    "3282": {
      "fn": "Soulbound.revoke",
      "offset": [
        3468,
        3485
      ],
      "op": "PUSH2",
      "path": "37",
      "statement": 40,
      "value": "0xCDA"
    },
    "3285": {
      "fn": "Soulbound.revoke",
      "offset": [
        3476,
        3484
      ],
      "op": "DUP3",
      "path": "37"
    },
    "3286": {
      "fn": "Soulbound.revoke",
      "offset": [
        3468,
        3475
      ],
      "op": "PUSH2",
      "path": "37",
      "value": "0xCB2"
    },
    "3289": {
      "fn": "Soulbound.revoke",
      "jump": "i",
      "offset": [
        3468,
        3485
      ],
      "op": "JUMP",
      "path": "37"
    },
    "3290": {
      "branch": 98,
      "fn": "Soulbound.revoke",
      "offset": [
        3468,
        3485
      ],
      "op": "JUMPDEST",
      "path": "37"
    },
    "3291": {
      "fn": "Soulbound.revoke",
      "offset": [
        3460,
        3509
      ],
      "op": "PUSH2",
      "path": "37",
      "value": "0xD1C"
    },
    "3294": {
      "branch": 98,
      "fn": "Soulbound.revoke",
      "offset": [
        3460,
        3509
      ],
      "op": "JUMPI",
      "path": "37"
    },
    "3295": {
      "fn": "Soulbound.revoke",
      "offset": [
        3460,
        3509
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0x40"
    },
    "3297": {
      "fn": "Soulbound.revoke",
      "offset": [
        3460,
        3509
      ],
      "op": "MLOAD",
      "path": "37"
    },
    "3298": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "3302": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "3304": {
      "op": "SHL"
    },
    "3305": {
      "fn": "Soulbound.revoke",
      "offset": [
        3460,
        3509
      ],
      "op": "DUP2",
      "path": "37"
    },
    "3306": {
      "fn": "Soulbound.revoke",
      "offset": [
        3460,
        3509
      ],
      "op": "MSTORE",
      "path": "37"
    },
    "3307": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3309": {
      "fn": "Soulbound.revoke",
      "offset": [
        3460,
        3509
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0x4"
    },
    "3311": {
      "fn": "Soulbound.revoke",
      "offset": [
        3460,
        3509
      ],
      "op": "DUP3",
      "path": "37"
    },
    "3312": {
      "fn": "Soulbound.revoke",
      "offset": [
        3460,
        3509
      ],
      "op": "ADD",
      "path": "37"
    },
    "3313": {
      "op": "MSTORE"
    },
    "3314": {
      "op": "PUSH1",
      "value": "0x13"
    },
    "3316": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "3318": {
      "op": "DUP3"
    },
    "3319": {
      "op": "ADD"
    },
    "3320": {
      "op": "MSTORE"
    },
    "3321": {
      "op": "PUSH19",
      "value": "0x2737B716B2BC34B9BA32B73A103A37B5B2B717"
    },
    "3341": {
      "op": "PUSH1",
      "value": "0x69"
    },
    "3343": {
      "op": "SHL"
    },
    "3344": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "3346": {
      "op": "DUP3"
    },
    "3347": {
      "op": "ADD"
    },
    "3348": {
      "op": "MSTORE"
    },
    "3349": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "3351": {
      "op": "ADD"
    },
    "3352": {
      "fn": "Soulbound.revoke",
      "offset": [
        3460,
        3509
      ],
      "op": "PUSH2",
      "path": "37",
      "value": "0x422"
    },
    "3355": {
      "op": "JUMP"
    },
    "3356": {
      "fn": "Soulbound.revoke",
      "offset": [
        3460,
        3509
      ],
      "op": "JUMPDEST",
      "path": "37"
    },
    "3357": {
      "fn": "Soulbound.revoke",
      "offset": [
        3601,
        3606
      ],
      "op": "DUP3",
      "path": "37",
      "statement": 41
    },
    "3358": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3360": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3362": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3364": {
      "op": "SHL"
    },
    "3365": {
      "op": "SUB"
    },
    "3366": {
      "fn": "Soulbound.revoke",
      "offset": [
        3580,
        3606
      ],
      "op": "AND",
      "path": "37"
    },
    "3367": {
      "fn": "Soulbound.revoke",
      "offset": [
        3580,
        3597
      ],
      "op": "PUSH2",
      "path": "37",
      "value": "0xD2F"
    },
    "3370": {
      "fn": "Soulbound.revoke",
      "offset": [
        3588,
        3596
      ],
      "op": "DUP4",
      "path": "37"
    },
    "3371": {
      "fn": "Soulbound.revoke",
      "offset": [
        3580,
        3587
      ],
      "op": "PUSH2",
      "path": "37",
      "value": "0x603"
    },
    "3374": {
      "fn": "Soulbound.revoke",
      "jump": "i",
      "offset": [
        3580,
        3597
      ],
      "op": "JUMP",
      "path": "37"
    },
    "3375": {
      "fn": "Soulbound.revoke",
      "offset": [
        3580,
        3597
      ],
      "op": "JUMPDEST",
      "path": "37"
    },
    "3376": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3378": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3380": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3382": {
      "op": "SHL"
    },
    "3383": {
      "op": "SUB"
    },
    "3384": {
      "fn": "Soulbound.revoke",
      "offset": [
        3580,
        3606
      ],
      "op": "AND",
      "path": "37"
    },
    "3385": {
      "branch": 99,
      "fn": "Soulbound.revoke",
      "offset": [
        3580,
        3606
      ],
      "op": "EQ",
      "path": "37"
    },
    "3386": {
      "fn": "Soulbound.revoke",
      "offset": [
        3572,
        3637
      ],
      "op": "PUSH2",
      "path": "37",
      "value": "0xD85"
    },
    "3389": {
      "branch": 99,
      "fn": "Soulbound.revoke",
      "offset": [
        3572,
        3637
      ],
      "op": "JUMPI",
      "path": "37"
    },
    "3390": {
      "fn": "Soulbound.revoke",
      "offset": [
        3572,
        3637
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0x40"
    },
    "3392": {
      "fn": "Soulbound.revoke",
      "offset": [
        3572,
        3637
      ],
      "op": "MLOAD",
      "path": "37"
    },
    "3393": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "3397": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "3399": {
      "op": "SHL"
    },
    "3400": {
      "fn": "Soulbound.revoke",
      "offset": [
        3572,
        3637
      ],
      "op": "DUP2",
      "path": "37"
    },
    "3401": {
      "fn": "Soulbound.revoke",
      "offset": [
        3572,
        3637
      ],
      "op": "MSTORE",
      "path": "37"
    },
    "3402": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3404": {
      "fn": "Soulbound.revoke",
      "offset": [
        3572,
        3637
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0x4"
    },
    "3406": {
      "fn": "Soulbound.revoke",
      "offset": [
        3572,
        3637
      ],
      "op": "DUP3",
      "path": "37"
    },
    "3407": {
      "fn": "Soulbound.revoke",
      "offset": [
        3572,
        3637
      ],
      "op": "ADD",
      "path": "37"
    },
    "3408": {
      "op": "MSTORE"
    },
    "3409": {
      "op": "PUSH1",
      "value": "0x1A"
    },
    "3411": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "3413": {
      "op": "DUP3"
    },
    "3414": {
      "op": "ADD"
    },
    "3415": {
      "op": "MSTORE"
    },
    "3416": {
      "op": "PUSH32",
      "value": "0x546F6B656E206E6F74206F776E65642062792061646472657373000000000000"
    },
    "3449": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "3451": {
      "op": "DUP3"
    },
    "3452": {
      "op": "ADD"
    },
    "3453": {
      "op": "MSTORE"
    },
    "3454": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "3456": {
      "op": "ADD"
    },
    "3457": {
      "fn": "Soulbound.revoke",
      "offset": [
        3572,
        3637
      ],
      "op": "PUSH2",
      "path": "37",
      "value": "0x422"
    },
    "3460": {
      "op": "JUMP"
    },
    "3461": {
      "fn": "Soulbound.revoke",
      "offset": [
        3572,
        3637
      ],
      "op": "JUMPDEST",
      "path": "37"
    },
    "3462": {
      "fn": "Soulbound.revoke",
      "offset": [
        3680,
        3708
      ],
      "op": "PUSH2",
      "path": "37",
      "statement": 42,
      "value": "0xD8E"
    },
    "3465": {
      "fn": "Soulbound.revoke",
      "offset": [
        3699,
        3707
      ],
      "op": "DUP3",
      "path": "37"
    },
    "3466": {
      "fn": "Soulbound.revoke",
      "offset": [
        3680,
        3698
      ],
      "op": "PUSH2",
      "path": "37",
      "value": "0x11A8"
    },
    "3469": {
      "fn": "Soulbound.revoke",
      "jump": "i",
      "offset": [
        3680,
        3708
      ],
      "op": "JUMP",
      "path": "37"
    },
    "3470": {
      "fn": "Soulbound.revoke",
      "offset": [
        3680,
        3708
      ],
      "op": "JUMPDEST",
      "path": "37"
    },
    "3471": {
      "op": "POP"
    },
    "3472": {
      "fn": "Soulbound.revoke",
      "offset": [
        3755,
        3759
      ],
      "op": "PUSH1",
      "path": "37",
      "statement": 43,
      "value": "0x1"
    },
    "3474": {
      "fn": "Soulbound.revoke",
      "offset": [
        3338,
        3766
      ],
      "op": "SWAP3",
      "path": "37"
    },
    "3475": {
      "fn": "Soulbound.revoke",
      "offset": [
        3338,
        3766
      ],
      "op": "SWAP2",
      "path": "37"
    },
    "3476": {
      "fn": "Soulbound.revoke",
      "offset": [
        3338,
        3766
      ],
      "op": "POP",
      "path": "37"
    },
    "3477": {
      "fn": "Soulbound.revoke",
      "offset": [
        3338,
        3766
      ],
      "op": "POP",
      "path": "37"
    },
    "3478": {
      "fn": "Soulbound.revoke",
      "jump": "o",
      "offset": [
        3338,
        3766
      ],
      "op": "JUMP",
      "path": "37"
    },
    "3479": {
      "fn": "SoulboundCore.toString",
      "offset": [
        6660,
        7363
      ],
      "op": "JUMPDEST",
      "path": "38"
    },
    "3480": {
      "fn": "SoulboundCore.toString",
      "offset": [
        6716,
        6729
      ],
      "op": "PUSH1",
      "path": "38",
      "value": "0x60"
    },
    "3482": {
      "fn": "SoulboundCore.toString",
      "offset": [
        6933,
        6938
      ],
      "op": "DUP2",
      "path": "38"
    },
    "3483": {
      "fn": "SoulboundCore.toString",
      "offset": [
        6942,
        6943
      ],
      "op": "PUSH1",
      "path": "38",
      "value": "0x0"
    },
    "3485": {
      "branch": 86,
      "fn": "SoulboundCore.toString",
      "offset": [
        6933,
        6943
      ],
      "op": "SUB",
      "path": "38"
    },
    "3486": {
      "fn": "SoulboundCore.toString",
      "offset": [
        6929,
        6980
      ],
      "op": "PUSH2",
      "path": "38",
      "value": "0xDBE"
    },
    "3489": {
      "branch": 86,
      "fn": "SoulboundCore.toString",
      "offset": [
        6929,
        6980
      ],
      "op": "JUMPI",
      "path": "38"
    },
    "3490": {
      "op": "POP"
    },
    "3491": {
      "op": "POP"
    },
    "3492": {
      "fn": "SoulboundCore.toString",
      "offset": [
        6959,
        6969
      ],
      "op": "PUSH1",
      "path": "38",
      "statement": 44,
      "value": "0x40"
    },
    "3494": {
      "fn": "SoulboundCore.toString",
      "offset": [
        6959,
        6969
      ],
      "op": "DUP1",
      "path": "38"
    },
    "3495": {
      "fn": "SoulboundCore.toString",
      "offset": [
        6959,
        6969
      ],
      "op": "MLOAD",
      "path": "38"
    },
    "3496": {
      "fn": "SoulboundCore.toString",
      "offset": [
        6959,
        6969
      ],
      "op": "DUP1",
      "path": "38"
    },
    "3497": {
      "fn": "SoulboundCore.toString",
      "offset": [
        6959,
        6969
      ],
      "op": "DUP3",
      "path": "38"
    },
    "3498": {
      "fn": "SoulboundCore.toString",
      "offset": [
        6959,
        6969
      ],
      "op": "ADD",
      "path": "38"
    },
    "3499": {
      "fn": "SoulboundCore.toString",
      "offset": [
        6959,
        6969
      ],
      "op": "SWAP1",
      "path": "38"
    },
    "3500": {
      "fn": "SoulboundCore.toString",
      "offset": [
        6959,
        6969
      ],
      "op": "SWAP2",
      "path": "38"
    },
    "3501": {
      "fn": "SoulboundCore.toString",
      "offset": [
        6959,
        6969
      ],
      "op": "MSTORE",
      "path": "38"
    },
    "3502": {
      "fn": "SoulboundCore.toString",
      "offset": [
        6959,
        6969
      ],
      "op": "PUSH1",
      "path": "38",
      "value": "0x1"
    },
    "3504": {
      "fn": "SoulboundCore.toString",
      "offset": [
        6959,
        6969
      ],
      "op": "DUP2",
      "path": "38"
    },
    "3505": {
      "fn": "SoulboundCore.toString",
      "offset": [
        6959,
        6969
      ],
      "op": "MSTORE",
      "path": "38"
    },
    "3506": {
      "op": "PUSH1",
      "value": "0x3"
    },
    "3508": {
      "op": "PUSH1",
      "value": "0xFC"
    },
    "3510": {
      "op": "SHL"
    },
    "3511": {
      "fn": "SoulboundCore.toString",
      "offset": [
        6959,
        6969
      ],
      "op": "PUSH1",
      "path": "38",
      "value": "0x20"
    },
    "3513": {
      "fn": "SoulboundCore.toString",
      "offset": [
        6959,
        6969
      ],
      "op": "DUP3",
      "path": "38"
    },
    "3514": {
      "fn": "SoulboundCore.toString",
      "offset": [
        6959,
        6969
      ],
      "op": "ADD",
      "path": "38"
    },
    "3515": {
      "fn": "SoulboundCore.toString",
      "offset": [
        6959,
        6969
      ],
      "op": "MSTORE",
      "path": "38"
    },
    "3516": {
      "fn": "SoulboundCore.toString",
      "offset": [
        6959,
        6969
      ],
      "op": "SWAP1",
      "path": "38"
    },
    "3517": {
      "fn": "SoulboundCore.toString",
      "jump": "o",
      "offset": [
        6660,
        7363
      ],
      "op": "JUMP",
      "path": "38"
    },
    "3518": {
      "fn": "SoulboundCore.toString",
      "offset": [
        6929,
        6980
      ],
      "op": "JUMPDEST",
      "path": "38"
    },
    "3519": {
      "fn": "SoulboundCore.toString",
      "offset": [
        7004,
        7009
      ],
      "op": "DUP2",
      "path": "38"
    },
    "3520": {
      "fn": "SoulboundCore.toString",
      "offset": [
        6989,
        7001
      ],
      "op": "PUSH1",
      "path": "38",
      "value": "0x0"
    },
    "3522": {
      "fn": "SoulboundCore.toString",
      "offset": [
        7043,
        7118
      ],
      "op": "JUMPDEST",
      "path": "38"
    },
    "3523": {
      "fn": "SoulboundCore.toString",
      "offset": [
        7050,
        7059
      ],
      "op": "DUP2",
      "path": "38"
    },
    "3524": {
      "fn": "SoulboundCore.toString",
      "offset": [
        7050,
        7059
      ],
      "op": "ISZERO",
      "path": "38"
    },
    "3525": {
      "fn": "SoulboundCore.toString",
      "offset": [
        7043,
        7118
      ],
      "op": "PUSH2",
      "path": "38",
      "value": "0xDE8"
    },
    "3528": {
      "fn": "SoulboundCore.toString",
      "offset": [
        7043,
        7118
      ],
      "op": "JUMPI",
      "path": "38"
    },
    "3529": {
      "fn": "SoulboundCore.toString",
      "offset": [
        7075,
        7083
      ],
      "op": "DUP1",
      "path": "38",
      "statement": 45
    },
    "3530": {
      "fn": "SoulboundCore.toString",
      "offset": [
        7075,
        7083
      ],
      "op": "PUSH2",
      "path": "38",
      "value": "0xDD2"
    },
    "3533": {
      "fn": "SoulboundCore.toString",
      "offset": [
        7075,
        7083
      ],
      "op": "DUP2",
      "path": "38"
    },
    "3534": {
      "fn": "SoulboundCore.toString",
      "offset": [
        7075,
        7083
      ],
      "op": "PUSH2",
      "path": "38",
      "value": "0x185D"
    },
    "3537": {
      "fn": "SoulboundCore.toString",
      "jump": "i",
      "offset": [
        7075,
        7083
      ],
      "op": "JUMP",
      "path": "38"
    },
    "3538": {
      "fn": "SoulboundCore.toString",
      "offset": [
        7075,
        7083
      ],
      "op": "JUMPDEST",
      "path": "38"
    },
    "3539": {
      "fn": "SoulboundCore.toString",
      "offset": [
        7075,
        7083
      ],
      "op": "SWAP2",
      "path": "38"
    },
    "3540": {
      "op": "POP"
    },
    "3541": {
      "fn": "SoulboundCore.toString",
      "offset": [
        7097,
        7107
      ],
      "op": "PUSH2",
      "path": "38",
      "statement": 46,
      "value": "0xDE1"
    },
    "3544": {
      "fn": "SoulboundCore.toString",
      "offset": [
        7097,
        7107
      ],
      "op": "SWAP1",
      "path": "38"
    },
    "3545": {
      "op": "POP"
    },
    "3546": {
      "fn": "SoulboundCore.toString",
      "offset": [
        7105,
        7107
      ],
      "op": "PUSH1",
      "path": "38",
      "value": "0xA"
    },
    "3548": {
      "fn": "SoulboundCore.toString",
      "offset": [
        7097,
        7107
      ],
      "op": "DUP4",
      "path": "38"
    },
    "3549": {
      "fn": "SoulboundCore.toString",
      "offset": [
        7097,
        7107
      ],
      "op": "PUSH2",
      "path": "38",
      "value": "0x188C"
    },
    "3552": {
      "fn": "SoulboundCore.toString",
      "jump": "i",
      "offset": [
        7097,
        7107
      ],
      "op": "JUMP",
      "path": "38"
    },
    "3553": {
      "fn": "SoulboundCore.toString",
      "offset": [
        7097,
        7107
      ],
      "op": "JUMPDEST",
      "path": "38"
    },
    "3554": {
      "fn": "SoulboundCore.toString",
      "offset": [
        7097,
        7107
      ],
      "op": "SWAP2",
      "path": "38"
    },
    "3555": {
      "fn": "SoulboundCore.toString",
      "offset": [
        7097,
        7107
      ],
      "op": "POP",
      "path": "38"
    },
    "3556": {
      "fn": "SoulboundCore.toString",
      "offset": [
        7043,
        7118
      ],
      "op": "PUSH2",
      "path": "38",
      "value": "0xDC2"
    },
    "3559": {
      "fn": "SoulboundCore.toString",
      "offset": [
        7043,
        7118
      ],
      "op": "JUMP",
      "path": "38"
    },
    "3560": {
      "fn": "SoulboundCore.toString",
      "offset": [
        7043,
        7118
      ],
      "op": "JUMPDEST",
      "path": "38"
    },
    "3561": {
      "fn": "SoulboundCore.toString",
      "offset": [
        7127,
        7146
      ],
      "op": "PUSH1",
      "path": "38",
      "value": "0x0"
    },
    "3563": {
      "fn": "SoulboundCore.toString",
      "offset": [
        7159,
        7165
      ],
      "op": "DUP2",
      "path": "38"
    },
    "3564": {
      "fn": "SoulboundCore.toString",
      "offset": [
        7149,
        7166
      ],
      "op": "PUSH8",
      "path": "38",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "3573": {
      "fn": "SoulboundCore.toString",
      "offset": [
        7149,
        7166
      ],
      "op": "DUP2",
      "path": "38"
    },
    "3574": {
      "fn": "SoulboundCore.toString",
      "offset": [
        7149,
        7166
      ],
      "op": "GT",
      "path": "38"
    },
    "3575": {
      "fn": "SoulboundCore.toString",
      "offset": [
        7149,
        7166
      ],
      "op": "ISZERO",
      "path": "38"
    },
    "3576": {
      "fn": "SoulboundCore.toString",
      "offset": [
        7149,
        7166
      ],
      "op": "PUSH2",
      "path": "38",
      "value": "0xE03"
    },
    "3579": {
      "fn": "SoulboundCore.toString",
      "offset": [
        7149,
        7166
      ],
      "op": "JUMPI",
      "path": "38"
    },
    "3580": {
      "fn": "SoulboundCore.toString",
      "offset": [
        7149,
        7166
      ],
      "op": "PUSH2",
      "path": "38",
      "value": "0xE03"
    },
    "3583": {
      "fn": "SoulboundCore.toString",
      "offset": [
        7149,
        7166
      ],
      "op": "PUSH2",
      "path": "38",
      "value": "0x14DE"
    },
    "3586": {
      "fn": "SoulboundCore.toString",
      "jump": "i",
      "offset": [
        7149,
        7166
      ],
      "op": "JUMP",
      "path": "38"
    },
    "3587": {
      "fn": "SoulboundCore.toString",
      "offset": [
        7149,
        7166
      ],
      "op": "JUMPDEST",
      "path": "38"
    },
    "3588": {
      "fn": "SoulboundCore.toString",
      "offset": [
        7149,
        7166
      ],
      "op": "PUSH1",
      "path": "38",
      "value": "0x40"
    },
    "3590": {
      "fn": "SoulboundCore.toString",
      "offset": [
        7149,
        7166
      ],
      "op": "MLOAD",
      "path": "38"
    },
    "3591": {
      "fn": "SoulboundCore.toString",
      "offset": [
        7149,
        7166
      ],
      "op": "SWAP1",
      "path": "38"
    },
    "3592": {
      "fn": "SoulboundCore.toString",
      "offset": [
        7149,
        7166
      ],
      "op": "DUP1",
      "path": "38"
    },
    "3593": {
      "fn": "SoulboundCore.toString",
      "offset": [
        7149,
        7166
      ],
      "op": "DUP3",
      "path": "38"
    },
    "3594": {
      "fn": "SoulboundCore.toString",
      "offset": [
        7149,
        7166
      ],
      "op": "MSTORE",
      "path": "38"
    },
    "3595": {
      "fn": "SoulboundCore.toString",
      "offset": [
        7149,
        7166
      ],
      "op": "DUP1",
      "path": "38"
    },
    "3596": {
      "fn": "SoulboundCore.toString",
      "offset": [
        7149,
        7166
      ],
      "op": "PUSH1",
      "path": "38",
      "value": "0x1F"
    },
    "3598": {
      "fn": "SoulboundCore.toString",
      "offset": [
        7149,
        7166
      ],
      "op": "ADD",
      "path": "38"
    },
    "3599": {
      "fn": "SoulboundCore.toString",
      "offset": [
        7149,
        7166
      ],
      "op": "PUSH1",
      "path": "38",
      "value": "0x1F"
    },
    "3601": {
      "fn": "SoulboundCore.toString",
      "offset": [
        7149,
        7166
      ],
      "op": "NOT",
      "path": "38"
    },
    "3602": {
      "fn": "SoulboundCore.toString",
      "offset": [
        7149,
        7166
      ],
      "op": "AND",
      "path": "38"
    },
    "3603": {
      "fn": "SoulboundCore.toString",
      "offset": [
        7149,
        7166
      ],
      "op": "PUSH1",
      "path": "38",
      "value": "0x20"
    },
    "3605": {
      "fn": "SoulboundCore.toString",
      "offset": [
        7149,
        7166
      ],
      "op": "ADD",
      "path": "38"
    },
    "3606": {
      "fn": "SoulboundCore.toString",
      "offset": [
        7149,
        7166
      ],
      "op": "DUP3",
      "path": "38"
    },
    "3607": {
      "fn": "SoulboundCore.toString",
      "offset": [
        7149,
        7166
      ],
      "op": "ADD",
      "path": "38"
    },
    "3608": {
      "fn": "SoulboundCore.toString",
      "offset": [
        7149,
        7166
      ],
      "op": "PUSH1",
      "path": "38",
      "value": "0x40"
    },
    "3610": {
      "fn": "SoulboundCore.toString",
      "offset": [
        7149,
        7166
      ],
      "op": "MSTORE",
      "path": "38"
    },
    "3611": {
      "fn": "SoulboundCore.toString",
      "offset": [
        7149,
        7166
      ],
      "op": "DUP1",
      "path": "38"
    },
    "3612": {
      "fn": "SoulboundCore.toString",
      "offset": [
        7149,
        7166
      ],
      "op": "ISZERO",
      "path": "38"
    },
    "3613": {
      "fn": "SoulboundCore.toString",
      "offset": [
        7149,
        7166
      ],
      "op": "PUSH2",
      "path": "38",
      "value": "0xE2D"
    },
    "3616": {
      "fn": "SoulboundCore.toString",
      "offset": [
        7149,
        7166
      ],
      "op": "JUMPI",
      "path": "38"
    },
    "3617": {
      "fn": "SoulboundCore.toString",
      "offset": [
        7149,
        7166
      ],
      "op": "PUSH1",
      "path": "38",
      "value": "0x20"
    },
    "3619": {
      "fn": "SoulboundCore.toString",
      "offset": [
        7149,
        7166
      ],
      "op": "DUP3",
      "path": "38"
    },
    "3620": {
      "fn": "SoulboundCore.toString",
      "offset": [
        7149,
        7166
      ],
      "op": "ADD",
      "path": "38"
    },
    "3621": {
      "fn": "SoulboundCore.toString",
      "offset": [
        7149,
        7166
      ],
      "op": "DUP2",
      "path": "38"
    },
    "3622": {
      "fn": "SoulboundCore.toString",
      "offset": [
        7149,
        7166
      ],
      "op": "DUP1",
      "path": "38"
    },
    "3623": {
      "fn": "SoulboundCore.toString",
      "offset": [
        7149,
        7166
      ],
      "op": "CALLDATASIZE",
      "path": "38"
    },
    "3624": {
      "fn": "SoulboundCore.toString",
      "offset": [
        7149,
        7166
      ],
      "op": "DUP4",
      "path": "38"
    },
    "3625": {
      "fn": "SoulboundCore.toString",
      "offset": [
        7149,
        7166
      ],
      "op": "CALLDATACOPY",
      "path": "38"
    },
    "3626": {
      "fn": "SoulboundCore.toString",
      "offset": [
        7149,
        7166
      ],
      "op": "ADD",
      "path": "38"
    },
    "3627": {
      "fn": "SoulboundCore.toString",
      "offset": [
        7149,
        7166
      ],
      "op": "SWAP1",
      "path": "38"
    },
    "3628": {
      "op": "POP"
    },
    "3629": {
      "fn": "SoulboundCore.toString",
      "offset": [
        7149,
        7166
      ],
      "op": "JUMPDEST",
      "path": "38"
    },
    "3630": {
      "fn": "SoulboundCore.toString",
      "offset": [
        7149,
        7166
      ],
      "op": "POP",
      "path": "38"
    },
    "3631": {
      "fn": "SoulboundCore.toString",
      "offset": [
        7127,
        7166
      ],
      "op": "SWAP1",
      "path": "38"
    },
    "3632": {
      "fn": "SoulboundCore.toString",
      "offset": [
        7127,
        7166
      ],
      "op": "POP",
      "path": "38"
    },
    "3633": {
      "fn": "SoulboundCore.toString",
      "offset": [
        7176,
        7326
      ],
      "op": "JUMPDEST",
      "path": "38"
    },
    "3634": {
      "fn": "SoulboundCore.toString",
      "offset": [
        7183,
        7193
      ],
      "op": "DUP5",
      "path": "38"
    },
    "3635": {
      "fn": "SoulboundCore.toString",
      "offset": [
        7183,
        7193
      ],
      "op": "ISZERO",
      "path": "38"
    },
    "3636": {
      "fn": "SoulboundCore.toString",
      "offset": [
        7176,
        7326
      ],
      "op": "PUSH2",
      "path": "38",
      "value": "0xE98"
    },
    "3639": {
      "fn": "SoulboundCore.toString",
      "offset": [
        7176,
        7326
      ],
      "op": "JUMPI",
      "path": "38"
    },
    "3640": {
      "fn": "SoulboundCore.toString",
      "offset": [
        7209,
        7220
      ],
      "op": "PUSH2",
      "path": "38",
      "statement": 47,
      "value": "0xE42"
    },
    "3643": {
      "fn": "SoulboundCore.toString",
      "offset": [
        7219,
        7220
      ],
      "op": "PUSH1",
      "path": "38",
      "value": "0x1"
    },
    "3645": {
      "fn": "SoulboundCore.toString",
      "offset": [
        7209,
        7220
      ],
      "op": "DUP4",
      "path": "38"
    },
    "3646": {
      "fn": "SoulboundCore.toString",
      "offset": [
        7209,
        7220
      ],
      "op": "PUSH2",
      "path": "38",
      "value": "0x18A0"
    },
    "3649": {
      "fn": "SoulboundCore.toString",
      "jump": "i",
      "offset": [
        7209,
        7220
      ],
      "op": "JUMP",
      "path": "38"
    },
    "3650": {
      "fn": "SoulboundCore.toString",
      "offset": [
        7209,
        7220
      ],
      "op": "JUMPDEST",
      "path": "38"
    },
    "3651": {
      "fn": "SoulboundCore.toString",
      "offset": [
        7209,
        7220
      ],
      "op": "SWAP2",
      "path": "38"
    },
    "3652": {
      "op": "POP"
    },
    "3653": {
      "fn": "SoulboundCore.toString",
      "offset": [
        7277,
        7287
      ],
      "op": "PUSH2",
      "path": "38",
      "statement": 48,
      "value": "0xE4F"
    },
    "3656": {
      "fn": "SoulboundCore.toString",
      "offset": [
        7285,
        7287
      ],
      "op": "PUSH1",
      "path": "38",
      "value": "0xA"
    },
    "3658": {
      "fn": "SoulboundCore.toString",
      "offset": [
        7277,
        7282
      ],
      "op": "DUP7",
      "path": "38"
    },
    "3659": {
      "fn": "SoulboundCore.toString",
      "offset": [
        7277,
        7287
      ],
      "op": "PUSH2",
      "path": "38",
      "value": "0x18B7"
    },
    "3662": {
      "fn": "SoulboundCore.toString",
      "jump": "i",
      "offset": [
        7277,
        7287
      ],
      "op": "JUMP",
      "path": "38"
    },
    "3663": {
      "fn": "SoulboundCore.toString",
      "offset": [
        7277,
        7287
      ],
      "op": "JUMPDEST",
      "path": "38"
    },
    "3664": {
      "fn": "SoulboundCore.toString",
      "offset": [
        7264,
        7288
      ],
      "op": "PUSH2",
      "path": "38",
      "value": "0xE5A"
    },
    "3667": {
      "fn": "SoulboundCore.toString",
      "offset": [
        7264,
        7288
      ],
      "op": "SWAP1",
      "path": "38"
    },
    "3668": {
      "fn": "SoulboundCore.toString",
      "offset": [
        7264,
        7266
      ],
      "op": "PUSH1",
      "path": "38",
      "value": "0x30"
    },
    "3670": {
      "fn": "SoulboundCore.toString",
      "offset": [
        7264,
        7288
      ],
      "op": "PUSH2",
      "path": "38",
      "value": "0x18CB"
    },
    "3673": {
      "fn": "SoulboundCore.toString",
      "jump": "i",
      "offset": [
        7264,
        7288
      ],
      "op": "JUMP",
      "path": "38"
    },
    "3674": {
      "fn": "SoulboundCore.toString",
      "offset": [
        7264,
        7288
      ],
      "op": "JUMPDEST",
      "path": "38"
    },
    "3675": {
      "fn": "SoulboundCore.toString",
      "offset": [
        7251,
        7290
      ],
      "op": "PUSH1",
      "path": "38",
      "value": "0xF8"
    },
    "3677": {
      "fn": "SoulboundCore.toString",
      "offset": [
        7251,
        7290
      ],
      "op": "SHL",
      "path": "38"
    },
    "3678": {
      "fn": "SoulboundCore.toString",
      "offset": [
        7234,
        7240
      ],
      "op": "DUP2",
      "path": "38"
    },
    "3679": {
      "fn": "SoulboundCore.toString",
      "offset": [
        7241,
        7247
      ],
      "op": "DUP4",
      "path": "38"
    },
    "3680": {
      "fn": "SoulboundCore.toString",
      "offset": [
        7234,
        7248
      ],
      "op": "DUP2",
      "path": "38"
    },
    "3681": {
      "fn": "SoulboundCore.toString",
      "offset": [
        7234,
        7248
      ],
      "op": "MLOAD",
      "path": "38"
    },
    "3682": {
      "fn": "SoulboundCore.toString",
      "offset": [
        7234,
        7248
      ],
      "op": "DUP2",
      "path": "38"
    },
    "3683": {
      "fn": "SoulboundCore.toString",
      "offset": [
        7234,
        7248
      ],
      "op": "LT",
      "path": "38"
    },
    "3684": {
      "fn": "SoulboundCore.toString",
      "offset": [
        7234,
        7248
      ],
      "op": "PUSH2",
      "path": "38",
      "value": "0xE6F"
    },
    "3687": {
      "fn": "SoulboundCore.toString",
      "offset": [
        7234,
        7248
      ],
      "op": "JUMPI",
      "path": "38"
    },
    "3688": {
      "fn": "SoulboundCore.toString",
      "offset": [
        7234,
        7248
      ],
      "op": "PUSH2",
      "path": "38",
      "value": "0xE6F"
    },
    "3691": {
      "fn": "SoulboundCore.toString",
      "offset": [
        7234,
        7248
      ],
      "op": "PUSH2",
      "path": "38",
      "value": "0x18E3"
    },
    "3694": {
      "fn": "SoulboundCore.toString",
      "jump": "i",
      "offset": [
        7234,
        7248
      ],
      "op": "JUMP",
      "path": "38"
    },
    "3695": {
      "fn": "SoulboundCore.toString",
      "offset": [
        7234,
        7248
      ],
      "op": "JUMPDEST",
      "path": "38"
    },
    "3696": {
      "fn": "SoulboundCore.toString",
      "offset": [
        7234,
        7248
      ],
      "op": "PUSH1",
      "path": "38",
      "value": "0x20"
    },
    "3698": {
      "fn": "SoulboundCore.toString",
      "offset": [
        7234,
        7248
      ],
      "op": "ADD",
      "path": "38"
    },
    "3699": {
      "fn": "SoulboundCore.toString",
      "offset": [
        7234,
        7248
      ],
      "op": "ADD",
      "path": "38"
    },
    "3700": {
      "fn": "SoulboundCore.toString",
      "offset": [
        7234,
        7290
      ],
      "op": "SWAP1",
      "path": "38"
    },
    "3701": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3703": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3705": {
      "op": "PUSH1",
      "value": "0xF8"
    },
    "3707": {
      "op": "SHL"
    },
    "3708": {
      "op": "SUB"
    },
    "3709": {
      "fn": "SoulboundCore.toString",
      "offset": [
        7234,
        7290
      ],
      "op": "NOT",
      "path": "38"
    },
    "3710": {
      "fn": "SoulboundCore.toString",
      "offset": [
        7234,
        7290
      ],
      "op": "AND",
      "path": "38"
    },
    "3711": {
      "fn": "SoulboundCore.toString",
      "offset": [
        7234,
        7290
      ],
      "op": "SWAP1",
      "path": "38"
    },
    "3712": {
      "fn": "SoulboundCore.toString",
      "offset": [
        7234,
        7290
      ],
      "op": "DUP2",
      "path": "38"
    },
    "3713": {
      "fn": "SoulboundCore.toString",
      "offset": [
        7234,
        7290
      ],
      "op": "PUSH1",
      "path": "38",
      "value": "0x0"
    },
    "3715": {
      "fn": "SoulboundCore.toString",
      "offset": [
        7234,
        7290
      ],
      "op": "BYTE",
      "path": "38"
    },
    "3716": {
      "fn": "SoulboundCore.toString",
      "offset": [
        7234,
        7290
      ],
      "op": "SWAP1",
      "path": "38"
    },
    "3717": {
      "fn": "SoulboundCore.toString",
      "offset": [
        7234,
        7290
      ],
      "op": "MSTORE8",
      "path": "38"
    },
    "3718": {
      "op": "POP"
    },
    "3719": {
      "fn": "SoulboundCore.toString",
      "offset": [
        7304,
        7315
      ],
      "op": "PUSH2",
      "path": "38",
      "statement": 49,
      "value": "0xE91"
    },
    "3722": {
      "fn": "SoulboundCore.toString",
      "offset": [
        7313,
        7315
      ],
      "op": "PUSH1",
      "path": "38",
      "value": "0xA"
    },
    "3724": {
      "fn": "SoulboundCore.toString",
      "offset": [
        7304,
        7315
      ],
      "op": "DUP7",
      "path": "38"
    },
    "3725": {
      "fn": "SoulboundCore.toString",
      "offset": [
        7304,
        7315
      ],
      "op": "PUSH2",
      "path": "38",
      "value": "0x188C"
    },
    "3728": {
      "fn": "SoulboundCore.toString",
      "jump": "i",
      "offset": [
        7304,
        7315
      ],
      "op": "JUMP",
      "path": "38"
    },
    "3729": {
      "fn": "SoulboundCore.toString",
      "offset": [
        7304,
        7315
      ],
      "op": "JUMPDEST",
      "path": "38"
    },
    "3730": {
      "fn": "SoulboundCore.toString",
      "offset": [
        7304,
        7315
      ],
      "op": "SWAP5",
      "path": "38"
    },
    "3731": {
      "fn": "SoulboundCore.toString",
      "offset": [
        7304,
        7315
      ],
      "op": "POP",
      "path": "38"
    },
    "3732": {
      "fn": "SoulboundCore.toString",
      "offset": [
        7176,
        7326
      ],
      "op": "PUSH2",
      "path": "38",
      "value": "0xE31"
    },
    "3735": {
      "fn": "SoulboundCore.toString",
      "offset": [
        7176,
        7326
      ],
      "op": "JUMP",
      "path": "38"
    },
    "3736": {
      "fn": "SoulboundCore.toString",
      "offset": [
        7176,
        7326
      ],
      "op": "JUMPDEST",
      "path": "38"
    },
    "3737": {
      "fn": "SoulboundCore.toString",
      "offset": [
        7349,
        7355
      ],
      "op": "SWAP5",
      "path": "38",
      "statement": 50
    },
    "3738": {
      "fn": "SoulboundCore.toString",
      "offset": [
        6660,
        7363
      ],
      "op": "SWAP4",
      "path": "38"
    },
    "3739": {
      "op": "POP"
    },
    "3740": {
      "op": "POP"
    },
    "3741": {
      "op": "POP"
    },
    "3742": {
      "op": "POP"
    },
    "3743": {
      "fn": "SoulboundCore.toString",
      "jump": "o",
      "offset": [
        6660,
        7363
      ],
      "op": "JUMP",
      "path": "38"
    },
    "3744": {
      "fn": "ERC4973._burn",
      "offset": [
        6408,
        6645
      ],
      "op": "JUMPDEST",
      "path": "41"
    },
    "3745": {
      "fn": "ERC4973._burn",
      "offset": [
        6467,
        6480
      ],
      "op": "PUSH1",
      "path": "41",
      "value": "0x0"
    },
    "3747": {
      "fn": "ERC4973._burn",
      "offset": [
        6483,
        6499
      ],
      "op": "PUSH2",
      "path": "41",
      "value": "0xEAB"
    },
    "3750": {
      "fn": "ERC4973._burn",
      "offset": [
        6491,
        6498
      ],
      "op": "DUP3",
      "path": "41"
    },
    "3751": {
      "fn": "ERC4973._burn",
      "offset": [
        6483,
        6490
      ],
      "op": "PUSH2",
      "path": "41",
      "value": "0x603"
    },
    "3754": {
      "fn": "ERC4973._burn",
      "jump": "i",
      "offset": [
        6483,
        6499
      ],
      "op": "JUMP",
      "path": "41"
    },
    "3755": {
      "fn": "ERC4973._burn",
      "offset": [
        6483,
        6499
      ],
      "op": "JUMPDEST",
      "path": "41"
    },
    "3756": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3758": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3760": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3762": {
      "op": "SHL"
    },
    "3763": {
      "op": "SUB"
    },
    "3764": {
      "fn": "ERC4973._burn",
      "offset": [
        6510,
        6526
      ],
      "op": "DUP2",
      "path": "41",
      "statement": 51
    },
    "3765": {
      "fn": "ERC4973._burn",
      "offset": [
        6510,
        6526
      ],
      "op": "AND",
      "path": "41"
    },
    "3766": {
      "fn": "ERC4973._burn",
      "offset": [
        6510,
        6526
      ],
      "op": "PUSH1",
      "path": "41",
      "value": "0x0"
    },
    "3768": {
      "fn": "ERC4973._burn",
      "offset": [
        6510,
        6526
      ],
      "op": "SWAP1",
      "path": "41"
    },
    "3769": {
      "fn": "ERC4973._burn",
      "offset": [
        6510,
        6526
      ],
      "op": "DUP2",
      "path": "41"
    },
    "3770": {
      "fn": "ERC4973._burn",
      "offset": [
        6510,
        6526
      ],
      "op": "MSTORE",
      "path": "41"
    },
    "3771": {
      "fn": "ERC4973._burn",
      "offset": [
        6510,
        6519
      ],
      "op": "PUSH1",
      "path": "41",
      "value": "0x4"
    },
    "3773": {
      "fn": "ERC4973._burn",
      "offset": [
        6510,
        6526
      ],
      "op": "PUSH1",
      "path": "41",
      "value": "0x20"
    },
    "3775": {
      "fn": "ERC4973._burn",
      "offset": [
        6510,
        6526
      ],
      "op": "MSTORE",
      "path": "41"
    },
    "3776": {
      "fn": "ERC4973._burn",
      "offset": [
        6510,
        6526
      ],
      "op": "PUSH1",
      "path": "41",
      "value": "0x40"
    },
    "3778": {
      "fn": "ERC4973._burn",
      "offset": [
        6510,
        6526
      ],
      "op": "DUP2",
      "path": "41"
    },
    "3779": {
      "fn": "ERC4973._burn",
      "offset": [
        6510,
        6526
      ],
      "op": "KECCAK256",
      "path": "41"
    },
    "3780": {
      "fn": "ERC4973._burn",
      "offset": [
        6510,
        6531
      ],
      "op": "DUP1",
      "path": "41"
    },
    "3781": {
      "fn": "ERC4973._burn",
      "offset": [
        6510,
        6531
      ],
      "op": "SLOAD",
      "path": "41"
    },
    "3782": {
      "fn": "ERC4973._burn",
      "offset": [
        6467,
        6499
      ],
      "op": "SWAP3",
      "path": "41"
    },
    "3783": {
      "fn": "ERC4973._burn",
      "offset": [
        6467,
        6499
      ],
      "op": "SWAP4",
      "path": "41"
    },
    "3784": {
      "op": "POP"
    },
    "3785": {
      "fn": "ERC4973._burn",
      "offset": [
        6530,
        6531
      ],
      "op": "PUSH1",
      "path": "41",
      "value": "0x1"
    },
    "3787": {
      "fn": "ERC4973._burn",
      "offset": [
        6530,
        6531
      ],
      "op": "SWAP3",
      "path": "41"
    },
    "3788": {
      "fn": "ERC4973._burn",
      "offset": [
        6510,
        6526
      ],
      "op": "SWAP1",
      "path": "41"
    },
    "3789": {
      "fn": "ERC4973._burn",
      "offset": [
        6510,
        6526
      ],
      "op": "SWAP2",
      "path": "41"
    },
    "3790": {
      "fn": "ERC4973._burn",
      "offset": [
        6510,
        6526
      ],
      "op": "SWAP1",
      "path": "41"
    },
    "3791": {
      "fn": "ERC4973._burn",
      "offset": [
        6510,
        6531
      ],
      "op": "PUSH2",
      "path": "41",
      "value": "0xED9"
    },
    "3794": {
      "fn": "ERC4973._burn",
      "offset": [
        6510,
        6531
      ],
      "op": "SWAP1",
      "path": "41"
    },
    "3795": {
      "fn": "ERC4973._burn",
      "offset": [
        6530,
        6531
      ],
      "op": "DUP5",
      "path": "41"
    },
    "3796": {
      "fn": "ERC4973._burn",
      "offset": [
        6530,
        6531
      ],
      "op": "SWAP1",
      "path": "41"
    },
    "3797": {
      "fn": "ERC4973._burn",
      "offset": [
        6510,
        6531
      ],
      "op": "PUSH2",
      "path": "41",
      "value": "0x18A0"
    },
    "3800": {
      "fn": "ERC4973._burn",
      "jump": "i",
      "offset": [
        6510,
        6531
      ],
      "op": "JUMP",
      "path": "41"
    },
    "3801": {
      "fn": "ERC4973._burn",
      "offset": [
        6510,
        6531
      ],
      "op": "JUMPDEST",
      "path": "41"
    },
    "3802": {
      "fn": "ERC4973._burn",
      "offset": [
        6510,
        6531
      ],
      "op": "SWAP1",
      "path": "41"
    },
    "3803": {
      "fn": "ERC4973._burn",
      "offset": [
        6510,
        6531
      ],
      "op": "SWAP2",
      "path": "41"
    },
    "3804": {
      "fn": "ERC4973._burn",
      "offset": [
        6510,
        6531
      ],
      "op": "SSTORE",
      "path": "41"
    },
    "3805": {
      "op": "POP"
    },
    "3806": {
      "op": "POP"
    },
    "3807": {
      "fn": "ERC4973._burn",
      "offset": [
        6548,
        6564
      ],
      "op": "PUSH1",
      "path": "41",
      "statement": 52,
      "value": "0x0"
    },
    "3809": {
      "fn": "ERC4973._burn",
      "offset": [
        6548,
        6564
      ],
      "op": "DUP3",
      "path": "41"
    },
    "3810": {
      "fn": "ERC4973._burn",
      "offset": [
        6548,
        6564
      ],
      "op": "DUP2",
      "path": "41"
    },
    "3811": {
      "fn": "ERC4973._burn",
      "offset": [
        6548,
        6564
      ],
      "op": "MSTORE",
      "path": "41"
    },
    "3812": {
      "fn": "ERC4973._burn",
      "offset": [
        6548,
        6555
      ],
      "op": "PUSH1",
      "path": "41",
      "value": "0x2"
    },
    "3814": {
      "fn": "ERC4973._burn",
      "offset": [
        6548,
        6564
      ],
      "op": "PUSH1",
      "path": "41",
      "value": "0x20"
    },
    "3816": {
      "fn": "ERC4973._burn",
      "offset": [
        6548,
        6564
      ],
      "op": "SWAP1",
      "path": "41"
    },
    "3817": {
      "fn": "ERC4973._burn",
      "offset": [
        6548,
        6564
      ],
      "op": "DUP2",
      "path": "41"
    },
    "3818": {
      "fn": "ERC4973._burn",
      "offset": [
        6548,
        6564
      ],
      "op": "MSTORE",
      "path": "41"
    },
    "3819": {
      "fn": "ERC4973._burn",
      "offset": [
        6548,
        6564
      ],
      "op": "PUSH1",
      "path": "41",
      "value": "0x40"
    },
    "3821": {
      "fn": "ERC4973._burn",
      "offset": [
        6548,
        6564
      ],
      "op": "DUP1",
      "path": "41"
    },
    "3822": {
      "fn": "ERC4973._burn",
      "offset": [
        6548,
        6564
      ],
      "op": "DUP4",
      "path": "41"
    },
    "3823": {
      "fn": "ERC4973._burn",
      "offset": [
        6548,
        6564
      ],
      "op": "KECCAK256",
      "path": "41"
    },
    "3824": {
      "fn": "ERC4973._burn",
      "offset": [
        6541,
        6564
      ],
      "op": "DUP1",
      "path": "41"
    },
    "3825": {
      "fn": "ERC4973._burn",
      "offset": [
        6541,
        6564
      ],
      "op": "SLOAD",
      "path": "41"
    },
    "3826": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3828": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3830": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3832": {
      "op": "SHL"
    },
    "3833": {
      "op": "SUB"
    },
    "3834": {
      "op": "NOT"
    },
    "3835": {
      "fn": "ERC4973._burn",
      "offset": [
        6541,
        6564
      ],
      "op": "AND",
      "path": "41"
    },
    "3836": {
      "fn": "ERC4973._burn",
      "offset": [
        6541,
        6564
      ],
      "op": "SWAP1",
      "path": "41"
    },
    "3837": {
      "fn": "ERC4973._burn",
      "offset": [
        6541,
        6564
      ],
      "op": "SSTORE",
      "path": "41"
    },
    "3838": {
      "fn": "ERC4973._burn",
      "offset": [
        6581,
        6591
      ],
      "op": "PUSH1",
      "path": "41",
      "statement": 53,
      "value": "0x3"
    },
    "3840": {
      "fn": "ERC4973._burn",
      "offset": [
        6581,
        6600
      ],
      "op": "SWAP1",
      "path": "41"
    },
    "3841": {
      "fn": "ERC4973._burn",
      "offset": [
        6581,
        6600
      ],
      "op": "SWAP2",
      "path": "41"
    },
    "3842": {
      "fn": "ERC4973._burn",
      "offset": [
        6581,
        6600
      ],
      "op": "MSTORE",
      "path": "41"
    },
    "3843": {
      "fn": "ERC4973._burn",
      "offset": [
        6581,
        6600
      ],
      "op": "DUP2",
      "path": "41"
    },
    "3844": {
      "fn": "ERC4973._burn",
      "offset": [
        6581,
        6600
      ],
      "op": "KECCAK256",
      "path": "41"
    },
    "3845": {
      "fn": "ERC4973._burn",
      "offset": [
        6574,
        6600
      ],
      "op": "PUSH2",
      "path": "41",
      "value": "0xF0D"
    },
    "3848": {
      "fn": "ERC4973._burn",
      "offset": [
        6574,
        6600
      ],
      "op": "SWAP2",
      "path": "41"
    },
    "3849": {
      "fn": "ERC4973._burn",
      "offset": [
        6574,
        6600
      ],
      "op": "PUSH2",
      "path": "41",
      "value": "0x1403"
    },
    "3852": {
      "fn": "ERC4973._burn",
      "jump": "i",
      "offset": [
        6574,
        6600
      ],
      "op": "JUMP",
      "path": "41"
    },
    "3853": {
      "fn": "ERC4973._burn",
      "offset": [
        6574,
        6600
      ],
      "op": "JUMPDEST",
      "path": "41"
    },
    "3854": {
      "fn": "ERC4973._burn",
      "offset": [
        6616,
        6638
      ],
      "op": "PUSH1",
      "path": "41",
      "statement": 54,
      "value": "0x40"
    },
    "3856": {
      "fn": "ERC4973._burn",
      "offset": [
        6616,
        6638
      ],
      "op": "MLOAD",
      "path": "41"
    },
    "3857": {
      "fn": "ERC4973._burn",
      "offset": [
        6630,
        6637
      ],
      "op": "DUP3",
      "path": "41"
    },
    "3858": {
      "fn": "ERC4973._burn",
      "offset": [
        6630,
        6637
      ],
      "op": "SWAP1",
      "path": "41"
    },
    "3859": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3861": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3863": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3865": {
      "op": "SHL"
    },
    "3866": {
      "op": "SUB"
    },
    "3867": {
      "fn": "ERC4973._burn",
      "offset": [
        6616,
        6638
      ],
      "op": "DUP4",
      "path": "41"
    },
    "3868": {
      "fn": "ERC4973._burn",
      "offset": [
        6616,
        6638
      ],
      "op": "AND",
      "path": "41"
    },
    "3869": {
      "fn": "ERC4973._burn",
      "offset": [
        6616,
        6638
      ],
      "op": "SWAP1",
      "path": "41"
    },
    "3870": {
      "fn": "ERC4973._burn",
      "offset": [
        6616,
        6638
      ],
      "op": "PUSH32",
      "path": "41",
      "value": "0xEC9AB91322523C899EDE7830EC9BFC992B5981CDCC27B91162FB23DE5791117B"
    },
    "3903": {
      "fn": "ERC4973._burn",
      "offset": [
        6616,
        6638
      ],
      "op": "SWAP1",
      "path": "41"
    },
    "3904": {
      "fn": "ERC4973._burn",
      "offset": [
        6616,
        6638
      ],
      "op": "PUSH1",
      "path": "41",
      "value": "0x0"
    },
    "3906": {
      "fn": "ERC4973._burn",
      "offset": [
        6616,
        6638
      ],
      "op": "SWAP1",
      "path": "41"
    },
    "3907": {
      "fn": "ERC4973._burn",
      "offset": [
        6616,
        6638
      ],
      "op": "LOG3",
      "path": "41"
    },
    "3908": {
      "fn": "ERC4973._burn",
      "offset": [
        6457,
        6645
      ],
      "op": "POP",
      "path": "41"
    },
    "3909": {
      "fn": "ERC4973._burn",
      "offset": [
        6408,
        6645
      ],
      "op": "POP",
      "path": "41"
    },
    "3910": {
      "fn": "ERC4973._burn",
      "jump": "o",
      "offset": [
        6408,
        6645
      ],
      "op": "JUMP",
      "path": "41"
    },
    "3911": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2270,
        2457
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "3912": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2362,
        2368
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x5"
    },
    "3914": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2362,
        2368
      ],
      "op": "DUP1",
      "path": "0"
    },
    "3915": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2362,
        2368
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "3916": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3918": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3920": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3922": {
      "op": "SHL"
    },
    "3923": {
      "op": "SUB"
    },
    "3924": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2378,
        2395
      ],
      "op": "DUP4",
      "path": "0",
      "statement": 55
    },
    "3925": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2378,
        2395
      ],
      "op": "DUP2",
      "path": "0"
    },
    "3926": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2378,
        2395
      ],
      "op": "AND",
      "path": "0"
    },
    "3927": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3929": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3931": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3933": {
      "op": "SHL"
    },
    "3934": {
      "op": "SUB"
    },
    "3935": {
      "op": "NOT"
    },
    "3936": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2378,
        2395
      ],
      "op": "DUP4",
      "path": "0"
    },
    "3937": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2378,
        2395
      ],
      "op": "AND",
      "path": "0"
    },
    "3938": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2378,
        2395
      ],
      "op": "DUP2",
      "path": "0"
    },
    "3939": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2378,
        2395
      ],
      "op": "OR",
      "path": "0"
    },
    "3940": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2378,
        2395
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3941": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2378,
        2395
      ],
      "op": "SWAP4",
      "path": "0"
    },
    "3942": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2378,
        2395
      ],
      "op": "SSTORE",
      "path": "0"
    },
    "3943": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2410,
        2450
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 56,
      "value": "0x40"
    },
    "3945": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2410,
        2450
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "3946": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2362,
        2368
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "3947": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2362,
        2368
      ],
      "op": "AND",
      "path": "0"
    },
    "3948": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2362,
        2368
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "3949": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2378,
        2395
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3950": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2362,
        2368
      ],
      "op": "DUP3",
      "path": "0"
    },
    "3951": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2362,
        2368
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3952": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2410,
        2450
      ],
      "op": "PUSH32",
      "path": "0",
      "value": "0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
    },
    "3985": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2410,
        2450
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3986": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2343,
        2359
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "3988": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2343,
        2359
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3989": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2410,
        2450
      ],
      "op": "LOG3",
      "path": "0"
    },
    "3990": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2333,
        2457
      ],
      "op": "POP",
      "path": "0"
    },
    "3991": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2270,
        2457
      ],
      "op": "POP",
      "path": "0"
    },
    "3992": {
      "fn": "Ownable._transferOwnership",
      "jump": "o",
      "offset": [
        2270,
        2457
      ],
      "op": "JUMP",
      "path": "0"
    },
    "3993": {
      "fn": "Soulbound._setBaseURI",
      "offset": [
        7029,
        7263
      ],
      "op": "JUMPDEST",
      "path": "37"
    },
    "3994": {
      "fn": "Soulbound._setBaseURI",
      "offset": [
        7158,
        7166
      ],
      "op": "DUP1",
      "path": "37",
      "statement": 57
    },
    "3995": {
      "fn": "Soulbound._setBaseURI",
      "offset": [
        7152,
        7174
      ],
      "op": "MLOAD",
      "path": "37"
    },
    "3996": {
      "fn": "Soulbound._setBaseURI",
      "offset": [
        7178,
        7179
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0x0"
    },
    "3998": {
      "branch": 100,
      "fn": "Soulbound._setBaseURI",
      "offset": [
        7152,
        7179
      ],
      "op": "SUB",
      "path": "37"
    },
    "3999": {
      "fn": "Soulbound._setBaseURI",
      "offset": [
        7144,
        7198
      ],
      "op": "PUSH2",
      "path": "37",
      "value": "0xFDB"
    },
    "4002": {
      "branch": 100,
      "fn": "Soulbound._setBaseURI",
      "offset": [
        7144,
        7198
      ],
      "op": "JUMPI",
      "path": "37"
    },
    "4003": {
      "fn": "Soulbound._setBaseURI",
      "offset": [
        7144,
        7198
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0x40"
    },
    "4005": {
      "fn": "Soulbound._setBaseURI",
      "offset": [
        7144,
        7198
      ],
      "op": "MLOAD",
      "path": "37"
    },
    "4006": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "4010": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "4012": {
      "op": "SHL"
    },
    "4013": {
      "fn": "Soulbound._setBaseURI",
      "offset": [
        7144,
        7198
      ],
      "op": "DUP2",
      "path": "37"
    },
    "4014": {
      "fn": "Soulbound._setBaseURI",
      "offset": [
        7144,
        7198
      ],
      "op": "MSTORE",
      "path": "37"
    },
    "4015": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4017": {
      "fn": "Soulbound._setBaseURI",
      "offset": [
        7144,
        7198
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0x4"
    },
    "4019": {
      "fn": "Soulbound._setBaseURI",
      "offset": [
        7144,
        7198
      ],
      "op": "DUP3",
      "path": "37"
    },
    "4020": {
      "fn": "Soulbound._setBaseURI",
      "offset": [
        7144,
        7198
      ],
      "op": "ADD",
      "path": "37"
    },
    "4021": {
      "op": "MSTORE"
    },
    "4022": {
      "op": "PUSH1",
      "value": "0xE"
    },
    "4024": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "4026": {
      "op": "DUP3"
    },
    "4027": {
      "op": "ADD"
    },
    "4028": {
      "op": "MSTORE"
    },
    "4029": {
      "op": "PUSH14",
      "value": "0x92DCECC2D8D2C840D8CADCCEE8D"
    },
    "4044": {
      "op": "PUSH1",
      "value": "0x93"
    },
    "4046": {
      "op": "SHL"
    },
    "4047": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "4049": {
      "op": "DUP3"
    },
    "4050": {
      "op": "ADD"
    },
    "4051": {
      "op": "MSTORE"
    },
    "4052": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "4054": {
      "op": "ADD"
    },
    "4055": {
      "fn": "Soulbound._setBaseURI",
      "offset": [
        7144,
        7198
      ],
      "op": "PUSH2",
      "path": "37",
      "value": "0x422"
    },
    "4058": {
      "op": "JUMP"
    },
    "4059": {
      "fn": "Soulbound._setBaseURI",
      "offset": [
        7144,
        7198
      ],
      "op": "JUMPDEST",
      "path": "37"
    },
    "4060": {
      "fn": "Soulbound._setBaseURI",
      "offset": [
        7238,
        7245
      ],
      "op": "PUSH1",
      "path": "37",
      "statement": 58,
      "value": "0x6"
    },
    "4062": {
      "fn": "Soulbound._setBaseURI",
      "offset": [
        7238,
        7256
      ],
      "op": "PUSH2",
      "path": "37",
      "value": "0xFE7"
    },
    "4065": {
      "fn": "Soulbound._setBaseURI",
      "offset": [
        7248,
        7256
      ],
      "op": "DUP3",
      "path": "37"
    },
    "4066": {
      "fn": "Soulbound._setBaseURI",
      "offset": [
        7238,
        7245
      ],
      "op": "DUP3",
      "path": "37"
    },
    "4067": {
      "fn": "Soulbound._setBaseURI",
      "offset": [
        7238,
        7256
      ],
      "op": "PUSH2",
      "path": "37",
      "value": "0x1947"
    },
    "4070": {
      "fn": "Soulbound._setBaseURI",
      "jump": "i",
      "offset": [
        7238,
        7256
      ],
      "op": "JUMP",
      "path": "37"
    },
    "4071": {
      "fn": "Soulbound._setBaseURI",
      "offset": [
        7238,
        7256
      ],
      "op": "JUMPDEST",
      "path": "37"
    },
    "4072": {
      "fn": "Soulbound._setBaseURI",
      "offset": [
        7238,
        7256
      ],
      "op": "POP",
      "path": "37"
    },
    "4073": {
      "fn": "Soulbound._setBaseURI",
      "offset": [
        7029,
        7263
      ],
      "op": "POP",
      "path": "37"
    },
    "4074": {
      "fn": "Soulbound._setBaseURI",
      "jump": "o",
      "offset": [
        7029,
        7263
      ],
      "op": "JUMP",
      "path": "37"
    },
    "4075": {
      "fn": "Soulbound.issue",
      "offset": [
        2196,
        2501
      ],
      "op": "JUMPDEST",
      "path": "37"
    },
    "4076": {
      "fn": "Soulbound.issue",
      "offset": [
        2314,
        2318
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0x0"
    },
    "4078": {
      "fn": "Soulbound.issue",
      "offset": [
        2400,
        2443
      ],
      "op": "PUSH2",
      "path": "37",
      "statement": 59,
      "value": "0xFF8"
    },
    "4081": {
      "fn": "Soulbound.issue",
      "offset": [
        2419,
        2422
      ],
      "op": "DUP5",
      "path": "37"
    },
    "4082": {
      "fn": "Soulbound.issue",
      "offset": [
        2424,
        2432
      ],
      "op": "DUP5",
      "path": "37"
    },
    "4083": {
      "fn": "Soulbound.issue",
      "offset": [
        2434,
        2442
      ],
      "op": "DUP5",
      "path": "37"
    },
    "4084": {
      "fn": "Soulbound.issue",
      "offset": [
        2400,
        2418
      ],
      "op": "PUSH2",
      "path": "37",
      "value": "0x123E"
    },
    "4087": {
      "fn": "Soulbound.issue",
      "jump": "i",
      "offset": [
        2400,
        2443
      ],
      "op": "JUMP",
      "path": "37"
    },
    "4088": {
      "fn": "Soulbound.issue",
      "offset": [
        2400,
        2443
      ],
      "op": "JUMPDEST",
      "path": "37"
    },
    "4089": {
      "op": "POP"
    },
    "4090": {
      "fn": "Soulbound.issue",
      "offset": [
        2490,
        2494
      ],
      "op": "PUSH1",
      "path": "37",
      "statement": 60,
      "value": "0x1"
    },
    "4092": {
      "fn": "Soulbound.issue",
      "offset": [
        2196,
        2501
      ],
      "op": "SWAP4",
      "path": "37"
    },
    "4093": {
      "fn": "Soulbound.issue",
      "offset": [
        2196,
        2501
      ],
      "op": "SWAP3",
      "path": "37"
    },
    "4094": {
      "fn": "Soulbound.issue",
      "offset": [
        2196,
        2501
      ],
      "op": "POP",
      "path": "37"
    },
    "4095": {
      "fn": "Soulbound.issue",
      "offset": [
        2196,
        2501
      ],
      "op": "POP",
      "path": "37"
    },
    "4096": {
      "fn": "Soulbound.issue",
      "offset": [
        2196,
        2501
      ],
      "op": "POP",
      "path": "37"
    },
    "4097": {
      "fn": "Soulbound.issue",
      "jump": "o",
      "offset": [
        2196,
        2501
      ],
      "op": "JUMP",
      "path": "37"
    },
    "4098": {
      "fn": "Allowlist._verifySignature",
      "offset": [
        3622,
        4677
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "4099": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x5"
    },
    "4101": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "4102": {
      "fn": "Allowlist._verifySignature",
      "offset": [
        3732,
        3736
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x0"
    },
    "4104": {
      "fn": "Allowlist._verifySignature",
      "offset": [
        3732,
        3736
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "4105": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4107": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4109": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4111": {
      "op": "SHL"
    },
    "4112": {
      "op": "SUB"
    },
    "4113": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "AND",
      "path": "0"
    },
    "4114": {
      "fn": "Context._msgSender",
      "offset": [
        719,
        729
      ],
      "op": "CALLER",
      "path": "5"
    },
    "4115": {
      "offset": [
        1248,
        1271
      ],
      "op": "EQ",
      "path": "0"
    },
    "4116": {
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x102F"
    },
    "4119": {
      "offset": [
        1240,
        1308
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "4120": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "4122": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "4123": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "4127": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "4129": {
      "op": "SHL"
    },
    "4130": {
      "offset": [
        1240,
        1308
      ],
      "op": "DUP2",
      "path": "0"
    },
    "4131": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "4132": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "4134": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "ADD",
      "path": "0"
    },
    "4135": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x422"
    },
    "4138": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "4139": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1812"
    },
    "4142": {
      "fn": "Context._msgSender",
      "jump": "i",
      "offset": [
        1240,
        1308
      ],
      "op": "JUMP",
      "path": "0"
    },
    "4143": {
      "fn": "Context._msgSender",
      "offset": [
        1240,
        1308
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "4144": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x5"
    },
    "4146": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "4147": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4149": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4151": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4153": {
      "op": "SHL"
    },
    "4154": {
      "op": "SUB"
    },
    "4155": {
      "fn": "Ownable.owner",
      "offset": [
        1108,
        1114
      ],
      "op": "AND",
      "path": "0"
    },
    "4156": {
      "fn": "Context._msgSender",
      "offset": [
        719,
        729
      ],
      "op": "CALLER",
      "path": "5"
    },
    "4157": {
      "branch": 87,
      "fn": "Allowlist._verifySignature",
      "offset": [
        3897,
        3920
      ],
      "op": "EQ",
      "path": "14",
      "statement": 61
    },
    "4158": {
      "fn": "Allowlist._verifySignature",
      "offset": [
        3876,
        3989
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x109D"
    },
    "4161": {
      "branch": 87,
      "fn": "Allowlist._verifySignature",
      "offset": [
        3876,
        3989
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "4162": {
      "fn": "Allowlist._verifySignature",
      "offset": [
        3876,
        3989
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x40"
    },
    "4164": {
      "fn": "Allowlist._verifySignature",
      "offset": [
        3876,
        3989
      ],
      "op": "MLOAD",
      "path": "14"
    },
    "4165": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "4169": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "4171": {
      "op": "SHL"
    },
    "4172": {
      "fn": "Allowlist._verifySignature",
      "offset": [
        3876,
        3989
      ],
      "op": "DUP2",
      "path": "14"
    },
    "4173": {
      "fn": "Allowlist._verifySignature",
      "offset": [
        3876,
        3989
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "4174": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4176": {
      "fn": "Allowlist._verifySignature",
      "offset": [
        3876,
        3989
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x4"
    },
    "4178": {
      "fn": "Allowlist._verifySignature",
      "offset": [
        3876,
        3989
      ],
      "op": "DUP3",
      "path": "14"
    },
    "4179": {
      "fn": "Allowlist._verifySignature",
      "offset": [
        3876,
        3989
      ],
      "op": "ADD",
      "path": "14"
    },
    "4180": {
      "op": "MSTORE"
    },
    "4181": {
      "op": "PUSH1",
      "value": "0x2B"
    },
    "4183": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "4185": {
      "op": "DUP3"
    },
    "4186": {
      "op": "ADD"
    },
    "4187": {
      "op": "MSTORE"
    },
    "4188": {
      "op": "PUSH32",
      "value": "0x4552433732313A3A2043616C6C20746F20636F6E7472616374206D6164652062"
    },
    "4221": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "4223": {
      "op": "DUP3"
    },
    "4224": {
      "op": "ADD"
    },
    "4225": {
      "op": "MSTORE"
    },
    "4226": {
      "op": "PUSH11",
      "value": "0x3C903737B716B7BBB732B9"
    },
    "4238": {
      "op": "PUSH1",
      "value": "0xA9"
    },
    "4240": {
      "op": "SHL"
    },
    "4241": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "4243": {
      "op": "DUP3"
    },
    "4244": {
      "op": "ADD"
    },
    "4245": {
      "op": "MSTORE"
    },
    "4246": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "4248": {
      "op": "ADD"
    },
    "4249": {
      "fn": "Allowlist._verifySignature",
      "offset": [
        3876,
        3989
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x422"
    },
    "4252": {
      "op": "JUMP"
    },
    "4253": {
      "fn": "Allowlist._verifySignature",
      "offset": [
        3876,
        3989
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "4254": {
      "fn": "Allowlist._verifySignature",
      "offset": [
        4067,
        4070
      ],
      "op": "DUP2",
      "path": "14",
      "statement": 62
    },
    "4255": {
      "fn": "Allowlist._verifySignature",
      "offset": [
        4067,
        4077
      ],
      "op": "MLOAD",
      "path": "14"
    },
    "4256": {
      "fn": "Allowlist._verifySignature",
      "offset": [
        4081,
        4083
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x41"
    },
    "4258": {
      "branch": 88,
      "fn": "Allowlist._verifySignature",
      "offset": [
        4067,
        4083
      ],
      "op": "EQ",
      "path": "14"
    },
    "4259": {
      "fn": "Allowlist._verifySignature",
      "offset": [
        4059,
        4118
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x10EE"
    },
    "4262": {
      "branch": 88,
      "fn": "Allowlist._verifySignature",
      "offset": [
        4059,
        4118
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "4263": {
      "fn": "Allowlist._verifySignature",
      "offset": [
        4059,
        4118
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x40"
    },
    "4265": {
      "fn": "Allowlist._verifySignature",
      "offset": [
        4059,
        4118
      ],
      "op": "MLOAD",
      "path": "14"
    },
    "4266": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "4270": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "4272": {
      "op": "SHL"
    },
    "4273": {
      "fn": "Allowlist._verifySignature",
      "offset": [
        4059,
        4118
      ],
      "op": "DUP2",
      "path": "14"
    },
    "4274": {
      "fn": "Allowlist._verifySignature",
      "offset": [
        4059,
        4118
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "4275": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4277": {
      "fn": "Allowlist._verifySignature",
      "offset": [
        4059,
        4118
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x4"
    },
    "4279": {
      "fn": "Allowlist._verifySignature",
      "offset": [
        4059,
        4118
      ],
      "op": "DUP3",
      "path": "14"
    },
    "4280": {
      "fn": "Allowlist._verifySignature",
      "offset": [
        4059,
        4118
      ],
      "op": "ADD",
      "path": "14"
    },
    "4281": {
      "op": "MSTORE"
    },
    "4282": {
      "op": "PUSH1",
      "value": "0x1E"
    },
    "4284": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "4286": {
      "op": "DUP3"
    },
    "4287": {
      "op": "ADD"
    },
    "4288": {
      "op": "MSTORE"
    },
    "4289": {
      "op": "PUSH32",
      "value": "0x4572723A3A20496E76616C6964207369676E6174757265206C656E6774680000"
    },
    "4322": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "4324": {
      "op": "DUP3"
    },
    "4325": {
      "op": "ADD"
    },
    "4326": {
      "op": "MSTORE"
    },
    "4327": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "4329": {
      "op": "ADD"
    },
    "4330": {
      "fn": "Allowlist._verifySignature",
      "offset": [
        4059,
        4118
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x422"
    },
    "4333": {
      "op": "JUMP"
    },
    "4334": {
      "fn": "Allowlist._verifySignature",
      "offset": [
        4059,
        4118
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "4335": {
      "fn": "Allowlist.splitSignature",
      "offset": [
        6067,
        6069
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x20"
    },
    "4337": {
      "fn": "Allowlist.splitSignature",
      "offset": [
        6058,
        6070
      ],
      "op": "DUP3",
      "path": "14"
    },
    "4338": {
      "fn": "Allowlist.splitSignature",
      "offset": [
        6058,
        6070
      ],
      "op": "DUP2",
      "path": "14"
    },
    "4339": {
      "fn": "Allowlist.splitSignature",
      "offset": [
        6058,
        6070
      ],
      "op": "ADD",
      "path": "14"
    },
    "4340": {
      "fn": "Allowlist.splitSignature",
      "offset": [
        6052,
        6071
      ],
      "op": "MLOAD",
      "path": "14"
    },
    "4341": {
      "fn": "Allowlist.splitSignature",
      "offset": [
        6142,
        6144
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x40"
    },
    "4343": {
      "fn": "Allowlist.splitSignature",
      "offset": [
        6133,
        6145
      ],
      "op": "DUP1",
      "path": "14"
    },
    "4344": {
      "fn": "Allowlist.splitSignature",
      "offset": [
        6133,
        6145
      ],
      "op": "DUP6",
      "path": "14"
    },
    "4345": {
      "fn": "Allowlist.splitSignature",
      "offset": [
        6133,
        6145
      ],
      "op": "ADD",
      "path": "14"
    },
    "4346": {
      "fn": "Allowlist.splitSignature",
      "offset": [
        6127,
        6146
      ],
      "op": "MLOAD",
      "path": "14"
    },
    "4347": {
      "fn": "Allowlist.splitSignature",
      "offset": [
        6254,
        6256
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x60"
    },
    "4349": {
      "fn": "Allowlist.splitSignature",
      "offset": [
        6245,
        6257
      ],
      "op": "DUP1",
      "path": "14"
    },
    "4350": {
      "fn": "Allowlist.splitSignature",
      "offset": [
        6245,
        6257
      ],
      "op": "DUP8",
      "path": "14"
    },
    "4351": {
      "fn": "Allowlist.splitSignature",
      "offset": [
        6245,
        6257
      ],
      "op": "ADD",
      "path": "14"
    },
    "4352": {
      "fn": "Allowlist.splitSignature",
      "offset": [
        6239,
        6258
      ],
      "op": "MLOAD",
      "path": "14"
    },
    "4353": {
      "fn": "Allowlist._verifySignature",
      "offset": [
        4331,
        4355
      ],
      "op": "DUP4",
      "path": "14"
    },
    "4354": {
      "fn": "Allowlist._verifySignature",
      "offset": [
        4331,
        4355
      ],
      "op": "MLOAD",
      "path": "14"
    },
    "4355": {
      "fn": "Allowlist._verifySignature",
      "offset": [
        4197,
        4206
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x0"
    },
    "4357": {
      "fn": "Allowlist._verifySignature",
      "offset": [
        4331,
        4355
      ],
      "op": "DUP1",
      "path": "14"
    },
    "4358": {
      "fn": "Allowlist._verifySignature",
      "offset": [
        4331,
        4355
      ],
      "op": "DUP3",
      "path": "14"
    },
    "4359": {
      "fn": "Allowlist._verifySignature",
      "offset": [
        4331,
        4355
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "4360": {
      "fn": "Allowlist._verifySignature",
      "offset": [
        4331,
        4355
      ],
      "op": "SWAP7",
      "path": "14"
    },
    "4361": {
      "fn": "Allowlist._verifySignature",
      "offset": [
        4331,
        4355
      ],
      "op": "DUP2",
      "path": "14"
    },
    "4362": {
      "fn": "Allowlist._verifySignature",
      "offset": [
        4331,
        4355
      ],
      "op": "ADD",
      "path": "14"
    },
    "4363": {
      "fn": "Allowlist._verifySignature",
      "offset": [
        4331,
        4355
      ],
      "op": "DUP1",
      "path": "14"
    },
    "4364": {
      "fn": "Allowlist._verifySignature",
      "offset": [
        4331,
        4355
      ],
      "op": "DUP7",
      "path": "14"
    },
    "4365": {
      "fn": "Allowlist._verifySignature",
      "offset": [
        4331,
        4355
      ],
      "op": "MSTORE",
      "path": "14"
    },
    "4366": {
      "op": "DUP11"
    },
    "4367": {
      "op": "SWAP1"
    },
    "4368": {
      "op": "MSTORE"
    },
    "4369": {
      "fn": "Allowlist.splitSignature",
      "offset": [
        6231,
        6259
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "4370": {
      "fn": "Allowlist.splitSignature",
      "offset": [
        6231,
        6259
      ],
      "op": "DUP7",
      "path": "14"
    },
    "4371": {
      "fn": "Allowlist.splitSignature",
      "offset": [
        6231,
        6259
      ],
      "op": "BYTE",
      "path": "14"
    },
    "4372": {
      "op": "SWAP4"
    },
    "4373": {
      "op": "DUP2"
    },
    "4374": {
      "op": "ADD"
    },
    "4375": {
      "op": "DUP5"
    },
    "4376": {
      "op": "SWAP1"
    },
    "4377": {
      "op": "MSTORE"
    },
    "4378": {
      "op": "SWAP1"
    },
    "4379": {
      "op": "DUP2"
    },
    "4380": {
      "op": "ADD"
    },
    "4381": {
      "op": "DUP5"
    },
    "4382": {
      "op": "SWAP1"
    },
    "4383": {
      "op": "MSTORE"
    },
    "4384": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "4386": {
      "op": "DUP2"
    },
    "4387": {
      "op": "ADD"
    },
    "4388": {
      "op": "DUP3"
    },
    "4389": {
      "op": "SWAP1"
    },
    "4390": {
      "op": "MSTORE"
    },
    "4391": {
      "fn": "Allowlist.splitSignature",
      "offset": [
        6052,
        6071
      ],
      "op": "SWAP3",
      "path": "14"
    },
    "4392": {
      "fn": "Allowlist.splitSignature",
      "offset": [
        6052,
        6071
      ],
      "op": "SWAP4",
      "path": "14"
    },
    "4393": {
      "fn": "Allowlist.splitSignature",
      "offset": [
        6127,
        6146
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "4394": {
      "fn": "Allowlist.splitSignature",
      "offset": [
        6127,
        6146
      ],
      "op": "SWAP3",
      "path": "14"
    },
    "4395": {
      "fn": "Allowlist._verifySignature",
      "offset": [
        4331,
        4355
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x1"
    },
    "4397": {
      "fn": "Allowlist._verifySignature",
      "offset": [
        4331,
        4355
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "4398": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4400": {
      "op": "ADD"
    },
    "4401": {
      "fn": "Allowlist._verifySignature",
      "offset": [
        4331,
        4355
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x20"
    },
    "4403": {
      "fn": "Allowlist._verifySignature",
      "offset": [
        4331,
        4355
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x40"
    },
    "4405": {
      "fn": "Allowlist._verifySignature",
      "offset": [
        4331,
        4355
      ],
      "op": "MLOAD",
      "path": "14"
    },
    "4406": {
      "fn": "Allowlist._verifySignature",
      "offset": [
        4331,
        4355
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x20"
    },
    "4408": {
      "fn": "Allowlist._verifySignature",
      "offset": [
        4331,
        4355
      ],
      "op": "DUP2",
      "path": "14"
    },
    "4409": {
      "fn": "Allowlist._verifySignature",
      "offset": [
        4331,
        4355
      ],
      "op": "SUB",
      "path": "14"
    },
    "4410": {
      "fn": "Allowlist._verifySignature",
      "offset": [
        4331,
        4355
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "4411": {
      "fn": "Allowlist._verifySignature",
      "offset": [
        4331,
        4355
      ],
      "op": "DUP1",
      "path": "14"
    },
    "4412": {
      "fn": "Allowlist._verifySignature",
      "offset": [
        4331,
        4355
      ],
      "op": "DUP5",
      "path": "14"
    },
    "4413": {
      "fn": "Allowlist._verifySignature",
      "offset": [
        4331,
        4355
      ],
      "op": "SUB",
      "path": "14"
    },
    "4414": {
      "fn": "Allowlist._verifySignature",
      "offset": [
        4331,
        4355
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "4415": {
      "fn": "Allowlist._verifySignature",
      "offset": [
        4331,
        4355
      ],
      "op": "DUP6",
      "path": "14"
    },
    "4416": {
      "fn": "Allowlist._verifySignature",
      "offset": [
        4331,
        4355
      ],
      "op": "GAS",
      "path": "14"
    },
    "4417": {
      "fn": "Allowlist._verifySignature",
      "offset": [
        4331,
        4355
      ],
      "op": "STATICCALL",
      "path": "14"
    },
    "4418": {
      "fn": "Allowlist._verifySignature",
      "offset": [
        4331,
        4355
      ],
      "op": "ISZERO",
      "path": "14"
    },
    "4419": {
      "fn": "Allowlist._verifySignature",
      "offset": [
        4331,
        4355
      ],
      "op": "DUP1",
      "path": "14"
    },
    "4420": {
      "fn": "Allowlist._verifySignature",
      "offset": [
        4331,
        4355
      ],
      "op": "ISZERO",
      "path": "14"
    },
    "4421": {
      "fn": "Allowlist._verifySignature",
      "offset": [
        4331,
        4355
      ],
      "op": "PUSH2",
      "path": "14",
      "value": "0x1152"
    },
    "4424": {
      "fn": "Allowlist._verifySignature",
      "offset": [
        4331,
        4355
      ],
      "op": "JUMPI",
      "path": "14"
    },
    "4425": {
      "fn": "Allowlist._verifySignature",
      "offset": [
        4331,
        4355
      ],
      "op": "RETURNDATASIZE",
      "path": "14"
    },
    "4426": {
      "fn": "Allowlist._verifySignature",
      "offset": [
        4331,
        4355
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x0"
    },
    "4428": {
      "fn": "Allowlist._verifySignature",
      "offset": [
        4331,
        4355
      ],
      "op": "DUP1",
      "path": "14"
    },
    "4429": {
      "fn": "Allowlist._verifySignature",
      "offset": [
        4331,
        4355
      ],
      "op": "RETURNDATACOPY",
      "path": "14"
    },
    "4430": {
      "fn": "Allowlist._verifySignature",
      "offset": [
        4331,
        4355
      ],
      "op": "RETURNDATASIZE",
      "path": "14"
    },
    "4431": {
      "fn": "Allowlist._verifySignature",
      "offset": [
        4331,
        4355
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x0"
    },
    "4433": {
      "fn": "Allowlist._verifySignature",
      "offset": [
        4331,
        4355
      ],
      "op": "REVERT",
      "path": "14"
    },
    "4434": {
      "fn": "Allowlist._verifySignature",
      "offset": [
        4331,
        4355
      ],
      "op": "JUMPDEST",
      "path": "14"
    },
    "4435": {
      "op": "POP"
    },
    "4436": {
      "op": "POP"
    },
    "4437": {
      "fn": "Allowlist._verifySignature",
      "offset": [
        4331,
        4355
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x40"
    },
    "4439": {
      "fn": "Allowlist._verifySignature",
      "offset": [
        4331,
        4355
      ],
      "op": "MLOAD",
      "path": "14"
    },
    "4440": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "4442": {
      "op": "NOT"
    },
    "4443": {
      "fn": "Allowlist._verifySignature",
      "offset": [
        4331,
        4355
      ],
      "op": "DUP2",
      "path": "14"
    },
    "4444": {
      "fn": "Allowlist._verifySignature",
      "offset": [
        4331,
        4355
      ],
      "op": "ADD",
      "path": "14"
    },
    "4445": {
      "fn": "Allowlist._verifySignature",
      "offset": [
        4331,
        4355
      ],
      "op": "MLOAD",
      "path": "14"
    },
    "4446": {
      "fn": "Allowlist._verifySignature",
      "offset": [
        4469,
        4483
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x8"
    },
    "4448": {
      "fn": "Allowlist._verifySignature",
      "offset": [
        4469,
        4483
      ],
      "op": "SLOAD",
      "path": "14"
    },
    "4449": {
      "fn": "Allowlist._verifySignature",
      "offset": [
        4331,
        4355
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "4450": {
      "fn": "Allowlist._verifySignature",
      "offset": [
        4331,
        4355
      ],
      "op": "SWAP4",
      "path": "14"
    },
    "4451": {
      "op": "POP"
    },
    "4452": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4454": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4456": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4458": {
      "op": "SHL"
    },
    "4459": {
      "op": "SUB"
    },
    "4460": {
      "fn": "Allowlist._verifySignature",
      "offset": [
        4459,
        4483
      ],
      "op": "DUP1",
      "path": "14"
    },
    "4461": {
      "fn": "Allowlist._verifySignature",
      "offset": [
        4459,
        4483
      ],
      "op": "DUP6",
      "path": "14"
    },
    "4462": {
      "fn": "Allowlist._verifySignature",
      "offset": [
        4459,
        4483
      ],
      "op": "AND",
      "path": "14"
    },
    "4463": {
      "fn": "Allowlist._verifySignature",
      "offset": [
        4469,
        4483
      ],
      "op": "SWAP2",
      "path": "14"
    },
    "4464": {
      "fn": "Allowlist._verifySignature",
      "offset": [
        4469,
        4483
      ],
      "op": "AND",
      "path": "14"
    },
    "4465": {
      "fn": "Allowlist._verifySignature",
      "offset": [
        4459,
        4483
      ],
      "op": "EQ",
      "path": "14"
    },
    "4466": {
      "fn": "Allowlist._verifySignature",
      "offset": [
        4459,
        4483
      ],
      "op": "SWAP2",
      "path": "14"
    },
    "4467": {
      "op": "POP"
    },
    "4468": {
      "fn": "Allowlist._verifySignature",
      "offset": [
        4459,
        4483
      ],
      "op": "DUP2",
      "path": "14"
    },
    "4469": {
      "fn": "Allowlist._verifySignature",
      "offset": [
        4459,
        4483
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "4470": {
      "fn": "Allowlist._verifySignature",
      "offset": [
        4566,
        4570
      ],
      "op": "DUP10",
      "path": "14",
      "statement": 63
    },
    "4471": {
      "fn": "Allowlist._verifySignature",
      "offset": [
        4566,
        4570
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "4472": {
      "fn": "Allowlist._verifySignature",
      "offset": [
        4550,
        4595
      ],
      "op": "PUSH32",
      "path": "14",
      "value": "0x7E4FE2A2A805A357593FDBDDE58C02F6A53D8B4960744CD31A98697FC11C2E36"
    },
    "4505": {
      "fn": "Allowlist._verifySignature",
      "offset": [
        4550,
        4595
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "4506": {
      "fn": "Allowlist._verifySignature",
      "offset": [
        4428,
        4455
      ],
      "op": "PUSH1",
      "path": "14",
      "value": "0x0"
    },
    "4508": {
      "fn": "Allowlist._verifySignature",
      "offset": [
        4428,
        4455
      ],
      "op": "SWAP1",
      "path": "14"
    },
    "4509": {
      "fn": "Allowlist._verifySignature",
      "offset": [
        4550,
        4595
      ],
      "op": "LOG3",
      "path": "14"
    },
    "4510": {
      "fn": "Allowlist._verifySignature",
      "offset": [
        4648,
        4670
      ],
      "op": "SWAP8",
      "path": "14",
      "statement": 64
    },
    "4511": {
      "fn": "Allowlist._verifySignature",
      "offset": [
        3622,
        4677
      ],
      "op": "SWAP7",
      "path": "14"
    },
    "4512": {
      "op": "POP"
    },
    "4513": {
      "op": "POP"
    },
    "4514": {
      "op": "POP"
    },
    "4515": {
      "op": "POP"
    },
    "4516": {
      "op": "POP"
    },
    "4517": {
      "op": "POP"
    },
    "4518": {
      "op": "POP"
    },
    "4519": {
      "fn": "Allowlist._verifySignature",
      "jump": "o",
      "offset": [
        3622,
        4677
      ],
      "op": "JUMP",
      "path": "14"
    },
    "4520": {
      "fn": "Soulbound.burnSoulboundToken",
      "offset": [
        6437,
        6858
      ],
      "op": "JUMPDEST",
      "path": "37"
    },
    "4521": {
      "fn": "Soulbound.burnSoulboundToken",
      "offset": [
        6564,
        6580
      ],
      "op": "PUSH2",
      "path": "37",
      "statement": 65,
      "value": "0x11B1"
    },
    "4524": {
      "fn": "Soulbound.burnSoulboundToken",
      "offset": [
        6572,
        6579
      ],
      "op": "DUP2",
      "path": "37"
    },
    "4525": {
      "fn": "Soulbound.burnSoulboundToken",
      "offset": [
        6564,
        6571
      ],
      "op": "PUSH2",
      "path": "37",
      "value": "0xCB2"
    },
    "4528": {
      "fn": "Soulbound.burnSoulboundToken",
      "jump": "i",
      "offset": [
        6564,
        6580
      ],
      "op": "JUMP",
      "path": "37"
    },
    "4529": {
      "branch": 101,
      "fn": "Soulbound.burnSoulboundToken",
      "offset": [
        6564,
        6580
      ],
      "op": "JUMPDEST",
      "path": "37"
    },
    "4530": {
      "fn": "Soulbound.burnSoulboundToken",
      "offset": [
        6556,
        6609
      ],
      "op": "PUSH2",
      "path": "37",
      "value": "0x11FD"
    },
    "4533": {
      "branch": 101,
      "fn": "Soulbound.burnSoulboundToken",
      "offset": [
        6556,
        6609
      ],
      "op": "JUMPI",
      "path": "37"
    },
    "4534": {
      "fn": "Soulbound.burnSoulboundToken",
      "offset": [
        6556,
        6609
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0x40"
    },
    "4536": {
      "fn": "Soulbound.burnSoulboundToken",
      "offset": [
        6556,
        6609
      ],
      "op": "MLOAD",
      "path": "37"
    },
    "4537": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "4541": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "4543": {
      "op": "SHL"
    },
    "4544": {
      "fn": "Soulbound.burnSoulboundToken",
      "offset": [
        6556,
        6609
      ],
      "op": "DUP2",
      "path": "37"
    },
    "4545": {
      "fn": "Soulbound.burnSoulboundToken",
      "offset": [
        6556,
        6609
      ],
      "op": "MSTORE",
      "path": "37"
    },
    "4546": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4548": {
      "fn": "Soulbound.burnSoulboundToken",
      "offset": [
        6556,
        6609
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0x4"
    },
    "4550": {
      "fn": "Soulbound.burnSoulboundToken",
      "offset": [
        6556,
        6609
      ],
      "op": "DUP3",
      "path": "37"
    },
    "4551": {
      "fn": "Soulbound.burnSoulboundToken",
      "offset": [
        6556,
        6609
      ],
      "op": "ADD",
      "path": "37"
    },
    "4552": {
      "op": "MSTORE"
    },
    "4553": {
      "op": "PUSH1",
      "value": "0x18"
    },
    "4555": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "4557": {
      "op": "DUP3"
    },
    "4558": {
      "op": "ADD"
    },
    "4559": {
      "op": "MSTORE"
    },
    "4560": {
      "op": "PUSH32",
      "value": "0x4275726E206F6620696E6578697374656E7420746F6B656E0000000000000000"
    },
    "4593": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "4595": {
      "op": "DUP3"
    },
    "4596": {
      "op": "ADD"
    },
    "4597": {
      "op": "MSTORE"
    },
    "4598": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "4600": {
      "op": "ADD"
    },
    "4601": {
      "fn": "Soulbound.burnSoulboundToken",
      "offset": [
        6556,
        6609
      ],
      "op": "PUSH2",
      "path": "37",
      "value": "0x422"
    },
    "4604": {
      "op": "JUMP"
    },
    "4605": {
      "fn": "Soulbound.burnSoulboundToken",
      "offset": [
        6556,
        6609
      ],
      "op": "JUMPDEST",
      "path": "37"
    },
    "4606": {
      "fn": "Soulbound.burnSoulboundToken",
      "offset": [
        6664,
        6683
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0x0"
    },
    "4608": {
      "fn": "Soulbound.burnSoulboundToken",
      "offset": [
        6686,
        6702
      ],
      "op": "PUSH2",
      "path": "37",
      "value": "0x1208"
    },
    "4611": {
      "fn": "Soulbound.burnSoulboundToken",
      "offset": [
        6694,
        6701
      ],
      "op": "DUP3",
      "path": "37"
    },
    "4612": {
      "fn": "Soulbound.burnSoulboundToken",
      "offset": [
        6686,
        6693
      ],
      "op": "PUSH2",
      "path": "37",
      "value": "0x603"
    },
    "4615": {
      "fn": "Soulbound.burnSoulboundToken",
      "jump": "i",
      "offset": [
        6686,
        6702
      ],
      "op": "JUMP",
      "path": "37"
    },
    "4616": {
      "fn": "Soulbound.burnSoulboundToken",
      "offset": [
        6686,
        6702
      ],
      "op": "JUMPDEST",
      "path": "37"
    },
    "4617": {
      "fn": "Soulbound.burnSoulboundToken",
      "offset": [
        6664,
        6702
      ],
      "op": "SWAP1",
      "path": "37"
    },
    "4618": {
      "fn": "Soulbound.burnSoulboundToken",
      "offset": [
        6664,
        6702
      ],
      "op": "POP",
      "path": "37"
    },
    "4619": {
      "fn": "Soulbound.burnSoulboundToken",
      "offset": [
        6745,
        6759
      ],
      "op": "PUSH2",
      "path": "37",
      "statement": 66,
      "value": "0x1213"
    },
    "4622": {
      "fn": "Soulbound.burnSoulboundToken",
      "offset": [
        6751,
        6758
      ],
      "op": "DUP3",
      "path": "37"
    },
    "4623": {
      "fn": "Soulbound.burnSoulboundToken",
      "offset": [
        6745,
        6750
      ],
      "op": "PUSH2",
      "path": "37",
      "value": "0xEA0"
    },
    "4626": {
      "fn": "Soulbound.burnSoulboundToken",
      "jump": "i",
      "offset": [
        6745,
        6759
      ],
      "op": "JUMP",
      "path": "37"
    },
    "4627": {
      "fn": "Soulbound.burnSoulboundToken",
      "offset": [
        6745,
        6759
      ],
      "op": "JUMPDEST",
      "path": "37"
    },
    "4628": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4630": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4632": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4634": {
      "op": "SHL"
    },
    "4635": {
      "op": "SUB"
    },
    "4636": {
      "fn": "Soulbound.burnSoulboundToken",
      "offset": [
        6816,
        6834
      ],
      "op": "AND",
      "path": "37",
      "statement": 67
    },
    "4637": {
      "fn": "Soulbound.burnSoulboundToken",
      "offset": [
        6846,
        6851
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0x0"
    },
    "4639": {
      "fn": "Soulbound.burnSoulboundToken",
      "offset": [
        6816,
        6834
      ],
      "op": "SWAP1",
      "path": "37"
    },
    "4640": {
      "fn": "Soulbound.burnSoulboundToken",
      "offset": [
        6816,
        6834
      ],
      "op": "DUP2",
      "path": "37"
    },
    "4641": {
      "fn": "Soulbound.burnSoulboundToken",
      "offset": [
        6816,
        6834
      ],
      "op": "MSTORE",
      "path": "37"
    },
    "4642": {
      "fn": "Soulbound.burnSoulboundToken",
      "offset": [
        6816,
        6821
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0x7"
    },
    "4644": {
      "fn": "Soulbound.burnSoulboundToken",
      "offset": [
        6816,
        6834
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0x20"
    },
    "4646": {
      "fn": "Soulbound.burnSoulboundToken",
      "offset": [
        6816,
        6834
      ],
      "op": "SWAP1",
      "path": "37"
    },
    "4647": {
      "fn": "Soulbound.burnSoulboundToken",
      "offset": [
        6816,
        6834
      ],
      "op": "DUP2",
      "path": "37"
    },
    "4648": {
      "fn": "Soulbound.burnSoulboundToken",
      "offset": [
        6816,
        6834
      ],
      "op": "MSTORE",
      "path": "37"
    },
    "4649": {
      "fn": "Soulbound.burnSoulboundToken",
      "offset": [
        6816,
        6834
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0x40"
    },
    "4651": {
      "fn": "Soulbound.burnSoulboundToken",
      "offset": [
        6816,
        6834
      ],
      "op": "DUP1",
      "path": "37"
    },
    "4652": {
      "fn": "Soulbound.burnSoulboundToken",
      "offset": [
        6816,
        6834
      ],
      "op": "DUP4",
      "path": "37"
    },
    "4653": {
      "fn": "Soulbound.burnSoulboundToken",
      "offset": [
        6816,
        6834
      ],
      "op": "KECCAK256",
      "path": "37"
    },
    "4654": {
      "fn": "Soulbound.burnSoulboundToken",
      "offset": [
        6816,
        6843
      ],
      "op": "SWAP4",
      "path": "37"
    },
    "4655": {
      "fn": "Soulbound.burnSoulboundToken",
      "offset": [
        6816,
        6843
      ],
      "op": "DUP4",
      "path": "37"
    },
    "4656": {
      "fn": "Soulbound.burnSoulboundToken",
      "offset": [
        6816,
        6843
      ],
      "op": "MSTORE",
      "path": "37"
    },
    "4657": {
      "fn": "Soulbound.burnSoulboundToken",
      "offset": [
        6816,
        6843
      ],
      "op": "SWAP3",
      "path": "37"
    },
    "4658": {
      "fn": "Soulbound.burnSoulboundToken",
      "offset": [
        6816,
        6843
      ],
      "op": "SWAP1",
      "path": "37"
    },
    "4659": {
      "fn": "Soulbound.burnSoulboundToken",
      "offset": [
        6816,
        6843
      ],
      "op": "MSTORE",
      "path": "37"
    },
    "4660": {
      "fn": "Soulbound.burnSoulboundToken",
      "offset": [
        6816,
        6843
      ],
      "op": "KECCAK256",
      "path": "37"
    },
    "4661": {
      "fn": "Soulbound.burnSoulboundToken",
      "offset": [
        6816,
        6851
      ],
      "op": "DUP1",
      "path": "37"
    },
    "4662": {
      "fn": "Soulbound.burnSoulboundToken",
      "offset": [
        6816,
        6851
      ],
      "op": "SLOAD",
      "path": "37"
    },
    "4663": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "4665": {
      "op": "NOT"
    },
    "4666": {
      "fn": "Soulbound.burnSoulboundToken",
      "offset": [
        6816,
        6851
      ],
      "op": "AND",
      "path": "37"
    },
    "4667": {
      "fn": "Soulbound.burnSoulboundToken",
      "offset": [
        6816,
        6851
      ],
      "op": "SWAP1",
      "path": "37"
    },
    "4668": {
      "fn": "Soulbound.burnSoulboundToken",
      "offset": [
        6816,
        6851
      ],
      "op": "SSTORE",
      "path": "37"
    },
    "4669": {
      "fn": "Soulbound.burnSoulboundToken",
      "jump": "o",
      "offset": [
        6437,
        6858
      ],
      "op": "JUMP",
      "path": "37"
    },
    "4670": {
      "fn": "Soulbound.mintSoulboundToken",
      "offset": [
        5609,
        6276
      ],
      "op": "JUMPDEST",
      "path": "37"
    },
    "4671": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4673": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4675": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4677": {
      "op": "SHL"
    },
    "4678": {
      "op": "SUB"
    },
    "4679": {
      "fn": "Soulbound.mintSoulboundToken",
      "offset": [
        5816,
        5832
      ],
      "op": "DUP4",
      "path": "37",
      "statement": 68
    },
    "4680": {
      "branch": 102,
      "fn": "Soulbound.mintSoulboundToken",
      "offset": [
        5816,
        5832
      ],
      "op": "AND",
      "path": "37"
    },
    "4681": {
      "fn": "Soulbound.mintSoulboundToken",
      "offset": [
        5808,
        5858
      ],
      "op": "PUSH2",
      "path": "37",
      "value": "0x128C"
    },
    "4684": {
      "branch": 102,
      "fn": "Soulbound.mintSoulboundToken",
      "offset": [
        5808,
        5858
      ],
      "op": "JUMPI",
      "path": "37"
    },
    "4685": {
      "fn": "Soulbound.mintSoulboundToken",
      "offset": [
        5808,
        5858
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0x40"
    },
    "4687": {
      "fn": "Soulbound.mintSoulboundToken",
      "offset": [
        5808,
        5858
      ],
      "op": "MLOAD",
      "path": "37"
    },
    "4688": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "4692": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "4694": {
      "op": "SHL"
    },
    "4695": {
      "fn": "Soulbound.mintSoulboundToken",
      "offset": [
        5808,
        5858
      ],
      "op": "DUP2",
      "path": "37"
    },
    "4696": {
      "fn": "Soulbound.mintSoulboundToken",
      "offset": [
        5808,
        5858
      ],
      "op": "MSTORE",
      "path": "37"
    },
    "4697": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4699": {
      "fn": "Soulbound.mintSoulboundToken",
      "offset": [
        5808,
        5858
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0x4"
    },
    "4701": {
      "fn": "Soulbound.mintSoulboundToken",
      "offset": [
        5808,
        5858
      ],
      "op": "DUP3",
      "path": "37"
    },
    "4702": {
      "fn": "Soulbound.mintSoulboundToken",
      "offset": [
        5808,
        5858
      ],
      "op": "ADD",
      "path": "37"
    },
    "4703": {
      "op": "MSTORE"
    },
    "4704": {
      "op": "PUSH1",
      "value": "0x15"
    },
    "4706": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "4708": {
      "op": "DUP3"
    },
    "4709": {
      "op": "ADD"
    },
    "4710": {
      "op": "MSTORE"
    },
    "4711": {
      "op": "PUSH21",
      "value": "0x26B4B73A103A37903D32B9379030B2323932B9B997"
    },
    "4733": {
      "op": "PUSH1",
      "value": "0x59"
    },
    "4735": {
      "op": "SHL"
    },
    "4736": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "4738": {
      "op": "DUP3"
    },
    "4739": {
      "op": "ADD"
    },
    "4740": {
      "op": "MSTORE"
    },
    "4741": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "4743": {
      "op": "ADD"
    },
    "4744": {
      "fn": "Soulbound.mintSoulboundToken",
      "offset": [
        5808,
        5858
      ],
      "op": "PUSH2",
      "path": "37",
      "value": "0x422"
    },
    "4747": {
      "op": "JUMP"
    },
    "4748": {
      "fn": "Soulbound.mintSoulboundToken",
      "offset": [
        5808,
        5858
      ],
      "op": "JUMPDEST",
      "path": "37"
    },
    "4749": {
      "fn": "Soulbound.mintSoulboundToken",
      "offset": [
        6004,
        6012
      ],
      "op": "DUP1",
      "path": "37",
      "statement": 69
    },
    "4750": {
      "fn": "Soulbound.mintSoulboundToken",
      "offset": [
        5998,
        6020
      ],
      "op": "MLOAD",
      "path": "37"
    },
    "4751": {
      "fn": "Soulbound.mintSoulboundToken",
      "offset": [
        6024,
        6025
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0x0"
    },
    "4753": {
      "branch": 103,
      "fn": "Soulbound.mintSoulboundToken",
      "offset": [
        5998,
        6025
      ],
      "op": "SUB",
      "path": "37"
    },
    "4754": {
      "fn": "Soulbound.mintSoulboundToken",
      "offset": [
        5990,
        6045
      ],
      "op": "PUSH2",
      "path": "37",
      "value": "0x12CF"
    },
    "4757": {
      "branch": 103,
      "fn": "Soulbound.mintSoulboundToken",
      "offset": [
        5990,
        6045
      ],
      "op": "JUMPI",
      "path": "37"
    },
    "4758": {
      "fn": "Soulbound.mintSoulboundToken",
      "offset": [
        5990,
        6045
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0x40"
    },
    "4760": {
      "fn": "Soulbound.mintSoulboundToken",
      "offset": [
        5990,
        6045
      ],
      "op": "MLOAD",
      "path": "37"
    },
    "4761": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "4765": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "4767": {
      "op": "SHL"
    },
    "4768": {
      "fn": "Soulbound.mintSoulboundToken",
      "offset": [
        5990,
        6045
      ],
      "op": "DUP2",
      "path": "37"
    },
    "4769": {
      "fn": "Soulbound.mintSoulboundToken",
      "offset": [
        5990,
        6045
      ],
      "op": "MSTORE",
      "path": "37"
    },
    "4770": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4772": {
      "fn": "Soulbound.mintSoulboundToken",
      "offset": [
        5990,
        6045
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0x4"
    },
    "4774": {
      "fn": "Soulbound.mintSoulboundToken",
      "offset": [
        5990,
        6045
      ],
      "op": "DUP3",
      "path": "37"
    },
    "4775": {
      "fn": "Soulbound.mintSoulboundToken",
      "offset": [
        5990,
        6045
      ],
      "op": "ADD",
      "path": "37"
    },
    "4776": {
      "op": "MSTORE"
    },
    "4777": {
      "op": "PUSH1",
      "value": "0xF"
    },
    "4779": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "4781": {
      "op": "DUP3"
    },
    "4782": {
      "op": "ADD"
    },
    "4783": {
      "op": "MSTORE"
    },
    "4784": {
      "op": "PUSH15",
      "value": "0x22B6B83A3C903A37B5B2B72AA92497"
    },
    "4800": {
      "op": "PUSH1",
      "value": "0x89"
    },
    "4802": {
      "op": "SHL"
    },
    "4803": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "4805": {
      "op": "DUP3"
    },
    "4806": {
      "op": "ADD"
    },
    "4807": {
      "op": "MSTORE"
    },
    "4808": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "4810": {
      "op": "ADD"
    },
    "4811": {
      "fn": "Soulbound.mintSoulboundToken",
      "offset": [
        5990,
        6045
      ],
      "op": "PUSH2",
      "path": "37",
      "value": "0x422"
    },
    "4814": {
      "op": "JUMP"
    },
    "4815": {
      "fn": "Soulbound.mintSoulboundToken",
      "offset": [
        5990,
        6045
      ],
      "op": "JUMPDEST",
      "path": "37"
    },
    "4816": {
      "fn": "Soulbound.mintSoulboundToken",
      "offset": [
        6160,
        6188
      ],
      "op": "PUSH2",
      "path": "37",
      "statement": 70,
      "value": "0x12DA"
    },
    "4819": {
      "fn": "Soulbound.mintSoulboundToken",
      "offset": [
        6166,
        6168
      ],
      "op": "DUP4",
      "path": "37"
    },
    "4820": {
      "fn": "Soulbound.mintSoulboundToken",
      "offset": [
        6170,
        6177
      ],
      "op": "DUP4",
      "path": "37"
    },
    "4821": {
      "fn": "Soulbound.mintSoulboundToken",
      "offset": [
        6179,
        6187
      ],
      "op": "DUP4",
      "path": "37"
    },
    "4822": {
      "fn": "Soulbound.mintSoulboundToken",
      "offset": [
        6160,
        6165
      ],
      "op": "PUSH2",
      "path": "37",
      "value": "0x130C"
    },
    "4825": {
      "fn": "Soulbound.mintSoulboundToken",
      "jump": "i",
      "offset": [
        6160,
        6188
      ],
      "op": "JUMP",
      "path": "37"
    },
    "4826": {
      "fn": "Soulbound.mintSoulboundToken",
      "offset": [
        6160,
        6188
      ],
      "op": "JUMPDEST",
      "path": "37"
    },
    "4827": {
      "op": "POP"
    },
    "4828": {
      "op": "POP"
    },
    "4829": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4831": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4833": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4835": {
      "op": "SHL"
    },
    "4836": {
      "op": "SUB"
    },
    "4837": {
      "fn": "Soulbound.mintSoulboundToken",
      "offset": [
        6244,
        6253
      ],
      "op": "SWAP1",
      "path": "37",
      "statement": 71
    },
    "4838": {
      "fn": "Soulbound.mintSoulboundToken",
      "offset": [
        6244,
        6253
      ],
      "op": "SWAP2",
      "path": "37"
    },
    "4839": {
      "fn": "Soulbound.mintSoulboundToken",
      "offset": [
        6244,
        6253
      ],
      "op": "AND",
      "path": "37"
    },
    "4840": {
      "fn": "Soulbound.mintSoulboundToken",
      "offset": [
        6244,
        6253
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0x0"
    },
    "4842": {
      "fn": "Soulbound.mintSoulboundToken",
      "offset": [
        6244,
        6253
      ],
      "op": "SWAP1",
      "path": "37"
    },
    "4843": {
      "fn": "Soulbound.mintSoulboundToken",
      "offset": [
        6244,
        6253
      ],
      "op": "DUP2",
      "path": "37"
    },
    "4844": {
      "fn": "Soulbound.mintSoulboundToken",
      "offset": [
        6244,
        6253
      ],
      "op": "MSTORE",
      "path": "37"
    },
    "4845": {
      "fn": "Soulbound.mintSoulboundToken",
      "offset": [
        6244,
        6249
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0x7"
    },
    "4847": {
      "fn": "Soulbound.mintSoulboundToken",
      "offset": [
        6244,
        6253
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0x20"
    },
    "4849": {
      "fn": "Soulbound.mintSoulboundToken",
      "offset": [
        6244,
        6253
      ],
      "op": "SWAP1",
      "path": "37"
    },
    "4850": {
      "fn": "Soulbound.mintSoulboundToken",
      "offset": [
        6244,
        6253
      ],
      "op": "DUP2",
      "path": "37"
    },
    "4851": {
      "fn": "Soulbound.mintSoulboundToken",
      "offset": [
        6244,
        6253
      ],
      "op": "MSTORE",
      "path": "37"
    },
    "4852": {
      "fn": "Soulbound.mintSoulboundToken",
      "offset": [
        6244,
        6253
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0x40"
    },
    "4854": {
      "fn": "Soulbound.mintSoulboundToken",
      "offset": [
        6244,
        6253
      ],
      "op": "DUP1",
      "path": "37"
    },
    "4855": {
      "fn": "Soulbound.mintSoulboundToken",
      "offset": [
        6244,
        6253
      ],
      "op": "DUP4",
      "path": "37"
    },
    "4856": {
      "fn": "Soulbound.mintSoulboundToken",
      "offset": [
        6244,
        6253
      ],
      "op": "KECCAK256",
      "path": "37"
    },
    "4857": {
      "fn": "Soulbound.mintSoulboundToken",
      "offset": [
        6244,
        6262
      ],
      "op": "SWAP4",
      "path": "37"
    },
    "4858": {
      "fn": "Soulbound.mintSoulboundToken",
      "offset": [
        6244,
        6262
      ],
      "op": "DUP4",
      "path": "37"
    },
    "4859": {
      "fn": "Soulbound.mintSoulboundToken",
      "offset": [
        6244,
        6262
      ],
      "op": "MSTORE",
      "path": "37"
    },
    "4860": {
      "fn": "Soulbound.mintSoulboundToken",
      "offset": [
        6244,
        6262
      ],
      "op": "SWAP3",
      "path": "37"
    },
    "4861": {
      "fn": "Soulbound.mintSoulboundToken",
      "offset": [
        6244,
        6262
      ],
      "op": "SWAP1",
      "path": "37"
    },
    "4862": {
      "fn": "Soulbound.mintSoulboundToken",
      "offset": [
        6244,
        6262
      ],
      "op": "MSTORE",
      "path": "37"
    },
    "4863": {
      "fn": "Soulbound.mintSoulboundToken",
      "offset": [
        6244,
        6262
      ],
      "op": "KECCAK256",
      "path": "37"
    },
    "4864": {
      "fn": "Soulbound.mintSoulboundToken",
      "offset": [
        6244,
        6269
      ],
      "op": "DUP1",
      "path": "37"
    },
    "4865": {
      "fn": "Soulbound.mintSoulboundToken",
      "offset": [
        6244,
        6269
      ],
      "op": "SLOAD",
      "path": "37"
    },
    "4866": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "4868": {
      "op": "NOT"
    },
    "4869": {
      "fn": "Soulbound.mintSoulboundToken",
      "offset": [
        6244,
        6269
      ],
      "op": "AND",
      "path": "37"
    },
    "4870": {
      "fn": "Soulbound.mintSoulboundToken",
      "offset": [
        6265,
        6269
      ],
      "op": "PUSH1",
      "path": "37",
      "value": "0x1"
    },
    "4872": {
      "fn": "Soulbound.mintSoulboundToken",
      "offset": [
        6244,
        6269
      ],
      "op": "OR",
      "path": "37"
    },
    "4873": {
      "fn": "Soulbound.mintSoulboundToken",
      "offset": [
        6244,
        6269
      ],
      "op": "SWAP1",
      "path": "37"
    },
    "4874": {
      "fn": "Soulbound.mintSoulboundToken",
      "offset": [
        6244,
        6269
      ],
      "op": "SSTORE",
      "path": "37"
    },
    "4875": {
      "fn": "Soulbound.mintSoulboundToken",
      "jump": "o",
      "offset": [
        5609,
        6276
      ],
      "op": "JUMP",
      "path": "37"
    },
    "4876": {
      "fn": "ERC4973._mint",
      "offset": [
        6055,
        6402
      ],
      "op": "JUMPDEST",
      "path": "41"
    },
    "4877": {
      "fn": "ERC4973._mint",
      "offset": [
        6174,
        6181
      ],
      "op": "PUSH1",
      "path": "41",
      "value": "0x0"
    },
    "4879": {
      "fn": "ERC4973._mint",
      "offset": [
        6202,
        6218
      ],
      "op": "PUSH2",
      "path": "41",
      "statement": 72,
      "value": "0x1317"
    },
    "4882": {
      "fn": "ERC4973._mint",
      "offset": [
        6210,
        6217
      ],
      "op": "DUP4",
      "path": "41"
    },
    "4883": {
      "fn": "ERC4973._mint",
      "offset": [
        6202,
        6209
      ],
      "op": "PUSH2",
      "path": "41",
      "value": "0xCB2"
    },
    "4886": {
      "fn": "ERC4973._mint",
      "jump": "i",
      "offset": [
        6202,
        6218
      ],
      "op": "JUMP",
      "path": "41"
    },
    "4887": {
      "fn": "ERC4973._mint",
      "offset": [
        6202,
        6218
      ],
      "op": "JUMPDEST",
      "path": "41"
    },
    "4888": {
      "branch": 92,
      "fn": "ERC4973._mint",
      "offset": [
        6201,
        6218
      ],
      "op": "ISZERO",
      "path": "41"
    },
    "4889": {
      "fn": "ERC4973._mint",
      "offset": [
        6193,
        6243
      ],
      "op": "PUSH2",
      "path": "41",
      "value": "0x135B"
    },
    "4892": {
      "branch": 92,
      "fn": "ERC4973._mint",
      "offset": [
        6193,
        6243
      ],
      "op": "JUMPI",
      "path": "41"
    },
    "4893": {
      "fn": "ERC4973._mint",
      "offset": [
        6193,
        6243
      ],
      "op": "PUSH1",
      "path": "41",
      "value": "0x40"
    },
    "4895": {
      "fn": "ERC4973._mint",
      "offset": [
        6193,
        6243
      ],
      "op": "MLOAD",
      "path": "41"
    },
    "4896": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "4900": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "4902": {
      "op": "SHL"
    },
    "4903": {
      "fn": "ERC4973._mint",
      "offset": [
        6193,
        6243
      ],
      "op": "DUP2",
      "path": "41"
    },
    "4904": {
      "fn": "ERC4973._mint",
      "offset": [
        6193,
        6243
      ],
      "op": "MSTORE",
      "path": "41"
    },
    "4905": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4907": {
      "fn": "ERC4973._mint",
      "offset": [
        6193,
        6243
      ],
      "op": "PUSH1",
      "path": "41",
      "value": "0x4"
    },
    "4909": {
      "fn": "ERC4973._mint",
      "offset": [
        6193,
        6243
      ],
      "op": "DUP3",
      "path": "41"
    },
    "4910": {
      "fn": "ERC4973._mint",
      "offset": [
        6193,
        6243
      ],
      "op": "ADD",
      "path": "41"
    },
    "4911": {
      "op": "MSTORE"
    },
    "4912": {
      "op": "PUSH1",
      "value": "0x14"
    },
    "4914": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "4916": {
      "op": "DUP3"
    },
    "4917": {
      "op": "ADD"
    },
    "4918": {
      "op": "MSTORE"
    },
    "4919": {
      "op": "PUSH20",
      "value": "0x6D696E743A20746F6B656E494420657869737473"
    },
    "4940": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "4942": {
      "op": "SHL"
    },
    "4943": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "4945": {
      "op": "DUP3"
    },
    "4946": {
      "op": "ADD"
    },
    "4947": {
      "op": "MSTORE"
    },
    "4948": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "4950": {
      "op": "ADD"
    },
    "4951": {
      "fn": "ERC4973._mint",
      "offset": [
        6193,
        6243
      ],
      "op": "PUSH2",
      "path": "41",
      "value": "0x422"
    },
    "4954": {
      "op": "JUMP"
    },
    "4955": {
      "fn": "ERC4973._mint",
      "offset": [
        6193,
        6243
      ],
      "op": "JUMPDEST",
      "path": "41"
    },
    "4956": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4958": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4960": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4962": {
      "op": "SHL"
    },
    "4963": {
      "op": "SUB"
    },
    "4964": {
      "fn": "ERC4973._mint",
      "offset": [
        6253,
        6266
      ],
      "op": "DUP5",
      "path": "41",
      "statement": 73
    },
    "4965": {
      "fn": "ERC4973._mint",
      "offset": [
        6253,
        6266
      ],
      "op": "AND",
      "path": "41"
    },
    "4966": {
      "fn": "ERC4973._mint",
      "offset": [
        6253,
        6266
      ],
      "op": "PUSH1",
      "path": "41",
      "value": "0x0"
    },
    "4968": {
      "fn": "ERC4973._mint",
      "offset": [
        6253,
        6266
      ],
      "op": "SWAP1",
      "path": "41"
    },
    "4969": {
      "fn": "ERC4973._mint",
      "offset": [
        6253,
        6266
      ],
      "op": "DUP2",
      "path": "41"
    },
    "4970": {
      "fn": "ERC4973._mint",
      "offset": [
        6253,
        6266
      ],
      "op": "MSTORE",
      "path": "41"
    },
    "4971": {
      "fn": "ERC4973._mint",
      "offset": [
        6253,
        6262
      ],
      "op": "PUSH1",
      "path": "41",
      "value": "0x4"
    },
    "4973": {
      "fn": "ERC4973._mint",
      "offset": [
        6253,
        6266
      ],
      "op": "PUSH1",
      "path": "41",
      "value": "0x20"
    },
    "4975": {
      "fn": "ERC4973._mint",
      "offset": [
        6253,
        6266
      ],
      "op": "MSTORE",
      "path": "41"
    },
    "4976": {
      "fn": "ERC4973._mint",
      "offset": [
        6253,
        6266
      ],
      "op": "PUSH1",
      "path": "41",
      "value": "0x40"
    },
    "4978": {
      "fn": "ERC4973._mint",
      "offset": [
        6253,
        6266
      ],
      "op": "DUP2",
      "path": "41"
    },
    "4979": {
      "fn": "ERC4973._mint",
      "offset": [
        6253,
        6266
      ],
      "op": "KECCAK256",
      "path": "41"
    },
    "4980": {
      "fn": "ERC4973._mint",
      "offset": [
        6253,
        6271
      ],
      "op": "DUP1",
      "path": "41"
    },
    "4981": {
      "fn": "ERC4973._mint",
      "offset": [
        6253,
        6271
      ],
      "op": "SLOAD",
      "path": "41"
    },
    "4982": {
      "fn": "ERC4973._mint",
      "offset": [
        6270,
        6271
      ],
      "op": "PUSH1",
      "path": "41",
      "value": "0x1"
    },
    "4984": {
      "fn": "ERC4973._mint",
      "offset": [
        6270,
        6271
      ],
      "op": "SWAP3",
      "path": "41"
    },
    "4985": {
      "fn": "ERC4973._mint",
      "offset": [
        6253,
        6266
      ],
      "op": "SWAP1",
      "path": "41"
    },
    "4986": {
      "fn": "ERC4973._mint",
      "offset": [
        6253,
        6271
      ],
      "op": "PUSH2",
      "path": "41",
      "value": "0x1384"
    },
    "4989": {
      "fn": "ERC4973._mint",
      "offset": [
        6253,
        6271
      ],
      "op": "SWAP1",
      "path": "41"
    },
    "4990": {
      "fn": "ERC4973._mint",
      "offset": [
        6270,
        6271
      ],
      "op": "DUP5",
      "path": "41"
    },
    "4991": {
      "fn": "ERC4973._mint",
      "offset": [
        6270,
        6271
      ],
      "op": "SWAP1",
      "path": "41"
    },
    "4992": {
      "fn": "ERC4973._mint",
      "offset": [
        6253,
        6271
      ],
      "op": "PUSH2",
      "path": "41",
      "value": "0x18CB"
    },
    "4995": {
      "fn": "ERC4973._mint",
      "jump": "i",
      "offset": [
        6253,
        6271
      ],
      "op": "JUMP",
      "path": "41"
    },
    "4996": {
      "fn": "ERC4973._mint",
      "offset": [
        6253,
        6271
      ],
      "op": "JUMPDEST",
      "path": "41"
    },
    "4997": {
      "fn": "ERC4973._mint",
      "offset": [
        6253,
        6271
      ],
      "op": "SWAP1",
      "path": "41"
    },
    "4998": {
      "fn": "ERC4973._mint",
      "offset": [
        6253,
        6271
      ],
      "op": "SWAP2",
      "path": "41"
    },
    "4999": {
      "fn": "ERC4973._mint",
      "offset": [
        6253,
        6271
      ],
      "op": "SSTORE",
      "path": "41"
    },
    "5000": {
      "op": "POP"
    },
    "5001": {
      "op": "POP"
    },
    "5002": {
      "fn": "ERC4973._mint",
      "offset": [
        6281,
        6297
      ],
      "op": "PUSH1",
      "path": "41",
      "statement": 74,
      "value": "0x0"
    },
    "5004": {
      "fn": "ERC4973._mint",
      "offset": [
        6281,
        6297
      ],
      "op": "DUP4",
      "path": "41"
    },
    "5005": {
      "fn": "ERC4973._mint",
      "offset": [
        6281,
        6297
      ],
      "op": "DUP2",
      "path": "41"
    },
    "5006": {
      "fn": "ERC4973._mint",
      "offset": [
        6281,
        6297
      ],
      "op": "MSTORE",
      "path": "41"
    },
    "5007": {
      "fn": "ERC4973._mint",
      "offset": [
        6281,
        6288
      ],
      "op": "PUSH1",
      "path": "41",
      "value": "0x2"
    },
    "5009": {
      "fn": "ERC4973._mint",
      "offset": [
        6281,
        6297
      ],
      "op": "PUSH1",
      "path": "41",
      "value": "0x20"
    },
    "5011": {
      "fn": "ERC4973._mint",
      "offset": [
        6281,
        6297
      ],
      "op": "SWAP1",
      "path": "41"
    },
    "5012": {
      "fn": "ERC4973._mint",
      "offset": [
        6281,
        6297
      ],
      "op": "DUP2",
      "path": "41"
    },
    "5013": {
      "fn": "ERC4973._mint",
      "offset": [
        6281,
        6297
      ],
      "op": "MSTORE",
      "path": "41"
    },
    "5014": {
      "fn": "ERC4973._mint",
      "offset": [
        6281,
        6297
      ],
      "op": "PUSH1",
      "path": "41",
      "value": "0x40"
    },
    "5016": {
      "fn": "ERC4973._mint",
      "offset": [
        6281,
        6297
      ],
      "op": "DUP1",
      "path": "41"
    },
    "5017": {
      "fn": "ERC4973._mint",
      "offset": [
        6281,
        6297
      ],
      "op": "DUP4",
      "path": "41"
    },
    "5018": {
      "fn": "ERC4973._mint",
      "offset": [
        6281,
        6297
      ],
      "op": "KECCAK256",
      "path": "41"
    },
    "5019": {
      "fn": "ERC4973._mint",
      "offset": [
        6281,
        6302
      ],
      "op": "DUP1",
      "path": "41"
    },
    "5020": {
      "fn": "ERC4973._mint",
      "offset": [
        6281,
        6302
      ],
      "op": "SLOAD",
      "path": "41"
    },
    "5021": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5023": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5025": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5027": {
      "op": "SHL"
    },
    "5028": {
      "op": "SUB"
    },
    "5029": {
      "op": "NOT"
    },
    "5030": {
      "fn": "ERC4973._mint",
      "offset": [
        6281,
        6302
      ],
      "op": "AND",
      "path": "41"
    },
    "5031": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5033": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5035": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5037": {
      "op": "SHL"
    },
    "5038": {
      "op": "SUB"
    },
    "5039": {
      "fn": "ERC4973._mint",
      "offset": [
        6281,
        6302
      ],
      "op": "DUP10",
      "path": "41"
    },
    "5040": {
      "fn": "ERC4973._mint",
      "offset": [
        6281,
        6302
      ],
      "op": "AND",
      "path": "41"
    },
    "5041": {
      "fn": "ERC4973._mint",
      "offset": [
        6281,
        6302
      ],
      "op": "OR",
      "path": "41"
    },
    "5042": {
      "fn": "ERC4973._mint",
      "offset": [
        6281,
        6302
      ],
      "op": "SWAP1",
      "path": "41"
    },
    "5043": {
      "fn": "ERC4973._mint",
      "offset": [
        6281,
        6302
      ],
      "op": "SSTORE",
      "path": "41"
    },
    "5044": {
      "fn": "ERC4973._mint",
      "offset": [
        6312,
        6322
      ],
      "op": "PUSH1",
      "path": "41",
      "statement": 75,
      "value": "0x3"
    },
    "5046": {
      "fn": "ERC4973._mint",
      "offset": [
        6312,
        6331
      ],
      "op": "SWAP1",
      "path": "41"
    },
    "5047": {
      "fn": "ERC4973._mint",
      "offset": [
        6312,
        6331
      ],
      "op": "SWAP2",
      "path": "41"
    },
    "5048": {
      "fn": "ERC4973._mint",
      "offset": [
        6312,
        6331
      ],
      "op": "MSTORE",
      "path": "41"
    },
    "5049": {
      "fn": "ERC4973._mint",
      "offset": [
        6312,
        6331
      ],
      "op": "SWAP1",
      "path": "41"
    },
    "5050": {
      "fn": "ERC4973._mint",
      "offset": [
        6312,
        6331
      ],
      "op": "KECCAK256",
      "path": "41"
    },
    "5051": {
      "fn": "ERC4973._mint",
      "offset": [
        6312,
        6337
      ],
      "op": "PUSH2",
      "path": "41",
      "value": "0x13C4"
    },
    "5054": {
      "fn": "ERC4973._mint",
      "offset": [
        6334,
        6337
      ],
      "op": "DUP4",
      "path": "41"
    },
    "5055": {
      "fn": "ERC4973._mint",
      "offset": [
        6312,
        6331
      ],
      "op": "DUP3",
      "path": "41"
    },
    "5056": {
      "fn": "ERC4973._mint",
      "offset": [
        6312,
        6337
      ],
      "op": "PUSH2",
      "path": "41",
      "value": "0x1947"
    },
    "5059": {
      "fn": "ERC4973._mint",
      "jump": "i",
      "offset": [
        6312,
        6337
      ],
      "op": "JUMP",
      "path": "41"
    },
    "5060": {
      "fn": "ERC4973._mint",
      "offset": [
        6312,
        6337
      ],
      "op": "JUMPDEST",
      "path": "41"
    },
    "5061": {
      "op": "POP"
    },
    "5062": {
      "fn": "ERC4973._mint",
      "offset": [
        6352,
        6371
      ],
      "op": "PUSH1",
      "path": "41",
      "statement": 76,
      "value": "0x40"
    },
    "5064": {
      "fn": "ERC4973._mint",
      "offset": [
        6352,
        6371
      ],
      "op": "MLOAD",
      "path": "41"
    },
    "5065": {
      "fn": "ERC4973._mint",
      "offset": [
        6363,
        6370
      ],
      "op": "DUP4",
      "path": "41"
    },
    "5066": {
      "fn": "ERC4973._mint",
      "offset": [
        6363,
        6370
      ],
      "op": "SWAP1",
      "path": "41"
    },
    "5067": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5069": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5071": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5073": {
      "op": "SHL"
    },
    "5074": {
      "op": "SUB"
    },
    "5075": {
      "fn": "ERC4973._mint",
      "offset": [
        6352,
        6371
      ],
      "op": "DUP7",
      "path": "41"
    },
    "5076": {
      "fn": "ERC4973._mint",
      "offset": [
        6352,
        6371
      ],
      "op": "AND",
      "path": "41"
    },
    "5077": {
      "fn": "ERC4973._mint",
      "offset": [
        6352,
        6371
      ],
      "op": "SWAP1",
      "path": "41"
    },
    "5078": {
      "fn": "ERC4973._mint",
      "offset": [
        6352,
        6371
      ],
      "op": "PUSH32",
      "path": "41",
      "value": "0xE9274A84B19E9428826DE6BAE8C48329354F8F0E73F771B97CAE2D9DCCD45A27"
    },
    "5111": {
      "fn": "ERC4973._mint",
      "offset": [
        6352,
        6371
      ],
      "op": "SWAP1",
      "path": "41"
    },
    "5112": {
      "fn": "ERC4973._mint",
      "offset": [
        6352,
        6371
      ],
      "op": "PUSH1",
      "path": "41",
      "value": "0x0"
    },
    "5114": {
      "fn": "ERC4973._mint",
      "offset": [
        6352,
        6371
      ],
      "op": "SWAP1",
      "path": "41"
    },
    "5115": {
      "fn": "ERC4973._mint",
      "offset": [
        6352,
        6371
      ],
      "op": "LOG3",
      "path": "41"
    },
    "5116": {
      "op": "POP"
    },
    "5117": {
      "fn": "ERC4973._mint",
      "offset": [
        6388,
        6395
      ],
      "op": "SWAP1",
      "path": "41",
      "statement": 77
    },
    "5118": {
      "fn": "ERC4973._mint",
      "offset": [
        6388,
        6395
      ],
      "op": "SWAP3",
      "path": "41"
    },
    "5119": {
      "fn": "ERC4973._mint",
      "offset": [
        6055,
        6402
      ],
      "op": "SWAP2",
      "path": "41"
    },
    "5120": {
      "op": "POP"
    },
    "5121": {
      "op": "POP"
    },
    "5122": {
      "fn": "ERC4973._mint",
      "jump": "o",
      "offset": [
        6055,
        6402
      ],
      "op": "JUMP",
      "path": "41"
    },
    "5123": {
      "op": "JUMPDEST"
    },
    "5124": {
      "op": "POP"
    },
    "5125": {
      "op": "DUP1"
    },
    "5126": {
      "op": "SLOAD"
    },
    "5127": {
      "op": "PUSH2",
      "value": "0x140F"
    },
    "5130": {
      "op": "SWAP1"
    },
    "5131": {
      "op": "PUSH2",
      "value": "0x17A9"
    },
    "5134": {
      "jump": "i",
      "op": "JUMP"
    },
    "5135": {
      "op": "JUMPDEST"
    },
    "5136": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5138": {
      "op": "DUP3"
    },
    "5139": {
      "op": "SSTORE"
    },
    "5140": {
      "op": "DUP1"
    },
    "5141": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "5143": {
      "op": "LT"
    },
    "5144": {
      "op": "PUSH2",
      "value": "0x141F"
    },
    "5147": {
      "op": "JUMPI"
    },
    "5148": {
      "op": "POP"
    },
    "5149": {
      "op": "POP"
    },
    "5150": {
      "jump": "o",
      "op": "JUMP"
    },
    "5151": {
      "op": "JUMPDEST"
    },
    "5152": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "5154": {
      "op": "ADD"
    },
    "5155": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5157": {
      "op": "SWAP1"
    },
    "5158": {
      "op": "DIV"
    },
    "5159": {
      "op": "SWAP1"
    },
    "5160": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5162": {
      "op": "MSTORE"
    },
    "5163": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5165": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5167": {
      "op": "KECCAK256"
    },
    "5168": {
      "op": "SWAP1"
    },
    "5169": {
      "op": "DUP2"
    },
    "5170": {
      "op": "ADD"
    },
    "5171": {
      "op": "SWAP1"
    },
    "5172": {
      "op": "PUSH2",
      "value": "0x600"
    },
    "5175": {
      "op": "SWAP2"
    },
    "5176": {
      "op": "SWAP1"
    },
    "5177": {
      "op": "JUMPDEST"
    },
    "5178": {
      "op": "DUP1"
    },
    "5179": {
      "op": "DUP3"
    },
    "5180": {
      "op": "GT"
    },
    "5181": {
      "op": "ISZERO"
    },
    "5182": {
      "op": "PUSH2",
      "value": "0x144D"
    },
    "5185": {
      "op": "JUMPI"
    },
    "5186": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5188": {
      "op": "DUP2"
    },
    "5189": {
      "op": "SSTORE"
    },
    "5190": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5192": {
      "op": "ADD"
    },
    "5193": {
      "op": "PUSH2",
      "value": "0x1439"
    },
    "5196": {
      "op": "JUMP"
    },
    "5197": {
      "op": "JUMPDEST"
    },
    "5198": {
      "op": "POP"
    },
    "5199": {
      "op": "SWAP1"
    },
    "5200": {
      "jump": "o",
      "op": "JUMP"
    },
    "5201": {
      "op": "JUMPDEST"
    },
    "5202": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5204": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5206": {
      "op": "DUP3"
    },
    "5207": {
      "op": "DUP5"
    },
    "5208": {
      "op": "SUB"
    },
    "5209": {
      "op": "SLT"
    },
    "5210": {
      "op": "ISZERO"
    },
    "5211": {
      "op": "PUSH2",
      "value": "0x1463"
    },
    "5214": {
      "op": "JUMPI"
    },
    "5215": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5217": {
      "op": "DUP1"
    },
    "5218": {
      "op": "REVERT"
    },
    "5219": {
      "op": "JUMPDEST"
    },
    "5220": {
      "op": "DUP2"
    },
    "5221": {
      "op": "CALLDATALOAD"
    },
    "5222": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5224": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5226": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "5228": {
      "op": "SHL"
    },
    "5229": {
      "op": "SUB"
    },
    "5230": {
      "op": "NOT"
    },
    "5231": {
      "op": "DUP2"
    },
    "5232": {
      "op": "AND"
    },
    "5233": {
      "op": "DUP2"
    },
    "5234": {
      "op": "EQ"
    },
    "5235": {
      "op": "PUSH2",
      "value": "0xA6B"
    },
    "5238": {
      "op": "JUMPI"
    },
    "5239": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5241": {
      "op": "DUP1"
    },
    "5242": {
      "op": "REVERT"
    },
    "5243": {
      "op": "JUMPDEST"
    },
    "5244": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5246": {
      "op": "JUMPDEST"
    },
    "5247": {
      "op": "DUP4"
    },
    "5248": {
      "op": "DUP2"
    },
    "5249": {
      "op": "LT"
    },
    "5250": {
      "op": "ISZERO"
    },
    "5251": {
      "op": "PUSH2",
      "value": "0x1496"
    },
    "5254": {
      "op": "JUMPI"
    },
    "5255": {
      "op": "DUP2"
    },
    "5256": {
      "op": "DUP2"
    },
    "5257": {
      "op": "ADD"
    },
    "5258": {
      "op": "MLOAD"
    },
    "5259": {
      "op": "DUP4"
    },
    "5260": {
      "op": "DUP3"
    },
    "5261": {
      "op": "ADD"
    },
    "5262": {
      "op": "MSTORE"
    },
    "5263": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5265": {
      "op": "ADD"
    },
    "5266": {
      "op": "PUSH2",
      "value": "0x147E"
    },
    "5269": {
      "op": "JUMP"
    },
    "5270": {
      "op": "JUMPDEST"
    },
    "5271": {
      "op": "DUP4"
    },
    "5272": {
      "op": "DUP2"
    },
    "5273": {
      "op": "GT"
    },
    "5274": {
      "op": "ISZERO"
    },
    "5275": {
      "op": "PUSH2",
      "value": "0x14A5"
    },
    "5278": {
      "op": "JUMPI"
    },
    "5279": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5281": {
      "op": "DUP5"
    },
    "5282": {
      "op": "DUP5"
    },
    "5283": {
      "op": "ADD"
    },
    "5284": {
      "op": "MSTORE"
    },
    "5285": {
      "op": "JUMPDEST"
    },
    "5286": {
      "op": "POP"
    },
    "5287": {
      "op": "POP"
    },
    "5288": {
      "op": "POP"
    },
    "5289": {
      "op": "POP"
    },
    "5290": {
      "jump": "o",
      "op": "JUMP"
    },
    "5291": {
      "op": "JUMPDEST"
    },
    "5292": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5294": {
      "op": "DUP2"
    },
    "5295": {
      "op": "MSTORE"
    },
    "5296": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5298": {
      "op": "DUP3"
    },
    "5299": {
      "op": "MLOAD"
    },
    "5300": {
      "op": "DUP1"
    },
    "5301": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5303": {
      "op": "DUP5"
    },
    "5304": {
      "op": "ADD"
    },
    "5305": {
      "op": "MSTORE"
    },
    "5306": {
      "op": "PUSH2",
      "value": "0x14CA"
    },
    "5309": {
      "op": "DUP2"
    },
    "5310": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "5312": {
      "op": "DUP6"
    },
    "5313": {
      "op": "ADD"
    },
    "5314": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5316": {
      "op": "DUP8"
    },
    "5317": {
      "op": "ADD"
    },
    "5318": {
      "op": "PUSH2",
      "value": "0x147B"
    },
    "5321": {
      "jump": "i",
      "op": "JUMP"
    },
    "5322": {
      "op": "JUMPDEST"
    },
    "5323": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "5325": {
      "op": "ADD"
    },
    "5326": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "5328": {
      "op": "NOT"
    },
    "5329": {
      "op": "AND"
    },
    "5330": {
      "op": "SWAP2"
    },
    "5331": {
      "op": "SWAP1"
    },
    "5332": {
      "op": "SWAP2"
    },
    "5333": {
      "op": "ADD"
    },
    "5334": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "5336": {
      "op": "ADD"
    },
    "5337": {
      "op": "SWAP3"
    },
    "5338": {
      "op": "SWAP2"
    },
    "5339": {
      "op": "POP"
    },
    "5340": {
      "op": "POP"
    },
    "5341": {
      "jump": "o",
      "op": "JUMP"
    },
    "5342": {
      "op": "JUMPDEST"
    },
    "5343": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "5348": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "5350": {
      "op": "SHL"
    },
    "5351": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5353": {
      "op": "MSTORE"
    },
    "5354": {
      "op": "PUSH1",
      "value": "0x41"
    },
    "5356": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "5358": {
      "op": "MSTORE"
    },
    "5359": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "5361": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5363": {
      "op": "REVERT"
    },
    "5364": {
      "op": "JUMPDEST"
    },
    "5365": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5367": {
      "op": "DUP3"
    },
    "5368": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "5370": {
      "op": "DUP4"
    },
    "5371": {
      "op": "ADD"
    },
    "5372": {
      "op": "SLT"
    },
    "5373": {
      "op": "PUSH2",
      "value": "0x1505"
    },
    "5376": {
      "op": "JUMPI"
    },
    "5377": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5379": {
      "op": "DUP1"
    },
    "5380": {
      "op": "REVERT"
    },
    "5381": {
      "op": "JUMPDEST"
    },
    "5382": {
      "op": "DUP2"
    },
    "5383": {
      "op": "CALLDATALOAD"
    },
    "5384": {
      "op": "PUSH8",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "5393": {
      "op": "DUP1"
    },
    "5394": {
      "op": "DUP3"
    },
    "5395": {
      "op": "GT"
    },
    "5396": {
      "op": "ISZERO"
    },
    "5397": {
      "op": "PUSH2",
      "value": "0x1520"
    },
    "5400": {
      "op": "JUMPI"
    },
    "5401": {
      "op": "PUSH2",
      "value": "0x1520"
    },
    "5404": {
      "op": "PUSH2",
      "value": "0x14DE"
    },
    "5407": {
      "jump": "i",
      "op": "JUMP"
    },
    "5408": {
      "op": "JUMPDEST"
    },
    "5409": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "5411": {
      "op": "MLOAD"
    },
    "5412": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "5414": {
      "op": "DUP4"
    },
    "5415": {
      "op": "ADD"
    },
    "5416": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "5418": {
      "op": "NOT"
    },
    "5419": {
      "op": "SWAP1"
    },
    "5420": {
      "op": "DUP2"
    },
    "5421": {
      "op": "AND"
    },
    "5422": {
      "op": "PUSH1",
      "value": "0x3F"
    },
    "5424": {
      "op": "ADD"
    },
    "5425": {
      "op": "AND"
    },
    "5426": {
      "op": "DUP2"
    },
    "5427": {
      "op": "ADD"
    },
    "5428": {
      "op": "SWAP1"
    },
    "5429": {
      "op": "DUP3"
    },
    "5430": {
      "op": "DUP3"
    },
    "5431": {
      "op": "GT"
    },
    "5432": {
      "op": "DUP2"
    },
    "5433": {
      "op": "DUP4"
    },
    "5434": {
      "op": "LT"
    },
    "5435": {
      "op": "OR"
    },
    "5436": {
      "op": "ISZERO"
    },
    "5437": {
      "op": "PUSH2",
      "value": "0x1548"
    },
    "5440": {
      "op": "JUMPI"
    },
    "5441": {
      "op": "PUSH2",
      "value": "0x1548"
    },
    "5444": {
      "op": "PUSH2",
      "value": "0x14DE"
    },
    "5447": {
      "jump": "i",
      "op": "JUMP"
    },
    "5448": {
      "op": "JUMPDEST"
    },
    "5449": {
      "op": "DUP2"
    },
    "5450": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "5452": {
      "op": "MSTORE"
    },
    "5453": {
      "op": "DUP4"
    },
    "5454": {
      "op": "DUP2"
    },
    "5455": {
      "op": "MSTORE"
    },
    "5456": {
      "op": "DUP7"
    },
    "5457": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5459": {
      "op": "DUP6"
    },
    "5460": {
      "op": "DUP9"
    },
    "5461": {
      "op": "ADD"
    },
    "5462": {
      "op": "ADD"
    },
    "5463": {
      "op": "GT"
    },
    "5464": {
      "op": "ISZERO"
    },
    "5465": {
      "op": "PUSH2",
      "value": "0x1561"
    },
    "5468": {
      "op": "JUMPI"
    },
    "5469": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5471": {
      "op": "DUP1"
    },
    "5472": {
      "op": "REVERT"
    },
    "5473": {
      "op": "JUMPDEST"
    },
    "5474": {
      "op": "DUP4"
    },
    "5475": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5477": {
      "op": "DUP8"
    },
    "5478": {
      "op": "ADD"
    },
    "5479": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5481": {
      "op": "DUP4"
    },
    "5482": {
      "op": "ADD"
    },
    "5483": {
      "op": "CALLDATACOPY"
    },
    "5484": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5486": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5488": {
      "op": "DUP6"
    },
    "5489": {
      "op": "DUP4"
    },
    "5490": {
      "op": "ADD"
    },
    "5491": {
      "op": "ADD"
    },
    "5492": {
      "op": "MSTORE"
    },
    "5493": {
      "op": "DUP1"
    },
    "5494": {
      "op": "SWAP5"
    },
    "5495": {
      "op": "POP"
    },
    "5496": {
      "op": "POP"
    },
    "5497": {
      "op": "POP"
    },
    "5498": {
      "op": "POP"
    },
    "5499": {
      "op": "POP"
    },
    "5500": {
      "op": "SWAP3"
    },
    "5501": {
      "op": "SWAP2"
    },
    "5502": {
      "op": "POP"
    },
    "5503": {
      "op": "POP"
    },
    "5504": {
      "jump": "o",
      "op": "JUMP"
    },
    "5505": {
      "op": "JUMPDEST"
    },
    "5506": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5508": {
      "op": "DUP1"
    },
    "5509": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5511": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "5513": {
      "op": "DUP5"
    },
    "5514": {
      "op": "DUP7"
    },
    "5515": {
      "op": "SUB"
    },
    "5516": {
      "op": "SLT"
    },
    "5517": {
      "op": "ISZERO"
    },
    "5518": {
      "op": "PUSH2",
      "value": "0x1596"
    },
    "5521": {
      "op": "JUMPI"
    },
    "5522": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5524": {
      "op": "DUP1"
    },
    "5525": {
      "op": "REVERT"
    },
    "5526": {
      "op": "JUMPDEST"
    },
    "5527": {
      "op": "DUP4"
    },
    "5528": {
      "op": "CALLDATALOAD"
    },
    "5529": {
      "op": "SWAP3"
    },
    "5530": {
      "op": "POP"
    },
    "5531": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5533": {
      "op": "DUP5"
    },
    "5534": {
      "op": "ADD"
    },
    "5535": {
      "op": "CALLDATALOAD"
    },
    "5536": {
      "op": "PUSH8",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "5545": {
      "op": "DUP2"
    },
    "5546": {
      "op": "GT"
    },
    "5547": {
      "op": "ISZERO"
    },
    "5548": {
      "op": "PUSH2",
      "value": "0x15B4"
    },
    "5551": {
      "op": "JUMPI"
    },
    "5552": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5554": {
      "op": "DUP1"
    },
    "5555": {
      "op": "REVERT"
    },
    "5556": {
      "op": "JUMPDEST"
    },
    "5557": {
      "op": "PUSH2",
      "value": "0x15C0"
    },
    "5560": {
      "op": "DUP7"
    },
    "5561": {
      "op": "DUP3"
    },
    "5562": {
      "op": "DUP8"
    },
    "5563": {
      "op": "ADD"
    },
    "5564": {
      "op": "PUSH2",
      "value": "0x14F4"
    },
    "5567": {
      "jump": "i",
      "op": "JUMP"
    },
    "5568": {
      "op": "JUMPDEST"
    },
    "5569": {
      "op": "SWAP3"
    },
    "5570": {
      "op": "POP"
    },
    "5571": {
      "op": "POP"
    },
    "5572": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "5574": {
      "op": "DUP5"
    },
    "5575": {
      "op": "ADD"
    },
    "5576": {
      "op": "CALLDATALOAD"
    },
    "5577": {
      "op": "SWAP1"
    },
    "5578": {
      "op": "POP"
    },
    "5579": {
      "op": "SWAP3"
    },
    "5580": {
      "op": "POP"
    },
    "5581": {
      "op": "SWAP3"
    },
    "5582": {
      "op": "POP"
    },
    "5583": {
      "op": "SWAP3"
    },
    "5584": {
      "jump": "o",
      "op": "JUMP"
    },
    "5585": {
      "op": "JUMPDEST"
    },
    "5586": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5588": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5590": {
      "op": "DUP3"
    },
    "5591": {
      "op": "DUP5"
    },
    "5592": {
      "op": "SUB"
    },
    "5593": {
      "op": "SLT"
    },
    "5594": {
      "op": "ISZERO"
    },
    "5595": {
      "op": "PUSH2",
      "value": "0x15E3"
    },
    "5598": {
      "op": "JUMPI"
    },
    "5599": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5601": {
      "op": "DUP1"
    },
    "5602": {
      "op": "REVERT"
    },
    "5603": {
      "op": "JUMPDEST"
    },
    "5604": {
      "op": "POP"
    },
    "5605": {
      "op": "CALLDATALOAD"
    },
    "5606": {
      "op": "SWAP2"
    },
    "5607": {
      "op": "SWAP1"
    },
    "5608": {
      "op": "POP"
    },
    "5609": {
      "jump": "o",
      "op": "JUMP"
    },
    "5610": {
      "op": "JUMPDEST"
    },
    "5611": {
      "op": "DUP1"
    },
    "5612": {
      "op": "CALLDATALOAD"
    },
    "5613": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5615": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5617": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5619": {
      "op": "SHL"
    },
    "5620": {
      "op": "SUB"
    },
    "5621": {
      "op": "DUP2"
    },
    "5622": {
      "op": "AND"
    },
    "5623": {
      "op": "DUP2"
    },
    "5624": {
      "op": "EQ"
    },
    "5625": {
      "op": "PUSH2",
      "value": "0x1601"
    },
    "5628": {
      "op": "JUMPI"
    },
    "5629": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5631": {
      "op": "DUP1"
    },
    "5632": {
      "op": "REVERT"
    },
    "5633": {
      "op": "JUMPDEST"
    },
    "5634": {
      "op": "SWAP2"
    },
    "5635": {
      "op": "SWAP1"
    },
    "5636": {
      "op": "POP"
    },
    "5637": {
      "jump": "o",
      "op": "JUMP"
    },
    "5638": {
      "op": "JUMPDEST"
    },
    "5639": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5641": {
      "op": "DUP1"
    },
    "5642": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "5644": {
      "op": "DUP4"
    },
    "5645": {
      "op": "DUP6"
    },
    "5646": {
      "op": "SUB"
    },
    "5647": {
      "op": "SLT"
    },
    "5648": {
      "op": "ISZERO"
    },
    "5649": {
      "op": "PUSH2",
      "value": "0x1619"
    },
    "5652": {
      "op": "JUMPI"
    },
    "5653": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5655": {
      "op": "DUP1"
    },
    "5656": {
      "op": "REVERT"
    },
    "5657": {
      "op": "JUMPDEST"
    },
    "5658": {
      "op": "PUSH2",
      "value": "0x1622"
    },
    "5661": {
      "op": "DUP4"
    },
    "5662": {
      "op": "PUSH2",
      "value": "0x15EA"
    },
    "5665": {
      "jump": "i",
      "op": "JUMP"
    },
    "5666": {
      "op": "JUMPDEST"
    },
    "5667": {
      "op": "SWAP5"
    },
    "5668": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5670": {
      "op": "SWAP4"
    },
    "5671": {
      "op": "SWAP1"
    },
    "5672": {
      "op": "SWAP4"
    },
    "5673": {
      "op": "ADD"
    },
    "5674": {
      "op": "CALLDATALOAD"
    },
    "5675": {
      "op": "SWAP4"
    },
    "5676": {
      "op": "POP"
    },
    "5677": {
      "op": "POP"
    },
    "5678": {
      "op": "POP"
    },
    "5679": {
      "jump": "o",
      "op": "JUMP"
    },
    "5680": {
      "op": "JUMPDEST"
    },
    "5681": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5683": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5685": {
      "op": "DUP3"
    },
    "5686": {
      "op": "DUP5"
    },
    "5687": {
      "op": "SUB"
    },
    "5688": {
      "op": "SLT"
    },
    "5689": {
      "op": "ISZERO"
    },
    "5690": {
      "op": "PUSH2",
      "value": "0x1642"
    },
    "5693": {
      "op": "JUMPI"
    },
    "5694": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5696": {
      "op": "DUP1"
    },
    "5697": {
      "op": "REVERT"
    },
    "5698": {
      "op": "JUMPDEST"
    },
    "5699": {
      "op": "PUSH2",
      "value": "0xA6B"
    },
    "5702": {
      "op": "DUP3"
    },
    "5703": {
      "op": "PUSH2",
      "value": "0x15EA"
    },
    "5706": {
      "jump": "i",
      "op": "JUMP"
    },
    "5707": {
      "op": "JUMPDEST"
    },
    "5708": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5710": {
      "op": "DUP1"
    },
    "5711": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "5713": {
      "op": "DUP4"
    },
    "5714": {
      "op": "DUP6"
    },
    "5715": {
      "op": "SUB"
    },
    "5716": {
      "op": "SLT"
    },
    "5717": {
      "op": "ISZERO"
    },
    "5718": {
      "op": "PUSH2",
      "value": "0x165E"
    },
    "5721": {
      "op": "JUMPI"
    },
    "5722": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5724": {
      "op": "DUP1"
    },
    "5725": {
      "op": "REVERT"
    },
    "5726": {
      "op": "JUMPDEST"
    },
    "5727": {
      "op": "PUSH2",
      "value": "0x1667"
    },
    "5730": {
      "op": "DUP4"
    },
    "5731": {
      "op": "PUSH2",
      "value": "0x15EA"
    },
    "5734": {
      "jump": "i",
      "op": "JUMP"
    },
    "5735": {
      "op": "JUMPDEST"
    },
    "5736": {
      "op": "SWAP2"
    },
    "5737": {
      "op": "POP"
    },
    "5738": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5740": {
      "op": "DUP4"
    },
    "5741": {
      "op": "ADD"
    },
    "5742": {
      "op": "CALLDATALOAD"
    },
    "5743": {
      "op": "PUSH8",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "5752": {
      "op": "DUP2"
    },
    "5753": {
      "op": "GT"
    },
    "5754": {
      "op": "ISZERO"
    },
    "5755": {
      "op": "PUSH2",
      "value": "0x1683"
    },
    "5758": {
      "op": "JUMPI"
    },
    "5759": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5761": {
      "op": "DUP1"
    },
    "5762": {
      "op": "REVERT"
    },
    "5763": {
      "op": "JUMPDEST"
    },
    "5764": {
      "op": "PUSH2",
      "value": "0x168F"
    },
    "5767": {
      "op": "DUP6"
    },
    "5768": {
      "op": "DUP3"
    },
    "5769": {
      "op": "DUP7"
    },
    "5770": {
      "op": "ADD"
    },
    "5771": {
      "op": "PUSH2",
      "value": "0x14F4"
    },
    "5774": {
      "jump": "i",
      "op": "JUMP"
    },
    "5775": {
      "op": "JUMPDEST"
    },
    "5776": {
      "op": "SWAP2"
    },
    "5777": {
      "op": "POP"
    },
    "5778": {
      "op": "POP"
    },
    "5779": {
      "op": "SWAP3"
    },
    "5780": {
      "op": "POP"
    },
    "5781": {
      "op": "SWAP3"
    },
    "5782": {
      "op": "SWAP1"
    },
    "5783": {
      "op": "POP"
    },
    "5784": {
      "jump": "o",
      "op": "JUMP"
    },
    "5785": {
      "op": "JUMPDEST"
    },
    "5786": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5788": {
      "op": "DUP1"
    },
    "5789": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5791": {
      "op": "DUP1"
    },
    "5792": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5794": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5796": {
      "op": "DUP7"
    },
    "5797": {
      "op": "DUP9"
    },
    "5798": {
      "op": "SUB"
    },
    "5799": {
      "op": "SLT"
    },
    "5800": {
      "op": "ISZERO"
    },
    "5801": {
      "op": "PUSH2",
      "value": "0x16B1"
    },
    "5804": {
      "op": "JUMPI"
    },
    "5805": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5807": {
      "op": "DUP1"
    },
    "5808": {
      "op": "REVERT"
    },
    "5809": {
      "op": "JUMPDEST"
    },
    "5810": {
      "op": "PUSH2",
      "value": "0x16BA"
    },
    "5813": {
      "op": "DUP7"
    },
    "5814": {
      "op": "PUSH2",
      "value": "0x15EA"
    },
    "5817": {
      "jump": "i",
      "op": "JUMP"
    },
    "5818": {
      "op": "JUMPDEST"
    },
    "5819": {
      "op": "SWAP5"
    },
    "5820": {
      "op": "POP"
    },
    "5821": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5823": {
      "op": "DUP7"
    },
    "5824": {
      "op": "ADD"
    },
    "5825": {
      "op": "CALLDATALOAD"
    },
    "5826": {
      "op": "SWAP4"
    },
    "5827": {
      "op": "POP"
    },
    "5828": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "5830": {
      "op": "DUP7"
    },
    "5831": {
      "op": "ADD"
    },
    "5832": {
      "op": "CALLDATALOAD"
    },
    "5833": {
      "op": "PUSH8",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "5842": {
      "op": "DUP1"
    },
    "5843": {
      "op": "DUP3"
    },
    "5844": {
      "op": "GT"
    },
    "5845": {
      "op": "ISZERO"
    },
    "5846": {
      "op": "PUSH2",
      "value": "0x16DE"
    },
    "5849": {
      "op": "JUMPI"
    },
    "5850": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5852": {
      "op": "DUP1"
    },
    "5853": {
      "op": "REVERT"
    },
    "5854": {
      "op": "JUMPDEST"
    },
    "5855": {
      "op": "PUSH2",
      "value": "0x16EA"
    },
    "5858": {
      "op": "DUP10"
    },
    "5859": {
      "op": "DUP4"
    },
    "5860": {
      "op": "DUP11"
    },
    "5861": {
      "op": "ADD"
    },
    "5862": {
      "op": "PUSH2",
      "value": "0x14F4"
    },
    "5865": {
      "jump": "i",
      "op": "JUMP"
    },
    "5866": {
      "op": "JUMPDEST"
    },
    "5867": {
      "op": "SWAP5"
    },
    "5868": {
      "op": "POP"
    },
    "5869": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "5871": {
      "op": "DUP9"
    },
    "5872": {
      "op": "ADD"
    },
    "5873": {
      "op": "CALLDATALOAD"
    },
    "5874": {
      "op": "SWAP4"
    },
    "5875": {
      "op": "POP"
    },
    "5876": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "5878": {
      "op": "DUP9"
    },
    "5879": {
      "op": "ADD"
    },
    "5880": {
      "op": "CALLDATALOAD"
    },
    "5881": {
      "op": "SWAP2"
    },
    "5882": {
      "op": "POP"
    },
    "5883": {
      "op": "DUP1"
    },
    "5884": {
      "op": "DUP3"
    },
    "5885": {
      "op": "GT"
    },
    "5886": {
      "op": "ISZERO"
    },
    "5887": {
      "op": "PUSH2",
      "value": "0x1707"
    },
    "5890": {
      "op": "JUMPI"
    },
    "5891": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5893": {
      "op": "DUP1"
    },
    "5894": {
      "op": "REVERT"
    },
    "5895": {
      "op": "JUMPDEST"
    },
    "5896": {
      "op": "POP"
    },
    "5897": {
      "op": "PUSH2",
      "value": "0x1714"
    },
    "5900": {
      "op": "DUP9"
    },
    "5901": {
      "op": "DUP3"
    },
    "5902": {
      "op": "DUP10"
    },
    "5903": {
      "op": "ADD"
    },
    "5904": {
      "op": "PUSH2",
      "value": "0x14F4"
    },
    "5907": {
      "jump": "i",
      "op": "JUMP"
    },
    "5908": {
      "op": "JUMPDEST"
    },
    "5909": {
      "op": "SWAP2"
    },
    "5910": {
      "op": "POP"
    },
    "5911": {
      "op": "POP"
    },
    "5912": {
      "op": "SWAP3"
    },
    "5913": {
      "op": "SWAP6"
    },
    "5914": {
      "op": "POP"
    },
    "5915": {
      "op": "SWAP3"
    },
    "5916": {
      "op": "SWAP6"
    },
    "5917": {
      "op": "SWAP1"
    },
    "5918": {
      "op": "SWAP4"
    },
    "5919": {
      "op": "POP"
    },
    "5920": {
      "jump": "o",
      "op": "JUMP"
    },
    "5921": {
      "op": "JUMPDEST"
    },
    "5922": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5924": {
      "op": "DUP1"
    },
    "5925": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "5927": {
      "op": "DUP4"
    },
    "5928": {
      "op": "DUP6"
    },
    "5929": {
      "op": "SUB"
    },
    "5930": {
      "op": "SLT"
    },
    "5931": {
      "op": "ISZERO"
    },
    "5932": {
      "op": "PUSH2",
      "value": "0x1734"
    },
    "5935": {
      "op": "JUMPI"
    },
    "5936": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5938": {
      "op": "DUP1"
    },
    "5939": {
      "op": "REVERT"
    },
    "5940": {
      "op": "JUMPDEST"
    },
    "5941": {
      "op": "DUP3"
    },
    "5942": {
      "op": "CALLDATALOAD"
    },
    "5943": {
      "op": "SWAP2"
    },
    "5944": {
      "op": "POP"
    },
    "5945": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5947": {
      "op": "DUP4"
    },
    "5948": {
      "op": "ADD"
    },
    "5949": {
      "op": "CALLDATALOAD"
    },
    "5950": {
      "op": "PUSH8",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "5959": {
      "op": "DUP2"
    },
    "5960": {
      "op": "GT"
    },
    "5961": {
      "op": "ISZERO"
    },
    "5962": {
      "op": "PUSH2",
      "value": "0x1683"
    },
    "5965": {
      "op": "JUMPI"
    },
    "5966": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5968": {
      "op": "DUP1"
    },
    "5969": {
      "op": "REVERT"
    },
    "5970": {
      "op": "JUMPDEST"
    },
    "5971": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5973": {
      "op": "DUP1"
    },
    "5974": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5976": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "5978": {
      "op": "DUP5"
    },
    "5979": {
      "op": "DUP7"
    },
    "5980": {
      "op": "SUB"
    },
    "5981": {
      "op": "SLT"
    },
    "5982": {
      "op": "ISZERO"
    },
    "5983": {
      "op": "PUSH2",
      "value": "0x1767"
    },
    "5986": {
      "op": "JUMPI"
    },
    "5987": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5989": {
      "op": "DUP1"
    },
    "5990": {
      "op": "REVERT"
    },
    "5991": {
      "op": "JUMPDEST"
    },
    "5992": {
      "op": "PUSH2",
      "value": "0x1770"
    },
    "5995": {
      "op": "DUP5"
    },
    "5996": {
      "op": "PUSH2",
      "value": "0x15EA"
    },
    "5999": {
      "jump": "i",
      "op": "JUMP"
    },
    "6000": {
      "op": "JUMPDEST"
    },
    "6001": {
      "op": "SWAP3"
    },
    "6002": {
      "op": "POP"
    },
    "6003": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "6005": {
      "op": "DUP5"
    },
    "6006": {
      "op": "ADD"
    },
    "6007": {
      "op": "CALLDATALOAD"
    },
    "6008": {
      "op": "SWAP2"
    },
    "6009": {
      "op": "POP"
    },
    "6010": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "6012": {
      "op": "DUP5"
    },
    "6013": {
      "op": "ADD"
    },
    "6014": {
      "op": "CALLDATALOAD"
    },
    "6015": {
      "op": "PUSH8",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "6024": {
      "op": "DUP2"
    },
    "6025": {
      "op": "GT"
    },
    "6026": {
      "op": "ISZERO"
    },
    "6027": {
      "op": "PUSH2",
      "value": "0x1793"
    },
    "6030": {
      "op": "JUMPI"
    },
    "6031": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "6033": {
      "op": "DUP1"
    },
    "6034": {
      "op": "REVERT"
    },
    "6035": {
      "op": "JUMPDEST"
    },
    "6036": {
      "op": "PUSH2",
      "value": "0x179F"
    },
    "6039": {
      "op": "DUP7"
    },
    "6040": {
      "op": "DUP3"
    },
    "6041": {
      "op": "DUP8"
    },
    "6042": {
      "op": "ADD"
    },
    "6043": {
      "op": "PUSH2",
      "value": "0x14F4"
    },
    "6046": {
      "jump": "i",
      "op": "JUMP"
    },
    "6047": {
      "op": "JUMPDEST"
    },
    "6048": {
      "op": "SWAP2"
    },
    "6049": {
      "op": "POP"
    },
    "6050": {
      "op": "POP"
    },
    "6051": {
      "op": "SWAP3"
    },
    "6052": {
      "op": "POP"
    },
    "6053": {
      "op": "SWAP3"
    },
    "6054": {
      "op": "POP"
    },
    "6055": {
      "op": "SWAP3"
    },
    "6056": {
      "jump": "o",
      "op": "JUMP"
    },
    "6057": {
      "op": "JUMPDEST"
    },
    "6058": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6060": {
      "op": "DUP2"
    },
    "6061": {
      "op": "DUP2"
    },
    "6062": {
      "op": "SHR"
    },
    "6063": {
      "op": "SWAP1"
    },
    "6064": {
      "op": "DUP3"
    },
    "6065": {
      "op": "AND"
    },
    "6066": {
      "op": "DUP1"
    },
    "6067": {
      "op": "PUSH2",
      "value": "0x17BD"
    },
    "6070": {
      "op": "JUMPI"
    },
    "6071": {
      "op": "PUSH1",
      "value": "0x7F"
    },
    "6073": {
      "op": "DUP3"
    },
    "6074": {
      "op": "AND"
    },
    "6075": {
      "op": "SWAP2"
    },
    "6076": {
      "op": "POP"
    },
    "6077": {
      "op": "JUMPDEST"
    },
    "6078": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "6080": {
      "op": "DUP3"
    },
    "6081": {
      "op": "LT"
    },
    "6082": {
      "op": "DUP2"
    },
    "6083": {
      "op": "SUB"
    },
    "6084": {
      "op": "PUSH2",
      "value": "0x17DD"
    },
    "6087": {
      "op": "JUMPI"
    },
    "6088": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "6093": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "6095": {
      "op": "SHL"
    },
    "6096": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "6098": {
      "op": "MSTORE"
    },
    "6099": {
      "op": "PUSH1",
      "value": "0x22"
    },
    "6101": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "6103": {
      "op": "MSTORE"
    },
    "6104": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "6106": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "6108": {
      "op": "REVERT"
    },
    "6109": {
      "op": "JUMPDEST"
    },
    "6110": {
      "op": "POP"
    },
    "6111": {
      "op": "SWAP2"
    },
    "6112": {
      "op": "SWAP1"
    },
    "6113": {
      "op": "POP"
    },
    "6114": {
      "jump": "o",
      "op": "JUMP"
    },
    "6115": {
      "op": "JUMPDEST"
    },
    "6116": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "6118": {
      "op": "DUP4"
    },
    "6119": {
      "op": "MLOAD"
    },
    "6120": {
      "op": "PUSH2",
      "value": "0x17F5"
    },
    "6123": {
      "op": "DUP2"
    },
    "6124": {
      "op": "DUP5"
    },
    "6125": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "6127": {
      "op": "DUP9"
    },
    "6128": {
      "op": "ADD"
    },
    "6129": {
      "op": "PUSH2",
      "value": "0x147B"
    },
    "6132": {
      "jump": "i",
      "op": "JUMP"
    },
    "6133": {
      "op": "JUMPDEST"
    },
    "6134": {
      "op": "DUP4"
    },
    "6135": {
      "op": "MLOAD"
    },
    "6136": {
      "op": "SWAP1"
    },
    "6137": {
      "op": "DUP4"
    },
    "6138": {
      "op": "ADD"
    },
    "6139": {
      "op": "SWAP1"
    },
    "6140": {
      "op": "PUSH2",
      "value": "0x1809"
    },
    "6143": {
      "op": "DUP2"
    },
    "6144": {
      "op": "DUP4"
    },
    "6145": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "6147": {
      "op": "DUP9"
    },
    "6148": {
      "op": "ADD"
    },
    "6149": {
      "op": "PUSH2",
      "value": "0x147B"
    },
    "6152": {
      "jump": "i",
      "op": "JUMP"
    },
    "6153": {
      "op": "JUMPDEST"
    },
    "6154": {
      "op": "ADD"
    },
    "6155": {
      "op": "SWAP5"
    },
    "6156": {
      "op": "SWAP4"
    },
    "6157": {
      "op": "POP"
    },
    "6158": {
      "op": "POP"
    },
    "6159": {
      "op": "POP"
    },
    "6160": {
      "op": "POP"
    },
    "6161": {
      "jump": "o",
      "op": "JUMP"
    },
    "6162": {
      "op": "JUMPDEST"
    },
    "6163": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "6165": {
      "op": "DUP1"
    },
    "6166": {
      "op": "DUP3"
    },
    "6167": {
      "op": "MSTORE"
    },
    "6168": {
      "op": "DUP2"
    },
    "6169": {
      "op": "DUP2"
    },
    "6170": {
      "op": "ADD"
    },
    "6171": {
      "op": "MSTORE"
    },
    "6172": {
      "op": "PUSH32",
      "value": "0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572"
    },
    "6205": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "6207": {
      "op": "DUP3"
    },
    "6208": {
      "op": "ADD"
    },
    "6209": {
      "op": "MSTORE"
    },
    "6210": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "6212": {
      "op": "ADD"
    },
    "6213": {
      "op": "SWAP1"
    },
    "6214": {
      "jump": "o",
      "op": "JUMP"
    },
    "6215": {
      "op": "JUMPDEST"
    },
    "6216": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "6221": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "6223": {
      "op": "SHL"
    },
    "6224": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "6226": {
      "op": "MSTORE"
    },
    "6227": {
      "op": "PUSH1",
      "value": "0x11"
    },
    "6229": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "6231": {
      "op": "MSTORE"
    },
    "6232": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "6234": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "6236": {
      "op": "REVERT"
    },
    "6237": {
      "op": "JUMPDEST"
    },
    "6238": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "6240": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6242": {
      "op": "DUP3"
    },
    "6243": {
      "op": "ADD"
    },
    "6244": {
      "op": "PUSH2",
      "value": "0x186F"
    },
    "6247": {
      "op": "JUMPI"
    },
    "6248": {
      "op": "PUSH2",
      "value": "0x186F"
    },
    "6251": {
      "op": "PUSH2",
      "value": "0x1847"
    },
    "6254": {
      "jump": "i",
      "op": "JUMP"
    },
    "6255": {
      "op": "JUMPDEST"
    },
    "6256": {
      "op": "POP"
    },
    "6257": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6259": {
      "op": "ADD"
    },
    "6260": {
      "op": "SWAP1"
    },
    "6261": {
      "jump": "o",
      "op": "JUMP"
    },
    "6262": {
      "op": "JUMPDEST"
    },
    "6263": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "6268": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "6270": {
      "op": "SHL"
    },
    "6271": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "6273": {
      "op": "MSTORE"
    },
    "6274": {
      "op": "PUSH1",
      "value": "0x12"
    },
    "6276": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "6278": {
      "op": "MSTORE"
    },
    "6279": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "6281": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "6283": {
      "op": "REVERT"
    },
    "6284": {
      "op": "JUMPDEST"
    },
    "6285": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "6287": {
      "op": "DUP3"
    },
    "6288": {
      "op": "PUSH2",
      "value": "0x189B"
    },
    "6291": {
      "op": "JUMPI"
    },
    "6292": {
      "op": "PUSH2",
      "value": "0x189B"
    },
    "6295": {
      "op": "PUSH2",
      "value": "0x1876"
    },
    "6298": {
      "jump": "i",
      "op": "JUMP"
    },
    "6299": {
      "op": "JUMPDEST"
    },
    "6300": {
      "op": "POP"
    },
    "6301": {
      "op": "DIV"
    },
    "6302": {
      "op": "SWAP1"
    },
    "6303": {
      "jump": "o",
      "op": "JUMP"
    },
    "6304": {
      "op": "JUMPDEST"
    },
    "6305": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "6307": {
      "op": "DUP3"
    },
    "6308": {
      "op": "DUP3"
    },
    "6309": {
      "op": "LT"
    },
    "6310": {
      "op": "ISZERO"
    },
    "6311": {
      "op": "PUSH2",
      "value": "0x18B2"
    },
    "6314": {
      "op": "JUMPI"
    },
    "6315": {
      "op": "PUSH2",
      "value": "0x18B2"
    },
    "6318": {
      "op": "PUSH2",
      "value": "0x1847"
    },
    "6321": {
      "jump": "i",
      "op": "JUMP"
    },
    "6322": {
      "op": "JUMPDEST"
    },
    "6323": {
      "op": "POP"
    },
    "6324": {
      "op": "SUB"
    },
    "6325": {
      "op": "SWAP1"
    },
    "6326": {
      "jump": "o",
      "op": "JUMP"
    },
    "6327": {
      "op": "JUMPDEST"
    },
    "6328": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "6330": {
      "op": "DUP3"
    },
    "6331": {
      "op": "PUSH2",
      "value": "0x18C6"
    },
    "6334": {
      "op": "JUMPI"
    },
    "6335": {
      "op": "PUSH2",
      "value": "0x18C6"
    },
    "6338": {
      "op": "PUSH2",
      "value": "0x1876"
    },
    "6341": {
      "jump": "i",
      "op": "JUMP"
    },
    "6342": {
      "op": "JUMPDEST"
    },
    "6343": {
      "op": "POP"
    },
    "6344": {
      "op": "MOD"
    },
    "6345": {
      "op": "SWAP1"
    },
    "6346": {
      "jump": "o",
      "op": "JUMP"
    },
    "6347": {
      "op": "JUMPDEST"
    },
    "6348": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "6350": {
      "op": "DUP3"
    },
    "6351": {
      "op": "NOT"
    },
    "6352": {
      "op": "DUP3"
    },
    "6353": {
      "op": "GT"
    },
    "6354": {
      "op": "ISZERO"
    },
    "6355": {
      "op": "PUSH2",
      "value": "0x18DE"
    },
    "6358": {
      "op": "JUMPI"
    },
    "6359": {
      "op": "PUSH2",
      "value": "0x18DE"
    },
    "6362": {
      "op": "PUSH2",
      "value": "0x1847"
    },
    "6365": {
      "jump": "i",
      "op": "JUMP"
    },
    "6366": {
      "op": "JUMPDEST"
    },
    "6367": {
      "op": "POP"
    },
    "6368": {
      "op": "ADD"
    },
    "6369": {
      "op": "SWAP1"
    },
    "6370": {
      "jump": "o",
      "op": "JUMP"
    },
    "6371": {
      "op": "JUMPDEST"
    },
    "6372": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "6377": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "6379": {
      "op": "SHL"
    },
    "6380": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "6382": {
      "op": "MSTORE"
    },
    "6383": {
      "op": "PUSH1",
      "value": "0x32"
    },
    "6385": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "6387": {
      "op": "MSTORE"
    },
    "6388": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "6390": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "6392": {
      "op": "REVERT"
    },
    "6393": {
      "op": "JUMPDEST"
    },
    "6394": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "6396": {
      "op": "DUP3"
    },
    "6397": {
      "op": "GT"
    },
    "6398": {
      "op": "ISZERO"
    },
    "6399": {
      "op": "PUSH2",
      "value": "0x7C4"
    },
    "6402": {
      "op": "JUMPI"
    },
    "6403": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "6405": {
      "op": "DUP2"
    },
    "6406": {
      "op": "DUP2"
    },
    "6407": {
      "op": "MSTORE"
    },
    "6408": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "6410": {
      "op": "DUP2"
    },
    "6411": {
      "op": "KECCAK256"
    },
    "6412": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "6414": {
      "op": "DUP6"
    },
    "6415": {
      "op": "ADD"
    },
    "6416": {
      "op": "PUSH1",
      "value": "0x5"
    },
    "6418": {
      "op": "SHR"
    },
    "6419": {
      "op": "DUP2"
    },
    "6420": {
      "op": "ADD"
    },
    "6421": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "6423": {
      "op": "DUP7"
    },
    "6424": {
      "op": "LT"
    },
    "6425": {
      "op": "ISZERO"
    },
    "6426": {
      "op": "PUSH2",
      "value": "0x1920"
    },
    "6429": {
      "op": "JUMPI"
    },
    "6430": {
      "op": "POP"
    },
    "6431": {
      "op": "DUP1"
    },
    "6432": {
      "op": "JUMPDEST"
    },
    "6433": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "6435": {
      "op": "DUP6"
    },
    "6436": {
      "op": "ADD"
    },
    "6437": {
      "op": "PUSH1",
      "value": "0x5"
    },
    "6439": {
      "op": "SHR"
    },
    "6440": {
      "op": "DUP3"
    },
    "6441": {
      "op": "ADD"
    },
    "6442": {
      "op": "SWAP2"
    },
    "6443": {
      "op": "POP"
    },
    "6444": {
      "op": "JUMPDEST"
    },
    "6445": {
      "op": "DUP2"
    },
    "6446": {
      "op": "DUP2"
    },
    "6447": {
      "op": "LT"
    },
    "6448": {
      "op": "ISZERO"
    },
    "6449": {
      "op": "PUSH2",
      "value": "0x193F"
    },
    "6452": {
      "op": "JUMPI"
    },
    "6453": {
      "op": "DUP3"
    },
    "6454": {
      "op": "DUP2"
    },
    "6455": {
      "op": "SSTORE"
    },
    "6456": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6458": {
      "op": "ADD"
    },
    "6459": {
      "op": "PUSH2",
      "value": "0x192C"
    },
    "6462": {
      "op": "JUMP"
    },
    "6463": {
      "op": "JUMPDEST"
    },
    "6464": {
      "op": "POP"
    },
    "6465": {
      "op": "POP"
    },
    "6466": {
      "op": "POP"
    },
    "6467": {
      "op": "POP"
    },
    "6468": {
      "op": "POP"
    },
    "6469": {
      "op": "POP"
    },
    "6470": {
      "jump": "o",
      "op": "JUMP"
    },
    "6471": {
      "op": "JUMPDEST"
    },
    "6472": {
      "op": "DUP2"
    },
    "6473": {
      "op": "MLOAD"
    },
    "6474": {
      "op": "PUSH8",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "6483": {
      "op": "DUP2"
    },
    "6484": {
      "op": "GT"
    },
    "6485": {
      "op": "ISZERO"
    },
    "6486": {
      "op": "PUSH2",
      "value": "0x1961"
    },
    "6489": {
      "op": "JUMPI"
    },
    "6490": {
      "op": "PUSH2",
      "value": "0x1961"
    },
    "6493": {
      "op": "PUSH2",
      "value": "0x14DE"
    },
    "6496": {
      "jump": "i",
      "op": "JUMP"
    },
    "6497": {
      "op": "JUMPDEST"
    },
    "6498": {
      "op": "PUSH2",
      "value": "0x1975"
    },
    "6501": {
      "op": "DUP2"
    },
    "6502": {
      "op": "PUSH2",
      "value": "0x196F"
    },
    "6505": {
      "op": "DUP5"
    },
    "6506": {
      "op": "SLOAD"
    },
    "6507": {
      "op": "PUSH2",
      "value": "0x17A9"
    },
    "6510": {
      "jump": "i",
      "op": "JUMP"
    },
    "6511": {
      "op": "JUMPDEST"
    },
    "6512": {
      "op": "DUP5"
    },
    "6513": {
      "op": "PUSH2",
      "value": "0x18F9"
    },
    "6516": {
      "jump": "i",
      "op": "JUMP"
    },
    "6517": {
      "op": "JUMPDEST"
    },
    "6518": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "6520": {
      "op": "DUP1"
    },
    "6521": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "6523": {
      "op": "DUP4"
    },
    "6524": {
      "op": "GT"
    },
    "6525": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6527": {
      "op": "DUP2"
    },
    "6528": {
      "op": "EQ"
    },
    "6529": {
      "op": "PUSH2",
      "value": "0x19AA"
    },
    "6532": {
      "op": "JUMPI"
    },
    "6533": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "6535": {
      "op": "DUP5"
    },
    "6536": {
      "op": "ISZERO"
    },
    "6537": {
      "op": "PUSH2",
      "value": "0x1992"
    },
    "6540": {
      "op": "JUMPI"
    },
    "6541": {
      "op": "POP"
    },
    "6542": {
      "op": "DUP6"
    },
    "6543": {
      "op": "DUP4"
    },
    "6544": {
      "op": "ADD"
    },
    "6545": {
      "op": "MLOAD"
    },
    "6546": {
      "op": "JUMPDEST"
    },
    "6547": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "6549": {
      "op": "NOT"
    },
    "6550": {
      "op": "PUSH1",
      "value": "0x3"
    },
    "6552": {
      "op": "DUP7"
    },
    "6553": {
      "op": "SWAP1"
    },
    "6554": {
      "op": "SHL"
    },
    "6555": {
      "op": "SHR"
    },
    "6556": {
      "op": "NOT"
    },
    "6557": {
      "op": "AND"
    },
    "6558": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6560": {
      "op": "DUP6"
    },
    "6561": {
      "op": "SWAP1"
    },
    "6562": {
      "op": "SHL"
    },
    "6563": {
      "op": "OR"
    },
    "6564": {
      "op": "DUP6"
    },
    "6565": {
      "op": "SSTORE"
    },
    "6566": {
      "op": "PUSH2",
      "value": "0x193F"
    },
    "6569": {
      "op": "JUMP"
    },
    "6570": {
      "op": "JUMPDEST"
    },
    "6571": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "6573": {
      "op": "DUP6"
    },
    "6574": {
      "op": "DUP2"
    },
    "6575": {
      "op": "MSTORE"
    },
    "6576": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "6578": {
      "op": "DUP2"
    },
    "6579": {
      "op": "KECCAK256"
    },
    "6580": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "6582": {
      "op": "NOT"
    },
    "6583": {
      "op": "DUP7"
    },
    "6584": {
      "op": "AND"
    },
    "6585": {
      "op": "SWAP2"
    },
    "6586": {
      "op": "JUMPDEST"
    },
    "6587": {
      "op": "DUP3"
    },
    "6588": {
      "op": "DUP2"
    },
    "6589": {
      "op": "LT"
    },
    "6590": {
      "op": "ISZERO"
    },
    "6591": {
      "op": "PUSH2",
      "value": "0x19D9"
    },
    "6594": {
      "op": "JUMPI"
    },
    "6595": {
      "op": "DUP9"
    },
    "6596": {
      "op": "DUP7"
    },
    "6597": {
      "op": "ADD"
    },
    "6598": {
      "op": "MLOAD"
    },
    "6599": {
      "op": "DUP3"
    },
    "6600": {
      "op": "SSTORE"
    },
    "6601": {
      "op": "SWAP5"
    },
    "6602": {
      "op": "DUP5"
    },
    "6603": {
      "op": "ADD"
    },
    "6604": {
      "op": "SWAP5"
    },
    "6605": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6607": {
      "op": "SWAP1"
    },
    "6608": {
      "op": "SWAP2"
    },
    "6609": {
      "op": "ADD"
    },
    "6610": {
      "op": "SWAP1"
    },
    "6611": {
      "op": "DUP5"
    },
    "6612": {
      "op": "ADD"
    },
    "6613": {
      "op": "PUSH2",
      "value": "0x19BA"
    },
    "6616": {
      "op": "JUMP"
    },
    "6617": {
      "op": "JUMPDEST"
    },
    "6618": {
      "op": "POP"
    },
    "6619": {
      "op": "DUP6"
    },
    "6620": {
      "op": "DUP3"
    },
    "6621": {
      "op": "LT"
    },
    "6622": {
      "op": "ISZERO"
    },
    "6623": {
      "op": "PUSH2",
      "value": "0x19F7"
    },
    "6626": {
      "op": "JUMPI"
    },
    "6627": {
      "op": "DUP8"
    },
    "6628": {
      "op": "DUP6"
    },
    "6629": {
      "op": "ADD"
    },
    "6630": {
      "op": "MLOAD"
    },
    "6631": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "6633": {
      "op": "NOT"
    },
    "6634": {
      "op": "PUSH1",
      "value": "0x3"
    },
    "6636": {
      "op": "DUP9"
    },
    "6637": {
      "op": "SWAP1"
    },
    "6638": {
      "op": "SHL"
    },
    "6639": {
      "op": "PUSH1",
      "value": "0xF8"
    },
    "6641": {
      "op": "AND"
    },
    "6642": {
      "op": "SHR"
    },
    "6643": {
      "op": "NOT"
    },
    "6644": {
      "op": "AND"
    },
    "6645": {
      "op": "DUP2"
    },
    "6646": {
      "op": "SSTORE"
    },
    "6647": {
      "op": "JUMPDEST"
    },
    "6648": {
      "op": "POP"
    },
    "6649": {
      "op": "POP"
    },
    "6650": {
      "op": "POP"
    },
    "6651": {
      "op": "POP"
    },
    "6652": {
      "op": "POP"
    },
    "6653": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6655": {
      "op": "SWAP1"
    },
    "6656": {
      "op": "DUP2"
    },
    "6657": {
      "op": "SHL"
    },
    "6658": {
      "op": "ADD"
    },
    "6659": {
      "op": "SWAP1"
    },
    "6660": {
      "op": "SSTORE"
    },
    "6661": {
      "op": "POP"
    },
    "6662": {
      "jump": "o",
      "op": "JUMP"
    }
  },
  "sha1": "4637e91bb7aab5531c7d9f40eed34fc3173e23ce",
  "source": "// SPDX-License-Identifier: GPL-3.0\n\n///  _____     ______     ______     ______     ______     ______     _____\n/// /\\  __-.  /\\  __ \\   /\\  ___\\   /\\  ___\\   /\\  == \\   /\\  ___\\   /\\  __-.\n/// \\ \\ \\/\\ \\ \\ \\  __ \\  \\ \\ \\____  \\ \\ \\____  \\ \\  __<   \\ \\  __\\   \\ \\ \\/\\ \\\n///  \\ \\____-  \\ \\_\\ \\_\\  \\ \\_____\\  \\ \\_____\\  \\ \\_\\ \\_\\  \\ \\_____\\  \\ \\____-\n///   \\/____/   \\/_/\\/_/   \\/_____/   \\/_____/   \\/_/ /_/   \\/_____/   \\/____/\n\npragma solidity ^0.8.8;\n\nimport \"./Soulbound.sol\";\nimport \"../../common/Allowlist.sol\";\nimport \"@openzeppelin/contracts/access/Ownable.sol\";\n\n/**\n * @title Soulbound Core Contract.\n * @author Daccred.\n * @dev  Soulbound Core template. This contract aims at a soulbound token with\n *       capped supply, set by the deployer or defaulted to 1000000.\n *       Mints and burns affect the current supply of tokens respectively.\n */\ncontract SoulboundCore is Ownable, Soulbound, Allowlist {\n    /// @dev Total supply limit set by deployer or defaulted to 1000000.\n    uint256 internal totalSupply;\n    /// @dev    With every issue and revoke, this value\n    ///         increases and reduces.\n    ///         It cannot be GT the TOTAL_SUPPLY.\n    uint256 internal supply;\n\n    /// @dev Emitted when a token is minted from Signature.\n    event IssueWithSignature(address indexed to, uint256 indexed tokenId);\n    /// @dev Emitted when a token is revoked with Signature.\n    event RevokeWithSignature(uint256 indexed tokenId);\n\n    /**\n     * @dev  Security check to require that the address calling a particular\n     *       function is the allowlistOwner.\n     *\n     * @param _caller Address.\n     */\n    modifier onlyAllowlistOwner(address _caller) {\n        require(_caller == getAllowlistOwner(), \"Not Allowlist Owner!\");\n        _;\n    }\n\n    /// @dev Deploys the 3 contracts inherited by the SoulboundCore.\n    constructor(\n        string memory name,\n        string memory symbol,\n        address _allowlistOwner,\n        uint256 _totalSupply\n    ) Soulbound(name, symbol) Allowlist(_allowlistOwner) {\n        if (_totalSupply == 0) {\n            totalSupply = 1e6;\n        } else {\n            totalSupply = _totalSupply;\n        }\n    }\n\n    /**\n     * @dev  Mints a particular quantity of tokens to `to`,\n     *       on the condition that the address has been\n     *       signed by the allowlistOwner off-chain.\n     *       This will emit the {MintSoulboundToken} event\n     *       from the Soulbound.sol.\n     *\n     * @notice Callable by anyone.\n     *\n     * @param addr       Address to mint tokens to.\n     * @param hash       Hashed message by the allowlistOwner.\n     * @param sig        Signature, signed by the allowlistOwner.\n     * @param tokenId    Id of the tokens to mint to the `addr`.\n     * @param tokenURI   URI of the token to be minted.\n     */\n    function issueWithSignature(\n        address addr,\n        bytes32 hash,\n        bytes memory sig,\n        uint256 tokenId,\n        string memory tokenURI\n    ) public {\n        /// @dev Require that the address is not a zero address.\n        require(addr != address(0), \"Mint to zero address.\");\n        /// @dev    Require that the hash is actually 32 [64 characters]\n        ///         in length.\n        require(hash.length == 32, \"Invalid hash.\");\n        /// @dev Require the length of the signature is 65.\n        require(sig.length == 65, \"Invalid signature length\");\n        /// @dev    Verifies that the address was actually signed by the\n        ///         allowlistOwner.\n        require(verifySignature(hash, sig), \"Hash not signed by owner.\");\n        /// @dev    Mint the tokens to address.\n        ///         [Ref Soulbound.sol].\n        issue(addr, tokenId, tokenURI);\n        /// @dev Emit the IssueWithSignature event.\n        emit IssueWithSignature(addr, tokenId);\n    }\n\n    /**\n     * @dev  Revokes the ownership of `tokenId` from the owner.\n     *       The token must exist and the signature must be signed the\n     *       allowlistOwner.\n     *       This emits the {RevokeWithSignature} event.\n     *\n     * @notice Callable by anyone.\n     *\n     * @param hash       Hashed message by the allowlistOwner.\n     * @param sig        Signature, signed by the allowlistOwner.\n     * @param tokenId    Id of the token to revoke.\n     */\n    function revokeWithSignature(\n        bytes32 hash,\n        bytes memory sig,\n        uint256 tokenId\n    ) public {\n        /// @dev Require that the token exists.\n        require(_exists(tokenId), \"Revoke of inexistent token.\");\n        /// @dev    Require that the hash is actually 32 [64 characters]\n        ///         in length.\n        require(hash.length == 32, \"Invalid hash.\");\n        /// @dev Require the length of the signature is 65.\n        require(sig.length == 65, \"Invalid signature length\");\n        /// @dev    Verifies that the address was actually signed by the\n        ///         allowlistOwner.\n        require(verifySignature(hash, sig), \"Hash not signed by owner.\");\n        /// @dev    Mint the tokens to address.\n        ///         [Ref Soulbound.sol].\n        revoke(ownerOf(tokenId), tokenId);\n        /// @dev Emit the RevokeWithSignature event.\n        emit RevokeWithSignature(tokenId);\n    }\n\n    /**\n     * @dev  Allows the `caller` (allowlistOwner) to set the baseURI.\n     *       This is really important when the caller wants to mint\n     *       Multiple tokens with the same base URI.\n     *\n     * @notice   Callable by the deployer of this contract [DaccredDeployer]\n     *           and the allowlistOwner.\n     */\n    function setBaseURI(address caller, string memory _baseURI)\n        public\n        onlyOwner\n        onlyAllowlistOwner(caller)\n    {\n        /// @dev Set baseURI.\n        _setBaseURI(_baseURI);\n    }\n\n    /**\n     * @dev  Using the `tokenId` passed, it generates a `stringified` tokenURI,\n     *       packing the baseURI and the current tokenId.\n     *       Makes use of OpenZeppelin's uint to string function.\n     *\n     * @notice Callable by anyone.\n     *\n     * @param tokenId ID of token whose tokenURI is desired.\n     *\n     * @return _tokenURI TokenURI of the passed tokenId.\n     */\n    function generateTokenURI(uint256 tokenId)\n        public\n        view\n        returns (string memory _tokenURI)\n    {\n        /// @dev Require baseURI length is not currently 0.\n        require(bytes(_getBaseURI()).length != 0, \"Empty baseURI\");\n        /// @dev Return a packed tokenURI string.\n        _tokenURI = string(abi.encodePacked(_getBaseURI(), toString(tokenId)));\n    }\n\n    /**\n     * @dev Converts a `uint256` to its ASCII `string` decimal representation.\n     *      Copied from OpenZeppelin.\n     */\n    function toString(uint256 value) internal pure returns (string memory) {\n        // Inspired by OraclizeAPI's implementation - MIT licence\n        // https://github.com/oraclize/ethereum-api/blob/b42146b063c7d6ee1358846c198246239e9360e8/oraclizeAPI_0.4.25.sol\n\n        if (value == 0) {\n            return \"0\";\n        }\n        uint256 temp = value;\n        uint256 digits;\n        while (temp != 0) {\n            digits++;\n            temp /= 10;\n        }\n        bytes memory buffer = new bytes(digits);\n        while (value != 0) {\n            digits -= 1;\n            buffer[digits] = bytes1(uint8(48 + uint256(value % 10)));\n            value /= 10;\n        }\n        return string(buffer);\n    }\n}\n",
  "sourceMap": "857:6508:38:-:0;;;1841:328;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2014:15;1990:4;1996:6;1990:4;1996:6;4395:5:41;:13;1990:4:38;4395:5:41;:13;:::i;:::-;-1:-1:-1;4418:7:41;:17;4428:7;4418;:17;:::i;:::-;;4329:113;;921:32:0;940:12;:10;;;:12;;:::i;:::-;921:18;:32::i;:::-;-1:-1:-1;;;;;;;1710:29:14;;1702:58;;;;-1:-1:-1;;;1702:58:14;;4623:2:43;1702:58:14;;;4605:21:43;4662:2;4642:18;;;4635:30;-1:-1:-1;;;4681:18:43;;;4674:46;4737:18;;1702:58:14;;;;;;;;1810:14;:32;;-1:-1:-1;;;;;;1810:32:14;-1:-1:-1;;;;;1810:32:14;;;;;;;;;;-1:-1:-1;2045:17:38;;;2041:122:::2;;2092:3;2078:11;:17:::0;2041:122:::2;;;2126:11;:26:::0;;;2041:122:::2;1841:328:::0;;;;857:6508;;640:96:5;719:10;;640:96::o;2270:187:0:-;2362:6;;;-1:-1:-1;;;;;2378:17:0;;;-1:-1:-1;;;;;;2378:17:0;;;;;;;2410:40;;2362:6;;;2378:17;2362:6;;2410:40;;2343:16;;2410:40;2333:124;2270:187;:::o;14:127:43:-;75:10;70:3;66:20;63:1;56:31;106:4;103:1;96:15;130:4;127:1;120:15;146:885;200:5;253:3;246:4;238:6;234:17;230:27;220:55;;271:1;268;261:12;220:55;294:13;;-1:-1:-1;;;;;356:10:43;;;353:36;;;369:18;;:::i;:::-;444:2;438:9;412:2;498:13;;-1:-1:-1;;494:22:43;;;518:2;490:31;486:40;474:53;;;542:18;;;562:22;;;539:46;536:72;;;588:18;;:::i;:::-;628:10;624:2;617:22;663:2;655:6;648:18;685:4;675:14;;730:3;725:2;720;712:6;708:15;704:24;701:33;698:53;;;747:1;744;737:12;698:53;769:1;760:10;;779:133;793:2;790:1;787:9;779:133;;;881:14;;;877:23;;871:30;850:14;;;846:23;;839:63;804:10;;;;779:133;;;930:2;927:1;924:9;921:80;;;989:1;984:2;979;971:6;967:15;963:24;956:35;921:80;1019:6;146:885;-1:-1:-1;;;;;;146:885:43:o;1036:791::-;1153:6;1161;1169;1177;1230:3;1218:9;1209:7;1205:23;1201:33;1198:53;;;1247:1;1244;1237:12;1198:53;1274:16;;-1:-1:-1;;;;;1339:14:43;;;1336:34;;;1366:1;1363;1356:12;1336:34;1389:61;1442:7;1433:6;1422:9;1418:22;1389:61;:::i;:::-;1379:71;;1496:2;1485:9;1481:18;1475:25;1459:41;;1525:2;1515:8;1512:16;1509:36;;;1541:1;1538;1531:12;1509:36;;1564:63;1619:7;1608:8;1597:9;1593:24;1564:63;:::i;:::-;1670:2;1655:18;;1649:25;1554:73;;-1:-1:-1;1649:25:43;-1:-1:-1;;;;;;1703:31:43;;1693:42;;1683:70;;1749:1;1746;1739:12;1683:70;1817:2;1802:18;;;;1796:25;1036:791;;;;-1:-1:-1;;;1036:791:43:o;1832:380::-;1911:1;1907:12;;;;1954;;;1975:61;;2029:4;2021:6;2017:17;2007:27;;1975:61;2082:2;2074:6;2071:14;2051:18;2048:38;2045:161;;2128:10;2123:3;2119:20;2116:1;2109:31;2163:4;2160:1;2153:15;2191:4;2188:1;2181:15;2045:161;;1832:380;;;:::o;2343:545::-;2445:2;2440:3;2437:11;2434:448;;;2481:1;2506:5;2502:2;2495:17;2551:4;2547:2;2537:19;2621:2;2609:10;2605:19;2602:1;2598:27;2592:4;2588:38;2657:4;2645:10;2642:20;2639:47;;;-1:-1:-1;2680:4:43;2639:47;2735:2;2730:3;2726:12;2723:1;2719:20;2713:4;2709:31;2699:41;;2790:82;2808:2;2801:5;2798:13;2790:82;;;2853:17;;;2834:1;2823:13;2790:82;;;2794:3;;;2434:448;2343:545;;;:::o;3064:1352::-;3184:10;;-1:-1:-1;;;;;3206:30:43;;3203:56;;;3239:18;;:::i;:::-;3268:97;3358:6;3318:38;3350:4;3344:11;3318:38;:::i;:::-;3312:4;3268:97;:::i;:::-;3420:4;;3484:2;3473:14;;3501:1;3496:663;;;;4203:1;4220:6;4217:89;;;-1:-1:-1;4272:19:43;;;4266:26;4217:89;-1:-1:-1;;3021:1:43;3017:11;;;3013:24;3009:29;2999:40;3045:1;3041:11;;;2996:57;4319:81;;3466:944;;3496:663;2290:1;2283:14;;;2327:4;2314:18;;-1:-1:-1;;3532:20:43;;;3650:236;3664:7;3661:1;3658:14;3650:236;;;3753:19;;;3747:26;3732:42;;3845:27;;;;3813:1;3801:14;;;;3680:19;;3650:236;;;3654:3;3914:6;3905:7;3902:19;3899:201;;;3975:19;;;3969:26;-1:-1:-1;;4058:1:43;4054:14;;;4070:3;4050:24;4046:37;4042:42;4027:58;4012:74;;3899:201;-1:-1:-1;;;;;4146:1:43;4130:14;;;4126:22;4113:36;;-1:-1:-1;3064:1352:43:o;4421:340::-;857:6508:38;;;;;;",
  "sourcePath": "contracts/contracts/packages/soulbound/contracts/SoulboundCore.sol",
  "type": "contract"
}