{
  "abi": [
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "startTokenId_",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [],
      "name": "startTokenId",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "allSourcePaths": {
    "35": "contracts/contracts/packages/nft/contracts/mocks/StartTokenIdHelper.sol"
  },
  "ast": {
    "absolutePath": "contracts/contracts/packages/nft/contracts/mocks/StartTokenIdHelper.sol",
    "exportedSymbols": {
      "StartTokenIdHelper": [
        4021
      ]
    },
    "id": 4022,
    "license": "GPL-3.0",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 4007,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".4"
        ],
        "nodeType": "PragmaDirective",
        "src": "429:23:35"
      },
      {
        "abstract": false,
        "baseContracts": [],
        "canonicalName": "StartTokenIdHelper",
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": {
          "id": 4008,
          "nodeType": "StructuredDocumentation",
          "src": "454:308:35",
          "text": " This Helper is used to return a dynmamic value in the overriden _startTokenId() function.\n Extending this Helper before the ERC721A contract give us access to the herein set `startTokenId`\n to be returned by the overriden `_startTokenId()` function of ERC721A in the ERC721AStartTokenId mocks."
        },
        "fullyImplemented": true,
        "id": 4021,
        "linearizedBaseContracts": [
          4021
        ],
        "name": "StartTokenIdHelper",
        "nameLocation": "772:18:35",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "functionSelector": "e6798baa",
            "id": 4010,
            "mutability": "mutable",
            "name": "startTokenId",
            "nameLocation": "812:12:35",
            "nodeType": "VariableDeclaration",
            "scope": 4021,
            "src": "797:27:35",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 4009,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "797:7:35",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "public"
          },
          {
            "body": {
              "id": 4019,
              "nodeType": "Block",
              "src": "866:45:35",
              "statements": [
                {
                  "expression": {
                    "id": 4017,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 4015,
                      "name": "startTokenId",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4010,
                      "src": "876:12:35",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 4016,
                      "name": "startTokenId_",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4012,
                      "src": "891:13:35",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "876:28:35",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 4018,
                  "nodeType": "ExpressionStatement",
                  "src": "876:28:35"
                }
              ]
            },
            "id": 4020,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 4013,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4012,
                  "mutability": "mutable",
                  "name": "startTokenId_",
                  "nameLocation": "851:13:35",
                  "nodeType": "VariableDeclaration",
                  "scope": 4020,
                  "src": "843:21:35",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 4011,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "843:7:35",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "842:23:35"
            },
            "returnParameters": {
              "id": 4014,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "866:0:35"
            },
            "scope": 4021,
            "src": "831:80:35",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "scope": 4022,
        "src": "763:150:35",
        "usedErrors": []
      }
    ],
    "src": "429:485:35"
  },
  "bytecode": "608060405234801561001057600080fd5b506040516100db3803806100db83398101604081905261002f91610037565b600055610050565b60006020828403121561004957600080fd5b5051919050565b607d8061005e6000396000f3fe6080604052348015600f57600080fd5b506004361060285760003560e01c8063e6798baa14602d575b600080fd5b603560005481565b60405190815260200160405180910390f3fea2646970667358221220a2ad42ffdeb264730a0ce52c0b1d5c737b84852edcd8f17ddd90a11e5cd0a3d064736f6c634300080f0033",
  "bytecodeSha1": "c7a0822956208462f5d70c767b4471e2f6a87c9f",
  "compiler": {
    "evm_version": "istanbul",
    "optimizer": {
      "enabled": true,
      "runs": 200
    },
    "version": "0.8.15+commit.e14f2714"
  },
  "contractName": "StartTokenIdHelper",
  "coverageMap": {
    "branches": {
      "35": {}
    },
    "statements": {
      "35": {}
    }
  },
  "dependencies": [],
  "deployedBytecode": "6080604052348015600f57600080fd5b506004361060285760003560e01c8063e6798baa14602d575b600080fd5b603560005481565b60405190815260200160405180910390f3fea2646970667358221220a2ad42ffdeb264730a0ce52c0b1d5c737b84852edcd8f17ddd90a11e5cd0a3d064736f6c634300080f0033",
  "deployedSourceMap": "763:150:35:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;797:27;;;;;;;;;160:25:43;;;148:2;133:18;797:27:35;;;;;;",
  "language": "Solidity",
  "natspec": {
    "kind": "dev",
    "methods": {},
    "notice": "This Helper is used to return a dynmamic value in the overriden _startTokenId() function. Extending this Helper before the ERC721A contract give us access to the herein set `startTokenId` to be returned by the overriden `_startTokenId()` function of ERC721A in the ERC721AStartTokenId mocks.",
    "version": 1
  },
  "offset": [
    763,
    913
  ],
  "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH1 0xF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH1 0x28 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0xE6798BAA EQ PUSH1 0x2D JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x35 PUSH1 0x0 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 LOG2 0xAD TIMESTAMP SELFDESTRUCT 0xDE 0xB2 PUSH5 0x730A0CE52C SIGNEXTEND SAR 0x5C PUSH20 0x7B84852EDCD8F17DDD90A11E5CD0A3D064736F6C PUSH4 0x4300080F STOP CALLER ",
  "pcMap": {
    "0": {
      "offset": [
        763,
        913
      ],
      "op": "PUSH1",
      "path": "35",
      "value": "0x80"
    },
    "2": {
      "fn": null,
      "offset": [
        763,
        913
      ],
      "op": "PUSH1",
      "path": "35",
      "value": "0x40"
    },
    "4": {
      "fn": null,
      "offset": [
        763,
        913
      ],
      "op": "MSTORE",
      "path": "35"
    },
    "5": {
      "fn": null,
      "offset": [
        763,
        913
      ],
      "op": "CALLVALUE",
      "path": "35"
    },
    "6": {
      "fn": null,
      "offset": [
        763,
        913
      ],
      "op": "DUP1",
      "path": "35"
    },
    "7": {
      "fn": null,
      "offset": [
        763,
        913
      ],
      "op": "ISZERO",
      "path": "35"
    },
    "8": {
      "fn": null,
      "offset": [
        763,
        913
      ],
      "op": "PUSH1",
      "path": "35",
      "value": "0xF"
    },
    "10": {
      "fn": null,
      "offset": [
        763,
        913
      ],
      "op": "JUMPI",
      "path": "35"
    },
    "11": {
      "fn": null,
      "offset": [
        763,
        913
      ],
      "op": "PUSH1",
      "path": "35",
      "value": "0x0"
    },
    "13": {
      "fn": null,
      "offset": [
        763,
        913
      ],
      "op": "DUP1",
      "path": "35"
    },
    "14": {
      "dev": "Cannot send ether to nonpayable function",
      "fn": null,
      "offset": [
        763,
        913
      ],
      "op": "REVERT",
      "path": "35"
    },
    "15": {
      "fn": null,
      "offset": [
        763,
        913
      ],
      "op": "JUMPDEST",
      "path": "35"
    },
    "16": {
      "fn": null,
      "offset": [
        763,
        913
      ],
      "op": "POP",
      "path": "35"
    },
    "17": {
      "fn": null,
      "offset": [
        763,
        913
      ],
      "op": "PUSH1",
      "path": "35",
      "value": "0x4"
    },
    "19": {
      "fn": null,
      "offset": [
        763,
        913
      ],
      "op": "CALLDATASIZE",
      "path": "35"
    },
    "20": {
      "fn": null,
      "offset": [
        763,
        913
      ],
      "op": "LT",
      "path": "35"
    },
    "21": {
      "fn": null,
      "offset": [
        763,
        913
      ],
      "op": "PUSH1",
      "path": "35",
      "value": "0x28"
    },
    "23": {
      "fn": null,
      "offset": [
        763,
        913
      ],
      "op": "JUMPI",
      "path": "35"
    },
    "24": {
      "fn": null,
      "offset": [
        763,
        913
      ],
      "op": "PUSH1",
      "path": "35",
      "value": "0x0"
    },
    "26": {
      "fn": null,
      "offset": [
        763,
        913
      ],
      "op": "CALLDATALOAD",
      "path": "35"
    },
    "27": {
      "fn": null,
      "offset": [
        763,
        913
      ],
      "op": "PUSH1",
      "path": "35",
      "value": "0xE0"
    },
    "29": {
      "fn": null,
      "offset": [
        763,
        913
      ],
      "op": "SHR",
      "path": "35"
    },
    "30": {
      "fn": null,
      "offset": [
        763,
        913
      ],
      "op": "DUP1",
      "path": "35"
    },
    "31": {
      "fn": null,
      "offset": [
        763,
        913
      ],
      "op": "PUSH4",
      "path": "35",
      "value": "0xE6798BAA"
    },
    "36": {
      "fn": null,
      "offset": [
        763,
        913
      ],
      "op": "EQ",
      "path": "35"
    },
    "37": {
      "fn": null,
      "offset": [
        763,
        913
      ],
      "op": "PUSH1",
      "path": "35",
      "value": "0x2D"
    },
    "39": {
      "fn": null,
      "offset": [
        763,
        913
      ],
      "op": "JUMPI",
      "path": "35"
    },
    "40": {
      "fn": null,
      "offset": [
        763,
        913
      ],
      "op": "JUMPDEST",
      "path": "35"
    },
    "41": {
      "fn": null,
      "offset": [
        763,
        913
      ],
      "op": "PUSH1",
      "path": "35",
      "value": "0x0"
    },
    "43": {
      "fn": null,
      "offset": [
        763,
        913
      ],
      "op": "DUP1",
      "path": "35"
    },
    "44": {
      "first_revert": true,
      "fn": null,
      "offset": [
        763,
        913
      ],
      "op": "REVERT",
      "path": "35"
    },
    "45": {
      "offset": [
        797,
        824
      ],
      "op": "JUMPDEST",
      "path": "35"
    },
    "46": {
      "fn": null,
      "offset": [
        797,
        824
      ],
      "op": "PUSH1",
      "path": "35",
      "value": "0x35"
    },
    "48": {
      "fn": null,
      "offset": [
        797,
        824
      ],
      "op": "PUSH1",
      "path": "35",
      "value": "0x0"
    },
    "50": {
      "fn": null,
      "offset": [
        797,
        824
      ],
      "op": "SLOAD",
      "path": "35"
    },
    "51": {
      "fn": null,
      "offset": [
        797,
        824
      ],
      "op": "DUP2",
      "path": "35"
    },
    "52": {
      "fn": null,
      "offset": [
        797,
        824
      ],
      "op": "JUMP",
      "path": "35"
    },
    "53": {
      "fn": null,
      "offset": [
        797,
        824
      ],
      "op": "JUMPDEST",
      "path": "35"
    },
    "54": {
      "fn": null,
      "offset": [
        797,
        824
      ],
      "op": "PUSH1",
      "path": "35",
      "value": "0x40"
    },
    "56": {
      "fn": null,
      "offset": [
        797,
        824
      ],
      "op": "MLOAD",
      "path": "35"
    },
    "57": {
      "op": "SWAP1"
    },
    "58": {
      "op": "DUP2"
    },
    "59": {
      "op": "MSTORE"
    },
    "60": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "62": {
      "op": "ADD"
    },
    "63": {
      "offset": [
        797,
        824
      ],
      "op": "PUSH1",
      "path": "35",
      "value": "0x40"
    },
    "65": {
      "fn": null,
      "offset": [
        797,
        824
      ],
      "op": "MLOAD",
      "path": "35"
    },
    "66": {
      "fn": null,
      "offset": [
        797,
        824
      ],
      "op": "DUP1",
      "path": "35"
    },
    "67": {
      "fn": null,
      "offset": [
        797,
        824
      ],
      "op": "SWAP2",
      "path": "35"
    },
    "68": {
      "fn": null,
      "offset": [
        797,
        824
      ],
      "op": "SUB",
      "path": "35"
    },
    "69": {
      "fn": null,
      "offset": [
        797,
        824
      ],
      "op": "SWAP1",
      "path": "35"
    },
    "70": {
      "fn": null,
      "offset": [
        797,
        824
      ],
      "op": "RETURN",
      "path": "35"
    }
  },
  "sha1": "a145115a812b1835ac0f54472ad15ed8f71cb785",
  "source": "// SPDX-License-Identifier: GPL-3.0\n\n// \t _____     ______     ______     ______     ______     ______     _____\n//  /\\  __-.  /\\  __ \\   /\\  ___\\   /\\  ___\\   /\\  == \\   /\\  ___\\   /\\  __-.\n//  \\ \\ \\/\\ \\ \\ \\  __ \\  \\ \\ \\____  \\ \\ \\____  \\ \\  __<   \\ \\  __\\   \\ \\ \\/\\ \\\n//   \\ \\____-  \\ \\_\\ \\_\\  \\ \\_____\\  \\ \\_____\\  \\ \\_\\ \\_\\  \\ \\_____\\  \\ \\____-\n//    \\/____/   \\/_/\\/_/   \\/_____/   \\/_____/   \\/_/ /_/   \\/_____/   \\/____/\n\npragma solidity ^0.8.4;\n\n/**\n * This Helper is used to return a dynmamic value in the overriden _startTokenId() function.\n * Extending this Helper before the ERC721A contract give us access to the herein set `startTokenId`\n * to be returned by the overriden `_startTokenId()` function of ERC721A in the ERC721AStartTokenId mocks.\n */\ncontract StartTokenIdHelper {\n    uint256 public startTokenId;\n\n    constructor(uint256 startTokenId_) {\n        startTokenId = startTokenId_;\n    }\n}\n",
  "sourceMap": "763:150:35:-:0;;;831:80;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;876:12;:28;763:150;;14:184:43;84:6;137:2;125:9;116:7;112:23;108:32;105:52;;;153:1;150;143:12;105:52;-1:-1:-1;176:16:43;;14:184;-1:-1:-1;14:184:43:o;:::-;763:150:35;;;;;;",
  "sourcePath": "contracts/contracts/packages/nft/contracts/mocks/StartTokenIdHelper.sol",
  "type": "contract"
}