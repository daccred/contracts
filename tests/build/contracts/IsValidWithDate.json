{
  "abi": [
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "time",
          "type": "uint256"
        }
      ],
      "name": "Extended",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "time",
          "type": "uint256"
        }
      ],
      "name": "extendExpiry",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "getExpiryDate",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "getTimeLeft",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "isValid",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "allSourcePaths": {
    "36": "contracts/contracts/packages/soulbound/contracts/IsValidWithDate.sol"
  },
  "ast": {
    "absolutePath": "contracts/contracts/packages/soulbound/contracts/IsValidWithDate.sol",
    "exportedSymbols": {
      "IsValidWithDate": [
        4116
      ]
    },
    "id": 4117,
    "license": "GPL-3.0",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 4023,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".8"
        ],
        "nodeType": "PragmaDirective",
        "src": "36:23:36"
      },
      {
        "abstract": false,
        "baseContracts": [],
        "canonicalName": "IsValidWithDate",
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": {
          "id": 4024,
          "nodeType": "StructuredDocumentation",
          "src": "61:116:36",
          "text": " @title IsValidWithDate contract.\n @author Daccred.\n @dev Controls time for minted tokens till expiry."
        },
        "fullyImplemented": true,
        "id": 4116,
        "linearizedBaseContracts": [
          4116
        ],
        "name": "IsValidWithDate",
        "nameLocation": "187:15:36",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "documentation": {
              "id": 4025,
              "nodeType": "StructuredDocumentation",
              "src": "209:57:36",
              "text": "@dev Mapping individual tokens to their expiry dates."
            },
            "id": 4029,
            "mutability": "mutable",
            "name": "tokenExpiryDate",
            "nameLocation": "308:15:36",
            "nodeType": "VariableDeclaration",
            "scope": 4116,
            "src": "271:52:36",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
              "typeString": "mapping(uint256 => uint256)"
            },
            "typeName": {
              "id": 4028,
              "keyType": {
                "id": 4026,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "279:7:36",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "nodeType": "Mapping",
              "src": "271:27:36",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
                "typeString": "mapping(uint256 => uint256)"
              },
              "valueType": {
                "id": 4027,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "290:7:36",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              }
            },
            "visibility": "internal"
          },
          {
            "anonymous": false,
            "documentation": {
              "id": 4030,
              "nodeType": "StructuredDocumentation",
              "src": "330:56:36",
              "text": "@dev Emitted when a token is extended by redemption."
            },
            "eventSelector": "41a73beb1018a8b63e0f451a8a4f483806142cf14be45b1a58a23776a1e9b4bc",
            "id": 4036,
            "name": "Extended",
            "nameLocation": "397:8:36",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 4035,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4032,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nameLocation": "414:7:36",
                  "nodeType": "VariableDeclaration",
                  "scope": 4036,
                  "src": "406:15:36",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 4031,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "406:7:36",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 4034,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "time",
                  "nameLocation": "431:4:36",
                  "nodeType": "VariableDeclaration",
                  "scope": 4036,
                  "src": "423:12:36",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 4033,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "423:7:36",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "405:31:36"
            },
            "src": "391:46:36"
          },
          {
            "body": {
              "id": 4058,
              "nodeType": "Block",
              "src": "977:189:36",
              "statements": [
                {
                  "documentation": "@dev Set expiry to new time.",
                  "expression": {
                    "id": 4051,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 4044,
                        "name": "tokenExpiryDate",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4029,
                        "src": "1028:15:36",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
                          "typeString": "mapping(uint256 => uint256)"
                        }
                      },
                      "id": 4046,
                      "indexExpression": {
                        "id": 4045,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4039,
                        "src": "1044:7:36",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "1028:24:36",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 4050,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "expression": {
                          "id": 4047,
                          "name": "block",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -4,
                          "src": "1055:5:36",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_block",
                            "typeString": "block"
                          }
                        },
                        "id": 4048,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "timestamp",
                        "nodeType": "MemberAccess",
                        "src": "1055:15:36",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "+",
                      "rightExpression": {
                        "id": 4049,
                        "name": "time",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4041,
                        "src": "1073:4:36",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "src": "1055:22:36",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "1028:49:36",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 4052,
                  "nodeType": "ExpressionStatement",
                  "src": "1028:49:36"
                },
                {
                  "documentation": "@dev Emit the {Extended} event.",
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 4054,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4039,
                        "src": "1145:7:36",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 4055,
                        "name": "time",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4041,
                        "src": "1154:4:36",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 4053,
                      "name": "Extended",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4036,
                      "src": "1136:8:36",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,uint256)"
                      }
                    },
                    "id": 4056,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1136:23:36",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 4057,
                  "nodeType": "EmitStatement",
                  "src": "1131:28:36"
                }
              ]
            },
            "documentation": {
              "id": 4037,
              "nodeType": "StructuredDocumentation",
              "src": "443:469:36",
              "text": " @dev  On every successful redemption or mint of token the\n       expiry of the token is extended by the duration passed\n       in the contract.\n       This should be called on expired tokens.\n @notice   This function is expected to be called by the\n           SoulboundRedeemable on every mint.\n @param tokenId    Token to extend its expiry.\n @param time       Length of time to extend it with."
            },
            "functionSelector": "c3cab38a",
            "id": 4059,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "extendExpiry",
            "nameLocation": "926:12:36",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 4042,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4039,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nameLocation": "947:7:36",
                  "nodeType": "VariableDeclaration",
                  "scope": 4059,
                  "src": "939:15:36",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 4038,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "939:7:36",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 4041,
                  "mutability": "mutable",
                  "name": "time",
                  "nameLocation": "964:4:36",
                  "nodeType": "VariableDeclaration",
                  "scope": 4059,
                  "src": "956:12:36",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 4040,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "956:7:36",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "938:31:36"
            },
            "returnParameters": {
              "id": 4043,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "977:0:36"
            },
            "scope": 4116,
            "src": "917:249:36",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 4071,
              "nodeType": "Block",
              "src": "1442:48:36",
              "statements": [
                {
                  "expression": {
                    "baseExpression": {
                      "id": 4067,
                      "name": "tokenExpiryDate",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4029,
                      "src": "1459:15:36",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
                        "typeString": "mapping(uint256 => uint256)"
                      }
                    },
                    "id": 4069,
                    "indexExpression": {
                      "id": 4068,
                      "name": "tokenId",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4062,
                      "src": "1475:7:36",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "1459:24:36",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 4066,
                  "id": 4070,
                  "nodeType": "Return",
                  "src": "1452:31:36"
                }
              ]
            },
            "documentation": {
              "id": 4060,
              "nodeType": "StructuredDocumentation",
              "src": "1172:195:36",
              "text": " @dev Returns the expiry date of `tokenId`.\n @notice Callable by anyone.\n @param tokenId Token to get its expiry.\n @return time of expiry."
            },
            "functionSelector": "6833f200",
            "id": 4072,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getExpiryDate",
            "nameLocation": "1381:13:36",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 4063,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4062,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nameLocation": "1403:7:36",
                  "nodeType": "VariableDeclaration",
                  "scope": 4072,
                  "src": "1395:15:36",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 4061,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1395:7:36",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1394:17:36"
            },
            "returnParameters": {
              "id": 4066,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4065,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 4072,
                  "src": "1433:7:36",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 4064,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1433:7:36",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1432:9:36"
            },
            "scope": 4116,
            "src": "1372:118:36",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 4087,
              "nodeType": "Block",
              "src": "1784:65:36",
              "statements": [
                {
                  "expression": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 4085,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "expression": {
                        "id": 4080,
                        "name": "block",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -4,
                        "src": "1801:5:36",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_block",
                          "typeString": "block"
                        }
                      },
                      "id": 4081,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "timestamp",
                      "nodeType": "MemberAccess",
                      "src": "1801:15:36",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<=",
                    "rightExpression": {
                      "arguments": [
                        {
                          "id": 4083,
                          "name": "tokenId",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4075,
                          "src": "1834:7:36",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "id": 4082,
                        "name": "getExpiryDate",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4072,
                        "src": "1820:13:36",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_uint256_$",
                          "typeString": "function (uint256) view returns (uint256)"
                        }
                      },
                      "id": 4084,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1820:22:36",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "1801:41:36",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 4079,
                  "id": 4086,
                  "nodeType": "Return",
                  "src": "1794:48:36"
                }
              ]
            },
            "documentation": {
              "id": 4073,
              "nodeType": "StructuredDocumentation",
              "src": "1496:222:36",
              "text": " @dev Return true if the token is expired or false if otherwise.\n @notice Callable by anyone.\n @param tokenId Token to check if expired.\n @return bool true or false."
            },
            "functionSelector": "f577a500",
            "id": 4088,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "isValid",
            "nameLocation": "1732:7:36",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 4076,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4075,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nameLocation": "1748:7:36",
                  "nodeType": "VariableDeclaration",
                  "scope": 4088,
                  "src": "1740:15:36",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 4074,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1740:7:36",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1739:17:36"
            },
            "returnParameters": {
              "id": 4079,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4078,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 4088,
                  "src": "1778:4:36",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 4077,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "1778:4:36",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1777:6:36"
            },
            "scope": 4116,
            "src": "1723:126:36",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 4114,
              "nodeType": "Block",
              "src": "2137:380:36",
              "statements": [
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 4101,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "expression": {
                        "id": 4096,
                        "name": "block",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -4,
                        "src": "2255:5:36",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_block",
                          "typeString": "block"
                        }
                      },
                      "id": 4097,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "timestamp",
                      "nodeType": "MemberAccess",
                      "src": "2255:15:36",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": ">",
                    "rightExpression": {
                      "arguments": [
                        {
                          "id": 4099,
                          "name": "tokenId",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4091,
                          "src": "2287:7:36",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "id": 4098,
                        "name": "getExpiryDate",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4072,
                        "src": "2273:13:36",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_uint256_$",
                          "typeString": "function (uint256) view returns (uint256)"
                        }
                      },
                      "id": 4100,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "2273:22:36",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "2255:40:36",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "documentation": "@dev    If the current time has passed the mapped expiry\n         time of token.",
                  "falseBody": {
                    "id": 4112,
                    "nodeType": "Block",
                    "src": "2367:144:36",
                    "statements": [
                      {
                        "documentation": "@dev    Else,\n         Return time left.",
                        "expression": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 4110,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "arguments": [
                              {
                                "id": 4106,
                                "name": "tokenId",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 4091,
                                "src": "2474:7:36",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              ],
                              "id": 4105,
                              "name": "getExpiryDate",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4072,
                              "src": "2460:13:36",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_uint256_$",
                                "typeString": "function (uint256) view returns (uint256)"
                              }
                            },
                            "id": 4107,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "2460:22:36",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "-",
                          "rightExpression": {
                            "expression": {
                              "id": 4108,
                              "name": "block",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -4,
                              "src": "2485:5:36",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_block",
                                "typeString": "block"
                              }
                            },
                            "id": 4109,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "timestamp",
                            "nodeType": "MemberAccess",
                            "src": "2485:15:36",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "2460:40:36",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "functionReturnParameters": 4095,
                        "id": 4111,
                        "nodeType": "Return",
                        "src": "2453:47:36"
                      }
                    ]
                  },
                  "id": 4113,
                  "nodeType": "IfStatement",
                  "src": "2251:260:36",
                  "trueBody": {
                    "id": 4104,
                    "nodeType": "Block",
                    "src": "2297:64:36",
                    "statements": [
                      {
                        "documentation": "@dev Return 0.",
                        "expression": {
                          "hexValue": "30",
                          "id": 4102,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "2349:1:36",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "functionReturnParameters": 4095,
                        "id": 4103,
                        "nodeType": "Return",
                        "src": "2342:8:36"
                      }
                    ]
                  }
                }
              ]
            },
            "documentation": {
              "id": 4089,
              "nodeType": "StructuredDocumentation",
              "src": "1855:209:36",
              "text": " @dev Returns the time left for a token to expire.\n @notice Callable by anyone.\n @param tokenId Token to get its expiry.\n @return time left till expiry."
            },
            "functionSelector": "e8c58763",
            "id": 4115,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getTimeLeft",
            "nameLocation": "2078:11:36",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 4092,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4091,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nameLocation": "2098:7:36",
                  "nodeType": "VariableDeclaration",
                  "scope": 4115,
                  "src": "2090:15:36",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 4090,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2090:7:36",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2089:17:36"
            },
            "returnParameters": {
              "id": 4095,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4094,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 4115,
                  "src": "2128:7:36",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 4093,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2128:7:36",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2127:9:36"
            },
            "scope": 4116,
            "src": "2069:448:36",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "scope": 4117,
        "src": "178:2341:36",
        "usedErrors": []
      }
    ],
    "src": "36:2484:36"
  },
  "bytecode": "608060405234801561001057600080fd5b5061022b806100206000396000f3fe608060405234801561001057600080fd5b506004361061004c5760003560e01c80636833f20014610051578063c3cab38a14610084578063e8c5876314610099578063f577a500146100ac575b600080fd5b61007161005f366004610175565b60009081526020819052604090205490565b6040519081526020015b60405180910390f35b61009761009236600461018e565b6100df565b005b6100716100a7366004610175565b610137565b6100cf6100ba366004610175565b60009081526020819052604090205442111590565b604051901515815260200161007b565b6100e981426101c6565b600083815260208181526040918290209290925580518481529182018390527f41a73beb1018a8b63e0f451a8a4f483806142cf14be45b1a58a23776a1e9b4bc910160405180910390a15050565b60008181526020819052604081205442111561015557506000919050565b60008281526020819052604090205461016f9042906101de565b92915050565b60006020828403121561018757600080fd5b5035919050565b600080604083850312156101a157600080fd5b50508035926020909101359150565b634e487b7160e01b600052601160045260246000fd5b600082198211156101d9576101d96101b0565b500190565b6000828210156101f0576101f06101b0565b50039056fea2646970667358221220d954a1354b3a074cc0126f51af24bb45de260553fa86477c69ad1c779f462ebe64736f6c634300080f0033",
  "bytecodeSha1": "67fe842c4073c6e48d213685bf4aa3589531317c",
  "compiler": {
    "evm_version": "istanbul",
    "optimizer": {
      "enabled": true,
      "runs": 200
    },
    "version": "0.8.15+commit.e14f2714"
  },
  "contractName": "IsValidWithDate",
  "coverageMap": {
    "branches": {
      "36": {
        "IsValidWithDate.getTimeLeft": {
          "6": [
            2255,
            2295,
            false
          ]
        }
      }
    },
    "statements": {
      "36": {
        "IsValidWithDate.extendExpiry": {
          "2": [
            1028,
            1077
          ],
          "3": [
            1131,
            1159
          ]
        },
        "IsValidWithDate.getExpiryDate": {
          "0": [
            1452,
            1483
          ]
        },
        "IsValidWithDate.getTimeLeft": {
          "4": [
            2342,
            2350
          ],
          "5": [
            2453,
            2500
          ]
        },
        "IsValidWithDate.isValid": {
          "1": [
            1794,
            1842
          ]
        }
      }
    }
  },
  "dependencies": [],
  "deployedBytecode": "608060405234801561001057600080fd5b506004361061004c5760003560e01c80636833f20014610051578063c3cab38a14610084578063e8c5876314610099578063f577a500146100ac575b600080fd5b61007161005f366004610175565b60009081526020819052604090205490565b6040519081526020015b60405180910390f35b61009761009236600461018e565b6100df565b005b6100716100a7366004610175565b610137565b6100cf6100ba366004610175565b60009081526020819052604090205442111590565b604051901515815260200161007b565b6100e981426101c6565b600083815260208181526040918290209290925580518481529182018390527f41a73beb1018a8b63e0f451a8a4f483806142cf14be45b1a58a23776a1e9b4bc910160405180910390a15050565b60008181526020819052604081205442111561015557506000919050565b60008281526020819052604090205461016f9042906101de565b92915050565b60006020828403121561018757600080fd5b5035919050565b600080604083850312156101a157600080fd5b50508035926020909101359150565b634e487b7160e01b600052601160045260246000fd5b600082198211156101d9576101d96101b0565b500190565b6000828210156101f0576101f06101b0565b50039056fea2646970667358221220d954a1354b3a074cc0126f51af24bb45de260553fa86477c69ad1c779f462ebe64736f6c634300080f0033",
  "deployedSourceMap": "178:2341:36:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1372:118;;;;;;:::i;:::-;1433:7;1459:24;;;;;;;;;;;;1372:118;;;;345:25:43;;;333:2;318:18;1372:118:36;;;;;;;;917:249;;;;;;:::i;:::-;;:::i;:::-;;2069:448;;;;;;:::i;:::-;;:::i;1723:126::-;;;;;;:::i;:::-;1778:4;1459:24;;;;;;;;;;;1801:15;:41;;;1723:126;;;;799:14:43;;792:22;774:41;;762:2;747:18;1723:126:36;634:187:43;917:249:36;1055:22;1073:4;1055:15;:22;:::i;:::-;1028:15;:24;;;;;;;;;;;;:49;;;;1136:23;;1265:25:43;;;1306:18;;;1299:34;;;1136:23:36;;1238:18:43;1136:23:36;;;;;;;917:249;;:::o;2069:448::-;2128:7;1459:24;;;;;;;;;;;2255:15;:40;2251:260;;;-1:-1:-1;2349:1:36;;2069:448;-1:-1:-1;2069:448:36:o;2251:260::-;1433:7;1459:24;;;;;;;;;;;2460:40;;2485:15;;2460:40;:::i;:::-;2453:47;2069:448;-1:-1:-1;;2069:448:36:o;14:180:43:-;73:6;126:2;114:9;105:7;101:23;97:32;94:52;;;142:1;139;132:12;94:52;-1:-1:-1;165:23:43;;14:180;-1:-1:-1;14:180:43:o;381:248::-;449:6;457;510:2;498:9;489:7;485:23;481:32;478:52;;;526:1;523;516:12;478:52;-1:-1:-1;;549:23:43;;;619:2;604:18;;;591:32;;-1:-1:-1;381:248:43:o;826:127::-;887:10;882:3;878:20;875:1;868:31;918:4;915:1;908:15;942:4;939:1;932:15;958:128;998:3;1029:1;1025:6;1022:1;1019:13;1016:39;;;1035:18;;:::i;:::-;-1:-1:-1;1071:9:43;;958:128::o;1344:125::-;1384:4;1412:1;1409;1406:8;1403:34;;;1417:18;;:::i;:::-;-1:-1:-1;1454:9:43;;1344:125::o",
  "language": "Solidity",
  "natspec": {
    "author": "Daccred.",
    "details": "Controls time for minted tokens till expiry.",
    "events": {
      "Extended(uint256,uint256)": {
        "details": "Emitted when a token is extended by redemption."
      }
    },
    "kind": "dev",
    "methods": {
      "extendExpiry(uint256,uint256)": {
        "details": "On every successful redemption or mint of token the       expiry of the token is extended by the duration passed       in the contract.       This should be called on expired tokens.",
        "notice": "This function is expected to be called by the           SoulboundRedeemable on every mint.",
        "params": {
          "time": "Length of time to extend it with.",
          "tokenId": "Token to extend its expiry."
        }
      },
      "getExpiryDate(uint256)": {
        "details": "Returns the expiry date of `tokenId`.",
        "notice": "Callable by anyone.",
        "params": {
          "tokenId": "Token to get its expiry."
        },
        "returns": {
          "_0": "time of expiry."
        }
      },
      "getTimeLeft(uint256)": {
        "details": "Returns the time left for a token to expire.",
        "notice": "Callable by anyone.",
        "params": {
          "tokenId": "Token to get its expiry."
        },
        "returns": {
          "_0": "time left till expiry."
        }
      },
      "isValid(uint256)": {
        "details": "Return true if the token is expired or false if otherwise.",
        "notice": "Callable by anyone.",
        "params": {
          "tokenId": "Token to check if expired."
        },
        "returns": {
          "_0": "bool true or false."
        }
      }
    },
    "stateVariables": {
      "tokenExpiryDate": {
        "details": "Mapping individual tokens to their expiry dates."
      }
    },
    "title": "IsValidWithDate contract.",
    "version": 1
  },
  "offset": [
    178,
    2519
  ],
  "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x4C JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x6833F200 EQ PUSH2 0x51 JUMPI DUP1 PUSH4 0xC3CAB38A EQ PUSH2 0x84 JUMPI DUP1 PUSH4 0xE8C58763 EQ PUSH2 0x99 JUMPI DUP1 PUSH4 0xF577A500 EQ PUSH2 0xAC JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x71 PUSH2 0x5F CALLDATASIZE PUSH1 0x4 PUSH2 0x175 JUMP JUMPDEST PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x97 PUSH2 0x92 CALLDATASIZE PUSH1 0x4 PUSH2 0x18E JUMP JUMPDEST PUSH2 0xDF JUMP JUMPDEST STOP JUMPDEST PUSH2 0x71 PUSH2 0xA7 CALLDATASIZE PUSH1 0x4 PUSH2 0x175 JUMP JUMPDEST PUSH2 0x137 JUMP JUMPDEST PUSH2 0xCF PUSH2 0xBA CALLDATASIZE PUSH1 0x4 PUSH2 0x175 JUMP JUMPDEST PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD TIMESTAMP GT ISZERO SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x7B JUMP JUMPDEST PUSH2 0xE9 DUP2 TIMESTAMP PUSH2 0x1C6 JUMP JUMPDEST PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 SWAP2 DUP3 SWAP1 KECCAK256 SWAP3 SWAP1 SWAP3 SSTORE DUP1 MLOAD DUP5 DUP2 MSTORE SWAP2 DUP3 ADD DUP4 SWAP1 MSTORE PUSH32 0x41A73BEB1018A8B63E0F451A8A4F483806142CF14BE45B1A58A23776A1E9B4BC SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD TIMESTAMP GT ISZERO PUSH2 0x155 JUMPI POP PUSH1 0x0 SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH2 0x16F SWAP1 TIMESTAMP SWAP1 PUSH2 0x1DE JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x187 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1A1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP POP DUP1 CALLDATALOAD SWAP3 PUSH1 0x20 SWAP1 SWAP2 ADD CALLDATALOAD SWAP2 POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP3 NOT DUP3 GT ISZERO PUSH2 0x1D9 JUMPI PUSH2 0x1D9 PUSH2 0x1B0 JUMP JUMPDEST POP ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 LT ISZERO PUSH2 0x1F0 JUMPI PUSH2 0x1F0 PUSH2 0x1B0 JUMP JUMPDEST POP SUB SWAP1 JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xD9 SLOAD LOG1 CALLDATALOAD 0x4B GASPRICE SMOD 0x4C 0xC0 SLT PUSH16 0x51AF24BB45DE260553FA86477C69AD1C PUSH24 0x9F462EBE64736F6C634300080F0033000000000000000000 ",
  "pcMap": {
    "0": {
      "offset": [
        178,
        2519
      ],
      "op": "PUSH1",
      "path": "36",
      "value": "0x80"
    },
    "2": {
      "fn": null,
      "offset": [
        178,
        2519
      ],
      "op": "PUSH1",
      "path": "36",
      "value": "0x40"
    },
    "4": {
      "fn": null,
      "offset": [
        178,
        2519
      ],
      "op": "MSTORE",
      "path": "36"
    },
    "5": {
      "fn": null,
      "offset": [
        178,
        2519
      ],
      "op": "CALLVALUE",
      "path": "36"
    },
    "6": {
      "fn": null,
      "offset": [
        178,
        2519
      ],
      "op": "DUP1",
      "path": "36"
    },
    "7": {
      "fn": null,
      "offset": [
        178,
        2519
      ],
      "op": "ISZERO",
      "path": "36"
    },
    "8": {
      "fn": null,
      "offset": [
        178,
        2519
      ],
      "op": "PUSH2",
      "path": "36",
      "value": "0x10"
    },
    "11": {
      "fn": null,
      "offset": [
        178,
        2519
      ],
      "op": "JUMPI",
      "path": "36"
    },
    "12": {
      "fn": null,
      "offset": [
        178,
        2519
      ],
      "op": "PUSH1",
      "path": "36",
      "value": "0x0"
    },
    "14": {
      "fn": null,
      "offset": [
        178,
        2519
      ],
      "op": "DUP1",
      "path": "36"
    },
    "15": {
      "dev": "Cannot send ether to nonpayable function",
      "fn": null,
      "offset": [
        178,
        2519
      ],
      "op": "REVERT",
      "path": "36"
    },
    "16": {
      "fn": null,
      "offset": [
        178,
        2519
      ],
      "op": "JUMPDEST",
      "path": "36"
    },
    "17": {
      "fn": null,
      "offset": [
        178,
        2519
      ],
      "op": "POP",
      "path": "36"
    },
    "18": {
      "fn": null,
      "offset": [
        178,
        2519
      ],
      "op": "PUSH1",
      "path": "36",
      "value": "0x4"
    },
    "20": {
      "fn": null,
      "offset": [
        178,
        2519
      ],
      "op": "CALLDATASIZE",
      "path": "36"
    },
    "21": {
      "fn": null,
      "offset": [
        178,
        2519
      ],
      "op": "LT",
      "path": "36"
    },
    "22": {
      "fn": null,
      "offset": [
        178,
        2519
      ],
      "op": "PUSH2",
      "path": "36",
      "value": "0x4C"
    },
    "25": {
      "fn": null,
      "offset": [
        178,
        2519
      ],
      "op": "JUMPI",
      "path": "36"
    },
    "26": {
      "fn": null,
      "offset": [
        178,
        2519
      ],
      "op": "PUSH1",
      "path": "36",
      "value": "0x0"
    },
    "28": {
      "fn": null,
      "offset": [
        178,
        2519
      ],
      "op": "CALLDATALOAD",
      "path": "36"
    },
    "29": {
      "fn": null,
      "offset": [
        178,
        2519
      ],
      "op": "PUSH1",
      "path": "36",
      "value": "0xE0"
    },
    "31": {
      "fn": null,
      "offset": [
        178,
        2519
      ],
      "op": "SHR",
      "path": "36"
    },
    "32": {
      "fn": null,
      "offset": [
        178,
        2519
      ],
      "op": "DUP1",
      "path": "36"
    },
    "33": {
      "fn": null,
      "offset": [
        178,
        2519
      ],
      "op": "PUSH4",
      "path": "36",
      "value": "0x6833F200"
    },
    "38": {
      "fn": null,
      "offset": [
        178,
        2519
      ],
      "op": "EQ",
      "path": "36"
    },
    "39": {
      "fn": null,
      "offset": [
        178,
        2519
      ],
      "op": "PUSH2",
      "path": "36",
      "value": "0x51"
    },
    "42": {
      "fn": null,
      "offset": [
        178,
        2519
      ],
      "op": "JUMPI",
      "path": "36"
    },
    "43": {
      "fn": null,
      "offset": [
        178,
        2519
      ],
      "op": "DUP1",
      "path": "36"
    },
    "44": {
      "fn": null,
      "offset": [
        178,
        2519
      ],
      "op": "PUSH4",
      "path": "36",
      "value": "0xC3CAB38A"
    },
    "49": {
      "fn": null,
      "offset": [
        178,
        2519
      ],
      "op": "EQ",
      "path": "36"
    },
    "50": {
      "fn": null,
      "offset": [
        178,
        2519
      ],
      "op": "PUSH2",
      "path": "36",
      "value": "0x84"
    },
    "53": {
      "fn": null,
      "offset": [
        178,
        2519
      ],
      "op": "JUMPI",
      "path": "36"
    },
    "54": {
      "fn": null,
      "offset": [
        178,
        2519
      ],
      "op": "DUP1",
      "path": "36"
    },
    "55": {
      "fn": null,
      "offset": [
        178,
        2519
      ],
      "op": "PUSH4",
      "path": "36",
      "value": "0xE8C58763"
    },
    "60": {
      "fn": null,
      "offset": [
        178,
        2519
      ],
      "op": "EQ",
      "path": "36"
    },
    "61": {
      "fn": null,
      "offset": [
        178,
        2519
      ],
      "op": "PUSH2",
      "path": "36",
      "value": "0x99"
    },
    "64": {
      "fn": null,
      "offset": [
        178,
        2519
      ],
      "op": "JUMPI",
      "path": "36"
    },
    "65": {
      "fn": null,
      "offset": [
        178,
        2519
      ],
      "op": "DUP1",
      "path": "36"
    },
    "66": {
      "fn": null,
      "offset": [
        178,
        2519
      ],
      "op": "PUSH4",
      "path": "36",
      "value": "0xF577A500"
    },
    "71": {
      "fn": null,
      "offset": [
        178,
        2519
      ],
      "op": "EQ",
      "path": "36"
    },
    "72": {
      "fn": null,
      "offset": [
        178,
        2519
      ],
      "op": "PUSH2",
      "path": "36",
      "value": "0xAC"
    },
    "75": {
      "fn": null,
      "offset": [
        178,
        2519
      ],
      "op": "JUMPI",
      "path": "36"
    },
    "76": {
      "fn": null,
      "offset": [
        178,
        2519
      ],
      "op": "JUMPDEST",
      "path": "36"
    },
    "77": {
      "fn": null,
      "offset": [
        178,
        2519
      ],
      "op": "PUSH1",
      "path": "36",
      "value": "0x0"
    },
    "79": {
      "fn": null,
      "offset": [
        178,
        2519
      ],
      "op": "DUP1",
      "path": "36"
    },
    "80": {
      "first_revert": true,
      "fn": null,
      "offset": [
        178,
        2519
      ],
      "op": "REVERT",
      "path": "36"
    },
    "81": {
      "fn": "IsValidWithDate.getExpiryDate",
      "offset": [
        1372,
        1490
      ],
      "op": "JUMPDEST",
      "path": "36"
    },
    "82": {
      "fn": "IsValidWithDate.getExpiryDate",
      "offset": [
        1372,
        1490
      ],
      "op": "PUSH2",
      "path": "36",
      "value": "0x71"
    },
    "85": {
      "fn": "IsValidWithDate.getExpiryDate",
      "offset": [
        1372,
        1490
      ],
      "op": "PUSH2",
      "path": "36",
      "value": "0x5F"
    },
    "88": {
      "fn": "IsValidWithDate.getExpiryDate",
      "offset": [
        1372,
        1490
      ],
      "op": "CALLDATASIZE",
      "path": "36"
    },
    "89": {
      "fn": "IsValidWithDate.getExpiryDate",
      "offset": [
        1372,
        1490
      ],
      "op": "PUSH1",
      "path": "36",
      "value": "0x4"
    },
    "91": {
      "fn": "IsValidWithDate.getExpiryDate",
      "offset": [
        1372,
        1490
      ],
      "op": "PUSH2",
      "path": "36",
      "value": "0x175"
    },
    "94": {
      "fn": "IsValidWithDate.getExpiryDate",
      "jump": "i",
      "offset": [
        1372,
        1490
      ],
      "op": "JUMP",
      "path": "36"
    },
    "95": {
      "fn": "IsValidWithDate.getExpiryDate",
      "offset": [
        1372,
        1490
      ],
      "op": "JUMPDEST",
      "path": "36"
    },
    "96": {
      "fn": "IsValidWithDate.getExpiryDate",
      "offset": [
        1433,
        1440
      ],
      "op": "PUSH1",
      "path": "36",
      "value": "0x0"
    },
    "98": {
      "fn": "IsValidWithDate.getExpiryDate",
      "offset": [
        1459,
        1483
      ],
      "op": "SWAP1",
      "path": "36",
      "statement": 0
    },
    "99": {
      "fn": "IsValidWithDate.getExpiryDate",
      "offset": [
        1459,
        1483
      ],
      "op": "DUP2",
      "path": "36"
    },
    "100": {
      "fn": "IsValidWithDate.getExpiryDate",
      "offset": [
        1459,
        1483
      ],
      "op": "MSTORE",
      "path": "36"
    },
    "101": {
      "fn": "IsValidWithDate.getExpiryDate",
      "offset": [
        1459,
        1483
      ],
      "op": "PUSH1",
      "path": "36",
      "value": "0x20"
    },
    "103": {
      "fn": "IsValidWithDate.getExpiryDate",
      "offset": [
        1459,
        1483
      ],
      "op": "DUP2",
      "path": "36"
    },
    "104": {
      "fn": "IsValidWithDate.getExpiryDate",
      "offset": [
        1459,
        1483
      ],
      "op": "SWAP1",
      "path": "36"
    },
    "105": {
      "fn": "IsValidWithDate.getExpiryDate",
      "offset": [
        1459,
        1483
      ],
      "op": "MSTORE",
      "path": "36"
    },
    "106": {
      "fn": "IsValidWithDate.getExpiryDate",
      "offset": [
        1459,
        1483
      ],
      "op": "PUSH1",
      "path": "36",
      "value": "0x40"
    },
    "108": {
      "fn": "IsValidWithDate.getExpiryDate",
      "offset": [
        1459,
        1483
      ],
      "op": "SWAP1",
      "path": "36"
    },
    "109": {
      "fn": "IsValidWithDate.getExpiryDate",
      "offset": [
        1459,
        1483
      ],
      "op": "KECCAK256",
      "path": "36"
    },
    "110": {
      "fn": "IsValidWithDate.getExpiryDate",
      "offset": [
        1459,
        1483
      ],
      "op": "SLOAD",
      "path": "36"
    },
    "111": {
      "fn": "IsValidWithDate.getExpiryDate",
      "offset": [
        1459,
        1483
      ],
      "op": "SWAP1",
      "path": "36"
    },
    "112": {
      "fn": "IsValidWithDate.getExpiryDate",
      "offset": [
        1372,
        1490
      ],
      "op": "JUMP",
      "path": "36"
    },
    "113": {
      "fn": "IsValidWithDate.getExpiryDate",
      "offset": [
        1372,
        1490
      ],
      "op": "JUMPDEST",
      "path": "36"
    },
    "114": {
      "fn": "IsValidWithDate.getExpiryDate",
      "offset": [
        1372,
        1490
      ],
      "op": "PUSH1",
      "path": "36",
      "value": "0x40"
    },
    "116": {
      "fn": "IsValidWithDate.getExpiryDate",
      "offset": [
        1372,
        1490
      ],
      "op": "MLOAD",
      "path": "36"
    },
    "117": {
      "op": "SWAP1"
    },
    "118": {
      "op": "DUP2"
    },
    "119": {
      "op": "MSTORE"
    },
    "120": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "122": {
      "op": "ADD"
    },
    "123": {
      "fn": "IsValidWithDate.getExpiryDate",
      "offset": [
        1372,
        1490
      ],
      "op": "JUMPDEST",
      "path": "36"
    },
    "124": {
      "fn": "IsValidWithDate.getExpiryDate",
      "offset": [
        1372,
        1490
      ],
      "op": "PUSH1",
      "path": "36",
      "value": "0x40"
    },
    "126": {
      "fn": "IsValidWithDate.getExpiryDate",
      "offset": [
        1372,
        1490
      ],
      "op": "MLOAD",
      "path": "36"
    },
    "127": {
      "fn": "IsValidWithDate.getExpiryDate",
      "offset": [
        1372,
        1490
      ],
      "op": "DUP1",
      "path": "36"
    },
    "128": {
      "fn": "IsValidWithDate.getExpiryDate",
      "offset": [
        1372,
        1490
      ],
      "op": "SWAP2",
      "path": "36"
    },
    "129": {
      "fn": "IsValidWithDate.getExpiryDate",
      "offset": [
        1372,
        1490
      ],
      "op": "SUB",
      "path": "36"
    },
    "130": {
      "fn": "IsValidWithDate.getExpiryDate",
      "offset": [
        1372,
        1490
      ],
      "op": "SWAP1",
      "path": "36"
    },
    "131": {
      "fn": "IsValidWithDate.getExpiryDate",
      "offset": [
        1372,
        1490
      ],
      "op": "RETURN",
      "path": "36"
    },
    "132": {
      "fn": "IsValidWithDate.extendExpiry",
      "offset": [
        917,
        1166
      ],
      "op": "JUMPDEST",
      "path": "36"
    },
    "133": {
      "fn": "IsValidWithDate.extendExpiry",
      "offset": [
        917,
        1166
      ],
      "op": "PUSH2",
      "path": "36",
      "value": "0x97"
    },
    "136": {
      "fn": "IsValidWithDate.extendExpiry",
      "offset": [
        917,
        1166
      ],
      "op": "PUSH2",
      "path": "36",
      "value": "0x92"
    },
    "139": {
      "fn": "IsValidWithDate.extendExpiry",
      "offset": [
        917,
        1166
      ],
      "op": "CALLDATASIZE",
      "path": "36"
    },
    "140": {
      "fn": "IsValidWithDate.extendExpiry",
      "offset": [
        917,
        1166
      ],
      "op": "PUSH1",
      "path": "36",
      "value": "0x4"
    },
    "142": {
      "fn": "IsValidWithDate.extendExpiry",
      "offset": [
        917,
        1166
      ],
      "op": "PUSH2",
      "path": "36",
      "value": "0x18E"
    },
    "145": {
      "fn": "IsValidWithDate.extendExpiry",
      "jump": "i",
      "offset": [
        917,
        1166
      ],
      "op": "JUMP",
      "path": "36"
    },
    "146": {
      "fn": "IsValidWithDate.extendExpiry",
      "offset": [
        917,
        1166
      ],
      "op": "JUMPDEST",
      "path": "36"
    },
    "147": {
      "fn": "IsValidWithDate.extendExpiry",
      "offset": [
        917,
        1166
      ],
      "op": "PUSH2",
      "path": "36",
      "value": "0xDF"
    },
    "150": {
      "fn": "IsValidWithDate.extendExpiry",
      "jump": "i",
      "offset": [
        917,
        1166
      ],
      "op": "JUMP",
      "path": "36"
    },
    "151": {
      "fn": "IsValidWithDate.extendExpiry",
      "offset": [
        917,
        1166
      ],
      "op": "JUMPDEST",
      "path": "36"
    },
    "152": {
      "fn": "IsValidWithDate.extendExpiry",
      "offset": [
        917,
        1166
      ],
      "op": "STOP",
      "path": "36"
    },
    "153": {
      "fn": "IsValidWithDate.getTimeLeft",
      "offset": [
        2069,
        2517
      ],
      "op": "JUMPDEST",
      "path": "36"
    },
    "154": {
      "fn": "IsValidWithDate.getTimeLeft",
      "offset": [
        2069,
        2517
      ],
      "op": "PUSH2",
      "path": "36",
      "value": "0x71"
    },
    "157": {
      "fn": "IsValidWithDate.getTimeLeft",
      "offset": [
        2069,
        2517
      ],
      "op": "PUSH2",
      "path": "36",
      "value": "0xA7"
    },
    "160": {
      "fn": "IsValidWithDate.getTimeLeft",
      "offset": [
        2069,
        2517
      ],
      "op": "CALLDATASIZE",
      "path": "36"
    },
    "161": {
      "fn": "IsValidWithDate.getTimeLeft",
      "offset": [
        2069,
        2517
      ],
      "op": "PUSH1",
      "path": "36",
      "value": "0x4"
    },
    "163": {
      "fn": "IsValidWithDate.getTimeLeft",
      "offset": [
        2069,
        2517
      ],
      "op": "PUSH2",
      "path": "36",
      "value": "0x175"
    },
    "166": {
      "fn": "IsValidWithDate.getTimeLeft",
      "jump": "i",
      "offset": [
        2069,
        2517
      ],
      "op": "JUMP",
      "path": "36"
    },
    "167": {
      "fn": "IsValidWithDate.getTimeLeft",
      "offset": [
        2069,
        2517
      ],
      "op": "JUMPDEST",
      "path": "36"
    },
    "168": {
      "fn": "IsValidWithDate.getTimeLeft",
      "offset": [
        2069,
        2517
      ],
      "op": "PUSH2",
      "path": "36",
      "value": "0x137"
    },
    "171": {
      "fn": "IsValidWithDate.getTimeLeft",
      "jump": "i",
      "offset": [
        2069,
        2517
      ],
      "op": "JUMP",
      "path": "36"
    },
    "172": {
      "fn": "IsValidWithDate.isValid",
      "offset": [
        1723,
        1849
      ],
      "op": "JUMPDEST",
      "path": "36"
    },
    "173": {
      "fn": "IsValidWithDate.isValid",
      "offset": [
        1723,
        1849
      ],
      "op": "PUSH2",
      "path": "36",
      "value": "0xCF"
    },
    "176": {
      "fn": "IsValidWithDate.isValid",
      "offset": [
        1723,
        1849
      ],
      "op": "PUSH2",
      "path": "36",
      "value": "0xBA"
    },
    "179": {
      "fn": "IsValidWithDate.isValid",
      "offset": [
        1723,
        1849
      ],
      "op": "CALLDATASIZE",
      "path": "36"
    },
    "180": {
      "fn": "IsValidWithDate.isValid",
      "offset": [
        1723,
        1849
      ],
      "op": "PUSH1",
      "path": "36",
      "value": "0x4"
    },
    "182": {
      "fn": "IsValidWithDate.isValid",
      "offset": [
        1723,
        1849
      ],
      "op": "PUSH2",
      "path": "36",
      "value": "0x175"
    },
    "185": {
      "fn": "IsValidWithDate.isValid",
      "jump": "i",
      "offset": [
        1723,
        1849
      ],
      "op": "JUMP",
      "path": "36"
    },
    "186": {
      "fn": "IsValidWithDate.isValid",
      "offset": [
        1723,
        1849
      ],
      "op": "JUMPDEST",
      "path": "36"
    },
    "187": {
      "fn": "IsValidWithDate.isValid",
      "offset": [
        1778,
        1782
      ],
      "op": "PUSH1",
      "path": "36",
      "value": "0x0"
    },
    "189": {
      "fn": "IsValidWithDate.getExpiryDate",
      "offset": [
        1459,
        1483
      ],
      "op": "SWAP1",
      "path": "36"
    },
    "190": {
      "fn": "IsValidWithDate.getExpiryDate",
      "offset": [
        1459,
        1483
      ],
      "op": "DUP2",
      "path": "36"
    },
    "191": {
      "fn": "IsValidWithDate.getExpiryDate",
      "offset": [
        1459,
        1483
      ],
      "op": "MSTORE",
      "path": "36"
    },
    "192": {
      "fn": "IsValidWithDate.getExpiryDate",
      "offset": [
        1459,
        1483
      ],
      "op": "PUSH1",
      "path": "36",
      "value": "0x20"
    },
    "194": {
      "fn": "IsValidWithDate.getExpiryDate",
      "offset": [
        1459,
        1483
      ],
      "op": "DUP2",
      "path": "36"
    },
    "195": {
      "fn": "IsValidWithDate.getExpiryDate",
      "offset": [
        1459,
        1483
      ],
      "op": "SWAP1",
      "path": "36"
    },
    "196": {
      "fn": "IsValidWithDate.getExpiryDate",
      "offset": [
        1459,
        1483
      ],
      "op": "MSTORE",
      "path": "36"
    },
    "197": {
      "fn": "IsValidWithDate.getExpiryDate",
      "offset": [
        1459,
        1483
      ],
      "op": "PUSH1",
      "path": "36",
      "value": "0x40"
    },
    "199": {
      "fn": "IsValidWithDate.getExpiryDate",
      "offset": [
        1459,
        1483
      ],
      "op": "SWAP1",
      "path": "36"
    },
    "200": {
      "fn": "IsValidWithDate.getExpiryDate",
      "offset": [
        1459,
        1483
      ],
      "op": "KECCAK256",
      "path": "36"
    },
    "201": {
      "fn": "IsValidWithDate.getExpiryDate",
      "offset": [
        1459,
        1483
      ],
      "op": "SLOAD",
      "path": "36"
    },
    "202": {
      "fn": "IsValidWithDate.isValid",
      "offset": [
        1801,
        1816
      ],
      "op": "TIMESTAMP",
      "path": "36",
      "statement": 1
    },
    "203": {
      "fn": "IsValidWithDate.isValid",
      "offset": [
        1801,
        1842
      ],
      "op": "GT",
      "path": "36"
    },
    "204": {
      "fn": "IsValidWithDate.isValid",
      "offset": [
        1801,
        1842
      ],
      "op": "ISZERO",
      "path": "36"
    },
    "205": {
      "fn": "IsValidWithDate.isValid",
      "offset": [
        1801,
        1842
      ],
      "op": "SWAP1",
      "path": "36"
    },
    "206": {
      "fn": "IsValidWithDate.isValid",
      "offset": [
        1723,
        1849
      ],
      "op": "JUMP",
      "path": "36"
    },
    "207": {
      "fn": "IsValidWithDate.isValid",
      "offset": [
        1723,
        1849
      ],
      "op": "JUMPDEST",
      "path": "36"
    },
    "208": {
      "fn": "IsValidWithDate.isValid",
      "offset": [
        1723,
        1849
      ],
      "op": "PUSH1",
      "path": "36",
      "value": "0x40"
    },
    "210": {
      "fn": "IsValidWithDate.isValid",
      "offset": [
        1723,
        1849
      ],
      "op": "MLOAD",
      "path": "36"
    },
    "211": {
      "op": "SWAP1"
    },
    "212": {
      "op": "ISZERO"
    },
    "213": {
      "op": "ISZERO"
    },
    "214": {
      "op": "DUP2"
    },
    "215": {
      "op": "MSTORE"
    },
    "216": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "218": {
      "op": "ADD"
    },
    "219": {
      "fn": "IsValidWithDate.isValid",
      "offset": [
        1723,
        1849
      ],
      "op": "PUSH2",
      "path": "36",
      "value": "0x7B"
    },
    "222": {
      "op": "JUMP"
    },
    "223": {
      "fn": "IsValidWithDate.extendExpiry",
      "offset": [
        917,
        1166
      ],
      "op": "JUMPDEST",
      "path": "36"
    },
    "224": {
      "fn": "IsValidWithDate.extendExpiry",
      "offset": [
        1055,
        1077
      ],
      "op": "PUSH2",
      "path": "36",
      "statement": 2,
      "value": "0xE9"
    },
    "227": {
      "fn": "IsValidWithDate.extendExpiry",
      "offset": [
        1073,
        1077
      ],
      "op": "DUP2",
      "path": "36"
    },
    "228": {
      "fn": "IsValidWithDate.extendExpiry",
      "offset": [
        1055,
        1070
      ],
      "op": "TIMESTAMP",
      "path": "36"
    },
    "229": {
      "fn": "IsValidWithDate.extendExpiry",
      "offset": [
        1055,
        1077
      ],
      "op": "PUSH2",
      "path": "36",
      "value": "0x1C6"
    },
    "232": {
      "fn": "IsValidWithDate.extendExpiry",
      "jump": "i",
      "offset": [
        1055,
        1077
      ],
      "op": "JUMP",
      "path": "36"
    },
    "233": {
      "fn": "IsValidWithDate.extendExpiry",
      "offset": [
        1055,
        1077
      ],
      "op": "JUMPDEST",
      "path": "36"
    },
    "234": {
      "fn": "IsValidWithDate.extendExpiry",
      "offset": [
        1028,
        1043
      ],
      "op": "PUSH1",
      "path": "36",
      "value": "0x0"
    },
    "236": {
      "fn": "IsValidWithDate.extendExpiry",
      "offset": [
        1028,
        1052
      ],
      "op": "DUP4",
      "path": "36"
    },
    "237": {
      "fn": "IsValidWithDate.extendExpiry",
      "offset": [
        1028,
        1052
      ],
      "op": "DUP2",
      "path": "36"
    },
    "238": {
      "fn": "IsValidWithDate.extendExpiry",
      "offset": [
        1028,
        1052
      ],
      "op": "MSTORE",
      "path": "36"
    },
    "239": {
      "fn": "IsValidWithDate.extendExpiry",
      "offset": [
        1028,
        1052
      ],
      "op": "PUSH1",
      "path": "36",
      "value": "0x20"
    },
    "241": {
      "fn": "IsValidWithDate.extendExpiry",
      "offset": [
        1028,
        1052
      ],
      "op": "DUP2",
      "path": "36"
    },
    "242": {
      "fn": "IsValidWithDate.extendExpiry",
      "offset": [
        1028,
        1052
      ],
      "op": "DUP2",
      "path": "36"
    },
    "243": {
      "fn": "IsValidWithDate.extendExpiry",
      "offset": [
        1028,
        1052
      ],
      "op": "MSTORE",
      "path": "36"
    },
    "244": {
      "fn": "IsValidWithDate.extendExpiry",
      "offset": [
        1028,
        1052
      ],
      "op": "PUSH1",
      "path": "36",
      "value": "0x40"
    },
    "246": {
      "fn": "IsValidWithDate.extendExpiry",
      "offset": [
        1028,
        1052
      ],
      "op": "SWAP2",
      "path": "36"
    },
    "247": {
      "fn": "IsValidWithDate.extendExpiry",
      "offset": [
        1028,
        1052
      ],
      "op": "DUP3",
      "path": "36"
    },
    "248": {
      "fn": "IsValidWithDate.extendExpiry",
      "offset": [
        1028,
        1052
      ],
      "op": "SWAP1",
      "path": "36"
    },
    "249": {
      "fn": "IsValidWithDate.extendExpiry",
      "offset": [
        1028,
        1052
      ],
      "op": "KECCAK256",
      "path": "36"
    },
    "250": {
      "fn": "IsValidWithDate.extendExpiry",
      "offset": [
        1028,
        1077
      ],
      "op": "SWAP3",
      "path": "36"
    },
    "251": {
      "fn": "IsValidWithDate.extendExpiry",
      "offset": [
        1028,
        1077
      ],
      "op": "SWAP1",
      "path": "36"
    },
    "252": {
      "fn": "IsValidWithDate.extendExpiry",
      "offset": [
        1028,
        1077
      ],
      "op": "SWAP3",
      "path": "36"
    },
    "253": {
      "fn": "IsValidWithDate.extendExpiry",
      "offset": [
        1028,
        1077
      ],
      "op": "SSTORE",
      "path": "36"
    },
    "254": {
      "fn": "IsValidWithDate.extendExpiry",
      "offset": [
        1136,
        1159
      ],
      "op": "DUP1",
      "path": "36",
      "statement": 3
    },
    "255": {
      "fn": "IsValidWithDate.extendExpiry",
      "offset": [
        1136,
        1159
      ],
      "op": "MLOAD",
      "path": "36"
    },
    "256": {
      "op": "DUP5"
    },
    "257": {
      "op": "DUP2"
    },
    "258": {
      "op": "MSTORE"
    },
    "259": {
      "op": "SWAP2"
    },
    "260": {
      "op": "DUP3"
    },
    "261": {
      "op": "ADD"
    },
    "262": {
      "op": "DUP4"
    },
    "263": {
      "op": "SWAP1"
    },
    "264": {
      "op": "MSTORE"
    },
    "265": {
      "fn": "IsValidWithDate.extendExpiry",
      "offset": [
        1136,
        1159
      ],
      "op": "PUSH32",
      "path": "36",
      "value": "0x41A73BEB1018A8B63E0F451A8A4F483806142CF14BE45B1A58A23776A1E9B4BC"
    },
    "298": {
      "fn": "IsValidWithDate.extendExpiry",
      "offset": [
        1136,
        1159
      ],
      "op": "SWAP2",
      "path": "36"
    },
    "299": {
      "op": "ADD"
    },
    "300": {
      "fn": "IsValidWithDate.extendExpiry",
      "offset": [
        1136,
        1159
      ],
      "op": "PUSH1",
      "path": "36",
      "value": "0x40"
    },
    "302": {
      "fn": "IsValidWithDate.extendExpiry",
      "offset": [
        1136,
        1159
      ],
      "op": "MLOAD",
      "path": "36"
    },
    "303": {
      "fn": "IsValidWithDate.extendExpiry",
      "offset": [
        1136,
        1159
      ],
      "op": "DUP1",
      "path": "36"
    },
    "304": {
      "fn": "IsValidWithDate.extendExpiry",
      "offset": [
        1136,
        1159
      ],
      "op": "SWAP2",
      "path": "36"
    },
    "305": {
      "fn": "IsValidWithDate.extendExpiry",
      "offset": [
        1136,
        1159
      ],
      "op": "SUB",
      "path": "36"
    },
    "306": {
      "fn": "IsValidWithDate.extendExpiry",
      "offset": [
        1136,
        1159
      ],
      "op": "SWAP1",
      "path": "36"
    },
    "307": {
      "fn": "IsValidWithDate.extendExpiry",
      "offset": [
        1136,
        1159
      ],
      "op": "LOG1",
      "path": "36"
    },
    "308": {
      "fn": "IsValidWithDate.extendExpiry",
      "offset": [
        917,
        1166
      ],
      "op": "POP",
      "path": "36"
    },
    "309": {
      "fn": "IsValidWithDate.extendExpiry",
      "offset": [
        917,
        1166
      ],
      "op": "POP",
      "path": "36"
    },
    "310": {
      "fn": "IsValidWithDate.extendExpiry",
      "jump": "o",
      "offset": [
        917,
        1166
      ],
      "op": "JUMP",
      "path": "36"
    },
    "311": {
      "fn": "IsValidWithDate.getTimeLeft",
      "offset": [
        2069,
        2517
      ],
      "op": "JUMPDEST",
      "path": "36"
    },
    "312": {
      "fn": "IsValidWithDate.getTimeLeft",
      "offset": [
        2128,
        2135
      ],
      "op": "PUSH1",
      "path": "36",
      "value": "0x0"
    },
    "314": {
      "fn": "IsValidWithDate.getExpiryDate",
      "offset": [
        1459,
        1483
      ],
      "op": "DUP2",
      "path": "36"
    },
    "315": {
      "fn": "IsValidWithDate.getExpiryDate",
      "offset": [
        1459,
        1483
      ],
      "op": "DUP2",
      "path": "36"
    },
    "316": {
      "fn": "IsValidWithDate.getExpiryDate",
      "offset": [
        1459,
        1483
      ],
      "op": "MSTORE",
      "path": "36"
    },
    "317": {
      "fn": "IsValidWithDate.getExpiryDate",
      "offset": [
        1459,
        1483
      ],
      "op": "PUSH1",
      "path": "36",
      "value": "0x20"
    },
    "319": {
      "fn": "IsValidWithDate.getExpiryDate",
      "offset": [
        1459,
        1483
      ],
      "op": "DUP2",
      "path": "36"
    },
    "320": {
      "fn": "IsValidWithDate.getExpiryDate",
      "offset": [
        1459,
        1483
      ],
      "op": "SWAP1",
      "path": "36"
    },
    "321": {
      "fn": "IsValidWithDate.getExpiryDate",
      "offset": [
        1459,
        1483
      ],
      "op": "MSTORE",
      "path": "36"
    },
    "322": {
      "fn": "IsValidWithDate.getExpiryDate",
      "offset": [
        1459,
        1483
      ],
      "op": "PUSH1",
      "path": "36",
      "value": "0x40"
    },
    "324": {
      "fn": "IsValidWithDate.getExpiryDate",
      "offset": [
        1459,
        1483
      ],
      "op": "DUP2",
      "path": "36"
    },
    "325": {
      "fn": "IsValidWithDate.getExpiryDate",
      "offset": [
        1459,
        1483
      ],
      "op": "KECCAK256",
      "path": "36"
    },
    "326": {
      "fn": "IsValidWithDate.getExpiryDate",
      "offset": [
        1459,
        1483
      ],
      "op": "SLOAD",
      "path": "36"
    },
    "327": {
      "fn": "IsValidWithDate.getTimeLeft",
      "offset": [
        2255,
        2270
      ],
      "op": "TIMESTAMP",
      "path": "36"
    },
    "328": {
      "branch": 6,
      "fn": "IsValidWithDate.getTimeLeft",
      "offset": [
        2255,
        2295
      ],
      "op": "GT",
      "path": "36"
    },
    "329": {
      "fn": "IsValidWithDate.getTimeLeft",
      "offset": [
        2251,
        2511
      ],
      "op": "ISZERO",
      "path": "36"
    },
    "330": {
      "fn": "IsValidWithDate.getTimeLeft",
      "offset": [
        2251,
        2511
      ],
      "op": "PUSH2",
      "path": "36",
      "value": "0x155"
    },
    "333": {
      "branch": 6,
      "fn": "IsValidWithDate.getTimeLeft",
      "offset": [
        2251,
        2511
      ],
      "op": "JUMPI",
      "path": "36"
    },
    "334": {
      "op": "POP"
    },
    "335": {
      "fn": "IsValidWithDate.getTimeLeft",
      "offset": [
        2349,
        2350
      ],
      "op": "PUSH1",
      "path": "36",
      "statement": 4,
      "value": "0x0"
    },
    "337": {
      "fn": "IsValidWithDate.getTimeLeft",
      "offset": [
        2349,
        2350
      ],
      "op": "SWAP2",
      "path": "36"
    },
    "338": {
      "fn": "IsValidWithDate.getTimeLeft",
      "offset": [
        2069,
        2517
      ],
      "op": "SWAP1",
      "path": "36"
    },
    "339": {
      "op": "POP"
    },
    "340": {
      "fn": "IsValidWithDate.getTimeLeft",
      "jump": "o",
      "offset": [
        2069,
        2517
      ],
      "op": "JUMP",
      "path": "36"
    },
    "341": {
      "fn": "IsValidWithDate.getTimeLeft",
      "offset": [
        2251,
        2511
      ],
      "op": "JUMPDEST",
      "path": "36"
    },
    "342": {
      "fn": "IsValidWithDate.getExpiryDate",
      "offset": [
        1433,
        1440
      ],
      "op": "PUSH1",
      "path": "36",
      "value": "0x0"
    },
    "344": {
      "fn": "IsValidWithDate.getExpiryDate",
      "offset": [
        1459,
        1483
      ],
      "op": "DUP3",
      "path": "36"
    },
    "345": {
      "fn": "IsValidWithDate.getExpiryDate",
      "offset": [
        1459,
        1483
      ],
      "op": "DUP2",
      "path": "36"
    },
    "346": {
      "fn": "IsValidWithDate.getExpiryDate",
      "offset": [
        1459,
        1483
      ],
      "op": "MSTORE",
      "path": "36"
    },
    "347": {
      "fn": "IsValidWithDate.getExpiryDate",
      "offset": [
        1459,
        1483
      ],
      "op": "PUSH1",
      "path": "36",
      "value": "0x20"
    },
    "349": {
      "fn": "IsValidWithDate.getExpiryDate",
      "offset": [
        1459,
        1483
      ],
      "op": "DUP2",
      "path": "36"
    },
    "350": {
      "fn": "IsValidWithDate.getExpiryDate",
      "offset": [
        1459,
        1483
      ],
      "op": "SWAP1",
      "path": "36"
    },
    "351": {
      "fn": "IsValidWithDate.getExpiryDate",
      "offset": [
        1459,
        1483
      ],
      "op": "MSTORE",
      "path": "36"
    },
    "352": {
      "fn": "IsValidWithDate.getExpiryDate",
      "offset": [
        1459,
        1483
      ],
      "op": "PUSH1",
      "path": "36",
      "value": "0x40"
    },
    "354": {
      "fn": "IsValidWithDate.getExpiryDate",
      "offset": [
        1459,
        1483
      ],
      "op": "SWAP1",
      "path": "36"
    },
    "355": {
      "fn": "IsValidWithDate.getExpiryDate",
      "offset": [
        1459,
        1483
      ],
      "op": "KECCAK256",
      "path": "36"
    },
    "356": {
      "fn": "IsValidWithDate.getExpiryDate",
      "offset": [
        1459,
        1483
      ],
      "op": "SLOAD",
      "path": "36"
    },
    "357": {
      "fn": "IsValidWithDate.getTimeLeft",
      "offset": [
        2460,
        2500
      ],
      "op": "PUSH2",
      "path": "36",
      "statement": 5,
      "value": "0x16F"
    },
    "360": {
      "fn": "IsValidWithDate.getTimeLeft",
      "offset": [
        2460,
        2500
      ],
      "op": "SWAP1",
      "path": "36"
    },
    "361": {
      "fn": "IsValidWithDate.getTimeLeft",
      "offset": [
        2485,
        2500
      ],
      "op": "TIMESTAMP",
      "path": "36"
    },
    "362": {
      "fn": "IsValidWithDate.getTimeLeft",
      "offset": [
        2485,
        2500
      ],
      "op": "SWAP1",
      "path": "36"
    },
    "363": {
      "fn": "IsValidWithDate.getTimeLeft",
      "offset": [
        2460,
        2500
      ],
      "op": "PUSH2",
      "path": "36",
      "value": "0x1DE"
    },
    "366": {
      "fn": "IsValidWithDate.getTimeLeft",
      "jump": "i",
      "offset": [
        2460,
        2500
      ],
      "op": "JUMP",
      "path": "36"
    },
    "367": {
      "fn": "IsValidWithDate.getTimeLeft",
      "offset": [
        2460,
        2500
      ],
      "op": "JUMPDEST",
      "path": "36"
    },
    "368": {
      "fn": "IsValidWithDate.getTimeLeft",
      "offset": [
        2453,
        2500
      ],
      "op": "SWAP3",
      "path": "36"
    },
    "369": {
      "fn": "IsValidWithDate.getTimeLeft",
      "offset": [
        2069,
        2517
      ],
      "op": "SWAP2",
      "path": "36"
    },
    "370": {
      "op": "POP"
    },
    "371": {
      "op": "POP"
    },
    "372": {
      "fn": "IsValidWithDate.getTimeLeft",
      "jump": "o",
      "offset": [
        2069,
        2517
      ],
      "op": "JUMP",
      "path": "36"
    },
    "373": {
      "op": "JUMPDEST"
    },
    "374": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "376": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "378": {
      "op": "DUP3"
    },
    "379": {
      "op": "DUP5"
    },
    "380": {
      "op": "SUB"
    },
    "381": {
      "op": "SLT"
    },
    "382": {
      "op": "ISZERO"
    },
    "383": {
      "op": "PUSH2",
      "value": "0x187"
    },
    "386": {
      "op": "JUMPI"
    },
    "387": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "389": {
      "op": "DUP1"
    },
    "390": {
      "op": "REVERT"
    },
    "391": {
      "op": "JUMPDEST"
    },
    "392": {
      "op": "POP"
    },
    "393": {
      "op": "CALLDATALOAD"
    },
    "394": {
      "op": "SWAP2"
    },
    "395": {
      "op": "SWAP1"
    },
    "396": {
      "op": "POP"
    },
    "397": {
      "jump": "o",
      "op": "JUMP"
    },
    "398": {
      "op": "JUMPDEST"
    },
    "399": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "401": {
      "op": "DUP1"
    },
    "402": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "404": {
      "op": "DUP4"
    },
    "405": {
      "op": "DUP6"
    },
    "406": {
      "op": "SUB"
    },
    "407": {
      "op": "SLT"
    },
    "408": {
      "op": "ISZERO"
    },
    "409": {
      "op": "PUSH2",
      "value": "0x1A1"
    },
    "412": {
      "op": "JUMPI"
    },
    "413": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "415": {
      "op": "DUP1"
    },
    "416": {
      "op": "REVERT"
    },
    "417": {
      "op": "JUMPDEST"
    },
    "418": {
      "op": "POP"
    },
    "419": {
      "op": "POP"
    },
    "420": {
      "op": "DUP1"
    },
    "421": {
      "op": "CALLDATALOAD"
    },
    "422": {
      "op": "SWAP3"
    },
    "423": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "425": {
      "op": "SWAP1"
    },
    "426": {
      "op": "SWAP2"
    },
    "427": {
      "op": "ADD"
    },
    "428": {
      "op": "CALLDATALOAD"
    },
    "429": {
      "op": "SWAP2"
    },
    "430": {
      "op": "POP"
    },
    "431": {
      "jump": "o",
      "op": "JUMP"
    },
    "432": {
      "op": "JUMPDEST"
    },
    "433": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "438": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "440": {
      "op": "SHL"
    },
    "441": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "443": {
      "op": "MSTORE"
    },
    "444": {
      "op": "PUSH1",
      "value": "0x11"
    },
    "446": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "448": {
      "op": "MSTORE"
    },
    "449": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "451": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "453": {
      "op": "REVERT"
    },
    "454": {
      "op": "JUMPDEST"
    },
    "455": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "457": {
      "op": "DUP3"
    },
    "458": {
      "op": "NOT"
    },
    "459": {
      "op": "DUP3"
    },
    "460": {
      "op": "GT"
    },
    "461": {
      "op": "ISZERO"
    },
    "462": {
      "op": "PUSH2",
      "value": "0x1D9"
    },
    "465": {
      "op": "JUMPI"
    },
    "466": {
      "op": "PUSH2",
      "value": "0x1D9"
    },
    "469": {
      "op": "PUSH2",
      "value": "0x1B0"
    },
    "472": {
      "jump": "i",
      "op": "JUMP"
    },
    "473": {
      "op": "JUMPDEST"
    },
    "474": {
      "op": "POP"
    },
    "475": {
      "op": "ADD"
    },
    "476": {
      "op": "SWAP1"
    },
    "477": {
      "jump": "o",
      "op": "JUMP"
    },
    "478": {
      "op": "JUMPDEST"
    },
    "479": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "481": {
      "op": "DUP3"
    },
    "482": {
      "op": "DUP3"
    },
    "483": {
      "op": "LT"
    },
    "484": {
      "op": "ISZERO"
    },
    "485": {
      "op": "PUSH2",
      "value": "0x1F0"
    },
    "488": {
      "op": "JUMPI"
    },
    "489": {
      "op": "PUSH2",
      "value": "0x1F0"
    },
    "492": {
      "op": "PUSH2",
      "value": "0x1B0"
    },
    "495": {
      "jump": "i",
      "op": "JUMP"
    },
    "496": {
      "op": "JUMPDEST"
    },
    "497": {
      "op": "POP"
    },
    "498": {
      "op": "SUB"
    },
    "499": {
      "op": "SWAP1"
    },
    "500": {
      "jump": "o",
      "op": "JUMP"
    }
  },
  "sha1": "9f59a94ba146cd93a044934cd8d86ba2eed75908",
  "source": "// SPDX-License-Identifier: GPL-3.0\npragma solidity ^0.8.8;\n\n/**\n * @title IsValidWithDate contract.\n * @author Daccred.\n * @dev Controls time for minted tokens till expiry.\n */\ncontract IsValidWithDate {\n    /// @dev Mapping individual tokens to their expiry dates.\n    mapping(uint256 => uint256) internal tokenExpiryDate;\n\n    /// @dev Emitted when a token is extended by redemption.\n    event Extended(uint256 tokenId, uint256 time);\n\n    /**\n     * @dev  On every successful redemption or mint of token the\n     *       expiry of the token is extended by the duration passed\n     *       in the contract.\n     *       This should be called on expired tokens.\n     *\n     * @notice   This function is expected to be called by the\n     *           SoulboundRedeemable on every mint.\n     *\n     * @param tokenId    Token to extend its expiry.\n     * @param time       Length of time to extend it with.\n     */\n    function extendExpiry(uint256 tokenId, uint256 time) public {\n        /// @dev Set expiry to new time.\n        tokenExpiryDate[tokenId] = block.timestamp + time;\n        /// @dev Emit the {Extended} event.\n        emit Extended(tokenId, time);\n    }\n\n    /**\n     * @dev Returns the expiry date of `tokenId`.\n     *\n     * @notice Callable by anyone.\n     *\n     * @param tokenId Token to get its expiry.\n     *\n     * @return time of expiry.\n     */\n    function getExpiryDate(uint256 tokenId) public view returns (uint256) {\n        return tokenExpiryDate[tokenId];\n    }\n\n    /**\n     * @dev Return true if the token is expired or false if otherwise.\n     *\n     * @notice Callable by anyone.\n     *\n     * @param tokenId Token to check if expired.\n     *\n     * @return bool true or false.\n     */\n    function isValid(uint256 tokenId) public view returns (bool) {\n        return block.timestamp <= getExpiryDate(tokenId);\n    }\n\n    /**\n     * @dev Returns the time left for a token to expire.\n     *\n     * @notice Callable by anyone.\n     *\n     * @param tokenId Token to get its expiry.\n     *\n     * @return time left till expiry.\n     */\n    function getTimeLeft(uint256 tokenId) public view returns (uint256) {\n        /// @dev    If the current time has passed the mapped expiry\n        ///         time of token.\n        if (block.timestamp > getExpiryDate(tokenId)) {\n            /// @dev Return 0.\n            return 0;\n        } else {\n            /// @dev    Else,\n            ///         Return time left.\n            return getExpiryDate(tokenId) - block.timestamp;\n        }\n    }\n}\n",
  "sourceMap": "178:2341:36:-:0;;;;;;;;;;;;;;;;;;;",
  "sourcePath": "contracts/contracts/packages/soulbound/contracts/IsValidWithDate.sol",
  "type": "contract"
}