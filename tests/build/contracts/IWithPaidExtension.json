{
  "abi": [
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "_address",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "amountPaid",
          "type": "uint256"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "Minted",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "getFee",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "_fee",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_fee",
          "type": "uint256"
        }
      ],
      "name": "setFee",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "splitPayout",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "withRedemptionFee",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "withdraw",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    }
  ],
  "allSourcePaths": {
    "25": "contracts/contracts/packages/nft/contracts/interfaces/IPayableMint.sol"
  },
  "ast": {
    "absolutePath": "contracts/contracts/packages/nft/contracts/interfaces/IPayableMint.sol",
    "exportedSymbols": {
      "IWithPaidExtension": [
        3484
      ]
    },
    "id": 3485,
    "license": "GPL-3.0",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 3445,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".4"
        ],
        "nodeType": "PragmaDirective",
        "src": "429:23:25"
      },
      {
        "abstract": false,
        "baseContracts": [],
        "canonicalName": "IWithPaidExtension",
        "contractDependencies": [],
        "contractKind": "interface",
        "documentation": {
          "id": 3446,
          "nodeType": "StructuredDocumentation",
          "src": "454:216:25",
          "text": " @title Payable mint interface.\n @author Daccred.\n @dev\n This Extension enable users to charge for mints in the Native token of the Network where the token is being issued.\n The minters pay to mint."
        },
        "fullyImplemented": false,
        "id": 3484,
        "linearizedBaseContracts": [
          3484
        ],
        "name": "IWithPaidExtension",
        "nameLocation": "682:18:25",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "anonymous": false,
            "documentation": {
              "id": 3447,
              "nodeType": "StructuredDocumentation",
              "src": "739:42:25",
              "text": "@dev Emitted when the token is minted."
            },
            "eventSelector": "25b428dfde728ccfaddad7e29e4ac23c24ed7fd1a6e3e3f91894a9a073f5dfff",
            "id": 3455,
            "name": "Minted",
            "nameLocation": "792:6:25",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 3454,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3449,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "_address",
                  "nameLocation": "815:8:25",
                  "nodeType": "VariableDeclaration",
                  "scope": 3455,
                  "src": "799:24:25",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3448,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "799:7:25",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3451,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "amountPaid",
                  "nameLocation": "841:10:25",
                  "nodeType": "VariableDeclaration",
                  "scope": 3455,
                  "src": "825:26:25",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 3450,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "825:7:25",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3453,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nameLocation": "869:7:25",
                  "nodeType": "VariableDeclaration",
                  "scope": 3455,
                  "src": "853:23:25",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 3452,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "853:7:25",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "798:79:25"
            },
            "src": "786:92:25"
          },
          {
            "documentation": {
              "id": 3456,
              "nodeType": "StructuredDocumentation",
              "src": "916:110:25",
              "text": " @dev Allows the setting of the Fees.\n @param _fee, the price of fee to be set."
            },
            "functionSelector": "69fe0e2d",
            "id": 3461,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "setFee",
            "nameLocation": "1040:6:25",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 3459,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3458,
                  "mutability": "mutable",
                  "name": "_fee",
                  "nameLocation": "1055:4:25",
                  "nodeType": "VariableDeclaration",
                  "scope": 3461,
                  "src": "1047:12:25",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 3457,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1047:7:25",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1046:14:25"
            },
            "returnParameters": {
              "id": 3460,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1069:0:25"
            },
            "scope": 3484,
            "src": "1031:39:25",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "documentation": {
              "id": 3462,
              "nodeType": "StructuredDocumentation",
              "src": "1076:121:25",
              "text": " @dev Allows the setting of the Fees.\n @return _fee which is the price of fee already set."
            },
            "functionSelector": "ced72f87",
            "id": 3467,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "getFee",
            "nameLocation": "1211:6:25",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 3463,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1217:2:25"
            },
            "returnParameters": {
              "id": 3466,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3465,
                  "mutability": "mutable",
                  "name": "_fee",
                  "nameLocation": "1246:4:25",
                  "nodeType": "VariableDeclaration",
                  "scope": 3467,
                  "src": "1238:12:25",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 3464,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1238:7:25",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1237:14:25"
            },
            "scope": 3484,
            "src": "1202:50:25",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "documentation": {
              "id": 3468,
              "nodeType": "StructuredDocumentation",
              "src": "1258:56:25",
              "text": " @dev Allows the splitting of payouts."
            },
            "functionSelector": "e6b52deb",
            "id": 3471,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "splitPayout",
            "nameLocation": "1328:11:25",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 3469,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1339:2:25"
            },
            "returnParameters": {
              "id": 3470,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1350:0:25"
            },
            "scope": 3484,
            "src": "1319:32:25",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "documentation": {
              "id": 3472,
              "nodeType": "StructuredDocumentation",
              "src": "1357:193:25",
              "text": " @dev Allows the user to pay some ETH to mint the token.\n @param tokenId, tokenId to be minted.\n @return bool, true if minted and false if otherwise."
            },
            "functionSelector": "3dc831b9",
            "id": 3479,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "withRedemptionFee",
            "nameLocation": "1564:17:25",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 3475,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3474,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nameLocation": "1590:7:25",
                  "nodeType": "VariableDeclaration",
                  "scope": 3479,
                  "src": "1582:15:25",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 3473,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1582:7:25",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1581:17:25"
            },
            "returnParameters": {
              "id": 3478,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3477,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 3479,
                  "src": "1625:4:25",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 3476,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "1625:4:25",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1624:6:25"
            },
            "scope": 3484,
            "src": "1555:76:25",
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "documentation": {
              "id": 3480,
              "nodeType": "StructuredDocumentation",
              "src": "1637:163:25",
              "text": " @dev Whenever users want to withdraw funds from a payable credentials,\n We also get paid as well. The markup can be 10% for free accounts."
            },
            "functionSelector": "3ccfd60b",
            "id": 3483,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "withdraw",
            "nameLocation": "1814:8:25",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 3481,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1822:2:25"
            },
            "returnParameters": {
              "id": 3482,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1841:0:25"
            },
            "scope": 3484,
            "src": "1805:37:25",
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "scope": 3485,
        "src": "672:1172:25",
        "usedErrors": []
      }
    ],
    "src": "429:1416:25"
  },
  "bytecode": "",
  "bytecodeSha1": "da39a3ee5e6b4b0d3255bfef95601890afd80709",
  "compiler": {
    "evm_version": "istanbul",
    "optimizer": {
      "enabled": true,
      "runs": 200
    },
    "version": "0.8.15+commit.e14f2714"
  },
  "contractName": "IWithPaidExtension",
  "coverageMap": {
    "branches": {},
    "statements": {}
  },
  "dependencies": [],
  "deployedBytecode": "",
  "deployedSourceMap": "",
  "language": "Solidity",
  "natspec": {
    "author": "Daccred.",
    "details": "This Extension enable users to charge for mints in the Native token of the Network where the token is being issued. The minters pay to mint.",
    "events": {
      "Minted(address,uint256,uint256)": {
        "details": "Emitted when the token is minted."
      }
    },
    "kind": "dev",
    "methods": {
      "getFee()": {
        "details": "Allows the setting of the Fees.",
        "returns": {
          "_fee": "which is the price of fee already set."
        }
      },
      "setFee(uint256)": {
        "details": "Allows the setting of the Fees.",
        "params": {
          "_fee": ", the price of fee to be set."
        }
      },
      "splitPayout()": {
        "details": "Allows the splitting of payouts."
      },
      "withRedemptionFee(uint256)": {
        "details": "Allows the user to pay some ETH to mint the token.",
        "params": {
          "tokenId": ", tokenId to be minted."
        },
        "returns": {
          "_0": "bool, true if minted and false if otherwise."
        }
      },
      "withdraw()": {
        "details": "Whenever users want to withdraw funds from a payable credentials, We also get paid as well. The markup can be 10% for free accounts."
      }
    },
    "title": "Payable mint interface.",
    "version": 1
  },
  "offset": [
    672,
    1844
  ],
  "opcodes": "",
  "pcMap": {},
  "sha1": "c4c1c17c58f91d111f9f2b19c23797bfbb3299da",
  "source": "// SPDX-License-Identifier: GPL-3.0\n\n// \t _____     ______     ______     ______     ______     ______     _____\n//  /\\  __-.  /\\  __ \\   /\\  ___\\   /\\  ___\\   /\\  == \\   /\\  ___\\   /\\  __-.\n//  \\ \\ \\/\\ \\ \\ \\  __ \\  \\ \\ \\____  \\ \\ \\____  \\ \\  __<   \\ \\  __\\   \\ \\ \\/\\ \\\n//   \\ \\____-  \\ \\_\\ \\_\\  \\ \\_____\\  \\ \\_____\\  \\ \\_\\ \\_\\  \\ \\_____\\  \\ \\____-\n//    \\/____/   \\/_/\\/_/   \\/_____/   \\/_____/   \\/_/ /_/   \\/_____/   \\/____/\n\npragma solidity ^0.8.4;\n\n/**\n * @title Payable mint interface.\n * @author Daccred.\n * @dev\n * This Extension enable users to charge for mints in the Native token of the Network where the token is being issued.\n * The minters pay to mint.\n */\n\ninterface IWithPaidExtension {\n    // ===== E V E N T S =====\n\n    /// @dev Emitted when the token is minted.\n    event Minted(address indexed _address, uint256 indexed amountPaid, uint256 indexed tokenId);\n\n    // ===== E V E N T S =====\n\n    /**\n     * @dev Allows the setting of the Fees.\n     *\n     * @param _fee, the price of fee to be set.\n     */\n    function setFee(uint256 _fee) external;\n\n    /**\n     * @dev Allows the setting of the Fees.\n     *\n     * @return _fee which is the price of fee already set.\n     */\n    function getFee() external returns (uint256 _fee);\n\n    /**\n     * @dev Allows the splitting of payouts.\n     */\n    function splitPayout() external;\n\n    /**\n     * @dev Allows the user to pay some ETH to mint the token.\n     *\n     * @param tokenId, tokenId to be minted.\n     *\n     * @return bool, true if minted and false if otherwise.\n     */\n    function withRedemptionFee(uint256 tokenId) external payable returns (bool);\n\n    /**\n     * @dev Whenever users want to withdraw funds from a payable credentials,\n     * We also get paid as well. The markup can be 10% for free accounts.\n     */\n    function withdraw() external payable;\n}\n",
  "sourceMap": "",
  "sourcePath": "contracts/contracts/packages/nft/contracts/interfaces/IPayableMint.sol",
  "type": "interface"
}