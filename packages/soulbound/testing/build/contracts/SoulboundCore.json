{
  "abi": [
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "name",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "symbol",
          "type": "string"
        },
        {
          "internalType": "address",
          "name": "_allowlistOwner",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_totalSupply",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_address",
          "type": "address"
        }
      ],
      "name": "Unsigned",
      "type": "error"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "Attest",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "IssueWithSignature",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "Revoke",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "RevokeWithSignature",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "_address",
          "type": "address"
        }
      ],
      "name": "Signed",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "_address",
          "type": "address"
        }
      ],
      "name": "Verified",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "addressHash",
          "type": "bytes32"
        },
        {
          "indexed": true,
          "internalType": "bool",
          "name": "result",
          "type": "bool"
        }
      ],
      "name": "VerifySignature",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "_getBaseURI",
      "outputs": [
        {
          "internalType": "string",
          "name": "_baseURI",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        }
      ],
      "name": "balanceOf",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "burn",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "generateTokenURI",
      "outputs": [
        {
          "internalType": "string",
          "name": "_tokenURI",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getAllowlistOwner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_tokenId",
          "type": "uint256"
        }
      ],
      "name": "isMinted",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "addr",
          "type": "address"
        },
        {
          "internalType": "bytes32",
          "name": "hash",
          "type": "bytes32"
        },
        {
          "internalType": "bytes",
          "name": "sig",
          "type": "bytes"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        },
        {
          "internalType": "string",
          "name": "tokenURI",
          "type": "string"
        }
      ],
      "name": "issueWithSignature",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_tokenId",
          "type": "uint256"
        }
      ],
      "name": "issuerOf",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "name",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "ownerOf",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "hash",
          "type": "bytes32"
        },
        {
          "internalType": "bytes",
          "name": "sig",
          "type": "bytes"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "revokeWithSignature",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "caller",
          "type": "address"
        },
        {
          "internalType": "string",
          "name": "_baseURI",
          "type": "string"
        }
      ],
      "name": "setBaseURI",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes4",
          "name": "interfaceId",
          "type": "bytes4"
        }
      ],
      "name": "supportsInterface",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "symbol",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "tokenURI",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "hash",
          "type": "bytes32"
        },
        {
          "internalType": "bytes",
          "name": "sig",
          "type": "bytes"
        }
      ],
      "name": "verifySignature",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_signer",
          "type": "address"
        },
        {
          "internalType": "bytes32",
          "name": "_hash",
          "type": "bytes32"
        },
        {
          "internalType": "bytes",
          "name": "_signature",
          "type": "bytes"
        }
      ],
      "name": "verifySigner",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    }
  ],
  "allSourcePaths": {
    "0": "contracts/contracts/interfaces/IAllowlist.sol",
    "2": "contracts/eips/ERC-4973.sol",
    "3": "contracts/extensions/Allowlist.sol",
    "5": "contracts/extensions/Ownable.sol",
    "6": "contracts/extensions/Soulbound.sol",
    "7": "contracts/extensions/SoulboundCore.sol"
  },
  "ast": {
    "absolutePath": "contracts/extensions/SoulboundCore.sol",
    "exportedSymbols": {
      "Allowlist": [
        1290
      ],
      "ERC165": [
        1940
      ],
      "ERC4973": [
        2267
      ],
      "IAllowlist": [
        1813
      ],
      "IERC165": [
        1919
      ],
      "IERC4973": [
        1996
      ],
      "IERC721Metadata": [
        1958
      ],
      "ISoulbond": [
        1907
      ],
      "Ownable": [
        1410
      ],
      "Soulbound": [
        1677
      ],
      "SoulboundCore": [
        324
      ]
    },
    "id": 325,
    "license": "GPL-3.0",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "438:23:7"
      },
      {
        "absolutePath": "contracts/extensions/Soulbound.sol",
        "file": "./Soulbound.sol",
        "id": 2,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 325,
        "sourceUnit": 1678,
        "src": "463:25:7",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "contracts/extensions/Ownable.sol",
        "file": "./Ownable.sol",
        "id": 3,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 325,
        "sourceUnit": 1411,
        "src": "489:23:7",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "contracts/extensions/Allowlist.sol",
        "file": "./Allowlist.sol",
        "id": 4,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 325,
        "sourceUnit": 1291,
        "src": "513:25:7",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 6,
              "name": "Ownable",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 1410,
              "src": "846:7:7"
            },
            "id": 7,
            "nodeType": "InheritanceSpecifier",
            "src": "846:7:7"
          },
          {
            "baseName": {
              "id": 8,
              "name": "Soulbound",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 1677,
              "src": "855:9:7"
            },
            "id": 9,
            "nodeType": "InheritanceSpecifier",
            "src": "855:9:7"
          },
          {
            "baseName": {
              "id": 10,
              "name": "Allowlist",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 1290,
              "src": "866:9:7"
            },
            "id": 11,
            "nodeType": "InheritanceSpecifier",
            "src": "866:9:7"
          }
        ],
        "canonicalName": "SoulboundCore",
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": {
          "id": 5,
          "nodeType": "StructuredDocumentation",
          "src": "540:279:7",
          "text": " @title Soulbound Core Contract.\n @author Daccred.\n @dev  Soulbound Core template. This contract aims at a soulbound token with\n       capped supply, set by the deployer or defaulted to 1000000.\n       Mints and burns affect the current supply of tokens respectively."
        },
        "fullyImplemented": true,
        "id": 324,
        "linearizedBaseContracts": [
          324,
          1290,
          1677,
          1410,
          1813,
          2267,
          1996,
          1958,
          1940,
          1919
        ],
        "name": "SoulboundCore",
        "nameLocation": "829:13:7",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "documentation": {
              "id": 12,
              "nodeType": "StructuredDocumentation",
              "src": "882:68:7",
              "text": "@dev Total supply limit set by deployer or defaulted to 1000000."
            },
            "id": 14,
            "mutability": "mutable",
            "name": "totalSupply",
            "nameLocation": "972:11:7",
            "nodeType": "VariableDeclaration",
            "scope": 324,
            "src": "955:28:7",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 13,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "955:7:7",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "documentation": {
              "id": 15,
              "nodeType": "StructuredDocumentation",
              "src": "989:140:7",
              "text": "@dev    With every issue and revoke, this value\n         increases and reduces.\n         It cannot be GT the TOTAL_SUPPLY."
            },
            "id": 17,
            "mutability": "mutable",
            "name": "supply",
            "nameLocation": "1151:6:7",
            "nodeType": "VariableDeclaration",
            "scope": 324,
            "src": "1134:23:7",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 16,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "1134:7:7",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "internal"
          },
          {
            "anonymous": false,
            "documentation": {
              "id": 18,
              "nodeType": "StructuredDocumentation",
              "src": "1164:55:7",
              "text": "@dev Emitted when a token is minted from Signature."
            },
            "id": 24,
            "name": "IssueWithSignature",
            "nameLocation": "1230:18:7",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 23,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 20,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "to",
                  "nameLocation": "1265:2:7",
                  "nodeType": "VariableDeclaration",
                  "scope": 24,
                  "src": "1249:18:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 19,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1249:7:7",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 22,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nameLocation": "1285:7:7",
                  "nodeType": "VariableDeclaration",
                  "scope": 24,
                  "src": "1269:23:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 21,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1269:7:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1248:45:7"
            },
            "src": "1224:70:7"
          },
          {
            "anonymous": false,
            "documentation": {
              "id": 25,
              "nodeType": "StructuredDocumentation",
              "src": "1299:56:7",
              "text": "@dev Emitted when a token is revoked with Signature."
            },
            "id": 29,
            "name": "RevokeWithSignature",
            "nameLocation": "1366:19:7",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 28,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 27,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nameLocation": "1402:7:7",
                  "nodeType": "VariableDeclaration",
                  "scope": 29,
                  "src": "1386:23:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 26,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1386:7:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1385:25:7"
            },
            "src": "1360:51:7"
          },
          {
            "body": {
              "id": 43,
              "nodeType": "Block",
              "src": "1640:91:7",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 38,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 35,
                          "name": "_caller",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 32,
                          "src": "1658:7:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 36,
                            "name": "getAllowlistOwner",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1161,
                            "src": "1669:17:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                              "typeString": "function () view returns (address)"
                            }
                          },
                          "id": 37,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1669:19:7",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "1658:30:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4e6f7420416c6c6f776c697374204f776e657221",
                        "id": 39,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1690:22:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_6141a88e89b79096d457df761d61ed151b2f288bac5b547a9b168f2a980ee39a",
                          "typeString": "literal_string \"Not Allowlist Owner!\""
                        },
                        "value": "Not Allowlist Owner!"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_6141a88e89b79096d457df761d61ed151b2f288bac5b547a9b168f2a980ee39a",
                          "typeString": "literal_string \"Not Allowlist Owner!\""
                        }
                      ],
                      "id": 34,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "1650:7:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 40,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1650:63:7",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 41,
                  "nodeType": "ExpressionStatement",
                  "src": "1650:63:7"
                },
                {
                  "id": 42,
                  "nodeType": "PlaceholderStatement",
                  "src": "1723:1:7"
                }
              ]
            },
            "documentation": {
              "id": 30,
              "nodeType": "StructuredDocumentation",
              "src": "1417:173:7",
              "text": " @dev  Security check to require that the address calling a particular\n       function is the allowlistOwner.\n       \n @param _caller Address."
            },
            "id": 44,
            "name": "onlyAllowlistOwner",
            "nameLocation": "1604:18:7",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 33,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 32,
                  "mutability": "mutable",
                  "name": "_caller",
                  "nameLocation": "1631:7:7",
                  "nodeType": "VariableDeclaration",
                  "scope": 44,
                  "src": "1623:15:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 31,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1623:7:7",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1622:17:7"
            },
            "src": "1595:136:7",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 77,
              "nodeType": "Block",
              "src": "2005:138:7",
              "statements": [
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 65,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 63,
                      "name": "_totalSupply",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 53,
                      "src": "2019:12:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "hexValue": "30",
                      "id": 64,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "2035:1:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "2019:17:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "id": 75,
                    "nodeType": "Block",
                    "src": "2086:51:7",
                    "statements": [
                      {
                        "expression": {
                          "id": 73,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 71,
                            "name": "totalSupply",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 14,
                            "src": "2100:11:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 72,
                            "name": "_totalSupply",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 53,
                            "src": "2114:12:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "2100:26:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 74,
                        "nodeType": "ExpressionStatement",
                        "src": "2100:26:7"
                      }
                    ]
                  },
                  "id": 76,
                  "nodeType": "IfStatement",
                  "src": "2015:122:7",
                  "trueBody": {
                    "id": 70,
                    "nodeType": "Block",
                    "src": "2038:42:7",
                    "statements": [
                      {
                        "expression": {
                          "id": 68,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 66,
                            "name": "totalSupply",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 14,
                            "src": "2052:11:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "hexValue": "316536",
                            "id": 67,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "2066:3:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_1000000_by_1",
                              "typeString": "int_const 1000000"
                            },
                            "value": "1e6"
                          },
                          "src": "2052:17:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 69,
                        "nodeType": "ExpressionStatement",
                        "src": "2052:17:7"
                      }
                    ]
                  }
                }
              ]
            },
            "documentation": {
              "id": 45,
              "nodeType": "StructuredDocumentation",
              "src": "1737:64:7",
              "text": "@dev Deploys the 3 contracts inherited by the SoulboundCore."
            },
            "id": 78,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [
              {
                "arguments": [
                  {
                    "id": 56,
                    "name": "name",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 47,
                    "src": "1960:4:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory_ptr",
                      "typeString": "string memory"
                    }
                  },
                  {
                    "id": 57,
                    "name": "symbol",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 49,
                    "src": "1966:6:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory_ptr",
                      "typeString": "string memory"
                    }
                  }
                ],
                "id": 58,
                "kind": "baseConstructorSpecifier",
                "modifierName": {
                  "id": 55,
                  "name": "Soulbound",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 1677,
                  "src": "1950:9:7"
                },
                "nodeType": "ModifierInvocation",
                "src": "1950:23:7"
              },
              {
                "arguments": [
                  {
                    "id": 60,
                    "name": "_allowlistOwner",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 51,
                    "src": "1988:15:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  }
                ],
                "id": 61,
                "kind": "baseConstructorSpecifier",
                "modifierName": {
                  "id": 59,
                  "name": "Allowlist",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 1290,
                  "src": "1978:9:7"
                },
                "nodeType": "ModifierInvocation",
                "src": "1978:26:7"
              }
            ],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 54,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 47,
                  "mutability": "mutable",
                  "name": "name",
                  "nameLocation": "1841:4:7",
                  "nodeType": "VariableDeclaration",
                  "scope": 78,
                  "src": "1827:18:7",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 46,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1827:6:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 49,
                  "mutability": "mutable",
                  "name": "symbol",
                  "nameLocation": "1870:6:7",
                  "nodeType": "VariableDeclaration",
                  "scope": 78,
                  "src": "1856:20:7",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 48,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1856:6:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 51,
                  "mutability": "mutable",
                  "name": "_allowlistOwner",
                  "nameLocation": "1894:15:7",
                  "nodeType": "VariableDeclaration",
                  "scope": 78,
                  "src": "1886:23:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 50,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1886:7:7",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 53,
                  "mutability": "mutable",
                  "name": "_totalSupply",
                  "nameLocation": "1927:12:7",
                  "nodeType": "VariableDeclaration",
                  "scope": 78,
                  "src": "1919:20:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 52,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1919:7:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1817:128:7"
            },
            "returnParameters": {
              "id": 62,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2005:0:7"
            },
            "scope": 324,
            "src": "1806:337:7",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 137,
              "nodeType": "Block",
              "src": "2941:826:7",
              "statements": [
                {
                  "documentation": "@dev Require that the address is not a zero address.",
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 98,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 93,
                          "name": "addr",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 81,
                          "src": "3024:4:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 96,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "3040:1:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 95,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "3032:7:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 94,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "3032:7:7",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 97,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3032:10:7",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "3024:18:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4d696e7420746f207a65726f20616464726573732e",
                        "id": 99,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3044:23:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_b3cd0cc0adee66fdd10c0f21fe5cb0de39672daa3845cfc9b86f6248c4187fe0",
                          "typeString": "literal_string \"Mint to zero address.\""
                        },
                        "value": "Mint to zero address."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_b3cd0cc0adee66fdd10c0f21fe5cb0de39672daa3845cfc9b86f6248c4187fe0",
                          "typeString": "literal_string \"Mint to zero address.\""
                        }
                      ],
                      "id": 92,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "3016:7:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 100,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3016:52:7",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 101,
                  "nodeType": "ExpressionStatement",
                  "src": "3016:52:7"
                },
                {
                  "documentation": "@dev    Require that the hash is actually 32 [64 characters]\n         in length.",
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        },
                        "id": 106,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 103,
                            "name": "hash",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 83,
                            "src": "3190:4:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          "id": 104,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "length",
                          "nodeType": "MemberAccess",
                          "src": "3190:11:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint8",
                            "typeString": "uint8"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "hexValue": "3332",
                          "id": 105,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "3205:2:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_32_by_1",
                            "typeString": "int_const 32"
                          },
                          "value": "32"
                        },
                        "src": "3190:17:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "496e76616c696420686173682e",
                        "id": 107,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3209:15:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_2a7fbb30cbfd2c1e85c73eb36daa5eb95b6ba858ce622fc97f840c43ac489678",
                          "typeString": "literal_string \"Invalid hash.\""
                        },
                        "value": "Invalid hash."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_2a7fbb30cbfd2c1e85c73eb36daa5eb95b6ba858ce622fc97f840c43ac489678",
                          "typeString": "literal_string \"Invalid hash.\""
                        }
                      ],
                      "id": 102,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "3182:7:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 108,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3182:43:7",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 109,
                  "nodeType": "ExpressionStatement",
                  "src": "3182:43:7"
                },
                {
                  "documentation": "@dev Require the length of the signature is 65.",
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 114,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 111,
                            "name": "sig",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 85,
                            "src": "3303:3:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            }
                          },
                          "id": 112,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "length",
                          "nodeType": "MemberAccess",
                          "src": "3303:10:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "hexValue": "3635",
                          "id": 113,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "3317:2:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_65_by_1",
                            "typeString": "int_const 65"
                          },
                          "value": "65"
                        },
                        "src": "3303:16:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "496e76616c6964207369676e6174757265206c656e677468",
                        "id": 115,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3321:26:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_d0e57016dfcfa997388e3f3d9ad75ea4d5a67a0f23b0489f2cdbaecf3ef0f78c",
                          "typeString": "literal_string \"Invalid signature length\""
                        },
                        "value": "Invalid signature length"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_d0e57016dfcfa997388e3f3d9ad75ea4d5a67a0f23b0489f2cdbaecf3ef0f78c",
                          "typeString": "literal_string \"Invalid signature length\""
                        }
                      ],
                      "id": 110,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "3295:7:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 116,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3295:53:7",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 117,
                  "nodeType": "ExpressionStatement",
                  "src": "3295:53:7"
                },
                {
                  "documentation": "@dev    Verifies that the address was actually signed by the\n         allowlistOwner.",
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 120,
                            "name": "hash",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 83,
                            "src": "3491:4:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          {
                            "id": 121,
                            "name": "sig",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 85,
                            "src": "3497:3:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            },
                            {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            }
                          ],
                          "id": 119,
                          "name": "verifySignature",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1177,
                          "src": "3475:15:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_bytes_memory_ptr_$returns$_t_bool_$",
                            "typeString": "function (bytes32,bytes memory) returns (bool)"
                          }
                        },
                        "id": 122,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3475:26:7",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "48617368206e6f74207369676e6564206279206f776e65722e",
                        "id": 123,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3503:27:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_8bd072bd5dbada9e898e97294da7d3166e68f47eb033c9c4ff00346bc371e6be",
                          "typeString": "literal_string \"Hash not signed by owner.\""
                        },
                        "value": "Hash not signed by owner."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_8bd072bd5dbada9e898e97294da7d3166e68f47eb033c9c4ff00346bc371e6be",
                          "typeString": "literal_string \"Hash not signed by owner.\""
                        }
                      ],
                      "id": 118,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "3467:7:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 124,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3467:64:7",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 125,
                  "nodeType": "ExpressionStatement",
                  "src": "3467:64:7"
                },
                {
                  "documentation": "@dev    Mint the tokens to address.\n         [Ref Soulbound.sol].",
                  "expression": {
                    "arguments": [
                      {
                        "id": 127,
                        "name": "addr",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 81,
                        "src": "3636:4:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 128,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 87,
                        "src": "3642:7:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 129,
                        "name": "tokenURI",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 89,
                        "src": "3651:8:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      ],
                      "id": 126,
                      "name": "issue",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1461,
                      "src": "3630:5:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_string_memory_ptr_$returns$_t_bool_$",
                        "typeString": "function (address,uint256,string memory) returns (bool)"
                      }
                    },
                    "id": 130,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3630:30:7",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 131,
                  "nodeType": "ExpressionStatement",
                  "src": "3630:30:7"
                },
                {
                  "documentation": "@dev Emit the IssueWithSignature event.",
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 133,
                        "name": "addr",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 81,
                        "src": "3746:4:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 134,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 87,
                        "src": "3752:7:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 132,
                      "name": "IssueWithSignature",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 24,
                      "src": "3727:18:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 135,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3727:33:7",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 136,
                  "nodeType": "EmitStatement",
                  "src": "3722:38:7"
                }
              ]
            },
            "documentation": {
              "id": 79,
              "nodeType": "StructuredDocumentation",
              "src": "2149:615:7",
              "text": " @dev  Mints a particular quantity of tokens to `to`, \n       on the condition that the address has been \n       signed by the allowlistOwner off-chain.\n       This will emit the {MintSoulboundToken} event\n       from the Soulbound.sol.\n @notice Callable by anyone.\n @param addr       Address to mint tokens to.\n @param hash       Hashed message by the allowlistOwner.\n @param sig        Signature, signed by the allowlistOwner.\n @param tokenId    Id of the tokens to mint to the `addr`.\n @param tokenURI   URI of the token to be minted."
            },
            "functionSelector": "c9e4c54d",
            "id": 138,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "issueWithSignature",
            "nameLocation": "2778:18:7",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 90,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 81,
                  "mutability": "mutable",
                  "name": "addr",
                  "nameLocation": "2814:4:7",
                  "nodeType": "VariableDeclaration",
                  "scope": 138,
                  "src": "2806:12:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 80,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2806:7:7",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 83,
                  "mutability": "mutable",
                  "name": "hash",
                  "nameLocation": "2836:4:7",
                  "nodeType": "VariableDeclaration",
                  "scope": 138,
                  "src": "2828:12:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 82,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "2828:7:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 85,
                  "mutability": "mutable",
                  "name": "sig",
                  "nameLocation": "2863:3:7",
                  "nodeType": "VariableDeclaration",
                  "scope": 138,
                  "src": "2850:16:7",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 84,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "2850:5:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 87,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nameLocation": "2884:7:7",
                  "nodeType": "VariableDeclaration",
                  "scope": 138,
                  "src": "2876:15:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 86,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2876:7:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 89,
                  "mutability": "mutable",
                  "name": "tokenURI",
                  "nameLocation": "2915:8:7",
                  "nodeType": "VariableDeclaration",
                  "scope": 138,
                  "src": "2901:22:7",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 88,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "2901:6:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2796:133:7"
            },
            "returnParameters": {
              "id": 91,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2941:0:7"
            },
            "scope": 324,
            "src": "2769:998:7",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 190,
              "nodeType": "Block",
              "src": "4348:812:7",
              "statements": [
                {
                  "documentation": "@dev Require that the token exists.",
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 150,
                            "name": "tokenId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 145,
                            "src": "4422:7:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "id": 149,
                          "name": "_exists",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2188,
                          "src": "4414:7:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_bool_$",
                            "typeString": "function (uint256) view returns (bool)"
                          }
                        },
                        "id": 151,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4414:16:7",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "5265766f6b65206f6620696e6578697374656e7420746f6b656e2e",
                        "id": 152,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4432:29:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_a3bfeacbcc0a1d035b2bef35f193769daeb6b660d60698cecf4c107d00719373",
                          "typeString": "literal_string \"Revoke of inexistent token.\""
                        },
                        "value": "Revoke of inexistent token."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_a3bfeacbcc0a1d035b2bef35f193769daeb6b660d60698cecf4c107d00719373",
                          "typeString": "literal_string \"Revoke of inexistent token.\""
                        }
                      ],
                      "id": 148,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "4406:7:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 153,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4406:56:7",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 154,
                  "nodeType": "ExpressionStatement",
                  "src": "4406:56:7"
                },
                {
                  "documentation": "@dev    Require that the hash is actually 32 [64 characters]\n         in length.",
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        },
                        "id": 159,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 156,
                            "name": "hash",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 141,
                            "src": "4584:4:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          "id": 157,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "length",
                          "nodeType": "MemberAccess",
                          "src": "4584:11:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint8",
                            "typeString": "uint8"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "hexValue": "3332",
                          "id": 158,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "4599:2:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_32_by_1",
                            "typeString": "int_const 32"
                          },
                          "value": "32"
                        },
                        "src": "4584:17:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "496e76616c696420686173682e",
                        "id": 160,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4603:15:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_2a7fbb30cbfd2c1e85c73eb36daa5eb95b6ba858ce622fc97f840c43ac489678",
                          "typeString": "literal_string \"Invalid hash.\""
                        },
                        "value": "Invalid hash."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_2a7fbb30cbfd2c1e85c73eb36daa5eb95b6ba858ce622fc97f840c43ac489678",
                          "typeString": "literal_string \"Invalid hash.\""
                        }
                      ],
                      "id": 155,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "4576:7:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 161,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4576:43:7",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 162,
                  "nodeType": "ExpressionStatement",
                  "src": "4576:43:7"
                },
                {
                  "documentation": "@dev Require the length of the signature is 65.",
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 167,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 164,
                            "name": "sig",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 143,
                            "src": "4697:3:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            }
                          },
                          "id": 165,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "length",
                          "nodeType": "MemberAccess",
                          "src": "4697:10:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "hexValue": "3635",
                          "id": 166,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "4711:2:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_65_by_1",
                            "typeString": "int_const 65"
                          },
                          "value": "65"
                        },
                        "src": "4697:16:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "496e76616c6964207369676e6174757265206c656e677468",
                        "id": 168,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4715:26:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_d0e57016dfcfa997388e3f3d9ad75ea4d5a67a0f23b0489f2cdbaecf3ef0f78c",
                          "typeString": "literal_string \"Invalid signature length\""
                        },
                        "value": "Invalid signature length"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_d0e57016dfcfa997388e3f3d9ad75ea4d5a67a0f23b0489f2cdbaecf3ef0f78c",
                          "typeString": "literal_string \"Invalid signature length\""
                        }
                      ],
                      "id": 163,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "4689:7:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 169,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4689:53:7",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 170,
                  "nodeType": "ExpressionStatement",
                  "src": "4689:53:7"
                },
                {
                  "documentation": "@dev    Verifies that the address was actually signed by the\n         allowlistOwner.",
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 173,
                            "name": "hash",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 141,
                            "src": "4885:4:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          {
                            "id": 174,
                            "name": "sig",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 143,
                            "src": "4891:3:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            },
                            {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            }
                          ],
                          "id": 172,
                          "name": "verifySignature",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1177,
                          "src": "4869:15:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_bytes_memory_ptr_$returns$_t_bool_$",
                            "typeString": "function (bytes32,bytes memory) returns (bool)"
                          }
                        },
                        "id": 175,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4869:26:7",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "48617368206e6f74207369676e6564206279206f776e65722e",
                        "id": 176,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4897:27:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_8bd072bd5dbada9e898e97294da7d3166e68f47eb033c9c4ff00346bc371e6be",
                          "typeString": "literal_string \"Hash not signed by owner.\""
                        },
                        "value": "Hash not signed by owner."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_8bd072bd5dbada9e898e97294da7d3166e68f47eb033c9c4ff00346bc371e6be",
                          "typeString": "literal_string \"Hash not signed by owner.\""
                        }
                      ],
                      "id": 171,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "4861:7:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 177,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4861:64:7",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 178,
                  "nodeType": "ExpressionStatement",
                  "src": "4861:64:7"
                },
                {
                  "documentation": "@dev    Mint the tokens to address.\n         [Ref Soulbound.sol].",
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 181,
                            "name": "tokenId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 145,
                            "src": "5039:7:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "id": 180,
                          "name": "ownerOf",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2171,
                          "src": "5031:7:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$",
                            "typeString": "function (uint256) view returns (address)"
                          }
                        },
                        "id": 182,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "5031:16:7",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 183,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 145,
                        "src": "5049:7:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 179,
                      "name": "revoke",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1494,
                      "src": "5024:6:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,uint256) returns (bool)"
                      }
                    },
                    "id": 184,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5024:33:7",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 185,
                  "nodeType": "ExpressionStatement",
                  "src": "5024:33:7"
                },
                {
                  "documentation": "@dev Emit the RevokeWithSignature event.",
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 187,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 145,
                        "src": "5145:7:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 186,
                      "name": "RevokeWithSignature",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 29,
                      "src": "5125:19:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 188,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5125:28:7",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 189,
                  "nodeType": "EmitStatement",
                  "src": "5120:33:7"
                }
              ]
            },
            "documentation": {
              "id": 139,
              "nodeType": "StructuredDocumentation",
              "src": "3773:451:7",
              "text": " @dev  Revokes the ownership of `tokenId` from the owner.\n       The token must exist and the signature must be signed the\n       allowlistOwner.\n       This emits the {RevokeWithSignature} event.\n @notice Callable by anyone.\n @param hash       Hashed message by the allowlistOwner.\n @param sig        Signature, signed by the allowlistOwner.\n @param tokenId    Id of the token to revoke."
            },
            "functionSelector": "08c92e57",
            "id": 191,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "revokeWithSignature",
            "nameLocation": "4238:19:7",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 146,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 141,
                  "mutability": "mutable",
                  "name": "hash",
                  "nameLocation": "4275:4:7",
                  "nodeType": "VariableDeclaration",
                  "scope": 191,
                  "src": "4267:12:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 140,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "4267:7:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 143,
                  "mutability": "mutable",
                  "name": "sig",
                  "nameLocation": "4302:3:7",
                  "nodeType": "VariableDeclaration",
                  "scope": 191,
                  "src": "4289:16:7",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 142,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "4289:5:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 145,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nameLocation": "4323:7:7",
                  "nodeType": "VariableDeclaration",
                  "scope": 191,
                  "src": "4315:15:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 144,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4315:7:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4257:79:7"
            },
            "returnParameters": {
              "id": 147,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4348:0:7"
            },
            "scope": 324,
            "src": "4229:931:7",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 208,
              "nodeType": "Block",
              "src": "5614:68:7",
              "statements": [
                {
                  "documentation": "@dev Set baseURI.",
                  "expression": {
                    "arguments": [
                      {
                        "id": 205,
                        "name": "_baseURI",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 196,
                        "src": "5666:8:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      ],
                      "id": 204,
                      "name": "_setBaseURI",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1654,
                      "src": "5654:11:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (string memory)"
                      }
                    },
                    "id": 206,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5654:21:7",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 207,
                  "nodeType": "ExpressionStatement",
                  "src": "5654:21:7"
                }
              ]
            },
            "documentation": {
              "id": 192,
              "nodeType": "StructuredDocumentation",
              "src": "5166:320:7",
              "text": " @dev  Allows the `caller` (allowlistOwner) to set the baseURI.\n       This is really important when the caller wants to mint\n       Multiple tokens with the same base URI.\n @notice   Callable by the deployer of this contract [DaccredDeployer]\n           and the allowlistOwner."
            },
            "functionSelector": "88433651",
            "id": 209,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 199,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 198,
                  "name": "onlyOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 1319,
                  "src": "5568:9:7"
                },
                "nodeType": "ModifierInvocation",
                "src": "5568:9:7"
              },
              {
                "arguments": [
                  {
                    "id": 201,
                    "name": "caller",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 194,
                    "src": "5602:6:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  }
                ],
                "id": 202,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 200,
                  "name": "onlyAllowlistOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 44,
                  "src": "5583:18:7"
                },
                "nodeType": "ModifierInvocation",
                "src": "5583:26:7"
              }
            ],
            "name": "setBaseURI",
            "nameLocation": "5500:10:7",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 197,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 194,
                  "mutability": "mutable",
                  "name": "caller",
                  "nameLocation": "5519:6:7",
                  "nodeType": "VariableDeclaration",
                  "scope": 209,
                  "src": "5511:14:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 193,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "5511:7:7",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 196,
                  "mutability": "mutable",
                  "name": "_baseURI",
                  "nameLocation": "5541:8:7",
                  "nodeType": "VariableDeclaration",
                  "scope": 209,
                  "src": "5527:22:7",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 195,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "5527:6:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5510:40:7"
            },
            "returnParameters": {
              "id": 203,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5614:0:7"
            },
            "scope": 324,
            "src": "5491:191:7",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 243,
              "nodeType": "Block",
              "src": "6178:299:7",
              "statements": [
                {
                  "documentation": "@dev Require baseURI length is not currently 0.",
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 225,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "arguments": [
                              {
                                "arguments": [],
                                "expression": {
                                  "argumentTypes": [],
                                  "id": 220,
                                  "name": "_getBaseURI",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1676,
                                  "src": "6262:11:7",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_internal_view$__$returns$_t_string_memory_ptr_$",
                                    "typeString": "function () view returns (string memory)"
                                  }
                                },
                                "id": 221,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "6262:13:7",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_string_memory_ptr",
                                  "typeString": "string memory"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_string_memory_ptr",
                                  "typeString": "string memory"
                                }
                              ],
                              "id": 219,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "6256:5:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
                                "typeString": "type(bytes storage pointer)"
                              },
                              "typeName": {
                                "id": 218,
                                "name": "bytes",
                                "nodeType": "ElementaryTypeName",
                                "src": "6256:5:7",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 222,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "6256:20:7",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            }
                          },
                          "id": 223,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "length",
                          "nodeType": "MemberAccess",
                          "src": "6256:27:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 224,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "6287:1:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "6256:32:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "456d7074792062617365555249",
                        "id": 226,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "6290:15:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_3247d8bc89d36854791dbafe948ddc082d8cf6636c64b41fbbdf5761acfb1e22",
                          "typeString": "literal_string \"Empty baseURI\""
                        },
                        "value": "Empty baseURI"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_3247d8bc89d36854791dbafe948ddc082d8cf6636c64b41fbbdf5761acfb1e22",
                          "typeString": "literal_string \"Empty baseURI\""
                        }
                      ],
                      "id": 217,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "6248:7:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 227,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6248:58:7",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 228,
                  "nodeType": "ExpressionStatement",
                  "src": "6248:58:7"
                },
                {
                  "documentation": "@dev Return a packed tokenURI string.",
                  "expression": {
                    "id": 241,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 229,
                      "name": "_tokenURI",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 215,
                      "src": "6366:9:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string memory"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "arguments": [
                            {
                              "arguments": [],
                              "expression": {
                                "argumentTypes": [],
                                "id": 234,
                                "name": "_getBaseURI",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1676,
                                "src": "6415:11:7",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_view$__$returns$_t_string_memory_ptr_$",
                                  "typeString": "function () view returns (string memory)"
                                }
                              },
                              "id": 235,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "6415:13:7",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_string_memory_ptr",
                                "typeString": "string memory"
                              }
                            },
                            {
                              "arguments": [
                                {
                                  "id": 237,
                                  "name": "tokenId",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 212,
                                  "src": "6451:7:7",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                ],
                                "id": 236,
                                "name": "toString",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 323,
                                "src": "6442:8:7",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_string_memory_ptr_$",
                                  "typeString": "function (uint256) pure returns (string memory)"
                                }
                              },
                              "id": 238,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "6442:17:7",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_string_memory_ptr",
                                "typeString": "string memory"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_string_memory_ptr",
                                "typeString": "string memory"
                              },
                              {
                                "typeIdentifier": "t_string_memory_ptr",
                                "typeString": "string memory"
                              }
                            ],
                            "expression": {
                              "id": 232,
                              "name": "abi",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -1,
                              "src": "6385:3:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_abi",
                                "typeString": "abi"
                              }
                            },
                            "id": 233,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "memberName": "encodePacked",
                            "nodeType": "MemberAccess",
                            "src": "6385:16:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                              "typeString": "function () pure returns (bytes memory)"
                            }
                          },
                          "id": 239,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "6385:84:7",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_memory_ptr",
                            "typeString": "bytes memory"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_bytes_memory_ptr",
                            "typeString": "bytes memory"
                          }
                        ],
                        "id": 231,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "6378:6:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_string_storage_ptr_$",
                          "typeString": "type(string storage pointer)"
                        },
                        "typeName": {
                          "id": 230,
                          "name": "string",
                          "nodeType": "ElementaryTypeName",
                          "src": "6378:6:7",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 240,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "6378:92:7",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string memory"
                      }
                    },
                    "src": "6366:104:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory_ptr",
                      "typeString": "string memory"
                    }
                  },
                  "id": 242,
                  "nodeType": "ExpressionStatement",
                  "src": "6366:104:7"
                }
              ]
            },
            "documentation": {
              "id": 210,
              "nodeType": "StructuredDocumentation",
              "src": "5688:379:7",
              "text": " @dev  Using the `tokenId` passed, it generates a `stringified` tokenURI,\n       packing the baseURI and the current tokenId.\n       Makes use of OpenZeppelin's uint to string function.\n @notice Callable by anyone.\n @param tokenId ID of token whose tokenURI is desired.\n @return _tokenURI TokenURI of the passed tokenId."
            },
            "functionSelector": "210fa96b",
            "id": 244,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "generateTokenURI",
            "nameLocation": "6081:16:7",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 213,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 212,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nameLocation": "6106:7:7",
                  "nodeType": "VariableDeclaration",
                  "scope": 244,
                  "src": "6098:15:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 211,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "6098:7:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6097:17:7"
            },
            "returnParameters": {
              "id": 216,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 215,
                  "mutability": "mutable",
                  "name": "_tokenURI",
                  "nameLocation": "6163:9:7",
                  "nodeType": "VariableDeclaration",
                  "scope": 244,
                  "src": "6149:23:7",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 214,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "6149:6:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6148:25:7"
            },
            "scope": 324,
            "src": "6072:405:7",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 322,
              "nodeType": "Block",
              "src": "6684:632:7",
              "statements": [
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 254,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 252,
                      "name": "value",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 247,
                      "src": "6886:5:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "hexValue": "30",
                      "id": 253,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "6895:1:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "6886:10:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 258,
                  "nodeType": "IfStatement",
                  "src": "6882:51:7",
                  "trueBody": {
                    "id": 257,
                    "nodeType": "Block",
                    "src": "6898:35:7",
                    "statements": [
                      {
                        "expression": {
                          "hexValue": "30",
                          "id": 255,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "string",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "6919:3:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_stringliteral_044852b2a670ade5407e78fb2863c51de9fcb96542a07186fe3aeda6bb8a116d",
                            "typeString": "literal_string \"0\""
                          },
                          "value": "0"
                        },
                        "functionReturnParameters": 251,
                        "id": 256,
                        "nodeType": "Return",
                        "src": "6912:10:7"
                      }
                    ]
                  }
                },
                {
                  "assignments": [
                    260
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 260,
                      "mutability": "mutable",
                      "name": "temp",
                      "nameLocation": "6950:4:7",
                      "nodeType": "VariableDeclaration",
                      "scope": 322,
                      "src": "6942:12:7",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 259,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "6942:7:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 262,
                  "initialValue": {
                    "id": 261,
                    "name": "value",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 247,
                    "src": "6957:5:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "6942:20:7"
                },
                {
                  "assignments": [
                    264
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 264,
                      "mutability": "mutable",
                      "name": "digits",
                      "nameLocation": "6980:6:7",
                      "nodeType": "VariableDeclaration",
                      "scope": 322,
                      "src": "6972:14:7",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 263,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "6972:7:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 265,
                  "nodeType": "VariableDeclarationStatement",
                  "src": "6972:14:7"
                },
                {
                  "body": {
                    "id": 276,
                    "nodeType": "Block",
                    "src": "7014:57:7",
                    "statements": [
                      {
                        "expression": {
                          "id": 270,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "UnaryOperation",
                          "operator": "++",
                          "prefix": false,
                          "src": "7028:8:7",
                          "subExpression": {
                            "id": 269,
                            "name": "digits",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 264,
                            "src": "7028:6:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 271,
                        "nodeType": "ExpressionStatement",
                        "src": "7028:8:7"
                      },
                      {
                        "expression": {
                          "id": 274,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 272,
                            "name": "temp",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 260,
                            "src": "7050:4:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "/=",
                          "rightHandSide": {
                            "hexValue": "3130",
                            "id": 273,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "7058:2:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_10_by_1",
                              "typeString": "int_const 10"
                            },
                            "value": "10"
                          },
                          "src": "7050:10:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 275,
                        "nodeType": "ExpressionStatement",
                        "src": "7050:10:7"
                      }
                    ]
                  },
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 268,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 266,
                      "name": "temp",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 260,
                      "src": "7003:4:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "!=",
                    "rightExpression": {
                      "hexValue": "30",
                      "id": 267,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "7011:1:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "7003:9:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 277,
                  "nodeType": "WhileStatement",
                  "src": "6996:75:7"
                },
                {
                  "assignments": [
                    279
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 279,
                      "mutability": "mutable",
                      "name": "buffer",
                      "nameLocation": "7093:6:7",
                      "nodeType": "VariableDeclaration",
                      "scope": 322,
                      "src": "7080:19:7",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes_memory_ptr",
                        "typeString": "bytes"
                      },
                      "typeName": {
                        "id": 278,
                        "name": "bytes",
                        "nodeType": "ElementaryTypeName",
                        "src": "7080:5:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_storage_ptr",
                          "typeString": "bytes"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 284,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 282,
                        "name": "digits",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 264,
                        "src": "7112:6:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 281,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "NewExpression",
                      "src": "7102:9:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_bytes_memory_ptr_$",
                        "typeString": "function (uint256) pure returns (bytes memory)"
                      },
                      "typeName": {
                        "id": 280,
                        "name": "bytes",
                        "nodeType": "ElementaryTypeName",
                        "src": "7106:5:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_storage_ptr",
                          "typeString": "bytes"
                        }
                      }
                    },
                    "id": 283,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7102:17:7",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_memory_ptr",
                      "typeString": "bytes memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "7080:39:7"
                },
                {
                  "body": {
                    "id": 315,
                    "nodeType": "Block",
                    "src": "7148:131:7",
                    "statements": [
                      {
                        "expression": {
                          "id": 290,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 288,
                            "name": "digits",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 264,
                            "src": "7162:6:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "-=",
                          "rightHandSide": {
                            "hexValue": "31",
                            "id": 289,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "7172:1:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_1_by_1",
                              "typeString": "int_const 1"
                            },
                            "value": "1"
                          },
                          "src": "7162:11:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 291,
                        "nodeType": "ExpressionStatement",
                        "src": "7162:11:7"
                      },
                      {
                        "expression": {
                          "id": 309,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "baseExpression": {
                              "id": 292,
                              "name": "buffer",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 279,
                              "src": "7187:6:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            },
                            "id": 294,
                            "indexExpression": {
                              "id": 293,
                              "name": "digits",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 264,
                              "src": "7194:6:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "7187:14:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes1",
                              "typeString": "bytes1"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "commonType": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    },
                                    "id": 306,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "leftExpression": {
                                      "hexValue": "3438",
                                      "id": 299,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "kind": "number",
                                      "lValueRequested": false,
                                      "nodeType": "Literal",
                                      "src": "7217:2:7",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_rational_48_by_1",
                                        "typeString": "int_const 48"
                                      },
                                      "value": "48"
                                    },
                                    "nodeType": "BinaryOperation",
                                    "operator": "+",
                                    "rightExpression": {
                                      "arguments": [
                                        {
                                          "commonType": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          },
                                          "id": 304,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "leftExpression": {
                                            "id": 302,
                                            "name": "value",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 247,
                                            "src": "7230:5:7",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_uint256",
                                              "typeString": "uint256"
                                            }
                                          },
                                          "nodeType": "BinaryOperation",
                                          "operator": "%",
                                          "rightExpression": {
                                            "hexValue": "3130",
                                            "id": 303,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": true,
                                            "kind": "number",
                                            "lValueRequested": false,
                                            "nodeType": "Literal",
                                            "src": "7238:2:7",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_rational_10_by_1",
                                              "typeString": "int_const 10"
                                            },
                                            "value": "10"
                                          },
                                          "src": "7230:10:7",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        }
                                      ],
                                      "expression": {
                                        "argumentTypes": [
                                          {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        ],
                                        "id": 301,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "lValueRequested": false,
                                        "nodeType": "ElementaryTypeNameExpression",
                                        "src": "7222:7:7",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_type$_t_uint256_$",
                                          "typeString": "type(uint256)"
                                        },
                                        "typeName": {
                                          "id": 300,
                                          "name": "uint256",
                                          "nodeType": "ElementaryTypeName",
                                          "src": "7222:7:7",
                                          "typeDescriptions": {}
                                        }
                                      },
                                      "id": 305,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "kind": "typeConversion",
                                      "lValueRequested": false,
                                      "names": [],
                                      "nodeType": "FunctionCall",
                                      "src": "7222:19:7",
                                      "tryCall": false,
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "src": "7217:24:7",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  ],
                                  "id": 298,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "nodeType": "ElementaryTypeNameExpression",
                                  "src": "7211:5:7",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_uint8_$",
                                    "typeString": "type(uint8)"
                                  },
                                  "typeName": {
                                    "id": 297,
                                    "name": "uint8",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "7211:5:7",
                                    "typeDescriptions": {}
                                  }
                                },
                                "id": 307,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "typeConversion",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "7211:31:7",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint8",
                                  "typeString": "uint8"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_uint8",
                                  "typeString": "uint8"
                                }
                              ],
                              "id": 296,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "7204:6:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_bytes1_$",
                                "typeString": "type(bytes1)"
                              },
                              "typeName": {
                                "id": 295,
                                "name": "bytes1",
                                "nodeType": "ElementaryTypeName",
                                "src": "7204:6:7",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 308,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "7204:39:7",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes1",
                              "typeString": "bytes1"
                            }
                          },
                          "src": "7187:56:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes1",
                            "typeString": "bytes1"
                          }
                        },
                        "id": 310,
                        "nodeType": "ExpressionStatement",
                        "src": "7187:56:7"
                      },
                      {
                        "expression": {
                          "id": 313,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 311,
                            "name": "value",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 247,
                            "src": "7257:5:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "/=",
                          "rightHandSide": {
                            "hexValue": "3130",
                            "id": 312,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "7266:2:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_10_by_1",
                              "typeString": "int_const 10"
                            },
                            "value": "10"
                          },
                          "src": "7257:11:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 314,
                        "nodeType": "ExpressionStatement",
                        "src": "7257:11:7"
                      }
                    ]
                  },
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 287,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 285,
                      "name": "value",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 247,
                      "src": "7136:5:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "!=",
                    "rightExpression": {
                      "hexValue": "30",
                      "id": 286,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "7145:1:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "7136:10:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 316,
                  "nodeType": "WhileStatement",
                  "src": "7129:150:7"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 319,
                        "name": "buffer",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 279,
                        "src": "7302:6:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "id": 318,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "ElementaryTypeNameExpression",
                      "src": "7295:6:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_string_storage_ptr_$",
                        "typeString": "type(string storage pointer)"
                      },
                      "typeName": {
                        "id": 317,
                        "name": "string",
                        "nodeType": "ElementaryTypeName",
                        "src": "7295:6:7",
                        "typeDescriptions": {}
                      }
                    },
                    "id": 320,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7295:14:7",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory_ptr",
                      "typeString": "string memory"
                    }
                  },
                  "functionReturnParameters": 251,
                  "id": 321,
                  "nodeType": "Return",
                  "src": "7288:21:7"
                }
              ]
            },
            "documentation": {
              "id": 245,
              "nodeType": "StructuredDocumentation",
              "src": "6483:125:7",
              "text": " @dev Converts a `uint256` to its ASCII `string` decimal representation.\n      Copied from OpenZeppelin."
            },
            "id": 323,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "toString",
            "nameLocation": "6622:8:7",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 248,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 247,
                  "mutability": "mutable",
                  "name": "value",
                  "nameLocation": "6639:5:7",
                  "nodeType": "VariableDeclaration",
                  "scope": 323,
                  "src": "6631:13:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 246,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "6631:7:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6630:15:7"
            },
            "returnParameters": {
              "id": 251,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 250,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 323,
                  "src": "6669:13:7",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 249,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "6669:6:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6668:15:7"
            },
            "scope": 324,
            "src": "6613:703:7",
            "stateMutability": "pure",
            "virtual": false,
            "visibility": "internal"
          }
        ],
        "scope": 325,
        "src": "820:6499:7",
        "usedErrors": [
          1790
        ]
      }
    ],
    "src": "438:6882:7"
  },
  "bytecode": "60806040523480156200001157600080fd5b5060405162001cc338038062001cc3833981016040819052620000349162000292565b81848481818160009080519060200190620000519291906200011f565b508051620000679060019060208401906200011f565b505050620000846200007e620000c960201b60201c565b620000cd565b5050600880546001600160a01b0319166001600160a01b039290921691909117905580620000b957620f4240600955620000bf565b60098190555b5050505062000362565b3390565b600580546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b8280546200012d9062000325565b90600052602060002090601f0160209004810192826200015157600085556200019c565b82601f106200016c57805160ff19168380011785556200019c565b828001600101855582156200019c579182015b828111156200019c5782518255916020019190600101906200017f565b50620001aa929150620001ae565b5090565b5b80821115620001aa5760008155600101620001af565b634e487b7160e01b600052604160045260246000fd5b600082601f830112620001ed57600080fd5b81516001600160401b03808211156200020a576200020a620001c5565b604051601f8301601f19908116603f01168101908282118183101715620002355762000235620001c5565b816040528381526020925086838588010111156200025257600080fd5b600091505b8382101562000276578582018301518183018401529082019062000257565b83821115620002885760008385830101525b9695505050505050565b60008060008060808587031215620002a957600080fd5b84516001600160401b0380821115620002c157600080fd5b620002cf88838901620001db565b95506020870151915080821115620002e657600080fd5b50620002f587828801620001db565b604087015190945090506001600160a01b03811681146200031557600080fd5b6060959095015193969295505050565b600181811c908216806200033a57607f821691505b602082108114156200035c57634e487b7160e01b600052602260045260246000fd5b50919050565b61195180620003726000396000f3fe608060405234801561001057600080fd5b506004361061012c5760003560e01c806388433651116100ad578063c9e4c54d11610071578063c9e4c54d1461028e578063daca6f78146102a1578063e92b0842146102b4578063f2fde38b146102c7578063fb8f198d146102da57600080fd5b806388433651146102475780638da5cb5b1461025a57806395d89b411461026b578063c87b56dd14610273578063c9dd94c71461028657600080fd5b80635899e7b2116100f45780635899e7b2146101a95780636352211e146101e25780636e0a87461461020d57806370a082311461021e578063715018a61461023f57600080fd5b806301ffc9a71461013157806306fdde031461015957806308c92e571461016e578063210fa96b1461018357806342966c6814610196575b600080fd5b61014461013f3660046114a5565b6102ed565b60405190151581526020015b60405180910390f35b61016161033f565b60405161015091906114ff565b61018161017c3660046115d5565b6103d1565b005b610161610191366004611625565b61050c565b6101816101a4366004611625565b61058b565b6101446101b736600461165a565b6001600160a01b03919091166000908152600760209081526040808320938352929052205460ff1690565b6101f56101f0366004611625565b610600565b6040516001600160a01b039091168152602001610150565b6008546001600160a01b03166101f5565b61023161022c366004611684565b610665565b604051908152602001610150565b6101816106ee565b61018161025536600461169f565b610702565b6005546001600160a01b03166101f5565b610161610782565b610161610281366004611625565b610791565b610161610886565b61018161029c3660046116ed565b6108e2565b6101446102af366004611775565b610a17565b6101446102c23660046117a6565b610a2a565b6101816102d5366004611684565b610abe565b6101f56102e836600461165a565b610b34565b60006001600160e01b03198216635b5e139f60e01b148061031e57506001600160e01b03198216635164cf4760e01b145b8061033957506301ffc9a760e01b6001600160e01b03198316145b92915050565b60606000805461034e906117fd565b80601f016020809104026020016040519081016040528092919081815260200182805461037a906117fd565b80156103c75780601f1061039c576101008083540402835291602001916103c7565b820191906000526020600020905b8154815290600101906020018083116103aa57829003601f168201915b5050505050905090565b6103da81610c48565b61042b5760405162461bcd60e51b815260206004820152601b60248201527f5265766f6b65206f6620696e6578697374656e7420746f6b656e2e000000000060448201526064015b60405180910390fd5b81516041146104775760405162461bcd60e51b8152602060048201526018602482015277092dcecc2d8d2c840e6d2cedcc2e8eae4ca40d8cadccee8d60431b6044820152606401610422565b6104818383610a17565b6104c95760405162461bcd60e51b81526020600482015260196024820152782430b9b4103737ba1039b4b3b732b210313c9037bbb732b91760391b6044820152606401610422565b6104db6104d582610600565b82610c65565b5060405181907ff947bf2266afede98f27ad2312db8b2a17921852307f979b6f14a2b41fa774bc90600090a2505050565b6060610516610886565b516105535760405162461bcd60e51b815260206004820152600d60248201526c456d707479206261736555524960981b6044820152606401610422565b61055b610886565b61056483610d2d565b604051602001610575929190611838565b6040516020818303038152906040529050919050565b61059481610600565b6001600160a01b0316336001600160a01b0316146105f45760405162461bcd60e51b815260206004820152601a60248201527f6275726e3a2073656e646572206d757374206265206f776e65720000000000006044820152606401610422565b6105fd81610e33565b50565b6000818152600260205260408120546001600160a01b0316806103395760405162461bcd60e51b815260206004820152601c60248201527f6f776e65724f663a20746f6b656e20646f65736e2774206578697374000000006044820152606401610422565b60006001600160a01b0382166106d25760405162461bcd60e51b815260206004820152602c60248201527f62616c616e63654f663a2061646472657373207a65726f206973206e6f74206160448201526b103b30b634b21037bbb732b960a11b6064820152608401610422565b506001600160a01b031660009081526004602052604090205490565b6106f6610eda565b6107006000610f34565b565b61070a610eda565b8161071d6008546001600160a01b031690565b6001600160a01b0316816001600160a01b0316146107745760405162461bcd60e51b81526020600482015260146024820152734e6f7420416c6c6f776c697374204f776e65722160601b6044820152606401610422565b61077d82610f86565b505050565b60606001805461034e906117fd565b606061079c82610c48565b6107e85760405162461bcd60e51b815260206004820152601d60248201527f746f6b656e5552493a20746f6b656e20646f65736e27742065786973740000006044820152606401610422565b60008281526003602052604090208054610801906117fd565b80601f016020809104026020016040519081016040528092919081815260200182805461082d906117fd565b801561087a5780601f1061084f5761010080835404028352916020019161087a565b820191906000526020600020905b81548152906001019060200180831161085d57829003601f168201915b50505050509050919050565b606060068054610895906117fd565b151590506108d55760405162461bcd60e51b815260206004820152600d60248201526c456d707479206261736555524960981b6044820152606401610422565b6006805461034e906117fd565b6001600160a01b0385166109305760405162461bcd60e51b815260206004820152601560248201527426b4b73a103a37903d32b9379030b2323932b9b99760591b6044820152606401610422565b825160411461097c5760405162461bcd60e51b8152602060048201526018602482015277092dcecc2d8d2c840e6d2cedcc2e8eae4ca40d8cadccee8d60431b6044820152606401610422565b6109868484610a17565b6109ce5760405162461bcd60e51b81526020600482015260196024820152782430b9b4103737ba1039b4b3b732b210313c9037bbb732b91760391b6044820152606401610422565b6109d9858383610fdc565b5060405182906001600160a01b038716907f79af0e59b31823dd289ceebabc4d63d25f35926b8548e3a084a500c9d4e1855690600090a35050505050565b6000610a238383610ff3565b9392505050565b602081810151604080840151606080860151835160008082528188018087528a905291821a81860181905292810186905260808101849052935190959293919260019260a080820193601f1981019281900390910190855afa158015610a94573d6000803e3d6000fd5b505050602060405103516001600160a01b0316876001600160a01b03161493505050509392505050565b610ac6610eda565b6001600160a01b038116610b2b5760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b6064820152608401610422565b6105fd81610f34565b60006001600160a01b038316610b8c5760405162461bcd60e51b815260206004820152601760248201527f517565727920666f72207a65726f20616464726573732e0000000000000000006044820152606401610422565b610b9582610c48565b610bd75760405162461bcd60e51b81526020600482015260136024820152722737b716b2bc34b9ba32b73a103a37b5b2b71760691b6044820152606401610422565b826001600160a01b0316610bea83610600565b6001600160a01b031614610c405760405162461bcd60e51b815260206004820152601a60248201527f546f6b656e206e6f74206f776e656420627920616464726573730000000000006044820152606401610422565b503092915050565b6000908152600260205260409020546001600160a01b0316151590565b6000610c7082610c48565b610cb25760405162461bcd60e51b81526020600482015260136024820152722737b716b2bc34b9ba32b73a103a37b5b2b71760691b6044820152606401610422565b826001600160a01b0316610cc583610600565b6001600160a01b031614610d1b5760405162461bcd60e51b815260206004820152601a60248201527f546f6b656e206e6f74206f776e656420627920616464726573730000000000006044820152606401610422565b610d2482611176565b50600192915050565b606081610d515750506040805180820190915260018152600360fc1b602082015290565b8160005b8115610d7b5780610d658161187d565b9150610d749050600a836118ae565b9150610d55565b60008167ffffffffffffffff811115610d9657610d96611532565b6040519080825280601f01601f191660200182016040528015610dc0576020820181803683370190505b5090505b8415610e2b57610dd56001836118c2565b9150610de2600a866118d9565b610ded9060306118ed565b60f81b818381518110610e0257610e02611905565b60200101906001600160f81b031916908160001a905350610e24600a866118ae565b9450610dc4565b949350505050565b6000610e3e82610600565b6001600160a01b03811660009081526004602052604081208054929350600192909190610e6c9084906118c2565b9091555050600082815260026020908152604080832080546001600160a01b031916905560039091528120610ea0916113d2565b60405182906001600160a01b038316907fec9ab91322523c899ede7830ec9bfc992b5981cdcc27b91162fb23de5791117b90600090a35050565b6005546001600160a01b031633146107005760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401610422565b600580546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b8051610fc55760405162461bcd60e51b815260206004820152600e60248201526d092dcecc2d8d2c840d8cadccee8d60931b6044820152606401610422565b8051610fd890600690602084019061140c565b5050565b6000610fe984848461120c565b5060019392505050565b6000610ffd610eda565b6005546001600160a01b0316331461106b5760405162461bcd60e51b815260206004820152602b60248201527f4552433732313a3a2043616c6c20746f20636f6e7472616374206d616465206260448201526a3c903737b716b7bbb732b960a91b6064820152608401610422565b81516041146110bc5760405162461bcd60e51b815260206004820152601e60248201527f4572723a3a20496e76616c6964207369676e6174757265206c656e67746800006044820152606401610422565b602082810151604080850151606080870151835160008082529681018086528a905290861a938101849052908101849052608081018290529293909260019060a0016020604051602081039080840390855afa158015611120573d6000803e3d6000fd5b5050604051601f198101516008549093506001600160a01b038085169116149150819089907f7e4fe2a2a805a357593fdbdde58c02f6a53d8b4960744cd31a98697fc11c2e3690600090a3979650505050505050565b61117f81610c48565b6111cb5760405162461bcd60e51b815260206004820152601860248201527f4275726e206f6620696e6578697374656e7420746f6b656e00000000000000006044820152606401610422565b60006111d682610600565b90506111e182610e33565b6001600160a01b0316600090815260076020908152604080832093835292905220805460ff19169055565b6001600160a01b03831661125a5760405162461bcd60e51b815260206004820152601560248201527426b4b73a103a37903d32b9379030b2323932b9b99760591b6044820152606401610422565b805161129a5760405162461bcd60e51b815260206004820152600f60248201526e22b6b83a3c903a37b5b2b72aa9249760891b6044820152606401610422565b6112a58383836112d7565b50506001600160a01b03909116600090815260076020908152604080832093835292905220805460ff19166001179055565b60006112e283610c48565b156113265760405162461bcd60e51b81526020600482015260146024820152736d696e743a20746f6b656e49442065786973747360601b6044820152606401610422565b6001600160a01b038416600090815260046020526040812080546001929061134f9084906118ed565b9091555050600083815260026020908152604080832080546001600160a01b0319166001600160a01b0389161790556003825290912083516113939285019061140c565b5060405183906001600160a01b038616907fe9274a84b19e9428826de6bae8c48329354f8f0e73f771b97cae2d9dccd45a2790600090a3509092915050565b5080546113de906117fd565b6000825580601f106113ee575050565b601f0160209004906000526020600020908101906105fd9190611490565b828054611418906117fd565b90600052602060002090601f01602090048101928261143a5760008555611480565b82601f1061145357805160ff1916838001178555611480565b82800160010185558215611480579182015b82811115611480578251825591602001919060010190611465565b5061148c929150611490565b5090565b5b8082111561148c5760008155600101611491565b6000602082840312156114b757600080fd5b81356001600160e01b031981168114610a2357600080fd5b60005b838110156114ea5781810151838201526020016114d2565b838111156114f9576000848401525b50505050565b602081526000825180602084015261151e8160408501602087016114cf565b601f01601f19169190910160400192915050565b634e487b7160e01b600052604160045260246000fd5b600082601f83011261155957600080fd5b813567ffffffffffffffff8082111561157457611574611532565b604051601f8301601f19908116603f0116810190828211818310171561159c5761159c611532565b816040528381528660208588010111156115b557600080fd5b836020870160208301376000602085830101528094505050505092915050565b6000806000606084860312156115ea57600080fd5b83359250602084013567ffffffffffffffff81111561160857600080fd5b61161486828701611548565b925050604084013590509250925092565b60006020828403121561163757600080fd5b5035919050565b80356001600160a01b038116811461165557600080fd5b919050565b6000806040838503121561166d57600080fd5b6116768361163e565b946020939093013593505050565b60006020828403121561169657600080fd5b610a238261163e565b600080604083850312156116b257600080fd5b6116bb8361163e565b9150602083013567ffffffffffffffff8111156116d757600080fd5b6116e385828601611548565b9150509250929050565b600080600080600060a0868803121561170557600080fd5b61170e8661163e565b945060208601359350604086013567ffffffffffffffff8082111561173257600080fd5b61173e89838a01611548565b945060608801359350608088013591508082111561175b57600080fd5b5061176888828901611548565b9150509295509295909350565b6000806040838503121561178857600080fd5b82359150602083013567ffffffffffffffff8111156116d757600080fd5b6000806000606084860312156117bb57600080fd5b6117c48461163e565b925060208401359150604084013567ffffffffffffffff8111156117e757600080fd5b6117f386828701611548565b9150509250925092565b600181811c9082168061181157607f821691505b6020821081141561183257634e487b7160e01b600052602260045260246000fd5b50919050565b6000835161184a8184602088016114cf565b83519083019061185e8183602088016114cf565b01949350505050565b634e487b7160e01b600052601160045260246000fd5b600060001982141561189157611891611867565b5060010190565b634e487b7160e01b600052601260045260246000fd5b6000826118bd576118bd611898565b500490565b6000828210156118d4576118d4611867565b500390565b6000826118e8576118e8611898565b500690565b6000821982111561190057611900611867565b500190565b634e487b7160e01b600052603260045260246000fdfea264697066735822122077aebb811d55e85810d6e72777e62f036ab0e026b8ad82b6d96d4dfc6745c47664736f6c634300080c0033",
  "bytecodeSha1": "26df7c88f2c2761791837b3bbbf4d46ac9831cd3",
  "compiler": {
    "evm_version": "istanbul",
    "optimizer": {
      "enabled": true,
      "runs": 200
    },
    "version": "0.8.12+commit.f00d7308"
  },
  "contractName": "SoulboundCore",
  "coverageMap": {
    "branches": {
      "0": {},
      "2": {
        "ERC4973._mint": {
          "93": [
            5760,
            5777,
            true
          ]
        },
        "ERC4973.balanceOf": {
          "91": [
            5200,
            5219,
            true
          ]
        },
        "ERC4973.burn": {
          "89": [
            5015,
            5045,
            true
          ]
        },
        "ERC4973.ownerOf": {
          "90": [
            5430,
            5449,
            true
          ]
        },
        "ERC4973.tokenURI": {
          "92": [
            4855,
            4871,
            true
          ]
        }
      },
      "3": {
        "Allowlist._verifySignature": {
          "87": [
            3709,
            3732,
            true
          ],
          "88": [
            3880,
            3896,
            true
          ]
        }
      },
      "5": {
        "Ownable._checkOwner": {
          "95": [
            1725,
            1748,
            true
          ]
        },
        "Ownable.transferOwnership": {
          "94": [
            2489,
            2511,
            true
          ]
        }
      },
      "6": {
        "Soulbound._getBaseURI": {
          "96": [
            7484,
            7510,
            true
          ]
        },
        "Soulbound.burnSoulboundToken": {
          "102": [
            6500,
            6516,
            true
          ]
        },
        "Soulbound.issuerOf": {
          "97": [
            4436,
            4453,
            true
          ],
          "98": [
            4538,
            4555,
            true
          ],
          "99": [
            4648,
            4672,
            true
          ]
        },
        "Soulbound.mintSoulboundToken": {
          "103": [
            5757,
            5773,
            true
          ]
        },
        "Soulbound.revoke": {
          "100": [
            3468,
            3485,
            true
          ],
          "101": [
            3580,
            3606,
            true
          ]
        }
      },
      "7": {
        "Allowlist.getAllowlistOwner": {
          "82": [
            1658,
            1688,
            true
          ]
        },
        "SoulboundCore.issueWithSignature": {
          "83": [
            3024,
            3042,
            true
          ],
          "84": [
            3303,
            3319,
            true
          ],
          "85": [
            3475,
            3501,
            true
          ]
        },
        "SoulboundCore.revokeWithSignature": {
          "79": [
            4414,
            4430,
            true
          ],
          "80": [
            4697,
            4713,
            true
          ],
          "81": [
            4869,
            4895,
            true
          ]
        },
        "SoulboundCore.toString": {
          "86": [
            6886,
            6896,
            false
          ]
        }
      }
    },
    "statements": {
      "0": {},
      "2": {
        "ERC165.supportsInterface": {
          "4": [
            1678,
            1725
          ]
        },
        "ERC4973._burn": {
          "50": [
            6037,
            6058
          ],
          "51": [
            6064,
            6087
          ],
          "52": [
            6093,
            6119
          ],
          "53": [
            6126,
            6153
          ]
        },
        "ERC4973._exists": {
          "38": [
            5586,
            5623
          ]
        },
        "ERC4973._mint": {
          "73": [
            5752,
            5802
          ],
          "74": [
            5808,
            5826
          ],
          "75": [
            5832,
            5853
          ],
          "76": [
            5859,
            5884
          ],
          "77": [
            5890,
            5914
          ],
          "78": [
            5920,
            5934
          ]
        },
        "ERC4973.balanceOf": {
          "16": [
            5192,
            5268
          ],
          "17": [
            5274,
            5297
          ]
        },
        "ERC4973.burn": {
          "13": [
            5007,
            5076
          ],
          "14": [
            5082,
            5096
          ]
        },
        "ERC4973.name": {
          "5": [
            4632,
            4644
          ]
        },
        "ERC4973.ownerOf": {
          "15": [
            5422,
            5482
          ]
        },
        "ERC4973.supportsInterface": {
          "3": [
            4390,
            4548
          ]
        },
        "ERC4973.symbol": {
          "20": [
            4730,
            4744
          ]
        },
        "ERC4973.tokenURI": {
          "21": [
            4847,
            4905
          ],
          "22": [
            4911,
            4937
          ]
        }
      },
      "3": {
        "Allowlist._verifySignature": {
          "62": [
            3688,
            3802
          ],
          "63": [
            3872,
            3931
          ],
          "64": [
            4358,
            4408
          ],
          "65": [
            4454,
            4483
          ]
        },
        "Allowlist.getAllowlistOwner": {
          "1": [
            2096,
            2117
          ]
        },
        "Allowlist.verifySignature": {
          "30": [
            2446,
            2480
          ]
        },
        "Allowlist.verifySigner": {
          "31": [
            4876,
            4920
          ]
        }
      },
      "5": {
        "Ownable._checkOwner": {
          "55": [
            1717,
            1785
          ]
        },
        "Ownable._msgSender": {
          "54": [
            3050,
            3067
          ]
        },
        "Ownable._transferOwnership": {
          "56": [
            2865,
            2882
          ],
          "57": [
            2892,
            2937
          ]
        },
        "Ownable.owner": {
          "2": [
            1571,
            1584
          ]
        },
        "Ownable.renounceOwnership": {
          "18": [
            2211,
            2241
          ]
        },
        "Ownable.transferOwnership": {
          "32": [
            2481,
            2554
          ],
          "33": [
            2564,
            2592
          ]
        }
      },
      "6": {
        "Soulbound._getBaseURI": {
          "23": [
            7476,
            7528
          ],
          "24": [
            7571,
            7589
          ]
        },
        "Soulbound._setBaseURI": {
          "58": [
            7074,
            7128
          ],
          "59": [
            7168,
            7186
          ]
        },
        "Soulbound.burnSoulboundToken": {
          "66": [
            6492,
            6545
          ],
          "67": [
            6681,
            6695
          ],
          "68": [
            6752,
            6787
          ]
        },
        "Soulbound.isMinted": {
          "0": [
            5279,
            5306
          ]
        },
        "Soulbound.issue": {
          "60": [
            2371,
            2462
          ],
          "61": [
            2502,
            2513
          ]
        },
        "Soulbound.issuerOf": {
          "34": [
            4428,
            4481
          ],
          "35": [
            4530,
            4579
          ],
          "36": [
            4640,
            4703
          ],
          "37": [
            4752,
            4772
          ]
        },
        "Soulbound.mintSoulboundToken": {
          "69": [
            5749,
            5799
          ],
          "70": [
            5931,
            5986
          ],
          "71": [
            6101,
            6129
          ],
          "72": [
            6185,
            6210
          ]
        },
        "Soulbound.revoke": {
          "39": [
            3460,
            3509
          ],
          "40": [
            3572,
            3637
          ],
          "41": [
            3680,
            3708
          ],
          "42": [
            3748,
            3759
          ]
        }
      },
      "7": {
        "SoulboundCore.generateTokenURI": {
          "11": [
            6248,
            6306
          ],
          "12": [
            6366,
            6470
          ]
        },
        "SoulboundCore.issueWithSignature": {
          "25": [
            3016,
            3068
          ],
          "26": [
            3295,
            3348
          ],
          "27": [
            3467,
            3531
          ],
          "28": [
            3630,
            3660
          ],
          "29": [
            3722,
            3760
          ]
        },
        "SoulboundCore.revokeWithSignature": {
          "6": [
            4406,
            4462
          ],
          "7": [
            4689,
            4742
          ],
          "8": [
            4861,
            4925
          ],
          "9": [
            5024,
            5057
          ],
          "10": [
            5120,
            5153
          ]
        },
        "SoulboundCore.setBaseURI": {
          "19": [
            5654,
            5675
          ]
        },
        "SoulboundCore.toString": {
          "43": [
            6912,
            6922
          ],
          "44": [
            7028,
            7036
          ],
          "45": [
            7050,
            7060
          ],
          "46": [
            7162,
            7173
          ],
          "47": [
            7187,
            7243
          ],
          "48": [
            7257,
            7268
          ],
          "49": [
            7288,
            7309
          ]
        }
      }
    }
  },
  "dependencies": [
    "Allowlist",
    "ERC165",
    "ERC4973",
    "IAllowlist",
    "IERC165",
    "IERC4973",
    "IERC721Metadata",
    "Ownable",
    "Soulbound"
  ],
  "deployedBytecode": "608060405234801561001057600080fd5b506004361061012c5760003560e01c806388433651116100ad578063c9e4c54d11610071578063c9e4c54d1461028e578063daca6f78146102a1578063e92b0842146102b4578063f2fde38b146102c7578063fb8f198d146102da57600080fd5b806388433651146102475780638da5cb5b1461025a57806395d89b411461026b578063c87b56dd14610273578063c9dd94c71461028657600080fd5b80635899e7b2116100f45780635899e7b2146101a95780636352211e146101e25780636e0a87461461020d57806370a082311461021e578063715018a61461023f57600080fd5b806301ffc9a71461013157806306fdde031461015957806308c92e571461016e578063210fa96b1461018357806342966c6814610196575b600080fd5b61014461013f3660046114a5565b6102ed565b60405190151581526020015b60405180910390f35b61016161033f565b60405161015091906114ff565b61018161017c3660046115d5565b6103d1565b005b610161610191366004611625565b61050c565b6101816101a4366004611625565b61058b565b6101446101b736600461165a565b6001600160a01b03919091166000908152600760209081526040808320938352929052205460ff1690565b6101f56101f0366004611625565b610600565b6040516001600160a01b039091168152602001610150565b6008546001600160a01b03166101f5565b61023161022c366004611684565b610665565b604051908152602001610150565b6101816106ee565b61018161025536600461169f565b610702565b6005546001600160a01b03166101f5565b610161610782565b610161610281366004611625565b610791565b610161610886565b61018161029c3660046116ed565b6108e2565b6101446102af366004611775565b610a17565b6101446102c23660046117a6565b610a2a565b6101816102d5366004611684565b610abe565b6101f56102e836600461165a565b610b34565b60006001600160e01b03198216635b5e139f60e01b148061031e57506001600160e01b03198216635164cf4760e01b145b8061033957506301ffc9a760e01b6001600160e01b03198316145b92915050565b60606000805461034e906117fd565b80601f016020809104026020016040519081016040528092919081815260200182805461037a906117fd565b80156103c75780601f1061039c576101008083540402835291602001916103c7565b820191906000526020600020905b8154815290600101906020018083116103aa57829003601f168201915b5050505050905090565b6103da81610c48565b61042b5760405162461bcd60e51b815260206004820152601b60248201527f5265766f6b65206f6620696e6578697374656e7420746f6b656e2e000000000060448201526064015b60405180910390fd5b81516041146104775760405162461bcd60e51b8152602060048201526018602482015277092dcecc2d8d2c840e6d2cedcc2e8eae4ca40d8cadccee8d60431b6044820152606401610422565b6104818383610a17565b6104c95760405162461bcd60e51b81526020600482015260196024820152782430b9b4103737ba1039b4b3b732b210313c9037bbb732b91760391b6044820152606401610422565b6104db6104d582610600565b82610c65565b5060405181907ff947bf2266afede98f27ad2312db8b2a17921852307f979b6f14a2b41fa774bc90600090a2505050565b6060610516610886565b516105535760405162461bcd60e51b815260206004820152600d60248201526c456d707479206261736555524960981b6044820152606401610422565b61055b610886565b61056483610d2d565b604051602001610575929190611838565b6040516020818303038152906040529050919050565b61059481610600565b6001600160a01b0316336001600160a01b0316146105f45760405162461bcd60e51b815260206004820152601a60248201527f6275726e3a2073656e646572206d757374206265206f776e65720000000000006044820152606401610422565b6105fd81610e33565b50565b6000818152600260205260408120546001600160a01b0316806103395760405162461bcd60e51b815260206004820152601c60248201527f6f776e65724f663a20746f6b656e20646f65736e2774206578697374000000006044820152606401610422565b60006001600160a01b0382166106d25760405162461bcd60e51b815260206004820152602c60248201527f62616c616e63654f663a2061646472657373207a65726f206973206e6f74206160448201526b103b30b634b21037bbb732b960a11b6064820152608401610422565b506001600160a01b031660009081526004602052604090205490565b6106f6610eda565b6107006000610f34565b565b61070a610eda565b8161071d6008546001600160a01b031690565b6001600160a01b0316816001600160a01b0316146107745760405162461bcd60e51b81526020600482015260146024820152734e6f7420416c6c6f776c697374204f776e65722160601b6044820152606401610422565b61077d82610f86565b505050565b60606001805461034e906117fd565b606061079c82610c48565b6107e85760405162461bcd60e51b815260206004820152601d60248201527f746f6b656e5552493a20746f6b656e20646f65736e27742065786973740000006044820152606401610422565b60008281526003602052604090208054610801906117fd565b80601f016020809104026020016040519081016040528092919081815260200182805461082d906117fd565b801561087a5780601f1061084f5761010080835404028352916020019161087a565b820191906000526020600020905b81548152906001019060200180831161085d57829003601f168201915b50505050509050919050565b606060068054610895906117fd565b151590506108d55760405162461bcd60e51b815260206004820152600d60248201526c456d707479206261736555524960981b6044820152606401610422565b6006805461034e906117fd565b6001600160a01b0385166109305760405162461bcd60e51b815260206004820152601560248201527426b4b73a103a37903d32b9379030b2323932b9b99760591b6044820152606401610422565b825160411461097c5760405162461bcd60e51b8152602060048201526018602482015277092dcecc2d8d2c840e6d2cedcc2e8eae4ca40d8cadccee8d60431b6044820152606401610422565b6109868484610a17565b6109ce5760405162461bcd60e51b81526020600482015260196024820152782430b9b4103737ba1039b4b3b732b210313c9037bbb732b91760391b6044820152606401610422565b6109d9858383610fdc565b5060405182906001600160a01b038716907f79af0e59b31823dd289ceebabc4d63d25f35926b8548e3a084a500c9d4e1855690600090a35050505050565b6000610a238383610ff3565b9392505050565b602081810151604080840151606080860151835160008082528188018087528a905291821a81860181905292810186905260808101849052935190959293919260019260a080820193601f1981019281900390910190855afa158015610a94573d6000803e3d6000fd5b505050602060405103516001600160a01b0316876001600160a01b03161493505050509392505050565b610ac6610eda565b6001600160a01b038116610b2b5760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b6064820152608401610422565b6105fd81610f34565b60006001600160a01b038316610b8c5760405162461bcd60e51b815260206004820152601760248201527f517565727920666f72207a65726f20616464726573732e0000000000000000006044820152606401610422565b610b9582610c48565b610bd75760405162461bcd60e51b81526020600482015260136024820152722737b716b2bc34b9ba32b73a103a37b5b2b71760691b6044820152606401610422565b826001600160a01b0316610bea83610600565b6001600160a01b031614610c405760405162461bcd60e51b815260206004820152601a60248201527f546f6b656e206e6f74206f776e656420627920616464726573730000000000006044820152606401610422565b503092915050565b6000908152600260205260409020546001600160a01b0316151590565b6000610c7082610c48565b610cb25760405162461bcd60e51b81526020600482015260136024820152722737b716b2bc34b9ba32b73a103a37b5b2b71760691b6044820152606401610422565b826001600160a01b0316610cc583610600565b6001600160a01b031614610d1b5760405162461bcd60e51b815260206004820152601a60248201527f546f6b656e206e6f74206f776e656420627920616464726573730000000000006044820152606401610422565b610d2482611176565b50600192915050565b606081610d515750506040805180820190915260018152600360fc1b602082015290565b8160005b8115610d7b5780610d658161187d565b9150610d749050600a836118ae565b9150610d55565b60008167ffffffffffffffff811115610d9657610d96611532565b6040519080825280601f01601f191660200182016040528015610dc0576020820181803683370190505b5090505b8415610e2b57610dd56001836118c2565b9150610de2600a866118d9565b610ded9060306118ed565b60f81b818381518110610e0257610e02611905565b60200101906001600160f81b031916908160001a905350610e24600a866118ae565b9450610dc4565b949350505050565b6000610e3e82610600565b6001600160a01b03811660009081526004602052604081208054929350600192909190610e6c9084906118c2565b9091555050600082815260026020908152604080832080546001600160a01b031916905560039091528120610ea0916113d2565b60405182906001600160a01b038316907fec9ab91322523c899ede7830ec9bfc992b5981cdcc27b91162fb23de5791117b90600090a35050565b6005546001600160a01b031633146107005760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401610422565b600580546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b8051610fc55760405162461bcd60e51b815260206004820152600e60248201526d092dcecc2d8d2c840d8cadccee8d60931b6044820152606401610422565b8051610fd890600690602084019061140c565b5050565b6000610fe984848461120c565b5060019392505050565b6000610ffd610eda565b6005546001600160a01b0316331461106b5760405162461bcd60e51b815260206004820152602b60248201527f4552433732313a3a2043616c6c20746f20636f6e7472616374206d616465206260448201526a3c903737b716b7bbb732b960a91b6064820152608401610422565b81516041146110bc5760405162461bcd60e51b815260206004820152601e60248201527f4572723a3a20496e76616c6964207369676e6174757265206c656e67746800006044820152606401610422565b602082810151604080850151606080870151835160008082529681018086528a905290861a938101849052908101849052608081018290529293909260019060a0016020604051602081039080840390855afa158015611120573d6000803e3d6000fd5b5050604051601f198101516008549093506001600160a01b038085169116149150819089907f7e4fe2a2a805a357593fdbdde58c02f6a53d8b4960744cd31a98697fc11c2e3690600090a3979650505050505050565b61117f81610c48565b6111cb5760405162461bcd60e51b815260206004820152601860248201527f4275726e206f6620696e6578697374656e7420746f6b656e00000000000000006044820152606401610422565b60006111d682610600565b90506111e182610e33565b6001600160a01b0316600090815260076020908152604080832093835292905220805460ff19169055565b6001600160a01b03831661125a5760405162461bcd60e51b815260206004820152601560248201527426b4b73a103a37903d32b9379030b2323932b9b99760591b6044820152606401610422565b805161129a5760405162461bcd60e51b815260206004820152600f60248201526e22b6b83a3c903a37b5b2b72aa9249760891b6044820152606401610422565b6112a58383836112d7565b50506001600160a01b03909116600090815260076020908152604080832093835292905220805460ff19166001179055565b60006112e283610c48565b156113265760405162461bcd60e51b81526020600482015260146024820152736d696e743a20746f6b656e49442065786973747360601b6044820152606401610422565b6001600160a01b038416600090815260046020526040812080546001929061134f9084906118ed565b9091555050600083815260026020908152604080832080546001600160a01b0319166001600160a01b0389161790556003825290912083516113939285019061140c565b5060405183906001600160a01b038616907fe9274a84b19e9428826de6bae8c48329354f8f0e73f771b97cae2d9dccd45a2790600090a3509092915050565b5080546113de906117fd565b6000825580601f106113ee575050565b601f0160209004906000526020600020908101906105fd9190611490565b828054611418906117fd565b90600052602060002090601f01602090048101928261143a5760008555611480565b82601f1061145357805160ff1916838001178555611480565b82800160010185558215611480579182015b82811115611480578251825591602001919060010190611465565b5061148c929150611490565b5090565b5b8082111561148c5760008155600101611491565b6000602082840312156114b757600080fd5b81356001600160e01b031981168114610a2357600080fd5b60005b838110156114ea5781810151838201526020016114d2565b838111156114f9576000848401525b50505050565b602081526000825180602084015261151e8160408501602087016114cf565b601f01601f19169190910160400192915050565b634e487b7160e01b600052604160045260246000fd5b600082601f83011261155957600080fd5b813567ffffffffffffffff8082111561157457611574611532565b604051601f8301601f19908116603f0116810190828211818310171561159c5761159c611532565b816040528381528660208588010111156115b557600080fd5b836020870160208301376000602085830101528094505050505092915050565b6000806000606084860312156115ea57600080fd5b83359250602084013567ffffffffffffffff81111561160857600080fd5b61161486828701611548565b925050604084013590509250925092565b60006020828403121561163757600080fd5b5035919050565b80356001600160a01b038116811461165557600080fd5b919050565b6000806040838503121561166d57600080fd5b6116768361163e565b946020939093013593505050565b60006020828403121561169657600080fd5b610a238261163e565b600080604083850312156116b257600080fd5b6116bb8361163e565b9150602083013567ffffffffffffffff8111156116d757600080fd5b6116e385828601611548565b9150509250929050565b600080600080600060a0868803121561170557600080fd5b61170e8661163e565b945060208601359350604086013567ffffffffffffffff8082111561173257600080fd5b61173e89838a01611548565b945060608801359350608088013591508082111561175b57600080fd5b5061176888828901611548565b9150509295509295909350565b6000806040838503121561178857600080fd5b82359150602083013567ffffffffffffffff8111156116d757600080fd5b6000806000606084860312156117bb57600080fd5b6117c48461163e565b925060208401359150604084013567ffffffffffffffff8111156117e757600080fd5b6117f386828701611548565b9150509250925092565b600181811c9082168061181157607f821691505b6020821081141561183257634e487b7160e01b600052602260045260246000fd5b50919050565b6000835161184a8184602088016114cf565b83519083019061185e8183602088016114cf565b01949350505050565b634e487b7160e01b600052601160045260246000fd5b600060001982141561189157611891611867565b5060010190565b634e487b7160e01b600052601260045260246000fd5b6000826118bd576118bd611898565b500490565b6000828210156118d4576118d4611867565b500390565b6000826118e8576118e8611898565b500690565b6000821982111561190057611900611867565b500190565b634e487b7160e01b600052603260045260246000fdfea264697066735822122077aebb811d55e85810d6e72777e62f036ab0e026b8ad82b6d96d4dfc6745c47664736f6c634300080c0033",
  "deployedSourceMap": "820:6499:7:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4293:260:2;;;;;;:::i;:::-;;:::i;:::-;;;470:14:10;;463:22;445:41;;433:2;418:18;4293:260:2;;;;;;;;4557:92;;;:::i;:::-;;;;;;;:::i;4229:931:7:-;;;;;;:::i;:::-;;:::i;:::-;;6072:405;;;;;;:::i;:::-;;:::i;4946:155:2:-;;;;;;:::i;:::-;;:::i;5171:142:6:-;;;;;;:::i;:::-;-1:-1:-1;;;;;5286:10:6;;;;5263:4;5286:10;;;:5;:10;;;;;;;;:20;;;;;;;;;;;5171:142;5306:199:2;;;;;;:::i;:::-;;:::i;:::-;;;-1:-1:-1;;;;;3250:32:10;;;3232:51;;3220:2;3205:18;5306:199:2;3086:203:10;2028:96:3;2103:14;;-1:-1:-1;;;;;2103:14:3;2028:96;;5105:197:2;;;;;;:::i;:::-;;:::i;:::-;;;3631:25:10;;;3619:2;3604:18;5105:197:2;3485:177:10;2147:101:5;;;:::i;5491:191:7:-;;;;;;:::i;:::-;;:::i;1506:85:5:-;1578:6;;-1:-1:-1;;;;;1578:6:5;1506:85;;4653:96:2;;;:::i;4753:189::-;;;;;;:::i;:::-;;:::i;7349:247:6:-;;;:::i;2769:998:7:-;;;;;;:::i;:::-;;:::i;2344:143:3:-;;;;;;:::i;:::-;;:::i;4659:268::-;;;;;;:::i;:::-;;:::i;2401:198:5:-;;;;;;:::i;:::-;;:::i;4288:491:6:-;;;;;;:::i;:::-;;:::i;4293:260:2:-;4378:4;-1:-1:-1;;;;;;4403:48:2;;-1:-1:-1;;;4403:48:2;;:99;;-1:-1:-1;;;;;;;4461:41:2;;-1:-1:-1;;;4461:41:2;4403:99;:145;;;-1:-1:-1;;;;;;;;;;1685:40:2;;;4512:36;4390:158;4293:260;-1:-1:-1;;4293:260:2:o;4557:92::-;4611:13;4639:5;4632:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4557:92;:::o;4229:931:7:-;4414:16;4422:7;4414;:16::i;:::-;4406:56;;;;-1:-1:-1;;;4406:56:7;;6271:2:10;4406:56:7;;;6253:21:10;6310:2;6290:18;;;6283:30;6349:29;6329:18;;;6322:57;6396:18;;4406:56:7;;;;;;;;;4697:3;:10;4711:2;4697:16;4689:53;;;;-1:-1:-1;;;4689:53:7;;6969:2:10;4689:53:7;;;6951:21:10;7008:2;6988:18;;;6981:30;-1:-1:-1;;;7027:18:10;;;7020:54;7091:18;;4689:53:7;6767:348:10;4689:53:7;4869:26;4885:4;4891:3;4869:15;:26::i;:::-;4861:64;;;;-1:-1:-1;;;4861:64:7;;7322:2:10;4861:64:7;;;7304:21:10;7361:2;7341:18;;;7334:30;-1:-1:-1;;;7380:18:10;;;7373:55;7445:18;;4861:64:7;7120:349:10;4861:64:7;5024:33;5031:16;5039:7;5031;:16::i;:::-;5049:7;5024:6;:33::i;:::-;-1:-1:-1;5125:28:7;;5145:7;;5125:28;;;;;4229:931;;;:::o;6072:405::-;6149:23;6262:13;:11;:13::i;:::-;6256:27;6248:58;;;;-1:-1:-1;;;6248:58:7;;7676:2:10;6248:58:7;;;7658:21:10;7715:2;7695:18;;;7688:30;-1:-1:-1;;;7734:18:10;;;7727:43;7787:18;;6248:58:7;7474:337:10;6248:58:7;6415:13;:11;:13::i;:::-;6442:17;6451:7;6442:8;:17::i;:::-;6385:84;;;;;;;;;:::i;:::-;;;;;;;;;;;;;6366:104;;6072:405;;;:::o;4946:155:2:-;5029:16;5037:7;5029;:16::i;:::-;-1:-1:-1;;;;;5015:30:2;:10;-1:-1:-1;;;;;5015:30:2;;5007:69;;;;-1:-1:-1;;;5007:69:2;;8493:2:10;5007:69:2;;;8475:21:10;8532:2;8512:18;;;8505:30;8571:28;8551:18;;;8544:56;8617:18;;5007:69:2;8291:350:10;5007:69:2;5082:14;5088:7;5082:5;:14::i;:::-;4946:155;:::o;5306:199::-;5369:7;5400:16;;;:7;:16;;;;;;-1:-1:-1;;;;;5400:16:2;5430:19;5422:60;;;;-1:-1:-1;;;5422:60:2;;8848:2:10;5422:60:2;;;8830:21:10;8887:2;8867:18;;;8860:30;8926;8906:18;;;8899:58;8974:18;;5422:60:2;8646:352:10;5105:197:2;5177:7;-1:-1:-1;;;;;5200:19:2;;5192:76;;;;-1:-1:-1;;;5192:76:2;;9205:2:10;5192:76:2;;;9187:21:10;9244:2;9224:18;;;9217:30;9283:34;9263:18;;;9256:62;-1:-1:-1;;;9334:18:10;;;9327:42;9386:19;;5192:76:2;9003:408:10;5192:76:2;-1:-1:-1;;;;;;5281:16:2;;;;;:9;:16;;;;;;;5105:197::o;2147:101:5:-;1401:13;:11;:13::i;:::-;2211:30:::1;2238:1;2211:18;:30::i;:::-;2147:101::o:0;5491:191:7:-;1401:13:5;:11;:13::i;:::-;5602:6:7::1;1669:19;2103:14:3::0;;-1:-1:-1;;;;;2103:14:3;;2028:96;1669:19:7::1;-1:-1:-1::0;;;;;1658:30:7::1;:7;-1:-1:-1::0;;;;;1658:30:7::1;;1650:63;;;::::0;-1:-1:-1;;;1650:63:7;;9618:2:10;1650:63:7::1;::::0;::::1;9600:21:10::0;9657:2;9637:18;;;9630:30;-1:-1:-1;;;9676:18:10;;;9669:50;9736:18;;1650:63:7::1;9416:344:10::0;1650:63:7::1;5654:21:::2;5666:8;5654:11;:21::i;:::-;1424:1:5::1;5491:191:7::0;;:::o;4653:96:2:-;4709:13;4737:7;4730:14;;;;;:::i;4753:189::-;4826:13;4855:16;4863:7;4855;:16::i;:::-;4847:58;;;;-1:-1:-1;;;4847:58:2;;9967:2:10;4847:58:2;;;9949:21:10;10006:2;9986:18;;;9979:30;10045:31;10025:18;;;10018:59;10094:18;;4847:58:2;9765:353:10;4847:58:2;4918:19;;;;:10;:19;;;;;4911:26;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4753:189;;;:::o;7349:247:6:-;7392:22;7490:7;7484:21;;;;;:::i;:::-;:26;;;-1:-1:-1;7476:52:6;;;;-1:-1:-1;;;7476:52:6;;7676:2:10;7476:52:6;;;7658:21:10;7715:2;7695:18;;;7688:30;-1:-1:-1;;;7734:18:10;;;7727:43;7787:18;;7476:52:6;7474:337:10;7476:52:6;7582:7;7571:18;;;;;:::i;2769:998:7:-;-1:-1:-1;;;;;3024:18:7;;3016:52;;;;-1:-1:-1;;;3016:52:7;;10325:2:10;3016:52:7;;;10307:21:10;10364:2;10344:18;;;10337:30;-1:-1:-1;;;10383:18:10;;;10376:51;10444:18;;3016:52:7;10123:345:10;3016:52:7;3303:3;:10;3317:2;3303:16;3295:53;;;;-1:-1:-1;;;3295:53:7;;6969:2:10;3295:53:7;;;6951:21:10;7008:2;6988:18;;;6981:30;-1:-1:-1;;;7027:18:10;;;7020:54;7091:18;;3295:53:7;6767:348:10;3295:53:7;3475:26;3491:4;3497:3;3475:15;:26::i;:::-;3467:64;;;;-1:-1:-1;;;3467:64:7;;7322:2:10;3467:64:7;;;7304:21:10;7361:2;7341:18;;;7334:30;-1:-1:-1;;;7380:18:10;;;7373:55;7445:18;;3467:64:7;7120:349:10;3467:64:7;3630:30;3636:4;3642:7;3651:8;3630:5;:30::i;:::-;-1:-1:-1;3727:33:7;;3752:7;;-1:-1:-1;;;;;3727:33:7;;;;;;;;2769:998;;;;;:::o;2344:143:3:-;2426:4;2453:27;2470:4;2476:3;2453:16;:27::i;:::-;2446:34;2344:143;-1:-1:-1;;;2344:143:3:o;4659:268::-;5818:2;5809:12;;;5803:19;5893:2;5884:12;;;5878:19;6005:2;5996:12;;;5990:19;4894:25;;4790:4;4894:25;;;;;;;;;10700::10;;;5982:28:3;;;10741:18:10;;;10734:45;;;10795:18;;;10788:34;;;10838:18;;;10831:34;;;4894:25:3;;4790:4;;5878:19;;5982:28;;4894:25;;10672:19:10;;;;;-1:-1:-1;;4894:25:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;4883:36:3;:7;-1:-1:-1;;;;;4883:36:3;;4876:44;;;;;4659:268;;;;;:::o;2401:198:5:-;1401:13;:11;:13::i;:::-;-1:-1:-1;;;;;2489:22:5;::::1;2481:73;;;::::0;-1:-1:-1;;;2481:73:5;;11078:2:10;2481:73:5::1;::::0;::::1;11060:21:10::0;11117:2;11097:18;;;11090:30;11156:34;11136:18;;;11129:62;-1:-1:-1;;;11207:18:10;;;11200:36;11253:19;;2481:73:5::1;10876:402:10::0;2481:73:5::1;2564:28;2583:8;2564:18;:28::i;4288:491:6:-:0;4357:7;-1:-1:-1;;;;;4436:17:6;;4428:53;;;;-1:-1:-1;;;4428:53:6;;11485:2:10;4428:53:6;;;11467:21:10;11524:2;11504:18;;;11497:30;11563:25;11543:18;;;11536:53;11606:18;;4428:53:6;11283:347:10;4428:53:6;4538:17;4546:8;4538:7;:17::i;:::-;4530:49;;;;-1:-1:-1;;;4530:49:6;;11837:2:10;4530:49:6;;;11819:21:10;11876:2;11856:18;;;11849:30;-1:-1:-1;;;11895:18:10;;;11888:49;11954:18;;4530:49:6;11635:343:10;4530:49:6;4669:3;-1:-1:-1;;;;;4648:24:6;:17;4656:8;4648:7;:17::i;:::-;-1:-1:-1;;;;;4648:24:6;;4640:63;;;;-1:-1:-1;;;4640:63:6;;12185:2:10;4640:63:6;;;12167:21:10;12224:2;12204:18;;;12197:30;12263:28;12243:18;;;12236:56;12309:18;;4640:63:6;11983:350:10;4640:63:6;-1:-1:-1;4767:4:6;4288:491;;;;:::o;5509:119:2:-;5574:4;5593:16;;;:7;:16;;;;;;-1:-1:-1;;;;;5593:16:2;:30;;;5509:119::o;3339:427:6:-;3405:4;3468:17;3476:8;3468:7;:17::i;:::-;3460:49;;;;-1:-1:-1;;;3460:49:6;;11837:2:10;3460:49:6;;;11819:21:10;11876:2;11856:18;;;11849:30;-1:-1:-1;;;11895:18:10;;;11888:49;11954:18;;3460:49:6;11635:343:10;3460:49:6;3601:5;-1:-1:-1;;;;;3580:26:6;:17;3588:8;3580:7;:17::i;:::-;-1:-1:-1;;;;;3580:26:6;;3572:65;;;;-1:-1:-1;;;3572:65:6;;12185:2:10;3572:65:6;;;12167:21:10;12224:2;12204:18;;;12197:30;12263:28;12243:18;;;12236:56;12309:18;;3572:65:6;11983:350:10;3572:65:6;3680:28;3699:8;3680:18;:28::i;:::-;-1:-1:-1;3755:4:6;3339:427;;;;:::o;6613:703:7:-;6669:13;6886:10;6882:51;;-1:-1:-1;;6912:10:7;;;;;;;;;;;;-1:-1:-1;;;6912:10:7;;;;;6613:703::o;6882:51::-;6957:5;6942:12;6996:75;7003:9;;6996:75;;7028:8;;;;:::i;:::-;;-1:-1:-1;7050:10:7;;-1:-1:-1;7058:2:7;7050:10;;:::i;:::-;;;6996:75;;;7080:19;7112:6;7102:17;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;7102:17:7;;7080:39;;7129:150;7136:10;;7129:150;;7162:11;7172:1;7162:11;;:::i;:::-;;-1:-1:-1;7230:10:7;7238:2;7230:5;:10;:::i;:::-;7217:24;;:2;:24;:::i;:::-;7204:39;;7187:6;7194;7187:14;;;;;;;;:::i;:::-;;;;:56;-1:-1:-1;;;;;7187:56:7;;;;;;;;-1:-1:-1;7257:11:7;7266:2;7257:11;;:::i;:::-;;;7129:150;;;7302:6;6613:703;-1:-1:-1;;;;6613:703:7:o;5943:215:2:-;5998:13;6014:16;6022:7;6014;:16::i;:::-;-1:-1:-1;;;;;6037:16:2;;;;;;:9;:16;;;;;:21;;5998:32;;-1:-1:-1;6057:1:2;;6037:16;;;:21;;6057:1;;6037:21;:::i;:::-;;;;-1:-1:-1;;6071:16:2;;;;:7;:16;;;;;;;;6064:23;;-1:-1:-1;;;;;;6064:23:2;;;6100:10;:19;;;;;6093:26;;;:::i;:::-;6131:22;;6145:7;;-1:-1:-1;;;;;6131:22:2;;;;;;;;5992:166;5943:215;:::o;1662:130:5:-;1578:6;;-1:-1:-1;;;;;1578:6:5;3057:10;1725:23;1717:68;;;;-1:-1:-1;;;1717:68:5;;13581:2:10;1717:68:5;;;13563:21:10;;;13600:18;;;13593:30;13659:34;13639:18;;;13632:62;13711:18;;1717:68:5;13379:356:10;2757:187:5;2849:6;;;-1:-1:-1;;;;;2865:17:5;;;-1:-1:-1;;;;;;2865:17:5;;;;;;;2897:40;;2849:6;;;2865:17;2849:6;;2897:40;;2830:16;;2897:40;2820:124;2757:187;:::o;6959:234:6:-;7082:22;;7074:54;;;;-1:-1:-1;;;7074:54:6;;13942:2:10;7074:54:6;;;13924:21:10;13981:2;13961:18;;;13954:30;-1:-1:-1;;;14000:18:10;;;13993:44;14054:18;;7074:54:6;13740:338:10;7074:54:6;7168:18;;;;:7;;:18;;;;;:::i;:::-;;6959:234;:::o;2162:358::-;2281:4;2371:91;2403:3;2421:8;2444;2371:18;:91::i;:::-;-1:-1:-1;2509:4:6;2162:358;;;;;:::o;3447:1043:3:-;3544:4;1401:13:5;:11;:13::i;:::-;1578:6;;-1:-1:-1;;;;;1578:6:5;3057:10;3709:23:3::1;3688:114;;;::::0;-1:-1:-1;;;3688:114:3;;14285:2:10;3688:114:3::1;::::0;::::1;14267:21:10::0;14324:2;14304:18;;;14297:30;14363:34;14343:18;;;14336:62;-1:-1:-1;;;14414:18:10;;;14407:41;14465:19;;3688:114:3::1;14083:407:10::0;3688:114:3::1;3880:3;:10;3894:2;3880:16;3872:59;;;::::0;-1:-1:-1;;;3872:59:3;;14697:2:10;3872:59:3::1;::::0;::::1;14679:21:10::0;14736:2;14716:18;;;14709:30;14775:32;14755:18;;;14748:60;14825:18;;3872:59:3::1;14495:354:10::0;3872:59:3::1;5818:2:::0;5809:12;;;5803:19;5893:2;5884:12;;;5878:19;6005:2;5996:12;;;5990:19;4144:24;;4010:9:::1;4144:24:::0;;;;;::::1;::::0;;;10700:25:10;;;5982:28:3;;;10741:18:10;;;10734:45;;;10795:18;;;10788:34;;;10838:18;;;10831:34;;;5803:19:3;;5878;;4144:24:::1;::::0;10672:19:10;;4144:24:3::1;;;;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;-1:-1:-1::0;;4144:24:3::1;::::0;-1:-1:-1;;4144:24:3;;;4282:14:::1;::::0;4144:24;;-1:-1:-1;;;;;;4272:24:3;;::::1;4282:14:::0;::::1;4272:24;::::0;-1:-1:-1;4272:24:3;;4379:4;;4363:45:::1;::::0;4241:27:::1;::::0;4363:45:::1;4461:22:::0;3447:1043;-1:-1:-1;;;;;;;3447:1043:3:o;6373:421:6:-;6500:16;6508:7;6500;:16::i;:::-;6492:53;;;;-1:-1:-1;;;6492:53:6;;15056:2:10;6492:53:6;;;15038:21:10;15095:2;15075:18;;;15068:30;15134:26;15114:18;;;15107:54;15178:18;;6492:53:6;14854:348:10;6492:53:6;6600:19;6622:16;6630:7;6622;:16::i;:::-;6600:38;;6681:14;6687:7;6681:5;:14::i;:::-;-1:-1:-1;;;;;6752:18:6;6782:5;6752:18;;;:5;:18;;;;;;;;:27;;;;;;;:35;;-1:-1:-1;;6752:35:6;;;6373:421::o;5543:674::-;-1:-1:-1;;;;;5757:16:6;;5749:50;;;;-1:-1:-1;;;5749:50:6;;10325:2:10;5749:50:6;;;10307:21:10;10364:2;10344:18;;;10337:30;-1:-1:-1;;;10383:18:10;;;10376:51;10444:18;;5749:50:6;10123:345:10;5749:50:6;5939:22;;5931:55;;;;-1:-1:-1;;;5931:55:6;;15409:2:10;5931:55:6;;;15391:21:10;15448:2;15428:18;;;15421:30;-1:-1:-1;;;15467:18:10;;;15460:45;15522:18;;5931:55:6;15207:339:10;5931:55:6;6101:28;6107:2;6111:7;6120:8;6101:5;:28::i;:::-;-1:-1:-1;;;;;;;6185:9:6;;;;;;;:5;:9;;;;;;;;:18;;;;;;;:25;;-1:-1:-1;;6185:25:6;6206:4;6185:25;;;5543:674::o;5632:307:2:-;5737:7;5761:16;5769:7;5761;:16::i;:::-;5760:17;5752:50;;;;-1:-1:-1;;;5752:50:2;;15753:2:10;5752:50:2;;;15735:21:10;15792:2;15772:18;;;15765:30;-1:-1:-1;;;15811:18:10;;;15804:50;15871:18;;5752:50:2;15551:344:10;5752:50:2;-1:-1:-1;;;;;5808:13:2;;;;;;:9;:13;;;;;:18;;5825:1;;5808:13;:18;;5825:1;;5808:18;:::i;:::-;;;;-1:-1:-1;;5832:16:2;;;;:7;:16;;;;;;;;:21;;-1:-1:-1;;;;;;5832:21:2;-1:-1:-1;;;;;5832:21:2;;;;;5859:10;:19;;;;;:25;;;;;;;;:::i;:::-;-1:-1:-1;5895:19:2;;5906:7;;-1:-1:-1;;;;;5895:19:2;;;;;;;;-1:-1:-1;5927:7:2;;5632:307;-1:-1:-1;;5632:307:2:o;-1:-1:-1:-;;;;;;;:::i;:::-;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;14:286:10;72:6;125:2;113:9;104:7;100:23;96:32;93:52;;;141:1;138;131:12;93:52;167:23;;-1:-1:-1;;;;;;219:32:10;;209:43;;199:71;;266:1;263;256:12;497:258;569:1;579:113;593:6;590:1;587:13;579:113;;;669:11;;;663:18;650:11;;;643:39;615:2;608:10;579:113;;;710:6;707:1;704:13;701:48;;;745:1;736:6;731:3;727:16;720:27;701:48;;497:258;;;:::o;760:383::-;909:2;898:9;891:21;872:4;941:6;935:13;984:6;979:2;968:9;964:18;957:34;1000:66;1059:6;1054:2;1043:9;1039:18;1034:2;1026:6;1022:15;1000:66;:::i;:::-;1127:2;1106:15;-1:-1:-1;;1102:29:10;1087:45;;;;1134:2;1083:54;;760:383;-1:-1:-1;;760:383:10:o;1148:127::-;1209:10;1204:3;1200:20;1197:1;1190:31;1240:4;1237:1;1230:15;1264:4;1261:1;1254:15;1280:718;1322:5;1375:3;1368:4;1360:6;1356:17;1352:27;1342:55;;1393:1;1390;1383:12;1342:55;1429:6;1416:20;1455:18;1492:2;1488;1485:10;1482:36;;;1498:18;;:::i;:::-;1573:2;1567:9;1541:2;1627:13;;-1:-1:-1;;1623:22:10;;;1647:2;1619:31;1615:40;1603:53;;;1671:18;;;1691:22;;;1668:46;1665:72;;;1717:18;;:::i;:::-;1757:10;1753:2;1746:22;1792:2;1784:6;1777:18;1838:3;1831:4;1826:2;1818:6;1814:15;1810:26;1807:35;1804:55;;;1855:1;1852;1845:12;1804:55;1919:2;1912:4;1904:6;1900:17;1893:4;1885:6;1881:17;1868:54;1966:1;1959:4;1954:2;1946:6;1942:15;1938:26;1931:37;1986:6;1977:15;;;;;;1280:718;;;;:::o;2003:456::-;2089:6;2097;2105;2158:2;2146:9;2137:7;2133:23;2129:32;2126:52;;;2174:1;2171;2164:12;2126:52;2210:9;2197:23;2187:33;;2271:2;2260:9;2256:18;2243:32;2298:18;2290:6;2287:30;2284:50;;;2330:1;2327;2320:12;2284:50;2353:49;2394:7;2385:6;2374:9;2370:22;2353:49;:::i;:::-;2343:59;;;2449:2;2438:9;2434:18;2421:32;2411:42;;2003:456;;;;;:::o;2464:180::-;2523:6;2576:2;2564:9;2555:7;2551:23;2547:32;2544:52;;;2592:1;2589;2582:12;2544:52;-1:-1:-1;2615:23:10;;2464:180;-1:-1:-1;2464:180:10:o;2649:173::-;2717:20;;-1:-1:-1;;;;;2766:31:10;;2756:42;;2746:70;;2812:1;2809;2802:12;2746:70;2649:173;;;:::o;2827:254::-;2895:6;2903;2956:2;2944:9;2935:7;2931:23;2927:32;2924:52;;;2972:1;2969;2962:12;2924:52;2995:29;3014:9;2995:29;:::i;:::-;2985:39;3071:2;3056:18;;;;3043:32;;-1:-1:-1;;;2827:254:10:o;3294:186::-;3353:6;3406:2;3394:9;3385:7;3381:23;3377:32;3374:52;;;3422:1;3419;3412:12;3374:52;3445:29;3464:9;3445:29;:::i;3667:395::-;3745:6;3753;3806:2;3794:9;3785:7;3781:23;3777:32;3774:52;;;3822:1;3819;3812:12;3774:52;3845:29;3864:9;3845:29;:::i;:::-;3835:39;;3925:2;3914:9;3910:18;3897:32;3952:18;3944:6;3941:30;3938:50;;;3984:1;3981;3974:12;3938:50;4007:49;4048:7;4039:6;4028:9;4024:22;4007:49;:::i;:::-;3997:59;;;3667:395;;;;;:::o;4067:752::-;4181:6;4189;4197;4205;4213;4266:3;4254:9;4245:7;4241:23;4237:33;4234:53;;;4283:1;4280;4273:12;4234:53;4306:29;4325:9;4306:29;:::i;:::-;4296:39;;4382:2;4371:9;4367:18;4354:32;4344:42;;4437:2;4426:9;4422:18;4409:32;4460:18;4501:2;4493:6;4490:14;4487:34;;;4517:1;4514;4507:12;4487:34;4540:49;4581:7;4572:6;4561:9;4557:22;4540:49;:::i;:::-;4530:59;;4636:2;4625:9;4621:18;4608:32;4598:42;;4693:3;4682:9;4678:19;4665:33;4649:49;;4723:2;4713:8;4710:16;4707:36;;;4739:1;4736;4729:12;4707:36;;4762:51;4805:7;4794:8;4783:9;4779:24;4762:51;:::i;:::-;4752:61;;;4067:752;;;;;;;;:::o;4824:388::-;4901:6;4909;4962:2;4950:9;4941:7;4937:23;4933:32;4930:52;;;4978:1;4975;4968:12;4930:52;5014:9;5001:23;4991:33;;5075:2;5064:9;5060:18;5047:32;5102:18;5094:6;5091:30;5088:50;;;5134:1;5131;5124:12;5217:462;5303:6;5311;5319;5372:2;5360:9;5351:7;5347:23;5343:32;5340:52;;;5388:1;5385;5378:12;5340:52;5411:29;5430:9;5411:29;:::i;:::-;5401:39;;5487:2;5476:9;5472:18;5459:32;5449:42;;5542:2;5531:9;5527:18;5514:32;5569:18;5561:6;5558:30;5555:50;;;5601:1;5598;5591:12;5555:50;5624:49;5665:7;5656:6;5645:9;5641:22;5624:49;:::i;:::-;5614:59;;;5217:462;;;;;:::o;5684:380::-;5763:1;5759:12;;;;5806;;;5827:61;;5881:4;5873:6;5869:17;5859:27;;5827:61;5934:2;5926:6;5923:14;5903:18;5900:38;5897:161;;;5980:10;5975:3;5971:20;5968:1;5961:31;6015:4;6012:1;6005:15;6043:4;6040:1;6033:15;5897:161;;5684:380;;;:::o;7816:470::-;7995:3;8033:6;8027:13;8049:53;8095:6;8090:3;8083:4;8075:6;8071:17;8049:53;:::i;:::-;8165:13;;8124:16;;;;8187:57;8165:13;8124:16;8221:4;8209:17;;8187:57;:::i;:::-;8260:20;;7816:470;-1:-1:-1;;;;7816:470:10:o;12338:127::-;12399:10;12394:3;12390:20;12387:1;12380:31;12430:4;12427:1;12420:15;12454:4;12451:1;12444:15;12470:135;12509:3;-1:-1:-1;;12530:17:10;;12527:43;;;12550:18;;:::i;:::-;-1:-1:-1;12597:1:10;12586:13;;12470:135::o;12610:127::-;12671:10;12666:3;12662:20;12659:1;12652:31;12702:4;12699:1;12692:15;12726:4;12723:1;12716:15;12742:120;12782:1;12808;12798:35;;12813:18;;:::i;:::-;-1:-1:-1;12847:9:10;;12742:120::o;12867:125::-;12907:4;12935:1;12932;12929:8;12926:34;;;12940:18;;:::i;:::-;-1:-1:-1;12977:9:10;;12867:125::o;12997:112::-;13029:1;13055;13045:35;;13060:18;;:::i;:::-;-1:-1:-1;13094:9:10;;12997:112::o;13114:128::-;13154:3;13185:1;13181:6;13178:1;13175:13;13172:39;;;13191:18;;:::i;:::-;-1:-1:-1;13227:9:10;;13114:128::o;13247:127::-;13308:10;13303:3;13299:20;13296:1;13289:31;13339:4;13336:1;13329:15;13363:4;13360:1;13353:15",
  "language": "Solidity",
  "natspec": {
    "author": "Daccred.",
    "details": "Soulbound Core template. This contract aims at a soulbound token with       capped supply, set by the deployer or defaulted to 1000000.       Mints and burns affect the current supply of tokens respectively.",
    "errors": {
      "Unsigned(address)": [
        {
          "details": "Thrown when the address passed to the verify function is not signed."
        }
      ]
    },
    "events": {
      "IssueWithSignature(address,uint256)": {
        "details": "Emitted when a token is minted from Signature."
      },
      "RevokeWithSignature(uint256)": {
        "details": "Emitted when a token is revoked with Signature."
      }
    },
    "kind": "dev",
    "methods": {
      "_getBaseURI()": {
        "details": "Returns already set baseURI if it exists.",
        "notice": "Callable by anyone.",
        "returns": {
          "_baseURI": "baseURI set."
        }
      },
      "balanceOf(address)": {
        "details": "ABTs assigned to the zero address are considered invalid, and this  function throws for queries about the zero address.",
        "notice": "Count all ABTs assigned to an owner",
        "params": {
          "owner": "An address for whom to query the balance"
        },
        "returns": {
          "_0": "The number of ABTs owned by `owner`, possibly zero"
        }
      },
      "burn(uint256)": {
        "details": "Must emit a `event Revoke` with the `address to` field pointing to  the zero address.",
        "notice": "Destroys `tokenId`. At any time, an ABT receiver must be able to  disassociate themselves from an ABT publicly through calling this  function.",
        "params": {
          "tokenId": "The identifier for an ABT"
        }
      },
      "constructor": {
        "details": "Deploys the 3 contracts inherited by the SoulboundCore."
      },
      "generateTokenURI(uint256)": {
        "details": "Using the `tokenId` passed, it generates a `stringified` tokenURI,       packing the baseURI and the current tokenId.       Makes use of OpenZeppelin's uint to string function.",
        "notice": "Callable by anyone.",
        "params": {
          "tokenId": "ID of token whose tokenURI is desired."
        },
        "returns": {
          "_tokenURI": "TokenURI of the passed tokenId."
        }
      },
      "getAllowlistOwner()": {
        "details": "Return the allowlistOwner.",
        "notice": "Callable by anyone.",
        "returns": {
          "_0": "address of allowlistOwner."
        }
      },
      "isMinted(address,uint256)": {
        "details": "Returns true if token `_tokenId` was minted from this contract to `_to`.       `_to` must not be a 0 address.       `_tokenId` must be an existent token.",
        "notice": "Callable by anyone.",
        "params": {
          "_to": "Address to which token `_tokenId` is minted.",
          "_tokenId": "Token minted."
        },
        "returns": {
          "_0": "bool true or false."
        }
      },
      "issueWithSignature(address,bytes32,bytes,uint256,string)": {
        "details": "Mints a particular quantity of tokens to `to`,        on the condition that the address has been        signed by the allowlistOwner off-chain.       This will emit the {MintSoulboundToken} event       from the Soulbound.sol.",
        "notice": "Callable by anyone.",
        "params": {
          "addr": "Address to mint tokens to.",
          "hash": "Hashed message by the allowlistOwner.",
          "sig": "Signature, signed by the allowlistOwner.",
          "tokenId": "Id of the tokens to mint to the `addr`.",
          "tokenURI": "URI of the token to be minted."
        }
      },
      "issuerOf(address,uint256)": {
        "details": "Since a token cannnot be minted twice.       This function returns the address that minted token `_tokenId` to `_to`,       otherwise this contract.       `_to` must not be a 0 address.       `_tokenId` must be an existent token.       Owner of _tokenId must be _to.",
        "notice": "Callable by anyone.",
        "params": {
          "_to": "Address to which token `_tokenId` is minted.",
          "_tokenId": "Token minted."
        },
        "returns": {
          "_0": "address of issuer."
        }
      },
      "owner()": {
        "details": "Returns the address of the current owner."
      },
      "ownerOf(uint256)": {
        "details": "ABTs assigned to zero address are considered invalid, and queries  about them do throw.",
        "notice": "Find the address bound to an ERC4973 account-bound token",
        "params": {
          "tokenId": "The identifier for an ABT"
        },
        "returns": {
          "_0": "The address of the owner bound to the ABT"
        }
      },
      "renounceOwnership()": {
        "details": "Leaves the contract without owner. It will not be possible to call       `onlyOwner` functions anymore. Can only be called by the current owner.       NOTE: Renouncing ownership will leave the contract without an owner,       thereby removing any functionality that is only available to the owner."
      },
      "revokeWithSignature(bytes32,bytes,uint256)": {
        "details": "Revokes the ownership of `tokenId` from the owner.       The token must exist and the signature must be signed the       allowlistOwner.       This emits the {RevokeWithSignature} event.",
        "notice": "Callable by anyone.",
        "params": {
          "hash": "Hashed message by the allowlistOwner.",
          "sig": "Signature, signed by the allowlistOwner.",
          "tokenId": "Id of the token to revoke."
        }
      },
      "setBaseURI(address,string)": {
        "details": "Allows the `caller` (allowlistOwner) to set the baseURI.       This is really important when the caller wants to mint       Multiple tokens with the same base URI.",
        "notice": "Callable by the deployer of this contract [DaccredDeployer]           and the allowlistOwner."
      },
      "supportsInterface(bytes4)": {
        "details": "See {IERC165-supportsInterface}."
      },
      "transferOwnership(address)": {
        "details": "Transfers ownership of the contract to a new account (`newOwner`).       Can only be called by the current owner."
      },
      "verifySignature(bytes32,bytes)": {
        "details": "Returns true if the signer of signature `sig` is the `allowlistOwner`.       And false if otherwise.",
        "notice": "Callable by anyone.",
        "returns": {
          "_0": "bool true or false."
        }
      },
      "verifySigner(address,bytes32,bytes)": {
        "details": "Returns true if the signer of `_signature` is `_signer`.",
        "notice": "Callable by anyone.",
        "returns": {
          "_0": "bool true or false."
        }
      }
    },
    "stateVariables": {
      "supply": {
        "details": "With every issue and revoke, this value         increases and reduces.         It cannot be GT the TOTAL_SUPPLY."
      },
      "totalSupply": {
        "details": "Total supply limit set by deployer or defaulted to 1000000."
      }
    },
    "title": "Soulbound Core Contract.",
    "version": 1
  },
  "offset": [
    820,
    7319
  ],
  "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x12C JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x88433651 GT PUSH2 0xAD JUMPI DUP1 PUSH4 0xC9E4C54D GT PUSH2 0x71 JUMPI DUP1 PUSH4 0xC9E4C54D EQ PUSH2 0x28E JUMPI DUP1 PUSH4 0xDACA6F78 EQ PUSH2 0x2A1 JUMPI DUP1 PUSH4 0xE92B0842 EQ PUSH2 0x2B4 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x2C7 JUMPI DUP1 PUSH4 0xFB8F198D EQ PUSH2 0x2DA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x88433651 EQ PUSH2 0x247 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x25A JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x26B JUMPI DUP1 PUSH4 0xC87B56DD EQ PUSH2 0x273 JUMPI DUP1 PUSH4 0xC9DD94C7 EQ PUSH2 0x286 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x5899E7B2 GT PUSH2 0xF4 JUMPI DUP1 PUSH4 0x5899E7B2 EQ PUSH2 0x1A9 JUMPI DUP1 PUSH4 0x6352211E EQ PUSH2 0x1E2 JUMPI DUP1 PUSH4 0x6E0A8746 EQ PUSH2 0x20D JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x21E JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x23F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0x131 JUMPI DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x159 JUMPI DUP1 PUSH4 0x8C92E57 EQ PUSH2 0x16E JUMPI DUP1 PUSH4 0x210FA96B EQ PUSH2 0x183 JUMPI DUP1 PUSH4 0x42966C68 EQ PUSH2 0x196 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x144 PUSH2 0x13F CALLDATASIZE PUSH1 0x4 PUSH2 0x14A5 JUMP JUMPDEST PUSH2 0x2ED JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x161 PUSH2 0x33F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x150 SWAP2 SWAP1 PUSH2 0x14FF JUMP JUMPDEST PUSH2 0x181 PUSH2 0x17C CALLDATASIZE PUSH1 0x4 PUSH2 0x15D5 JUMP JUMPDEST PUSH2 0x3D1 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x161 PUSH2 0x191 CALLDATASIZE PUSH1 0x4 PUSH2 0x1625 JUMP JUMPDEST PUSH2 0x50C JUMP JUMPDEST PUSH2 0x181 PUSH2 0x1A4 CALLDATASIZE PUSH1 0x4 PUSH2 0x1625 JUMP JUMPDEST PUSH2 0x58B JUMP JUMPDEST PUSH2 0x144 PUSH2 0x1B7 CALLDATASIZE PUSH1 0x4 PUSH2 0x165A JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 SWAP1 SWAP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 DUP4 MSTORE SWAP3 SWAP1 MSTORE KECCAK256 SLOAD PUSH1 0xFF AND SWAP1 JUMP JUMPDEST PUSH2 0x1F5 PUSH2 0x1F0 CALLDATASIZE PUSH1 0x4 PUSH2 0x1625 JUMP JUMPDEST PUSH2 0x600 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x150 JUMP JUMPDEST PUSH1 0x8 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x1F5 JUMP JUMPDEST PUSH2 0x231 PUSH2 0x22C CALLDATASIZE PUSH1 0x4 PUSH2 0x1684 JUMP JUMPDEST PUSH2 0x665 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x150 JUMP JUMPDEST PUSH2 0x181 PUSH2 0x6EE JUMP JUMPDEST PUSH2 0x181 PUSH2 0x255 CALLDATASIZE PUSH1 0x4 PUSH2 0x169F JUMP JUMPDEST PUSH2 0x702 JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x1F5 JUMP JUMPDEST PUSH2 0x161 PUSH2 0x782 JUMP JUMPDEST PUSH2 0x161 PUSH2 0x281 CALLDATASIZE PUSH1 0x4 PUSH2 0x1625 JUMP JUMPDEST PUSH2 0x791 JUMP JUMPDEST PUSH2 0x161 PUSH2 0x886 JUMP JUMPDEST PUSH2 0x181 PUSH2 0x29C CALLDATASIZE PUSH1 0x4 PUSH2 0x16ED JUMP JUMPDEST PUSH2 0x8E2 JUMP JUMPDEST PUSH2 0x144 PUSH2 0x2AF CALLDATASIZE PUSH1 0x4 PUSH2 0x1775 JUMP JUMPDEST PUSH2 0xA17 JUMP JUMPDEST PUSH2 0x144 PUSH2 0x2C2 CALLDATASIZE PUSH1 0x4 PUSH2 0x17A6 JUMP JUMPDEST PUSH2 0xA2A JUMP JUMPDEST PUSH2 0x181 PUSH2 0x2D5 CALLDATASIZE PUSH1 0x4 PUSH2 0x1684 JUMP JUMPDEST PUSH2 0xABE JUMP JUMPDEST PUSH2 0x1F5 PUSH2 0x2E8 CALLDATASIZE PUSH1 0x4 PUSH2 0x165A JUMP JUMPDEST PUSH2 0xB34 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND PUSH4 0x5B5E139F PUSH1 0xE0 SHL EQ DUP1 PUSH2 0x31E JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND PUSH4 0x5164CF47 PUSH1 0xE0 SHL EQ JUMPDEST DUP1 PUSH2 0x339 JUMPI POP PUSH4 0x1FFC9A7 PUSH1 0xE0 SHL PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP4 AND EQ JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 DUP1 SLOAD PUSH2 0x34E SWAP1 PUSH2 0x17FD JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x37A SWAP1 PUSH2 0x17FD JUMP JUMPDEST DUP1 ISZERO PUSH2 0x3C7 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x39C JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x3C7 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x3AA JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x3DA DUP2 PUSH2 0xC48 JUMP JUMPDEST PUSH2 0x42B JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5265766F6B65206F6620696E6578697374656E7420746F6B656E2E0000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 MLOAD PUSH1 0x41 EQ PUSH2 0x477 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x18 PUSH1 0x24 DUP3 ADD MSTORE PUSH24 0x92DCECC2D8D2C840E6D2CEDCC2E8EAE4CA40D8CADCCEE8D PUSH1 0x43 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x422 JUMP JUMPDEST PUSH2 0x481 DUP4 DUP4 PUSH2 0xA17 JUMP JUMPDEST PUSH2 0x4C9 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x19 PUSH1 0x24 DUP3 ADD MSTORE PUSH25 0x2430B9B4103737BA1039B4B3B732B210313C9037BBB732B917 PUSH1 0x39 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x422 JUMP JUMPDEST PUSH2 0x4DB PUSH2 0x4D5 DUP3 PUSH2 0x600 JUMP JUMPDEST DUP3 PUSH2 0xC65 JUMP JUMPDEST POP PUSH1 0x40 MLOAD DUP2 SWAP1 PUSH32 0xF947BF2266AFEDE98F27AD2312DB8B2A17921852307F979B6F14A2B41FA774BC SWAP1 PUSH1 0x0 SWAP1 LOG2 POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH2 0x516 PUSH2 0x886 JUMP JUMPDEST MLOAD PUSH2 0x553 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xD PUSH1 0x24 DUP3 ADD MSTORE PUSH13 0x456D7074792062617365555249 PUSH1 0x98 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x422 JUMP JUMPDEST PUSH2 0x55B PUSH2 0x886 JUMP JUMPDEST PUSH2 0x564 DUP4 PUSH2 0xD2D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x575 SWAP3 SWAP2 SWAP1 PUSH2 0x1838 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x594 DUP2 PUSH2 0x600 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0x5F4 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x6275726E3A2073656E646572206D757374206265206F776E6572000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x422 JUMP JUMPDEST PUSH2 0x5FD DUP2 PUSH2 0xE33 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP1 PUSH2 0x339 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1C PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x6F776E65724F663A20746F6B656E20646F65736E277420657869737400000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x422 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x6D2 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2C PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x62616C616E63654F663A2061646472657373207A65726F206973206E6F742061 PUSH1 0x44 DUP3 ADD MSTORE PUSH12 0x103B30B634B21037BBB732B9 PUSH1 0xA1 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x422 JUMP JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0x6F6 PUSH2 0xEDA JUMP JUMPDEST PUSH2 0x700 PUSH1 0x0 PUSH2 0xF34 JUMP JUMPDEST JUMP JUMPDEST PUSH2 0x70A PUSH2 0xEDA JUMP JUMPDEST DUP2 PUSH2 0x71D PUSH1 0x8 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0x774 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x14 PUSH1 0x24 DUP3 ADD MSTORE PUSH20 0x4E6F7420416C6C6F776C697374204F776E657221 PUSH1 0x60 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x422 JUMP JUMPDEST PUSH2 0x77D DUP3 PUSH2 0xF86 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x1 DUP1 SLOAD PUSH2 0x34E SWAP1 PUSH2 0x17FD JUMP JUMPDEST PUSH1 0x60 PUSH2 0x79C DUP3 PUSH2 0xC48 JUMP JUMPDEST PUSH2 0x7E8 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x746F6B656E5552493A20746F6B656E20646F65736E2774206578697374000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x422 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH2 0x801 SWAP1 PUSH2 0x17FD JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x82D SWAP1 PUSH2 0x17FD JUMP JUMPDEST DUP1 ISZERO PUSH2 0x87A JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x84F JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x87A JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x85D JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x6 DUP1 SLOAD PUSH2 0x895 SWAP1 PUSH2 0x17FD JUMP JUMPDEST ISZERO ISZERO SWAP1 POP PUSH2 0x8D5 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xD PUSH1 0x24 DUP3 ADD MSTORE PUSH13 0x456D7074792062617365555249 PUSH1 0x98 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x422 JUMP JUMPDEST PUSH1 0x6 DUP1 SLOAD PUSH2 0x34E SWAP1 PUSH2 0x17FD JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH2 0x930 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x15 PUSH1 0x24 DUP3 ADD MSTORE PUSH21 0x26B4B73A103A37903D32B9379030B2323932B9B997 PUSH1 0x59 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x422 JUMP JUMPDEST DUP3 MLOAD PUSH1 0x41 EQ PUSH2 0x97C JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x18 PUSH1 0x24 DUP3 ADD MSTORE PUSH24 0x92DCECC2D8D2C840E6D2CEDCC2E8EAE4CA40D8CADCCEE8D PUSH1 0x43 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x422 JUMP JUMPDEST PUSH2 0x986 DUP5 DUP5 PUSH2 0xA17 JUMP JUMPDEST PUSH2 0x9CE JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x19 PUSH1 0x24 DUP3 ADD MSTORE PUSH25 0x2430B9B4103737BA1039B4B3B732B210313C9037BBB732B917 PUSH1 0x39 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x422 JUMP JUMPDEST PUSH2 0x9D9 DUP6 DUP4 DUP4 PUSH2 0xFDC JUMP JUMPDEST POP PUSH1 0x40 MLOAD DUP3 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 AND SWAP1 PUSH32 0x79AF0E59B31823DD289CEEBABC4D63D25F35926B8548E3A084A500C9D4E18556 SWAP1 PUSH1 0x0 SWAP1 LOG3 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xA23 DUP4 DUP4 PUSH2 0xFF3 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x20 DUP2 DUP2 ADD MLOAD PUSH1 0x40 DUP1 DUP5 ADD MLOAD PUSH1 0x60 DUP1 DUP7 ADD MLOAD DUP4 MLOAD PUSH1 0x0 DUP1 DUP3 MSTORE DUP2 DUP9 ADD DUP1 DUP8 MSTORE DUP11 SWAP1 MSTORE SWAP2 DUP3 BYTE DUP2 DUP7 ADD DUP2 SWAP1 MSTORE SWAP3 DUP2 ADD DUP7 SWAP1 MSTORE PUSH1 0x80 DUP2 ADD DUP5 SWAP1 MSTORE SWAP4 MLOAD SWAP1 SWAP6 SWAP3 SWAP4 SWAP2 SWAP3 PUSH1 0x1 SWAP3 PUSH1 0xA0 DUP1 DUP3 ADD SWAP4 PUSH1 0x1F NOT DUP2 ADD SWAP3 DUP2 SWAP1 SUB SWAP1 SWAP2 ADD SWAP1 DUP6 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xA94 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP PUSH1 0x20 PUSH1 0x40 MLOAD SUB MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP8 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ SWAP4 POP POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH2 0xAC6 PUSH2 0xEDA JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0xB2B JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x646472657373 PUSH1 0xD0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x422 JUMP JUMPDEST PUSH2 0x5FD DUP2 PUSH2 0xF34 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0xB8C JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x17 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x517565727920666F72207A65726F20616464726573732E000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x422 JUMP JUMPDEST PUSH2 0xB95 DUP3 PUSH2 0xC48 JUMP JUMPDEST PUSH2 0xBD7 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x13 PUSH1 0x24 DUP3 ADD MSTORE PUSH19 0x2737B716B2BC34B9BA32B73A103A37B5B2B717 PUSH1 0x69 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x422 JUMP JUMPDEST DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0xBEA DUP4 PUSH2 0x600 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0xC40 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x546F6B656E206E6F74206F776E65642062792061646472657373000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x422 JUMP JUMPDEST POP ADDRESS SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND ISZERO ISZERO SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0xC70 DUP3 PUSH2 0xC48 JUMP JUMPDEST PUSH2 0xCB2 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x13 PUSH1 0x24 DUP3 ADD MSTORE PUSH19 0x2737B716B2BC34B9BA32B73A103A37B5B2B717 PUSH1 0x69 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x422 JUMP JUMPDEST DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0xCC5 DUP4 PUSH2 0x600 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0xD1B JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x546F6B656E206E6F74206F776E65642062792061646472657373000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x422 JUMP JUMPDEST PUSH2 0xD24 DUP3 PUSH2 0x1176 JUMP JUMPDEST POP PUSH1 0x1 SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x60 DUP2 PUSH2 0xD51 JUMPI POP POP PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD SWAP1 SWAP2 MSTORE PUSH1 0x1 DUP2 MSTORE PUSH1 0x3 PUSH1 0xFC SHL PUSH1 0x20 DUP3 ADD MSTORE SWAP1 JUMP JUMPDEST DUP2 PUSH1 0x0 JUMPDEST DUP2 ISZERO PUSH2 0xD7B JUMPI DUP1 PUSH2 0xD65 DUP2 PUSH2 0x187D JUMP JUMPDEST SWAP2 POP PUSH2 0xD74 SWAP1 POP PUSH1 0xA DUP4 PUSH2 0x18AE JUMP JUMPDEST SWAP2 POP PUSH2 0xD55 JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0xD96 JUMPI PUSH2 0xD96 PUSH2 0x1532 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x1F ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0xDC0 JUMPI PUSH1 0x20 DUP3 ADD DUP2 DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP JUMPDEST POP SWAP1 POP JUMPDEST DUP5 ISZERO PUSH2 0xE2B JUMPI PUSH2 0xDD5 PUSH1 0x1 DUP4 PUSH2 0x18C2 JUMP JUMPDEST SWAP2 POP PUSH2 0xDE2 PUSH1 0xA DUP7 PUSH2 0x18D9 JUMP JUMPDEST PUSH2 0xDED SWAP1 PUSH1 0x30 PUSH2 0x18ED JUMP JUMPDEST PUSH1 0xF8 SHL DUP2 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0xE02 JUMPI PUSH2 0xE02 PUSH2 0x1905 JUMP JUMPDEST PUSH1 0x20 ADD ADD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xF8 SHL SUB NOT AND SWAP1 DUP2 PUSH1 0x0 BYTE SWAP1 MSTORE8 POP PUSH2 0xE24 PUSH1 0xA DUP7 PUSH2 0x18AE JUMP JUMPDEST SWAP5 POP PUSH2 0xDC4 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xE3E DUP3 PUSH2 0x600 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD SWAP3 SWAP4 POP PUSH1 0x1 SWAP3 SWAP1 SWAP2 SWAP1 PUSH2 0xE6C SWAP1 DUP5 SWAP1 PUSH2 0x18C2 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND SWAP1 SSTORE PUSH1 0x3 SWAP1 SWAP2 MSTORE DUP2 KECCAK256 PUSH2 0xEA0 SWAP2 PUSH2 0x13D2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP3 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND SWAP1 PUSH32 0xEC9AB91322523C899EDE7830EC9BFC992B5981CDCC27B91162FB23DE5791117B SWAP1 PUSH1 0x0 SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x700 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x422 JUMP JUMPDEST PUSH1 0x5 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR SWAP1 SWAP4 SSTORE PUSH1 0x40 MLOAD SWAP2 AND SWAP2 SWAP1 DUP3 SWAP1 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP1 PUSH1 0x0 SWAP1 LOG3 POP POP JUMP JUMPDEST DUP1 MLOAD PUSH2 0xFC5 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xE PUSH1 0x24 DUP3 ADD MSTORE PUSH14 0x92DCECC2D8D2C840D8CADCCEE8D PUSH1 0x93 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x422 JUMP JUMPDEST DUP1 MLOAD PUSH2 0xFD8 SWAP1 PUSH1 0x6 SWAP1 PUSH1 0x20 DUP5 ADD SWAP1 PUSH2 0x140C JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xFE9 DUP5 DUP5 DUP5 PUSH2 0x120C JUMP JUMPDEST POP PUSH1 0x1 SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xFFD PUSH2 0xEDA JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x106B JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433732313A3A2043616C6C20746F20636F6E7472616374206D6164652062 PUSH1 0x44 DUP3 ADD MSTORE PUSH11 0x3C903737B716B7BBB732B9 PUSH1 0xA9 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x422 JUMP JUMPDEST DUP2 MLOAD PUSH1 0x41 EQ PUSH2 0x10BC JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1E PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4572723A3A20496E76616C6964207369676E6174757265206C656E6774680000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x422 JUMP JUMPDEST PUSH1 0x20 DUP3 DUP2 ADD MLOAD PUSH1 0x40 DUP1 DUP6 ADD MLOAD PUSH1 0x60 DUP1 DUP8 ADD MLOAD DUP4 MLOAD PUSH1 0x0 DUP1 DUP3 MSTORE SWAP7 DUP2 ADD DUP1 DUP7 MSTORE DUP11 SWAP1 MSTORE SWAP1 DUP7 BYTE SWAP4 DUP2 ADD DUP5 SWAP1 MSTORE SWAP1 DUP2 ADD DUP5 SWAP1 MSTORE PUSH1 0x80 DUP2 ADD DUP3 SWAP1 MSTORE SWAP3 SWAP4 SWAP1 SWAP3 PUSH1 0x1 SWAP1 PUSH1 0xA0 ADD PUSH1 0x20 PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 SUB SWAP1 DUP1 DUP5 SUB SWAP1 DUP6 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1120 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP PUSH1 0x40 MLOAD PUSH1 0x1F NOT DUP2 ADD MLOAD PUSH1 0x8 SLOAD SWAP1 SWAP4 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP6 AND SWAP2 AND EQ SWAP2 POP DUP2 SWAP1 DUP10 SWAP1 PUSH32 0x7E4FE2A2A805A357593FDBDDE58C02F6A53D8B4960744CD31A98697FC11C2E36 SWAP1 PUSH1 0x0 SWAP1 LOG3 SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0x117F DUP2 PUSH2 0xC48 JUMP JUMPDEST PUSH2 0x11CB JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x18 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4275726E206F6620696E6578697374656E7420746F6B656E0000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x422 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x11D6 DUP3 PUSH2 0x600 JUMP JUMPDEST SWAP1 POP PUSH2 0x11E1 DUP3 PUSH2 0xE33 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 DUP4 MSTORE SWAP3 SWAP1 MSTORE KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x125A JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x15 PUSH1 0x24 DUP3 ADD MSTORE PUSH21 0x26B4B73A103A37903D32B9379030B2323932B9B997 PUSH1 0x59 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x422 JUMP JUMPDEST DUP1 MLOAD PUSH2 0x129A JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xF PUSH1 0x24 DUP3 ADD MSTORE PUSH15 0x22B6B83A3C903A37B5B2B72AA92497 PUSH1 0x89 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x422 JUMP JUMPDEST PUSH2 0x12A5 DUP4 DUP4 DUP4 PUSH2 0x12D7 JUMP JUMPDEST POP POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 DUP4 MSTORE SWAP3 SWAP1 MSTORE KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x0 PUSH2 0x12E2 DUP4 PUSH2 0xC48 JUMP JUMPDEST ISZERO PUSH2 0x1326 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x14 PUSH1 0x24 DUP3 ADD MSTORE PUSH20 0x6D696E743A20746F6B656E494420657869737473 PUSH1 0x60 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x422 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD PUSH1 0x1 SWAP3 SWAP1 PUSH2 0x134F SWAP1 DUP5 SWAP1 PUSH2 0x18ED JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP10 AND OR SWAP1 SSTORE PUSH1 0x3 DUP3 MSTORE SWAP1 SWAP2 KECCAK256 DUP4 MLOAD PUSH2 0x1393 SWAP3 DUP6 ADD SWAP1 PUSH2 0x140C JUMP JUMPDEST POP PUSH1 0x40 MLOAD DUP4 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND SWAP1 PUSH32 0xE9274A84B19E9428826DE6BAE8C48329354F8F0E73F771B97CAE2D9DCCD45A27 SWAP1 PUSH1 0x0 SWAP1 LOG3 POP SWAP1 SWAP3 SWAP2 POP POP JUMP JUMPDEST POP DUP1 SLOAD PUSH2 0x13DE SWAP1 PUSH2 0x17FD JUMP JUMPDEST PUSH1 0x0 DUP3 SSTORE DUP1 PUSH1 0x1F LT PUSH2 0x13EE JUMPI POP POP JUMP JUMPDEST PUSH1 0x1F ADD PUSH1 0x20 SWAP1 DIV SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 DUP2 ADD SWAP1 PUSH2 0x5FD SWAP2 SWAP1 PUSH2 0x1490 JUMP JUMPDEST DUP3 DUP1 SLOAD PUSH2 0x1418 SWAP1 PUSH2 0x17FD JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x1F ADD PUSH1 0x20 SWAP1 DIV DUP2 ADD SWAP3 DUP3 PUSH2 0x143A JUMPI PUSH1 0x0 DUP6 SSTORE PUSH2 0x1480 JUMP JUMPDEST DUP3 PUSH1 0x1F LT PUSH2 0x1453 JUMPI DUP1 MLOAD PUSH1 0xFF NOT AND DUP4 DUP1 ADD OR DUP6 SSTORE PUSH2 0x1480 JUMP JUMPDEST DUP3 DUP1 ADD PUSH1 0x1 ADD DUP6 SSTORE DUP3 ISZERO PUSH2 0x1480 JUMPI SWAP2 DUP3 ADD JUMPDEST DUP3 DUP2 GT ISZERO PUSH2 0x1480 JUMPI DUP3 MLOAD DUP3 SSTORE SWAP2 PUSH1 0x20 ADD SWAP2 SWAP1 PUSH1 0x1 ADD SWAP1 PUSH2 0x1465 JUMP JUMPDEST POP PUSH2 0x148C SWAP3 SWAP2 POP PUSH2 0x1490 JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST JUMPDEST DUP1 DUP3 GT ISZERO PUSH2 0x148C JUMPI PUSH1 0x0 DUP2 SSTORE PUSH1 0x1 ADD PUSH2 0x1491 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x14B7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP2 AND DUP2 EQ PUSH2 0xA23 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x14EA JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x14D2 JUMP JUMPDEST DUP4 DUP2 GT ISZERO PUSH2 0x14F9 JUMPI PUSH1 0x0 DUP5 DUP5 ADD MSTORE JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH1 0x0 DUP3 MLOAD DUP1 PUSH1 0x20 DUP5 ADD MSTORE PUSH2 0x151E DUP2 PUSH1 0x40 DUP6 ADD PUSH1 0x20 DUP8 ADD PUSH2 0x14CF JUMP JUMPDEST PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP2 SWAP1 SWAP2 ADD PUSH1 0x40 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x1559 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x1574 JUMPI PUSH2 0x1574 PUSH2 0x1532 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1F DUP4 ADD PUSH1 0x1F NOT SWAP1 DUP2 AND PUSH1 0x3F ADD AND DUP2 ADD SWAP1 DUP3 DUP3 GT DUP2 DUP4 LT OR ISZERO PUSH2 0x159C JUMPI PUSH2 0x159C PUSH2 0x1532 JUMP JUMPDEST DUP2 PUSH1 0x40 MSTORE DUP4 DUP2 MSTORE DUP7 PUSH1 0x20 DUP6 DUP9 ADD ADD GT ISZERO PUSH2 0x15B5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP4 PUSH1 0x20 DUP8 ADD PUSH1 0x20 DUP4 ADD CALLDATACOPY PUSH1 0x0 PUSH1 0x20 DUP6 DUP4 ADD ADD MSTORE DUP1 SWAP5 POP POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x15EA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP4 CALLDATALOAD SWAP3 POP PUSH1 0x20 DUP5 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1608 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1614 DUP7 DUP3 DUP8 ADD PUSH2 0x1548 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 DUP5 ADD CALLDATALOAD SWAP1 POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1637 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x1655 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x166D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1676 DUP4 PUSH2 0x163E JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1696 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xA23 DUP3 PUSH2 0x163E JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x16B2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x16BB DUP4 PUSH2 0x163E JUMP JUMPDEST SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x16D7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x16E3 DUP6 DUP3 DUP7 ADD PUSH2 0x1548 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xA0 DUP7 DUP9 SUB SLT ISZERO PUSH2 0x1705 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x170E DUP7 PUSH2 0x163E JUMP JUMPDEST SWAP5 POP PUSH1 0x20 DUP7 ADD CALLDATALOAD SWAP4 POP PUSH1 0x40 DUP7 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x1732 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x173E DUP10 DUP4 DUP11 ADD PUSH2 0x1548 JUMP JUMPDEST SWAP5 POP PUSH1 0x60 DUP9 ADD CALLDATALOAD SWAP4 POP PUSH1 0x80 DUP9 ADD CALLDATALOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH2 0x175B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1768 DUP9 DUP3 DUP10 ADD PUSH2 0x1548 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 POP SWAP3 SWAP6 SWAP1 SWAP4 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1788 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x16D7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x17BB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x17C4 DUP5 PUSH2 0x163E JUMP JUMPDEST SWAP3 POP PUSH1 0x20 DUP5 ADD CALLDATALOAD SWAP2 POP PUSH1 0x40 DUP5 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x17E7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x17F3 DUP7 DUP3 DUP8 ADD PUSH2 0x1548 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0x1811 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 EQ ISZERO PUSH2 0x1832 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP4 MLOAD PUSH2 0x184A DUP2 DUP5 PUSH1 0x20 DUP9 ADD PUSH2 0x14CF JUMP JUMPDEST DUP4 MLOAD SWAP1 DUP4 ADD SWAP1 PUSH2 0x185E DUP2 DUP4 PUSH1 0x20 DUP9 ADD PUSH2 0x14CF JUMP JUMPDEST ADD SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x0 NOT DUP3 EQ ISZERO PUSH2 0x1891 JUMPI PUSH2 0x1891 PUSH2 0x1867 JUMP JUMPDEST POP PUSH1 0x1 ADD SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x18BD JUMPI PUSH2 0x18BD PUSH2 0x1898 JUMP JUMPDEST POP DIV SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 LT ISZERO PUSH2 0x18D4 JUMPI PUSH2 0x18D4 PUSH2 0x1867 JUMP JUMPDEST POP SUB SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x18E8 JUMPI PUSH2 0x18E8 PUSH2 0x1898 JUMP JUMPDEST POP MOD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 NOT DUP3 GT ISZERO PUSH2 0x1900 JUMPI PUSH2 0x1900 PUSH2 0x1867 JUMP JUMPDEST POP ADD SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH24 0xAEBB811D55E85810D6E72777E62F036AB0E026B8AD82B6D9 PUSH14 0x4DFC6745C47664736F6C63430008 0xC STOP CALLER ",
  "pcMap": {
    "0": {
      "offset": [
        820,
        7319
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x80"
    },
    "2": {
      "fn": null,
      "offset": [
        820,
        7319
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x40"
    },
    "4": {
      "fn": null,
      "offset": [
        820,
        7319
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "5": {
      "fn": null,
      "offset": [
        820,
        7319
      ],
      "op": "CALLVALUE",
      "path": "7"
    },
    "6": {
      "fn": null,
      "offset": [
        820,
        7319
      ],
      "op": "DUP1",
      "path": "7"
    },
    "7": {
      "fn": null,
      "offset": [
        820,
        7319
      ],
      "op": "ISZERO",
      "path": "7"
    },
    "8": {
      "fn": null,
      "offset": [
        820,
        7319
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x10"
    },
    "11": {
      "fn": null,
      "offset": [
        820,
        7319
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "12": {
      "fn": null,
      "offset": [
        820,
        7319
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x0"
    },
    "14": {
      "fn": null,
      "offset": [
        820,
        7319
      ],
      "op": "DUP1",
      "path": "7"
    },
    "15": {
      "dev": "Cannot send ether to nonpayable function",
      "fn": null,
      "offset": [
        820,
        7319
      ],
      "op": "REVERT",
      "path": "7"
    },
    "16": {
      "fn": null,
      "offset": [
        820,
        7319
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "17": {
      "fn": null,
      "offset": [
        820,
        7319
      ],
      "op": "POP",
      "path": "7"
    },
    "18": {
      "fn": null,
      "offset": [
        820,
        7319
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x4"
    },
    "20": {
      "fn": null,
      "offset": [
        820,
        7319
      ],
      "op": "CALLDATASIZE",
      "path": "7"
    },
    "21": {
      "fn": null,
      "offset": [
        820,
        7319
      ],
      "op": "LT",
      "path": "7"
    },
    "22": {
      "fn": null,
      "offset": [
        820,
        7319
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x12C"
    },
    "25": {
      "fn": null,
      "offset": [
        820,
        7319
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "26": {
      "fn": null,
      "offset": [
        820,
        7319
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x0"
    },
    "28": {
      "fn": null,
      "offset": [
        820,
        7319
      ],
      "op": "CALLDATALOAD",
      "path": "7"
    },
    "29": {
      "fn": null,
      "offset": [
        820,
        7319
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0xE0"
    },
    "31": {
      "fn": null,
      "offset": [
        820,
        7319
      ],
      "op": "SHR",
      "path": "7"
    },
    "32": {
      "fn": null,
      "offset": [
        820,
        7319
      ],
      "op": "DUP1",
      "path": "7"
    },
    "33": {
      "fn": null,
      "offset": [
        820,
        7319
      ],
      "op": "PUSH4",
      "path": "7",
      "value": "0x88433651"
    },
    "38": {
      "fn": null,
      "offset": [
        820,
        7319
      ],
      "op": "GT",
      "path": "7"
    },
    "39": {
      "fn": null,
      "offset": [
        820,
        7319
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0xAD"
    },
    "42": {
      "fn": null,
      "offset": [
        820,
        7319
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "43": {
      "fn": null,
      "offset": [
        820,
        7319
      ],
      "op": "DUP1",
      "path": "7"
    },
    "44": {
      "fn": null,
      "offset": [
        820,
        7319
      ],
      "op": "PUSH4",
      "path": "7",
      "value": "0xC9E4C54D"
    },
    "49": {
      "fn": null,
      "offset": [
        820,
        7319
      ],
      "op": "GT",
      "path": "7"
    },
    "50": {
      "fn": null,
      "offset": [
        820,
        7319
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x71"
    },
    "53": {
      "fn": null,
      "offset": [
        820,
        7319
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "54": {
      "fn": null,
      "offset": [
        820,
        7319
      ],
      "op": "DUP1",
      "path": "7"
    },
    "55": {
      "fn": null,
      "offset": [
        820,
        7319
      ],
      "op": "PUSH4",
      "path": "7",
      "value": "0xC9E4C54D"
    },
    "60": {
      "fn": null,
      "offset": [
        820,
        7319
      ],
      "op": "EQ",
      "path": "7"
    },
    "61": {
      "fn": null,
      "offset": [
        820,
        7319
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x28E"
    },
    "64": {
      "fn": null,
      "offset": [
        820,
        7319
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "65": {
      "fn": null,
      "offset": [
        820,
        7319
      ],
      "op": "DUP1",
      "path": "7"
    },
    "66": {
      "fn": null,
      "offset": [
        820,
        7319
      ],
      "op": "PUSH4",
      "path": "7",
      "value": "0xDACA6F78"
    },
    "71": {
      "fn": null,
      "offset": [
        820,
        7319
      ],
      "op": "EQ",
      "path": "7"
    },
    "72": {
      "fn": null,
      "offset": [
        820,
        7319
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x2A1"
    },
    "75": {
      "fn": null,
      "offset": [
        820,
        7319
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "76": {
      "fn": null,
      "offset": [
        820,
        7319
      ],
      "op": "DUP1",
      "path": "7"
    },
    "77": {
      "fn": null,
      "offset": [
        820,
        7319
      ],
      "op": "PUSH4",
      "path": "7",
      "value": "0xE92B0842"
    },
    "82": {
      "fn": null,
      "offset": [
        820,
        7319
      ],
      "op": "EQ",
      "path": "7"
    },
    "83": {
      "fn": null,
      "offset": [
        820,
        7319
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x2B4"
    },
    "86": {
      "fn": null,
      "offset": [
        820,
        7319
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "87": {
      "fn": null,
      "offset": [
        820,
        7319
      ],
      "op": "DUP1",
      "path": "7"
    },
    "88": {
      "fn": null,
      "offset": [
        820,
        7319
      ],
      "op": "PUSH4",
      "path": "7",
      "value": "0xF2FDE38B"
    },
    "93": {
      "fn": null,
      "offset": [
        820,
        7319
      ],
      "op": "EQ",
      "path": "7"
    },
    "94": {
      "fn": null,
      "offset": [
        820,
        7319
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x2C7"
    },
    "97": {
      "fn": null,
      "offset": [
        820,
        7319
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "98": {
      "fn": null,
      "offset": [
        820,
        7319
      ],
      "op": "DUP1",
      "path": "7"
    },
    "99": {
      "fn": null,
      "offset": [
        820,
        7319
      ],
      "op": "PUSH4",
      "path": "7",
      "value": "0xFB8F198D"
    },
    "104": {
      "fn": null,
      "offset": [
        820,
        7319
      ],
      "op": "EQ",
      "path": "7"
    },
    "105": {
      "fn": null,
      "offset": [
        820,
        7319
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x2DA"
    },
    "108": {
      "fn": null,
      "offset": [
        820,
        7319
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "109": {
      "fn": null,
      "offset": [
        820,
        7319
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x0"
    },
    "111": {
      "fn": null,
      "offset": [
        820,
        7319
      ],
      "op": "DUP1",
      "path": "7"
    },
    "112": {
      "fn": null,
      "offset": [
        820,
        7319
      ],
      "op": "REVERT",
      "path": "7"
    },
    "113": {
      "fn": null,
      "offset": [
        820,
        7319
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "114": {
      "fn": null,
      "offset": [
        820,
        7319
      ],
      "op": "DUP1",
      "path": "7"
    },
    "115": {
      "fn": null,
      "offset": [
        820,
        7319
      ],
      "op": "PUSH4",
      "path": "7",
      "value": "0x88433651"
    },
    "120": {
      "fn": null,
      "offset": [
        820,
        7319
      ],
      "op": "EQ",
      "path": "7"
    },
    "121": {
      "fn": null,
      "offset": [
        820,
        7319
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x247"
    },
    "124": {
      "fn": null,
      "offset": [
        820,
        7319
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "125": {
      "fn": null,
      "offset": [
        820,
        7319
      ],
      "op": "DUP1",
      "path": "7"
    },
    "126": {
      "fn": null,
      "offset": [
        820,
        7319
      ],
      "op": "PUSH4",
      "path": "7",
      "value": "0x8DA5CB5B"
    },
    "131": {
      "fn": null,
      "offset": [
        820,
        7319
      ],
      "op": "EQ",
      "path": "7"
    },
    "132": {
      "fn": null,
      "offset": [
        820,
        7319
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x25A"
    },
    "135": {
      "fn": null,
      "offset": [
        820,
        7319
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "136": {
      "fn": null,
      "offset": [
        820,
        7319
      ],
      "op": "DUP1",
      "path": "7"
    },
    "137": {
      "fn": null,
      "offset": [
        820,
        7319
      ],
      "op": "PUSH4",
      "path": "7",
      "value": "0x95D89B41"
    },
    "142": {
      "fn": null,
      "offset": [
        820,
        7319
      ],
      "op": "EQ",
      "path": "7"
    },
    "143": {
      "fn": null,
      "offset": [
        820,
        7319
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x26B"
    },
    "146": {
      "fn": null,
      "offset": [
        820,
        7319
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "147": {
      "fn": null,
      "offset": [
        820,
        7319
      ],
      "op": "DUP1",
      "path": "7"
    },
    "148": {
      "fn": null,
      "offset": [
        820,
        7319
      ],
      "op": "PUSH4",
      "path": "7",
      "value": "0xC87B56DD"
    },
    "153": {
      "fn": null,
      "offset": [
        820,
        7319
      ],
      "op": "EQ",
      "path": "7"
    },
    "154": {
      "fn": null,
      "offset": [
        820,
        7319
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x273"
    },
    "157": {
      "fn": null,
      "offset": [
        820,
        7319
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "158": {
      "fn": null,
      "offset": [
        820,
        7319
      ],
      "op": "DUP1",
      "path": "7"
    },
    "159": {
      "fn": null,
      "offset": [
        820,
        7319
      ],
      "op": "PUSH4",
      "path": "7",
      "value": "0xC9DD94C7"
    },
    "164": {
      "fn": null,
      "offset": [
        820,
        7319
      ],
      "op": "EQ",
      "path": "7"
    },
    "165": {
      "fn": null,
      "offset": [
        820,
        7319
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x286"
    },
    "168": {
      "fn": null,
      "offset": [
        820,
        7319
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "169": {
      "fn": null,
      "offset": [
        820,
        7319
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x0"
    },
    "171": {
      "fn": null,
      "offset": [
        820,
        7319
      ],
      "op": "DUP1",
      "path": "7"
    },
    "172": {
      "fn": null,
      "offset": [
        820,
        7319
      ],
      "op": "REVERT",
      "path": "7"
    },
    "173": {
      "fn": null,
      "offset": [
        820,
        7319
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "174": {
      "fn": null,
      "offset": [
        820,
        7319
      ],
      "op": "DUP1",
      "path": "7"
    },
    "175": {
      "fn": null,
      "offset": [
        820,
        7319
      ],
      "op": "PUSH4",
      "path": "7",
      "value": "0x5899E7B2"
    },
    "180": {
      "fn": null,
      "offset": [
        820,
        7319
      ],
      "op": "GT",
      "path": "7"
    },
    "181": {
      "fn": null,
      "offset": [
        820,
        7319
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0xF4"
    },
    "184": {
      "fn": null,
      "offset": [
        820,
        7319
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "185": {
      "fn": null,
      "offset": [
        820,
        7319
      ],
      "op": "DUP1",
      "path": "7"
    },
    "186": {
      "fn": null,
      "offset": [
        820,
        7319
      ],
      "op": "PUSH4",
      "path": "7",
      "value": "0x5899E7B2"
    },
    "191": {
      "fn": null,
      "offset": [
        820,
        7319
      ],
      "op": "EQ",
      "path": "7"
    },
    "192": {
      "fn": null,
      "offset": [
        820,
        7319
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x1A9"
    },
    "195": {
      "fn": null,
      "offset": [
        820,
        7319
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "196": {
      "fn": null,
      "offset": [
        820,
        7319
      ],
      "op": "DUP1",
      "path": "7"
    },
    "197": {
      "fn": null,
      "offset": [
        820,
        7319
      ],
      "op": "PUSH4",
      "path": "7",
      "value": "0x6352211E"
    },
    "202": {
      "fn": null,
      "offset": [
        820,
        7319
      ],
      "op": "EQ",
      "path": "7"
    },
    "203": {
      "fn": null,
      "offset": [
        820,
        7319
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x1E2"
    },
    "206": {
      "fn": null,
      "offset": [
        820,
        7319
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "207": {
      "fn": null,
      "offset": [
        820,
        7319
      ],
      "op": "DUP1",
      "path": "7"
    },
    "208": {
      "fn": null,
      "offset": [
        820,
        7319
      ],
      "op": "PUSH4",
      "path": "7",
      "value": "0x6E0A8746"
    },
    "213": {
      "fn": null,
      "offset": [
        820,
        7319
      ],
      "op": "EQ",
      "path": "7"
    },
    "214": {
      "fn": null,
      "offset": [
        820,
        7319
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x20D"
    },
    "217": {
      "fn": null,
      "offset": [
        820,
        7319
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "218": {
      "fn": null,
      "offset": [
        820,
        7319
      ],
      "op": "DUP1",
      "path": "7"
    },
    "219": {
      "fn": null,
      "offset": [
        820,
        7319
      ],
      "op": "PUSH4",
      "path": "7",
      "value": "0x70A08231"
    },
    "224": {
      "fn": null,
      "offset": [
        820,
        7319
      ],
      "op": "EQ",
      "path": "7"
    },
    "225": {
      "fn": null,
      "offset": [
        820,
        7319
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x21E"
    },
    "228": {
      "fn": null,
      "offset": [
        820,
        7319
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "229": {
      "fn": null,
      "offset": [
        820,
        7319
      ],
      "op": "DUP1",
      "path": "7"
    },
    "230": {
      "fn": null,
      "offset": [
        820,
        7319
      ],
      "op": "PUSH4",
      "path": "7",
      "value": "0x715018A6"
    },
    "235": {
      "fn": null,
      "offset": [
        820,
        7319
      ],
      "op": "EQ",
      "path": "7"
    },
    "236": {
      "fn": null,
      "offset": [
        820,
        7319
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x23F"
    },
    "239": {
      "fn": null,
      "offset": [
        820,
        7319
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "240": {
      "fn": null,
      "offset": [
        820,
        7319
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x0"
    },
    "242": {
      "fn": null,
      "offset": [
        820,
        7319
      ],
      "op": "DUP1",
      "path": "7"
    },
    "243": {
      "fn": null,
      "offset": [
        820,
        7319
      ],
      "op": "REVERT",
      "path": "7"
    },
    "244": {
      "fn": null,
      "offset": [
        820,
        7319
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "245": {
      "fn": null,
      "offset": [
        820,
        7319
      ],
      "op": "DUP1",
      "path": "7"
    },
    "246": {
      "fn": null,
      "offset": [
        820,
        7319
      ],
      "op": "PUSH4",
      "path": "7",
      "value": "0x1FFC9A7"
    },
    "251": {
      "fn": null,
      "offset": [
        820,
        7319
      ],
      "op": "EQ",
      "path": "7"
    },
    "252": {
      "fn": null,
      "offset": [
        820,
        7319
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x131"
    },
    "255": {
      "fn": null,
      "offset": [
        820,
        7319
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "256": {
      "fn": null,
      "offset": [
        820,
        7319
      ],
      "op": "DUP1",
      "path": "7"
    },
    "257": {
      "fn": null,
      "offset": [
        820,
        7319
      ],
      "op": "PUSH4",
      "path": "7",
      "value": "0x6FDDE03"
    },
    "262": {
      "fn": null,
      "offset": [
        820,
        7319
      ],
      "op": "EQ",
      "path": "7"
    },
    "263": {
      "fn": null,
      "offset": [
        820,
        7319
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x159"
    },
    "266": {
      "fn": null,
      "offset": [
        820,
        7319
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "267": {
      "fn": null,
      "offset": [
        820,
        7319
      ],
      "op": "DUP1",
      "path": "7"
    },
    "268": {
      "fn": null,
      "offset": [
        820,
        7319
      ],
      "op": "PUSH4",
      "path": "7",
      "value": "0x8C92E57"
    },
    "273": {
      "fn": null,
      "offset": [
        820,
        7319
      ],
      "op": "EQ",
      "path": "7"
    },
    "274": {
      "fn": null,
      "offset": [
        820,
        7319
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x16E"
    },
    "277": {
      "fn": null,
      "offset": [
        820,
        7319
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "278": {
      "fn": null,
      "offset": [
        820,
        7319
      ],
      "op": "DUP1",
      "path": "7"
    },
    "279": {
      "fn": null,
      "offset": [
        820,
        7319
      ],
      "op": "PUSH4",
      "path": "7",
      "value": "0x210FA96B"
    },
    "284": {
      "fn": null,
      "offset": [
        820,
        7319
      ],
      "op": "EQ",
      "path": "7"
    },
    "285": {
      "fn": null,
      "offset": [
        820,
        7319
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x183"
    },
    "288": {
      "fn": null,
      "offset": [
        820,
        7319
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "289": {
      "fn": null,
      "offset": [
        820,
        7319
      ],
      "op": "DUP1",
      "path": "7"
    },
    "290": {
      "fn": null,
      "offset": [
        820,
        7319
      ],
      "op": "PUSH4",
      "path": "7",
      "value": "0x42966C68"
    },
    "295": {
      "fn": null,
      "offset": [
        820,
        7319
      ],
      "op": "EQ",
      "path": "7"
    },
    "296": {
      "fn": null,
      "offset": [
        820,
        7319
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x196"
    },
    "299": {
      "fn": null,
      "offset": [
        820,
        7319
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "300": {
      "fn": null,
      "offset": [
        820,
        7319
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "301": {
      "fn": null,
      "offset": [
        820,
        7319
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x0"
    },
    "303": {
      "fn": null,
      "offset": [
        820,
        7319
      ],
      "op": "DUP1",
      "path": "7"
    },
    "304": {
      "first_revert": true,
      "fn": null,
      "offset": [
        820,
        7319
      ],
      "op": "REVERT",
      "path": "7"
    },
    "305": {
      "fn": "ERC4973.supportsInterface",
      "offset": [
        4293,
        4553
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "306": {
      "fn": "ERC4973.supportsInterface",
      "offset": [
        4293,
        4553
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x144"
    },
    "309": {
      "fn": "ERC4973.supportsInterface",
      "offset": [
        4293,
        4553
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x13F"
    },
    "312": {
      "fn": "ERC4973.supportsInterface",
      "offset": [
        4293,
        4553
      ],
      "op": "CALLDATASIZE",
      "path": "2"
    },
    "313": {
      "fn": "ERC4973.supportsInterface",
      "offset": [
        4293,
        4553
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "315": {
      "fn": "ERC4973.supportsInterface",
      "offset": [
        4293,
        4553
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x14A5"
    },
    "318": {
      "fn": "ERC4973.supportsInterface",
      "jump": "i",
      "offset": [
        4293,
        4553
      ],
      "op": "JUMP",
      "path": "2"
    },
    "319": {
      "fn": "ERC4973.supportsInterface",
      "offset": [
        4293,
        4553
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "320": {
      "fn": "ERC4973.supportsInterface",
      "offset": [
        4293,
        4553
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2ED"
    },
    "323": {
      "fn": "ERC4973.supportsInterface",
      "jump": "i",
      "offset": [
        4293,
        4553
      ],
      "op": "JUMP",
      "path": "2"
    },
    "324": {
      "fn": "ERC4973.supportsInterface",
      "offset": [
        4293,
        4553
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "325": {
      "fn": "ERC4973.supportsInterface",
      "offset": [
        4293,
        4553
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "327": {
      "fn": "ERC4973.supportsInterface",
      "offset": [
        4293,
        4553
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "328": {
      "op": "SWAP1"
    },
    "329": {
      "op": "ISZERO"
    },
    "330": {
      "op": "ISZERO"
    },
    "331": {
      "op": "DUP2"
    },
    "332": {
      "op": "MSTORE"
    },
    "333": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "335": {
      "op": "ADD"
    },
    "336": {
      "fn": "ERC4973.supportsInterface",
      "offset": [
        4293,
        4553
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "337": {
      "fn": "ERC4973.supportsInterface",
      "offset": [
        4293,
        4553
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "339": {
      "fn": "ERC4973.supportsInterface",
      "offset": [
        4293,
        4553
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "340": {
      "fn": "ERC4973.supportsInterface",
      "offset": [
        4293,
        4553
      ],
      "op": "DUP1",
      "path": "2"
    },
    "341": {
      "fn": "ERC4973.supportsInterface",
      "offset": [
        4293,
        4553
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "342": {
      "fn": "ERC4973.supportsInterface",
      "offset": [
        4293,
        4553
      ],
      "op": "SUB",
      "path": "2"
    },
    "343": {
      "fn": "ERC4973.supportsInterface",
      "offset": [
        4293,
        4553
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "344": {
      "fn": "ERC4973.supportsInterface",
      "offset": [
        4293,
        4553
      ],
      "op": "RETURN",
      "path": "2"
    },
    "345": {
      "fn": "ERC4973.name",
      "offset": [
        4557,
        4649
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "346": {
      "fn": "ERC4973.name",
      "offset": [
        4557,
        4649
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x161"
    },
    "349": {
      "fn": "ERC4973.name",
      "offset": [
        4557,
        4649
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x33F"
    },
    "352": {
      "fn": "ERC4973.name",
      "jump": "i",
      "offset": [
        4557,
        4649
      ],
      "op": "JUMP",
      "path": "2"
    },
    "353": {
      "fn": "ERC4973.name",
      "offset": [
        4557,
        4649
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "354": {
      "fn": "ERC4973.name",
      "offset": [
        4557,
        4649
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "356": {
      "fn": "ERC4973.name",
      "offset": [
        4557,
        4649
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "357": {
      "fn": "ERC4973.name",
      "offset": [
        4557,
        4649
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x150"
    },
    "360": {
      "fn": "ERC4973.name",
      "offset": [
        4557,
        4649
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "361": {
      "fn": "ERC4973.name",
      "offset": [
        4557,
        4649
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "362": {
      "fn": "ERC4973.name",
      "offset": [
        4557,
        4649
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x14FF"
    },
    "365": {
      "fn": "ERC4973.name",
      "jump": "i",
      "offset": [
        4557,
        4649
      ],
      "op": "JUMP",
      "path": "2"
    },
    "366": {
      "fn": "SoulboundCore.revokeWithSignature",
      "offset": [
        4229,
        5160
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "367": {
      "fn": "SoulboundCore.revokeWithSignature",
      "offset": [
        4229,
        5160
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x181"
    },
    "370": {
      "fn": "SoulboundCore.revokeWithSignature",
      "offset": [
        4229,
        5160
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x17C"
    },
    "373": {
      "fn": "SoulboundCore.revokeWithSignature",
      "offset": [
        4229,
        5160
      ],
      "op": "CALLDATASIZE",
      "path": "7"
    },
    "374": {
      "fn": "SoulboundCore.revokeWithSignature",
      "offset": [
        4229,
        5160
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x4"
    },
    "376": {
      "fn": "SoulboundCore.revokeWithSignature",
      "offset": [
        4229,
        5160
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x15D5"
    },
    "379": {
      "fn": "SoulboundCore.revokeWithSignature",
      "jump": "i",
      "offset": [
        4229,
        5160
      ],
      "op": "JUMP",
      "path": "7"
    },
    "380": {
      "fn": "SoulboundCore.revokeWithSignature",
      "offset": [
        4229,
        5160
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "381": {
      "fn": "SoulboundCore.revokeWithSignature",
      "offset": [
        4229,
        5160
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x3D1"
    },
    "384": {
      "fn": "SoulboundCore.revokeWithSignature",
      "jump": "i",
      "offset": [
        4229,
        5160
      ],
      "op": "JUMP",
      "path": "7"
    },
    "385": {
      "fn": "SoulboundCore.revokeWithSignature",
      "offset": [
        4229,
        5160
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "386": {
      "fn": "SoulboundCore.revokeWithSignature",
      "offset": [
        4229,
        5160
      ],
      "op": "STOP",
      "path": "7"
    },
    "387": {
      "fn": "SoulboundCore.generateTokenURI",
      "offset": [
        6072,
        6477
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "388": {
      "fn": "SoulboundCore.generateTokenURI",
      "offset": [
        6072,
        6477
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x161"
    },
    "391": {
      "fn": "SoulboundCore.generateTokenURI",
      "offset": [
        6072,
        6477
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x191"
    },
    "394": {
      "fn": "SoulboundCore.generateTokenURI",
      "offset": [
        6072,
        6477
      ],
      "op": "CALLDATASIZE",
      "path": "7"
    },
    "395": {
      "fn": "SoulboundCore.generateTokenURI",
      "offset": [
        6072,
        6477
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x4"
    },
    "397": {
      "fn": "SoulboundCore.generateTokenURI",
      "offset": [
        6072,
        6477
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x1625"
    },
    "400": {
      "fn": "SoulboundCore.generateTokenURI",
      "jump": "i",
      "offset": [
        6072,
        6477
      ],
      "op": "JUMP",
      "path": "7"
    },
    "401": {
      "fn": "SoulboundCore.generateTokenURI",
      "offset": [
        6072,
        6477
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "402": {
      "fn": "SoulboundCore.generateTokenURI",
      "offset": [
        6072,
        6477
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x50C"
    },
    "405": {
      "fn": "SoulboundCore.generateTokenURI",
      "jump": "i",
      "offset": [
        6072,
        6477
      ],
      "op": "JUMP",
      "path": "7"
    },
    "406": {
      "fn": "ERC4973.burn",
      "offset": [
        4946,
        5101
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "407": {
      "fn": "ERC4973.burn",
      "offset": [
        4946,
        5101
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x181"
    },
    "410": {
      "fn": "ERC4973.burn",
      "offset": [
        4946,
        5101
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1A4"
    },
    "413": {
      "fn": "ERC4973.burn",
      "offset": [
        4946,
        5101
      ],
      "op": "CALLDATASIZE",
      "path": "2"
    },
    "414": {
      "fn": "ERC4973.burn",
      "offset": [
        4946,
        5101
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "416": {
      "fn": "ERC4973.burn",
      "offset": [
        4946,
        5101
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1625"
    },
    "419": {
      "fn": "ERC4973.burn",
      "jump": "i",
      "offset": [
        4946,
        5101
      ],
      "op": "JUMP",
      "path": "2"
    },
    "420": {
      "fn": "ERC4973.burn",
      "offset": [
        4946,
        5101
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "421": {
      "fn": "ERC4973.burn",
      "offset": [
        4946,
        5101
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x58B"
    },
    "424": {
      "fn": "ERC4973.burn",
      "jump": "i",
      "offset": [
        4946,
        5101
      ],
      "op": "JUMP",
      "path": "2"
    },
    "425": {
      "fn": "Soulbound.isMinted",
      "offset": [
        5171,
        5313
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "426": {
      "fn": "Soulbound.isMinted",
      "offset": [
        5171,
        5313
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x144"
    },
    "429": {
      "fn": "Soulbound.isMinted",
      "offset": [
        5171,
        5313
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x1B7"
    },
    "432": {
      "fn": "Soulbound.isMinted",
      "offset": [
        5171,
        5313
      ],
      "op": "CALLDATASIZE",
      "path": "6"
    },
    "433": {
      "fn": "Soulbound.isMinted",
      "offset": [
        5171,
        5313
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x4"
    },
    "435": {
      "fn": "Soulbound.isMinted",
      "offset": [
        5171,
        5313
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x165A"
    },
    "438": {
      "fn": "Soulbound.isMinted",
      "jump": "i",
      "offset": [
        5171,
        5313
      ],
      "op": "JUMP",
      "path": "6"
    },
    "439": {
      "fn": "Soulbound.isMinted",
      "offset": [
        5171,
        5313
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "440": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "442": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "444": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "446": {
      "op": "SHL"
    },
    "447": {
      "op": "SUB"
    },
    "448": {
      "fn": "Soulbound.isMinted",
      "offset": [
        5286,
        5296
      ],
      "op": "SWAP2",
      "path": "6",
      "statement": 0
    },
    "449": {
      "fn": "Soulbound.isMinted",
      "offset": [
        5286,
        5296
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "450": {
      "fn": "Soulbound.isMinted",
      "offset": [
        5286,
        5296
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "451": {
      "fn": "Soulbound.isMinted",
      "offset": [
        5286,
        5296
      ],
      "op": "AND",
      "path": "6"
    },
    "452": {
      "fn": "Soulbound.isMinted",
      "offset": [
        5263,
        5267
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "454": {
      "fn": "Soulbound.isMinted",
      "offset": [
        5286,
        5296
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "455": {
      "fn": "Soulbound.isMinted",
      "offset": [
        5286,
        5296
      ],
      "op": "DUP2",
      "path": "6"
    },
    "456": {
      "fn": "Soulbound.isMinted",
      "offset": [
        5286,
        5296
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "457": {
      "fn": "Soulbound.isMinted",
      "offset": [
        5286,
        5291
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x7"
    },
    "459": {
      "fn": "Soulbound.isMinted",
      "offset": [
        5286,
        5296
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x20"
    },
    "461": {
      "fn": "Soulbound.isMinted",
      "offset": [
        5286,
        5296
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "462": {
      "fn": "Soulbound.isMinted",
      "offset": [
        5286,
        5296
      ],
      "op": "DUP2",
      "path": "6"
    },
    "463": {
      "fn": "Soulbound.isMinted",
      "offset": [
        5286,
        5296
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "464": {
      "fn": "Soulbound.isMinted",
      "offset": [
        5286,
        5296
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "466": {
      "fn": "Soulbound.isMinted",
      "offset": [
        5286,
        5296
      ],
      "op": "DUP1",
      "path": "6"
    },
    "467": {
      "fn": "Soulbound.isMinted",
      "offset": [
        5286,
        5296
      ],
      "op": "DUP4",
      "path": "6"
    },
    "468": {
      "fn": "Soulbound.isMinted",
      "offset": [
        5286,
        5296
      ],
      "op": "KECCAK256",
      "path": "6"
    },
    "469": {
      "fn": "Soulbound.isMinted",
      "offset": [
        5286,
        5306
      ],
      "op": "SWAP4",
      "path": "6"
    },
    "470": {
      "fn": "Soulbound.isMinted",
      "offset": [
        5286,
        5306
      ],
      "op": "DUP4",
      "path": "6"
    },
    "471": {
      "fn": "Soulbound.isMinted",
      "offset": [
        5286,
        5306
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "472": {
      "fn": "Soulbound.isMinted",
      "offset": [
        5286,
        5306
      ],
      "op": "SWAP3",
      "path": "6"
    },
    "473": {
      "fn": "Soulbound.isMinted",
      "offset": [
        5286,
        5306
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "474": {
      "fn": "Soulbound.isMinted",
      "offset": [
        5286,
        5306
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "475": {
      "fn": "Soulbound.isMinted",
      "offset": [
        5286,
        5306
      ],
      "op": "KECCAK256",
      "path": "6"
    },
    "476": {
      "fn": "Soulbound.isMinted",
      "offset": [
        5286,
        5306
      ],
      "op": "SLOAD",
      "path": "6"
    },
    "477": {
      "fn": "Soulbound.isMinted",
      "offset": [
        5286,
        5306
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0xFF"
    },
    "479": {
      "fn": "Soulbound.isMinted",
      "offset": [
        5286,
        5306
      ],
      "op": "AND",
      "path": "6"
    },
    "480": {
      "fn": "Soulbound.isMinted",
      "offset": [
        5286,
        5306
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "481": {
      "fn": "Soulbound.isMinted",
      "offset": [
        5171,
        5313
      ],
      "op": "JUMP",
      "path": "6"
    },
    "482": {
      "fn": "ERC4973.ownerOf",
      "offset": [
        5306,
        5505
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "483": {
      "fn": "ERC4973.ownerOf",
      "offset": [
        5306,
        5505
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1F5"
    },
    "486": {
      "fn": "ERC4973.ownerOf",
      "offset": [
        5306,
        5505
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1F0"
    },
    "489": {
      "fn": "ERC4973.ownerOf",
      "offset": [
        5306,
        5505
      ],
      "op": "CALLDATASIZE",
      "path": "2"
    },
    "490": {
      "fn": "ERC4973.ownerOf",
      "offset": [
        5306,
        5505
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "492": {
      "fn": "ERC4973.ownerOf",
      "offset": [
        5306,
        5505
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1625"
    },
    "495": {
      "fn": "ERC4973.ownerOf",
      "jump": "i",
      "offset": [
        5306,
        5505
      ],
      "op": "JUMP",
      "path": "2"
    },
    "496": {
      "fn": "ERC4973.ownerOf",
      "offset": [
        5306,
        5505
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "497": {
      "fn": "ERC4973.ownerOf",
      "offset": [
        5306,
        5505
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x600"
    },
    "500": {
      "fn": "ERC4973.ownerOf",
      "jump": "i",
      "offset": [
        5306,
        5505
      ],
      "op": "JUMP",
      "path": "2"
    },
    "501": {
      "fn": "ERC4973.ownerOf",
      "offset": [
        5306,
        5505
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "502": {
      "fn": "ERC4973.ownerOf",
      "offset": [
        5306,
        5505
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "504": {
      "fn": "ERC4973.ownerOf",
      "offset": [
        5306,
        5505
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "505": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "507": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "509": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "511": {
      "op": "SHL"
    },
    "512": {
      "op": "SUB"
    },
    "513": {
      "op": "SWAP1"
    },
    "514": {
      "op": "SWAP2"
    },
    "515": {
      "op": "AND"
    },
    "516": {
      "op": "DUP2"
    },
    "517": {
      "op": "MSTORE"
    },
    "518": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "520": {
      "op": "ADD"
    },
    "521": {
      "fn": "ERC4973.ownerOf",
      "offset": [
        5306,
        5505
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x150"
    },
    "524": {
      "op": "JUMP"
    },
    "525": {
      "fn": "Allowlist.getAllowlistOwner",
      "offset": [
        2028,
        2124
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "526": {
      "fn": "Allowlist.getAllowlistOwner",
      "offset": [
        2103,
        2117
      ],
      "op": "PUSH1",
      "path": "3",
      "statement": 1,
      "value": "0x8"
    },
    "528": {
      "fn": "Allowlist.getAllowlistOwner",
      "offset": [
        2103,
        2117
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "529": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "531": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "533": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "535": {
      "op": "SHL"
    },
    "536": {
      "op": "SUB"
    },
    "537": {
      "fn": "Allowlist.getAllowlistOwner",
      "offset": [
        2103,
        2117
      ],
      "op": "AND",
      "path": "3"
    },
    "538": {
      "fn": "Allowlist.getAllowlistOwner",
      "offset": [
        2028,
        2124
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x1F5"
    },
    "541": {
      "fn": "Allowlist.getAllowlistOwner",
      "offset": [
        2028,
        2124
      ],
      "op": "JUMP",
      "path": "3"
    },
    "542": {
      "fn": "ERC4973.balanceOf",
      "offset": [
        5105,
        5302
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "543": {
      "fn": "ERC4973.balanceOf",
      "offset": [
        5105,
        5302
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x231"
    },
    "546": {
      "fn": "ERC4973.balanceOf",
      "offset": [
        5105,
        5302
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x22C"
    },
    "549": {
      "fn": "ERC4973.balanceOf",
      "offset": [
        5105,
        5302
      ],
      "op": "CALLDATASIZE",
      "path": "2"
    },
    "550": {
      "fn": "ERC4973.balanceOf",
      "offset": [
        5105,
        5302
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "552": {
      "fn": "ERC4973.balanceOf",
      "offset": [
        5105,
        5302
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1684"
    },
    "555": {
      "fn": "ERC4973.balanceOf",
      "jump": "i",
      "offset": [
        5105,
        5302
      ],
      "op": "JUMP",
      "path": "2"
    },
    "556": {
      "fn": "ERC4973.balanceOf",
      "offset": [
        5105,
        5302
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "557": {
      "fn": "ERC4973.balanceOf",
      "offset": [
        5105,
        5302
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x665"
    },
    "560": {
      "fn": "ERC4973.balanceOf",
      "jump": "i",
      "offset": [
        5105,
        5302
      ],
      "op": "JUMP",
      "path": "2"
    },
    "561": {
      "fn": "ERC4973.balanceOf",
      "offset": [
        5105,
        5302
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "562": {
      "fn": "ERC4973.balanceOf",
      "offset": [
        5105,
        5302
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "564": {
      "fn": "ERC4973.balanceOf",
      "offset": [
        5105,
        5302
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "565": {
      "op": "SWAP1"
    },
    "566": {
      "op": "DUP2"
    },
    "567": {
      "op": "MSTORE"
    },
    "568": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "570": {
      "op": "ADD"
    },
    "571": {
      "fn": "ERC4973.balanceOf",
      "offset": [
        5105,
        5302
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x150"
    },
    "574": {
      "op": "JUMP"
    },
    "575": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        2147,
        2248
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "576": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        2147,
        2248
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x181"
    },
    "579": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        2147,
        2248
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x6EE"
    },
    "582": {
      "fn": "Ownable.renounceOwnership",
      "jump": "i",
      "offset": [
        2147,
        2248
      ],
      "op": "JUMP",
      "path": "5"
    },
    "583": {
      "fn": "SoulboundCore.setBaseURI",
      "offset": [
        5491,
        5682
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "584": {
      "fn": "SoulboundCore.setBaseURI",
      "offset": [
        5491,
        5682
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x181"
    },
    "587": {
      "fn": "SoulboundCore.setBaseURI",
      "offset": [
        5491,
        5682
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x255"
    },
    "590": {
      "fn": "SoulboundCore.setBaseURI",
      "offset": [
        5491,
        5682
      ],
      "op": "CALLDATASIZE",
      "path": "7"
    },
    "591": {
      "fn": "SoulboundCore.setBaseURI",
      "offset": [
        5491,
        5682
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x4"
    },
    "593": {
      "fn": "SoulboundCore.setBaseURI",
      "offset": [
        5491,
        5682
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x169F"
    },
    "596": {
      "fn": "SoulboundCore.setBaseURI",
      "jump": "i",
      "offset": [
        5491,
        5682
      ],
      "op": "JUMP",
      "path": "7"
    },
    "597": {
      "fn": "SoulboundCore.setBaseURI",
      "offset": [
        5491,
        5682
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "598": {
      "fn": "SoulboundCore.setBaseURI",
      "offset": [
        5491,
        5682
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x702"
    },
    "601": {
      "fn": "SoulboundCore.setBaseURI",
      "jump": "i",
      "offset": [
        5491,
        5682
      ],
      "op": "JUMP",
      "path": "7"
    },
    "602": {
      "fn": "Ownable.owner",
      "offset": [
        1506,
        1591
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "603": {
      "fn": "Ownable.owner",
      "offset": [
        1578,
        1584
      ],
      "op": "PUSH1",
      "path": "5",
      "statement": 2,
      "value": "0x5"
    },
    "605": {
      "fn": "Ownable.owner",
      "offset": [
        1578,
        1584
      ],
      "op": "SLOAD",
      "path": "5"
    },
    "606": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "608": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "610": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "612": {
      "op": "SHL"
    },
    "613": {
      "op": "SUB"
    },
    "614": {
      "fn": "Ownable.owner",
      "offset": [
        1578,
        1584
      ],
      "op": "AND",
      "path": "5"
    },
    "615": {
      "fn": "Ownable.owner",
      "offset": [
        1506,
        1591
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x1F5"
    },
    "618": {
      "fn": "Ownable.owner",
      "offset": [
        1506,
        1591
      ],
      "op": "JUMP",
      "path": "5"
    },
    "619": {
      "fn": "ERC4973.symbol",
      "offset": [
        4653,
        4749
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "620": {
      "fn": "ERC4973.symbol",
      "offset": [
        4653,
        4749
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x161"
    },
    "623": {
      "fn": "ERC4973.symbol",
      "offset": [
        4653,
        4749
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x782"
    },
    "626": {
      "fn": "ERC4973.symbol",
      "jump": "i",
      "offset": [
        4653,
        4749
      ],
      "op": "JUMP",
      "path": "2"
    },
    "627": {
      "fn": "ERC4973.tokenURI",
      "offset": [
        4753,
        4942
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "628": {
      "fn": "ERC4973.tokenURI",
      "offset": [
        4753,
        4942
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x161"
    },
    "631": {
      "fn": "ERC4973.tokenURI",
      "offset": [
        4753,
        4942
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x281"
    },
    "634": {
      "fn": "ERC4973.tokenURI",
      "offset": [
        4753,
        4942
      ],
      "op": "CALLDATASIZE",
      "path": "2"
    },
    "635": {
      "fn": "ERC4973.tokenURI",
      "offset": [
        4753,
        4942
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "637": {
      "fn": "ERC4973.tokenURI",
      "offset": [
        4753,
        4942
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1625"
    },
    "640": {
      "fn": "ERC4973.tokenURI",
      "jump": "i",
      "offset": [
        4753,
        4942
      ],
      "op": "JUMP",
      "path": "2"
    },
    "641": {
      "fn": "ERC4973.tokenURI",
      "offset": [
        4753,
        4942
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "642": {
      "fn": "ERC4973.tokenURI",
      "offset": [
        4753,
        4942
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x791"
    },
    "645": {
      "fn": "ERC4973.tokenURI",
      "jump": "i",
      "offset": [
        4753,
        4942
      ],
      "op": "JUMP",
      "path": "2"
    },
    "646": {
      "fn": "Soulbound._getBaseURI",
      "offset": [
        7349,
        7596
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "647": {
      "fn": "Soulbound._getBaseURI",
      "offset": [
        7349,
        7596
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x161"
    },
    "650": {
      "fn": "Soulbound._getBaseURI",
      "offset": [
        7349,
        7596
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x886"
    },
    "653": {
      "fn": "Soulbound._getBaseURI",
      "jump": "i",
      "offset": [
        7349,
        7596
      ],
      "op": "JUMP",
      "path": "6"
    },
    "654": {
      "fn": "SoulboundCore.issueWithSignature",
      "offset": [
        2769,
        3767
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "655": {
      "fn": "SoulboundCore.issueWithSignature",
      "offset": [
        2769,
        3767
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x181"
    },
    "658": {
      "fn": "SoulboundCore.issueWithSignature",
      "offset": [
        2769,
        3767
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x29C"
    },
    "661": {
      "fn": "SoulboundCore.issueWithSignature",
      "offset": [
        2769,
        3767
      ],
      "op": "CALLDATASIZE",
      "path": "7"
    },
    "662": {
      "fn": "SoulboundCore.issueWithSignature",
      "offset": [
        2769,
        3767
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x4"
    },
    "664": {
      "fn": "SoulboundCore.issueWithSignature",
      "offset": [
        2769,
        3767
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x16ED"
    },
    "667": {
      "fn": "SoulboundCore.issueWithSignature",
      "jump": "i",
      "offset": [
        2769,
        3767
      ],
      "op": "JUMP",
      "path": "7"
    },
    "668": {
      "fn": "SoulboundCore.issueWithSignature",
      "offset": [
        2769,
        3767
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "669": {
      "fn": "SoulboundCore.issueWithSignature",
      "offset": [
        2769,
        3767
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x8E2"
    },
    "672": {
      "fn": "SoulboundCore.issueWithSignature",
      "jump": "i",
      "offset": [
        2769,
        3767
      ],
      "op": "JUMP",
      "path": "7"
    },
    "673": {
      "fn": "Allowlist.verifySignature",
      "offset": [
        2344,
        2487
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "674": {
      "fn": "Allowlist.verifySignature",
      "offset": [
        2344,
        2487
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x144"
    },
    "677": {
      "fn": "Allowlist.verifySignature",
      "offset": [
        2344,
        2487
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x2AF"
    },
    "680": {
      "fn": "Allowlist.verifySignature",
      "offset": [
        2344,
        2487
      ],
      "op": "CALLDATASIZE",
      "path": "3"
    },
    "681": {
      "fn": "Allowlist.verifySignature",
      "offset": [
        2344,
        2487
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x4"
    },
    "683": {
      "fn": "Allowlist.verifySignature",
      "offset": [
        2344,
        2487
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x1775"
    },
    "686": {
      "fn": "Allowlist.verifySignature",
      "jump": "i",
      "offset": [
        2344,
        2487
      ],
      "op": "JUMP",
      "path": "3"
    },
    "687": {
      "fn": "Allowlist.verifySignature",
      "offset": [
        2344,
        2487
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "688": {
      "fn": "Allowlist.verifySignature",
      "offset": [
        2344,
        2487
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xA17"
    },
    "691": {
      "fn": "Allowlist.verifySignature",
      "jump": "i",
      "offset": [
        2344,
        2487
      ],
      "op": "JUMP",
      "path": "3"
    },
    "692": {
      "fn": "Allowlist.verifySigner",
      "offset": [
        4659,
        4927
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "693": {
      "fn": "Allowlist.verifySigner",
      "offset": [
        4659,
        4927
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x144"
    },
    "696": {
      "fn": "Allowlist.verifySigner",
      "offset": [
        4659,
        4927
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x2C2"
    },
    "699": {
      "fn": "Allowlist.verifySigner",
      "offset": [
        4659,
        4927
      ],
      "op": "CALLDATASIZE",
      "path": "3"
    },
    "700": {
      "fn": "Allowlist.verifySigner",
      "offset": [
        4659,
        4927
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x4"
    },
    "702": {
      "fn": "Allowlist.verifySigner",
      "offset": [
        4659,
        4927
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x17A6"
    },
    "705": {
      "fn": "Allowlist.verifySigner",
      "jump": "i",
      "offset": [
        4659,
        4927
      ],
      "op": "JUMP",
      "path": "3"
    },
    "706": {
      "fn": "Allowlist.verifySigner",
      "offset": [
        4659,
        4927
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "707": {
      "fn": "Allowlist.verifySigner",
      "offset": [
        4659,
        4927
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xA2A"
    },
    "710": {
      "fn": "Allowlist.verifySigner",
      "jump": "i",
      "offset": [
        4659,
        4927
      ],
      "op": "JUMP",
      "path": "3"
    },
    "711": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2401,
        2599
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "712": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2401,
        2599
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x181"
    },
    "715": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2401,
        2599
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x2D5"
    },
    "718": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2401,
        2599
      ],
      "op": "CALLDATASIZE",
      "path": "5"
    },
    "719": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2401,
        2599
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x4"
    },
    "721": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2401,
        2599
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x1684"
    },
    "724": {
      "fn": "Ownable.transferOwnership",
      "jump": "i",
      "offset": [
        2401,
        2599
      ],
      "op": "JUMP",
      "path": "5"
    },
    "725": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2401,
        2599
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "726": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2401,
        2599
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0xABE"
    },
    "729": {
      "fn": "Ownable.transferOwnership",
      "jump": "i",
      "offset": [
        2401,
        2599
      ],
      "op": "JUMP",
      "path": "5"
    },
    "730": {
      "fn": "Soulbound.issuerOf",
      "offset": [
        4288,
        4779
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "731": {
      "fn": "Soulbound.issuerOf",
      "offset": [
        4288,
        4779
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x1F5"
    },
    "734": {
      "fn": "Soulbound.issuerOf",
      "offset": [
        4288,
        4779
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x2E8"
    },
    "737": {
      "fn": "Soulbound.issuerOf",
      "offset": [
        4288,
        4779
      ],
      "op": "CALLDATASIZE",
      "path": "6"
    },
    "738": {
      "fn": "Soulbound.issuerOf",
      "offset": [
        4288,
        4779
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x4"
    },
    "740": {
      "fn": "Soulbound.issuerOf",
      "offset": [
        4288,
        4779
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x165A"
    },
    "743": {
      "fn": "Soulbound.issuerOf",
      "jump": "i",
      "offset": [
        4288,
        4779
      ],
      "op": "JUMP",
      "path": "6"
    },
    "744": {
      "fn": "Soulbound.issuerOf",
      "offset": [
        4288,
        4779
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "745": {
      "fn": "Soulbound.issuerOf",
      "offset": [
        4288,
        4779
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0xB34"
    },
    "748": {
      "fn": "Soulbound.issuerOf",
      "jump": "i",
      "offset": [
        4288,
        4779
      ],
      "op": "JUMP",
      "path": "6"
    },
    "749": {
      "fn": "ERC4973.supportsInterface",
      "offset": [
        4293,
        4553
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "750": {
      "fn": "ERC4973.supportsInterface",
      "offset": [
        4378,
        4382
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "752": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "754": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "756": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "758": {
      "op": "SHL"
    },
    "759": {
      "op": "SUB"
    },
    "760": {
      "op": "NOT"
    },
    "761": {
      "fn": "ERC4973.supportsInterface",
      "offset": [
        4403,
        4451
      ],
      "op": "DUP3",
      "path": "2",
      "statement": 3
    },
    "762": {
      "fn": "ERC4973.supportsInterface",
      "offset": [
        4403,
        4451
      ],
      "op": "AND",
      "path": "2"
    },
    "763": {
      "op": "PUSH4",
      "value": "0x5B5E139F"
    },
    "768": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "770": {
      "op": "SHL"
    },
    "771": {
      "fn": "ERC4973.supportsInterface",
      "offset": [
        4403,
        4451
      ],
      "op": "EQ",
      "path": "2"
    },
    "772": {
      "fn": "ERC4973.supportsInterface",
      "offset": [
        4403,
        4451
      ],
      "op": "DUP1",
      "path": "2"
    },
    "773": {
      "fn": "ERC4973.supportsInterface",
      "offset": [
        4403,
        4502
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x31E"
    },
    "776": {
      "fn": "ERC4973.supportsInterface",
      "offset": [
        4403,
        4502
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "777": {
      "op": "POP"
    },
    "778": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "780": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "782": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "784": {
      "op": "SHL"
    },
    "785": {
      "op": "SUB"
    },
    "786": {
      "op": "NOT"
    },
    "787": {
      "fn": "ERC4973.supportsInterface",
      "offset": [
        4461,
        4502
      ],
      "op": "DUP3",
      "path": "2"
    },
    "788": {
      "fn": "ERC4973.supportsInterface",
      "offset": [
        4461,
        4502
      ],
      "op": "AND",
      "path": "2"
    },
    "789": {
      "op": "PUSH4",
      "value": "0x5164CF47"
    },
    "794": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "796": {
      "op": "SHL"
    },
    "797": {
      "fn": "ERC4973.supportsInterface",
      "offset": [
        4461,
        4502
      ],
      "op": "EQ",
      "path": "2"
    },
    "798": {
      "fn": "ERC4973.supportsInterface",
      "offset": [
        4403,
        4502
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "799": {
      "fn": "ERC4973.supportsInterface",
      "offset": [
        4403,
        4548
      ],
      "op": "DUP1",
      "path": "2"
    },
    "800": {
      "fn": "ERC4973.supportsInterface",
      "offset": [
        4403,
        4548
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x339"
    },
    "803": {
      "fn": "ERC4973.supportsInterface",
      "offset": [
        4403,
        4548
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "804": {
      "op": "POP"
    },
    "805": {
      "op": "PUSH4",
      "value": "0x1FFC9A7"
    },
    "810": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "812": {
      "op": "SHL"
    },
    "813": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "815": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "817": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "819": {
      "op": "SHL"
    },
    "820": {
      "op": "SUB"
    },
    "821": {
      "op": "NOT"
    },
    "822": {
      "fn": "ERC165.supportsInterface",
      "offset": [
        1685,
        1725
      ],
      "op": "DUP4",
      "path": "2",
      "statement": 4
    },
    "823": {
      "fn": "ERC165.supportsInterface",
      "offset": [
        1685,
        1725
      ],
      "op": "AND",
      "path": "2"
    },
    "824": {
      "fn": "ERC165.supportsInterface",
      "offset": [
        1685,
        1725
      ],
      "op": "EQ",
      "path": "2"
    },
    "825": {
      "fn": "ERC4973.supportsInterface",
      "offset": [
        4512,
        4548
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "826": {
      "fn": "ERC4973.supportsInterface",
      "offset": [
        4390,
        4548
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "827": {
      "fn": "ERC4973.supportsInterface",
      "offset": [
        4293,
        4553
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "828": {
      "op": "POP"
    },
    "829": {
      "op": "POP"
    },
    "830": {
      "fn": "ERC4973.supportsInterface",
      "jump": "o",
      "offset": [
        4293,
        4553
      ],
      "op": "JUMP",
      "path": "2"
    },
    "831": {
      "fn": "ERC4973.name",
      "offset": [
        4557,
        4649
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "832": {
      "fn": "ERC4973.name",
      "offset": [
        4611,
        4624
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x60"
    },
    "834": {
      "fn": "ERC4973.name",
      "offset": [
        4639,
        4644
      ],
      "op": "PUSH1",
      "path": "2",
      "statement": 5,
      "value": "0x0"
    },
    "836": {
      "fn": "ERC4973.name",
      "offset": [
        4632,
        4644
      ],
      "op": "DUP1",
      "path": "2"
    },
    "837": {
      "fn": "ERC4973.name",
      "offset": [
        4632,
        4644
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "838": {
      "fn": "ERC4973.name",
      "offset": [
        4632,
        4644
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x34E"
    },
    "841": {
      "fn": "ERC4973.name",
      "offset": [
        4632,
        4644
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "842": {
      "fn": "ERC4973.name",
      "offset": [
        4632,
        4644
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x17FD"
    },
    "845": {
      "fn": "ERC4973.name",
      "jump": "i",
      "offset": [
        4632,
        4644
      ],
      "op": "JUMP",
      "path": "2"
    },
    "846": {
      "fn": "ERC4973.name",
      "offset": [
        4632,
        4644
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "847": {
      "fn": "ERC4973.name",
      "offset": [
        4632,
        4644
      ],
      "op": "DUP1",
      "path": "2"
    },
    "848": {
      "fn": "ERC4973.name",
      "offset": [
        4632,
        4644
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1F"
    },
    "850": {
      "fn": "ERC4973.name",
      "offset": [
        4632,
        4644
      ],
      "op": "ADD",
      "path": "2"
    },
    "851": {
      "fn": "ERC4973.name",
      "offset": [
        4632,
        4644
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "853": {
      "fn": "ERC4973.name",
      "offset": [
        4632,
        4644
      ],
      "op": "DUP1",
      "path": "2"
    },
    "854": {
      "fn": "ERC4973.name",
      "offset": [
        4632,
        4644
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "855": {
      "fn": "ERC4973.name",
      "offset": [
        4632,
        4644
      ],
      "op": "DIV",
      "path": "2"
    },
    "856": {
      "fn": "ERC4973.name",
      "offset": [
        4632,
        4644
      ],
      "op": "MUL",
      "path": "2"
    },
    "857": {
      "fn": "ERC4973.name",
      "offset": [
        4632,
        4644
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "859": {
      "fn": "ERC4973.name",
      "offset": [
        4632,
        4644
      ],
      "op": "ADD",
      "path": "2"
    },
    "860": {
      "fn": "ERC4973.name",
      "offset": [
        4632,
        4644
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "862": {
      "fn": "ERC4973.name",
      "offset": [
        4632,
        4644
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "863": {
      "fn": "ERC4973.name",
      "offset": [
        4632,
        4644
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "864": {
      "fn": "ERC4973.name",
      "offset": [
        4632,
        4644
      ],
      "op": "DUP2",
      "path": "2"
    },
    "865": {
      "fn": "ERC4973.name",
      "offset": [
        4632,
        4644
      ],
      "op": "ADD",
      "path": "2"
    },
    "866": {
      "fn": "ERC4973.name",
      "offset": [
        4632,
        4644
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "868": {
      "fn": "ERC4973.name",
      "offset": [
        4632,
        4644
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "869": {
      "fn": "ERC4973.name",
      "offset": [
        4632,
        4644
      ],
      "op": "DUP1",
      "path": "2"
    },
    "870": {
      "fn": "ERC4973.name",
      "offset": [
        4632,
        4644
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "871": {
      "fn": "ERC4973.name",
      "offset": [
        4632,
        4644
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "872": {
      "fn": "ERC4973.name",
      "offset": [
        4632,
        4644
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "873": {
      "fn": "ERC4973.name",
      "offset": [
        4632,
        4644
      ],
      "op": "DUP2",
      "path": "2"
    },
    "874": {
      "fn": "ERC4973.name",
      "offset": [
        4632,
        4644
      ],
      "op": "DUP2",
      "path": "2"
    },
    "875": {
      "fn": "ERC4973.name",
      "offset": [
        4632,
        4644
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "876": {
      "fn": "ERC4973.name",
      "offset": [
        4632,
        4644
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "878": {
      "fn": "ERC4973.name",
      "offset": [
        4632,
        4644
      ],
      "op": "ADD",
      "path": "2"
    },
    "879": {
      "fn": "ERC4973.name",
      "offset": [
        4632,
        4644
      ],
      "op": "DUP3",
      "path": "2"
    },
    "880": {
      "fn": "ERC4973.name",
      "offset": [
        4632,
        4644
      ],
      "op": "DUP1",
      "path": "2"
    },
    "881": {
      "fn": "ERC4973.name",
      "offset": [
        4632,
        4644
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "882": {
      "fn": "ERC4973.name",
      "offset": [
        4632,
        4644
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x37A"
    },
    "885": {
      "fn": "ERC4973.name",
      "offset": [
        4632,
        4644
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "886": {
      "fn": "ERC4973.name",
      "offset": [
        4632,
        4644
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x17FD"
    },
    "889": {
      "fn": "ERC4973.name",
      "jump": "i",
      "offset": [
        4632,
        4644
      ],
      "op": "JUMP",
      "path": "2"
    },
    "890": {
      "fn": "ERC4973.name",
      "offset": [
        4632,
        4644
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "891": {
      "fn": "ERC4973.name",
      "offset": [
        4632,
        4644
      ],
      "op": "DUP1",
      "path": "2"
    },
    "892": {
      "fn": "ERC4973.name",
      "offset": [
        4632,
        4644
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "893": {
      "fn": "ERC4973.name",
      "offset": [
        4632,
        4644
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x3C7"
    },
    "896": {
      "fn": "ERC4973.name",
      "offset": [
        4632,
        4644
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "897": {
      "fn": "ERC4973.name",
      "offset": [
        4632,
        4644
      ],
      "op": "DUP1",
      "path": "2"
    },
    "898": {
      "fn": "ERC4973.name",
      "offset": [
        4632,
        4644
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1F"
    },
    "900": {
      "fn": "ERC4973.name",
      "offset": [
        4632,
        4644
      ],
      "op": "LT",
      "path": "2"
    },
    "901": {
      "fn": "ERC4973.name",
      "offset": [
        4632,
        4644
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x39C"
    },
    "904": {
      "fn": "ERC4973.name",
      "offset": [
        4632,
        4644
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "905": {
      "fn": "ERC4973.name",
      "offset": [
        4632,
        4644
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x100"
    },
    "908": {
      "fn": "ERC4973.name",
      "offset": [
        4632,
        4644
      ],
      "op": "DUP1",
      "path": "2"
    },
    "909": {
      "fn": "ERC4973.name",
      "offset": [
        4632,
        4644
      ],
      "op": "DUP4",
      "path": "2"
    },
    "910": {
      "fn": "ERC4973.name",
      "offset": [
        4632,
        4644
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "911": {
      "fn": "ERC4973.name",
      "offset": [
        4632,
        4644
      ],
      "op": "DIV",
      "path": "2"
    },
    "912": {
      "fn": "ERC4973.name",
      "offset": [
        4632,
        4644
      ],
      "op": "MUL",
      "path": "2"
    },
    "913": {
      "fn": "ERC4973.name",
      "offset": [
        4632,
        4644
      ],
      "op": "DUP4",
      "path": "2"
    },
    "914": {
      "fn": "ERC4973.name",
      "offset": [
        4632,
        4644
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "915": {
      "fn": "ERC4973.name",
      "offset": [
        4632,
        4644
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "916": {
      "fn": "ERC4973.name",
      "offset": [
        4632,
        4644
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "918": {
      "fn": "ERC4973.name",
      "offset": [
        4632,
        4644
      ],
      "op": "ADD",
      "path": "2"
    },
    "919": {
      "fn": "ERC4973.name",
      "offset": [
        4632,
        4644
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "920": {
      "fn": "ERC4973.name",
      "offset": [
        4632,
        4644
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x3C7"
    },
    "923": {
      "fn": "ERC4973.name",
      "offset": [
        4632,
        4644
      ],
      "op": "JUMP",
      "path": "2"
    },
    "924": {
      "fn": "ERC4973.name",
      "offset": [
        4632,
        4644
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "925": {
      "fn": "ERC4973.name",
      "offset": [
        4632,
        4644
      ],
      "op": "DUP3",
      "path": "2"
    },
    "926": {
      "fn": "ERC4973.name",
      "offset": [
        4632,
        4644
      ],
      "op": "ADD",
      "path": "2"
    },
    "927": {
      "fn": "ERC4973.name",
      "offset": [
        4632,
        4644
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "928": {
      "fn": "ERC4973.name",
      "offset": [
        4632,
        4644
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "929": {
      "fn": "ERC4973.name",
      "offset": [
        4632,
        4644
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "931": {
      "fn": "ERC4973.name",
      "offset": [
        4632,
        4644
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "932": {
      "fn": "ERC4973.name",
      "offset": [
        4632,
        4644
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "934": {
      "fn": "ERC4973.name",
      "offset": [
        4632,
        4644
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "936": {
      "fn": "ERC4973.name",
      "offset": [
        4632,
        4644
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "937": {
      "fn": "ERC4973.name",
      "offset": [
        4632,
        4644
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "938": {
      "fn": "ERC4973.name",
      "offset": [
        4632,
        4644
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "939": {
      "fn": "ERC4973.name",
      "offset": [
        4632,
        4644
      ],
      "op": "DUP2",
      "path": "2"
    },
    "940": {
      "fn": "ERC4973.name",
      "offset": [
        4632,
        4644
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "941": {
      "fn": "ERC4973.name",
      "offset": [
        4632,
        4644
      ],
      "op": "DUP2",
      "path": "2"
    },
    "942": {
      "fn": "ERC4973.name",
      "offset": [
        4632,
        4644
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "943": {
      "fn": "ERC4973.name",
      "offset": [
        4632,
        4644
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "944": {
      "fn": "ERC4973.name",
      "offset": [
        4632,
        4644
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1"
    },
    "946": {
      "fn": "ERC4973.name",
      "offset": [
        4632,
        4644
      ],
      "op": "ADD",
      "path": "2"
    },
    "947": {
      "fn": "ERC4973.name",
      "offset": [
        4632,
        4644
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "948": {
      "fn": "ERC4973.name",
      "offset": [
        4632,
        4644
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "950": {
      "fn": "ERC4973.name",
      "offset": [
        4632,
        4644
      ],
      "op": "ADD",
      "path": "2"
    },
    "951": {
      "fn": "ERC4973.name",
      "offset": [
        4632,
        4644
      ],
      "op": "DUP1",
      "path": "2"
    },
    "952": {
      "fn": "ERC4973.name",
      "offset": [
        4632,
        4644
      ],
      "op": "DUP4",
      "path": "2"
    },
    "953": {
      "fn": "ERC4973.name",
      "offset": [
        4632,
        4644
      ],
      "op": "GT",
      "path": "2"
    },
    "954": {
      "fn": "ERC4973.name",
      "offset": [
        4632,
        4644
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x3AA"
    },
    "957": {
      "fn": "ERC4973.name",
      "offset": [
        4632,
        4644
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "958": {
      "fn": "ERC4973.name",
      "offset": [
        4632,
        4644
      ],
      "op": "DUP3",
      "path": "2"
    },
    "959": {
      "fn": "ERC4973.name",
      "offset": [
        4632,
        4644
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "960": {
      "fn": "ERC4973.name",
      "offset": [
        4632,
        4644
      ],
      "op": "SUB",
      "path": "2"
    },
    "961": {
      "fn": "ERC4973.name",
      "offset": [
        4632,
        4644
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1F"
    },
    "963": {
      "fn": "ERC4973.name",
      "offset": [
        4632,
        4644
      ],
      "op": "AND",
      "path": "2"
    },
    "964": {
      "fn": "ERC4973.name",
      "offset": [
        4632,
        4644
      ],
      "op": "DUP3",
      "path": "2"
    },
    "965": {
      "fn": "ERC4973.name",
      "offset": [
        4632,
        4644
      ],
      "op": "ADD",
      "path": "2"
    },
    "966": {
      "fn": "ERC4973.name",
      "offset": [
        4632,
        4644
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "967": {
      "fn": "ERC4973.name",
      "offset": [
        4632,
        4644
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "968": {
      "fn": "ERC4973.name",
      "offset": [
        4632,
        4644
      ],
      "op": "POP",
      "path": "2"
    },
    "969": {
      "fn": "ERC4973.name",
      "offset": [
        4632,
        4644
      ],
      "op": "POP",
      "path": "2"
    },
    "970": {
      "fn": "ERC4973.name",
      "offset": [
        4632,
        4644
      ],
      "op": "POP",
      "path": "2"
    },
    "971": {
      "fn": "ERC4973.name",
      "offset": [
        4632,
        4644
      ],
      "op": "POP",
      "path": "2"
    },
    "972": {
      "fn": "ERC4973.name",
      "offset": [
        4632,
        4644
      ],
      "op": "POP",
      "path": "2"
    },
    "973": {
      "fn": "ERC4973.name",
      "offset": [
        4632,
        4644
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "974": {
      "fn": "ERC4973.name",
      "offset": [
        4632,
        4644
      ],
      "op": "POP",
      "path": "2"
    },
    "975": {
      "fn": "ERC4973.name",
      "offset": [
        4557,
        4649
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "976": {
      "fn": "ERC4973.name",
      "jump": "o",
      "offset": [
        4557,
        4649
      ],
      "op": "JUMP",
      "path": "2"
    },
    "977": {
      "fn": "SoulboundCore.revokeWithSignature",
      "offset": [
        4229,
        5160
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "978": {
      "fn": "SoulboundCore.revokeWithSignature",
      "offset": [
        4414,
        4430
      ],
      "op": "PUSH2",
      "path": "7",
      "statement": 6,
      "value": "0x3DA"
    },
    "981": {
      "fn": "SoulboundCore.revokeWithSignature",
      "offset": [
        4422,
        4429
      ],
      "op": "DUP2",
      "path": "7"
    },
    "982": {
      "fn": "SoulboundCore.revokeWithSignature",
      "offset": [
        4414,
        4421
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0xC48"
    },
    "985": {
      "fn": "SoulboundCore.revokeWithSignature",
      "jump": "i",
      "offset": [
        4414,
        4430
      ],
      "op": "JUMP",
      "path": "7"
    },
    "986": {
      "branch": 79,
      "fn": "SoulboundCore.revokeWithSignature",
      "offset": [
        4414,
        4430
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "987": {
      "fn": "SoulboundCore.revokeWithSignature",
      "offset": [
        4406,
        4462
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x42B"
    },
    "990": {
      "branch": 79,
      "fn": "SoulboundCore.revokeWithSignature",
      "offset": [
        4406,
        4462
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "991": {
      "fn": "SoulboundCore.revokeWithSignature",
      "offset": [
        4406,
        4462
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x40"
    },
    "993": {
      "fn": "SoulboundCore.revokeWithSignature",
      "offset": [
        4406,
        4462
      ],
      "op": "MLOAD",
      "path": "7"
    },
    "994": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "998": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1000": {
      "op": "SHL"
    },
    "1001": {
      "fn": "SoulboundCore.revokeWithSignature",
      "offset": [
        4406,
        4462
      ],
      "op": "DUP2",
      "path": "7"
    },
    "1002": {
      "fn": "SoulboundCore.revokeWithSignature",
      "offset": [
        4406,
        4462
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "1003": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1005": {
      "fn": "SoulboundCore.revokeWithSignature",
      "offset": [
        4406,
        4462
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x4"
    },
    "1007": {
      "fn": "SoulboundCore.revokeWithSignature",
      "offset": [
        4406,
        4462
      ],
      "op": "DUP3",
      "path": "7"
    },
    "1008": {
      "fn": "SoulboundCore.revokeWithSignature",
      "offset": [
        4406,
        4462
      ],
      "op": "ADD",
      "path": "7"
    },
    "1009": {
      "op": "MSTORE"
    },
    "1010": {
      "op": "PUSH1",
      "value": "0x1B"
    },
    "1012": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "1014": {
      "op": "DUP3"
    },
    "1015": {
      "op": "ADD"
    },
    "1016": {
      "op": "MSTORE"
    },
    "1017": {
      "op": "PUSH32",
      "value": "0x5265766F6B65206F6620696E6578697374656E7420746F6B656E2E0000000000"
    },
    "1050": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "1052": {
      "op": "DUP3"
    },
    "1053": {
      "op": "ADD"
    },
    "1054": {
      "op": "MSTORE"
    },
    "1055": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "1057": {
      "op": "ADD"
    },
    "1058": {
      "fn": "SoulboundCore.revokeWithSignature",
      "offset": [
        4406,
        4462
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "1059": {
      "fn": "SoulboundCore.revokeWithSignature",
      "offset": [
        4406,
        4462
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x40"
    },
    "1061": {
      "fn": "SoulboundCore.revokeWithSignature",
      "offset": [
        4406,
        4462
      ],
      "op": "MLOAD",
      "path": "7"
    },
    "1062": {
      "fn": "SoulboundCore.revokeWithSignature",
      "offset": [
        4406,
        4462
      ],
      "op": "DUP1",
      "path": "7"
    },
    "1063": {
      "fn": "SoulboundCore.revokeWithSignature",
      "offset": [
        4406,
        4462
      ],
      "op": "SWAP2",
      "path": "7"
    },
    "1064": {
      "fn": "SoulboundCore.revokeWithSignature",
      "offset": [
        4406,
        4462
      ],
      "op": "SUB",
      "path": "7"
    },
    "1065": {
      "fn": "SoulboundCore.revokeWithSignature",
      "offset": [
        4406,
        4462
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "1066": {
      "fn": "SoulboundCore.revokeWithSignature",
      "offset": [
        4406,
        4462
      ],
      "op": "REVERT",
      "optimizer_revert": true,
      "path": "7"
    },
    "1067": {
      "fn": "SoulboundCore.revokeWithSignature",
      "offset": [
        4406,
        4462
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "1068": {
      "fn": "SoulboundCore.revokeWithSignature",
      "offset": [
        4697,
        4700
      ],
      "op": "DUP2",
      "path": "7",
      "statement": 7
    },
    "1069": {
      "fn": "SoulboundCore.revokeWithSignature",
      "offset": [
        4697,
        4707
      ],
      "op": "MLOAD",
      "path": "7"
    },
    "1070": {
      "fn": "SoulboundCore.revokeWithSignature",
      "offset": [
        4711,
        4713
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x41"
    },
    "1072": {
      "branch": 80,
      "fn": "SoulboundCore.revokeWithSignature",
      "offset": [
        4697,
        4713
      ],
      "op": "EQ",
      "path": "7"
    },
    "1073": {
      "fn": "SoulboundCore.revokeWithSignature",
      "offset": [
        4689,
        4742
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x477"
    },
    "1076": {
      "branch": 80,
      "fn": "SoulboundCore.revokeWithSignature",
      "offset": [
        4689,
        4742
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "1077": {
      "fn": "SoulboundCore.revokeWithSignature",
      "offset": [
        4689,
        4742
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x40"
    },
    "1079": {
      "fn": "SoulboundCore.revokeWithSignature",
      "offset": [
        4689,
        4742
      ],
      "op": "MLOAD",
      "path": "7"
    },
    "1080": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1084": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1086": {
      "op": "SHL"
    },
    "1087": {
      "fn": "SoulboundCore.revokeWithSignature",
      "offset": [
        4689,
        4742
      ],
      "op": "DUP2",
      "path": "7"
    },
    "1088": {
      "fn": "SoulboundCore.revokeWithSignature",
      "offset": [
        4689,
        4742
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "1089": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1091": {
      "fn": "SoulboundCore.revokeWithSignature",
      "offset": [
        4689,
        4742
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x4"
    },
    "1093": {
      "fn": "SoulboundCore.revokeWithSignature",
      "offset": [
        4689,
        4742
      ],
      "op": "DUP3",
      "path": "7"
    },
    "1094": {
      "fn": "SoulboundCore.revokeWithSignature",
      "offset": [
        4689,
        4742
      ],
      "op": "ADD",
      "path": "7"
    },
    "1095": {
      "op": "MSTORE"
    },
    "1096": {
      "op": "PUSH1",
      "value": "0x18"
    },
    "1098": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "1100": {
      "op": "DUP3"
    },
    "1101": {
      "op": "ADD"
    },
    "1102": {
      "op": "MSTORE"
    },
    "1103": {
      "op": "PUSH24",
      "value": "0x92DCECC2D8D2C840E6D2CEDCC2E8EAE4CA40D8CADCCEE8D"
    },
    "1128": {
      "op": "PUSH1",
      "value": "0x43"
    },
    "1130": {
      "op": "SHL"
    },
    "1131": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "1133": {
      "op": "DUP3"
    },
    "1134": {
      "op": "ADD"
    },
    "1135": {
      "op": "MSTORE"
    },
    "1136": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "1138": {
      "op": "ADD"
    },
    "1139": {
      "fn": "SoulboundCore.revokeWithSignature",
      "offset": [
        4689,
        4742
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x422"
    },
    "1142": {
      "op": "JUMP"
    },
    "1143": {
      "fn": "SoulboundCore.revokeWithSignature",
      "offset": [
        4689,
        4742
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "1144": {
      "fn": "SoulboundCore.revokeWithSignature",
      "offset": [
        4869,
        4895
      ],
      "op": "PUSH2",
      "path": "7",
      "statement": 8,
      "value": "0x481"
    },
    "1147": {
      "fn": "SoulboundCore.revokeWithSignature",
      "offset": [
        4885,
        4889
      ],
      "op": "DUP4",
      "path": "7"
    },
    "1148": {
      "fn": "SoulboundCore.revokeWithSignature",
      "offset": [
        4891,
        4894
      ],
      "op": "DUP4",
      "path": "7"
    },
    "1149": {
      "fn": "SoulboundCore.revokeWithSignature",
      "offset": [
        4869,
        4884
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0xA17"
    },
    "1152": {
      "fn": "SoulboundCore.revokeWithSignature",
      "jump": "i",
      "offset": [
        4869,
        4895
      ],
      "op": "JUMP",
      "path": "7"
    },
    "1153": {
      "branch": 81,
      "fn": "SoulboundCore.revokeWithSignature",
      "offset": [
        4869,
        4895
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "1154": {
      "fn": "SoulboundCore.revokeWithSignature",
      "offset": [
        4861,
        4925
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x4C9"
    },
    "1157": {
      "branch": 81,
      "fn": "SoulboundCore.revokeWithSignature",
      "offset": [
        4861,
        4925
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "1158": {
      "fn": "SoulboundCore.revokeWithSignature",
      "offset": [
        4861,
        4925
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x40"
    },
    "1160": {
      "fn": "SoulboundCore.revokeWithSignature",
      "offset": [
        4861,
        4925
      ],
      "op": "MLOAD",
      "path": "7"
    },
    "1161": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1165": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1167": {
      "op": "SHL"
    },
    "1168": {
      "fn": "SoulboundCore.revokeWithSignature",
      "offset": [
        4861,
        4925
      ],
      "op": "DUP2",
      "path": "7"
    },
    "1169": {
      "fn": "SoulboundCore.revokeWithSignature",
      "offset": [
        4861,
        4925
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "1170": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1172": {
      "fn": "SoulboundCore.revokeWithSignature",
      "offset": [
        4861,
        4925
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x4"
    },
    "1174": {
      "fn": "SoulboundCore.revokeWithSignature",
      "offset": [
        4861,
        4925
      ],
      "op": "DUP3",
      "path": "7"
    },
    "1175": {
      "fn": "SoulboundCore.revokeWithSignature",
      "offset": [
        4861,
        4925
      ],
      "op": "ADD",
      "path": "7"
    },
    "1176": {
      "op": "MSTORE"
    },
    "1177": {
      "op": "PUSH1",
      "value": "0x19"
    },
    "1179": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "1181": {
      "op": "DUP3"
    },
    "1182": {
      "op": "ADD"
    },
    "1183": {
      "op": "MSTORE"
    },
    "1184": {
      "op": "PUSH25",
      "value": "0x2430B9B4103737BA1039B4B3B732B210313C9037BBB732B917"
    },
    "1210": {
      "op": "PUSH1",
      "value": "0x39"
    },
    "1212": {
      "op": "SHL"
    },
    "1213": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "1215": {
      "op": "DUP3"
    },
    "1216": {
      "op": "ADD"
    },
    "1217": {
      "op": "MSTORE"
    },
    "1218": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "1220": {
      "op": "ADD"
    },
    "1221": {
      "fn": "SoulboundCore.revokeWithSignature",
      "offset": [
        4861,
        4925
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x422"
    },
    "1224": {
      "op": "JUMP"
    },
    "1225": {
      "fn": "SoulboundCore.revokeWithSignature",
      "offset": [
        4861,
        4925
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "1226": {
      "fn": "SoulboundCore.revokeWithSignature",
      "offset": [
        5024,
        5057
      ],
      "op": "PUSH2",
      "path": "7",
      "statement": 9,
      "value": "0x4DB"
    },
    "1229": {
      "fn": "SoulboundCore.revokeWithSignature",
      "offset": [
        5031,
        5047
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x4D5"
    },
    "1232": {
      "fn": "SoulboundCore.revokeWithSignature",
      "offset": [
        5039,
        5046
      ],
      "op": "DUP3",
      "path": "7"
    },
    "1233": {
      "fn": "SoulboundCore.revokeWithSignature",
      "offset": [
        5031,
        5038
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x600"
    },
    "1236": {
      "fn": "SoulboundCore.revokeWithSignature",
      "jump": "i",
      "offset": [
        5031,
        5047
      ],
      "op": "JUMP",
      "path": "7"
    },
    "1237": {
      "fn": "SoulboundCore.revokeWithSignature",
      "offset": [
        5031,
        5047
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "1238": {
      "fn": "SoulboundCore.revokeWithSignature",
      "offset": [
        5049,
        5056
      ],
      "op": "DUP3",
      "path": "7"
    },
    "1239": {
      "fn": "SoulboundCore.revokeWithSignature",
      "offset": [
        5024,
        5030
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0xC65"
    },
    "1242": {
      "fn": "SoulboundCore.revokeWithSignature",
      "jump": "i",
      "offset": [
        5024,
        5057
      ],
      "op": "JUMP",
      "path": "7"
    },
    "1243": {
      "fn": "SoulboundCore.revokeWithSignature",
      "offset": [
        5024,
        5057
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "1244": {
      "op": "POP"
    },
    "1245": {
      "fn": "SoulboundCore.revokeWithSignature",
      "offset": [
        5125,
        5153
      ],
      "op": "PUSH1",
      "path": "7",
      "statement": 10,
      "value": "0x40"
    },
    "1247": {
      "fn": "SoulboundCore.revokeWithSignature",
      "offset": [
        5125,
        5153
      ],
      "op": "MLOAD",
      "path": "7"
    },
    "1248": {
      "fn": "SoulboundCore.revokeWithSignature",
      "offset": [
        5145,
        5152
      ],
      "op": "DUP2",
      "path": "7"
    },
    "1249": {
      "fn": "SoulboundCore.revokeWithSignature",
      "offset": [
        5145,
        5152
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "1250": {
      "fn": "SoulboundCore.revokeWithSignature",
      "offset": [
        5125,
        5153
      ],
      "op": "PUSH32",
      "path": "7",
      "value": "0xF947BF2266AFEDE98F27AD2312DB8B2A17921852307F979B6F14A2B41FA774BC"
    },
    "1283": {
      "fn": "SoulboundCore.revokeWithSignature",
      "offset": [
        5125,
        5153
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "1284": {
      "fn": "SoulboundCore.revokeWithSignature",
      "offset": [
        5125,
        5153
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x0"
    },
    "1286": {
      "fn": "SoulboundCore.revokeWithSignature",
      "offset": [
        5125,
        5153
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "1287": {
      "fn": "SoulboundCore.revokeWithSignature",
      "offset": [
        5125,
        5153
      ],
      "op": "LOG2",
      "path": "7"
    },
    "1288": {
      "fn": "SoulboundCore.revokeWithSignature",
      "offset": [
        4229,
        5160
      ],
      "op": "POP",
      "path": "7"
    },
    "1289": {
      "fn": "SoulboundCore.revokeWithSignature",
      "offset": [
        4229,
        5160
      ],
      "op": "POP",
      "path": "7"
    },
    "1290": {
      "fn": "SoulboundCore.revokeWithSignature",
      "offset": [
        4229,
        5160
      ],
      "op": "POP",
      "path": "7"
    },
    "1291": {
      "fn": "SoulboundCore.revokeWithSignature",
      "jump": "o",
      "offset": [
        4229,
        5160
      ],
      "op": "JUMP",
      "path": "7"
    },
    "1292": {
      "fn": "SoulboundCore.generateTokenURI",
      "offset": [
        6072,
        6477
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "1293": {
      "fn": "SoulboundCore.generateTokenURI",
      "offset": [
        6149,
        6172
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x60"
    },
    "1295": {
      "fn": "SoulboundCore.generateTokenURI",
      "offset": [
        6262,
        6275
      ],
      "op": "PUSH2",
      "path": "7",
      "statement": 11,
      "value": "0x516"
    },
    "1298": {
      "fn": "SoulboundCore.generateTokenURI",
      "offset": [
        6262,
        6273
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x886"
    },
    "1301": {
      "fn": "SoulboundCore.generateTokenURI",
      "jump": "i",
      "offset": [
        6262,
        6275
      ],
      "op": "JUMP",
      "path": "7"
    },
    "1302": {
      "fn": "SoulboundCore.generateTokenURI",
      "offset": [
        6262,
        6275
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "1303": {
      "fn": "SoulboundCore.generateTokenURI",
      "offset": [
        6256,
        6283
      ],
      "op": "MLOAD",
      "path": "7"
    },
    "1304": {
      "fn": "SoulboundCore.generateTokenURI",
      "offset": [
        6248,
        6306
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x553"
    },
    "1307": {
      "fn": "SoulboundCore.generateTokenURI",
      "offset": [
        6248,
        6306
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "1308": {
      "fn": "SoulboundCore.generateTokenURI",
      "offset": [
        6248,
        6306
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x40"
    },
    "1310": {
      "fn": "SoulboundCore.generateTokenURI",
      "offset": [
        6248,
        6306
      ],
      "op": "MLOAD",
      "path": "7"
    },
    "1311": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1315": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1317": {
      "op": "SHL"
    },
    "1318": {
      "fn": "SoulboundCore.generateTokenURI",
      "offset": [
        6248,
        6306
      ],
      "op": "DUP2",
      "path": "7"
    },
    "1319": {
      "fn": "SoulboundCore.generateTokenURI",
      "offset": [
        6248,
        6306
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "1320": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1322": {
      "fn": "SoulboundCore.generateTokenURI",
      "offset": [
        6248,
        6306
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x4"
    },
    "1324": {
      "fn": "SoulboundCore.generateTokenURI",
      "offset": [
        6248,
        6306
      ],
      "op": "DUP3",
      "path": "7"
    },
    "1325": {
      "fn": "SoulboundCore.generateTokenURI",
      "offset": [
        6248,
        6306
      ],
      "op": "ADD",
      "path": "7"
    },
    "1326": {
      "op": "MSTORE"
    },
    "1327": {
      "op": "PUSH1",
      "value": "0xD"
    },
    "1329": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "1331": {
      "op": "DUP3"
    },
    "1332": {
      "op": "ADD"
    },
    "1333": {
      "op": "MSTORE"
    },
    "1334": {
      "op": "PUSH13",
      "value": "0x456D7074792062617365555249"
    },
    "1348": {
      "op": "PUSH1",
      "value": "0x98"
    },
    "1350": {
      "op": "SHL"
    },
    "1351": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "1353": {
      "op": "DUP3"
    },
    "1354": {
      "op": "ADD"
    },
    "1355": {
      "op": "MSTORE"
    },
    "1356": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "1358": {
      "op": "ADD"
    },
    "1359": {
      "fn": "SoulboundCore.generateTokenURI",
      "offset": [
        6248,
        6306
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x422"
    },
    "1362": {
      "op": "JUMP"
    },
    "1363": {
      "fn": "SoulboundCore.generateTokenURI",
      "offset": [
        6248,
        6306
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "1364": {
      "fn": "SoulboundCore.generateTokenURI",
      "offset": [
        6415,
        6428
      ],
      "op": "PUSH2",
      "path": "7",
      "statement": 12,
      "value": "0x55B"
    },
    "1367": {
      "fn": "SoulboundCore.generateTokenURI",
      "offset": [
        6415,
        6426
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x886"
    },
    "1370": {
      "fn": "SoulboundCore.generateTokenURI",
      "jump": "i",
      "offset": [
        6415,
        6428
      ],
      "op": "JUMP",
      "path": "7"
    },
    "1371": {
      "fn": "SoulboundCore.generateTokenURI",
      "offset": [
        6415,
        6428
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "1372": {
      "fn": "SoulboundCore.generateTokenURI",
      "offset": [
        6442,
        6459
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x564"
    },
    "1375": {
      "fn": "SoulboundCore.generateTokenURI",
      "offset": [
        6451,
        6458
      ],
      "op": "DUP4",
      "path": "7"
    },
    "1376": {
      "fn": "SoulboundCore.generateTokenURI",
      "offset": [
        6442,
        6450
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0xD2D"
    },
    "1379": {
      "fn": "SoulboundCore.generateTokenURI",
      "jump": "i",
      "offset": [
        6442,
        6459
      ],
      "op": "JUMP",
      "path": "7"
    },
    "1380": {
      "fn": "SoulboundCore.generateTokenURI",
      "offset": [
        6442,
        6459
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "1381": {
      "fn": "SoulboundCore.generateTokenURI",
      "offset": [
        6385,
        6469
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x40"
    },
    "1383": {
      "fn": "SoulboundCore.generateTokenURI",
      "offset": [
        6385,
        6469
      ],
      "op": "MLOAD",
      "path": "7"
    },
    "1384": {
      "fn": "SoulboundCore.generateTokenURI",
      "offset": [
        6385,
        6469
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x20"
    },
    "1386": {
      "fn": "SoulboundCore.generateTokenURI",
      "offset": [
        6385,
        6469
      ],
      "op": "ADD",
      "path": "7"
    },
    "1387": {
      "fn": "SoulboundCore.generateTokenURI",
      "offset": [
        6385,
        6469
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x575"
    },
    "1390": {
      "fn": "SoulboundCore.generateTokenURI",
      "offset": [
        6385,
        6469
      ],
      "op": "SWAP3",
      "path": "7"
    },
    "1391": {
      "fn": "SoulboundCore.generateTokenURI",
      "offset": [
        6385,
        6469
      ],
      "op": "SWAP2",
      "path": "7"
    },
    "1392": {
      "fn": "SoulboundCore.generateTokenURI",
      "offset": [
        6385,
        6469
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "1393": {
      "fn": "SoulboundCore.generateTokenURI",
      "offset": [
        6385,
        6469
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x1838"
    },
    "1396": {
      "fn": "SoulboundCore.generateTokenURI",
      "jump": "i",
      "offset": [
        6385,
        6469
      ],
      "op": "JUMP",
      "path": "7"
    },
    "1397": {
      "fn": "SoulboundCore.generateTokenURI",
      "offset": [
        6385,
        6469
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "1398": {
      "fn": "SoulboundCore.generateTokenURI",
      "offset": [
        6385,
        6469
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x40"
    },
    "1400": {
      "fn": "SoulboundCore.generateTokenURI",
      "offset": [
        6385,
        6469
      ],
      "op": "MLOAD",
      "path": "7"
    },
    "1401": {
      "fn": "SoulboundCore.generateTokenURI",
      "offset": [
        6385,
        6469
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x20"
    },
    "1403": {
      "fn": "SoulboundCore.generateTokenURI",
      "offset": [
        6385,
        6469
      ],
      "op": "DUP2",
      "path": "7"
    },
    "1404": {
      "fn": "SoulboundCore.generateTokenURI",
      "offset": [
        6385,
        6469
      ],
      "op": "DUP4",
      "path": "7"
    },
    "1405": {
      "fn": "SoulboundCore.generateTokenURI",
      "offset": [
        6385,
        6469
      ],
      "op": "SUB",
      "path": "7"
    },
    "1406": {
      "fn": "SoulboundCore.generateTokenURI",
      "offset": [
        6385,
        6469
      ],
      "op": "SUB",
      "path": "7"
    },
    "1407": {
      "fn": "SoulboundCore.generateTokenURI",
      "offset": [
        6385,
        6469
      ],
      "op": "DUP2",
      "path": "7"
    },
    "1408": {
      "fn": "SoulboundCore.generateTokenURI",
      "offset": [
        6385,
        6469
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "1409": {
      "fn": "SoulboundCore.generateTokenURI",
      "offset": [
        6385,
        6469
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "1410": {
      "fn": "SoulboundCore.generateTokenURI",
      "offset": [
        6385,
        6469
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x40"
    },
    "1412": {
      "fn": "SoulboundCore.generateTokenURI",
      "offset": [
        6385,
        6469
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "1413": {
      "fn": "SoulboundCore.generateTokenURI",
      "offset": [
        6366,
        6470
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "1414": {
      "fn": "SoulboundCore.generateTokenURI",
      "offset": [
        6366,
        6470
      ],
      "op": "POP",
      "path": "7"
    },
    "1415": {
      "fn": "SoulboundCore.generateTokenURI",
      "offset": [
        6072,
        6477
      ],
      "op": "SWAP2",
      "path": "7"
    },
    "1416": {
      "fn": "SoulboundCore.generateTokenURI",
      "offset": [
        6072,
        6477
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "1417": {
      "fn": "SoulboundCore.generateTokenURI",
      "offset": [
        6072,
        6477
      ],
      "op": "POP",
      "path": "7"
    },
    "1418": {
      "fn": "SoulboundCore.generateTokenURI",
      "jump": "o",
      "offset": [
        6072,
        6477
      ],
      "op": "JUMP",
      "path": "7"
    },
    "1419": {
      "fn": "ERC4973.burn",
      "offset": [
        4946,
        5101
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1420": {
      "fn": "ERC4973.burn",
      "offset": [
        5029,
        5045
      ],
      "op": "PUSH2",
      "path": "2",
      "statement": 13,
      "value": "0x594"
    },
    "1423": {
      "fn": "ERC4973.burn",
      "offset": [
        5037,
        5044
      ],
      "op": "DUP2",
      "path": "2"
    },
    "1424": {
      "fn": "ERC4973.burn",
      "offset": [
        5029,
        5036
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x600"
    },
    "1427": {
      "fn": "ERC4973.burn",
      "jump": "i",
      "offset": [
        5029,
        5045
      ],
      "op": "JUMP",
      "path": "2"
    },
    "1428": {
      "fn": "ERC4973.burn",
      "offset": [
        5029,
        5045
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1429": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1431": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1433": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1435": {
      "op": "SHL"
    },
    "1436": {
      "op": "SUB"
    },
    "1437": {
      "fn": "ERC4973.burn",
      "offset": [
        5015,
        5045
      ],
      "op": "AND",
      "path": "2"
    },
    "1438": {
      "fn": "ERC4973.burn",
      "offset": [
        5015,
        5025
      ],
      "op": "CALLER",
      "path": "2"
    },
    "1439": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1441": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1443": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1445": {
      "op": "SHL"
    },
    "1446": {
      "op": "SUB"
    },
    "1447": {
      "fn": "ERC4973.burn",
      "offset": [
        5015,
        5045
      ],
      "op": "AND",
      "path": "2"
    },
    "1448": {
      "branch": 89,
      "fn": "ERC4973.burn",
      "offset": [
        5015,
        5045
      ],
      "op": "EQ",
      "path": "2"
    },
    "1449": {
      "fn": "ERC4973.burn",
      "offset": [
        5007,
        5076
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x5F4"
    },
    "1452": {
      "branch": 89,
      "fn": "ERC4973.burn",
      "offset": [
        5007,
        5076
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "1453": {
      "fn": "ERC4973.burn",
      "offset": [
        5007,
        5076
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "1455": {
      "fn": "ERC4973.burn",
      "offset": [
        5007,
        5076
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "1456": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1460": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1462": {
      "op": "SHL"
    },
    "1463": {
      "fn": "ERC4973.burn",
      "offset": [
        5007,
        5076
      ],
      "op": "DUP2",
      "path": "2"
    },
    "1464": {
      "fn": "ERC4973.burn",
      "offset": [
        5007,
        5076
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "1465": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1467": {
      "fn": "ERC4973.burn",
      "offset": [
        5007,
        5076
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "1469": {
      "fn": "ERC4973.burn",
      "offset": [
        5007,
        5076
      ],
      "op": "DUP3",
      "path": "2"
    },
    "1470": {
      "fn": "ERC4973.burn",
      "offset": [
        5007,
        5076
      ],
      "op": "ADD",
      "path": "2"
    },
    "1471": {
      "op": "MSTORE"
    },
    "1472": {
      "op": "PUSH1",
      "value": "0x1A"
    },
    "1474": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "1476": {
      "op": "DUP3"
    },
    "1477": {
      "op": "ADD"
    },
    "1478": {
      "op": "MSTORE"
    },
    "1479": {
      "op": "PUSH32",
      "value": "0x6275726E3A2073656E646572206D757374206265206F776E6572000000000000"
    },
    "1512": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "1514": {
      "op": "DUP3"
    },
    "1515": {
      "op": "ADD"
    },
    "1516": {
      "op": "MSTORE"
    },
    "1517": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "1519": {
      "op": "ADD"
    },
    "1520": {
      "fn": "ERC4973.burn",
      "offset": [
        5007,
        5076
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x422"
    },
    "1523": {
      "op": "JUMP"
    },
    "1524": {
      "fn": "ERC4973.burn",
      "offset": [
        5007,
        5076
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1525": {
      "fn": "ERC4973.burn",
      "offset": [
        5082,
        5096
      ],
      "op": "PUSH2",
      "path": "2",
      "statement": 14,
      "value": "0x5FD"
    },
    "1528": {
      "fn": "ERC4973.burn",
      "offset": [
        5088,
        5095
      ],
      "op": "DUP2",
      "path": "2"
    },
    "1529": {
      "fn": "ERC4973.burn",
      "offset": [
        5082,
        5087
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xE33"
    },
    "1532": {
      "fn": "ERC4973.burn",
      "jump": "i",
      "offset": [
        5082,
        5096
      ],
      "op": "JUMP",
      "path": "2"
    },
    "1533": {
      "fn": "ERC4973.burn",
      "offset": [
        5082,
        5096
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1534": {
      "fn": "ERC4973.burn",
      "offset": [
        4946,
        5101
      ],
      "op": "POP",
      "path": "2"
    },
    "1535": {
      "fn": "ERC4973.burn",
      "jump": "o",
      "offset": [
        4946,
        5101
      ],
      "op": "JUMP",
      "path": "2"
    },
    "1536": {
      "fn": "ERC4973.ownerOf",
      "offset": [
        5306,
        5505
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1537": {
      "fn": "ERC4973.ownerOf",
      "offset": [
        5369,
        5376
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "1539": {
      "fn": "ERC4973.ownerOf",
      "offset": [
        5400,
        5416
      ],
      "op": "DUP2",
      "path": "2"
    },
    "1540": {
      "fn": "ERC4973.ownerOf",
      "offset": [
        5400,
        5416
      ],
      "op": "DUP2",
      "path": "2"
    },
    "1541": {
      "fn": "ERC4973.ownerOf",
      "offset": [
        5400,
        5416
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "1542": {
      "fn": "ERC4973.ownerOf",
      "offset": [
        5400,
        5407
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x2"
    },
    "1544": {
      "fn": "ERC4973.ownerOf",
      "offset": [
        5400,
        5416
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "1546": {
      "fn": "ERC4973.ownerOf",
      "offset": [
        5400,
        5416
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "1547": {
      "fn": "ERC4973.ownerOf",
      "offset": [
        5400,
        5416
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "1549": {
      "fn": "ERC4973.ownerOf",
      "offset": [
        5400,
        5416
      ],
      "op": "DUP2",
      "path": "2"
    },
    "1550": {
      "fn": "ERC4973.ownerOf",
      "offset": [
        5400,
        5416
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "1551": {
      "fn": "ERC4973.ownerOf",
      "offset": [
        5400,
        5416
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "1552": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1554": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1556": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1558": {
      "op": "SHL"
    },
    "1559": {
      "op": "SUB"
    },
    "1560": {
      "fn": "ERC4973.ownerOf",
      "offset": [
        5400,
        5416
      ],
      "op": "AND",
      "path": "2"
    },
    "1561": {
      "branch": 90,
      "fn": "ERC4973.ownerOf",
      "offset": [
        5430,
        5449
      ],
      "op": "DUP1",
      "path": "2",
      "statement": 15
    },
    "1562": {
      "fn": "ERC4973.ownerOf",
      "offset": [
        5422,
        5482
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x339"
    },
    "1565": {
      "branch": 90,
      "fn": "ERC4973.ownerOf",
      "offset": [
        5422,
        5482
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "1566": {
      "fn": "ERC4973.ownerOf",
      "offset": [
        5422,
        5482
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "1568": {
      "fn": "ERC4973.ownerOf",
      "offset": [
        5422,
        5482
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "1569": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1573": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1575": {
      "op": "SHL"
    },
    "1576": {
      "fn": "ERC4973.ownerOf",
      "offset": [
        5422,
        5482
      ],
      "op": "DUP2",
      "path": "2"
    },
    "1577": {
      "fn": "ERC4973.ownerOf",
      "offset": [
        5422,
        5482
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "1578": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1580": {
      "fn": "ERC4973.ownerOf",
      "offset": [
        5422,
        5482
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "1582": {
      "fn": "ERC4973.ownerOf",
      "offset": [
        5422,
        5482
      ],
      "op": "DUP3",
      "path": "2"
    },
    "1583": {
      "fn": "ERC4973.ownerOf",
      "offset": [
        5422,
        5482
      ],
      "op": "ADD",
      "path": "2"
    },
    "1584": {
      "op": "MSTORE"
    },
    "1585": {
      "op": "PUSH1",
      "value": "0x1C"
    },
    "1587": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "1589": {
      "op": "DUP3"
    },
    "1590": {
      "op": "ADD"
    },
    "1591": {
      "op": "MSTORE"
    },
    "1592": {
      "op": "PUSH32",
      "value": "0x6F776E65724F663A20746F6B656E20646F65736E277420657869737400000000"
    },
    "1625": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "1627": {
      "op": "DUP3"
    },
    "1628": {
      "op": "ADD"
    },
    "1629": {
      "op": "MSTORE"
    },
    "1630": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "1632": {
      "op": "ADD"
    },
    "1633": {
      "fn": "ERC4973.ownerOf",
      "offset": [
        5422,
        5482
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x422"
    },
    "1636": {
      "op": "JUMP"
    },
    "1637": {
      "fn": "ERC4973.balanceOf",
      "offset": [
        5105,
        5302
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1638": {
      "fn": "ERC4973.balanceOf",
      "offset": [
        5177,
        5184
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "1640": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1642": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1644": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1646": {
      "op": "SHL"
    },
    "1647": {
      "op": "SUB"
    },
    "1648": {
      "fn": "ERC4973.balanceOf",
      "offset": [
        5200,
        5219
      ],
      "op": "DUP3",
      "path": "2",
      "statement": 16
    },
    "1649": {
      "branch": 91,
      "fn": "ERC4973.balanceOf",
      "offset": [
        5200,
        5219
      ],
      "op": "AND",
      "path": "2"
    },
    "1650": {
      "fn": "ERC4973.balanceOf",
      "offset": [
        5192,
        5268
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x6D2"
    },
    "1653": {
      "branch": 91,
      "fn": "ERC4973.balanceOf",
      "offset": [
        5192,
        5268
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "1654": {
      "fn": "ERC4973.balanceOf",
      "offset": [
        5192,
        5268
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "1656": {
      "fn": "ERC4973.balanceOf",
      "offset": [
        5192,
        5268
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "1657": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1661": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1663": {
      "op": "SHL"
    },
    "1664": {
      "fn": "ERC4973.balanceOf",
      "offset": [
        5192,
        5268
      ],
      "op": "DUP2",
      "path": "2"
    },
    "1665": {
      "fn": "ERC4973.balanceOf",
      "offset": [
        5192,
        5268
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "1666": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1668": {
      "fn": "ERC4973.balanceOf",
      "offset": [
        5192,
        5268
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "1670": {
      "fn": "ERC4973.balanceOf",
      "offset": [
        5192,
        5268
      ],
      "op": "DUP3",
      "path": "2"
    },
    "1671": {
      "fn": "ERC4973.balanceOf",
      "offset": [
        5192,
        5268
      ],
      "op": "ADD",
      "path": "2"
    },
    "1672": {
      "op": "MSTORE"
    },
    "1673": {
      "op": "PUSH1",
      "value": "0x2C"
    },
    "1675": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "1677": {
      "op": "DUP3"
    },
    "1678": {
      "op": "ADD"
    },
    "1679": {
      "op": "MSTORE"
    },
    "1680": {
      "op": "PUSH32",
      "value": "0x62616C616E63654F663A2061646472657373207A65726F206973206E6F742061"
    },
    "1713": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "1715": {
      "op": "DUP3"
    },
    "1716": {
      "op": "ADD"
    },
    "1717": {
      "op": "MSTORE"
    },
    "1718": {
      "op": "PUSH12",
      "value": "0x103B30B634B21037BBB732B9"
    },
    "1731": {
      "op": "PUSH1",
      "value": "0xA1"
    },
    "1733": {
      "op": "SHL"
    },
    "1734": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "1736": {
      "op": "DUP3"
    },
    "1737": {
      "op": "ADD"
    },
    "1738": {
      "op": "MSTORE"
    },
    "1739": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "1741": {
      "op": "ADD"
    },
    "1742": {
      "fn": "ERC4973.balanceOf",
      "offset": [
        5192,
        5268
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x422"
    },
    "1745": {
      "op": "JUMP"
    },
    "1746": {
      "fn": "ERC4973.balanceOf",
      "offset": [
        5192,
        5268
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1747": {
      "op": "POP"
    },
    "1748": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1750": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1752": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1754": {
      "op": "SHL"
    },
    "1755": {
      "op": "SUB"
    },
    "1756": {
      "fn": "ERC4973.balanceOf",
      "offset": [
        5281,
        5297
      ],
      "op": "AND",
      "path": "2",
      "statement": 17
    },
    "1757": {
      "fn": "ERC4973.balanceOf",
      "offset": [
        5281,
        5297
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "1759": {
      "fn": "ERC4973.balanceOf",
      "offset": [
        5281,
        5297
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1760": {
      "fn": "ERC4973.balanceOf",
      "offset": [
        5281,
        5297
      ],
      "op": "DUP2",
      "path": "2"
    },
    "1761": {
      "fn": "ERC4973.balanceOf",
      "offset": [
        5281,
        5297
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "1762": {
      "fn": "ERC4973.balanceOf",
      "offset": [
        5281,
        5290
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "1764": {
      "fn": "ERC4973.balanceOf",
      "offset": [
        5281,
        5297
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "1766": {
      "fn": "ERC4973.balanceOf",
      "offset": [
        5281,
        5297
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "1767": {
      "fn": "ERC4973.balanceOf",
      "offset": [
        5281,
        5297
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "1769": {
      "fn": "ERC4973.balanceOf",
      "offset": [
        5281,
        5297
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1770": {
      "fn": "ERC4973.balanceOf",
      "offset": [
        5281,
        5297
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "1771": {
      "fn": "ERC4973.balanceOf",
      "offset": [
        5281,
        5297
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "1772": {
      "fn": "ERC4973.balanceOf",
      "offset": [
        5281,
        5297
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1773": {
      "fn": "ERC4973.balanceOf",
      "jump": "o",
      "offset": [
        5105,
        5302
      ],
      "op": "JUMP",
      "path": "2"
    },
    "1774": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        2147,
        2248
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "1775": {
      "offset": [
        1401,
        1414
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x6F6"
    },
    "1778": {
      "offset": [
        1401,
        1412
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0xEDA"
    },
    "1781": {
      "jump": "i",
      "offset": [
        1401,
        1414
      ],
      "op": "JUMP",
      "path": "5"
    },
    "1782": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1401,
        1414
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "1783": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        2211,
        2241
      ],
      "op": "PUSH2",
      "path": "5",
      "statement": 18,
      "value": "0x700"
    },
    "1786": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        2238,
        2239
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "1788": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        2211,
        2229
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0xF34"
    },
    "1791": {
      "fn": "Ownable.renounceOwnership",
      "jump": "i",
      "offset": [
        2211,
        2241
      ],
      "op": "JUMP",
      "path": "5"
    },
    "1792": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        2211,
        2241
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "1793": {
      "fn": "Ownable.renounceOwnership",
      "jump": "o",
      "offset": [
        2147,
        2248
      ],
      "op": "JUMP",
      "path": "5"
    },
    "1794": {
      "fn": "SoulboundCore.setBaseURI",
      "offset": [
        5491,
        5682
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "1795": {
      "offset": [
        1401,
        1414
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x70A"
    },
    "1798": {
      "offset": [
        1401,
        1412
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0xEDA"
    },
    "1801": {
      "jump": "i",
      "offset": [
        1401,
        1414
      ],
      "op": "JUMP",
      "path": "5"
    },
    "1802": {
      "fn": "SoulboundCore.setBaseURI",
      "offset": [
        1401,
        1414
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "1803": {
      "fn": "SoulboundCore.setBaseURI",
      "offset": [
        5602,
        5608
      ],
      "op": "DUP2",
      "path": "7"
    },
    "1804": {
      "offset": [
        1669,
        1688
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x71D"
    },
    "1807": {
      "fn": "Allowlist.getAllowlistOwner",
      "offset": [
        2103,
        2117
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x8"
    },
    "1809": {
      "fn": "Allowlist.getAllowlistOwner",
      "offset": [
        2103,
        2117
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "1810": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1812": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1814": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1816": {
      "op": "SHL"
    },
    "1817": {
      "op": "SUB"
    },
    "1818": {
      "fn": "Allowlist.getAllowlistOwner",
      "offset": [
        2103,
        2117
      ],
      "op": "AND",
      "path": "3"
    },
    "1819": {
      "fn": "Allowlist.getAllowlistOwner",
      "offset": [
        2103,
        2117
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "1820": {
      "fn": "Allowlist.getAllowlistOwner",
      "offset": [
        2028,
        2124
      ],
      "op": "JUMP",
      "path": "3"
    },
    "1821": {
      "offset": [
        1669,
        1688
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "1822": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1824": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1826": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1828": {
      "op": "SHL"
    },
    "1829": {
      "op": "SUB"
    },
    "1830": {
      "offset": [
        1658,
        1688
      ],
      "op": "AND",
      "path": "7"
    },
    "1831": {
      "offset": [
        1658,
        1665
      ],
      "op": "DUP2",
      "path": "7"
    },
    "1832": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1834": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1836": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1838": {
      "op": "SHL"
    },
    "1839": {
      "op": "SUB"
    },
    "1840": {
      "offset": [
        1658,
        1688
      ],
      "op": "AND",
      "path": "7"
    },
    "1841": {
      "branch": 82,
      "fn": "Allowlist.getAllowlistOwner",
      "offset": [
        1658,
        1688
      ],
      "op": "EQ",
      "path": "7"
    },
    "1842": {
      "offset": [
        1650,
        1713
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x774"
    },
    "1845": {
      "branch": 82,
      "offset": [
        1650,
        1713
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "1846": {
      "fn": "Allowlist.getAllowlistOwner",
      "offset": [
        1650,
        1713
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x40"
    },
    "1848": {
      "fn": "Allowlist.getAllowlistOwner",
      "offset": [
        1650,
        1713
      ],
      "op": "MLOAD",
      "path": "7"
    },
    "1849": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1853": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1855": {
      "op": "SHL"
    },
    "1856": {
      "offset": [
        1650,
        1713
      ],
      "op": "DUP2",
      "path": "7"
    },
    "1857": {
      "fn": "Allowlist.getAllowlistOwner",
      "offset": [
        1650,
        1713
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "1858": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1860": {
      "offset": [
        1650,
        1713
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x4"
    },
    "1862": {
      "fn": "Allowlist.getAllowlistOwner",
      "offset": [
        1650,
        1713
      ],
      "op": "DUP3",
      "path": "7"
    },
    "1863": {
      "fn": "Allowlist.getAllowlistOwner",
      "offset": [
        1650,
        1713
      ],
      "op": "ADD",
      "path": "7"
    },
    "1864": {
      "op": "MSTORE"
    },
    "1865": {
      "op": "PUSH1",
      "value": "0x14"
    },
    "1867": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "1869": {
      "op": "DUP3"
    },
    "1870": {
      "op": "ADD"
    },
    "1871": {
      "op": "MSTORE"
    },
    "1872": {
      "op": "PUSH20",
      "value": "0x4E6F7420416C6C6F776C697374204F776E657221"
    },
    "1893": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "1895": {
      "op": "SHL"
    },
    "1896": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "1898": {
      "op": "DUP3"
    },
    "1899": {
      "op": "ADD"
    },
    "1900": {
      "op": "MSTORE"
    },
    "1901": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "1903": {
      "op": "ADD"
    },
    "1904": {
      "offset": [
        1650,
        1713
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x422"
    },
    "1907": {
      "op": "JUMP"
    },
    "1908": {
      "offset": [
        1650,
        1713
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "1909": {
      "fn": "SoulboundCore.setBaseURI",
      "offset": [
        5654,
        5675
      ],
      "op": "PUSH2",
      "path": "7",
      "statement": 19,
      "value": "0x77D"
    },
    "1912": {
      "fn": "SoulboundCore.setBaseURI",
      "offset": [
        5666,
        5674
      ],
      "op": "DUP3",
      "path": "7"
    },
    "1913": {
      "fn": "SoulboundCore.setBaseURI",
      "offset": [
        5654,
        5665
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0xF86"
    },
    "1916": {
      "fn": "SoulboundCore.setBaseURI",
      "jump": "i",
      "offset": [
        5654,
        5675
      ],
      "op": "JUMP",
      "path": "7"
    },
    "1917": {
      "fn": "SoulboundCore.setBaseURI",
      "offset": [
        5654,
        5675
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "1918": {
      "offset": [
        1424,
        1425
      ],
      "op": "POP",
      "path": "5"
    },
    "1919": {
      "fn": "SoulboundCore.setBaseURI",
      "offset": [
        5491,
        5682
      ],
      "op": "POP",
      "path": "7"
    },
    "1920": {
      "fn": "SoulboundCore.setBaseURI",
      "offset": [
        5491,
        5682
      ],
      "op": "POP",
      "path": "7"
    },
    "1921": {
      "fn": "SoulboundCore.setBaseURI",
      "jump": "o",
      "offset": [
        5491,
        5682
      ],
      "op": "JUMP",
      "path": "7"
    },
    "1922": {
      "fn": "ERC4973.symbol",
      "offset": [
        4653,
        4749
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1923": {
      "fn": "ERC4973.symbol",
      "offset": [
        4709,
        4722
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x60"
    },
    "1925": {
      "fn": "ERC4973.symbol",
      "offset": [
        4737,
        4744
      ],
      "op": "PUSH1",
      "path": "2",
      "statement": 20,
      "value": "0x1"
    },
    "1927": {
      "fn": "ERC4973.symbol",
      "offset": [
        4730,
        4744
      ],
      "op": "DUP1",
      "path": "2"
    },
    "1928": {
      "fn": "ERC4973.symbol",
      "offset": [
        4730,
        4744
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "1929": {
      "fn": "ERC4973.symbol",
      "offset": [
        4730,
        4744
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x34E"
    },
    "1932": {
      "fn": "ERC4973.symbol",
      "offset": [
        4730,
        4744
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1933": {
      "fn": "ERC4973.symbol",
      "offset": [
        4730,
        4744
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x17FD"
    },
    "1936": {
      "fn": "ERC4973.symbol",
      "jump": "i",
      "offset": [
        4730,
        4744
      ],
      "op": "JUMP",
      "path": "2"
    },
    "1937": {
      "fn": "ERC4973.tokenURI",
      "offset": [
        4753,
        4942
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1938": {
      "fn": "ERC4973.tokenURI",
      "offset": [
        4826,
        4839
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x60"
    },
    "1940": {
      "fn": "ERC4973.tokenURI",
      "offset": [
        4855,
        4871
      ],
      "op": "PUSH2",
      "path": "2",
      "statement": 21,
      "value": "0x79C"
    },
    "1943": {
      "fn": "ERC4973.tokenURI",
      "offset": [
        4863,
        4870
      ],
      "op": "DUP3",
      "path": "2"
    },
    "1944": {
      "fn": "ERC4973.tokenURI",
      "offset": [
        4855,
        4862
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xC48"
    },
    "1947": {
      "fn": "ERC4973.tokenURI",
      "jump": "i",
      "offset": [
        4855,
        4871
      ],
      "op": "JUMP",
      "path": "2"
    },
    "1948": {
      "branch": 92,
      "fn": "ERC4973.tokenURI",
      "offset": [
        4855,
        4871
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1949": {
      "fn": "ERC4973.tokenURI",
      "offset": [
        4847,
        4905
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x7E8"
    },
    "1952": {
      "branch": 92,
      "fn": "ERC4973.tokenURI",
      "offset": [
        4847,
        4905
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "1953": {
      "fn": "ERC4973.tokenURI",
      "offset": [
        4847,
        4905
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "1955": {
      "fn": "ERC4973.tokenURI",
      "offset": [
        4847,
        4905
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "1956": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1960": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1962": {
      "op": "SHL"
    },
    "1963": {
      "fn": "ERC4973.tokenURI",
      "offset": [
        4847,
        4905
      ],
      "op": "DUP2",
      "path": "2"
    },
    "1964": {
      "fn": "ERC4973.tokenURI",
      "offset": [
        4847,
        4905
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "1965": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1967": {
      "fn": "ERC4973.tokenURI",
      "offset": [
        4847,
        4905
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "1969": {
      "fn": "ERC4973.tokenURI",
      "offset": [
        4847,
        4905
      ],
      "op": "DUP3",
      "path": "2"
    },
    "1970": {
      "fn": "ERC4973.tokenURI",
      "offset": [
        4847,
        4905
      ],
      "op": "ADD",
      "path": "2"
    },
    "1971": {
      "op": "MSTORE"
    },
    "1972": {
      "op": "PUSH1",
      "value": "0x1D"
    },
    "1974": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "1976": {
      "op": "DUP3"
    },
    "1977": {
      "op": "ADD"
    },
    "1978": {
      "op": "MSTORE"
    },
    "1979": {
      "op": "PUSH32",
      "value": "0x746F6B656E5552493A20746F6B656E20646F65736E2774206578697374000000"
    },
    "2012": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "2014": {
      "op": "DUP3"
    },
    "2015": {
      "op": "ADD"
    },
    "2016": {
      "op": "MSTORE"
    },
    "2017": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "2019": {
      "op": "ADD"
    },
    "2020": {
      "fn": "ERC4973.tokenURI",
      "offset": [
        4847,
        4905
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x422"
    },
    "2023": {
      "op": "JUMP"
    },
    "2024": {
      "fn": "ERC4973.tokenURI",
      "offset": [
        4847,
        4905
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "2025": {
      "fn": "ERC4973.tokenURI",
      "offset": [
        4918,
        4937
      ],
      "op": "PUSH1",
      "path": "2",
      "statement": 22,
      "value": "0x0"
    },
    "2027": {
      "fn": "ERC4973.tokenURI",
      "offset": [
        4918,
        4937
      ],
      "op": "DUP3",
      "path": "2"
    },
    "2028": {
      "fn": "ERC4973.tokenURI",
      "offset": [
        4918,
        4937
      ],
      "op": "DUP2",
      "path": "2"
    },
    "2029": {
      "fn": "ERC4973.tokenURI",
      "offset": [
        4918,
        4937
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "2030": {
      "fn": "ERC4973.tokenURI",
      "offset": [
        4918,
        4928
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x3"
    },
    "2032": {
      "fn": "ERC4973.tokenURI",
      "offset": [
        4918,
        4937
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "2034": {
      "fn": "ERC4973.tokenURI",
      "offset": [
        4918,
        4937
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "2035": {
      "fn": "ERC4973.tokenURI",
      "offset": [
        4918,
        4937
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "2037": {
      "fn": "ERC4973.tokenURI",
      "offset": [
        4918,
        4937
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "2038": {
      "fn": "ERC4973.tokenURI",
      "offset": [
        4918,
        4937
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "2039": {
      "fn": "ERC4973.tokenURI",
      "offset": [
        4911,
        4937
      ],
      "op": "DUP1",
      "path": "2"
    },
    "2040": {
      "fn": "ERC4973.tokenURI",
      "offset": [
        4911,
        4937
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "2041": {
      "fn": "ERC4973.tokenURI",
      "offset": [
        4911,
        4937
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x801"
    },
    "2044": {
      "fn": "ERC4973.tokenURI",
      "offset": [
        4911,
        4937
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "2045": {
      "fn": "ERC4973.tokenURI",
      "offset": [
        4911,
        4937
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x17FD"
    },
    "2048": {
      "fn": "ERC4973.tokenURI",
      "jump": "i",
      "offset": [
        4911,
        4937
      ],
      "op": "JUMP",
      "path": "2"
    },
    "2049": {
      "fn": "ERC4973.tokenURI",
      "offset": [
        4911,
        4937
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "2050": {
      "fn": "ERC4973.tokenURI",
      "offset": [
        4911,
        4937
      ],
      "op": "DUP1",
      "path": "2"
    },
    "2051": {
      "fn": "ERC4973.tokenURI",
      "offset": [
        4911,
        4937
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1F"
    },
    "2053": {
      "fn": "ERC4973.tokenURI",
      "offset": [
        4911,
        4937
      ],
      "op": "ADD",
      "path": "2"
    },
    "2054": {
      "fn": "ERC4973.tokenURI",
      "offset": [
        4911,
        4937
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "2056": {
      "fn": "ERC4973.tokenURI",
      "offset": [
        4911,
        4937
      ],
      "op": "DUP1",
      "path": "2"
    },
    "2057": {
      "fn": "ERC4973.tokenURI",
      "offset": [
        4911,
        4937
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "2058": {
      "fn": "ERC4973.tokenURI",
      "offset": [
        4911,
        4937
      ],
      "op": "DIV",
      "path": "2"
    },
    "2059": {
      "fn": "ERC4973.tokenURI",
      "offset": [
        4911,
        4937
      ],
      "op": "MUL",
      "path": "2"
    },
    "2060": {
      "fn": "ERC4973.tokenURI",
      "offset": [
        4911,
        4937
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "2062": {
      "fn": "ERC4973.tokenURI",
      "offset": [
        4911,
        4937
      ],
      "op": "ADD",
      "path": "2"
    },
    "2063": {
      "fn": "ERC4973.tokenURI",
      "offset": [
        4911,
        4937
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "2065": {
      "fn": "ERC4973.tokenURI",
      "offset": [
        4911,
        4937
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "2066": {
      "fn": "ERC4973.tokenURI",
      "offset": [
        4911,
        4937
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "2067": {
      "fn": "ERC4973.tokenURI",
      "offset": [
        4911,
        4937
      ],
      "op": "DUP2",
      "path": "2"
    },
    "2068": {
      "fn": "ERC4973.tokenURI",
      "offset": [
        4911,
        4937
      ],
      "op": "ADD",
      "path": "2"
    },
    "2069": {
      "fn": "ERC4973.tokenURI",
      "offset": [
        4911,
        4937
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "2071": {
      "fn": "ERC4973.tokenURI",
      "offset": [
        4911,
        4937
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "2072": {
      "fn": "ERC4973.tokenURI",
      "offset": [
        4911,
        4937
      ],
      "op": "DUP1",
      "path": "2"
    },
    "2073": {
      "fn": "ERC4973.tokenURI",
      "offset": [
        4911,
        4937
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "2074": {
      "fn": "ERC4973.tokenURI",
      "offset": [
        4911,
        4937
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "2075": {
      "fn": "ERC4973.tokenURI",
      "offset": [
        4911,
        4937
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "2076": {
      "fn": "ERC4973.tokenURI",
      "offset": [
        4911,
        4937
      ],
      "op": "DUP2",
      "path": "2"
    },
    "2077": {
      "fn": "ERC4973.tokenURI",
      "offset": [
        4911,
        4937
      ],
      "op": "DUP2",
      "path": "2"
    },
    "2078": {
      "fn": "ERC4973.tokenURI",
      "offset": [
        4911,
        4937
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "2079": {
      "fn": "ERC4973.tokenURI",
      "offset": [
        4911,
        4937
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "2081": {
      "fn": "ERC4973.tokenURI",
      "offset": [
        4911,
        4937
      ],
      "op": "ADD",
      "path": "2"
    },
    "2082": {
      "fn": "ERC4973.tokenURI",
      "offset": [
        4911,
        4937
      ],
      "op": "DUP3",
      "path": "2"
    },
    "2083": {
      "fn": "ERC4973.tokenURI",
      "offset": [
        4911,
        4937
      ],
      "op": "DUP1",
      "path": "2"
    },
    "2084": {
      "fn": "ERC4973.tokenURI",
      "offset": [
        4911,
        4937
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "2085": {
      "fn": "ERC4973.tokenURI",
      "offset": [
        4911,
        4937
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x82D"
    },
    "2088": {
      "fn": "ERC4973.tokenURI",
      "offset": [
        4911,
        4937
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "2089": {
      "fn": "ERC4973.tokenURI",
      "offset": [
        4911,
        4937
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x17FD"
    },
    "2092": {
      "fn": "ERC4973.tokenURI",
      "jump": "i",
      "offset": [
        4911,
        4937
      ],
      "op": "JUMP",
      "path": "2"
    },
    "2093": {
      "fn": "ERC4973.tokenURI",
      "offset": [
        4911,
        4937
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "2094": {
      "fn": "ERC4973.tokenURI",
      "offset": [
        4911,
        4937
      ],
      "op": "DUP1",
      "path": "2"
    },
    "2095": {
      "fn": "ERC4973.tokenURI",
      "offset": [
        4911,
        4937
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "2096": {
      "fn": "ERC4973.tokenURI",
      "offset": [
        4911,
        4937
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x87A"
    },
    "2099": {
      "fn": "ERC4973.tokenURI",
      "offset": [
        4911,
        4937
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "2100": {
      "fn": "ERC4973.tokenURI",
      "offset": [
        4911,
        4937
      ],
      "op": "DUP1",
      "path": "2"
    },
    "2101": {
      "fn": "ERC4973.tokenURI",
      "offset": [
        4911,
        4937
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1F"
    },
    "2103": {
      "fn": "ERC4973.tokenURI",
      "offset": [
        4911,
        4937
      ],
      "op": "LT",
      "path": "2"
    },
    "2104": {
      "fn": "ERC4973.tokenURI",
      "offset": [
        4911,
        4937
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x84F"
    },
    "2107": {
      "fn": "ERC4973.tokenURI",
      "offset": [
        4911,
        4937
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "2108": {
      "fn": "ERC4973.tokenURI",
      "offset": [
        4911,
        4937
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x100"
    },
    "2111": {
      "fn": "ERC4973.tokenURI",
      "offset": [
        4911,
        4937
      ],
      "op": "DUP1",
      "path": "2"
    },
    "2112": {
      "fn": "ERC4973.tokenURI",
      "offset": [
        4911,
        4937
      ],
      "op": "DUP4",
      "path": "2"
    },
    "2113": {
      "fn": "ERC4973.tokenURI",
      "offset": [
        4911,
        4937
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "2114": {
      "fn": "ERC4973.tokenURI",
      "offset": [
        4911,
        4937
      ],
      "op": "DIV",
      "path": "2"
    },
    "2115": {
      "fn": "ERC4973.tokenURI",
      "offset": [
        4911,
        4937
      ],
      "op": "MUL",
      "path": "2"
    },
    "2116": {
      "fn": "ERC4973.tokenURI",
      "offset": [
        4911,
        4937
      ],
      "op": "DUP4",
      "path": "2"
    },
    "2117": {
      "fn": "ERC4973.tokenURI",
      "offset": [
        4911,
        4937
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "2118": {
      "fn": "ERC4973.tokenURI",
      "offset": [
        4911,
        4937
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "2119": {
      "fn": "ERC4973.tokenURI",
      "offset": [
        4911,
        4937
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "2121": {
      "fn": "ERC4973.tokenURI",
      "offset": [
        4911,
        4937
      ],
      "op": "ADD",
      "path": "2"
    },
    "2122": {
      "fn": "ERC4973.tokenURI",
      "offset": [
        4911,
        4937
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "2123": {
      "fn": "ERC4973.tokenURI",
      "offset": [
        4911,
        4937
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x87A"
    },
    "2126": {
      "fn": "ERC4973.tokenURI",
      "offset": [
        4911,
        4937
      ],
      "op": "JUMP",
      "path": "2"
    },
    "2127": {
      "fn": "ERC4973.tokenURI",
      "offset": [
        4911,
        4937
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "2128": {
      "fn": "ERC4973.tokenURI",
      "offset": [
        4911,
        4937
      ],
      "op": "DUP3",
      "path": "2"
    },
    "2129": {
      "fn": "ERC4973.tokenURI",
      "offset": [
        4911,
        4937
      ],
      "op": "ADD",
      "path": "2"
    },
    "2130": {
      "fn": "ERC4973.tokenURI",
      "offset": [
        4911,
        4937
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "2131": {
      "fn": "ERC4973.tokenURI",
      "offset": [
        4911,
        4937
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "2132": {
      "fn": "ERC4973.tokenURI",
      "offset": [
        4911,
        4937
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "2134": {
      "fn": "ERC4973.tokenURI",
      "offset": [
        4911,
        4937
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "2135": {
      "fn": "ERC4973.tokenURI",
      "offset": [
        4911,
        4937
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "2137": {
      "fn": "ERC4973.tokenURI",
      "offset": [
        4911,
        4937
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "2139": {
      "fn": "ERC4973.tokenURI",
      "offset": [
        4911,
        4937
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "2140": {
      "fn": "ERC4973.tokenURI",
      "offset": [
        4911,
        4937
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "2141": {
      "fn": "ERC4973.tokenURI",
      "offset": [
        4911,
        4937
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "2142": {
      "fn": "ERC4973.tokenURI",
      "offset": [
        4911,
        4937
      ],
      "op": "DUP2",
      "path": "2"
    },
    "2143": {
      "fn": "ERC4973.tokenURI",
      "offset": [
        4911,
        4937
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "2144": {
      "fn": "ERC4973.tokenURI",
      "offset": [
        4911,
        4937
      ],
      "op": "DUP2",
      "path": "2"
    },
    "2145": {
      "fn": "ERC4973.tokenURI",
      "offset": [
        4911,
        4937
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "2146": {
      "fn": "ERC4973.tokenURI",
      "offset": [
        4911,
        4937
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "2147": {
      "fn": "ERC4973.tokenURI",
      "offset": [
        4911,
        4937
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1"
    },
    "2149": {
      "fn": "ERC4973.tokenURI",
      "offset": [
        4911,
        4937
      ],
      "op": "ADD",
      "path": "2"
    },
    "2150": {
      "fn": "ERC4973.tokenURI",
      "offset": [
        4911,
        4937
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "2151": {
      "fn": "ERC4973.tokenURI",
      "offset": [
        4911,
        4937
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "2153": {
      "fn": "ERC4973.tokenURI",
      "offset": [
        4911,
        4937
      ],
      "op": "ADD",
      "path": "2"
    },
    "2154": {
      "fn": "ERC4973.tokenURI",
      "offset": [
        4911,
        4937
      ],
      "op": "DUP1",
      "path": "2"
    },
    "2155": {
      "fn": "ERC4973.tokenURI",
      "offset": [
        4911,
        4937
      ],
      "op": "DUP4",
      "path": "2"
    },
    "2156": {
      "fn": "ERC4973.tokenURI",
      "offset": [
        4911,
        4937
      ],
      "op": "GT",
      "path": "2"
    },
    "2157": {
      "fn": "ERC4973.tokenURI",
      "offset": [
        4911,
        4937
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x85D"
    },
    "2160": {
      "fn": "ERC4973.tokenURI",
      "offset": [
        4911,
        4937
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "2161": {
      "fn": "ERC4973.tokenURI",
      "offset": [
        4911,
        4937
      ],
      "op": "DUP3",
      "path": "2"
    },
    "2162": {
      "fn": "ERC4973.tokenURI",
      "offset": [
        4911,
        4937
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "2163": {
      "fn": "ERC4973.tokenURI",
      "offset": [
        4911,
        4937
      ],
      "op": "SUB",
      "path": "2"
    },
    "2164": {
      "fn": "ERC4973.tokenURI",
      "offset": [
        4911,
        4937
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1F"
    },
    "2166": {
      "fn": "ERC4973.tokenURI",
      "offset": [
        4911,
        4937
      ],
      "op": "AND",
      "path": "2"
    },
    "2167": {
      "fn": "ERC4973.tokenURI",
      "offset": [
        4911,
        4937
      ],
      "op": "DUP3",
      "path": "2"
    },
    "2168": {
      "fn": "ERC4973.tokenURI",
      "offset": [
        4911,
        4937
      ],
      "op": "ADD",
      "path": "2"
    },
    "2169": {
      "fn": "ERC4973.tokenURI",
      "offset": [
        4911,
        4937
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "2170": {
      "fn": "ERC4973.tokenURI",
      "offset": [
        4911,
        4937
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "2171": {
      "fn": "ERC4973.tokenURI",
      "offset": [
        4911,
        4937
      ],
      "op": "POP",
      "path": "2"
    },
    "2172": {
      "fn": "ERC4973.tokenURI",
      "offset": [
        4911,
        4937
      ],
      "op": "POP",
      "path": "2"
    },
    "2173": {
      "fn": "ERC4973.tokenURI",
      "offset": [
        4911,
        4937
      ],
      "op": "POP",
      "path": "2"
    },
    "2174": {
      "fn": "ERC4973.tokenURI",
      "offset": [
        4911,
        4937
      ],
      "op": "POP",
      "path": "2"
    },
    "2175": {
      "fn": "ERC4973.tokenURI",
      "offset": [
        4911,
        4937
      ],
      "op": "POP",
      "path": "2"
    },
    "2176": {
      "fn": "ERC4973.tokenURI",
      "offset": [
        4911,
        4937
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "2177": {
      "fn": "ERC4973.tokenURI",
      "offset": [
        4911,
        4937
      ],
      "op": "POP",
      "path": "2"
    },
    "2178": {
      "fn": "ERC4973.tokenURI",
      "offset": [
        4753,
        4942
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "2179": {
      "fn": "ERC4973.tokenURI",
      "offset": [
        4753,
        4942
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "2180": {
      "fn": "ERC4973.tokenURI",
      "offset": [
        4753,
        4942
      ],
      "op": "POP",
      "path": "2"
    },
    "2181": {
      "fn": "ERC4973.tokenURI",
      "jump": "o",
      "offset": [
        4753,
        4942
      ],
      "op": "JUMP",
      "path": "2"
    },
    "2182": {
      "fn": "Soulbound._getBaseURI",
      "offset": [
        7349,
        7596
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "2183": {
      "fn": "Soulbound._getBaseURI",
      "offset": [
        7392,
        7414
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x60"
    },
    "2185": {
      "fn": "Soulbound._getBaseURI",
      "offset": [
        7490,
        7497
      ],
      "op": "PUSH1",
      "path": "6",
      "statement": 23,
      "value": "0x6"
    },
    "2187": {
      "fn": "Soulbound._getBaseURI",
      "offset": [
        7484,
        7505
      ],
      "op": "DUP1",
      "path": "6"
    },
    "2188": {
      "fn": "Soulbound._getBaseURI",
      "offset": [
        7484,
        7505
      ],
      "op": "SLOAD",
      "path": "6"
    },
    "2189": {
      "fn": "Soulbound._getBaseURI",
      "offset": [
        7484,
        7505
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x895"
    },
    "2192": {
      "fn": "Soulbound._getBaseURI",
      "offset": [
        7484,
        7505
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "2193": {
      "fn": "Soulbound._getBaseURI",
      "offset": [
        7484,
        7505
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x17FD"
    },
    "2196": {
      "fn": "Soulbound._getBaseURI",
      "jump": "i",
      "offset": [
        7484,
        7505
      ],
      "op": "JUMP",
      "path": "6"
    },
    "2197": {
      "fn": "Soulbound._getBaseURI",
      "offset": [
        7484,
        7505
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "2198": {
      "fn": "Soulbound._getBaseURI",
      "offset": [
        7484,
        7510
      ],
      "op": "ISZERO",
      "path": "6"
    },
    "2199": {
      "fn": "Soulbound._getBaseURI",
      "offset": [
        7484,
        7510
      ],
      "op": "ISZERO",
      "path": "6"
    },
    "2200": {
      "branch": 96,
      "fn": "Soulbound._getBaseURI",
      "offset": [
        7484,
        7510
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "2201": {
      "op": "POP"
    },
    "2202": {
      "fn": "Soulbound._getBaseURI",
      "offset": [
        7476,
        7528
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x8D5"
    },
    "2205": {
      "branch": 96,
      "fn": "Soulbound._getBaseURI",
      "offset": [
        7476,
        7528
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "2206": {
      "fn": "Soulbound._getBaseURI",
      "offset": [
        7476,
        7528
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "2208": {
      "fn": "Soulbound._getBaseURI",
      "offset": [
        7476,
        7528
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "2209": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "2213": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "2215": {
      "op": "SHL"
    },
    "2216": {
      "fn": "Soulbound._getBaseURI",
      "offset": [
        7476,
        7528
      ],
      "op": "DUP2",
      "path": "6"
    },
    "2217": {
      "fn": "Soulbound._getBaseURI",
      "offset": [
        7476,
        7528
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "2218": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2220": {
      "fn": "Soulbound._getBaseURI",
      "offset": [
        7476,
        7528
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x4"
    },
    "2222": {
      "fn": "Soulbound._getBaseURI",
      "offset": [
        7476,
        7528
      ],
      "op": "DUP3",
      "path": "6"
    },
    "2223": {
      "fn": "Soulbound._getBaseURI",
      "offset": [
        7476,
        7528
      ],
      "op": "ADD",
      "path": "6"
    },
    "2224": {
      "op": "MSTORE"
    },
    "2225": {
      "op": "PUSH1",
      "value": "0xD"
    },
    "2227": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "2229": {
      "op": "DUP3"
    },
    "2230": {
      "op": "ADD"
    },
    "2231": {
      "op": "MSTORE"
    },
    "2232": {
      "op": "PUSH13",
      "value": "0x456D7074792062617365555249"
    },
    "2246": {
      "op": "PUSH1",
      "value": "0x98"
    },
    "2248": {
      "op": "SHL"
    },
    "2249": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "2251": {
      "op": "DUP3"
    },
    "2252": {
      "op": "ADD"
    },
    "2253": {
      "op": "MSTORE"
    },
    "2254": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "2256": {
      "op": "ADD"
    },
    "2257": {
      "fn": "Soulbound._getBaseURI",
      "offset": [
        7476,
        7528
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x422"
    },
    "2260": {
      "op": "JUMP"
    },
    "2261": {
      "fn": "Soulbound._getBaseURI",
      "offset": [
        7476,
        7528
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "2262": {
      "fn": "Soulbound._getBaseURI",
      "offset": [
        7582,
        7589
      ],
      "op": "PUSH1",
      "path": "6",
      "statement": 24,
      "value": "0x6"
    },
    "2264": {
      "fn": "Soulbound._getBaseURI",
      "offset": [
        7571,
        7589
      ],
      "op": "DUP1",
      "path": "6"
    },
    "2265": {
      "fn": "Soulbound._getBaseURI",
      "offset": [
        7571,
        7589
      ],
      "op": "SLOAD",
      "path": "6"
    },
    "2266": {
      "fn": "Soulbound._getBaseURI",
      "offset": [
        7571,
        7589
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x34E"
    },
    "2269": {
      "fn": "Soulbound._getBaseURI",
      "offset": [
        7571,
        7589
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "2270": {
      "fn": "Soulbound._getBaseURI",
      "offset": [
        7571,
        7589
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x17FD"
    },
    "2273": {
      "fn": "Soulbound._getBaseURI",
      "jump": "i",
      "offset": [
        7571,
        7589
      ],
      "op": "JUMP",
      "path": "6"
    },
    "2274": {
      "fn": "SoulboundCore.issueWithSignature",
      "offset": [
        2769,
        3767
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "2275": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2277": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2279": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2281": {
      "op": "SHL"
    },
    "2282": {
      "op": "SUB"
    },
    "2283": {
      "fn": "SoulboundCore.issueWithSignature",
      "offset": [
        3024,
        3042
      ],
      "op": "DUP6",
      "path": "7",
      "statement": 25
    },
    "2284": {
      "branch": 83,
      "fn": "SoulboundCore.issueWithSignature",
      "offset": [
        3024,
        3042
      ],
      "op": "AND",
      "path": "7"
    },
    "2285": {
      "fn": "SoulboundCore.issueWithSignature",
      "offset": [
        3016,
        3068
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x930"
    },
    "2288": {
      "branch": 83,
      "fn": "SoulboundCore.issueWithSignature",
      "offset": [
        3016,
        3068
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "2289": {
      "fn": "SoulboundCore.issueWithSignature",
      "offset": [
        3016,
        3068
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x40"
    },
    "2291": {
      "fn": "SoulboundCore.issueWithSignature",
      "offset": [
        3016,
        3068
      ],
      "op": "MLOAD",
      "path": "7"
    },
    "2292": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "2296": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "2298": {
      "op": "SHL"
    },
    "2299": {
      "fn": "SoulboundCore.issueWithSignature",
      "offset": [
        3016,
        3068
      ],
      "op": "DUP2",
      "path": "7"
    },
    "2300": {
      "fn": "SoulboundCore.issueWithSignature",
      "offset": [
        3016,
        3068
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "2301": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2303": {
      "fn": "SoulboundCore.issueWithSignature",
      "offset": [
        3016,
        3068
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x4"
    },
    "2305": {
      "fn": "SoulboundCore.issueWithSignature",
      "offset": [
        3016,
        3068
      ],
      "op": "DUP3",
      "path": "7"
    },
    "2306": {
      "fn": "SoulboundCore.issueWithSignature",
      "offset": [
        3016,
        3068
      ],
      "op": "ADD",
      "path": "7"
    },
    "2307": {
      "op": "MSTORE"
    },
    "2308": {
      "op": "PUSH1",
      "value": "0x15"
    },
    "2310": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "2312": {
      "op": "DUP3"
    },
    "2313": {
      "op": "ADD"
    },
    "2314": {
      "op": "MSTORE"
    },
    "2315": {
      "op": "PUSH21",
      "value": "0x26B4B73A103A37903D32B9379030B2323932B9B997"
    },
    "2337": {
      "op": "PUSH1",
      "value": "0x59"
    },
    "2339": {
      "op": "SHL"
    },
    "2340": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "2342": {
      "op": "DUP3"
    },
    "2343": {
      "op": "ADD"
    },
    "2344": {
      "op": "MSTORE"
    },
    "2345": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "2347": {
      "op": "ADD"
    },
    "2348": {
      "fn": "SoulboundCore.issueWithSignature",
      "offset": [
        3016,
        3068
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x422"
    },
    "2351": {
      "op": "JUMP"
    },
    "2352": {
      "fn": "SoulboundCore.issueWithSignature",
      "offset": [
        3016,
        3068
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "2353": {
      "fn": "SoulboundCore.issueWithSignature",
      "offset": [
        3303,
        3306
      ],
      "op": "DUP3",
      "path": "7",
      "statement": 26
    },
    "2354": {
      "fn": "SoulboundCore.issueWithSignature",
      "offset": [
        3303,
        3313
      ],
      "op": "MLOAD",
      "path": "7"
    },
    "2355": {
      "fn": "SoulboundCore.issueWithSignature",
      "offset": [
        3317,
        3319
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x41"
    },
    "2357": {
      "branch": 84,
      "fn": "SoulboundCore.issueWithSignature",
      "offset": [
        3303,
        3319
      ],
      "op": "EQ",
      "path": "7"
    },
    "2358": {
      "fn": "SoulboundCore.issueWithSignature",
      "offset": [
        3295,
        3348
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x97C"
    },
    "2361": {
      "branch": 84,
      "fn": "SoulboundCore.issueWithSignature",
      "offset": [
        3295,
        3348
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "2362": {
      "fn": "SoulboundCore.issueWithSignature",
      "offset": [
        3295,
        3348
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x40"
    },
    "2364": {
      "fn": "SoulboundCore.issueWithSignature",
      "offset": [
        3295,
        3348
      ],
      "op": "MLOAD",
      "path": "7"
    },
    "2365": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "2369": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "2371": {
      "op": "SHL"
    },
    "2372": {
      "fn": "SoulboundCore.issueWithSignature",
      "offset": [
        3295,
        3348
      ],
      "op": "DUP2",
      "path": "7"
    },
    "2373": {
      "fn": "SoulboundCore.issueWithSignature",
      "offset": [
        3295,
        3348
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "2374": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2376": {
      "fn": "SoulboundCore.issueWithSignature",
      "offset": [
        3295,
        3348
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x4"
    },
    "2378": {
      "fn": "SoulboundCore.issueWithSignature",
      "offset": [
        3295,
        3348
      ],
      "op": "DUP3",
      "path": "7"
    },
    "2379": {
      "fn": "SoulboundCore.issueWithSignature",
      "offset": [
        3295,
        3348
      ],
      "op": "ADD",
      "path": "7"
    },
    "2380": {
      "op": "MSTORE"
    },
    "2381": {
      "op": "PUSH1",
      "value": "0x18"
    },
    "2383": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "2385": {
      "op": "DUP3"
    },
    "2386": {
      "op": "ADD"
    },
    "2387": {
      "op": "MSTORE"
    },
    "2388": {
      "op": "PUSH24",
      "value": "0x92DCECC2D8D2C840E6D2CEDCC2E8EAE4CA40D8CADCCEE8D"
    },
    "2413": {
      "op": "PUSH1",
      "value": "0x43"
    },
    "2415": {
      "op": "SHL"
    },
    "2416": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "2418": {
      "op": "DUP3"
    },
    "2419": {
      "op": "ADD"
    },
    "2420": {
      "op": "MSTORE"
    },
    "2421": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "2423": {
      "op": "ADD"
    },
    "2424": {
      "fn": "SoulboundCore.issueWithSignature",
      "offset": [
        3295,
        3348
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x422"
    },
    "2427": {
      "op": "JUMP"
    },
    "2428": {
      "fn": "SoulboundCore.issueWithSignature",
      "offset": [
        3295,
        3348
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "2429": {
      "fn": "SoulboundCore.issueWithSignature",
      "offset": [
        3475,
        3501
      ],
      "op": "PUSH2",
      "path": "7",
      "statement": 27,
      "value": "0x986"
    },
    "2432": {
      "fn": "SoulboundCore.issueWithSignature",
      "offset": [
        3491,
        3495
      ],
      "op": "DUP5",
      "path": "7"
    },
    "2433": {
      "fn": "SoulboundCore.issueWithSignature",
      "offset": [
        3497,
        3500
      ],
      "op": "DUP5",
      "path": "7"
    },
    "2434": {
      "fn": "SoulboundCore.issueWithSignature",
      "offset": [
        3475,
        3490
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0xA17"
    },
    "2437": {
      "fn": "SoulboundCore.issueWithSignature",
      "jump": "i",
      "offset": [
        3475,
        3501
      ],
      "op": "JUMP",
      "path": "7"
    },
    "2438": {
      "branch": 85,
      "fn": "SoulboundCore.issueWithSignature",
      "offset": [
        3475,
        3501
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "2439": {
      "fn": "SoulboundCore.issueWithSignature",
      "offset": [
        3467,
        3531
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x9CE"
    },
    "2442": {
      "branch": 85,
      "fn": "SoulboundCore.issueWithSignature",
      "offset": [
        3467,
        3531
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "2443": {
      "fn": "SoulboundCore.issueWithSignature",
      "offset": [
        3467,
        3531
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x40"
    },
    "2445": {
      "fn": "SoulboundCore.issueWithSignature",
      "offset": [
        3467,
        3531
      ],
      "op": "MLOAD",
      "path": "7"
    },
    "2446": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "2450": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "2452": {
      "op": "SHL"
    },
    "2453": {
      "fn": "SoulboundCore.issueWithSignature",
      "offset": [
        3467,
        3531
      ],
      "op": "DUP2",
      "path": "7"
    },
    "2454": {
      "fn": "SoulboundCore.issueWithSignature",
      "offset": [
        3467,
        3531
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "2455": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2457": {
      "fn": "SoulboundCore.issueWithSignature",
      "offset": [
        3467,
        3531
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x4"
    },
    "2459": {
      "fn": "SoulboundCore.issueWithSignature",
      "offset": [
        3467,
        3531
      ],
      "op": "DUP3",
      "path": "7"
    },
    "2460": {
      "fn": "SoulboundCore.issueWithSignature",
      "offset": [
        3467,
        3531
      ],
      "op": "ADD",
      "path": "7"
    },
    "2461": {
      "op": "MSTORE"
    },
    "2462": {
      "op": "PUSH1",
      "value": "0x19"
    },
    "2464": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "2466": {
      "op": "DUP3"
    },
    "2467": {
      "op": "ADD"
    },
    "2468": {
      "op": "MSTORE"
    },
    "2469": {
      "op": "PUSH25",
      "value": "0x2430B9B4103737BA1039B4B3B732B210313C9037BBB732B917"
    },
    "2495": {
      "op": "PUSH1",
      "value": "0x39"
    },
    "2497": {
      "op": "SHL"
    },
    "2498": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "2500": {
      "op": "DUP3"
    },
    "2501": {
      "op": "ADD"
    },
    "2502": {
      "op": "MSTORE"
    },
    "2503": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "2505": {
      "op": "ADD"
    },
    "2506": {
      "fn": "SoulboundCore.issueWithSignature",
      "offset": [
        3467,
        3531
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x422"
    },
    "2509": {
      "op": "JUMP"
    },
    "2510": {
      "fn": "SoulboundCore.issueWithSignature",
      "offset": [
        3467,
        3531
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "2511": {
      "fn": "SoulboundCore.issueWithSignature",
      "offset": [
        3630,
        3660
      ],
      "op": "PUSH2",
      "path": "7",
      "statement": 28,
      "value": "0x9D9"
    },
    "2514": {
      "fn": "SoulboundCore.issueWithSignature",
      "offset": [
        3636,
        3640
      ],
      "op": "DUP6",
      "path": "7"
    },
    "2515": {
      "fn": "SoulboundCore.issueWithSignature",
      "offset": [
        3642,
        3649
      ],
      "op": "DUP4",
      "path": "7"
    },
    "2516": {
      "fn": "SoulboundCore.issueWithSignature",
      "offset": [
        3651,
        3659
      ],
      "op": "DUP4",
      "path": "7"
    },
    "2517": {
      "fn": "SoulboundCore.issueWithSignature",
      "offset": [
        3630,
        3635
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0xFDC"
    },
    "2520": {
      "fn": "SoulboundCore.issueWithSignature",
      "jump": "i",
      "offset": [
        3630,
        3660
      ],
      "op": "JUMP",
      "path": "7"
    },
    "2521": {
      "fn": "SoulboundCore.issueWithSignature",
      "offset": [
        3630,
        3660
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "2522": {
      "op": "POP"
    },
    "2523": {
      "fn": "SoulboundCore.issueWithSignature",
      "offset": [
        3727,
        3760
      ],
      "op": "PUSH1",
      "path": "7",
      "statement": 29,
      "value": "0x40"
    },
    "2525": {
      "fn": "SoulboundCore.issueWithSignature",
      "offset": [
        3727,
        3760
      ],
      "op": "MLOAD",
      "path": "7"
    },
    "2526": {
      "fn": "SoulboundCore.issueWithSignature",
      "offset": [
        3752,
        3759
      ],
      "op": "DUP3",
      "path": "7"
    },
    "2527": {
      "fn": "SoulboundCore.issueWithSignature",
      "offset": [
        3752,
        3759
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "2528": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2530": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2532": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2534": {
      "op": "SHL"
    },
    "2535": {
      "op": "SUB"
    },
    "2536": {
      "fn": "SoulboundCore.issueWithSignature",
      "offset": [
        3727,
        3760
      ],
      "op": "DUP8",
      "path": "7"
    },
    "2537": {
      "fn": "SoulboundCore.issueWithSignature",
      "offset": [
        3727,
        3760
      ],
      "op": "AND",
      "path": "7"
    },
    "2538": {
      "fn": "SoulboundCore.issueWithSignature",
      "offset": [
        3727,
        3760
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "2539": {
      "fn": "SoulboundCore.issueWithSignature",
      "offset": [
        3727,
        3760
      ],
      "op": "PUSH32",
      "path": "7",
      "value": "0x79AF0E59B31823DD289CEEBABC4D63D25F35926B8548E3A084A500C9D4E18556"
    },
    "2572": {
      "fn": "SoulboundCore.issueWithSignature",
      "offset": [
        3727,
        3760
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "2573": {
      "fn": "SoulboundCore.issueWithSignature",
      "offset": [
        3727,
        3760
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x0"
    },
    "2575": {
      "fn": "SoulboundCore.issueWithSignature",
      "offset": [
        3727,
        3760
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "2576": {
      "fn": "SoulboundCore.issueWithSignature",
      "offset": [
        3727,
        3760
      ],
      "op": "LOG3",
      "path": "7"
    },
    "2577": {
      "fn": "SoulboundCore.issueWithSignature",
      "offset": [
        2769,
        3767
      ],
      "op": "POP",
      "path": "7"
    },
    "2578": {
      "fn": "SoulboundCore.issueWithSignature",
      "offset": [
        2769,
        3767
      ],
      "op": "POP",
      "path": "7"
    },
    "2579": {
      "fn": "SoulboundCore.issueWithSignature",
      "offset": [
        2769,
        3767
      ],
      "op": "POP",
      "path": "7"
    },
    "2580": {
      "fn": "SoulboundCore.issueWithSignature",
      "offset": [
        2769,
        3767
      ],
      "op": "POP",
      "path": "7"
    },
    "2581": {
      "fn": "SoulboundCore.issueWithSignature",
      "offset": [
        2769,
        3767
      ],
      "op": "POP",
      "path": "7"
    },
    "2582": {
      "fn": "SoulboundCore.issueWithSignature",
      "jump": "o",
      "offset": [
        2769,
        3767
      ],
      "op": "JUMP",
      "path": "7"
    },
    "2583": {
      "fn": "Allowlist.verifySignature",
      "offset": [
        2344,
        2487
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "2584": {
      "fn": "Allowlist.verifySignature",
      "offset": [
        2426,
        2430
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "2586": {
      "fn": "Allowlist.verifySignature",
      "offset": [
        2453,
        2480
      ],
      "op": "PUSH2",
      "path": "3",
      "statement": 30,
      "value": "0xA23"
    },
    "2589": {
      "fn": "Allowlist.verifySignature",
      "offset": [
        2470,
        2474
      ],
      "op": "DUP4",
      "path": "3"
    },
    "2590": {
      "fn": "Allowlist.verifySignature",
      "offset": [
        2476,
        2479
      ],
      "op": "DUP4",
      "path": "3"
    },
    "2591": {
      "fn": "Allowlist.verifySignature",
      "offset": [
        2453,
        2469
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xFF3"
    },
    "2594": {
      "fn": "Allowlist.verifySignature",
      "jump": "i",
      "offset": [
        2453,
        2480
      ],
      "op": "JUMP",
      "path": "3"
    },
    "2595": {
      "fn": "Allowlist.verifySignature",
      "offset": [
        2453,
        2480
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "2596": {
      "fn": "Allowlist.verifySignature",
      "offset": [
        2446,
        2480
      ],
      "op": "SWAP4",
      "path": "3"
    },
    "2597": {
      "fn": "Allowlist.verifySignature",
      "offset": [
        2344,
        2487
      ],
      "op": "SWAP3",
      "path": "3"
    },
    "2598": {
      "op": "POP"
    },
    "2599": {
      "op": "POP"
    },
    "2600": {
      "op": "POP"
    },
    "2601": {
      "fn": "Allowlist.verifySignature",
      "jump": "o",
      "offset": [
        2344,
        2487
      ],
      "op": "JUMP",
      "path": "3"
    },
    "2602": {
      "fn": "Allowlist.verifySigner",
      "offset": [
        4659,
        4927
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "2603": {
      "fn": "Allowlist.splitSignature",
      "offset": [
        5818,
        5820
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "2605": {
      "fn": "Allowlist.splitSignature",
      "offset": [
        5809,
        5821
      ],
      "op": "DUP2",
      "path": "3"
    },
    "2606": {
      "fn": "Allowlist.splitSignature",
      "offset": [
        5809,
        5821
      ],
      "op": "DUP2",
      "path": "3"
    },
    "2607": {
      "fn": "Allowlist.splitSignature",
      "offset": [
        5809,
        5821
      ],
      "op": "ADD",
      "path": "3"
    },
    "2608": {
      "fn": "Allowlist.splitSignature",
      "offset": [
        5803,
        5822
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "2609": {
      "fn": "Allowlist.splitSignature",
      "offset": [
        5893,
        5895
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "2611": {
      "fn": "Allowlist.splitSignature",
      "offset": [
        5884,
        5896
      ],
      "op": "DUP1",
      "path": "3"
    },
    "2612": {
      "fn": "Allowlist.splitSignature",
      "offset": [
        5884,
        5896
      ],
      "op": "DUP5",
      "path": "3"
    },
    "2613": {
      "fn": "Allowlist.splitSignature",
      "offset": [
        5884,
        5896
      ],
      "op": "ADD",
      "path": "3"
    },
    "2614": {
      "fn": "Allowlist.splitSignature",
      "offset": [
        5878,
        5897
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "2615": {
      "fn": "Allowlist.splitSignature",
      "offset": [
        6005,
        6007
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x60"
    },
    "2617": {
      "fn": "Allowlist.splitSignature",
      "offset": [
        5996,
        6008
      ],
      "op": "DUP1",
      "path": "3"
    },
    "2618": {
      "fn": "Allowlist.splitSignature",
      "offset": [
        5996,
        6008
      ],
      "op": "DUP7",
      "path": "3"
    },
    "2619": {
      "fn": "Allowlist.splitSignature",
      "offset": [
        5996,
        6008
      ],
      "op": "ADD",
      "path": "3"
    },
    "2620": {
      "fn": "Allowlist.splitSignature",
      "offset": [
        5990,
        6009
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "2621": {
      "fn": "Allowlist.verifySigner",
      "offset": [
        4894,
        4919
      ],
      "op": "DUP4",
      "path": "3",
      "statement": 31
    },
    "2622": {
      "fn": "Allowlist.verifySigner",
      "offset": [
        4894,
        4919
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "2623": {
      "fn": "Allowlist.verifySigner",
      "offset": [
        4790,
        4794
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "2625": {
      "fn": "Allowlist.verifySigner",
      "offset": [
        4894,
        4919
      ],
      "op": "DUP1",
      "path": "3"
    },
    "2626": {
      "fn": "Allowlist.verifySigner",
      "offset": [
        4894,
        4919
      ],
      "op": "DUP3",
      "path": "3"
    },
    "2627": {
      "fn": "Allowlist.verifySigner",
      "offset": [
        4894,
        4919
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "2628": {
      "fn": "Allowlist.verifySigner",
      "offset": [
        4894,
        4919
      ],
      "op": "DUP2",
      "path": "3"
    },
    "2629": {
      "fn": "Allowlist.verifySigner",
      "offset": [
        4894,
        4919
      ],
      "op": "DUP9",
      "path": "3"
    },
    "2630": {
      "fn": "Allowlist.verifySigner",
      "offset": [
        4894,
        4919
      ],
      "op": "ADD",
      "path": "3"
    },
    "2631": {
      "fn": "Allowlist.verifySigner",
      "offset": [
        4894,
        4919
      ],
      "op": "DUP1",
      "path": "3"
    },
    "2632": {
      "fn": "Allowlist.verifySigner",
      "offset": [
        4894,
        4919
      ],
      "op": "DUP8",
      "path": "3"
    },
    "2633": {
      "fn": "Allowlist.verifySigner",
      "offset": [
        4894,
        4919
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "2634": {
      "op": "DUP11"
    },
    "2635": {
      "op": "SWAP1"
    },
    "2636": {
      "op": "MSTORE"
    },
    "2637": {
      "fn": "Allowlist.splitSignature",
      "offset": [
        5982,
        6010
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "2638": {
      "fn": "Allowlist.splitSignature",
      "offset": [
        5982,
        6010
      ],
      "op": "DUP3",
      "path": "3"
    },
    "2639": {
      "fn": "Allowlist.splitSignature",
      "offset": [
        5982,
        6010
      ],
      "op": "BYTE",
      "path": "3"
    },
    "2640": {
      "op": "DUP2"
    },
    "2641": {
      "op": "DUP7"
    },
    "2642": {
      "op": "ADD"
    },
    "2643": {
      "op": "DUP2"
    },
    "2644": {
      "op": "SWAP1"
    },
    "2645": {
      "op": "MSTORE"
    },
    "2646": {
      "op": "SWAP3"
    },
    "2647": {
      "op": "DUP2"
    },
    "2648": {
      "op": "ADD"
    },
    "2649": {
      "op": "DUP7"
    },
    "2650": {
      "op": "SWAP1"
    },
    "2651": {
      "op": "MSTORE"
    },
    "2652": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "2654": {
      "op": "DUP2"
    },
    "2655": {
      "op": "ADD"
    },
    "2656": {
      "op": "DUP5"
    },
    "2657": {
      "op": "SWAP1"
    },
    "2658": {
      "op": "MSTORE"
    },
    "2659": {
      "fn": "Allowlist.verifySigner",
      "offset": [
        4894,
        4919
      ],
      "op": "SWAP4",
      "path": "3"
    },
    "2660": {
      "fn": "Allowlist.verifySigner",
      "offset": [
        4894,
        4919
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "2661": {
      "fn": "Allowlist.verifySigner",
      "offset": [
        4790,
        4794
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "2662": {
      "fn": "Allowlist.verifySigner",
      "offset": [
        4790,
        4794
      ],
      "op": "SWAP6",
      "path": "3"
    },
    "2663": {
      "fn": "Allowlist.splitSignature",
      "offset": [
        5878,
        5897
      ],
      "op": "SWAP3",
      "path": "3"
    },
    "2664": {
      "fn": "Allowlist.splitSignature",
      "offset": [
        5878,
        5897
      ],
      "op": "SWAP4",
      "path": "3"
    },
    "2665": {
      "fn": "Allowlist.splitSignature",
      "offset": [
        5982,
        6010
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "2666": {
      "fn": "Allowlist.splitSignature",
      "offset": [
        5982,
        6010
      ],
      "op": "SWAP3",
      "path": "3"
    },
    "2667": {
      "fn": "Allowlist.verifySigner",
      "offset": [
        4894,
        4919
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x1"
    },
    "2669": {
      "fn": "Allowlist.verifySigner",
      "offset": [
        4894,
        4919
      ],
      "op": "SWAP3",
      "path": "3"
    },
    "2670": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2672": {
      "op": "DUP1"
    },
    "2673": {
      "op": "DUP3"
    },
    "2674": {
      "op": "ADD"
    },
    "2675": {
      "op": "SWAP4"
    },
    "2676": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "2678": {
      "op": "NOT"
    },
    "2679": {
      "fn": "Allowlist.verifySigner",
      "offset": [
        4894,
        4919
      ],
      "op": "DUP2",
      "path": "3"
    },
    "2680": {
      "fn": "Allowlist.verifySigner",
      "offset": [
        4894,
        4919
      ],
      "op": "ADD",
      "path": "3"
    },
    "2681": {
      "fn": "Allowlist.verifySigner",
      "offset": [
        4894,
        4919
      ],
      "op": "SWAP3",
      "path": "3"
    },
    "2682": {
      "fn": "Allowlist.verifySigner",
      "offset": [
        4894,
        4919
      ],
      "op": "DUP2",
      "path": "3"
    },
    "2683": {
      "fn": "Allowlist.verifySigner",
      "offset": [
        4894,
        4919
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "2684": {
      "fn": "Allowlist.verifySigner",
      "offset": [
        4894,
        4919
      ],
      "op": "SUB",
      "path": "3"
    },
    "2685": {
      "fn": "Allowlist.verifySigner",
      "offset": [
        4894,
        4919
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "2686": {
      "fn": "Allowlist.verifySigner",
      "offset": [
        4894,
        4919
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "2687": {
      "fn": "Allowlist.verifySigner",
      "offset": [
        4894,
        4919
      ],
      "op": "ADD",
      "path": "3"
    },
    "2688": {
      "fn": "Allowlist.verifySigner",
      "offset": [
        4894,
        4919
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "2689": {
      "fn": "Allowlist.verifySigner",
      "offset": [
        4894,
        4919
      ],
      "op": "DUP6",
      "path": "3"
    },
    "2690": {
      "fn": "Allowlist.verifySigner",
      "offset": [
        4894,
        4919
      ],
      "op": "GAS",
      "path": "3"
    },
    "2691": {
      "fn": "Allowlist.verifySigner",
      "offset": [
        4894,
        4919
      ],
      "op": "STATICCALL",
      "path": "3"
    },
    "2692": {
      "fn": "Allowlist.verifySigner",
      "offset": [
        4894,
        4919
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "2693": {
      "fn": "Allowlist.verifySigner",
      "offset": [
        4894,
        4919
      ],
      "op": "DUP1",
      "path": "3"
    },
    "2694": {
      "fn": "Allowlist.verifySigner",
      "offset": [
        4894,
        4919
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "2695": {
      "fn": "Allowlist.verifySigner",
      "offset": [
        4894,
        4919
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xA94"
    },
    "2698": {
      "fn": "Allowlist.verifySigner",
      "offset": [
        4894,
        4919
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "2699": {
      "fn": "Allowlist.verifySigner",
      "offset": [
        4894,
        4919
      ],
      "op": "RETURNDATASIZE",
      "path": "3"
    },
    "2700": {
      "fn": "Allowlist.verifySigner",
      "offset": [
        4894,
        4919
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "2702": {
      "fn": "Allowlist.verifySigner",
      "offset": [
        4894,
        4919
      ],
      "op": "DUP1",
      "path": "3"
    },
    "2703": {
      "fn": "Allowlist.verifySigner",
      "offset": [
        4894,
        4919
      ],
      "op": "RETURNDATACOPY",
      "path": "3"
    },
    "2704": {
      "fn": "Allowlist.verifySigner",
      "offset": [
        4894,
        4919
      ],
      "op": "RETURNDATASIZE",
      "path": "3"
    },
    "2705": {
      "fn": "Allowlist.verifySigner",
      "offset": [
        4894,
        4919
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "2707": {
      "fn": "Allowlist.verifySigner",
      "offset": [
        4894,
        4919
      ],
      "op": "REVERT",
      "path": "3"
    },
    "2708": {
      "fn": "Allowlist.verifySigner",
      "offset": [
        4894,
        4919
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "2709": {
      "fn": "Allowlist.verifySigner",
      "offset": [
        4894,
        4919
      ],
      "op": "POP",
      "path": "3"
    },
    "2710": {
      "fn": "Allowlist.verifySigner",
      "offset": [
        4894,
        4919
      ],
      "op": "POP",
      "path": "3"
    },
    "2711": {
      "fn": "Allowlist.verifySigner",
      "offset": [
        4894,
        4919
      ],
      "op": "POP",
      "path": "3"
    },
    "2712": {
      "fn": "Allowlist.verifySigner",
      "offset": [
        4894,
        4919
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "2714": {
      "fn": "Allowlist.verifySigner",
      "offset": [
        4894,
        4919
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "2716": {
      "fn": "Allowlist.verifySigner",
      "offset": [
        4894,
        4919
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "2717": {
      "fn": "Allowlist.verifySigner",
      "offset": [
        4894,
        4919
      ],
      "op": "SUB",
      "path": "3"
    },
    "2718": {
      "fn": "Allowlist.verifySigner",
      "offset": [
        4894,
        4919
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "2719": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2721": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2723": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2725": {
      "op": "SHL"
    },
    "2726": {
      "op": "SUB"
    },
    "2727": {
      "fn": "Allowlist.verifySigner",
      "offset": [
        4883,
        4919
      ],
      "op": "AND",
      "path": "3"
    },
    "2728": {
      "fn": "Allowlist.verifySigner",
      "offset": [
        4883,
        4890
      ],
      "op": "DUP8",
      "path": "3"
    },
    "2729": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2731": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2733": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2735": {
      "op": "SHL"
    },
    "2736": {
      "op": "SUB"
    },
    "2737": {
      "fn": "Allowlist.verifySigner",
      "offset": [
        4883,
        4919
      ],
      "op": "AND",
      "path": "3"
    },
    "2738": {
      "fn": "Allowlist.verifySigner",
      "offset": [
        4883,
        4919
      ],
      "op": "EQ",
      "path": "3"
    },
    "2739": {
      "fn": "Allowlist.verifySigner",
      "offset": [
        4876,
        4920
      ],
      "op": "SWAP4",
      "path": "3"
    },
    "2740": {
      "fn": "Allowlist.verifySigner",
      "offset": [
        4876,
        4920
      ],
      "op": "POP",
      "path": "3"
    },
    "2741": {
      "fn": "Allowlist.verifySigner",
      "offset": [
        4876,
        4920
      ],
      "op": "POP",
      "path": "3"
    },
    "2742": {
      "fn": "Allowlist.verifySigner",
      "offset": [
        4876,
        4920
      ],
      "op": "POP",
      "path": "3"
    },
    "2743": {
      "fn": "Allowlist.verifySigner",
      "offset": [
        4876,
        4920
      ],
      "op": "POP",
      "path": "3"
    },
    "2744": {
      "fn": "Allowlist.verifySigner",
      "offset": [
        4659,
        4927
      ],
      "op": "SWAP4",
      "path": "3"
    },
    "2745": {
      "fn": "Allowlist.verifySigner",
      "offset": [
        4659,
        4927
      ],
      "op": "SWAP3",
      "path": "3"
    },
    "2746": {
      "fn": "Allowlist.verifySigner",
      "offset": [
        4659,
        4927
      ],
      "op": "POP",
      "path": "3"
    },
    "2747": {
      "fn": "Allowlist.verifySigner",
      "offset": [
        4659,
        4927
      ],
      "op": "POP",
      "path": "3"
    },
    "2748": {
      "fn": "Allowlist.verifySigner",
      "offset": [
        4659,
        4927
      ],
      "op": "POP",
      "path": "3"
    },
    "2749": {
      "fn": "Allowlist.verifySigner",
      "jump": "o",
      "offset": [
        4659,
        4927
      ],
      "op": "JUMP",
      "path": "3"
    },
    "2750": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2401,
        2599
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "2751": {
      "offset": [
        1401,
        1414
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0xAC6"
    },
    "2754": {
      "offset": [
        1401,
        1412
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0xEDA"
    },
    "2757": {
      "jump": "i",
      "offset": [
        1401,
        1414
      ],
      "op": "JUMP",
      "path": "5"
    },
    "2758": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1401,
        1414
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "2759": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2761": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2763": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2765": {
      "op": "SHL"
    },
    "2766": {
      "op": "SUB"
    },
    "2767": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2489,
        2511
      ],
      "op": "DUP2",
      "path": "5",
      "statement": 32
    },
    "2768": {
      "branch": 94,
      "fn": "Ownable.transferOwnership",
      "offset": [
        2489,
        2511
      ],
      "op": "AND",
      "path": "5"
    },
    "2769": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2481,
        2554
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0xB2B"
    },
    "2772": {
      "branch": 94,
      "fn": "Ownable.transferOwnership",
      "offset": [
        2481,
        2554
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "2773": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2481,
        2554
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "2775": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2481,
        2554
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "2776": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "2780": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "2782": {
      "op": "SHL"
    },
    "2783": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2481,
        2554
      ],
      "op": "DUP2",
      "path": "5"
    },
    "2784": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2481,
        2554
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "2785": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2787": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2481,
        2554
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x4"
    },
    "2789": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2481,
        2554
      ],
      "op": "DUP3",
      "path": "5"
    },
    "2790": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2481,
        2554
      ],
      "op": "ADD",
      "path": "5"
    },
    "2791": {
      "op": "MSTORE"
    },
    "2792": {
      "op": "PUSH1",
      "value": "0x26"
    },
    "2794": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "2796": {
      "op": "DUP3"
    },
    "2797": {
      "op": "ADD"
    },
    "2798": {
      "op": "MSTORE"
    },
    "2799": {
      "op": "PUSH32",
      "value": "0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061"
    },
    "2832": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "2834": {
      "op": "DUP3"
    },
    "2835": {
      "op": "ADD"
    },
    "2836": {
      "op": "MSTORE"
    },
    "2837": {
      "op": "PUSH6",
      "value": "0x646472657373"
    },
    "2844": {
      "op": "PUSH1",
      "value": "0xD0"
    },
    "2846": {
      "op": "SHL"
    },
    "2847": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "2849": {
      "op": "DUP3"
    },
    "2850": {
      "op": "ADD"
    },
    "2851": {
      "op": "MSTORE"
    },
    "2852": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "2854": {
      "op": "ADD"
    },
    "2855": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2481,
        2554
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x422"
    },
    "2858": {
      "op": "JUMP"
    },
    "2859": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2481,
        2554
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "2860": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2564,
        2592
      ],
      "op": "PUSH2",
      "path": "5",
      "statement": 33,
      "value": "0x5FD"
    },
    "2863": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2583,
        2591
      ],
      "op": "DUP2",
      "path": "5"
    },
    "2864": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2564,
        2582
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0xF34"
    },
    "2867": {
      "fn": "Ownable.transferOwnership",
      "jump": "i",
      "offset": [
        2564,
        2592
      ],
      "op": "JUMP",
      "path": "5"
    },
    "2868": {
      "fn": "Soulbound.issuerOf",
      "offset": [
        4288,
        4779
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "2869": {
      "fn": "Soulbound.issuerOf",
      "offset": [
        4357,
        4364
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "2871": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2873": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2875": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2877": {
      "op": "SHL"
    },
    "2878": {
      "op": "SUB"
    },
    "2879": {
      "fn": "Soulbound.issuerOf",
      "offset": [
        4436,
        4453
      ],
      "op": "DUP4",
      "path": "6",
      "statement": 34
    },
    "2880": {
      "branch": 97,
      "fn": "Soulbound.issuerOf",
      "offset": [
        4436,
        4453
      ],
      "op": "AND",
      "path": "6"
    },
    "2881": {
      "fn": "Soulbound.issuerOf",
      "offset": [
        4428,
        4481
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0xB8C"
    },
    "2884": {
      "branch": 97,
      "fn": "Soulbound.issuerOf",
      "offset": [
        4428,
        4481
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "2885": {
      "fn": "Soulbound.issuerOf",
      "offset": [
        4428,
        4481
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "2887": {
      "fn": "Soulbound.issuerOf",
      "offset": [
        4428,
        4481
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "2888": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "2892": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "2894": {
      "op": "SHL"
    },
    "2895": {
      "fn": "Soulbound.issuerOf",
      "offset": [
        4428,
        4481
      ],
      "op": "DUP2",
      "path": "6"
    },
    "2896": {
      "fn": "Soulbound.issuerOf",
      "offset": [
        4428,
        4481
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "2897": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2899": {
      "fn": "Soulbound.issuerOf",
      "offset": [
        4428,
        4481
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x4"
    },
    "2901": {
      "fn": "Soulbound.issuerOf",
      "offset": [
        4428,
        4481
      ],
      "op": "DUP3",
      "path": "6"
    },
    "2902": {
      "fn": "Soulbound.issuerOf",
      "offset": [
        4428,
        4481
      ],
      "op": "ADD",
      "path": "6"
    },
    "2903": {
      "op": "MSTORE"
    },
    "2904": {
      "op": "PUSH1",
      "value": "0x17"
    },
    "2906": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "2908": {
      "op": "DUP3"
    },
    "2909": {
      "op": "ADD"
    },
    "2910": {
      "op": "MSTORE"
    },
    "2911": {
      "op": "PUSH32",
      "value": "0x517565727920666F72207A65726F20616464726573732E000000000000000000"
    },
    "2944": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "2946": {
      "op": "DUP3"
    },
    "2947": {
      "op": "ADD"
    },
    "2948": {
      "op": "MSTORE"
    },
    "2949": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "2951": {
      "op": "ADD"
    },
    "2952": {
      "fn": "Soulbound.issuerOf",
      "offset": [
        4428,
        4481
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x422"
    },
    "2955": {
      "op": "JUMP"
    },
    "2956": {
      "fn": "Soulbound.issuerOf",
      "offset": [
        4428,
        4481
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "2957": {
      "fn": "Soulbound.issuerOf",
      "offset": [
        4538,
        4555
      ],
      "op": "PUSH2",
      "path": "6",
      "statement": 35,
      "value": "0xB95"
    },
    "2960": {
      "fn": "Soulbound.issuerOf",
      "offset": [
        4546,
        4554
      ],
      "op": "DUP3",
      "path": "6"
    },
    "2961": {
      "fn": "Soulbound.issuerOf",
      "offset": [
        4538,
        4545
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0xC48"
    },
    "2964": {
      "fn": "Soulbound.issuerOf",
      "jump": "i",
      "offset": [
        4538,
        4555
      ],
      "op": "JUMP",
      "path": "6"
    },
    "2965": {
      "branch": 98,
      "fn": "Soulbound.issuerOf",
      "offset": [
        4538,
        4555
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "2966": {
      "fn": "Soulbound.issuerOf",
      "offset": [
        4530,
        4579
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0xBD7"
    },
    "2969": {
      "branch": 98,
      "fn": "Soulbound.issuerOf",
      "offset": [
        4530,
        4579
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "2970": {
      "fn": "Soulbound.issuerOf",
      "offset": [
        4530,
        4579
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "2972": {
      "fn": "Soulbound.issuerOf",
      "offset": [
        4530,
        4579
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "2973": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "2977": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "2979": {
      "op": "SHL"
    },
    "2980": {
      "fn": "Soulbound.issuerOf",
      "offset": [
        4530,
        4579
      ],
      "op": "DUP2",
      "path": "6"
    },
    "2981": {
      "fn": "Soulbound.issuerOf",
      "offset": [
        4530,
        4579
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "2982": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2984": {
      "fn": "Soulbound.issuerOf",
      "offset": [
        4530,
        4579
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x4"
    },
    "2986": {
      "fn": "Soulbound.issuerOf",
      "offset": [
        4530,
        4579
      ],
      "op": "DUP3",
      "path": "6"
    },
    "2987": {
      "fn": "Soulbound.issuerOf",
      "offset": [
        4530,
        4579
      ],
      "op": "ADD",
      "path": "6"
    },
    "2988": {
      "op": "MSTORE"
    },
    "2989": {
      "op": "PUSH1",
      "value": "0x13"
    },
    "2991": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "2993": {
      "op": "DUP3"
    },
    "2994": {
      "op": "ADD"
    },
    "2995": {
      "op": "MSTORE"
    },
    "2996": {
      "op": "PUSH19",
      "value": "0x2737B716B2BC34B9BA32B73A103A37B5B2B717"
    },
    "3016": {
      "op": "PUSH1",
      "value": "0x69"
    },
    "3018": {
      "op": "SHL"
    },
    "3019": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "3021": {
      "op": "DUP3"
    },
    "3022": {
      "op": "ADD"
    },
    "3023": {
      "op": "MSTORE"
    },
    "3024": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "3026": {
      "op": "ADD"
    },
    "3027": {
      "fn": "Soulbound.issuerOf",
      "offset": [
        4530,
        4579
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x422"
    },
    "3030": {
      "op": "JUMP"
    },
    "3031": {
      "fn": "Soulbound.issuerOf",
      "offset": [
        4530,
        4579
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "3032": {
      "fn": "Soulbound.issuerOf",
      "offset": [
        4669,
        4672
      ],
      "op": "DUP3",
      "path": "6",
      "statement": 36
    },
    "3033": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3035": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3037": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3039": {
      "op": "SHL"
    },
    "3040": {
      "op": "SUB"
    },
    "3041": {
      "fn": "Soulbound.issuerOf",
      "offset": [
        4648,
        4672
      ],
      "op": "AND",
      "path": "6"
    },
    "3042": {
      "fn": "Soulbound.issuerOf",
      "offset": [
        4648,
        4665
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0xBEA"
    },
    "3045": {
      "fn": "Soulbound.issuerOf",
      "offset": [
        4656,
        4664
      ],
      "op": "DUP4",
      "path": "6"
    },
    "3046": {
      "fn": "Soulbound.issuerOf",
      "offset": [
        4648,
        4655
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x600"
    },
    "3049": {
      "fn": "Soulbound.issuerOf",
      "jump": "i",
      "offset": [
        4648,
        4665
      ],
      "op": "JUMP",
      "path": "6"
    },
    "3050": {
      "fn": "Soulbound.issuerOf",
      "offset": [
        4648,
        4665
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "3051": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3053": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3055": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3057": {
      "op": "SHL"
    },
    "3058": {
      "op": "SUB"
    },
    "3059": {
      "fn": "Soulbound.issuerOf",
      "offset": [
        4648,
        4672
      ],
      "op": "AND",
      "path": "6"
    },
    "3060": {
      "branch": 99,
      "fn": "Soulbound.issuerOf",
      "offset": [
        4648,
        4672
      ],
      "op": "EQ",
      "path": "6"
    },
    "3061": {
      "fn": "Soulbound.issuerOf",
      "offset": [
        4640,
        4703
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0xC40"
    },
    "3064": {
      "branch": 99,
      "fn": "Soulbound.issuerOf",
      "offset": [
        4640,
        4703
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "3065": {
      "fn": "Soulbound.issuerOf",
      "offset": [
        4640,
        4703
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "3067": {
      "fn": "Soulbound.issuerOf",
      "offset": [
        4640,
        4703
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "3068": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "3072": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "3074": {
      "op": "SHL"
    },
    "3075": {
      "fn": "Soulbound.issuerOf",
      "offset": [
        4640,
        4703
      ],
      "op": "DUP2",
      "path": "6"
    },
    "3076": {
      "fn": "Soulbound.issuerOf",
      "offset": [
        4640,
        4703
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "3077": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3079": {
      "fn": "Soulbound.issuerOf",
      "offset": [
        4640,
        4703
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x4"
    },
    "3081": {
      "fn": "Soulbound.issuerOf",
      "offset": [
        4640,
        4703
      ],
      "op": "DUP3",
      "path": "6"
    },
    "3082": {
      "fn": "Soulbound.issuerOf",
      "offset": [
        4640,
        4703
      ],
      "op": "ADD",
      "path": "6"
    },
    "3083": {
      "op": "MSTORE"
    },
    "3084": {
      "op": "PUSH1",
      "value": "0x1A"
    },
    "3086": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "3088": {
      "op": "DUP3"
    },
    "3089": {
      "op": "ADD"
    },
    "3090": {
      "op": "MSTORE"
    },
    "3091": {
      "op": "PUSH32",
      "value": "0x546F6B656E206E6F74206F776E65642062792061646472657373000000000000"
    },
    "3124": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "3126": {
      "op": "DUP3"
    },
    "3127": {
      "op": "ADD"
    },
    "3128": {
      "op": "MSTORE"
    },
    "3129": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "3131": {
      "op": "ADD"
    },
    "3132": {
      "fn": "Soulbound.issuerOf",
      "offset": [
        4640,
        4703
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x422"
    },
    "3135": {
      "op": "JUMP"
    },
    "3136": {
      "fn": "Soulbound.issuerOf",
      "offset": [
        4640,
        4703
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "3137": {
      "op": "POP"
    },
    "3138": {
      "fn": "Soulbound.issuerOf",
      "offset": [
        4767,
        4771
      ],
      "op": "ADDRESS",
      "path": "6",
      "statement": 37
    },
    "3139": {
      "fn": "Soulbound.issuerOf",
      "offset": [
        4288,
        4779
      ],
      "op": "SWAP3",
      "path": "6"
    },
    "3140": {
      "fn": "Soulbound.issuerOf",
      "offset": [
        4288,
        4779
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "3141": {
      "fn": "Soulbound.issuerOf",
      "offset": [
        4288,
        4779
      ],
      "op": "POP",
      "path": "6"
    },
    "3142": {
      "fn": "Soulbound.issuerOf",
      "offset": [
        4288,
        4779
      ],
      "op": "POP",
      "path": "6"
    },
    "3143": {
      "fn": "Soulbound.issuerOf",
      "jump": "o",
      "offset": [
        4288,
        4779
      ],
      "op": "JUMP",
      "path": "6"
    },
    "3144": {
      "fn": "ERC4973._exists",
      "offset": [
        5509,
        5628
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "3145": {
      "fn": "ERC4973._exists",
      "offset": [
        5574,
        5578
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "3147": {
      "fn": "ERC4973._exists",
      "offset": [
        5593,
        5609
      ],
      "op": "SWAP1",
      "path": "2",
      "statement": 38
    },
    "3148": {
      "fn": "ERC4973._exists",
      "offset": [
        5593,
        5609
      ],
      "op": "DUP2",
      "path": "2"
    },
    "3149": {
      "fn": "ERC4973._exists",
      "offset": [
        5593,
        5609
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "3150": {
      "fn": "ERC4973._exists",
      "offset": [
        5593,
        5600
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x2"
    },
    "3152": {
      "fn": "ERC4973._exists",
      "offset": [
        5593,
        5609
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "3154": {
      "fn": "ERC4973._exists",
      "offset": [
        5593,
        5609
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "3155": {
      "fn": "ERC4973._exists",
      "offset": [
        5593,
        5609
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "3157": {
      "fn": "ERC4973._exists",
      "offset": [
        5593,
        5609
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "3158": {
      "fn": "ERC4973._exists",
      "offset": [
        5593,
        5609
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "3159": {
      "fn": "ERC4973._exists",
      "offset": [
        5593,
        5609
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "3160": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3162": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3164": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3166": {
      "op": "SHL"
    },
    "3167": {
      "op": "SUB"
    },
    "3168": {
      "fn": "ERC4973._exists",
      "offset": [
        5593,
        5609
      ],
      "op": "AND",
      "path": "2"
    },
    "3169": {
      "fn": "ERC4973._exists",
      "offset": [
        5593,
        5623
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "3170": {
      "fn": "ERC4973._exists",
      "offset": [
        5593,
        5623
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "3171": {
      "fn": "ERC4973._exists",
      "offset": [
        5593,
        5623
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "3172": {
      "fn": "ERC4973._exists",
      "jump": "o",
      "offset": [
        5509,
        5628
      ],
      "op": "JUMP",
      "path": "2"
    },
    "3173": {
      "fn": "Soulbound.revoke",
      "offset": [
        3339,
        3766
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "3174": {
      "fn": "Soulbound.revoke",
      "offset": [
        3405,
        3409
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "3176": {
      "fn": "Soulbound.revoke",
      "offset": [
        3468,
        3485
      ],
      "op": "PUSH2",
      "path": "6",
      "statement": 39,
      "value": "0xC70"
    },
    "3179": {
      "fn": "Soulbound.revoke",
      "offset": [
        3476,
        3484
      ],
      "op": "DUP3",
      "path": "6"
    },
    "3180": {
      "fn": "Soulbound.revoke",
      "offset": [
        3468,
        3475
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0xC48"
    },
    "3183": {
      "fn": "Soulbound.revoke",
      "jump": "i",
      "offset": [
        3468,
        3485
      ],
      "op": "JUMP",
      "path": "6"
    },
    "3184": {
      "branch": 100,
      "fn": "Soulbound.revoke",
      "offset": [
        3468,
        3485
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "3185": {
      "fn": "Soulbound.revoke",
      "offset": [
        3460,
        3509
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0xCB2"
    },
    "3188": {
      "branch": 100,
      "fn": "Soulbound.revoke",
      "offset": [
        3460,
        3509
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "3189": {
      "fn": "Soulbound.revoke",
      "offset": [
        3460,
        3509
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "3191": {
      "fn": "Soulbound.revoke",
      "offset": [
        3460,
        3509
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "3192": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "3196": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "3198": {
      "op": "SHL"
    },
    "3199": {
      "fn": "Soulbound.revoke",
      "offset": [
        3460,
        3509
      ],
      "op": "DUP2",
      "path": "6"
    },
    "3200": {
      "fn": "Soulbound.revoke",
      "offset": [
        3460,
        3509
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "3201": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3203": {
      "fn": "Soulbound.revoke",
      "offset": [
        3460,
        3509
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x4"
    },
    "3205": {
      "fn": "Soulbound.revoke",
      "offset": [
        3460,
        3509
      ],
      "op": "DUP3",
      "path": "6"
    },
    "3206": {
      "fn": "Soulbound.revoke",
      "offset": [
        3460,
        3509
      ],
      "op": "ADD",
      "path": "6"
    },
    "3207": {
      "op": "MSTORE"
    },
    "3208": {
      "op": "PUSH1",
      "value": "0x13"
    },
    "3210": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "3212": {
      "op": "DUP3"
    },
    "3213": {
      "op": "ADD"
    },
    "3214": {
      "op": "MSTORE"
    },
    "3215": {
      "op": "PUSH19",
      "value": "0x2737B716B2BC34B9BA32B73A103A37B5B2B717"
    },
    "3235": {
      "op": "PUSH1",
      "value": "0x69"
    },
    "3237": {
      "op": "SHL"
    },
    "3238": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "3240": {
      "op": "DUP3"
    },
    "3241": {
      "op": "ADD"
    },
    "3242": {
      "op": "MSTORE"
    },
    "3243": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "3245": {
      "op": "ADD"
    },
    "3246": {
      "fn": "Soulbound.revoke",
      "offset": [
        3460,
        3509
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x422"
    },
    "3249": {
      "op": "JUMP"
    },
    "3250": {
      "fn": "Soulbound.revoke",
      "offset": [
        3460,
        3509
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "3251": {
      "fn": "Soulbound.revoke",
      "offset": [
        3601,
        3606
      ],
      "op": "DUP3",
      "path": "6",
      "statement": 40
    },
    "3252": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3254": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3256": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3258": {
      "op": "SHL"
    },
    "3259": {
      "op": "SUB"
    },
    "3260": {
      "fn": "Soulbound.revoke",
      "offset": [
        3580,
        3606
      ],
      "op": "AND",
      "path": "6"
    },
    "3261": {
      "fn": "Soulbound.revoke",
      "offset": [
        3580,
        3597
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0xCC5"
    },
    "3264": {
      "fn": "Soulbound.revoke",
      "offset": [
        3588,
        3596
      ],
      "op": "DUP4",
      "path": "6"
    },
    "3265": {
      "fn": "Soulbound.revoke",
      "offset": [
        3580,
        3587
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x600"
    },
    "3268": {
      "fn": "Soulbound.revoke",
      "jump": "i",
      "offset": [
        3580,
        3597
      ],
      "op": "JUMP",
      "path": "6"
    },
    "3269": {
      "fn": "Soulbound.revoke",
      "offset": [
        3580,
        3597
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "3270": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3272": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3274": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3276": {
      "op": "SHL"
    },
    "3277": {
      "op": "SUB"
    },
    "3278": {
      "fn": "Soulbound.revoke",
      "offset": [
        3580,
        3606
      ],
      "op": "AND",
      "path": "6"
    },
    "3279": {
      "branch": 101,
      "fn": "Soulbound.revoke",
      "offset": [
        3580,
        3606
      ],
      "op": "EQ",
      "path": "6"
    },
    "3280": {
      "fn": "Soulbound.revoke",
      "offset": [
        3572,
        3637
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0xD1B"
    },
    "3283": {
      "branch": 101,
      "fn": "Soulbound.revoke",
      "offset": [
        3572,
        3637
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "3284": {
      "fn": "Soulbound.revoke",
      "offset": [
        3572,
        3637
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "3286": {
      "fn": "Soulbound.revoke",
      "offset": [
        3572,
        3637
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "3287": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "3291": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "3293": {
      "op": "SHL"
    },
    "3294": {
      "fn": "Soulbound.revoke",
      "offset": [
        3572,
        3637
      ],
      "op": "DUP2",
      "path": "6"
    },
    "3295": {
      "fn": "Soulbound.revoke",
      "offset": [
        3572,
        3637
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "3296": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3298": {
      "fn": "Soulbound.revoke",
      "offset": [
        3572,
        3637
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x4"
    },
    "3300": {
      "fn": "Soulbound.revoke",
      "offset": [
        3572,
        3637
      ],
      "op": "DUP3",
      "path": "6"
    },
    "3301": {
      "fn": "Soulbound.revoke",
      "offset": [
        3572,
        3637
      ],
      "op": "ADD",
      "path": "6"
    },
    "3302": {
      "op": "MSTORE"
    },
    "3303": {
      "op": "PUSH1",
      "value": "0x1A"
    },
    "3305": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "3307": {
      "op": "DUP3"
    },
    "3308": {
      "op": "ADD"
    },
    "3309": {
      "op": "MSTORE"
    },
    "3310": {
      "op": "PUSH32",
      "value": "0x546F6B656E206E6F74206F776E65642062792061646472657373000000000000"
    },
    "3343": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "3345": {
      "op": "DUP3"
    },
    "3346": {
      "op": "ADD"
    },
    "3347": {
      "op": "MSTORE"
    },
    "3348": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "3350": {
      "op": "ADD"
    },
    "3351": {
      "fn": "Soulbound.revoke",
      "offset": [
        3572,
        3637
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x422"
    },
    "3354": {
      "op": "JUMP"
    },
    "3355": {
      "fn": "Soulbound.revoke",
      "offset": [
        3572,
        3637
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "3356": {
      "fn": "Soulbound.revoke",
      "offset": [
        3680,
        3708
      ],
      "op": "PUSH2",
      "path": "6",
      "statement": 41,
      "value": "0xD24"
    },
    "3359": {
      "fn": "Soulbound.revoke",
      "offset": [
        3699,
        3707
      ],
      "op": "DUP3",
      "path": "6"
    },
    "3360": {
      "fn": "Soulbound.revoke",
      "offset": [
        3680,
        3698
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x1176"
    },
    "3363": {
      "fn": "Soulbound.revoke",
      "jump": "i",
      "offset": [
        3680,
        3708
      ],
      "op": "JUMP",
      "path": "6"
    },
    "3364": {
      "fn": "Soulbound.revoke",
      "offset": [
        3680,
        3708
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "3365": {
      "op": "POP"
    },
    "3366": {
      "fn": "Soulbound.revoke",
      "offset": [
        3755,
        3759
      ],
      "op": "PUSH1",
      "path": "6",
      "statement": 42,
      "value": "0x1"
    },
    "3368": {
      "fn": "Soulbound.revoke",
      "offset": [
        3339,
        3766
      ],
      "op": "SWAP3",
      "path": "6"
    },
    "3369": {
      "fn": "Soulbound.revoke",
      "offset": [
        3339,
        3766
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "3370": {
      "fn": "Soulbound.revoke",
      "offset": [
        3339,
        3766
      ],
      "op": "POP",
      "path": "6"
    },
    "3371": {
      "fn": "Soulbound.revoke",
      "offset": [
        3339,
        3766
      ],
      "op": "POP",
      "path": "6"
    },
    "3372": {
      "fn": "Soulbound.revoke",
      "jump": "o",
      "offset": [
        3339,
        3766
      ],
      "op": "JUMP",
      "path": "6"
    },
    "3373": {
      "fn": "SoulboundCore.toString",
      "offset": [
        6613,
        7316
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "3374": {
      "fn": "SoulboundCore.toString",
      "offset": [
        6669,
        6682
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x60"
    },
    "3376": {
      "branch": 86,
      "fn": "SoulboundCore.toString",
      "offset": [
        6886,
        6896
      ],
      "op": "DUP2",
      "path": "7"
    },
    "3377": {
      "fn": "SoulboundCore.toString",
      "offset": [
        6882,
        6933
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0xD51"
    },
    "3380": {
      "branch": 86,
      "fn": "SoulboundCore.toString",
      "offset": [
        6882,
        6933
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "3381": {
      "op": "POP"
    },
    "3382": {
      "op": "POP"
    },
    "3383": {
      "fn": "SoulboundCore.toString",
      "offset": [
        6912,
        6922
      ],
      "op": "PUSH1",
      "path": "7",
      "statement": 43,
      "value": "0x40"
    },
    "3385": {
      "fn": "SoulboundCore.toString",
      "offset": [
        6912,
        6922
      ],
      "op": "DUP1",
      "path": "7"
    },
    "3386": {
      "fn": "SoulboundCore.toString",
      "offset": [
        6912,
        6922
      ],
      "op": "MLOAD",
      "path": "7"
    },
    "3387": {
      "fn": "SoulboundCore.toString",
      "offset": [
        6912,
        6922
      ],
      "op": "DUP1",
      "path": "7"
    },
    "3388": {
      "fn": "SoulboundCore.toString",
      "offset": [
        6912,
        6922
      ],
      "op": "DUP3",
      "path": "7"
    },
    "3389": {
      "fn": "SoulboundCore.toString",
      "offset": [
        6912,
        6922
      ],
      "op": "ADD",
      "path": "7"
    },
    "3390": {
      "fn": "SoulboundCore.toString",
      "offset": [
        6912,
        6922
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "3391": {
      "fn": "SoulboundCore.toString",
      "offset": [
        6912,
        6922
      ],
      "op": "SWAP2",
      "path": "7"
    },
    "3392": {
      "fn": "SoulboundCore.toString",
      "offset": [
        6912,
        6922
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "3393": {
      "fn": "SoulboundCore.toString",
      "offset": [
        6912,
        6922
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x1"
    },
    "3395": {
      "fn": "SoulboundCore.toString",
      "offset": [
        6912,
        6922
      ],
      "op": "DUP2",
      "path": "7"
    },
    "3396": {
      "fn": "SoulboundCore.toString",
      "offset": [
        6912,
        6922
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "3397": {
      "op": "PUSH1",
      "value": "0x3"
    },
    "3399": {
      "op": "PUSH1",
      "value": "0xFC"
    },
    "3401": {
      "op": "SHL"
    },
    "3402": {
      "fn": "SoulboundCore.toString",
      "offset": [
        6912,
        6922
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x20"
    },
    "3404": {
      "fn": "SoulboundCore.toString",
      "offset": [
        6912,
        6922
      ],
      "op": "DUP3",
      "path": "7"
    },
    "3405": {
      "fn": "SoulboundCore.toString",
      "offset": [
        6912,
        6922
      ],
      "op": "ADD",
      "path": "7"
    },
    "3406": {
      "fn": "SoulboundCore.toString",
      "offset": [
        6912,
        6922
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "3407": {
      "fn": "SoulboundCore.toString",
      "offset": [
        6912,
        6922
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "3408": {
      "fn": "SoulboundCore.toString",
      "jump": "o",
      "offset": [
        6613,
        7316
      ],
      "op": "JUMP",
      "path": "7"
    },
    "3409": {
      "fn": "SoulboundCore.toString",
      "offset": [
        6882,
        6933
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "3410": {
      "fn": "SoulboundCore.toString",
      "offset": [
        6957,
        6962
      ],
      "op": "DUP2",
      "path": "7"
    },
    "3411": {
      "fn": "SoulboundCore.toString",
      "offset": [
        6942,
        6954
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x0"
    },
    "3413": {
      "fn": "SoulboundCore.toString",
      "offset": [
        6996,
        7071
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "3414": {
      "fn": "SoulboundCore.toString",
      "offset": [
        7003,
        7012
      ],
      "op": "DUP2",
      "path": "7"
    },
    "3415": {
      "fn": "SoulboundCore.toString",
      "offset": [
        7003,
        7012
      ],
      "op": "ISZERO",
      "path": "7"
    },
    "3416": {
      "fn": "SoulboundCore.toString",
      "offset": [
        6996,
        7071
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0xD7B"
    },
    "3419": {
      "fn": "SoulboundCore.toString",
      "offset": [
        6996,
        7071
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "3420": {
      "fn": "SoulboundCore.toString",
      "offset": [
        7028,
        7036
      ],
      "op": "DUP1",
      "path": "7",
      "statement": 44
    },
    "3421": {
      "fn": "SoulboundCore.toString",
      "offset": [
        7028,
        7036
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0xD65"
    },
    "3424": {
      "fn": "SoulboundCore.toString",
      "offset": [
        7028,
        7036
      ],
      "op": "DUP2",
      "path": "7"
    },
    "3425": {
      "fn": "SoulboundCore.toString",
      "offset": [
        7028,
        7036
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x187D"
    },
    "3428": {
      "fn": "SoulboundCore.toString",
      "jump": "i",
      "offset": [
        7028,
        7036
      ],
      "op": "JUMP",
      "path": "7"
    },
    "3429": {
      "fn": "SoulboundCore.toString",
      "offset": [
        7028,
        7036
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "3430": {
      "fn": "SoulboundCore.toString",
      "offset": [
        7028,
        7036
      ],
      "op": "SWAP2",
      "path": "7"
    },
    "3431": {
      "op": "POP"
    },
    "3432": {
      "fn": "SoulboundCore.toString",
      "offset": [
        7050,
        7060
      ],
      "op": "PUSH2",
      "path": "7",
      "statement": 45,
      "value": "0xD74"
    },
    "3435": {
      "fn": "SoulboundCore.toString",
      "offset": [
        7050,
        7060
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "3436": {
      "op": "POP"
    },
    "3437": {
      "fn": "SoulboundCore.toString",
      "offset": [
        7058,
        7060
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0xA"
    },
    "3439": {
      "fn": "SoulboundCore.toString",
      "offset": [
        7050,
        7060
      ],
      "op": "DUP4",
      "path": "7"
    },
    "3440": {
      "fn": "SoulboundCore.toString",
      "offset": [
        7050,
        7060
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x18AE"
    },
    "3443": {
      "fn": "SoulboundCore.toString",
      "jump": "i",
      "offset": [
        7050,
        7060
      ],
      "op": "JUMP",
      "path": "7"
    },
    "3444": {
      "fn": "SoulboundCore.toString",
      "offset": [
        7050,
        7060
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "3445": {
      "fn": "SoulboundCore.toString",
      "offset": [
        7050,
        7060
      ],
      "op": "SWAP2",
      "path": "7"
    },
    "3446": {
      "fn": "SoulboundCore.toString",
      "offset": [
        7050,
        7060
      ],
      "op": "POP",
      "path": "7"
    },
    "3447": {
      "fn": "SoulboundCore.toString",
      "offset": [
        6996,
        7071
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0xD55"
    },
    "3450": {
      "fn": "SoulboundCore.toString",
      "offset": [
        6996,
        7071
      ],
      "op": "JUMP",
      "path": "7"
    },
    "3451": {
      "fn": "SoulboundCore.toString",
      "offset": [
        6996,
        7071
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "3452": {
      "fn": "SoulboundCore.toString",
      "offset": [
        7080,
        7099
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x0"
    },
    "3454": {
      "fn": "SoulboundCore.toString",
      "offset": [
        7112,
        7118
      ],
      "op": "DUP2",
      "path": "7"
    },
    "3455": {
      "fn": "SoulboundCore.toString",
      "offset": [
        7102,
        7119
      ],
      "op": "PUSH8",
      "path": "7",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "3464": {
      "fn": "SoulboundCore.toString",
      "offset": [
        7102,
        7119
      ],
      "op": "DUP2",
      "path": "7"
    },
    "3465": {
      "fn": "SoulboundCore.toString",
      "offset": [
        7102,
        7119
      ],
      "op": "GT",
      "path": "7"
    },
    "3466": {
      "fn": "SoulboundCore.toString",
      "offset": [
        7102,
        7119
      ],
      "op": "ISZERO",
      "path": "7"
    },
    "3467": {
      "fn": "SoulboundCore.toString",
      "offset": [
        7102,
        7119
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0xD96"
    },
    "3470": {
      "fn": "SoulboundCore.toString",
      "offset": [
        7102,
        7119
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "3471": {
      "fn": "SoulboundCore.toString",
      "offset": [
        7102,
        7119
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0xD96"
    },
    "3474": {
      "fn": "SoulboundCore.toString",
      "offset": [
        7102,
        7119
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x1532"
    },
    "3477": {
      "fn": "SoulboundCore.toString",
      "jump": "i",
      "offset": [
        7102,
        7119
      ],
      "op": "JUMP",
      "path": "7"
    },
    "3478": {
      "fn": "SoulboundCore.toString",
      "offset": [
        7102,
        7119
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "3479": {
      "fn": "SoulboundCore.toString",
      "offset": [
        7102,
        7119
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x40"
    },
    "3481": {
      "fn": "SoulboundCore.toString",
      "offset": [
        7102,
        7119
      ],
      "op": "MLOAD",
      "path": "7"
    },
    "3482": {
      "fn": "SoulboundCore.toString",
      "offset": [
        7102,
        7119
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "3483": {
      "fn": "SoulboundCore.toString",
      "offset": [
        7102,
        7119
      ],
      "op": "DUP1",
      "path": "7"
    },
    "3484": {
      "fn": "SoulboundCore.toString",
      "offset": [
        7102,
        7119
      ],
      "op": "DUP3",
      "path": "7"
    },
    "3485": {
      "fn": "SoulboundCore.toString",
      "offset": [
        7102,
        7119
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "3486": {
      "fn": "SoulboundCore.toString",
      "offset": [
        7102,
        7119
      ],
      "op": "DUP1",
      "path": "7"
    },
    "3487": {
      "fn": "SoulboundCore.toString",
      "offset": [
        7102,
        7119
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x1F"
    },
    "3489": {
      "fn": "SoulboundCore.toString",
      "offset": [
        7102,
        7119
      ],
      "op": "ADD",
      "path": "7"
    },
    "3490": {
      "fn": "SoulboundCore.toString",
      "offset": [
        7102,
        7119
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x1F"
    },
    "3492": {
      "fn": "SoulboundCore.toString",
      "offset": [
        7102,
        7119
      ],
      "op": "NOT",
      "path": "7"
    },
    "3493": {
      "fn": "SoulboundCore.toString",
      "offset": [
        7102,
        7119
      ],
      "op": "AND",
      "path": "7"
    },
    "3494": {
      "fn": "SoulboundCore.toString",
      "offset": [
        7102,
        7119
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x20"
    },
    "3496": {
      "fn": "SoulboundCore.toString",
      "offset": [
        7102,
        7119
      ],
      "op": "ADD",
      "path": "7"
    },
    "3497": {
      "fn": "SoulboundCore.toString",
      "offset": [
        7102,
        7119
      ],
      "op": "DUP3",
      "path": "7"
    },
    "3498": {
      "fn": "SoulboundCore.toString",
      "offset": [
        7102,
        7119
      ],
      "op": "ADD",
      "path": "7"
    },
    "3499": {
      "fn": "SoulboundCore.toString",
      "offset": [
        7102,
        7119
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x40"
    },
    "3501": {
      "fn": "SoulboundCore.toString",
      "offset": [
        7102,
        7119
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "3502": {
      "fn": "SoulboundCore.toString",
      "offset": [
        7102,
        7119
      ],
      "op": "DUP1",
      "path": "7"
    },
    "3503": {
      "fn": "SoulboundCore.toString",
      "offset": [
        7102,
        7119
      ],
      "op": "ISZERO",
      "path": "7"
    },
    "3504": {
      "fn": "SoulboundCore.toString",
      "offset": [
        7102,
        7119
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0xDC0"
    },
    "3507": {
      "fn": "SoulboundCore.toString",
      "offset": [
        7102,
        7119
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "3508": {
      "fn": "SoulboundCore.toString",
      "offset": [
        7102,
        7119
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x20"
    },
    "3510": {
      "fn": "SoulboundCore.toString",
      "offset": [
        7102,
        7119
      ],
      "op": "DUP3",
      "path": "7"
    },
    "3511": {
      "fn": "SoulboundCore.toString",
      "offset": [
        7102,
        7119
      ],
      "op": "ADD",
      "path": "7"
    },
    "3512": {
      "fn": "SoulboundCore.toString",
      "offset": [
        7102,
        7119
      ],
      "op": "DUP2",
      "path": "7"
    },
    "3513": {
      "fn": "SoulboundCore.toString",
      "offset": [
        7102,
        7119
      ],
      "op": "DUP1",
      "path": "7"
    },
    "3514": {
      "fn": "SoulboundCore.toString",
      "offset": [
        7102,
        7119
      ],
      "op": "CALLDATASIZE",
      "path": "7"
    },
    "3515": {
      "fn": "SoulboundCore.toString",
      "offset": [
        7102,
        7119
      ],
      "op": "DUP4",
      "path": "7"
    },
    "3516": {
      "fn": "SoulboundCore.toString",
      "offset": [
        7102,
        7119
      ],
      "op": "CALLDATACOPY",
      "path": "7"
    },
    "3517": {
      "fn": "SoulboundCore.toString",
      "offset": [
        7102,
        7119
      ],
      "op": "ADD",
      "path": "7"
    },
    "3518": {
      "fn": "SoulboundCore.toString",
      "offset": [
        7102,
        7119
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "3519": {
      "op": "POP"
    },
    "3520": {
      "fn": "SoulboundCore.toString",
      "offset": [
        7102,
        7119
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "3521": {
      "fn": "SoulboundCore.toString",
      "offset": [
        7102,
        7119
      ],
      "op": "POP",
      "path": "7"
    },
    "3522": {
      "fn": "SoulboundCore.toString",
      "offset": [
        7080,
        7119
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "3523": {
      "fn": "SoulboundCore.toString",
      "offset": [
        7080,
        7119
      ],
      "op": "POP",
      "path": "7"
    },
    "3524": {
      "fn": "SoulboundCore.toString",
      "offset": [
        7129,
        7279
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "3525": {
      "fn": "SoulboundCore.toString",
      "offset": [
        7136,
        7146
      ],
      "op": "DUP5",
      "path": "7"
    },
    "3526": {
      "fn": "SoulboundCore.toString",
      "offset": [
        7136,
        7146
      ],
      "op": "ISZERO",
      "path": "7"
    },
    "3527": {
      "fn": "SoulboundCore.toString",
      "offset": [
        7129,
        7279
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0xE2B"
    },
    "3530": {
      "fn": "SoulboundCore.toString",
      "offset": [
        7129,
        7279
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "3531": {
      "fn": "SoulboundCore.toString",
      "offset": [
        7162,
        7173
      ],
      "op": "PUSH2",
      "path": "7",
      "statement": 46,
      "value": "0xDD5"
    },
    "3534": {
      "fn": "SoulboundCore.toString",
      "offset": [
        7172,
        7173
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x1"
    },
    "3536": {
      "fn": "SoulboundCore.toString",
      "offset": [
        7162,
        7173
      ],
      "op": "DUP4",
      "path": "7"
    },
    "3537": {
      "fn": "SoulboundCore.toString",
      "offset": [
        7162,
        7173
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x18C2"
    },
    "3540": {
      "fn": "SoulboundCore.toString",
      "jump": "i",
      "offset": [
        7162,
        7173
      ],
      "op": "JUMP",
      "path": "7"
    },
    "3541": {
      "fn": "SoulboundCore.toString",
      "offset": [
        7162,
        7173
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "3542": {
      "fn": "SoulboundCore.toString",
      "offset": [
        7162,
        7173
      ],
      "op": "SWAP2",
      "path": "7"
    },
    "3543": {
      "op": "POP"
    },
    "3544": {
      "fn": "SoulboundCore.toString",
      "offset": [
        7230,
        7240
      ],
      "op": "PUSH2",
      "path": "7",
      "statement": 47,
      "value": "0xDE2"
    },
    "3547": {
      "fn": "SoulboundCore.toString",
      "offset": [
        7238,
        7240
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0xA"
    },
    "3549": {
      "fn": "SoulboundCore.toString",
      "offset": [
        7230,
        7235
      ],
      "op": "DUP7",
      "path": "7"
    },
    "3550": {
      "fn": "SoulboundCore.toString",
      "offset": [
        7230,
        7240
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x18D9"
    },
    "3553": {
      "fn": "SoulboundCore.toString",
      "jump": "i",
      "offset": [
        7230,
        7240
      ],
      "op": "JUMP",
      "path": "7"
    },
    "3554": {
      "fn": "SoulboundCore.toString",
      "offset": [
        7230,
        7240
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "3555": {
      "fn": "SoulboundCore.toString",
      "offset": [
        7217,
        7241
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0xDED"
    },
    "3558": {
      "fn": "SoulboundCore.toString",
      "offset": [
        7217,
        7241
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "3559": {
      "fn": "SoulboundCore.toString",
      "offset": [
        7217,
        7219
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x30"
    },
    "3561": {
      "fn": "SoulboundCore.toString",
      "offset": [
        7217,
        7241
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x18ED"
    },
    "3564": {
      "fn": "SoulboundCore.toString",
      "jump": "i",
      "offset": [
        7217,
        7241
      ],
      "op": "JUMP",
      "path": "7"
    },
    "3565": {
      "fn": "SoulboundCore.toString",
      "offset": [
        7217,
        7241
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "3566": {
      "fn": "SoulboundCore.toString",
      "offset": [
        7204,
        7243
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0xF8"
    },
    "3568": {
      "fn": "SoulboundCore.toString",
      "offset": [
        7204,
        7243
      ],
      "op": "SHL",
      "path": "7"
    },
    "3569": {
      "fn": "SoulboundCore.toString",
      "offset": [
        7187,
        7193
      ],
      "op": "DUP2",
      "path": "7"
    },
    "3570": {
      "fn": "SoulboundCore.toString",
      "offset": [
        7194,
        7200
      ],
      "op": "DUP4",
      "path": "7"
    },
    "3571": {
      "fn": "SoulboundCore.toString",
      "offset": [
        7187,
        7201
      ],
      "op": "DUP2",
      "path": "7"
    },
    "3572": {
      "fn": "SoulboundCore.toString",
      "offset": [
        7187,
        7201
      ],
      "op": "MLOAD",
      "path": "7"
    },
    "3573": {
      "fn": "SoulboundCore.toString",
      "offset": [
        7187,
        7201
      ],
      "op": "DUP2",
      "path": "7"
    },
    "3574": {
      "fn": "SoulboundCore.toString",
      "offset": [
        7187,
        7201
      ],
      "op": "LT",
      "path": "7"
    },
    "3575": {
      "fn": "SoulboundCore.toString",
      "offset": [
        7187,
        7201
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0xE02"
    },
    "3578": {
      "fn": "SoulboundCore.toString",
      "offset": [
        7187,
        7201
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "3579": {
      "fn": "SoulboundCore.toString",
      "offset": [
        7187,
        7201
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0xE02"
    },
    "3582": {
      "fn": "SoulboundCore.toString",
      "offset": [
        7187,
        7201
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x1905"
    },
    "3585": {
      "fn": "SoulboundCore.toString",
      "jump": "i",
      "offset": [
        7187,
        7201
      ],
      "op": "JUMP",
      "path": "7"
    },
    "3586": {
      "fn": "SoulboundCore.toString",
      "offset": [
        7187,
        7201
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "3587": {
      "fn": "SoulboundCore.toString",
      "offset": [
        7187,
        7201
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x20"
    },
    "3589": {
      "fn": "SoulboundCore.toString",
      "offset": [
        7187,
        7201
      ],
      "op": "ADD",
      "path": "7"
    },
    "3590": {
      "fn": "SoulboundCore.toString",
      "offset": [
        7187,
        7201
      ],
      "op": "ADD",
      "path": "7"
    },
    "3591": {
      "fn": "SoulboundCore.toString",
      "offset": [
        7187,
        7243
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "3592": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3594": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3596": {
      "op": "PUSH1",
      "value": "0xF8"
    },
    "3598": {
      "op": "SHL"
    },
    "3599": {
      "op": "SUB"
    },
    "3600": {
      "fn": "SoulboundCore.toString",
      "offset": [
        7187,
        7243
      ],
      "op": "NOT",
      "path": "7"
    },
    "3601": {
      "fn": "SoulboundCore.toString",
      "offset": [
        7187,
        7243
      ],
      "op": "AND",
      "path": "7"
    },
    "3602": {
      "fn": "SoulboundCore.toString",
      "offset": [
        7187,
        7243
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "3603": {
      "fn": "SoulboundCore.toString",
      "offset": [
        7187,
        7243
      ],
      "op": "DUP2",
      "path": "7"
    },
    "3604": {
      "fn": "SoulboundCore.toString",
      "offset": [
        7187,
        7243
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x0"
    },
    "3606": {
      "fn": "SoulboundCore.toString",
      "offset": [
        7187,
        7243
      ],
      "op": "BYTE",
      "path": "7"
    },
    "3607": {
      "fn": "SoulboundCore.toString",
      "offset": [
        7187,
        7243
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "3608": {
      "fn": "SoulboundCore.toString",
      "offset": [
        7187,
        7243
      ],
      "op": "MSTORE8",
      "path": "7"
    },
    "3609": {
      "op": "POP"
    },
    "3610": {
      "fn": "SoulboundCore.toString",
      "offset": [
        7257,
        7268
      ],
      "op": "PUSH2",
      "path": "7",
      "statement": 48,
      "value": "0xE24"
    },
    "3613": {
      "fn": "SoulboundCore.toString",
      "offset": [
        7266,
        7268
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0xA"
    },
    "3615": {
      "fn": "SoulboundCore.toString",
      "offset": [
        7257,
        7268
      ],
      "op": "DUP7",
      "path": "7"
    },
    "3616": {
      "fn": "SoulboundCore.toString",
      "offset": [
        7257,
        7268
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x18AE"
    },
    "3619": {
      "fn": "SoulboundCore.toString",
      "jump": "i",
      "offset": [
        7257,
        7268
      ],
      "op": "JUMP",
      "path": "7"
    },
    "3620": {
      "fn": "SoulboundCore.toString",
      "offset": [
        7257,
        7268
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "3621": {
      "fn": "SoulboundCore.toString",
      "offset": [
        7257,
        7268
      ],
      "op": "SWAP5",
      "path": "7"
    },
    "3622": {
      "fn": "SoulboundCore.toString",
      "offset": [
        7257,
        7268
      ],
      "op": "POP",
      "path": "7"
    },
    "3623": {
      "fn": "SoulboundCore.toString",
      "offset": [
        7129,
        7279
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0xDC4"
    },
    "3626": {
      "fn": "SoulboundCore.toString",
      "offset": [
        7129,
        7279
      ],
      "op": "JUMP",
      "path": "7"
    },
    "3627": {
      "fn": "SoulboundCore.toString",
      "offset": [
        7129,
        7279
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "3628": {
      "fn": "SoulboundCore.toString",
      "offset": [
        7302,
        7308
      ],
      "op": "SWAP5",
      "path": "7",
      "statement": 49
    },
    "3629": {
      "fn": "SoulboundCore.toString",
      "offset": [
        6613,
        7316
      ],
      "op": "SWAP4",
      "path": "7"
    },
    "3630": {
      "op": "POP"
    },
    "3631": {
      "op": "POP"
    },
    "3632": {
      "op": "POP"
    },
    "3633": {
      "op": "POP"
    },
    "3634": {
      "fn": "SoulboundCore.toString",
      "jump": "o",
      "offset": [
        6613,
        7316
      ],
      "op": "JUMP",
      "path": "7"
    },
    "3635": {
      "fn": "ERC4973._burn",
      "offset": [
        5943,
        6158
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "3636": {
      "fn": "ERC4973._burn",
      "offset": [
        5998,
        6011
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "3638": {
      "fn": "ERC4973._burn",
      "offset": [
        6014,
        6030
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xE3E"
    },
    "3641": {
      "fn": "ERC4973._burn",
      "offset": [
        6022,
        6029
      ],
      "op": "DUP3",
      "path": "2"
    },
    "3642": {
      "fn": "ERC4973._burn",
      "offset": [
        6014,
        6021
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x600"
    },
    "3645": {
      "fn": "ERC4973._burn",
      "jump": "i",
      "offset": [
        6014,
        6030
      ],
      "op": "JUMP",
      "path": "2"
    },
    "3646": {
      "fn": "ERC4973._burn",
      "offset": [
        6014,
        6030
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "3647": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3649": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3651": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3653": {
      "op": "SHL"
    },
    "3654": {
      "op": "SUB"
    },
    "3655": {
      "fn": "ERC4973._burn",
      "offset": [
        6037,
        6053
      ],
      "op": "DUP2",
      "path": "2",
      "statement": 50
    },
    "3656": {
      "fn": "ERC4973._burn",
      "offset": [
        6037,
        6053
      ],
      "op": "AND",
      "path": "2"
    },
    "3657": {
      "fn": "ERC4973._burn",
      "offset": [
        6037,
        6053
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "3659": {
      "fn": "ERC4973._burn",
      "offset": [
        6037,
        6053
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "3660": {
      "fn": "ERC4973._burn",
      "offset": [
        6037,
        6053
      ],
      "op": "DUP2",
      "path": "2"
    },
    "3661": {
      "fn": "ERC4973._burn",
      "offset": [
        6037,
        6053
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "3662": {
      "fn": "ERC4973._burn",
      "offset": [
        6037,
        6046
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "3664": {
      "fn": "ERC4973._burn",
      "offset": [
        6037,
        6053
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "3666": {
      "fn": "ERC4973._burn",
      "offset": [
        6037,
        6053
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "3667": {
      "fn": "ERC4973._burn",
      "offset": [
        6037,
        6053
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "3669": {
      "fn": "ERC4973._burn",
      "offset": [
        6037,
        6053
      ],
      "op": "DUP2",
      "path": "2"
    },
    "3670": {
      "fn": "ERC4973._burn",
      "offset": [
        6037,
        6053
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "3671": {
      "fn": "ERC4973._burn",
      "offset": [
        6037,
        6058
      ],
      "op": "DUP1",
      "path": "2"
    },
    "3672": {
      "fn": "ERC4973._burn",
      "offset": [
        6037,
        6058
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "3673": {
      "fn": "ERC4973._burn",
      "offset": [
        5998,
        6030
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "3674": {
      "fn": "ERC4973._burn",
      "offset": [
        5998,
        6030
      ],
      "op": "SWAP4",
      "path": "2"
    },
    "3675": {
      "op": "POP"
    },
    "3676": {
      "fn": "ERC4973._burn",
      "offset": [
        6057,
        6058
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1"
    },
    "3678": {
      "fn": "ERC4973._burn",
      "offset": [
        6057,
        6058
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "3679": {
      "fn": "ERC4973._burn",
      "offset": [
        6037,
        6053
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "3680": {
      "fn": "ERC4973._burn",
      "offset": [
        6037,
        6053
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "3681": {
      "fn": "ERC4973._burn",
      "offset": [
        6037,
        6053
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "3682": {
      "fn": "ERC4973._burn",
      "offset": [
        6037,
        6058
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xE6C"
    },
    "3685": {
      "fn": "ERC4973._burn",
      "offset": [
        6037,
        6058
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "3686": {
      "fn": "ERC4973._burn",
      "offset": [
        6057,
        6058
      ],
      "op": "DUP5",
      "path": "2"
    },
    "3687": {
      "fn": "ERC4973._burn",
      "offset": [
        6057,
        6058
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "3688": {
      "fn": "ERC4973._burn",
      "offset": [
        6037,
        6058
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x18C2"
    },
    "3691": {
      "fn": "ERC4973._burn",
      "jump": "i",
      "offset": [
        6037,
        6058
      ],
      "op": "JUMP",
      "path": "2"
    },
    "3692": {
      "fn": "ERC4973._burn",
      "offset": [
        6037,
        6058
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "3693": {
      "fn": "ERC4973._burn",
      "offset": [
        6037,
        6058
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "3694": {
      "fn": "ERC4973._burn",
      "offset": [
        6037,
        6058
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "3695": {
      "fn": "ERC4973._burn",
      "offset": [
        6037,
        6058
      ],
      "op": "SSTORE",
      "path": "2"
    },
    "3696": {
      "op": "POP"
    },
    "3697": {
      "op": "POP"
    },
    "3698": {
      "fn": "ERC4973._burn",
      "offset": [
        6071,
        6087
      ],
      "op": "PUSH1",
      "path": "2",
      "statement": 51,
      "value": "0x0"
    },
    "3700": {
      "fn": "ERC4973._burn",
      "offset": [
        6071,
        6087
      ],
      "op": "DUP3",
      "path": "2"
    },
    "3701": {
      "fn": "ERC4973._burn",
      "offset": [
        6071,
        6087
      ],
      "op": "DUP2",
      "path": "2"
    },
    "3702": {
      "fn": "ERC4973._burn",
      "offset": [
        6071,
        6087
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "3703": {
      "fn": "ERC4973._burn",
      "offset": [
        6071,
        6078
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x2"
    },
    "3705": {
      "fn": "ERC4973._burn",
      "offset": [
        6071,
        6087
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "3707": {
      "fn": "ERC4973._burn",
      "offset": [
        6071,
        6087
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "3708": {
      "fn": "ERC4973._burn",
      "offset": [
        6071,
        6087
      ],
      "op": "DUP2",
      "path": "2"
    },
    "3709": {
      "fn": "ERC4973._burn",
      "offset": [
        6071,
        6087
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "3710": {
      "fn": "ERC4973._burn",
      "offset": [
        6071,
        6087
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "3712": {
      "fn": "ERC4973._burn",
      "offset": [
        6071,
        6087
      ],
      "op": "DUP1",
      "path": "2"
    },
    "3713": {
      "fn": "ERC4973._burn",
      "offset": [
        6071,
        6087
      ],
      "op": "DUP4",
      "path": "2"
    },
    "3714": {
      "fn": "ERC4973._burn",
      "offset": [
        6071,
        6087
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "3715": {
      "fn": "ERC4973._burn",
      "offset": [
        6064,
        6087
      ],
      "op": "DUP1",
      "path": "2"
    },
    "3716": {
      "fn": "ERC4973._burn",
      "offset": [
        6064,
        6087
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "3717": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3719": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3721": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3723": {
      "op": "SHL"
    },
    "3724": {
      "op": "SUB"
    },
    "3725": {
      "op": "NOT"
    },
    "3726": {
      "fn": "ERC4973._burn",
      "offset": [
        6064,
        6087
      ],
      "op": "AND",
      "path": "2"
    },
    "3727": {
      "fn": "ERC4973._burn",
      "offset": [
        6064,
        6087
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "3728": {
      "fn": "ERC4973._burn",
      "offset": [
        6064,
        6087
      ],
      "op": "SSTORE",
      "path": "2"
    },
    "3729": {
      "fn": "ERC4973._burn",
      "offset": [
        6100,
        6110
      ],
      "op": "PUSH1",
      "path": "2",
      "statement": 52,
      "value": "0x3"
    },
    "3731": {
      "fn": "ERC4973._burn",
      "offset": [
        6100,
        6119
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "3732": {
      "fn": "ERC4973._burn",
      "offset": [
        6100,
        6119
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "3733": {
      "fn": "ERC4973._burn",
      "offset": [
        6100,
        6119
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "3734": {
      "fn": "ERC4973._burn",
      "offset": [
        6100,
        6119
      ],
      "op": "DUP2",
      "path": "2"
    },
    "3735": {
      "fn": "ERC4973._burn",
      "offset": [
        6100,
        6119
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "3736": {
      "fn": "ERC4973._burn",
      "offset": [
        6093,
        6119
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xEA0"
    },
    "3739": {
      "fn": "ERC4973._burn",
      "offset": [
        6093,
        6119
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "3740": {
      "fn": "ERC4973._burn",
      "offset": [
        6093,
        6119
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x13D2"
    },
    "3743": {
      "fn": "ERC4973._burn",
      "jump": "i",
      "offset": [
        6093,
        6119
      ],
      "op": "JUMP",
      "path": "2"
    },
    "3744": {
      "fn": "ERC4973._burn",
      "offset": [
        6093,
        6119
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "3745": {
      "fn": "ERC4973._burn",
      "offset": [
        6131,
        6153
      ],
      "op": "PUSH1",
      "path": "2",
      "statement": 53,
      "value": "0x40"
    },
    "3747": {
      "fn": "ERC4973._burn",
      "offset": [
        6131,
        6153
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "3748": {
      "fn": "ERC4973._burn",
      "offset": [
        6145,
        6152
      ],
      "op": "DUP3",
      "path": "2"
    },
    "3749": {
      "fn": "ERC4973._burn",
      "offset": [
        6145,
        6152
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "3750": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3752": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3754": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3756": {
      "op": "SHL"
    },
    "3757": {
      "op": "SUB"
    },
    "3758": {
      "fn": "ERC4973._burn",
      "offset": [
        6131,
        6153
      ],
      "op": "DUP4",
      "path": "2"
    },
    "3759": {
      "fn": "ERC4973._burn",
      "offset": [
        6131,
        6153
      ],
      "op": "AND",
      "path": "2"
    },
    "3760": {
      "fn": "ERC4973._burn",
      "offset": [
        6131,
        6153
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "3761": {
      "fn": "ERC4973._burn",
      "offset": [
        6131,
        6153
      ],
      "op": "PUSH32",
      "path": "2",
      "value": "0xEC9AB91322523C899EDE7830EC9BFC992B5981CDCC27B91162FB23DE5791117B"
    },
    "3794": {
      "fn": "ERC4973._burn",
      "offset": [
        6131,
        6153
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "3795": {
      "fn": "ERC4973._burn",
      "offset": [
        6131,
        6153
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "3797": {
      "fn": "ERC4973._burn",
      "offset": [
        6131,
        6153
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "3798": {
      "fn": "ERC4973._burn",
      "offset": [
        6131,
        6153
      ],
      "op": "LOG3",
      "path": "2"
    },
    "3799": {
      "fn": "ERC4973._burn",
      "offset": [
        5992,
        6158
      ],
      "op": "POP",
      "path": "2"
    },
    "3800": {
      "fn": "ERC4973._burn",
      "offset": [
        5943,
        6158
      ],
      "op": "POP",
      "path": "2"
    },
    "3801": {
      "fn": "ERC4973._burn",
      "jump": "o",
      "offset": [
        5943,
        6158
      ],
      "op": "JUMP",
      "path": "2"
    },
    "3802": {
      "fn": "Ownable._checkOwner",
      "offset": [
        1662,
        1792
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "3803": {
      "fn": "Ownable.owner",
      "offset": [
        1578,
        1584
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x5"
    },
    "3805": {
      "fn": "Ownable.owner",
      "offset": [
        1578,
        1584
      ],
      "op": "SLOAD",
      "path": "5"
    },
    "3806": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3808": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3810": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3812": {
      "op": "SHL"
    },
    "3813": {
      "op": "SUB"
    },
    "3814": {
      "fn": "Ownable.owner",
      "offset": [
        1578,
        1584
      ],
      "op": "AND",
      "path": "5"
    },
    "3815": {
      "fn": "Ownable._msgSender",
      "offset": [
        3057,
        3067
      ],
      "op": "CALLER",
      "path": "5",
      "statement": 54
    },
    "3816": {
      "branch": 95,
      "fn": "Ownable._checkOwner",
      "offset": [
        1725,
        1748
      ],
      "op": "EQ",
      "path": "5",
      "statement": 55
    },
    "3817": {
      "fn": "Ownable._checkOwner",
      "offset": [
        1717,
        1785
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x700"
    },
    "3820": {
      "branch": 95,
      "fn": "Ownable._checkOwner",
      "offset": [
        1717,
        1785
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "3821": {
      "fn": "Ownable._checkOwner",
      "offset": [
        1717,
        1785
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "3823": {
      "fn": "Ownable._checkOwner",
      "offset": [
        1717,
        1785
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "3824": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "3828": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "3830": {
      "op": "SHL"
    },
    "3831": {
      "fn": "Ownable._checkOwner",
      "offset": [
        1717,
        1785
      ],
      "op": "DUP2",
      "path": "5"
    },
    "3832": {
      "fn": "Ownable._checkOwner",
      "offset": [
        1717,
        1785
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "3833": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3835": {
      "fn": "Ownable._checkOwner",
      "offset": [
        1717,
        1785
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x4"
    },
    "3837": {
      "fn": "Ownable._checkOwner",
      "offset": [
        1717,
        1785
      ],
      "op": "DUP3",
      "path": "5"
    },
    "3838": {
      "fn": "Ownable._checkOwner",
      "offset": [
        1717,
        1785
      ],
      "op": "ADD",
      "path": "5"
    },
    "3839": {
      "op": "DUP2"
    },
    "3840": {
      "op": "SWAP1"
    },
    "3841": {
      "op": "MSTORE"
    },
    "3842": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "3844": {
      "op": "DUP3"
    },
    "3845": {
      "op": "ADD"
    },
    "3846": {
      "op": "MSTORE"
    },
    "3847": {
      "op": "PUSH32",
      "value": "0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572"
    },
    "3880": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "3882": {
      "op": "DUP3"
    },
    "3883": {
      "op": "ADD"
    },
    "3884": {
      "op": "MSTORE"
    },
    "3885": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "3887": {
      "op": "ADD"
    },
    "3888": {
      "fn": "Ownable._checkOwner",
      "offset": [
        1717,
        1785
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x422"
    },
    "3891": {
      "op": "JUMP"
    },
    "3892": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2757,
        2944
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "3893": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2849,
        2855
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x5"
    },
    "3895": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2849,
        2855
      ],
      "op": "DUP1",
      "path": "5"
    },
    "3896": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2849,
        2855
      ],
      "op": "SLOAD",
      "path": "5"
    },
    "3897": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3899": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3901": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3903": {
      "op": "SHL"
    },
    "3904": {
      "op": "SUB"
    },
    "3905": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2865,
        2882
      ],
      "op": "DUP4",
      "path": "5",
      "statement": 56
    },
    "3906": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2865,
        2882
      ],
      "op": "DUP2",
      "path": "5"
    },
    "3907": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2865,
        2882
      ],
      "op": "AND",
      "path": "5"
    },
    "3908": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3910": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3912": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3914": {
      "op": "SHL"
    },
    "3915": {
      "op": "SUB"
    },
    "3916": {
      "op": "NOT"
    },
    "3917": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2865,
        2882
      ],
      "op": "DUP4",
      "path": "5"
    },
    "3918": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2865,
        2882
      ],
      "op": "AND",
      "path": "5"
    },
    "3919": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2865,
        2882
      ],
      "op": "DUP2",
      "path": "5"
    },
    "3920": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2865,
        2882
      ],
      "op": "OR",
      "path": "5"
    },
    "3921": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2865,
        2882
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "3922": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2865,
        2882
      ],
      "op": "SWAP4",
      "path": "5"
    },
    "3923": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2865,
        2882
      ],
      "op": "SSTORE",
      "path": "5"
    },
    "3924": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2897,
        2937
      ],
      "op": "PUSH1",
      "path": "5",
      "statement": 57,
      "value": "0x40"
    },
    "3926": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2897,
        2937
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "3927": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2849,
        2855
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "3928": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2849,
        2855
      ],
      "op": "AND",
      "path": "5"
    },
    "3929": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2849,
        2855
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "3930": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2865,
        2882
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "3931": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2849,
        2855
      ],
      "op": "DUP3",
      "path": "5"
    },
    "3932": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2849,
        2855
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "3933": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2897,
        2937
      ],
      "op": "PUSH32",
      "path": "5",
      "value": "0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
    },
    "3966": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2897,
        2937
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "3967": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2830,
        2846
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "3969": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2830,
        2846
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "3970": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2897,
        2937
      ],
      "op": "LOG3",
      "path": "5"
    },
    "3971": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2820,
        2944
      ],
      "op": "POP",
      "path": "5"
    },
    "3972": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2757,
        2944
      ],
      "op": "POP",
      "path": "5"
    },
    "3973": {
      "fn": "Ownable._transferOwnership",
      "jump": "o",
      "offset": [
        2757,
        2944
      ],
      "op": "JUMP",
      "path": "5"
    },
    "3974": {
      "fn": "Soulbound._setBaseURI",
      "offset": [
        6959,
        7193
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "3975": {
      "fn": "Soulbound._setBaseURI",
      "offset": [
        7082,
        7104
      ],
      "op": "DUP1",
      "path": "6",
      "statement": 58
    },
    "3976": {
      "fn": "Soulbound._setBaseURI",
      "offset": [
        7082,
        7104
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "3977": {
      "fn": "Soulbound._setBaseURI",
      "offset": [
        7074,
        7128
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0xFC5"
    },
    "3980": {
      "fn": "Soulbound._setBaseURI",
      "offset": [
        7074,
        7128
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "3981": {
      "fn": "Soulbound._setBaseURI",
      "offset": [
        7074,
        7128
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "3983": {
      "fn": "Soulbound._setBaseURI",
      "offset": [
        7074,
        7128
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "3984": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "3988": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "3990": {
      "op": "SHL"
    },
    "3991": {
      "fn": "Soulbound._setBaseURI",
      "offset": [
        7074,
        7128
      ],
      "op": "DUP2",
      "path": "6"
    },
    "3992": {
      "fn": "Soulbound._setBaseURI",
      "offset": [
        7074,
        7128
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "3993": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3995": {
      "fn": "Soulbound._setBaseURI",
      "offset": [
        7074,
        7128
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x4"
    },
    "3997": {
      "fn": "Soulbound._setBaseURI",
      "offset": [
        7074,
        7128
      ],
      "op": "DUP3",
      "path": "6"
    },
    "3998": {
      "fn": "Soulbound._setBaseURI",
      "offset": [
        7074,
        7128
      ],
      "op": "ADD",
      "path": "6"
    },
    "3999": {
      "op": "MSTORE"
    },
    "4000": {
      "op": "PUSH1",
      "value": "0xE"
    },
    "4002": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "4004": {
      "op": "DUP3"
    },
    "4005": {
      "op": "ADD"
    },
    "4006": {
      "op": "MSTORE"
    },
    "4007": {
      "op": "PUSH14",
      "value": "0x92DCECC2D8D2C840D8CADCCEE8D"
    },
    "4022": {
      "op": "PUSH1",
      "value": "0x93"
    },
    "4024": {
      "op": "SHL"
    },
    "4025": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "4027": {
      "op": "DUP3"
    },
    "4028": {
      "op": "ADD"
    },
    "4029": {
      "op": "MSTORE"
    },
    "4030": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "4032": {
      "op": "ADD"
    },
    "4033": {
      "fn": "Soulbound._setBaseURI",
      "offset": [
        7074,
        7128
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x422"
    },
    "4036": {
      "op": "JUMP"
    },
    "4037": {
      "fn": "Soulbound._setBaseURI",
      "offset": [
        7074,
        7128
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "4038": {
      "fn": "Soulbound._setBaseURI",
      "offset": [
        7168,
        7186
      ],
      "op": "DUP1",
      "path": "6",
      "statement": 59
    },
    "4039": {
      "fn": "Soulbound._setBaseURI",
      "offset": [
        7168,
        7186
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "4040": {
      "fn": "Soulbound._setBaseURI",
      "offset": [
        7168,
        7186
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0xFD8"
    },
    "4043": {
      "fn": "Soulbound._setBaseURI",
      "offset": [
        7168,
        7186
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "4044": {
      "fn": "Soulbound._setBaseURI",
      "offset": [
        7168,
        7175
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x6"
    },
    "4046": {
      "fn": "Soulbound._setBaseURI",
      "offset": [
        7168,
        7175
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "4047": {
      "fn": "Soulbound._setBaseURI",
      "offset": [
        7168,
        7186
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x20"
    },
    "4049": {
      "fn": "Soulbound._setBaseURI",
      "offset": [
        7168,
        7186
      ],
      "op": "DUP5",
      "path": "6"
    },
    "4050": {
      "fn": "Soulbound._setBaseURI",
      "offset": [
        7168,
        7186
      ],
      "op": "ADD",
      "path": "6"
    },
    "4051": {
      "fn": "Soulbound._setBaseURI",
      "offset": [
        7168,
        7186
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "4052": {
      "fn": "Soulbound._setBaseURI",
      "offset": [
        7168,
        7186
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x140C"
    },
    "4055": {
      "fn": "Soulbound._setBaseURI",
      "jump": "i",
      "offset": [
        7168,
        7186
      ],
      "op": "JUMP",
      "path": "6"
    },
    "4056": {
      "fn": "Soulbound._setBaseURI",
      "offset": [
        7168,
        7186
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "4057": {
      "fn": "Soulbound._setBaseURI",
      "offset": [
        7168,
        7186
      ],
      "op": "POP",
      "path": "6"
    },
    "4058": {
      "fn": "Soulbound._setBaseURI",
      "offset": [
        6959,
        7193
      ],
      "op": "POP",
      "path": "6"
    },
    "4059": {
      "fn": "Soulbound._setBaseURI",
      "jump": "o",
      "offset": [
        6959,
        7193
      ],
      "op": "JUMP",
      "path": "6"
    },
    "4060": {
      "fn": "Soulbound.issue",
      "offset": [
        2162,
        2520
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "4061": {
      "fn": "Soulbound.issue",
      "offset": [
        2281,
        2285
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "4063": {
      "fn": "Soulbound.issue",
      "offset": [
        2371,
        2462
      ],
      "op": "PUSH2",
      "path": "6",
      "statement": 60,
      "value": "0xFE9"
    },
    "4066": {
      "fn": "Soulbound.issue",
      "offset": [
        2403,
        2406
      ],
      "op": "DUP5",
      "path": "6"
    },
    "4067": {
      "fn": "Soulbound.issue",
      "offset": [
        2421,
        2429
      ],
      "op": "DUP5",
      "path": "6"
    },
    "4068": {
      "fn": "Soulbound.issue",
      "offset": [
        2444,
        2452
      ],
      "op": "DUP5",
      "path": "6"
    },
    "4069": {
      "fn": "Soulbound.issue",
      "offset": [
        2371,
        2389
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x120C"
    },
    "4072": {
      "fn": "Soulbound.issue",
      "jump": "i",
      "offset": [
        2371,
        2462
      ],
      "op": "JUMP",
      "path": "6"
    },
    "4073": {
      "fn": "Soulbound.issue",
      "offset": [
        2371,
        2462
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "4074": {
      "op": "POP"
    },
    "4075": {
      "fn": "Soulbound.issue",
      "offset": [
        2509,
        2513
      ],
      "op": "PUSH1",
      "path": "6",
      "statement": 61,
      "value": "0x1"
    },
    "4077": {
      "fn": "Soulbound.issue",
      "offset": [
        2162,
        2520
      ],
      "op": "SWAP4",
      "path": "6"
    },
    "4078": {
      "fn": "Soulbound.issue",
      "offset": [
        2162,
        2520
      ],
      "op": "SWAP3",
      "path": "6"
    },
    "4079": {
      "fn": "Soulbound.issue",
      "offset": [
        2162,
        2520
      ],
      "op": "POP",
      "path": "6"
    },
    "4080": {
      "fn": "Soulbound.issue",
      "offset": [
        2162,
        2520
      ],
      "op": "POP",
      "path": "6"
    },
    "4081": {
      "fn": "Soulbound.issue",
      "offset": [
        2162,
        2520
      ],
      "op": "POP",
      "path": "6"
    },
    "4082": {
      "fn": "Soulbound.issue",
      "jump": "o",
      "offset": [
        2162,
        2520
      ],
      "op": "JUMP",
      "path": "6"
    },
    "4083": {
      "fn": "Allowlist._verifySignature",
      "offset": [
        3447,
        4490
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "4084": {
      "fn": "Allowlist._verifySignature",
      "offset": [
        3544,
        3548
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "4086": {
      "offset": [
        1401,
        1414
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0xFFD"
    },
    "4089": {
      "offset": [
        1401,
        1412
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0xEDA"
    },
    "4092": {
      "jump": "i",
      "offset": [
        1401,
        1414
      ],
      "op": "JUMP",
      "path": "5"
    },
    "4093": {
      "fn": "Allowlist._verifySignature",
      "offset": [
        1401,
        1414
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "4094": {
      "fn": "Ownable.owner",
      "offset": [
        1578,
        1584
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x5"
    },
    "4096": {
      "fn": "Ownable.owner",
      "offset": [
        1578,
        1584
      ],
      "op": "SLOAD",
      "path": "5"
    },
    "4097": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4099": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4101": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4103": {
      "op": "SHL"
    },
    "4104": {
      "op": "SUB"
    },
    "4105": {
      "fn": "Ownable.owner",
      "offset": [
        1578,
        1584
      ],
      "op": "AND",
      "path": "5"
    },
    "4106": {
      "fn": "Ownable._msgSender",
      "offset": [
        3057,
        3067
      ],
      "op": "CALLER",
      "path": "5"
    },
    "4107": {
      "branch": 87,
      "fn": "Allowlist._verifySignature",
      "offset": [
        3709,
        3732
      ],
      "op": "EQ",
      "path": "3",
      "statement": 62
    },
    "4108": {
      "fn": "Allowlist._verifySignature",
      "offset": [
        3688,
        3802
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x106B"
    },
    "4111": {
      "branch": 87,
      "fn": "Allowlist._verifySignature",
      "offset": [
        3688,
        3802
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "4112": {
      "fn": "Allowlist._verifySignature",
      "offset": [
        3688,
        3802
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "4114": {
      "fn": "Allowlist._verifySignature",
      "offset": [
        3688,
        3802
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "4115": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "4119": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "4121": {
      "op": "SHL"
    },
    "4122": {
      "fn": "Allowlist._verifySignature",
      "offset": [
        3688,
        3802
      ],
      "op": "DUP2",
      "path": "3"
    },
    "4123": {
      "fn": "Allowlist._verifySignature",
      "offset": [
        3688,
        3802
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "4124": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4126": {
      "fn": "Allowlist._verifySignature",
      "offset": [
        3688,
        3802
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x4"
    },
    "4128": {
      "fn": "Allowlist._verifySignature",
      "offset": [
        3688,
        3802
      ],
      "op": "DUP3",
      "path": "3"
    },
    "4129": {
      "fn": "Allowlist._verifySignature",
      "offset": [
        3688,
        3802
      ],
      "op": "ADD",
      "path": "3"
    },
    "4130": {
      "op": "MSTORE"
    },
    "4131": {
      "op": "PUSH1",
      "value": "0x2B"
    },
    "4133": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "4135": {
      "op": "DUP3"
    },
    "4136": {
      "op": "ADD"
    },
    "4137": {
      "op": "MSTORE"
    },
    "4138": {
      "op": "PUSH32",
      "value": "0x4552433732313A3A2043616C6C20746F20636F6E7472616374206D6164652062"
    },
    "4171": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "4173": {
      "op": "DUP3"
    },
    "4174": {
      "op": "ADD"
    },
    "4175": {
      "op": "MSTORE"
    },
    "4176": {
      "op": "PUSH11",
      "value": "0x3C903737B716B7BBB732B9"
    },
    "4188": {
      "op": "PUSH1",
      "value": "0xA9"
    },
    "4190": {
      "op": "SHL"
    },
    "4191": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "4193": {
      "op": "DUP3"
    },
    "4194": {
      "op": "ADD"
    },
    "4195": {
      "op": "MSTORE"
    },
    "4196": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "4198": {
      "op": "ADD"
    },
    "4199": {
      "fn": "Allowlist._verifySignature",
      "offset": [
        3688,
        3802
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x422"
    },
    "4202": {
      "op": "JUMP"
    },
    "4203": {
      "fn": "Allowlist._verifySignature",
      "offset": [
        3688,
        3802
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "4204": {
      "fn": "Allowlist._verifySignature",
      "offset": [
        3880,
        3883
      ],
      "op": "DUP2",
      "path": "3",
      "statement": 63
    },
    "4205": {
      "fn": "Allowlist._verifySignature",
      "offset": [
        3880,
        3890
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "4206": {
      "fn": "Allowlist._verifySignature",
      "offset": [
        3894,
        3896
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x41"
    },
    "4208": {
      "branch": 88,
      "fn": "Allowlist._verifySignature",
      "offset": [
        3880,
        3896
      ],
      "op": "EQ",
      "path": "3"
    },
    "4209": {
      "fn": "Allowlist._verifySignature",
      "offset": [
        3872,
        3931
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x10BC"
    },
    "4212": {
      "branch": 88,
      "fn": "Allowlist._verifySignature",
      "offset": [
        3872,
        3931
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "4213": {
      "fn": "Allowlist._verifySignature",
      "offset": [
        3872,
        3931
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "4215": {
      "fn": "Allowlist._verifySignature",
      "offset": [
        3872,
        3931
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "4216": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "4220": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "4222": {
      "op": "SHL"
    },
    "4223": {
      "fn": "Allowlist._verifySignature",
      "offset": [
        3872,
        3931
      ],
      "op": "DUP2",
      "path": "3"
    },
    "4224": {
      "fn": "Allowlist._verifySignature",
      "offset": [
        3872,
        3931
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "4225": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4227": {
      "fn": "Allowlist._verifySignature",
      "offset": [
        3872,
        3931
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x4"
    },
    "4229": {
      "fn": "Allowlist._verifySignature",
      "offset": [
        3872,
        3931
      ],
      "op": "DUP3",
      "path": "3"
    },
    "4230": {
      "fn": "Allowlist._verifySignature",
      "offset": [
        3872,
        3931
      ],
      "op": "ADD",
      "path": "3"
    },
    "4231": {
      "op": "MSTORE"
    },
    "4232": {
      "op": "PUSH1",
      "value": "0x1E"
    },
    "4234": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "4236": {
      "op": "DUP3"
    },
    "4237": {
      "op": "ADD"
    },
    "4238": {
      "op": "MSTORE"
    },
    "4239": {
      "op": "PUSH32",
      "value": "0x4572723A3A20496E76616C6964207369676E6174757265206C656E6774680000"
    },
    "4272": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "4274": {
      "op": "DUP3"
    },
    "4275": {
      "op": "ADD"
    },
    "4276": {
      "op": "MSTORE"
    },
    "4277": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "4279": {
      "op": "ADD"
    },
    "4280": {
      "fn": "Allowlist._verifySignature",
      "offset": [
        3872,
        3931
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x422"
    },
    "4283": {
      "op": "JUMP"
    },
    "4284": {
      "fn": "Allowlist._verifySignature",
      "offset": [
        3872,
        3931
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "4285": {
      "fn": "Allowlist.splitSignature",
      "offset": [
        5818,
        5820
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "4287": {
      "fn": "Allowlist.splitSignature",
      "offset": [
        5809,
        5821
      ],
      "op": "DUP3",
      "path": "3"
    },
    "4288": {
      "fn": "Allowlist.splitSignature",
      "offset": [
        5809,
        5821
      ],
      "op": "DUP2",
      "path": "3"
    },
    "4289": {
      "fn": "Allowlist.splitSignature",
      "offset": [
        5809,
        5821
      ],
      "op": "ADD",
      "path": "3"
    },
    "4290": {
      "fn": "Allowlist.splitSignature",
      "offset": [
        5803,
        5822
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "4291": {
      "fn": "Allowlist.splitSignature",
      "offset": [
        5893,
        5895
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "4293": {
      "fn": "Allowlist.splitSignature",
      "offset": [
        5884,
        5896
      ],
      "op": "DUP1",
      "path": "3"
    },
    "4294": {
      "fn": "Allowlist.splitSignature",
      "offset": [
        5884,
        5896
      ],
      "op": "DUP6",
      "path": "3"
    },
    "4295": {
      "fn": "Allowlist.splitSignature",
      "offset": [
        5884,
        5896
      ],
      "op": "ADD",
      "path": "3"
    },
    "4296": {
      "fn": "Allowlist.splitSignature",
      "offset": [
        5878,
        5897
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "4297": {
      "fn": "Allowlist.splitSignature",
      "offset": [
        6005,
        6007
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x60"
    },
    "4299": {
      "fn": "Allowlist.splitSignature",
      "offset": [
        5996,
        6008
      ],
      "op": "DUP1",
      "path": "3"
    },
    "4300": {
      "fn": "Allowlist.splitSignature",
      "offset": [
        5996,
        6008
      ],
      "op": "DUP8",
      "path": "3"
    },
    "4301": {
      "fn": "Allowlist.splitSignature",
      "offset": [
        5996,
        6008
      ],
      "op": "ADD",
      "path": "3"
    },
    "4302": {
      "fn": "Allowlist.splitSignature",
      "offset": [
        5990,
        6009
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "4303": {
      "fn": "Allowlist._verifySignature",
      "offset": [
        4144,
        4168
      ],
      "op": "DUP4",
      "path": "3"
    },
    "4304": {
      "fn": "Allowlist._verifySignature",
      "offset": [
        4144,
        4168
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "4305": {
      "fn": "Allowlist._verifySignature",
      "offset": [
        4010,
        4019
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "4307": {
      "fn": "Allowlist._verifySignature",
      "offset": [
        4144,
        4168
      ],
      "op": "DUP1",
      "path": "3"
    },
    "4308": {
      "fn": "Allowlist._verifySignature",
      "offset": [
        4144,
        4168
      ],
      "op": "DUP3",
      "path": "3"
    },
    "4309": {
      "fn": "Allowlist._verifySignature",
      "offset": [
        4144,
        4168
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "4310": {
      "fn": "Allowlist._verifySignature",
      "offset": [
        4144,
        4168
      ],
      "op": "SWAP7",
      "path": "3"
    },
    "4311": {
      "fn": "Allowlist._verifySignature",
      "offset": [
        4144,
        4168
      ],
      "op": "DUP2",
      "path": "3"
    },
    "4312": {
      "fn": "Allowlist._verifySignature",
      "offset": [
        4144,
        4168
      ],
      "op": "ADD",
      "path": "3"
    },
    "4313": {
      "fn": "Allowlist._verifySignature",
      "offset": [
        4144,
        4168
      ],
      "op": "DUP1",
      "path": "3"
    },
    "4314": {
      "fn": "Allowlist._verifySignature",
      "offset": [
        4144,
        4168
      ],
      "op": "DUP7",
      "path": "3"
    },
    "4315": {
      "fn": "Allowlist._verifySignature",
      "offset": [
        4144,
        4168
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "4316": {
      "op": "DUP11"
    },
    "4317": {
      "op": "SWAP1"
    },
    "4318": {
      "op": "MSTORE"
    },
    "4319": {
      "fn": "Allowlist.splitSignature",
      "offset": [
        5982,
        6010
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "4320": {
      "fn": "Allowlist.splitSignature",
      "offset": [
        5982,
        6010
      ],
      "op": "DUP7",
      "path": "3"
    },
    "4321": {
      "fn": "Allowlist.splitSignature",
      "offset": [
        5982,
        6010
      ],
      "op": "BYTE",
      "path": "3"
    },
    "4322": {
      "op": "SWAP4"
    },
    "4323": {
      "op": "DUP2"
    },
    "4324": {
      "op": "ADD"
    },
    "4325": {
      "op": "DUP5"
    },
    "4326": {
      "op": "SWAP1"
    },
    "4327": {
      "op": "MSTORE"
    },
    "4328": {
      "op": "SWAP1"
    },
    "4329": {
      "op": "DUP2"
    },
    "4330": {
      "op": "ADD"
    },
    "4331": {
      "op": "DUP5"
    },
    "4332": {
      "op": "SWAP1"
    },
    "4333": {
      "op": "MSTORE"
    },
    "4334": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "4336": {
      "op": "DUP2"
    },
    "4337": {
      "op": "ADD"
    },
    "4338": {
      "op": "DUP3"
    },
    "4339": {
      "op": "SWAP1"
    },
    "4340": {
      "op": "MSTORE"
    },
    "4341": {
      "fn": "Allowlist.splitSignature",
      "offset": [
        5803,
        5822
      ],
      "op": "SWAP3",
      "path": "3"
    },
    "4342": {
      "fn": "Allowlist.splitSignature",
      "offset": [
        5803,
        5822
      ],
      "op": "SWAP4",
      "path": "3"
    },
    "4343": {
      "fn": "Allowlist.splitSignature",
      "offset": [
        5878,
        5897
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "4344": {
      "fn": "Allowlist.splitSignature",
      "offset": [
        5878,
        5897
      ],
      "op": "SWAP3",
      "path": "3"
    },
    "4345": {
      "fn": "Allowlist._verifySignature",
      "offset": [
        4144,
        4168
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x1"
    },
    "4347": {
      "fn": "Allowlist._verifySignature",
      "offset": [
        4144,
        4168
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "4348": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4350": {
      "op": "ADD"
    },
    "4351": {
      "fn": "Allowlist._verifySignature",
      "offset": [
        4144,
        4168
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "4353": {
      "fn": "Allowlist._verifySignature",
      "offset": [
        4144,
        4168
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "4355": {
      "fn": "Allowlist._verifySignature",
      "offset": [
        4144,
        4168
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "4356": {
      "fn": "Allowlist._verifySignature",
      "offset": [
        4144,
        4168
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "4358": {
      "fn": "Allowlist._verifySignature",
      "offset": [
        4144,
        4168
      ],
      "op": "DUP2",
      "path": "3"
    },
    "4359": {
      "fn": "Allowlist._verifySignature",
      "offset": [
        4144,
        4168
      ],
      "op": "SUB",
      "path": "3"
    },
    "4360": {
      "fn": "Allowlist._verifySignature",
      "offset": [
        4144,
        4168
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "4361": {
      "fn": "Allowlist._verifySignature",
      "offset": [
        4144,
        4168
      ],
      "op": "DUP1",
      "path": "3"
    },
    "4362": {
      "fn": "Allowlist._verifySignature",
      "offset": [
        4144,
        4168
      ],
      "op": "DUP5",
      "path": "3"
    },
    "4363": {
      "fn": "Allowlist._verifySignature",
      "offset": [
        4144,
        4168
      ],
      "op": "SUB",
      "path": "3"
    },
    "4364": {
      "fn": "Allowlist._verifySignature",
      "offset": [
        4144,
        4168
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "4365": {
      "fn": "Allowlist._verifySignature",
      "offset": [
        4144,
        4168
      ],
      "op": "DUP6",
      "path": "3"
    },
    "4366": {
      "fn": "Allowlist._verifySignature",
      "offset": [
        4144,
        4168
      ],
      "op": "GAS",
      "path": "3"
    },
    "4367": {
      "fn": "Allowlist._verifySignature",
      "offset": [
        4144,
        4168
      ],
      "op": "STATICCALL",
      "path": "3"
    },
    "4368": {
      "fn": "Allowlist._verifySignature",
      "offset": [
        4144,
        4168
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "4369": {
      "fn": "Allowlist._verifySignature",
      "offset": [
        4144,
        4168
      ],
      "op": "DUP1",
      "path": "3"
    },
    "4370": {
      "fn": "Allowlist._verifySignature",
      "offset": [
        4144,
        4168
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "4371": {
      "fn": "Allowlist._verifySignature",
      "offset": [
        4144,
        4168
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x1120"
    },
    "4374": {
      "fn": "Allowlist._verifySignature",
      "offset": [
        4144,
        4168
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "4375": {
      "fn": "Allowlist._verifySignature",
      "offset": [
        4144,
        4168
      ],
      "op": "RETURNDATASIZE",
      "path": "3"
    },
    "4376": {
      "fn": "Allowlist._verifySignature",
      "offset": [
        4144,
        4168
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "4378": {
      "fn": "Allowlist._verifySignature",
      "offset": [
        4144,
        4168
      ],
      "op": "DUP1",
      "path": "3"
    },
    "4379": {
      "fn": "Allowlist._verifySignature",
      "offset": [
        4144,
        4168
      ],
      "op": "RETURNDATACOPY",
      "path": "3"
    },
    "4380": {
      "fn": "Allowlist._verifySignature",
      "offset": [
        4144,
        4168
      ],
      "op": "RETURNDATASIZE",
      "path": "3"
    },
    "4381": {
      "fn": "Allowlist._verifySignature",
      "offset": [
        4144,
        4168
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "4383": {
      "fn": "Allowlist._verifySignature",
      "offset": [
        4144,
        4168
      ],
      "op": "REVERT",
      "path": "3"
    },
    "4384": {
      "fn": "Allowlist._verifySignature",
      "offset": [
        4144,
        4168
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "4385": {
      "op": "POP"
    },
    "4386": {
      "op": "POP"
    },
    "4387": {
      "fn": "Allowlist._verifySignature",
      "offset": [
        4144,
        4168
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "4389": {
      "fn": "Allowlist._verifySignature",
      "offset": [
        4144,
        4168
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "4390": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "4392": {
      "op": "NOT"
    },
    "4393": {
      "fn": "Allowlist._verifySignature",
      "offset": [
        4144,
        4168
      ],
      "op": "DUP2",
      "path": "3"
    },
    "4394": {
      "fn": "Allowlist._verifySignature",
      "offset": [
        4144,
        4168
      ],
      "op": "ADD",
      "path": "3"
    },
    "4395": {
      "fn": "Allowlist._verifySignature",
      "offset": [
        4144,
        4168
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "4396": {
      "fn": "Allowlist._verifySignature",
      "offset": [
        4282,
        4296
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x8"
    },
    "4398": {
      "fn": "Allowlist._verifySignature",
      "offset": [
        4282,
        4296
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "4399": {
      "fn": "Allowlist._verifySignature",
      "offset": [
        4144,
        4168
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "4400": {
      "fn": "Allowlist._verifySignature",
      "offset": [
        4144,
        4168
      ],
      "op": "SWAP4",
      "path": "3"
    },
    "4401": {
      "op": "POP"
    },
    "4402": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4404": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4406": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4408": {
      "op": "SHL"
    },
    "4409": {
      "op": "SUB"
    },
    "4410": {
      "fn": "Allowlist._verifySignature",
      "offset": [
        4272,
        4296
      ],
      "op": "DUP1",
      "path": "3"
    },
    "4411": {
      "fn": "Allowlist._verifySignature",
      "offset": [
        4272,
        4296
      ],
      "op": "DUP6",
      "path": "3"
    },
    "4412": {
      "fn": "Allowlist._verifySignature",
      "offset": [
        4272,
        4296
      ],
      "op": "AND",
      "path": "3"
    },
    "4413": {
      "fn": "Allowlist._verifySignature",
      "offset": [
        4282,
        4296
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "4414": {
      "fn": "Allowlist._verifySignature",
      "offset": [
        4282,
        4296
      ],
      "op": "AND",
      "path": "3"
    },
    "4415": {
      "fn": "Allowlist._verifySignature",
      "offset": [
        4272,
        4296
      ],
      "op": "EQ",
      "path": "3"
    },
    "4416": {
      "fn": "Allowlist._verifySignature",
      "offset": [
        4272,
        4296
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "4417": {
      "op": "POP"
    },
    "4418": {
      "fn": "Allowlist._verifySignature",
      "offset": [
        4272,
        4296
      ],
      "op": "DUP2",
      "path": "3"
    },
    "4419": {
      "fn": "Allowlist._verifySignature",
      "offset": [
        4272,
        4296
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "4420": {
      "fn": "Allowlist._verifySignature",
      "offset": [
        4379,
        4383
      ],
      "op": "DUP10",
      "path": "3",
      "statement": 64
    },
    "4421": {
      "fn": "Allowlist._verifySignature",
      "offset": [
        4379,
        4383
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "4422": {
      "fn": "Allowlist._verifySignature",
      "offset": [
        4363,
        4408
      ],
      "op": "PUSH32",
      "path": "3",
      "value": "0x7E4FE2A2A805A357593FDBDDE58C02F6A53D8B4960744CD31A98697FC11C2E36"
    },
    "4455": {
      "fn": "Allowlist._verifySignature",
      "offset": [
        4363,
        4408
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "4456": {
      "fn": "Allowlist._verifySignature",
      "offset": [
        4241,
        4268
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "4458": {
      "fn": "Allowlist._verifySignature",
      "offset": [
        4241,
        4268
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "4459": {
      "fn": "Allowlist._verifySignature",
      "offset": [
        4363,
        4408
      ],
      "op": "LOG3",
      "path": "3"
    },
    "4460": {
      "fn": "Allowlist._verifySignature",
      "offset": [
        4461,
        4483
      ],
      "op": "SWAP8",
      "path": "3",
      "statement": 65
    },
    "4461": {
      "fn": "Allowlist._verifySignature",
      "offset": [
        3447,
        4490
      ],
      "op": "SWAP7",
      "path": "3"
    },
    "4462": {
      "op": "POP"
    },
    "4463": {
      "op": "POP"
    },
    "4464": {
      "op": "POP"
    },
    "4465": {
      "op": "POP"
    },
    "4466": {
      "op": "POP"
    },
    "4467": {
      "op": "POP"
    },
    "4468": {
      "op": "POP"
    },
    "4469": {
      "fn": "Allowlist._verifySignature",
      "jump": "o",
      "offset": [
        3447,
        4490
      ],
      "op": "JUMP",
      "path": "3"
    },
    "4470": {
      "fn": "Soulbound.burnSoulboundToken",
      "offset": [
        6373,
        6794
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "4471": {
      "fn": "Soulbound.burnSoulboundToken",
      "offset": [
        6500,
        6516
      ],
      "op": "PUSH2",
      "path": "6",
      "statement": 66,
      "value": "0x117F"
    },
    "4474": {
      "fn": "Soulbound.burnSoulboundToken",
      "offset": [
        6508,
        6515
      ],
      "op": "DUP2",
      "path": "6"
    },
    "4475": {
      "fn": "Soulbound.burnSoulboundToken",
      "offset": [
        6500,
        6507
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0xC48"
    },
    "4478": {
      "fn": "Soulbound.burnSoulboundToken",
      "jump": "i",
      "offset": [
        6500,
        6516
      ],
      "op": "JUMP",
      "path": "6"
    },
    "4479": {
      "branch": 102,
      "fn": "Soulbound.burnSoulboundToken",
      "offset": [
        6500,
        6516
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "4480": {
      "fn": "Soulbound.burnSoulboundToken",
      "offset": [
        6492,
        6545
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x11CB"
    },
    "4483": {
      "branch": 102,
      "fn": "Soulbound.burnSoulboundToken",
      "offset": [
        6492,
        6545
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "4484": {
      "fn": "Soulbound.burnSoulboundToken",
      "offset": [
        6492,
        6545
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "4486": {
      "fn": "Soulbound.burnSoulboundToken",
      "offset": [
        6492,
        6545
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "4487": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "4491": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "4493": {
      "op": "SHL"
    },
    "4494": {
      "fn": "Soulbound.burnSoulboundToken",
      "offset": [
        6492,
        6545
      ],
      "op": "DUP2",
      "path": "6"
    },
    "4495": {
      "fn": "Soulbound.burnSoulboundToken",
      "offset": [
        6492,
        6545
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "4496": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4498": {
      "fn": "Soulbound.burnSoulboundToken",
      "offset": [
        6492,
        6545
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x4"
    },
    "4500": {
      "fn": "Soulbound.burnSoulboundToken",
      "offset": [
        6492,
        6545
      ],
      "op": "DUP3",
      "path": "6"
    },
    "4501": {
      "fn": "Soulbound.burnSoulboundToken",
      "offset": [
        6492,
        6545
      ],
      "op": "ADD",
      "path": "6"
    },
    "4502": {
      "op": "MSTORE"
    },
    "4503": {
      "op": "PUSH1",
      "value": "0x18"
    },
    "4505": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "4507": {
      "op": "DUP3"
    },
    "4508": {
      "op": "ADD"
    },
    "4509": {
      "op": "MSTORE"
    },
    "4510": {
      "op": "PUSH32",
      "value": "0x4275726E206F6620696E6578697374656E7420746F6B656E0000000000000000"
    },
    "4543": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "4545": {
      "op": "DUP3"
    },
    "4546": {
      "op": "ADD"
    },
    "4547": {
      "op": "MSTORE"
    },
    "4548": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "4550": {
      "op": "ADD"
    },
    "4551": {
      "fn": "Soulbound.burnSoulboundToken",
      "offset": [
        6492,
        6545
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x422"
    },
    "4554": {
      "op": "JUMP"
    },
    "4555": {
      "fn": "Soulbound.burnSoulboundToken",
      "offset": [
        6492,
        6545
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "4556": {
      "fn": "Soulbound.burnSoulboundToken",
      "offset": [
        6600,
        6619
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "4558": {
      "fn": "Soulbound.burnSoulboundToken",
      "offset": [
        6622,
        6638
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x11D6"
    },
    "4561": {
      "fn": "Soulbound.burnSoulboundToken",
      "offset": [
        6630,
        6637
      ],
      "op": "DUP3",
      "path": "6"
    },
    "4562": {
      "fn": "Soulbound.burnSoulboundToken",
      "offset": [
        6622,
        6629
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x600"
    },
    "4565": {
      "fn": "Soulbound.burnSoulboundToken",
      "jump": "i",
      "offset": [
        6622,
        6638
      ],
      "op": "JUMP",
      "path": "6"
    },
    "4566": {
      "fn": "Soulbound.burnSoulboundToken",
      "offset": [
        6622,
        6638
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "4567": {
      "fn": "Soulbound.burnSoulboundToken",
      "offset": [
        6600,
        6638
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "4568": {
      "fn": "Soulbound.burnSoulboundToken",
      "offset": [
        6600,
        6638
      ],
      "op": "POP",
      "path": "6"
    },
    "4569": {
      "fn": "Soulbound.burnSoulboundToken",
      "offset": [
        6681,
        6695
      ],
      "op": "PUSH2",
      "path": "6",
      "statement": 67,
      "value": "0x11E1"
    },
    "4572": {
      "fn": "Soulbound.burnSoulboundToken",
      "offset": [
        6687,
        6694
      ],
      "op": "DUP3",
      "path": "6"
    },
    "4573": {
      "fn": "Soulbound.burnSoulboundToken",
      "offset": [
        6681,
        6686
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0xE33"
    },
    "4576": {
      "fn": "Soulbound.burnSoulboundToken",
      "jump": "i",
      "offset": [
        6681,
        6695
      ],
      "op": "JUMP",
      "path": "6"
    },
    "4577": {
      "fn": "Soulbound.burnSoulboundToken",
      "offset": [
        6681,
        6695
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "4578": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4580": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4582": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4584": {
      "op": "SHL"
    },
    "4585": {
      "op": "SUB"
    },
    "4586": {
      "fn": "Soulbound.burnSoulboundToken",
      "offset": [
        6752,
        6770
      ],
      "op": "AND",
      "path": "6",
      "statement": 68
    },
    "4587": {
      "fn": "Soulbound.burnSoulboundToken",
      "offset": [
        6782,
        6787
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "4589": {
      "fn": "Soulbound.burnSoulboundToken",
      "offset": [
        6752,
        6770
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "4590": {
      "fn": "Soulbound.burnSoulboundToken",
      "offset": [
        6752,
        6770
      ],
      "op": "DUP2",
      "path": "6"
    },
    "4591": {
      "fn": "Soulbound.burnSoulboundToken",
      "offset": [
        6752,
        6770
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "4592": {
      "fn": "Soulbound.burnSoulboundToken",
      "offset": [
        6752,
        6757
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x7"
    },
    "4594": {
      "fn": "Soulbound.burnSoulboundToken",
      "offset": [
        6752,
        6770
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x20"
    },
    "4596": {
      "fn": "Soulbound.burnSoulboundToken",
      "offset": [
        6752,
        6770
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "4597": {
      "fn": "Soulbound.burnSoulboundToken",
      "offset": [
        6752,
        6770
      ],
      "op": "DUP2",
      "path": "6"
    },
    "4598": {
      "fn": "Soulbound.burnSoulboundToken",
      "offset": [
        6752,
        6770
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "4599": {
      "fn": "Soulbound.burnSoulboundToken",
      "offset": [
        6752,
        6770
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "4601": {
      "fn": "Soulbound.burnSoulboundToken",
      "offset": [
        6752,
        6770
      ],
      "op": "DUP1",
      "path": "6"
    },
    "4602": {
      "fn": "Soulbound.burnSoulboundToken",
      "offset": [
        6752,
        6770
      ],
      "op": "DUP4",
      "path": "6"
    },
    "4603": {
      "fn": "Soulbound.burnSoulboundToken",
      "offset": [
        6752,
        6770
      ],
      "op": "KECCAK256",
      "path": "6"
    },
    "4604": {
      "fn": "Soulbound.burnSoulboundToken",
      "offset": [
        6752,
        6779
      ],
      "op": "SWAP4",
      "path": "6"
    },
    "4605": {
      "fn": "Soulbound.burnSoulboundToken",
      "offset": [
        6752,
        6779
      ],
      "op": "DUP4",
      "path": "6"
    },
    "4606": {
      "fn": "Soulbound.burnSoulboundToken",
      "offset": [
        6752,
        6779
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "4607": {
      "fn": "Soulbound.burnSoulboundToken",
      "offset": [
        6752,
        6779
      ],
      "op": "SWAP3",
      "path": "6"
    },
    "4608": {
      "fn": "Soulbound.burnSoulboundToken",
      "offset": [
        6752,
        6779
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "4609": {
      "fn": "Soulbound.burnSoulboundToken",
      "offset": [
        6752,
        6779
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "4610": {
      "fn": "Soulbound.burnSoulboundToken",
      "offset": [
        6752,
        6779
      ],
      "op": "KECCAK256",
      "path": "6"
    },
    "4611": {
      "fn": "Soulbound.burnSoulboundToken",
      "offset": [
        6752,
        6787
      ],
      "op": "DUP1",
      "path": "6"
    },
    "4612": {
      "fn": "Soulbound.burnSoulboundToken",
      "offset": [
        6752,
        6787
      ],
      "op": "SLOAD",
      "path": "6"
    },
    "4613": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "4615": {
      "op": "NOT"
    },
    "4616": {
      "fn": "Soulbound.burnSoulboundToken",
      "offset": [
        6752,
        6787
      ],
      "op": "AND",
      "path": "6"
    },
    "4617": {
      "fn": "Soulbound.burnSoulboundToken",
      "offset": [
        6752,
        6787
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "4618": {
      "fn": "Soulbound.burnSoulboundToken",
      "offset": [
        6752,
        6787
      ],
      "op": "SSTORE",
      "path": "6"
    },
    "4619": {
      "fn": "Soulbound.burnSoulboundToken",
      "jump": "o",
      "offset": [
        6373,
        6794
      ],
      "op": "JUMP",
      "path": "6"
    },
    "4620": {
      "fn": "Soulbound.mintSoulboundToken",
      "offset": [
        5543,
        6217
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "4621": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4623": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4625": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4627": {
      "op": "SHL"
    },
    "4628": {
      "op": "SUB"
    },
    "4629": {
      "fn": "Soulbound.mintSoulboundToken",
      "offset": [
        5757,
        5773
      ],
      "op": "DUP4",
      "path": "6",
      "statement": 69
    },
    "4630": {
      "branch": 103,
      "fn": "Soulbound.mintSoulboundToken",
      "offset": [
        5757,
        5773
      ],
      "op": "AND",
      "path": "6"
    },
    "4631": {
      "fn": "Soulbound.mintSoulboundToken",
      "offset": [
        5749,
        5799
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x125A"
    },
    "4634": {
      "branch": 103,
      "fn": "Soulbound.mintSoulboundToken",
      "offset": [
        5749,
        5799
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "4635": {
      "fn": "Soulbound.mintSoulboundToken",
      "offset": [
        5749,
        5799
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "4637": {
      "fn": "Soulbound.mintSoulboundToken",
      "offset": [
        5749,
        5799
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "4638": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "4642": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "4644": {
      "op": "SHL"
    },
    "4645": {
      "fn": "Soulbound.mintSoulboundToken",
      "offset": [
        5749,
        5799
      ],
      "op": "DUP2",
      "path": "6"
    },
    "4646": {
      "fn": "Soulbound.mintSoulboundToken",
      "offset": [
        5749,
        5799
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "4647": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4649": {
      "fn": "Soulbound.mintSoulboundToken",
      "offset": [
        5749,
        5799
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x4"
    },
    "4651": {
      "fn": "Soulbound.mintSoulboundToken",
      "offset": [
        5749,
        5799
      ],
      "op": "DUP3",
      "path": "6"
    },
    "4652": {
      "fn": "Soulbound.mintSoulboundToken",
      "offset": [
        5749,
        5799
      ],
      "op": "ADD",
      "path": "6"
    },
    "4653": {
      "op": "MSTORE"
    },
    "4654": {
      "op": "PUSH1",
      "value": "0x15"
    },
    "4656": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "4658": {
      "op": "DUP3"
    },
    "4659": {
      "op": "ADD"
    },
    "4660": {
      "op": "MSTORE"
    },
    "4661": {
      "op": "PUSH21",
      "value": "0x26B4B73A103A37903D32B9379030B2323932B9B997"
    },
    "4683": {
      "op": "PUSH1",
      "value": "0x59"
    },
    "4685": {
      "op": "SHL"
    },
    "4686": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "4688": {
      "op": "DUP3"
    },
    "4689": {
      "op": "ADD"
    },
    "4690": {
      "op": "MSTORE"
    },
    "4691": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "4693": {
      "op": "ADD"
    },
    "4694": {
      "fn": "Soulbound.mintSoulboundToken",
      "offset": [
        5749,
        5799
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x422"
    },
    "4697": {
      "op": "JUMP"
    },
    "4698": {
      "fn": "Soulbound.mintSoulboundToken",
      "offset": [
        5749,
        5799
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "4699": {
      "fn": "Soulbound.mintSoulboundToken",
      "offset": [
        5939,
        5961
      ],
      "op": "DUP1",
      "path": "6",
      "statement": 70
    },
    "4700": {
      "fn": "Soulbound.mintSoulboundToken",
      "offset": [
        5939,
        5961
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "4701": {
      "fn": "Soulbound.mintSoulboundToken",
      "offset": [
        5931,
        5986
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x129A"
    },
    "4704": {
      "fn": "Soulbound.mintSoulboundToken",
      "offset": [
        5931,
        5986
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "4705": {
      "fn": "Soulbound.mintSoulboundToken",
      "offset": [
        5931,
        5986
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "4707": {
      "fn": "Soulbound.mintSoulboundToken",
      "offset": [
        5931,
        5986
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "4708": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "4712": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "4714": {
      "op": "SHL"
    },
    "4715": {
      "fn": "Soulbound.mintSoulboundToken",
      "offset": [
        5931,
        5986
      ],
      "op": "DUP2",
      "path": "6"
    },
    "4716": {
      "fn": "Soulbound.mintSoulboundToken",
      "offset": [
        5931,
        5986
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "4717": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4719": {
      "fn": "Soulbound.mintSoulboundToken",
      "offset": [
        5931,
        5986
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x4"
    },
    "4721": {
      "fn": "Soulbound.mintSoulboundToken",
      "offset": [
        5931,
        5986
      ],
      "op": "DUP3",
      "path": "6"
    },
    "4722": {
      "fn": "Soulbound.mintSoulboundToken",
      "offset": [
        5931,
        5986
      ],
      "op": "ADD",
      "path": "6"
    },
    "4723": {
      "op": "MSTORE"
    },
    "4724": {
      "op": "PUSH1",
      "value": "0xF"
    },
    "4726": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "4728": {
      "op": "DUP3"
    },
    "4729": {
      "op": "ADD"
    },
    "4730": {
      "op": "MSTORE"
    },
    "4731": {
      "op": "PUSH15",
      "value": "0x22B6B83A3C903A37B5B2B72AA92497"
    },
    "4747": {
      "op": "PUSH1",
      "value": "0x89"
    },
    "4749": {
      "op": "SHL"
    },
    "4750": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "4752": {
      "op": "DUP3"
    },
    "4753": {
      "op": "ADD"
    },
    "4754": {
      "op": "MSTORE"
    },
    "4755": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "4757": {
      "op": "ADD"
    },
    "4758": {
      "fn": "Soulbound.mintSoulboundToken",
      "offset": [
        5931,
        5986
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x422"
    },
    "4761": {
      "op": "JUMP"
    },
    "4762": {
      "fn": "Soulbound.mintSoulboundToken",
      "offset": [
        5931,
        5986
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "4763": {
      "fn": "Soulbound.mintSoulboundToken",
      "offset": [
        6101,
        6129
      ],
      "op": "PUSH2",
      "path": "6",
      "statement": 71,
      "value": "0x12A5"
    },
    "4766": {
      "fn": "Soulbound.mintSoulboundToken",
      "offset": [
        6107,
        6109
      ],
      "op": "DUP4",
      "path": "6"
    },
    "4767": {
      "fn": "Soulbound.mintSoulboundToken",
      "offset": [
        6111,
        6118
      ],
      "op": "DUP4",
      "path": "6"
    },
    "4768": {
      "fn": "Soulbound.mintSoulboundToken",
      "offset": [
        6120,
        6128
      ],
      "op": "DUP4",
      "path": "6"
    },
    "4769": {
      "fn": "Soulbound.mintSoulboundToken",
      "offset": [
        6101,
        6106
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x12D7"
    },
    "4772": {
      "fn": "Soulbound.mintSoulboundToken",
      "jump": "i",
      "offset": [
        6101,
        6129
      ],
      "op": "JUMP",
      "path": "6"
    },
    "4773": {
      "fn": "Soulbound.mintSoulboundToken",
      "offset": [
        6101,
        6129
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "4774": {
      "op": "POP"
    },
    "4775": {
      "op": "POP"
    },
    "4776": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4778": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4780": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4782": {
      "op": "SHL"
    },
    "4783": {
      "op": "SUB"
    },
    "4784": {
      "fn": "Soulbound.mintSoulboundToken",
      "offset": [
        6185,
        6194
      ],
      "op": "SWAP1",
      "path": "6",
      "statement": 72
    },
    "4785": {
      "fn": "Soulbound.mintSoulboundToken",
      "offset": [
        6185,
        6194
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "4786": {
      "fn": "Soulbound.mintSoulboundToken",
      "offset": [
        6185,
        6194
      ],
      "op": "AND",
      "path": "6"
    },
    "4787": {
      "fn": "Soulbound.mintSoulboundToken",
      "offset": [
        6185,
        6194
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "4789": {
      "fn": "Soulbound.mintSoulboundToken",
      "offset": [
        6185,
        6194
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "4790": {
      "fn": "Soulbound.mintSoulboundToken",
      "offset": [
        6185,
        6194
      ],
      "op": "DUP2",
      "path": "6"
    },
    "4791": {
      "fn": "Soulbound.mintSoulboundToken",
      "offset": [
        6185,
        6194
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "4792": {
      "fn": "Soulbound.mintSoulboundToken",
      "offset": [
        6185,
        6190
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x7"
    },
    "4794": {
      "fn": "Soulbound.mintSoulboundToken",
      "offset": [
        6185,
        6194
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x20"
    },
    "4796": {
      "fn": "Soulbound.mintSoulboundToken",
      "offset": [
        6185,
        6194
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "4797": {
      "fn": "Soulbound.mintSoulboundToken",
      "offset": [
        6185,
        6194
      ],
      "op": "DUP2",
      "path": "6"
    },
    "4798": {
      "fn": "Soulbound.mintSoulboundToken",
      "offset": [
        6185,
        6194
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "4799": {
      "fn": "Soulbound.mintSoulboundToken",
      "offset": [
        6185,
        6194
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "4801": {
      "fn": "Soulbound.mintSoulboundToken",
      "offset": [
        6185,
        6194
      ],
      "op": "DUP1",
      "path": "6"
    },
    "4802": {
      "fn": "Soulbound.mintSoulboundToken",
      "offset": [
        6185,
        6194
      ],
      "op": "DUP4",
      "path": "6"
    },
    "4803": {
      "fn": "Soulbound.mintSoulboundToken",
      "offset": [
        6185,
        6194
      ],
      "op": "KECCAK256",
      "path": "6"
    },
    "4804": {
      "fn": "Soulbound.mintSoulboundToken",
      "offset": [
        6185,
        6203
      ],
      "op": "SWAP4",
      "path": "6"
    },
    "4805": {
      "fn": "Soulbound.mintSoulboundToken",
      "offset": [
        6185,
        6203
      ],
      "op": "DUP4",
      "path": "6"
    },
    "4806": {
      "fn": "Soulbound.mintSoulboundToken",
      "offset": [
        6185,
        6203
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "4807": {
      "fn": "Soulbound.mintSoulboundToken",
      "offset": [
        6185,
        6203
      ],
      "op": "SWAP3",
      "path": "6"
    },
    "4808": {
      "fn": "Soulbound.mintSoulboundToken",
      "offset": [
        6185,
        6203
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "4809": {
      "fn": "Soulbound.mintSoulboundToken",
      "offset": [
        6185,
        6203
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "4810": {
      "fn": "Soulbound.mintSoulboundToken",
      "offset": [
        6185,
        6203
      ],
      "op": "KECCAK256",
      "path": "6"
    },
    "4811": {
      "fn": "Soulbound.mintSoulboundToken",
      "offset": [
        6185,
        6210
      ],
      "op": "DUP1",
      "path": "6"
    },
    "4812": {
      "fn": "Soulbound.mintSoulboundToken",
      "offset": [
        6185,
        6210
      ],
      "op": "SLOAD",
      "path": "6"
    },
    "4813": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "4815": {
      "op": "NOT"
    },
    "4816": {
      "fn": "Soulbound.mintSoulboundToken",
      "offset": [
        6185,
        6210
      ],
      "op": "AND",
      "path": "6"
    },
    "4817": {
      "fn": "Soulbound.mintSoulboundToken",
      "offset": [
        6206,
        6210
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x1"
    },
    "4819": {
      "fn": "Soulbound.mintSoulboundToken",
      "offset": [
        6185,
        6210
      ],
      "op": "OR",
      "path": "6"
    },
    "4820": {
      "fn": "Soulbound.mintSoulboundToken",
      "offset": [
        6185,
        6210
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "4821": {
      "fn": "Soulbound.mintSoulboundToken",
      "offset": [
        6185,
        6210
      ],
      "op": "SSTORE",
      "path": "6"
    },
    "4822": {
      "fn": "Soulbound.mintSoulboundToken",
      "jump": "o",
      "offset": [
        5543,
        6217
      ],
      "op": "JUMP",
      "path": "6"
    },
    "4823": {
      "fn": "ERC4973._mint",
      "offset": [
        5632,
        5939
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "4824": {
      "fn": "ERC4973._mint",
      "offset": [
        5737,
        5744
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "4826": {
      "fn": "ERC4973._mint",
      "offset": [
        5761,
        5777
      ],
      "op": "PUSH2",
      "path": "2",
      "statement": 73,
      "value": "0x12E2"
    },
    "4829": {
      "fn": "ERC4973._mint",
      "offset": [
        5769,
        5776
      ],
      "op": "DUP4",
      "path": "2"
    },
    "4830": {
      "fn": "ERC4973._mint",
      "offset": [
        5761,
        5768
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xC48"
    },
    "4833": {
      "fn": "ERC4973._mint",
      "jump": "i",
      "offset": [
        5761,
        5777
      ],
      "op": "JUMP",
      "path": "2"
    },
    "4834": {
      "fn": "ERC4973._mint",
      "offset": [
        5761,
        5777
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "4835": {
      "branch": 93,
      "fn": "ERC4973._mint",
      "offset": [
        5760,
        5777
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "4836": {
      "fn": "ERC4973._mint",
      "offset": [
        5752,
        5802
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1326"
    },
    "4839": {
      "branch": 93,
      "fn": "ERC4973._mint",
      "offset": [
        5752,
        5802
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "4840": {
      "fn": "ERC4973._mint",
      "offset": [
        5752,
        5802
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "4842": {
      "fn": "ERC4973._mint",
      "offset": [
        5752,
        5802
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "4843": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "4847": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "4849": {
      "op": "SHL"
    },
    "4850": {
      "fn": "ERC4973._mint",
      "offset": [
        5752,
        5802
      ],
      "op": "DUP2",
      "path": "2"
    },
    "4851": {
      "fn": "ERC4973._mint",
      "offset": [
        5752,
        5802
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "4852": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4854": {
      "fn": "ERC4973._mint",
      "offset": [
        5752,
        5802
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "4856": {
      "fn": "ERC4973._mint",
      "offset": [
        5752,
        5802
      ],
      "op": "DUP3",
      "path": "2"
    },
    "4857": {
      "fn": "ERC4973._mint",
      "offset": [
        5752,
        5802
      ],
      "op": "ADD",
      "path": "2"
    },
    "4858": {
      "op": "MSTORE"
    },
    "4859": {
      "op": "PUSH1",
      "value": "0x14"
    },
    "4861": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "4863": {
      "op": "DUP3"
    },
    "4864": {
      "op": "ADD"
    },
    "4865": {
      "op": "MSTORE"
    },
    "4866": {
      "op": "PUSH20",
      "value": "0x6D696E743A20746F6B656E494420657869737473"
    },
    "4887": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "4889": {
      "op": "SHL"
    },
    "4890": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "4892": {
      "op": "DUP3"
    },
    "4893": {
      "op": "ADD"
    },
    "4894": {
      "op": "MSTORE"
    },
    "4895": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "4897": {
      "op": "ADD"
    },
    "4898": {
      "fn": "ERC4973._mint",
      "offset": [
        5752,
        5802
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x422"
    },
    "4901": {
      "op": "JUMP"
    },
    "4902": {
      "fn": "ERC4973._mint",
      "offset": [
        5752,
        5802
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "4903": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4905": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4907": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4909": {
      "op": "SHL"
    },
    "4910": {
      "op": "SUB"
    },
    "4911": {
      "fn": "ERC4973._mint",
      "offset": [
        5808,
        5821
      ],
      "op": "DUP5",
      "path": "2",
      "statement": 74
    },
    "4912": {
      "fn": "ERC4973._mint",
      "offset": [
        5808,
        5821
      ],
      "op": "AND",
      "path": "2"
    },
    "4913": {
      "fn": "ERC4973._mint",
      "offset": [
        5808,
        5821
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "4915": {
      "fn": "ERC4973._mint",
      "offset": [
        5808,
        5821
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "4916": {
      "fn": "ERC4973._mint",
      "offset": [
        5808,
        5821
      ],
      "op": "DUP2",
      "path": "2"
    },
    "4917": {
      "fn": "ERC4973._mint",
      "offset": [
        5808,
        5821
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "4918": {
      "fn": "ERC4973._mint",
      "offset": [
        5808,
        5817
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "4920": {
      "fn": "ERC4973._mint",
      "offset": [
        5808,
        5821
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "4922": {
      "fn": "ERC4973._mint",
      "offset": [
        5808,
        5821
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "4923": {
      "fn": "ERC4973._mint",
      "offset": [
        5808,
        5821
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "4925": {
      "fn": "ERC4973._mint",
      "offset": [
        5808,
        5821
      ],
      "op": "DUP2",
      "path": "2"
    },
    "4926": {
      "fn": "ERC4973._mint",
      "offset": [
        5808,
        5821
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "4927": {
      "fn": "ERC4973._mint",
      "offset": [
        5808,
        5826
      ],
      "op": "DUP1",
      "path": "2"
    },
    "4928": {
      "fn": "ERC4973._mint",
      "offset": [
        5808,
        5826
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "4929": {
      "fn": "ERC4973._mint",
      "offset": [
        5825,
        5826
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1"
    },
    "4931": {
      "fn": "ERC4973._mint",
      "offset": [
        5825,
        5826
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "4932": {
      "fn": "ERC4973._mint",
      "offset": [
        5808,
        5821
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "4933": {
      "fn": "ERC4973._mint",
      "offset": [
        5808,
        5826
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x134F"
    },
    "4936": {
      "fn": "ERC4973._mint",
      "offset": [
        5808,
        5826
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "4937": {
      "fn": "ERC4973._mint",
      "offset": [
        5825,
        5826
      ],
      "op": "DUP5",
      "path": "2"
    },
    "4938": {
      "fn": "ERC4973._mint",
      "offset": [
        5825,
        5826
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "4939": {
      "fn": "ERC4973._mint",
      "offset": [
        5808,
        5826
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x18ED"
    },
    "4942": {
      "fn": "ERC4973._mint",
      "jump": "i",
      "offset": [
        5808,
        5826
      ],
      "op": "JUMP",
      "path": "2"
    },
    "4943": {
      "fn": "ERC4973._mint",
      "offset": [
        5808,
        5826
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "4944": {
      "fn": "ERC4973._mint",
      "offset": [
        5808,
        5826
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "4945": {
      "fn": "ERC4973._mint",
      "offset": [
        5808,
        5826
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "4946": {
      "fn": "ERC4973._mint",
      "offset": [
        5808,
        5826
      ],
      "op": "SSTORE",
      "path": "2"
    },
    "4947": {
      "op": "POP"
    },
    "4948": {
      "op": "POP"
    },
    "4949": {
      "fn": "ERC4973._mint",
      "offset": [
        5832,
        5848
      ],
      "op": "PUSH1",
      "path": "2",
      "statement": 75,
      "value": "0x0"
    },
    "4951": {
      "fn": "ERC4973._mint",
      "offset": [
        5832,
        5848
      ],
      "op": "DUP4",
      "path": "2"
    },
    "4952": {
      "fn": "ERC4973._mint",
      "offset": [
        5832,
        5848
      ],
      "op": "DUP2",
      "path": "2"
    },
    "4953": {
      "fn": "ERC4973._mint",
      "offset": [
        5832,
        5848
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "4954": {
      "fn": "ERC4973._mint",
      "offset": [
        5832,
        5839
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x2"
    },
    "4956": {
      "fn": "ERC4973._mint",
      "offset": [
        5832,
        5848
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "4958": {
      "fn": "ERC4973._mint",
      "offset": [
        5832,
        5848
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "4959": {
      "fn": "ERC4973._mint",
      "offset": [
        5832,
        5848
      ],
      "op": "DUP2",
      "path": "2"
    },
    "4960": {
      "fn": "ERC4973._mint",
      "offset": [
        5832,
        5848
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "4961": {
      "fn": "ERC4973._mint",
      "offset": [
        5832,
        5848
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "4963": {
      "fn": "ERC4973._mint",
      "offset": [
        5832,
        5848
      ],
      "op": "DUP1",
      "path": "2"
    },
    "4964": {
      "fn": "ERC4973._mint",
      "offset": [
        5832,
        5848
      ],
      "op": "DUP4",
      "path": "2"
    },
    "4965": {
      "fn": "ERC4973._mint",
      "offset": [
        5832,
        5848
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "4966": {
      "fn": "ERC4973._mint",
      "offset": [
        5832,
        5853
      ],
      "op": "DUP1",
      "path": "2"
    },
    "4967": {
      "fn": "ERC4973._mint",
      "offset": [
        5832,
        5853
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "4968": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4970": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4972": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4974": {
      "op": "SHL"
    },
    "4975": {
      "op": "SUB"
    },
    "4976": {
      "op": "NOT"
    },
    "4977": {
      "fn": "ERC4973._mint",
      "offset": [
        5832,
        5853
      ],
      "op": "AND",
      "path": "2"
    },
    "4978": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4980": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4982": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4984": {
      "op": "SHL"
    },
    "4985": {
      "op": "SUB"
    },
    "4986": {
      "fn": "ERC4973._mint",
      "offset": [
        5832,
        5853
      ],
      "op": "DUP10",
      "path": "2"
    },
    "4987": {
      "fn": "ERC4973._mint",
      "offset": [
        5832,
        5853
      ],
      "op": "AND",
      "path": "2"
    },
    "4988": {
      "fn": "ERC4973._mint",
      "offset": [
        5832,
        5853
      ],
      "op": "OR",
      "path": "2"
    },
    "4989": {
      "fn": "ERC4973._mint",
      "offset": [
        5832,
        5853
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "4990": {
      "fn": "ERC4973._mint",
      "offset": [
        5832,
        5853
      ],
      "op": "SSTORE",
      "path": "2"
    },
    "4991": {
      "fn": "ERC4973._mint",
      "offset": [
        5859,
        5869
      ],
      "op": "PUSH1",
      "path": "2",
      "statement": 76,
      "value": "0x3"
    },
    "4993": {
      "fn": "ERC4973._mint",
      "offset": [
        5859,
        5878
      ],
      "op": "DUP3",
      "path": "2"
    },
    "4994": {
      "fn": "ERC4973._mint",
      "offset": [
        5859,
        5878
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "4995": {
      "fn": "ERC4973._mint",
      "offset": [
        5859,
        5878
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "4996": {
      "fn": "ERC4973._mint",
      "offset": [
        5859,
        5878
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "4997": {
      "fn": "ERC4973._mint",
      "offset": [
        5859,
        5878
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "4998": {
      "fn": "ERC4973._mint",
      "offset": [
        5859,
        5884
      ],
      "op": "DUP4",
      "path": "2"
    },
    "4999": {
      "fn": "ERC4973._mint",
      "offset": [
        5859,
        5884
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "5000": {
      "fn": "ERC4973._mint",
      "offset": [
        5859,
        5884
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1393"
    },
    "5003": {
      "fn": "ERC4973._mint",
      "offset": [
        5859,
        5884
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "5004": {
      "fn": "ERC4973._mint",
      "offset": [
        5859,
        5884
      ],
      "op": "DUP6",
      "path": "2"
    },
    "5005": {
      "fn": "ERC4973._mint",
      "offset": [
        5859,
        5884
      ],
      "op": "ADD",
      "path": "2"
    },
    "5006": {
      "fn": "ERC4973._mint",
      "offset": [
        5859,
        5884
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "5007": {
      "fn": "ERC4973._mint",
      "offset": [
        5859,
        5884
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x140C"
    },
    "5010": {
      "fn": "ERC4973._mint",
      "jump": "i",
      "offset": [
        5859,
        5884
      ],
      "op": "JUMP",
      "path": "2"
    },
    "5011": {
      "fn": "ERC4973._mint",
      "offset": [
        5859,
        5884
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "5012": {
      "op": "POP"
    },
    "5013": {
      "fn": "ERC4973._mint",
      "offset": [
        5895,
        5914
      ],
      "op": "PUSH1",
      "path": "2",
      "statement": 77,
      "value": "0x40"
    },
    "5015": {
      "fn": "ERC4973._mint",
      "offset": [
        5895,
        5914
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "5016": {
      "fn": "ERC4973._mint",
      "offset": [
        5906,
        5913
      ],
      "op": "DUP4",
      "path": "2"
    },
    "5017": {
      "fn": "ERC4973._mint",
      "offset": [
        5906,
        5913
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "5018": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5020": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5022": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5024": {
      "op": "SHL"
    },
    "5025": {
      "op": "SUB"
    },
    "5026": {
      "fn": "ERC4973._mint",
      "offset": [
        5895,
        5914
      ],
      "op": "DUP7",
      "path": "2"
    },
    "5027": {
      "fn": "ERC4973._mint",
      "offset": [
        5895,
        5914
      ],
      "op": "AND",
      "path": "2"
    },
    "5028": {
      "fn": "ERC4973._mint",
      "offset": [
        5895,
        5914
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "5029": {
      "fn": "ERC4973._mint",
      "offset": [
        5895,
        5914
      ],
      "op": "PUSH32",
      "path": "2",
      "value": "0xE9274A84B19E9428826DE6BAE8C48329354F8F0E73F771B97CAE2D9DCCD45A27"
    },
    "5062": {
      "fn": "ERC4973._mint",
      "offset": [
        5895,
        5914
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "5063": {
      "fn": "ERC4973._mint",
      "offset": [
        5895,
        5914
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "5065": {
      "fn": "ERC4973._mint",
      "offset": [
        5895,
        5914
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "5066": {
      "fn": "ERC4973._mint",
      "offset": [
        5895,
        5914
      ],
      "op": "LOG3",
      "path": "2"
    },
    "5067": {
      "op": "POP"
    },
    "5068": {
      "fn": "ERC4973._mint",
      "offset": [
        5927,
        5934
      ],
      "op": "SWAP1",
      "path": "2",
      "statement": 78
    },
    "5069": {
      "fn": "ERC4973._mint",
      "offset": [
        5927,
        5934
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "5070": {
      "fn": "ERC4973._mint",
      "offset": [
        5632,
        5939
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "5071": {
      "op": "POP"
    },
    "5072": {
      "op": "POP"
    },
    "5073": {
      "fn": "ERC4973._mint",
      "jump": "o",
      "offset": [
        5632,
        5939
      ],
      "op": "JUMP",
      "path": "2"
    },
    "5074": {
      "op": "JUMPDEST"
    },
    "5075": {
      "op": "POP"
    },
    "5076": {
      "op": "DUP1"
    },
    "5077": {
      "op": "SLOAD"
    },
    "5078": {
      "op": "PUSH2",
      "value": "0x13DE"
    },
    "5081": {
      "op": "SWAP1"
    },
    "5082": {
      "op": "PUSH2",
      "value": "0x17FD"
    },
    "5085": {
      "jump": "i",
      "op": "JUMP"
    },
    "5086": {
      "op": "JUMPDEST"
    },
    "5087": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5089": {
      "op": "DUP3"
    },
    "5090": {
      "op": "SSTORE"
    },
    "5091": {
      "op": "DUP1"
    },
    "5092": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "5094": {
      "op": "LT"
    },
    "5095": {
      "op": "PUSH2",
      "value": "0x13EE"
    },
    "5098": {
      "op": "JUMPI"
    },
    "5099": {
      "op": "POP"
    },
    "5100": {
      "op": "POP"
    },
    "5101": {
      "jump": "o",
      "op": "JUMP"
    },
    "5102": {
      "op": "JUMPDEST"
    },
    "5103": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "5105": {
      "op": "ADD"
    },
    "5106": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5108": {
      "op": "SWAP1"
    },
    "5109": {
      "op": "DIV"
    },
    "5110": {
      "op": "SWAP1"
    },
    "5111": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5113": {
      "op": "MSTORE"
    },
    "5114": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5116": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5118": {
      "op": "KECCAK256"
    },
    "5119": {
      "op": "SWAP1"
    },
    "5120": {
      "op": "DUP2"
    },
    "5121": {
      "op": "ADD"
    },
    "5122": {
      "op": "SWAP1"
    },
    "5123": {
      "op": "PUSH2",
      "value": "0x5FD"
    },
    "5126": {
      "op": "SWAP2"
    },
    "5127": {
      "op": "SWAP1"
    },
    "5128": {
      "op": "PUSH2",
      "value": "0x1490"
    },
    "5131": {
      "jump": "i",
      "op": "JUMP"
    },
    "5132": {
      "op": "JUMPDEST"
    },
    "5133": {
      "op": "DUP3"
    },
    "5134": {
      "op": "DUP1"
    },
    "5135": {
      "op": "SLOAD"
    },
    "5136": {
      "op": "PUSH2",
      "value": "0x1418"
    },
    "5139": {
      "op": "SWAP1"
    },
    "5140": {
      "op": "PUSH2",
      "value": "0x17FD"
    },
    "5143": {
      "jump": "i",
      "op": "JUMP"
    },
    "5144": {
      "op": "JUMPDEST"
    },
    "5145": {
      "op": "SWAP1"
    },
    "5146": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5148": {
      "op": "MSTORE"
    },
    "5149": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5151": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5153": {
      "op": "KECCAK256"
    },
    "5154": {
      "op": "SWAP1"
    },
    "5155": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "5157": {
      "op": "ADD"
    },
    "5158": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5160": {
      "op": "SWAP1"
    },
    "5161": {
      "op": "DIV"
    },
    "5162": {
      "op": "DUP2"
    },
    "5163": {
      "op": "ADD"
    },
    "5164": {
      "op": "SWAP3"
    },
    "5165": {
      "op": "DUP3"
    },
    "5166": {
      "op": "PUSH2",
      "value": "0x143A"
    },
    "5169": {
      "op": "JUMPI"
    },
    "5170": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5172": {
      "op": "DUP6"
    },
    "5173": {
      "op": "SSTORE"
    },
    "5174": {
      "op": "PUSH2",
      "value": "0x1480"
    },
    "5177": {
      "op": "JUMP"
    },
    "5178": {
      "op": "JUMPDEST"
    },
    "5179": {
      "op": "DUP3"
    },
    "5180": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "5182": {
      "op": "LT"
    },
    "5183": {
      "op": "PUSH2",
      "value": "0x1453"
    },
    "5186": {
      "op": "JUMPI"
    },
    "5187": {
      "op": "DUP1"
    },
    "5188": {
      "op": "MLOAD"
    },
    "5189": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "5191": {
      "op": "NOT"
    },
    "5192": {
      "op": "AND"
    },
    "5193": {
      "op": "DUP4"
    },
    "5194": {
      "op": "DUP1"
    },
    "5195": {
      "op": "ADD"
    },
    "5196": {
      "op": "OR"
    },
    "5197": {
      "op": "DUP6"
    },
    "5198": {
      "op": "SSTORE"
    },
    "5199": {
      "op": "PUSH2",
      "value": "0x1480"
    },
    "5202": {
      "op": "JUMP"
    },
    "5203": {
      "op": "JUMPDEST"
    },
    "5204": {
      "op": "DUP3"
    },
    "5205": {
      "op": "DUP1"
    },
    "5206": {
      "op": "ADD"
    },
    "5207": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5209": {
      "op": "ADD"
    },
    "5210": {
      "op": "DUP6"
    },
    "5211": {
      "op": "SSTORE"
    },
    "5212": {
      "op": "DUP3"
    },
    "5213": {
      "op": "ISZERO"
    },
    "5214": {
      "op": "PUSH2",
      "value": "0x1480"
    },
    "5217": {
      "op": "JUMPI"
    },
    "5218": {
      "op": "SWAP2"
    },
    "5219": {
      "op": "DUP3"
    },
    "5220": {
      "op": "ADD"
    },
    "5221": {
      "op": "JUMPDEST"
    },
    "5222": {
      "op": "DUP3"
    },
    "5223": {
      "op": "DUP2"
    },
    "5224": {
      "op": "GT"
    },
    "5225": {
      "op": "ISZERO"
    },
    "5226": {
      "op": "PUSH2",
      "value": "0x1480"
    },
    "5229": {
      "op": "JUMPI"
    },
    "5230": {
      "op": "DUP3"
    },
    "5231": {
      "op": "MLOAD"
    },
    "5232": {
      "op": "DUP3"
    },
    "5233": {
      "op": "SSTORE"
    },
    "5234": {
      "op": "SWAP2"
    },
    "5235": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5237": {
      "op": "ADD"
    },
    "5238": {
      "op": "SWAP2"
    },
    "5239": {
      "op": "SWAP1"
    },
    "5240": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5242": {
      "op": "ADD"
    },
    "5243": {
      "op": "SWAP1"
    },
    "5244": {
      "op": "PUSH2",
      "value": "0x1465"
    },
    "5247": {
      "op": "JUMP"
    },
    "5248": {
      "op": "JUMPDEST"
    },
    "5249": {
      "op": "POP"
    },
    "5250": {
      "op": "PUSH2",
      "value": "0x148C"
    },
    "5253": {
      "op": "SWAP3"
    },
    "5254": {
      "op": "SWAP2"
    },
    "5255": {
      "op": "POP"
    },
    "5256": {
      "op": "PUSH2",
      "value": "0x1490"
    },
    "5259": {
      "jump": "i",
      "op": "JUMP"
    },
    "5260": {
      "op": "JUMPDEST"
    },
    "5261": {
      "op": "POP"
    },
    "5262": {
      "op": "SWAP1"
    },
    "5263": {
      "jump": "o",
      "op": "JUMP"
    },
    "5264": {
      "op": "JUMPDEST"
    },
    "5265": {
      "op": "JUMPDEST"
    },
    "5266": {
      "op": "DUP1"
    },
    "5267": {
      "op": "DUP3"
    },
    "5268": {
      "op": "GT"
    },
    "5269": {
      "op": "ISZERO"
    },
    "5270": {
      "op": "PUSH2",
      "value": "0x148C"
    },
    "5273": {
      "op": "JUMPI"
    },
    "5274": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5276": {
      "op": "DUP2"
    },
    "5277": {
      "op": "SSTORE"
    },
    "5278": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5280": {
      "op": "ADD"
    },
    "5281": {
      "op": "PUSH2",
      "value": "0x1491"
    },
    "5284": {
      "op": "JUMP"
    },
    "5285": {
      "op": "JUMPDEST"
    },
    "5286": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5288": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5290": {
      "op": "DUP3"
    },
    "5291": {
      "op": "DUP5"
    },
    "5292": {
      "op": "SUB"
    },
    "5293": {
      "op": "SLT"
    },
    "5294": {
      "op": "ISZERO"
    },
    "5295": {
      "op": "PUSH2",
      "value": "0x14B7"
    },
    "5298": {
      "op": "JUMPI"
    },
    "5299": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5301": {
      "op": "DUP1"
    },
    "5302": {
      "op": "REVERT"
    },
    "5303": {
      "op": "JUMPDEST"
    },
    "5304": {
      "op": "DUP2"
    },
    "5305": {
      "op": "CALLDATALOAD"
    },
    "5306": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5308": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5310": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "5312": {
      "op": "SHL"
    },
    "5313": {
      "op": "SUB"
    },
    "5314": {
      "op": "NOT"
    },
    "5315": {
      "op": "DUP2"
    },
    "5316": {
      "op": "AND"
    },
    "5317": {
      "op": "DUP2"
    },
    "5318": {
      "op": "EQ"
    },
    "5319": {
      "op": "PUSH2",
      "value": "0xA23"
    },
    "5322": {
      "op": "JUMPI"
    },
    "5323": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5325": {
      "op": "DUP1"
    },
    "5326": {
      "op": "REVERT"
    },
    "5327": {
      "op": "JUMPDEST"
    },
    "5328": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5330": {
      "op": "JUMPDEST"
    },
    "5331": {
      "op": "DUP4"
    },
    "5332": {
      "op": "DUP2"
    },
    "5333": {
      "op": "LT"
    },
    "5334": {
      "op": "ISZERO"
    },
    "5335": {
      "op": "PUSH2",
      "value": "0x14EA"
    },
    "5338": {
      "op": "JUMPI"
    },
    "5339": {
      "op": "DUP2"
    },
    "5340": {
      "op": "DUP2"
    },
    "5341": {
      "op": "ADD"
    },
    "5342": {
      "op": "MLOAD"
    },
    "5343": {
      "op": "DUP4"
    },
    "5344": {
      "op": "DUP3"
    },
    "5345": {
      "op": "ADD"
    },
    "5346": {
      "op": "MSTORE"
    },
    "5347": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5349": {
      "op": "ADD"
    },
    "5350": {
      "op": "PUSH2",
      "value": "0x14D2"
    },
    "5353": {
      "op": "JUMP"
    },
    "5354": {
      "op": "JUMPDEST"
    },
    "5355": {
      "op": "DUP4"
    },
    "5356": {
      "op": "DUP2"
    },
    "5357": {
      "op": "GT"
    },
    "5358": {
      "op": "ISZERO"
    },
    "5359": {
      "op": "PUSH2",
      "value": "0x14F9"
    },
    "5362": {
      "op": "JUMPI"
    },
    "5363": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5365": {
      "op": "DUP5"
    },
    "5366": {
      "op": "DUP5"
    },
    "5367": {
      "op": "ADD"
    },
    "5368": {
      "op": "MSTORE"
    },
    "5369": {
      "op": "JUMPDEST"
    },
    "5370": {
      "op": "POP"
    },
    "5371": {
      "op": "POP"
    },
    "5372": {
      "op": "POP"
    },
    "5373": {
      "op": "POP"
    },
    "5374": {
      "jump": "o",
      "op": "JUMP"
    },
    "5375": {
      "op": "JUMPDEST"
    },
    "5376": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5378": {
      "op": "DUP2"
    },
    "5379": {
      "op": "MSTORE"
    },
    "5380": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5382": {
      "op": "DUP3"
    },
    "5383": {
      "op": "MLOAD"
    },
    "5384": {
      "op": "DUP1"
    },
    "5385": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5387": {
      "op": "DUP5"
    },
    "5388": {
      "op": "ADD"
    },
    "5389": {
      "op": "MSTORE"
    },
    "5390": {
      "op": "PUSH2",
      "value": "0x151E"
    },
    "5393": {
      "op": "DUP2"
    },
    "5394": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "5396": {
      "op": "DUP6"
    },
    "5397": {
      "op": "ADD"
    },
    "5398": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5400": {
      "op": "DUP8"
    },
    "5401": {
      "op": "ADD"
    },
    "5402": {
      "op": "PUSH2",
      "value": "0x14CF"
    },
    "5405": {
      "jump": "i",
      "op": "JUMP"
    },
    "5406": {
      "op": "JUMPDEST"
    },
    "5407": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "5409": {
      "op": "ADD"
    },
    "5410": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "5412": {
      "op": "NOT"
    },
    "5413": {
      "op": "AND"
    },
    "5414": {
      "op": "SWAP2"
    },
    "5415": {
      "op": "SWAP1"
    },
    "5416": {
      "op": "SWAP2"
    },
    "5417": {
      "op": "ADD"
    },
    "5418": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "5420": {
      "op": "ADD"
    },
    "5421": {
      "op": "SWAP3"
    },
    "5422": {
      "op": "SWAP2"
    },
    "5423": {
      "op": "POP"
    },
    "5424": {
      "op": "POP"
    },
    "5425": {
      "jump": "o",
      "op": "JUMP"
    },
    "5426": {
      "op": "JUMPDEST"
    },
    "5427": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "5432": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "5434": {
      "op": "SHL"
    },
    "5435": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5437": {
      "op": "MSTORE"
    },
    "5438": {
      "op": "PUSH1",
      "value": "0x41"
    },
    "5440": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "5442": {
      "op": "MSTORE"
    },
    "5443": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "5445": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5447": {
      "op": "REVERT"
    },
    "5448": {
      "op": "JUMPDEST"
    },
    "5449": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5451": {
      "op": "DUP3"
    },
    "5452": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "5454": {
      "op": "DUP4"
    },
    "5455": {
      "op": "ADD"
    },
    "5456": {
      "op": "SLT"
    },
    "5457": {
      "op": "PUSH2",
      "value": "0x1559"
    },
    "5460": {
      "op": "JUMPI"
    },
    "5461": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5463": {
      "op": "DUP1"
    },
    "5464": {
      "op": "REVERT"
    },
    "5465": {
      "op": "JUMPDEST"
    },
    "5466": {
      "op": "DUP2"
    },
    "5467": {
      "op": "CALLDATALOAD"
    },
    "5468": {
      "op": "PUSH8",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "5477": {
      "op": "DUP1"
    },
    "5478": {
      "op": "DUP3"
    },
    "5479": {
      "op": "GT"
    },
    "5480": {
      "op": "ISZERO"
    },
    "5481": {
      "op": "PUSH2",
      "value": "0x1574"
    },
    "5484": {
      "op": "JUMPI"
    },
    "5485": {
      "op": "PUSH2",
      "value": "0x1574"
    },
    "5488": {
      "op": "PUSH2",
      "value": "0x1532"
    },
    "5491": {
      "jump": "i",
      "op": "JUMP"
    },
    "5492": {
      "op": "JUMPDEST"
    },
    "5493": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "5495": {
      "op": "MLOAD"
    },
    "5496": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "5498": {
      "op": "DUP4"
    },
    "5499": {
      "op": "ADD"
    },
    "5500": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "5502": {
      "op": "NOT"
    },
    "5503": {
      "op": "SWAP1"
    },
    "5504": {
      "op": "DUP2"
    },
    "5505": {
      "op": "AND"
    },
    "5506": {
      "op": "PUSH1",
      "value": "0x3F"
    },
    "5508": {
      "op": "ADD"
    },
    "5509": {
      "op": "AND"
    },
    "5510": {
      "op": "DUP2"
    },
    "5511": {
      "op": "ADD"
    },
    "5512": {
      "op": "SWAP1"
    },
    "5513": {
      "op": "DUP3"
    },
    "5514": {
      "op": "DUP3"
    },
    "5515": {
      "op": "GT"
    },
    "5516": {
      "op": "DUP2"
    },
    "5517": {
      "op": "DUP4"
    },
    "5518": {
      "op": "LT"
    },
    "5519": {
      "op": "OR"
    },
    "5520": {
      "op": "ISZERO"
    },
    "5521": {
      "op": "PUSH2",
      "value": "0x159C"
    },
    "5524": {
      "op": "JUMPI"
    },
    "5525": {
      "op": "PUSH2",
      "value": "0x159C"
    },
    "5528": {
      "op": "PUSH2",
      "value": "0x1532"
    },
    "5531": {
      "jump": "i",
      "op": "JUMP"
    },
    "5532": {
      "op": "JUMPDEST"
    },
    "5533": {
      "op": "DUP2"
    },
    "5534": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "5536": {
      "op": "MSTORE"
    },
    "5537": {
      "op": "DUP4"
    },
    "5538": {
      "op": "DUP2"
    },
    "5539": {
      "op": "MSTORE"
    },
    "5540": {
      "op": "DUP7"
    },
    "5541": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5543": {
      "op": "DUP6"
    },
    "5544": {
      "op": "DUP9"
    },
    "5545": {
      "op": "ADD"
    },
    "5546": {
      "op": "ADD"
    },
    "5547": {
      "op": "GT"
    },
    "5548": {
      "op": "ISZERO"
    },
    "5549": {
      "op": "PUSH2",
      "value": "0x15B5"
    },
    "5552": {
      "op": "JUMPI"
    },
    "5553": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5555": {
      "op": "DUP1"
    },
    "5556": {
      "op": "REVERT"
    },
    "5557": {
      "op": "JUMPDEST"
    },
    "5558": {
      "op": "DUP4"
    },
    "5559": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5561": {
      "op": "DUP8"
    },
    "5562": {
      "op": "ADD"
    },
    "5563": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5565": {
      "op": "DUP4"
    },
    "5566": {
      "op": "ADD"
    },
    "5567": {
      "op": "CALLDATACOPY"
    },
    "5568": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5570": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5572": {
      "op": "DUP6"
    },
    "5573": {
      "op": "DUP4"
    },
    "5574": {
      "op": "ADD"
    },
    "5575": {
      "op": "ADD"
    },
    "5576": {
      "op": "MSTORE"
    },
    "5577": {
      "op": "DUP1"
    },
    "5578": {
      "op": "SWAP5"
    },
    "5579": {
      "op": "POP"
    },
    "5580": {
      "op": "POP"
    },
    "5581": {
      "op": "POP"
    },
    "5582": {
      "op": "POP"
    },
    "5583": {
      "op": "POP"
    },
    "5584": {
      "op": "SWAP3"
    },
    "5585": {
      "op": "SWAP2"
    },
    "5586": {
      "op": "POP"
    },
    "5587": {
      "op": "POP"
    },
    "5588": {
      "jump": "o",
      "op": "JUMP"
    },
    "5589": {
      "op": "JUMPDEST"
    },
    "5590": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5592": {
      "op": "DUP1"
    },
    "5593": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5595": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "5597": {
      "op": "DUP5"
    },
    "5598": {
      "op": "DUP7"
    },
    "5599": {
      "op": "SUB"
    },
    "5600": {
      "op": "SLT"
    },
    "5601": {
      "op": "ISZERO"
    },
    "5602": {
      "op": "PUSH2",
      "value": "0x15EA"
    },
    "5605": {
      "op": "JUMPI"
    },
    "5606": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5608": {
      "op": "DUP1"
    },
    "5609": {
      "op": "REVERT"
    },
    "5610": {
      "op": "JUMPDEST"
    },
    "5611": {
      "op": "DUP4"
    },
    "5612": {
      "op": "CALLDATALOAD"
    },
    "5613": {
      "op": "SWAP3"
    },
    "5614": {
      "op": "POP"
    },
    "5615": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5617": {
      "op": "DUP5"
    },
    "5618": {
      "op": "ADD"
    },
    "5619": {
      "op": "CALLDATALOAD"
    },
    "5620": {
      "op": "PUSH8",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "5629": {
      "op": "DUP2"
    },
    "5630": {
      "op": "GT"
    },
    "5631": {
      "op": "ISZERO"
    },
    "5632": {
      "op": "PUSH2",
      "value": "0x1608"
    },
    "5635": {
      "op": "JUMPI"
    },
    "5636": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5638": {
      "op": "DUP1"
    },
    "5639": {
      "op": "REVERT"
    },
    "5640": {
      "op": "JUMPDEST"
    },
    "5641": {
      "op": "PUSH2",
      "value": "0x1614"
    },
    "5644": {
      "op": "DUP7"
    },
    "5645": {
      "op": "DUP3"
    },
    "5646": {
      "op": "DUP8"
    },
    "5647": {
      "op": "ADD"
    },
    "5648": {
      "op": "PUSH2",
      "value": "0x1548"
    },
    "5651": {
      "jump": "i",
      "op": "JUMP"
    },
    "5652": {
      "op": "JUMPDEST"
    },
    "5653": {
      "op": "SWAP3"
    },
    "5654": {
      "op": "POP"
    },
    "5655": {
      "op": "POP"
    },
    "5656": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "5658": {
      "op": "DUP5"
    },
    "5659": {
      "op": "ADD"
    },
    "5660": {
      "op": "CALLDATALOAD"
    },
    "5661": {
      "op": "SWAP1"
    },
    "5662": {
      "op": "POP"
    },
    "5663": {
      "op": "SWAP3"
    },
    "5664": {
      "op": "POP"
    },
    "5665": {
      "op": "SWAP3"
    },
    "5666": {
      "op": "POP"
    },
    "5667": {
      "op": "SWAP3"
    },
    "5668": {
      "jump": "o",
      "op": "JUMP"
    },
    "5669": {
      "op": "JUMPDEST"
    },
    "5670": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5672": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5674": {
      "op": "DUP3"
    },
    "5675": {
      "op": "DUP5"
    },
    "5676": {
      "op": "SUB"
    },
    "5677": {
      "op": "SLT"
    },
    "5678": {
      "op": "ISZERO"
    },
    "5679": {
      "op": "PUSH2",
      "value": "0x1637"
    },
    "5682": {
      "op": "JUMPI"
    },
    "5683": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5685": {
      "op": "DUP1"
    },
    "5686": {
      "op": "REVERT"
    },
    "5687": {
      "op": "JUMPDEST"
    },
    "5688": {
      "op": "POP"
    },
    "5689": {
      "op": "CALLDATALOAD"
    },
    "5690": {
      "op": "SWAP2"
    },
    "5691": {
      "op": "SWAP1"
    },
    "5692": {
      "op": "POP"
    },
    "5693": {
      "jump": "o",
      "op": "JUMP"
    },
    "5694": {
      "op": "JUMPDEST"
    },
    "5695": {
      "op": "DUP1"
    },
    "5696": {
      "op": "CALLDATALOAD"
    },
    "5697": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5699": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5701": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5703": {
      "op": "SHL"
    },
    "5704": {
      "op": "SUB"
    },
    "5705": {
      "op": "DUP2"
    },
    "5706": {
      "op": "AND"
    },
    "5707": {
      "op": "DUP2"
    },
    "5708": {
      "op": "EQ"
    },
    "5709": {
      "op": "PUSH2",
      "value": "0x1655"
    },
    "5712": {
      "op": "JUMPI"
    },
    "5713": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5715": {
      "op": "DUP1"
    },
    "5716": {
      "op": "REVERT"
    },
    "5717": {
      "op": "JUMPDEST"
    },
    "5718": {
      "op": "SWAP2"
    },
    "5719": {
      "op": "SWAP1"
    },
    "5720": {
      "op": "POP"
    },
    "5721": {
      "jump": "o",
      "op": "JUMP"
    },
    "5722": {
      "op": "JUMPDEST"
    },
    "5723": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5725": {
      "op": "DUP1"
    },
    "5726": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "5728": {
      "op": "DUP4"
    },
    "5729": {
      "op": "DUP6"
    },
    "5730": {
      "op": "SUB"
    },
    "5731": {
      "op": "SLT"
    },
    "5732": {
      "op": "ISZERO"
    },
    "5733": {
      "op": "PUSH2",
      "value": "0x166D"
    },
    "5736": {
      "op": "JUMPI"
    },
    "5737": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5739": {
      "op": "DUP1"
    },
    "5740": {
      "op": "REVERT"
    },
    "5741": {
      "op": "JUMPDEST"
    },
    "5742": {
      "op": "PUSH2",
      "value": "0x1676"
    },
    "5745": {
      "op": "DUP4"
    },
    "5746": {
      "op": "PUSH2",
      "value": "0x163E"
    },
    "5749": {
      "jump": "i",
      "op": "JUMP"
    },
    "5750": {
      "op": "JUMPDEST"
    },
    "5751": {
      "op": "SWAP5"
    },
    "5752": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5754": {
      "op": "SWAP4"
    },
    "5755": {
      "op": "SWAP1"
    },
    "5756": {
      "op": "SWAP4"
    },
    "5757": {
      "op": "ADD"
    },
    "5758": {
      "op": "CALLDATALOAD"
    },
    "5759": {
      "op": "SWAP4"
    },
    "5760": {
      "op": "POP"
    },
    "5761": {
      "op": "POP"
    },
    "5762": {
      "op": "POP"
    },
    "5763": {
      "jump": "o",
      "op": "JUMP"
    },
    "5764": {
      "op": "JUMPDEST"
    },
    "5765": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5767": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5769": {
      "op": "DUP3"
    },
    "5770": {
      "op": "DUP5"
    },
    "5771": {
      "op": "SUB"
    },
    "5772": {
      "op": "SLT"
    },
    "5773": {
      "op": "ISZERO"
    },
    "5774": {
      "op": "PUSH2",
      "value": "0x1696"
    },
    "5777": {
      "op": "JUMPI"
    },
    "5778": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5780": {
      "op": "DUP1"
    },
    "5781": {
      "op": "REVERT"
    },
    "5782": {
      "op": "JUMPDEST"
    },
    "5783": {
      "op": "PUSH2",
      "value": "0xA23"
    },
    "5786": {
      "op": "DUP3"
    },
    "5787": {
      "op": "PUSH2",
      "value": "0x163E"
    },
    "5790": {
      "jump": "i",
      "op": "JUMP"
    },
    "5791": {
      "op": "JUMPDEST"
    },
    "5792": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5794": {
      "op": "DUP1"
    },
    "5795": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "5797": {
      "op": "DUP4"
    },
    "5798": {
      "op": "DUP6"
    },
    "5799": {
      "op": "SUB"
    },
    "5800": {
      "op": "SLT"
    },
    "5801": {
      "op": "ISZERO"
    },
    "5802": {
      "op": "PUSH2",
      "value": "0x16B2"
    },
    "5805": {
      "op": "JUMPI"
    },
    "5806": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5808": {
      "op": "DUP1"
    },
    "5809": {
      "op": "REVERT"
    },
    "5810": {
      "op": "JUMPDEST"
    },
    "5811": {
      "op": "PUSH2",
      "value": "0x16BB"
    },
    "5814": {
      "op": "DUP4"
    },
    "5815": {
      "op": "PUSH2",
      "value": "0x163E"
    },
    "5818": {
      "jump": "i",
      "op": "JUMP"
    },
    "5819": {
      "op": "JUMPDEST"
    },
    "5820": {
      "op": "SWAP2"
    },
    "5821": {
      "op": "POP"
    },
    "5822": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5824": {
      "op": "DUP4"
    },
    "5825": {
      "op": "ADD"
    },
    "5826": {
      "op": "CALLDATALOAD"
    },
    "5827": {
      "op": "PUSH8",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "5836": {
      "op": "DUP2"
    },
    "5837": {
      "op": "GT"
    },
    "5838": {
      "op": "ISZERO"
    },
    "5839": {
      "op": "PUSH2",
      "value": "0x16D7"
    },
    "5842": {
      "op": "JUMPI"
    },
    "5843": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5845": {
      "op": "DUP1"
    },
    "5846": {
      "op": "REVERT"
    },
    "5847": {
      "op": "JUMPDEST"
    },
    "5848": {
      "op": "PUSH2",
      "value": "0x16E3"
    },
    "5851": {
      "op": "DUP6"
    },
    "5852": {
      "op": "DUP3"
    },
    "5853": {
      "op": "DUP7"
    },
    "5854": {
      "op": "ADD"
    },
    "5855": {
      "op": "PUSH2",
      "value": "0x1548"
    },
    "5858": {
      "jump": "i",
      "op": "JUMP"
    },
    "5859": {
      "op": "JUMPDEST"
    },
    "5860": {
      "op": "SWAP2"
    },
    "5861": {
      "op": "POP"
    },
    "5862": {
      "op": "POP"
    },
    "5863": {
      "op": "SWAP3"
    },
    "5864": {
      "op": "POP"
    },
    "5865": {
      "op": "SWAP3"
    },
    "5866": {
      "op": "SWAP1"
    },
    "5867": {
      "op": "POP"
    },
    "5868": {
      "jump": "o",
      "op": "JUMP"
    },
    "5869": {
      "op": "JUMPDEST"
    },
    "5870": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5872": {
      "op": "DUP1"
    },
    "5873": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5875": {
      "op": "DUP1"
    },
    "5876": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5878": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5880": {
      "op": "DUP7"
    },
    "5881": {
      "op": "DUP9"
    },
    "5882": {
      "op": "SUB"
    },
    "5883": {
      "op": "SLT"
    },
    "5884": {
      "op": "ISZERO"
    },
    "5885": {
      "op": "PUSH2",
      "value": "0x1705"
    },
    "5888": {
      "op": "JUMPI"
    },
    "5889": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5891": {
      "op": "DUP1"
    },
    "5892": {
      "op": "REVERT"
    },
    "5893": {
      "op": "JUMPDEST"
    },
    "5894": {
      "op": "PUSH2",
      "value": "0x170E"
    },
    "5897": {
      "op": "DUP7"
    },
    "5898": {
      "op": "PUSH2",
      "value": "0x163E"
    },
    "5901": {
      "jump": "i",
      "op": "JUMP"
    },
    "5902": {
      "op": "JUMPDEST"
    },
    "5903": {
      "op": "SWAP5"
    },
    "5904": {
      "op": "POP"
    },
    "5905": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5907": {
      "op": "DUP7"
    },
    "5908": {
      "op": "ADD"
    },
    "5909": {
      "op": "CALLDATALOAD"
    },
    "5910": {
      "op": "SWAP4"
    },
    "5911": {
      "op": "POP"
    },
    "5912": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "5914": {
      "op": "DUP7"
    },
    "5915": {
      "op": "ADD"
    },
    "5916": {
      "op": "CALLDATALOAD"
    },
    "5917": {
      "op": "PUSH8",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "5926": {
      "op": "DUP1"
    },
    "5927": {
      "op": "DUP3"
    },
    "5928": {
      "op": "GT"
    },
    "5929": {
      "op": "ISZERO"
    },
    "5930": {
      "op": "PUSH2",
      "value": "0x1732"
    },
    "5933": {
      "op": "JUMPI"
    },
    "5934": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5936": {
      "op": "DUP1"
    },
    "5937": {
      "op": "REVERT"
    },
    "5938": {
      "op": "JUMPDEST"
    },
    "5939": {
      "op": "PUSH2",
      "value": "0x173E"
    },
    "5942": {
      "op": "DUP10"
    },
    "5943": {
      "op": "DUP4"
    },
    "5944": {
      "op": "DUP11"
    },
    "5945": {
      "op": "ADD"
    },
    "5946": {
      "op": "PUSH2",
      "value": "0x1548"
    },
    "5949": {
      "jump": "i",
      "op": "JUMP"
    },
    "5950": {
      "op": "JUMPDEST"
    },
    "5951": {
      "op": "SWAP5"
    },
    "5952": {
      "op": "POP"
    },
    "5953": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "5955": {
      "op": "DUP9"
    },
    "5956": {
      "op": "ADD"
    },
    "5957": {
      "op": "CALLDATALOAD"
    },
    "5958": {
      "op": "SWAP4"
    },
    "5959": {
      "op": "POP"
    },
    "5960": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "5962": {
      "op": "DUP9"
    },
    "5963": {
      "op": "ADD"
    },
    "5964": {
      "op": "CALLDATALOAD"
    },
    "5965": {
      "op": "SWAP2"
    },
    "5966": {
      "op": "POP"
    },
    "5967": {
      "op": "DUP1"
    },
    "5968": {
      "op": "DUP3"
    },
    "5969": {
      "op": "GT"
    },
    "5970": {
      "op": "ISZERO"
    },
    "5971": {
      "op": "PUSH2",
      "value": "0x175B"
    },
    "5974": {
      "op": "JUMPI"
    },
    "5975": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5977": {
      "op": "DUP1"
    },
    "5978": {
      "op": "REVERT"
    },
    "5979": {
      "op": "JUMPDEST"
    },
    "5980": {
      "op": "POP"
    },
    "5981": {
      "op": "PUSH2",
      "value": "0x1768"
    },
    "5984": {
      "op": "DUP9"
    },
    "5985": {
      "op": "DUP3"
    },
    "5986": {
      "op": "DUP10"
    },
    "5987": {
      "op": "ADD"
    },
    "5988": {
      "op": "PUSH2",
      "value": "0x1548"
    },
    "5991": {
      "jump": "i",
      "op": "JUMP"
    },
    "5992": {
      "op": "JUMPDEST"
    },
    "5993": {
      "op": "SWAP2"
    },
    "5994": {
      "op": "POP"
    },
    "5995": {
      "op": "POP"
    },
    "5996": {
      "op": "SWAP3"
    },
    "5997": {
      "op": "SWAP6"
    },
    "5998": {
      "op": "POP"
    },
    "5999": {
      "op": "SWAP3"
    },
    "6000": {
      "op": "SWAP6"
    },
    "6001": {
      "op": "SWAP1"
    },
    "6002": {
      "op": "SWAP4"
    },
    "6003": {
      "op": "POP"
    },
    "6004": {
      "jump": "o",
      "op": "JUMP"
    },
    "6005": {
      "op": "JUMPDEST"
    },
    "6006": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "6008": {
      "op": "DUP1"
    },
    "6009": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "6011": {
      "op": "DUP4"
    },
    "6012": {
      "op": "DUP6"
    },
    "6013": {
      "op": "SUB"
    },
    "6014": {
      "op": "SLT"
    },
    "6015": {
      "op": "ISZERO"
    },
    "6016": {
      "op": "PUSH2",
      "value": "0x1788"
    },
    "6019": {
      "op": "JUMPI"
    },
    "6020": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "6022": {
      "op": "DUP1"
    },
    "6023": {
      "op": "REVERT"
    },
    "6024": {
      "op": "JUMPDEST"
    },
    "6025": {
      "op": "DUP3"
    },
    "6026": {
      "op": "CALLDATALOAD"
    },
    "6027": {
      "op": "SWAP2"
    },
    "6028": {
      "op": "POP"
    },
    "6029": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "6031": {
      "op": "DUP4"
    },
    "6032": {
      "op": "ADD"
    },
    "6033": {
      "op": "CALLDATALOAD"
    },
    "6034": {
      "op": "PUSH8",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "6043": {
      "op": "DUP2"
    },
    "6044": {
      "op": "GT"
    },
    "6045": {
      "op": "ISZERO"
    },
    "6046": {
      "op": "PUSH2",
      "value": "0x16D7"
    },
    "6049": {
      "op": "JUMPI"
    },
    "6050": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "6052": {
      "op": "DUP1"
    },
    "6053": {
      "op": "REVERT"
    },
    "6054": {
      "op": "JUMPDEST"
    },
    "6055": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "6057": {
      "op": "DUP1"
    },
    "6058": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "6060": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "6062": {
      "op": "DUP5"
    },
    "6063": {
      "op": "DUP7"
    },
    "6064": {
      "op": "SUB"
    },
    "6065": {
      "op": "SLT"
    },
    "6066": {
      "op": "ISZERO"
    },
    "6067": {
      "op": "PUSH2",
      "value": "0x17BB"
    },
    "6070": {
      "op": "JUMPI"
    },
    "6071": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "6073": {
      "op": "DUP1"
    },
    "6074": {
      "op": "REVERT"
    },
    "6075": {
      "op": "JUMPDEST"
    },
    "6076": {
      "op": "PUSH2",
      "value": "0x17C4"
    },
    "6079": {
      "op": "DUP5"
    },
    "6080": {
      "op": "PUSH2",
      "value": "0x163E"
    },
    "6083": {
      "jump": "i",
      "op": "JUMP"
    },
    "6084": {
      "op": "JUMPDEST"
    },
    "6085": {
      "op": "SWAP3"
    },
    "6086": {
      "op": "POP"
    },
    "6087": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "6089": {
      "op": "DUP5"
    },
    "6090": {
      "op": "ADD"
    },
    "6091": {
      "op": "CALLDATALOAD"
    },
    "6092": {
      "op": "SWAP2"
    },
    "6093": {
      "op": "POP"
    },
    "6094": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "6096": {
      "op": "DUP5"
    },
    "6097": {
      "op": "ADD"
    },
    "6098": {
      "op": "CALLDATALOAD"
    },
    "6099": {
      "op": "PUSH8",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "6108": {
      "op": "DUP2"
    },
    "6109": {
      "op": "GT"
    },
    "6110": {
      "op": "ISZERO"
    },
    "6111": {
      "op": "PUSH2",
      "value": "0x17E7"
    },
    "6114": {
      "op": "JUMPI"
    },
    "6115": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "6117": {
      "op": "DUP1"
    },
    "6118": {
      "op": "REVERT"
    },
    "6119": {
      "op": "JUMPDEST"
    },
    "6120": {
      "op": "PUSH2",
      "value": "0x17F3"
    },
    "6123": {
      "op": "DUP7"
    },
    "6124": {
      "op": "DUP3"
    },
    "6125": {
      "op": "DUP8"
    },
    "6126": {
      "op": "ADD"
    },
    "6127": {
      "op": "PUSH2",
      "value": "0x1548"
    },
    "6130": {
      "jump": "i",
      "op": "JUMP"
    },
    "6131": {
      "op": "JUMPDEST"
    },
    "6132": {
      "op": "SWAP2"
    },
    "6133": {
      "op": "POP"
    },
    "6134": {
      "op": "POP"
    },
    "6135": {
      "op": "SWAP3"
    },
    "6136": {
      "op": "POP"
    },
    "6137": {
      "op": "SWAP3"
    },
    "6138": {
      "op": "POP"
    },
    "6139": {
      "op": "SWAP3"
    },
    "6140": {
      "jump": "o",
      "op": "JUMP"
    },
    "6141": {
      "op": "JUMPDEST"
    },
    "6142": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6144": {
      "op": "DUP2"
    },
    "6145": {
      "op": "DUP2"
    },
    "6146": {
      "op": "SHR"
    },
    "6147": {
      "op": "SWAP1"
    },
    "6148": {
      "op": "DUP3"
    },
    "6149": {
      "op": "AND"
    },
    "6150": {
      "op": "DUP1"
    },
    "6151": {
      "op": "PUSH2",
      "value": "0x1811"
    },
    "6154": {
      "op": "JUMPI"
    },
    "6155": {
      "op": "PUSH1",
      "value": "0x7F"
    },
    "6157": {
      "op": "DUP3"
    },
    "6158": {
      "op": "AND"
    },
    "6159": {
      "op": "SWAP2"
    },
    "6160": {
      "op": "POP"
    },
    "6161": {
      "op": "JUMPDEST"
    },
    "6162": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "6164": {
      "op": "DUP3"
    },
    "6165": {
      "op": "LT"
    },
    "6166": {
      "op": "DUP2"
    },
    "6167": {
      "op": "EQ"
    },
    "6168": {
      "op": "ISZERO"
    },
    "6169": {
      "op": "PUSH2",
      "value": "0x1832"
    },
    "6172": {
      "op": "JUMPI"
    },
    "6173": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "6178": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "6180": {
      "op": "SHL"
    },
    "6181": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "6183": {
      "op": "MSTORE"
    },
    "6184": {
      "op": "PUSH1",
      "value": "0x22"
    },
    "6186": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "6188": {
      "op": "MSTORE"
    },
    "6189": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "6191": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "6193": {
      "op": "REVERT"
    },
    "6194": {
      "op": "JUMPDEST"
    },
    "6195": {
      "op": "POP"
    },
    "6196": {
      "op": "SWAP2"
    },
    "6197": {
      "op": "SWAP1"
    },
    "6198": {
      "op": "POP"
    },
    "6199": {
      "jump": "o",
      "op": "JUMP"
    },
    "6200": {
      "op": "JUMPDEST"
    },
    "6201": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "6203": {
      "op": "DUP4"
    },
    "6204": {
      "op": "MLOAD"
    },
    "6205": {
      "op": "PUSH2",
      "value": "0x184A"
    },
    "6208": {
      "op": "DUP2"
    },
    "6209": {
      "op": "DUP5"
    },
    "6210": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "6212": {
      "op": "DUP9"
    },
    "6213": {
      "op": "ADD"
    },
    "6214": {
      "op": "PUSH2",
      "value": "0x14CF"
    },
    "6217": {
      "jump": "i",
      "op": "JUMP"
    },
    "6218": {
      "op": "JUMPDEST"
    },
    "6219": {
      "op": "DUP4"
    },
    "6220": {
      "op": "MLOAD"
    },
    "6221": {
      "op": "SWAP1"
    },
    "6222": {
      "op": "DUP4"
    },
    "6223": {
      "op": "ADD"
    },
    "6224": {
      "op": "SWAP1"
    },
    "6225": {
      "op": "PUSH2",
      "value": "0x185E"
    },
    "6228": {
      "op": "DUP2"
    },
    "6229": {
      "op": "DUP4"
    },
    "6230": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "6232": {
      "op": "DUP9"
    },
    "6233": {
      "op": "ADD"
    },
    "6234": {
      "op": "PUSH2",
      "value": "0x14CF"
    },
    "6237": {
      "jump": "i",
      "op": "JUMP"
    },
    "6238": {
      "op": "JUMPDEST"
    },
    "6239": {
      "op": "ADD"
    },
    "6240": {
      "op": "SWAP5"
    },
    "6241": {
      "op": "SWAP4"
    },
    "6242": {
      "op": "POP"
    },
    "6243": {
      "op": "POP"
    },
    "6244": {
      "op": "POP"
    },
    "6245": {
      "op": "POP"
    },
    "6246": {
      "jump": "o",
      "op": "JUMP"
    },
    "6247": {
      "op": "JUMPDEST"
    },
    "6248": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "6253": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "6255": {
      "op": "SHL"
    },
    "6256": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "6258": {
      "op": "MSTORE"
    },
    "6259": {
      "op": "PUSH1",
      "value": "0x11"
    },
    "6261": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "6263": {
      "op": "MSTORE"
    },
    "6264": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "6266": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "6268": {
      "op": "REVERT"
    },
    "6269": {
      "op": "JUMPDEST"
    },
    "6270": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "6272": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "6274": {
      "op": "NOT"
    },
    "6275": {
      "op": "DUP3"
    },
    "6276": {
      "op": "EQ"
    },
    "6277": {
      "op": "ISZERO"
    },
    "6278": {
      "op": "PUSH2",
      "value": "0x1891"
    },
    "6281": {
      "op": "JUMPI"
    },
    "6282": {
      "op": "PUSH2",
      "value": "0x1891"
    },
    "6285": {
      "op": "PUSH2",
      "value": "0x1867"
    },
    "6288": {
      "jump": "i",
      "op": "JUMP"
    },
    "6289": {
      "op": "JUMPDEST"
    },
    "6290": {
      "op": "POP"
    },
    "6291": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6293": {
      "op": "ADD"
    },
    "6294": {
      "op": "SWAP1"
    },
    "6295": {
      "jump": "o",
      "op": "JUMP"
    },
    "6296": {
      "op": "JUMPDEST"
    },
    "6297": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "6302": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "6304": {
      "op": "SHL"
    },
    "6305": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "6307": {
      "op": "MSTORE"
    },
    "6308": {
      "op": "PUSH1",
      "value": "0x12"
    },
    "6310": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "6312": {
      "op": "MSTORE"
    },
    "6313": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "6315": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "6317": {
      "op": "REVERT"
    },
    "6318": {
      "op": "JUMPDEST"
    },
    "6319": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "6321": {
      "op": "DUP3"
    },
    "6322": {
      "op": "PUSH2",
      "value": "0x18BD"
    },
    "6325": {
      "op": "JUMPI"
    },
    "6326": {
      "op": "PUSH2",
      "value": "0x18BD"
    },
    "6329": {
      "op": "PUSH2",
      "value": "0x1898"
    },
    "6332": {
      "jump": "i",
      "op": "JUMP"
    },
    "6333": {
      "op": "JUMPDEST"
    },
    "6334": {
      "op": "POP"
    },
    "6335": {
      "op": "DIV"
    },
    "6336": {
      "op": "SWAP1"
    },
    "6337": {
      "jump": "o",
      "op": "JUMP"
    },
    "6338": {
      "op": "JUMPDEST"
    },
    "6339": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "6341": {
      "op": "DUP3"
    },
    "6342": {
      "op": "DUP3"
    },
    "6343": {
      "op": "LT"
    },
    "6344": {
      "op": "ISZERO"
    },
    "6345": {
      "op": "PUSH2",
      "value": "0x18D4"
    },
    "6348": {
      "op": "JUMPI"
    },
    "6349": {
      "op": "PUSH2",
      "value": "0x18D4"
    },
    "6352": {
      "op": "PUSH2",
      "value": "0x1867"
    },
    "6355": {
      "jump": "i",
      "op": "JUMP"
    },
    "6356": {
      "op": "JUMPDEST"
    },
    "6357": {
      "op": "POP"
    },
    "6358": {
      "op": "SUB"
    },
    "6359": {
      "op": "SWAP1"
    },
    "6360": {
      "jump": "o",
      "op": "JUMP"
    },
    "6361": {
      "op": "JUMPDEST"
    },
    "6362": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "6364": {
      "op": "DUP3"
    },
    "6365": {
      "op": "PUSH2",
      "value": "0x18E8"
    },
    "6368": {
      "op": "JUMPI"
    },
    "6369": {
      "op": "PUSH2",
      "value": "0x18E8"
    },
    "6372": {
      "op": "PUSH2",
      "value": "0x1898"
    },
    "6375": {
      "jump": "i",
      "op": "JUMP"
    },
    "6376": {
      "op": "JUMPDEST"
    },
    "6377": {
      "op": "POP"
    },
    "6378": {
      "op": "MOD"
    },
    "6379": {
      "op": "SWAP1"
    },
    "6380": {
      "jump": "o",
      "op": "JUMP"
    },
    "6381": {
      "op": "JUMPDEST"
    },
    "6382": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "6384": {
      "op": "DUP3"
    },
    "6385": {
      "op": "NOT"
    },
    "6386": {
      "op": "DUP3"
    },
    "6387": {
      "op": "GT"
    },
    "6388": {
      "op": "ISZERO"
    },
    "6389": {
      "op": "PUSH2",
      "value": "0x1900"
    },
    "6392": {
      "op": "JUMPI"
    },
    "6393": {
      "op": "PUSH2",
      "value": "0x1900"
    },
    "6396": {
      "op": "PUSH2",
      "value": "0x1867"
    },
    "6399": {
      "jump": "i",
      "op": "JUMP"
    },
    "6400": {
      "op": "JUMPDEST"
    },
    "6401": {
      "op": "POP"
    },
    "6402": {
      "op": "ADD"
    },
    "6403": {
      "op": "SWAP1"
    },
    "6404": {
      "jump": "o",
      "op": "JUMP"
    },
    "6405": {
      "op": "JUMPDEST"
    },
    "6406": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "6411": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "6413": {
      "op": "SHL"
    },
    "6414": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "6416": {
      "op": "MSTORE"
    },
    "6417": {
      "op": "PUSH1",
      "value": "0x32"
    },
    "6419": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "6421": {
      "op": "MSTORE"
    },
    "6422": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "6424": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "6426": {
      "op": "REVERT"
    }
  },
  "sha1": "b4c12e1c323722af2d784fda50cc880eef6d7a9e",
  "source": "// SPDX-License-Identifier: GPL-3.0\n\n///  _____     ______     ______     ______     ______     ______     _____    \n/// /\\  __-.  /\\  __ \\   /\\  ___\\   /\\  ___\\   /\\  == \\   /\\  ___\\   /\\  __-.  \n/// \\ \\ \\/\\ \\ \\ \\  __ \\  \\ \\ \\____  \\ \\ \\____  \\ \\  __<   \\ \\  __\\   \\ \\ \\/\\ \\ \n///  \\ \\____-  \\ \\_\\ \\_\\  \\ \\_____\\  \\ \\_____\\  \\ \\_\\ \\_\\  \\ \\_____\\  \\ \\____- \n///   \\/____/   \\/_/\\/_/   \\/_____/   \\/_____/   \\/_/ /_/   \\/_____/   \\/____/ \n\npragma solidity ^0.8.0;\n\nimport \"./Soulbound.sol\";\nimport \"./Ownable.sol\";\nimport \"./Allowlist.sol\";\n\n/**\n* @title Soulbound Core Contract.\n* @author Daccred.\n* @dev  Soulbound Core template. This contract aims at a soulbound token with\n*       capped supply, set by the deployer or defaulted to 1000000.\n*       Mints and burns affect the current supply of tokens respectively.\n*/\ncontract SoulboundCore is Ownable, Soulbound, Allowlist {\n    /// @dev Total supply limit set by deployer or defaulted to 1000000.\n    uint256 internal totalSupply;\n    /// @dev    With every issue and revoke, this value\n    ///         increases and reduces.\n    ///         It cannot be GT the TOTAL_SUPPLY.\n    uint256 internal supply;\n\n    /// @dev Emitted when a token is minted from Signature.\n    event IssueWithSignature(address indexed to, uint256 indexed tokenId);\n    /// @dev Emitted when a token is revoked with Signature.\n    event RevokeWithSignature(uint256 indexed tokenId);\n\n    /**\n    * @dev  Security check to require that the address calling a particular\n    *       function is the allowlistOwner.\n    *       \n    * @param _caller Address.\n    */\n    modifier onlyAllowlistOwner(address _caller) {\n        require(_caller == getAllowlistOwner(), \"Not Allowlist Owner!\");\n        _;\n    }\n\n    /// @dev Deploys the 3 contracts inherited by the SoulboundCore.\n    constructor(\n        string memory name, \n        string memory symbol,\n        address _allowlistOwner,\n        uint256 _totalSupply\n    )\n    Soulbound(name, symbol)\n    Allowlist(_allowlistOwner) {\n        if (_totalSupply == 0) {\n            totalSupply = 1e6;\n        } else {\n            totalSupply = _totalSupply;\n        }\n    }\n\n    /**\n    * @dev  Mints a particular quantity of tokens to `to`, \n    *       on the condition that the address has been \n    *       signed by the allowlistOwner off-chain.\n    *       This will emit the {MintSoulboundToken} event\n    *       from the Soulbound.sol.\n    *\n    * @notice Callable by anyone.\n    *\n    * @param addr       Address to mint tokens to.\n    * @param hash       Hashed message by the allowlistOwner.\n    * @param sig        Signature, signed by the allowlistOwner.\n    * @param tokenId    Id of the tokens to mint to the `addr`.\n    * @param tokenURI   URI of the token to be minted.\n    */\n    function issueWithSignature(\n        address addr,\n        bytes32 hash,\n        bytes memory sig,\n        uint256 tokenId,\n        string memory tokenURI\n    ) public\n    {\n        /// @dev Require that the address is not a zero address.\n        require(addr != address(0), \"Mint to zero address.\");\n        /// @dev    Require that the hash is actually 32 [64 characters]\n        ///         in length.\n        require(hash.length == 32, \"Invalid hash.\");\n        /// @dev Require the length of the signature is 65.\n        require(sig.length == 65, \"Invalid signature length\");\n        /// @dev    Verifies that the address was actually signed by the\n        ///         allowlistOwner.\n        require(verifySignature(hash, sig), \"Hash not signed by owner.\");\n        /// @dev    Mint the tokens to address.\n        ///         [Ref Soulbound.sol].\n        issue(addr, tokenId, tokenURI);\n        /// @dev Emit the IssueWithSignature event.\n        emit IssueWithSignature(addr, tokenId);\n    }\n\n    /**\n    * @dev  Revokes the ownership of `tokenId` from the owner.\n    *       The token must exist and the signature must be signed the\n    *       allowlistOwner.\n    *       This emits the {RevokeWithSignature} event.\n    *\n    * @notice Callable by anyone.\n    *\n    * @param hash       Hashed message by the allowlistOwner.\n    * @param sig        Signature, signed by the allowlistOwner.\n    * @param tokenId    Id of the token to revoke.\n    */\n    function revokeWithSignature(\n        bytes32 hash,\n        bytes memory sig,\n        uint256 tokenId\n    ) public\n    {\n        /// @dev Require that the token exists.\n        require(_exists(tokenId), \"Revoke of inexistent token.\");\n        /// @dev    Require that the hash is actually 32 [64 characters]\n        ///         in length.\n        require(hash.length == 32, \"Invalid hash.\");\n        /// @dev Require the length of the signature is 65.\n        require(sig.length == 65, \"Invalid signature length\");\n        /// @dev    Verifies that the address was actually signed by the\n        ///         allowlistOwner.\n        require(verifySignature(hash, sig), \"Hash not signed by owner.\");\n        /// @dev    Mint the tokens to address.\n        ///         [Ref Soulbound.sol].\n        revoke(ownerOf(tokenId), tokenId);\n        /// @dev Emit the RevokeWithSignature event.\n        emit RevokeWithSignature(tokenId);\n    }\n\n    /**\n    * @dev  Allows the `caller` (allowlistOwner) to set the baseURI.\n    *       This is really important when the caller wants to mint\n    *       Multiple tokens with the same base URI.\n    *\n    * @notice   Callable by the deployer of this contract [DaccredDeployer]\n    *           and the allowlistOwner.\n    */\n    function setBaseURI(address caller, string memory _baseURI) \n    public \n    onlyOwner \n    onlyAllowlistOwner(caller)\n    {\n        /// @dev Set baseURI.\n        _setBaseURI(_baseURI);\n    }\n\n    /**\n    * @dev  Using the `tokenId` passed, it generates a `stringified` tokenURI,\n    *       packing the baseURI and the current tokenId.\n    *       Makes use of OpenZeppelin's uint to string function.\n    *\n    * @notice Callable by anyone.\n    *\n    * @param tokenId ID of token whose tokenURI is desired.\n    *\n    * @return _tokenURI TokenURI of the passed tokenId.\n    */\n    function generateTokenURI(uint256 tokenId) \n    public \n    view\n    returns(string memory _tokenURI)\n    {\n        /// @dev Require baseURI length is not currently 0.\n        require(bytes(_getBaseURI()).length != 0, \"Empty baseURI\");\n        /// @dev Return a packed tokenURI string.\n        _tokenURI = string(abi.encodePacked(\n            _getBaseURI(),\n            toString(tokenId)\n        ));\n    }\n\n    /**\n    * @dev Converts a `uint256` to its ASCII `string` decimal representation.\n    *      Copied from OpenZeppelin.\n    */\n    function toString(uint256 value) internal pure returns (string memory) {\n        // Inspired by OraclizeAPI's implementation - MIT licence\n        // https://github.com/oraclize/ethereum-api/blob/b42146b063c7d6ee1358846c198246239e9360e8/oraclizeAPI_0.4.25.sol\n\n        if (value == 0) {\n            return \"0\";\n        }\n        uint256 temp = value;\n        uint256 digits;\n        while (temp != 0) {\n            digits++;\n            temp /= 10;\n        }\n        bytes memory buffer = new bytes(digits);\n        while (value != 0) {\n            digits -= 1;\n            buffer[digits] = bytes1(uint8(48 + uint256(value % 10)));\n            value /= 10;\n        }\n        return string(buffer);\n    }\n\n}\n",
  "sourceMap": "820:6499:7:-:0;;;1806:337;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1988:15;1960:4;1966:6;1429:4:6;1435:6;4256:5:2;4248;:13;;;;;;;;;;;;:::i;:::-;-1:-1:-1;4267:17:2;;;;:7;;:17;;;;;:::i;:::-;;4174:115;;1245:32:5;1264:12;:10;;;:12;;:::i;:::-;1245:18;:32::i;:::-;-1:-1:-1;;1673:14:3;:32;;-1:-1:-1;;;;;;1673:32:3;-1:-1:-1;;;;;1673:32:3;;;;;;;;;;2019:17:7;2015:122:::2;;2066:3;2052:11;:17:::0;2015:122:::2;;;2100:11;:26:::0;;;2015:122:::2;1806:337:::0;;;;820:6499;;2987:87:5;3057:10;;2987:87::o;2757:187::-;2849:6;;;-1:-1:-1;;;;;2865:17:5;;;-1:-1:-1;;;;;;2865:17:5;;;;;;;2897:40;;2849:6;;;2865:17;2849:6;;2897:40;;2830:16;;2897:40;2820:124;2757:187;:::o;820:6499:7:-;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;820:6499:7;;;-1:-1:-1;820:6499:7;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;14:127:10;75:10;70:3;66:20;63:1;56:31;106:4;103:1;96:15;130:4;127:1;120:15;146:885;200:5;253:3;246:4;238:6;234:17;230:27;220:55;;271:1;268;261:12;220:55;294:13;;-1:-1:-1;;;;;356:10:10;;;353:36;;;369:18;;:::i;:::-;444:2;438:9;412:2;498:13;;-1:-1:-1;;494:22:10;;;518:2;490:31;486:40;474:53;;;542:18;;;562:22;;;539:46;536:72;;;588:18;;:::i;:::-;628:10;624:2;617:22;663:2;655:6;648:18;685:4;675:14;;730:3;725:2;720;712:6;708:15;704:24;701:33;698:53;;;747:1;744;737:12;698:53;769:1;760:10;;779:133;793:2;790:1;787:9;779:133;;;881:14;;;877:23;;871:30;850:14;;;846:23;;839:63;804:10;;;;779:133;;;930:2;927:1;924:9;921:80;;;989:1;984:2;979;971:6;967:15;963:24;956:35;921:80;1019:6;146:885;-1:-1:-1;;;;;;146:885:10:o;1036:791::-;1153:6;1161;1169;1177;1230:3;1218:9;1209:7;1205:23;1201:33;1198:53;;;1247:1;1244;1237:12;1198:53;1274:16;;-1:-1:-1;;;;;1339:14:10;;;1336:34;;;1366:1;1363;1356:12;1336:34;1389:61;1442:7;1433:6;1422:9;1418:22;1389:61;:::i;:::-;1379:71;;1496:2;1485:9;1481:18;1475:25;1459:41;;1525:2;1515:8;1512:16;1509:36;;;1541:1;1538;1531:12;1509:36;;1564:63;1619:7;1608:8;1597:9;1593:24;1564:63;:::i;:::-;1670:2;1655:18;;1649:25;1554:73;;-1:-1:-1;1649:25:10;-1:-1:-1;;;;;;1703:31:10;;1693:42;;1683:70;;1749:1;1746;1739:12;1683:70;1817:2;1802:18;;;;1796:25;1036:791;;;;-1:-1:-1;;;1036:791:10:o;1832:380::-;1911:1;1907:12;;;;1954;;;1975:61;;2029:4;2021:6;2017:17;2007:27;;1975:61;2082:2;2074:6;2071:14;2051:18;2048:38;2045:161;;;2128:10;2123:3;2119:20;2116:1;2109:31;2163:4;2160:1;2153:15;2191:4;2188:1;2181:15;2045:161;;1832:380;;;:::o;:::-;820:6499:7;;;;;;",
  "sourcePath": "contracts/extensions/SoulboundCore.sol",
  "type": "contract"
}