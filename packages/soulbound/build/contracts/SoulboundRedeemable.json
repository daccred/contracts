{
  "abi": [
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "name",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "symbol",
          "type": "string"
        },
        {
          "internalType": "address",
          "name": "_allowlistOwner",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_totalSupply",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_priceLimit",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_tokenPrice",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_address",
          "type": "address"
        }
      ],
      "name": "Unsigned",
      "type": "error"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "Attest",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "time",
          "type": "uint256"
        }
      ],
      "name": "Extended",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "IssueWithSignature",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "extension",
          "type": "uint256"
        }
      ],
      "name": "Redeemed",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "Revoke",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "RevokeWithSignature",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "_address",
          "type": "address"
        }
      ],
      "name": "Signed",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "_address",
          "type": "address"
        }
      ],
      "name": "Verified",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "addressHash",
          "type": "bytes32"
        },
        {
          "indexed": true,
          "internalType": "bool",
          "name": "result",
          "type": "bool"
        }
      ],
      "name": "VerifySignature",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "_getBaseURI",
      "outputs": [
        {
          "internalType": "string",
          "name": "_baseURI",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        }
      ],
      "name": "balanceOf",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "burn",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "time",
          "type": "uint256"
        }
      ],
      "name": "extendExpiry",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "generateTokenURI",
      "outputs": [
        {
          "internalType": "string",
          "name": "_tokenURI",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getAllowlistOwner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "getExpiryDate",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getIndividualTokenPrice",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "_tokenPrice",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getPriceLimit",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "_priceLimit",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "getTimeLeft",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_tokenId",
          "type": "uint256"
        }
      ],
      "name": "isMinted",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "isValid",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "addr",
          "type": "address"
        },
        {
          "internalType": "bytes32",
          "name": "hash",
          "type": "bytes32"
        },
        {
          "internalType": "bytes",
          "name": "sig",
          "type": "bytes"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        },
        {
          "internalType": "string",
          "name": "tokenURI",
          "type": "string"
        }
      ],
      "name": "issueWithSignature",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_tokenId",
          "type": "uint256"
        }
      ],
      "name": "issuerOf",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_tokenExpiryDate",
          "type": "uint256"
        }
      ],
      "name": "mintPendingRedeemableToken",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "name",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "addr",
          "type": "address"
        },
        {
          "internalType": "bytes32",
          "name": "hash",
          "type": "bytes32"
        },
        {
          "internalType": "bytes",
          "name": "sig",
          "type": "bytes"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        },
        {
          "internalType": "string",
          "name": "tokenURI",
          "type": "string"
        }
      ],
      "name": "ownerIssueWithSignature",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "ownerOf",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "hash",
          "type": "bytes32"
        },
        {
          "internalType": "bytes",
          "name": "sig",
          "type": "bytes"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "ownerRevokeWithSignature",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_receiver",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "payToReceiveToken",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_receiver",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_tokenExpiryDate",
          "type": "uint256"
        }
      ],
      "name": "redeemMintedToken",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_caller",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_receiver",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_tokenExpiryDate",
          "type": "uint256"
        },
        {
          "internalType": "bytes32",
          "name": "hash",
          "type": "bytes32"
        },
        {
          "internalType": "bytes",
          "name": "sig",
          "type": "bytes"
        }
      ],
      "name": "redeemMintedTokenWithSignature",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_receiver",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_tokenExpiryDate",
          "type": "uint256"
        }
      ],
      "name": "redeemPendingToken",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_caller",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_receiver",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_tokenExpiryDate",
          "type": "uint256"
        },
        {
          "internalType": "bytes32",
          "name": "hash",
          "type": "bytes32"
        },
        {
          "internalType": "bytes",
          "name": "sig",
          "type": "bytes"
        }
      ],
      "name": "redeemPendingTokenWithSignature",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "hash",
          "type": "bytes32"
        },
        {
          "internalType": "bytes",
          "name": "sig",
          "type": "bytes"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "revokeWithSignature",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "caller",
          "type": "address"
        },
        {
          "internalType": "string",
          "name": "_baseURI",
          "type": "string"
        }
      ],
      "name": "setBaseURI",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "caller",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_price",
          "type": "uint256"
        }
      ],
      "name": "setPrice",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes4",
          "name": "interfaceId",
          "type": "bytes4"
        }
      ],
      "name": "supportsInterface",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "symbol",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "tokenURI",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "hash",
          "type": "bytes32"
        },
        {
          "internalType": "bytes",
          "name": "sig",
          "type": "bytes"
        }
      ],
      "name": "verifySignature",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_signer",
          "type": "address"
        },
        {
          "internalType": "bytes32",
          "name": "_hash",
          "type": "bytes32"
        },
        {
          "internalType": "bytes",
          "name": "_signature",
          "type": "bytes"
        }
      ],
      "name": "verifySigner",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_caller",
          "type": "address"
        }
      ],
      "name": "withdraw",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "allSourcePaths": {
    "0": "contracts/Allowlist.sol",
    "1": "contracts/IsValidWithDate.sol",
    "2": "contracts/Ownable.sol",
    "3": "contracts/Soulbound.sol",
    "4": "contracts/SoulboundCore.sol",
    "5": "contracts/SoulboundRedeemable.sol",
    "6": "contracts/SoulboundWithSignature.sol",
    "7": "contracts/eips/ERC-4973.sol",
    "8": "interfaces/IAllowlist.sol"
  },
  "ast": {
    "absolutePath": "contracts/SoulboundRedeemable.sol",
    "exportedSymbols": {
      "Allowlist": [
        167
      ],
      "ERC165": [
        1805
      ],
      "ERC4973": [
        2132
      ],
      "IAllowlist": [
        2173
      ],
      "IERC165": [
        1784
      ],
      "IERC4973": [
        1861
      ],
      "IERC721Metadata": [
        1823
      ],
      "ISoulbond": [
        2267
      ],
      "IsValidWithDate": [
        262
      ],
      "Ownable": [
        382
      ],
      "Soulbound": [
        649
      ],
      "SoulboundCore": [
        974
      ],
      "SoulboundRedeemable": [
        1679
      ],
      "SoulboundWithSignature": [
        1772
      ]
    },
    "id": 1680,
    "license": "GPL-3.0",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 976,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "36:23:5"
      },
      {
        "absolutePath": "contracts/SoulboundWithSignature.sol",
        "file": "./SoulboundWithSignature.sol",
        "id": 977,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 1680,
        "sourceUnit": 1773,
        "src": "61:38:5",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "contracts/IsValidWithDate.sol",
        "file": "./IsValidWithDate.sol",
        "id": 978,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 1680,
        "sourceUnit": 263,
        "src": "100:31:5",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 980,
              "name": "IsValidWithDate",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 262,
              "src": "449:15:5"
            },
            "id": 981,
            "nodeType": "InheritanceSpecifier",
            "src": "449:15:5"
          },
          {
            "baseName": {
              "id": 982,
              "name": "SoulboundWithSignature",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 1772,
              "src": "466:22:5"
            },
            "id": 983,
            "nodeType": "InheritanceSpecifier",
            "src": "466:22:5"
          }
        ],
        "canonicalName": "SoulboundRedeemable",
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": {
          "id": 979,
          "nodeType": "StructuredDocumentation",
          "src": "133:283:5",
          "text": " @title Soulbound Redeemable.\n @author Daccred.\n @dev  An instance of the Soulbound token with capped supply\n       and tokens having their own individual expiry date.\n       Tokens are minted to and are pendng until receivers\n       pay to receive their complete token."
        },
        "fullyImplemented": true,
        "id": 1679,
        "linearizedBaseContracts": [
          1679,
          1772,
          974,
          167,
          649,
          382,
          2173,
          2132,
          1861,
          1823,
          1805,
          1784,
          262
        ],
        "name": "SoulboundRedeemable",
        "nameLocation": "426:19:5",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "documentation": {
              "id": 984,
              "nodeType": "StructuredDocumentation",
              "src": "495:55:5",
              "text": "@dev Total sales of tokens [Total tokens paid for]."
            },
            "id": 986,
            "mutability": "mutable",
            "name": "totalSales",
            "nameLocation": "571:10:5",
            "nodeType": "VariableDeclaration",
            "scope": 1679,
            "src": "555:26:5",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 985,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "555:7:5",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "private"
          },
          {
            "constant": false,
            "documentation": {
              "id": 987,
              "nodeType": "StructuredDocumentation",
              "src": "587:34:5",
              "text": "@dev Total revenue from sales."
            },
            "id": 989,
            "mutability": "mutable",
            "name": "totalRevenue",
            "nameLocation": "642:12:5",
            "nodeType": "VariableDeclaration",
            "scope": 1679,
            "src": "626:28:5",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 988,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "626:7:5",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "private"
          },
          {
            "constant": false,
            "documentation": {
              "id": 990,
              "nodeType": "StructuredDocumentation",
              "src": "660:56:5",
              "text": "@dev Price Limit [in eth] set by deploying contract."
            },
            "id": 992,
            "mutability": "mutable",
            "name": "priceLimit",
            "nameLocation": "737:10:5",
            "nodeType": "VariableDeclaration",
            "scope": 1679,
            "src": "721:26:5",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 991,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "721:7:5",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "private"
          },
          {
            "constant": false,
            "documentation": {
              "id": 993,
              "nodeType": "StructuredDocumentation",
              "src": "753:53:5",
              "text": "@dev Price of individual tokens, set by deployer."
            },
            "id": 995,
            "mutability": "mutable",
            "name": "tokenPrice",
            "nameLocation": "827:10:5",
            "nodeType": "VariableDeclaration",
            "scope": 1679,
            "src": "811:26:5",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 994,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "811:7:5",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "private"
          },
          {
            "constant": false,
            "documentation": {
              "id": 996,
              "nodeType": "StructuredDocumentation",
              "src": "843:33:5",
              "text": "@dev Pending token receivals."
            },
            "id": 1000,
            "mutability": "mutable",
            "name": "pending",
            "nameLocation": "914:7:5",
            "nodeType": "VariableDeclaration",
            "scope": 1679,
            "src": "881:40:5",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_uint256_$_t_bool_$",
              "typeString": "mapping(uint256 => bool)"
            },
            "typeName": {
              "id": 999,
              "keyType": {
                "id": 997,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "889:7:5",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "nodeType": "Mapping",
              "src": "881:24:5",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_uint256_$_t_bool_$",
                "typeString": "mapping(uint256 => bool)"
              },
              "valueType": {
                "id": 998,
                "name": "bool",
                "nodeType": "ElementaryTypeName",
                "src": "900:4:5",
                "typeDescriptions": {
                  "typeIdentifier": "t_bool",
                  "typeString": "bool"
                }
              }
            },
            "visibility": "private"
          },
          {
            "constant": false,
            "documentation": {
              "id": 1001,
              "nodeType": "StructuredDocumentation",
              "src": "927:43:5",
              "text": "@dev Pending address to receive tokens."
            },
            "id": 1005,
            "mutability": "mutable",
            "name": "pendingReceivers",
            "nameLocation": "1011:16:5",
            "nodeType": "VariableDeclaration",
            "scope": 1679,
            "src": "975:52:5",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
              "typeString": "mapping(uint256 => address)"
            },
            "typeName": {
              "id": 1004,
              "keyType": {
                "id": 1002,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "983:7:5",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "nodeType": "Mapping",
              "src": "975:27:5",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
                "typeString": "mapping(uint256 => address)"
              },
              "valueType": {
                "id": 1003,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "994:7:5",
                "stateMutability": "nonpayable",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              }
            },
            "visibility": "private"
          },
          {
            "constant": false,
            "documentation": {
              "id": 1006,
              "nodeType": "StructuredDocumentation",
              "src": "1033:89:5",
              "text": "@dev    Tax for token redemptions.\n         15 represents 1.5% of total sales."
            },
            "id": 1009,
            "mutability": "mutable",
            "name": "tax",
            "nameLocation": "1143:3:5",
            "nodeType": "VariableDeclaration",
            "scope": 1679,
            "src": "1127:24:5",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 1007,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "1127:7:5",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "hexValue": "3135",
              "id": 1008,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "1149:2:5",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_15_by_1",
                "typeString": "int_const 15"
              },
              "value": "15"
            },
            "visibility": "private"
          },
          {
            "constant": false,
            "documentation": {
              "id": 1010,
              "nodeType": "StructuredDocumentation",
              "src": "1157:25:5",
              "text": "@dev ReEntrancy Lock."
            },
            "id": 1012,
            "mutability": "mutable",
            "name": "locked",
            "nameLocation": "1200:6:5",
            "nodeType": "VariableDeclaration",
            "scope": 1679,
            "src": "1187:19:5",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_bool",
              "typeString": "bool"
            },
            "typeName": {
              "id": 1011,
              "name": "bool",
              "nodeType": "ElementaryTypeName",
              "src": "1187:4:5",
              "typeDescriptions": {
                "typeIdentifier": "t_bool",
                "typeString": "bool"
              }
            },
            "visibility": "private"
          },
          {
            "anonymous": false,
            "documentation": {
              "id": 1013,
              "nodeType": "StructuredDocumentation",
              "src": "1214:42:5",
              "text": "@dev Emitted when a token is redeemed."
            },
            "eventSelector": "6f73b7b8d37df32ea60a45eadc8fc3d2d716d705ee099bd506817482ce847316",
            "id": 1019,
            "name": "Redeemed",
            "nameLocation": "1267:8:5",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 1018,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1015,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nameLocation": "1292:7:5",
                  "nodeType": "VariableDeclaration",
                  "scope": 1019,
                  "src": "1276:23:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1014,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1276:7:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1017,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "extension",
                  "nameLocation": "1317:9:5",
                  "nodeType": "VariableDeclaration",
                  "scope": 1019,
                  "src": "1301:25:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1016,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1301:7:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1275:52:5"
            },
            "src": "1261:67:5"
          },
          {
            "body": {
              "id": 1056,
              "nodeType": "Block",
              "src": "1783:307:5",
              "statements": [
                {
                  "documentation": "@dev Ensure that limit is higher or equal to individual token price.",
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 1044,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 1042,
                          "name": "_tokenPrice",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1032,
                          "src": "1882:11:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<=",
                        "rightExpression": {
                          "id": 1043,
                          "name": "_priceLimit",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1030,
                          "src": "1897:11:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "1882:26:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "507269636520686967686572207468616e206c696d69742e",
                        "id": 1045,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1910:26:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_7b146f5a9a7ca2f626343d6bffe001d397c63c34b0f5f9411b5d9ebfbed8c9de",
                          "typeString": "literal_string \"Price higher than limit.\""
                        },
                        "value": "Price higher than limit."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_7b146f5a9a7ca2f626343d6bffe001d397c63c34b0f5f9411b5d9ebfbed8c9de",
                          "typeString": "literal_string \"Price higher than limit.\""
                        }
                      ],
                      "id": 1041,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "1874:7:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1046,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1874:63:5",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1047,
                  "nodeType": "ExpressionStatement",
                  "src": "1874:63:5"
                },
                {
                  "documentation": "@dev Set priceLimit.",
                  "expression": {
                    "id": 1050,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 1048,
                      "name": "priceLimit",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 992,
                      "src": "1980:10:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 1049,
                      "name": "_priceLimit",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1030,
                      "src": "1993:11:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "1980:24:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 1051,
                  "nodeType": "ExpressionStatement",
                  "src": "1980:24:5"
                },
                {
                  "documentation": "@dev Set individual token price.",
                  "expression": {
                    "id": 1054,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 1052,
                      "name": "tokenPrice",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 995,
                      "src": "2059:10:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 1053,
                      "name": "_tokenPrice",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1032,
                      "src": "2072:11:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "2059:24:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 1055,
                  "nodeType": "ExpressionStatement",
                  "src": "2059:24:5"
                }
              ]
            },
            "documentation": {
              "id": 1020,
              "nodeType": "StructuredDocumentation",
              "src": "1334:129:5",
              "text": "@dev    Deploy the SoulboundWithSignature with set\n         total supply, priceLimit and price of an individual token."
            },
            "id": 1057,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [
              {
                "arguments": [
                  {
                    "id": 1035,
                    "name": "name",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 1022,
                    "src": "1702:4:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory_ptr",
                      "typeString": "string memory"
                    }
                  },
                  {
                    "id": 1036,
                    "name": "symbol",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 1024,
                    "src": "1717:6:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory_ptr",
                      "typeString": "string memory"
                    }
                  },
                  {
                    "id": 1037,
                    "name": "_allowlistOwner",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 1026,
                    "src": "1734:15:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  {
                    "id": 1038,
                    "name": "_totalSupply",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 1028,
                    "src": "1760:12:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  }
                ],
                "id": 1039,
                "kind": "baseConstructorSpecifier",
                "modifierName": {
                  "id": 1034,
                  "name": "SoulboundWithSignature",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 1772,
                  "src": "1670:22:5"
                },
                "nodeType": "ModifierInvocation",
                "src": "1670:108:5"
              }
            ],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1033,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1022,
                  "mutability": "mutable",
                  "name": "name",
                  "nameLocation": "1503:4:5",
                  "nodeType": "VariableDeclaration",
                  "scope": 1057,
                  "src": "1489:18:5",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 1021,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1489:6:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1024,
                  "mutability": "mutable",
                  "name": "symbol",
                  "nameLocation": "1532:6:5",
                  "nodeType": "VariableDeclaration",
                  "scope": 1057,
                  "src": "1518:20:5",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 1023,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1518:6:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1026,
                  "mutability": "mutable",
                  "name": "_allowlistOwner",
                  "nameLocation": "1556:15:5",
                  "nodeType": "VariableDeclaration",
                  "scope": 1057,
                  "src": "1548:23:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1025,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1548:7:5",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1028,
                  "mutability": "mutable",
                  "name": "_totalSupply",
                  "nameLocation": "1589:12:5",
                  "nodeType": "VariableDeclaration",
                  "scope": 1057,
                  "src": "1581:20:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1027,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1581:7:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1030,
                  "mutability": "mutable",
                  "name": "_priceLimit",
                  "nameLocation": "1619:11:5",
                  "nodeType": "VariableDeclaration",
                  "scope": 1057,
                  "src": "1611:19:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1029,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1611:7:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1032,
                  "mutability": "mutable",
                  "name": "_tokenPrice",
                  "nameLocation": "1648:11:5",
                  "nodeType": "VariableDeclaration",
                  "scope": 1057,
                  "src": "1640:19:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1031,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1640:7:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1479:186:5"
            },
            "returnParameters": {
              "id": 1040,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1783:0:5"
            },
            "scope": 1679,
            "src": "1468:622:5",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1074,
              "nodeType": "Block",
              "src": "2175:91:5",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 1062,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "UnaryOperation",
                        "operator": "!",
                        "prefix": true,
                        "src": "2193:7:5",
                        "subExpression": {
                          "id": 1061,
                          "name": "locked",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1012,
                          "src": "2194:6:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 1060,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "2185:7:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 1063,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2185:16:5",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1064,
                  "nodeType": "ExpressionStatement",
                  "src": "2185:16:5"
                },
                {
                  "expression": {
                    "id": 1067,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 1065,
                      "name": "locked",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1012,
                      "src": "2211:6:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "74727565",
                      "id": 1066,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "2220:4:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "src": "2211:13:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 1068,
                  "nodeType": "ExpressionStatement",
                  "src": "2211:13:5"
                },
                {
                  "id": 1069,
                  "nodeType": "PlaceholderStatement",
                  "src": "2234:1:5"
                },
                {
                  "expression": {
                    "id": 1072,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 1070,
                      "name": "locked",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1012,
                      "src": "2245:6:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "66616c7365",
                      "id": 1071,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "2254:5:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "false"
                    },
                    "src": "2245:14:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 1073,
                  "nodeType": "ExpressionStatement",
                  "src": "2245:14:5"
                }
              ]
            },
            "documentation": {
              "id": 1058,
              "nodeType": "StructuredDocumentation",
              "src": "2096:50:5",
              "text": " @dev Protect against Re-Entrancy."
            },
            "id": 1075,
            "name": "nonReentrant",
            "nameLocation": "2160:12:5",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 1059,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2172:2:5"
            },
            "src": "2151:115:5",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 1085,
              "nodeType": "Block",
              "src": "2523:41:5",
              "statements": [
                {
                  "expression": {
                    "id": 1083,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 1081,
                      "name": "_tokenPrice",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1079,
                      "src": "2533:11:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 1082,
                      "name": "tokenPrice",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 995,
                      "src": "2547:10:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "2533:24:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 1084,
                  "nodeType": "ExpressionStatement",
                  "src": "2533:24:5"
                }
              ]
            },
            "documentation": {
              "id": 1076,
              "nodeType": "StructuredDocumentation",
              "src": "2272:170:5",
              "text": " @dev Return the price of one token, set by the deployer.\n @notice Callable by anyone.\n @return _tokenPrice Price of a single token."
            },
            "functionSelector": "fad54de7",
            "id": 1086,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getIndividualTokenPrice",
            "nameLocation": "2456:23:5",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1077,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2479:2:5"
            },
            "returnParameters": {
              "id": 1080,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1079,
                  "mutability": "mutable",
                  "name": "_tokenPrice",
                  "nameLocation": "2510:11:5",
                  "nodeType": "VariableDeclaration",
                  "scope": 1086,
                  "src": "2502:19:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1078,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2502:7:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2501:21:5"
            },
            "scope": 1679,
            "src": "2447:117:5",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1096,
              "nodeType": "Block",
              "src": "2805:41:5",
              "statements": [
                {
                  "expression": {
                    "id": 1094,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 1092,
                      "name": "_priceLimit",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1090,
                      "src": "2815:11:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 1093,
                      "name": "priceLimit",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 992,
                      "src": "2829:10:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "2815:24:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 1095,
                  "nodeType": "ExpressionStatement",
                  "src": "2815:24:5"
                }
              ]
            },
            "documentation": {
              "id": 1087,
              "nodeType": "StructuredDocumentation",
              "src": "2570:164:5",
              "text": " @dev Return the highest possible price for a token.\n @notice Callable by anyone.\n @return _priceLimit Highest possible price."
            },
            "functionSelector": "a0b97daa",
            "id": 1097,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getPriceLimit",
            "nameLocation": "2748:13:5",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1088,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2761:2:5"
            },
            "returnParameters": {
              "id": 1091,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1090,
                  "mutability": "mutable",
                  "name": "_priceLimit",
                  "nameLocation": "2792:11:5",
                  "nodeType": "VariableDeclaration",
                  "scope": 1097,
                  "src": "2784:19:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1089,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2784:7:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2783:21:5"
            },
            "scope": 1679,
            "src": "2739:107:5",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1122,
              "nodeType": "Block",
              "src": "3240:215:5",
              "statements": [
                {
                  "documentation": "@dev Ensure that the price passed isn't more than the price limit.",
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 1114,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 1111,
                          "name": "_price",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1102,
                          "src": "3337:6:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<=",
                        "rightExpression": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 1112,
                            "name": "getPriceLimit",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1097,
                            "src": "3347:13:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
                              "typeString": "function () view returns (uint256)"
                            }
                          },
                          "id": 1113,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3347:15:5",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "3337:25:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "507269636520686967686572207468616e206c696d69742e",
                        "id": 1115,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3364:26:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_7b146f5a9a7ca2f626343d6bffe001d397c63c34b0f5f9411b5d9ebfbed8c9de",
                          "typeString": "literal_string \"Price higher than limit.\""
                        },
                        "value": "Price higher than limit."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_7b146f5a9a7ca2f626343d6bffe001d397c63c34b0f5f9411b5d9ebfbed8c9de",
                          "typeString": "literal_string \"Price higher than limit.\""
                        }
                      ],
                      "id": 1110,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "3329:7:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1116,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3329:62:5",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1117,
                  "nodeType": "ExpressionStatement",
                  "src": "3329:62:5"
                },
                {
                  "documentation": "@dev Set price.",
                  "expression": {
                    "id": 1120,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 1118,
                      "name": "tokenPrice",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 995,
                      "src": "3429:10:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 1119,
                      "name": "_price",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1102,
                      "src": "3442:6:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "3429:19:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 1121,
                  "nodeType": "ExpressionStatement",
                  "src": "3429:19:5"
                }
              ]
            },
            "documentation": {
              "id": 1098,
              "nodeType": "StructuredDocumentation",
              "src": "2852:271:5",
              "text": " @dev Allows `caller` to set `_price` as price of one token.\n @notice   Callable by the deployer of this contract [DaccredDeployer]\n           and the allowlistOwner.\n @param caller AllowlistOwner.\n @param _price New price."
            },
            "functionSelector": "00e4768b",
            "id": 1123,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 1105,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 1104,
                  "name": "onlyOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 291,
                  "src": "3195:9:5"
                },
                "nodeType": "ModifierInvocation",
                "src": "3195:9:5"
              },
              {
                "arguments": [
                  {
                    "id": 1107,
                    "name": "caller",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 1100,
                    "src": "3228:6:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  }
                ],
                "id": 1108,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 1106,
                  "name": "onlyAllowlistOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 694,
                  "src": "3209:18:5"
                },
                "nodeType": "ModifierInvocation",
                "src": "3209:26:5"
              }
            ],
            "name": "setPrice",
            "nameLocation": "3137:8:5",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1103,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1100,
                  "mutability": "mutable",
                  "name": "caller",
                  "nameLocation": "3154:6:5",
                  "nodeType": "VariableDeclaration",
                  "scope": 1123,
                  "src": "3146:14:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1099,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3146:7:5",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1102,
                  "mutability": "mutable",
                  "name": "_price",
                  "nameLocation": "3170:6:5",
                  "nodeType": "VariableDeclaration",
                  "scope": 1123,
                  "src": "3162:14:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1101,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3162:7:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3145:32:5"
            },
            "returnParameters": {
              "id": 1109,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3240:0:5"
            },
            "scope": 1679,
            "src": "3128:327:5",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1193,
              "nodeType": "Block",
              "src": "4171:1037:5",
              "statements": [
                {
                  "documentation": "@dev Ensure that the supply is not crossed.\n @dev    Should all soulbound tokens need to be limited,\n         copy this code and paste in Soulboundcore.sol\n         issueWithSignature function.",
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 1143,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 1141,
                          "name": "supply",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 667,
                          "src": "4428:6:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<",
                        "rightExpression": {
                          "id": 1142,
                          "name": "totalSupply",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 664,
                          "src": "4437:11:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "4428:20:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "49737375652043617020526561636865642e",
                        "id": 1144,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4450:20:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_c12f09333ab4a78ede2485ac6001e2180fc9f9af3ed199b4e198f266f939e331",
                          "typeString": "literal_string \"Issue Cap Reached.\""
                        },
                        "value": "Issue Cap Reached."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_c12f09333ab4a78ede2485ac6001e2180fc9f9af3ed199b4e198f266f939e331",
                          "typeString": "literal_string \"Issue Cap Reached.\""
                        }
                      ],
                      "id": 1140,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "4420:7:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1145,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4420:51:5",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1146,
                  "nodeType": "ExpressionStatement",
                  "src": "4420:51:5"
                },
                {
                  "documentation": "@dev Require `to` is not a zero address.",
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 1153,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 1148,
                          "name": "to",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1128,
                          "src": "4542:2:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 1151,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "4556:1:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 1150,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "4548:7:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 1149,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "4548:7:5",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 1152,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4548:10:5",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "4542:16:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4d696e7420746f207a65726f20616464726573732e",
                        "id": 1154,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4560:23:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_b3cd0cc0adee66fdd10c0f21fe5cb0de39672daa3845cfc9b86f6248c4187fe0",
                          "typeString": "literal_string \"Mint to zero address.\""
                        },
                        "value": "Mint to zero address."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_b3cd0cc0adee66fdd10c0f21fe5cb0de39672daa3845cfc9b86f6248c4187fe0",
                          "typeString": "literal_string \"Mint to zero address.\""
                        }
                      ],
                      "id": 1147,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "4534:7:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1155,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4534:50:5",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1156,
                  "nodeType": "ExpressionStatement",
                  "src": "4534:50:5"
                },
                {
                  "documentation": "@dev Require the token does not exist already.",
                  "expression": {
                    "arguments": [
                      {
                        "id": 1161,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "UnaryOperation",
                        "operator": "!",
                        "prefix": true,
                        "src": "4661:17:5",
                        "subExpression": {
                          "arguments": [
                            {
                              "id": 1159,
                              "name": "tokenId",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1130,
                              "src": "4670:7:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 1158,
                            "name": "_exists",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2053,
                            "src": "4662:7:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_bool_$",
                              "typeString": "function (uint256) view returns (bool)"
                            }
                          },
                          "id": 1160,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4662:16:5",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4d696e74206f6620616c7265616479206578697374696e6720746f6b656e2e",
                        "id": 1162,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4680:33:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_27ad91d600ded7340a92af1e8e323e341145b457e0043d73b881842f9f40f1c5",
                          "typeString": "literal_string \"Mint of already existing token.\""
                        },
                        "value": "Mint of already existing token."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_27ad91d600ded7340a92af1e8e323e341145b457e0043d73b881842f9f40f1c5",
                          "typeString": "literal_string \"Mint of already existing token.\""
                        }
                      ],
                      "id": 1157,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "4653:7:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1163,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4653:61:5",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1164,
                  "nodeType": "ExpressionStatement",
                  "src": "4653:61:5"
                },
                {
                  "documentation": "@dev Require that the token is not on the pending list.",
                  "expression": {
                    "arguments": [
                      {
                        "id": 1169,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "UnaryOperation",
                        "operator": "!",
                        "prefix": true,
                        "src": "4800:17:5",
                        "subExpression": {
                          "baseExpression": {
                            "id": 1166,
                            "name": "pending",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1000,
                            "src": "4801:7:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_uint256_$_t_bool_$",
                              "typeString": "mapping(uint256 => bool)"
                            }
                          },
                          "id": 1168,
                          "indexExpression": {
                            "id": 1167,
                            "name": "tokenId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1130,
                            "src": "4809:7:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "4801:16:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4d696e74206f6620616c72656164792070656e64696e6720746f6b656e2e",
                        "id": 1170,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4819:32:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_f293e6d359cb146b4c3b38b2a261884788ebaefb2f9c4e33004c4a815c1569e3",
                          "typeString": "literal_string \"Mint of already pending token.\""
                        },
                        "value": "Mint of already pending token."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_f293e6d359cb146b4c3b38b2a261884788ebaefb2f9c4e33004c4a815c1569e3",
                          "typeString": "literal_string \"Mint of already pending token.\""
                        }
                      ],
                      "id": 1165,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "4792:7:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1171,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4792:60:5",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1172,
                  "nodeType": "ExpressionStatement",
                  "src": "4792:60:5"
                },
                {
                  "documentation": "@dev Set the token's pending state to true.",
                  "expression": {
                    "id": 1177,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 1173,
                        "name": "pending",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1000,
                        "src": "4918:7:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint256_$_t_bool_$",
                          "typeString": "mapping(uint256 => bool)"
                        }
                      },
                      "id": 1175,
                      "indexExpression": {
                        "id": 1174,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1130,
                        "src": "4926:7:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "4918:16:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "74727565",
                      "id": 1176,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "4937:4:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "src": "4918:23:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 1178,
                  "nodeType": "ExpressionStatement",
                  "src": "4918:23:5"
                },
                {
                  "documentation": "@dev Set the pending receiver of the token to `to`.",
                  "expression": {
                    "id": 1183,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 1179,
                        "name": "pendingReceivers",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1005,
                        "src": "5015:16:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
                          "typeString": "mapping(uint256 => address)"
                        }
                      },
                      "id": 1181,
                      "indexExpression": {
                        "id": 1180,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1130,
                        "src": "5032:7:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "5015:25:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 1182,
                      "name": "to",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1128,
                      "src": "5043:2:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "5015:30:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 1184,
                  "nodeType": "ExpressionStatement",
                  "src": "5015:30:5"
                },
                {
                  "documentation": "@dev Set a new expiry date for the token.",
                  "expression": {
                    "arguments": [
                      {
                        "id": 1186,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1130,
                        "src": "5122:7:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 1187,
                        "name": "_tokenExpiryDate",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1132,
                        "src": "5131:16:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 1185,
                      "name": "extendExpiry",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 205,
                      "src": "5109:12:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,uint256)"
                      }
                    },
                    "id": 1188,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5109:39:5",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1189,
                  "nodeType": "ExpressionStatement",
                  "src": "5109:39:5"
                },
                {
                  "documentation": "@dev Increment supply.",
                  "expression": {
                    "id": 1191,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "UnaryOperation",
                    "operator": "++",
                    "prefix": false,
                    "src": "5193:8:5",
                    "subExpression": {
                      "id": 1190,
                      "name": "supply",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 667,
                      "src": "5193:6:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 1192,
                  "nodeType": "ExpressionStatement",
                  "src": "5193:8:5"
                }
              ]
            },
            "documentation": {
              "id": 1124,
              "nodeType": "StructuredDocumentation",
              "src": "3461:516:5",
              "text": " @dev  Mints a pending soulbound token to `to`.\n       Pending tokens are minted and the receiver pays\n       to receive and completely mint them.\n @notice   Callable by the deployer of this contract [DaccredDeployer]\n           and the allowlistOwner.\n @param from               Allowlist owner.\n @param to                 Receiver.\n @param tokenId            Id of token to be minted.\n @param _tokenExpiryDate   Set expiry date from the deployer."
            },
            "functionSelector": "bd97a6ad",
            "id": 1194,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 1135,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 1134,
                  "name": "onlyOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 291,
                  "src": "4132:9:5"
                },
                "nodeType": "ModifierInvocation",
                "src": "4132:9:5"
              },
              {
                "arguments": [
                  {
                    "id": 1137,
                    "name": "from",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 1126,
                    "src": "4161:4:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  }
                ],
                "id": 1138,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 1136,
                  "name": "onlyAllowlistOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 694,
                  "src": "4142:18:5"
                },
                "nodeType": "ModifierInvocation",
                "src": "4142:24:5"
              }
            ],
            "name": "mintPendingRedeemableToken",
            "nameLocation": "3991:26:5",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1133,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1126,
                  "mutability": "mutable",
                  "name": "from",
                  "nameLocation": "4035:4:5",
                  "nodeType": "VariableDeclaration",
                  "scope": 1194,
                  "src": "4027:12:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1125,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4027:7:5",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1128,
                  "mutability": "mutable",
                  "name": "to",
                  "nameLocation": "4057:2:5",
                  "nodeType": "VariableDeclaration",
                  "scope": 1194,
                  "src": "4049:10:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1127,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4049:7:5",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1130,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nameLocation": "4077:7:5",
                  "nodeType": "VariableDeclaration",
                  "scope": 1194,
                  "src": "4069:15:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1129,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4069:7:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1132,
                  "mutability": "mutable",
                  "name": "_tokenExpiryDate",
                  "nameLocation": "4102:16:5",
                  "nodeType": "VariableDeclaration",
                  "scope": 1194,
                  "src": "4094:24:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1131,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4094:7:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4017:107:5"
            },
            "returnParameters": {
              "id": 1139,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4171:0:5"
            },
            "scope": 1679,
            "src": "3982:1226:5",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1311,
              "nodeType": "Block",
              "src": "5655:1851:5",
              "statements": [
                {
                  "documentation": "@dev Require that the receiver is not a zero address.",
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 1212,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 1207,
                          "name": "_receiver",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1197,
                          "src": "5739:9:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 1210,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "5760:1:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 1209,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "5752:7:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 1208,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "5752:7:5",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 1211,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "5752:10:5",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "5739:23:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4d696e7420746f207a65726f20616464726573732e",
                        "id": 1213,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5764:23:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_b3cd0cc0adee66fdd10c0f21fe5cb0de39672daa3845cfc9b86f6248c4187fe0",
                          "typeString": "literal_string \"Mint to zero address.\""
                        },
                        "value": "Mint to zero address."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_b3cd0cc0adee66fdd10c0f21fe5cb0de39672daa3845cfc9b86f6248c4187fe0",
                          "typeString": "literal_string \"Mint to zero address.\""
                        }
                      ],
                      "id": 1206,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "5731:7:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1214,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5731:57:5",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1215,
                  "nodeType": "ExpressionStatement",
                  "src": "5731:57:5"
                },
                {
                  "documentation": "@dev Require that the token does not exist yet.",
                  "expression": {
                    "arguments": [
                      {
                        "id": 1220,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "UnaryOperation",
                        "operator": "!",
                        "prefix": true,
                        "src": "5866:17:5",
                        "subExpression": {
                          "arguments": [
                            {
                              "id": 1218,
                              "name": "tokenId",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1199,
                              "src": "5875:7:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 1217,
                            "name": "_exists",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2053,
                            "src": "5867:7:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_bool_$",
                              "typeString": "function (uint256) view returns (bool)"
                            }
                          },
                          "id": 1219,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "5867:16:5",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4d696e74206f6620616c7265616479206578697374696e6720746f6b656e2e",
                        "id": 1221,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5885:33:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_27ad91d600ded7340a92af1e8e323e341145b457e0043d73b881842f9f40f1c5",
                          "typeString": "literal_string \"Mint of already existing token.\""
                        },
                        "value": "Mint of already existing token."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_27ad91d600ded7340a92af1e8e323e341145b457e0043d73b881842f9f40f1c5",
                          "typeString": "literal_string \"Mint of already existing token.\""
                        }
                      ],
                      "id": 1216,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "5858:7:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1222,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5858:61:5",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1223,
                  "nodeType": "ExpressionStatement",
                  "src": "5858:61:5"
                },
                {
                  "documentation": "@dev Require that the token is indeed pending.",
                  "expression": {
                    "arguments": [
                      {
                        "baseExpression": {
                          "id": 1225,
                          "name": "pending",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1000,
                          "src": "5996:7:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_uint256_$_t_bool_$",
                            "typeString": "mapping(uint256 => bool)"
                          }
                        },
                        "id": 1227,
                        "indexExpression": {
                          "id": 1226,
                          "name": "tokenId",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1199,
                          "src": "6004:7:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "5996:16:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "416c726561647920726563656976656420746f6b656e2e",
                        "id": 1228,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "6014:25:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_12cc045ad24f383fd375b78e3f9b44570c2ab7e10a54320acd82e5dd71df5f27",
                          "typeString": "literal_string \"Already received token.\""
                        },
                        "value": "Already received token."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_12cc045ad24f383fd375b78e3f9b44570c2ab7e10a54320acd82e5dd71df5f27",
                          "typeString": "literal_string \"Already received token.\""
                        }
                      ],
                      "id": 1224,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "5988:7:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1229,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5988:52:5",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1230,
                  "nodeType": "ExpressionStatement",
                  "src": "5988:52:5"
                },
                {
                  "documentation": "@dev    Require that the expected receiver of pending \n         token is the `_receiver`.",
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 1236,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "baseExpression": {
                            "id": 1232,
                            "name": "pendingReceivers",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1005,
                            "src": "6171:16:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
                              "typeString": "mapping(uint256 => address)"
                            }
                          },
                          "id": 1234,
                          "indexExpression": {
                            "id": 1233,
                            "name": "tokenId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1199,
                            "src": "6188:7:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "6171:25:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "id": 1235,
                          "name": "_receiver",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1197,
                          "src": "6200:9:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "6171:38:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4e6f742070656e64696e672072656365697665722e",
                        "id": 1237,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "6211:23:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_a16ec8e5ff180a35a460e12ce81cf7b6dfd3872605270f5cfeb853c3e10fc874",
                          "typeString": "literal_string \"Not pending receiver.\""
                        },
                        "value": "Not pending receiver."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_a16ec8e5ff180a35a460e12ce81cf7b6dfd3872605270f5cfeb853c3e10fc874",
                          "typeString": "literal_string \"Not pending receiver.\""
                        }
                      ],
                      "id": 1231,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "6163:7:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1238,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6163:72:5",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1239,
                  "nodeType": "ExpressionStatement",
                  "src": "6163:72:5"
                },
                {
                  "documentation": "@dev Require that the token has not expired already.",
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 1242,
                            "name": "tokenId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1199,
                            "src": "6326:7:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "id": 1241,
                          "name": "isValid",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 234,
                          "src": "6318:7:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_bool_$",
                            "typeString": "function (uint256) view returns (bool)"
                          }
                        },
                        "id": 1243,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "6318:16:5",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "526563656976616c206f66206578706972656420746f6b656e2c2072656465656d20746f6b656e2e",
                        "id": 1244,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "6336:42:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_139167712b23610ca89c74e594394396d48fdd1707b40d47ee305fc2a27ea0b9",
                          "typeString": "literal_string \"Receival of expired token, redeem token.\""
                        },
                        "value": "Receival of expired token, redeem token."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_139167712b23610ca89c74e594394396d48fdd1707b40d47ee305fc2a27ea0b9",
                          "typeString": "literal_string \"Receival of expired token, redeem token.\""
                        }
                      ],
                      "id": 1240,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "6310:7:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1245,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6310:69:5",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1246,
                  "nodeType": "ExpressionStatement",
                  "src": "6310:69:5"
                },
                {
                  "documentation": "@dev Require that the amount sent is GTE the price of one token.",
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 1251,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 1248,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "6474:3:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 1249,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "value",
                          "nodeType": "MemberAccess",
                          "src": "6474:9:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">=",
                        "rightExpression": {
                          "id": 1250,
                          "name": "tokenPrice",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 995,
                          "src": "6487:10:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "6474:23:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "5072696365206c6f776572207468616e20746f6b656e20636f73742e",
                        "id": 1252,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "6499:30:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_3f582117bae28b735f149af9be0894d5dd380425ff79d8dc2f8db5a41eb0fff9",
                          "typeString": "literal_string \"Price lower than token cost.\""
                        },
                        "value": "Price lower than token cost."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_3f582117bae28b735f149af9be0894d5dd380425ff79d8dc2f8db5a41eb0fff9",
                          "typeString": "literal_string \"Price lower than token cost.\""
                        }
                      ],
                      "id": 1247,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "6466:7:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1253,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6466:64:5",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1254,
                  "nodeType": "ExpressionStatement",
                  "src": "6466:64:5"
                },
                {
                  "assignments": [
                    1257
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1257,
                      "mutability": "mutable",
                      "name": "balance",
                      "nameLocation": "6585:7:5",
                      "nodeType": "VariableDeclaration",
                      "scope": 1311,
                      "src": "6577:15:5",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 1256,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "6577:7:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "documentation": "@dev Initialize balance.",
                  "id": 1258,
                  "nodeType": "VariableDeclarationStatement",
                  "src": "6577:15:5"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 1262,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "expression": {
                        "id": 1259,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -15,
                        "src": "6690:3:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 1260,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "value",
                      "nodeType": "MemberAccess",
                      "src": "6690:9:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": ">",
                    "rightExpression": {
                      "id": 1261,
                      "name": "tokenPrice",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 995,
                      "src": "6702:10:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "6690:22:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "documentation": "@dev If the amount sent is bigger than the price of one token.",
                  "id": 1279,
                  "nodeType": "IfStatement",
                  "src": "6686:252:5",
                  "trueBody": {
                    "id": 1278,
                    "nodeType": "Block",
                    "src": "6714:224:5",
                    "statements": [
                      {
                        "documentation": "@dev Calculate the balance of the `_receiver`.",
                        "expression": {
                          "id": 1268,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 1263,
                            "name": "balance",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1257,
                            "src": "6791:7:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 1267,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "expression": {
                                "id": 1264,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -15,
                                "src": "6801:3:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 1265,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "value",
                              "nodeType": "MemberAccess",
                              "src": "6801:9:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "-",
                            "rightExpression": {
                              "id": 1266,
                              "name": "tokenPrice",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 995,
                              "src": "6813:10:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "src": "6801:22:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "6791:32:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 1269,
                        "nodeType": "ExpressionStatement",
                        "src": "6791:32:5"
                      },
                      {
                        "documentation": "@dev Pay the `_receiver` his balance.",
                        "expression": {
                          "arguments": [
                            {
                              "id": 1275,
                              "name": "balance",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1257,
                              "src": "6919:7:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "arguments": [
                                {
                                  "id": 1272,
                                  "name": "_receiver",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1197,
                                  "src": "6899:9:5",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                ],
                                "id": 1271,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "6891:8:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_payable_$",
                                  "typeString": "type(address payable)"
                                },
                                "typeName": {
                                  "id": 1270,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "6891:8:5",
                                  "stateMutability": "payable",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 1273,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "6891:18:5",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            },
                            "id": 1274,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "transfer",
                            "nodeType": "MemberAccess",
                            "src": "6891:27:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_transfer_nonpayable$_t_uint256_$returns$__$",
                              "typeString": "function (uint256)"
                            }
                          },
                          "id": 1276,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "6891:36:5",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1277,
                        "nodeType": "ExpressionStatement",
                        "src": "6891:36:5"
                      }
                    ]
                  }
                },
                {
                  "assignments": [
                    1282
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1282,
                      "mutability": "mutable",
                      "name": "_tokenURI",
                      "nameLocation": "6998:9:5",
                      "nodeType": "VariableDeclaration",
                      "scope": 1311,
                      "src": "6984:23:5",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string"
                      },
                      "typeName": {
                        "id": 1281,
                        "name": "string",
                        "nodeType": "ElementaryTypeName",
                        "src": "6984:6:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_storage_ptr",
                          "typeString": "string"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "documentation": "@dev Generate tokenURI.",
                  "id": 1286,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 1284,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1199,
                        "src": "7027:7:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 1283,
                      "name": "generateTokenURI",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 894,
                      "src": "7010:16:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_string_memory_ptr_$",
                        "typeString": "function (uint256) view returns (string memory)"
                      }
                    },
                    "id": 1285,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7010:25:5",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory_ptr",
                      "typeString": "string memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "6984:51:5"
                },
                {
                  "documentation": "@dev Finally issue the token to the `_receiver`.",
                  "expression": {
                    "arguments": [
                      {
                        "id": 1288,
                        "name": "_receiver",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1197,
                        "src": "7125:9:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 1289,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1199,
                        "src": "7148:7:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 1290,
                        "name": "_tokenURI",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1282,
                        "src": "7169:9:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      ],
                      "id": 1287,
                      "name": "issue",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 433,
                      "src": "7106:5:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_string_memory_ptr_$returns$_t_bool_$",
                        "typeString": "function (address,uint256,string memory) returns (bool)"
                      }
                    },
                    "id": 1291,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7106:82:5",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 1292,
                  "nodeType": "ExpressionStatement",
                  "src": "7106:82:5"
                },
                {
                  "documentation": "@dev Increment totalSales.",
                  "expression": {
                    "id": 1294,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "UnaryOperation",
                    "operator": "++",
                    "prefix": false,
                    "src": "7237:12:5",
                    "subExpression": {
                      "id": 1293,
                      "name": "totalSales",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 986,
                      "src": "7237:10:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 1295,
                  "nodeType": "ExpressionStatement",
                  "src": "7237:12:5"
                },
                {
                  "documentation": "@dev Add to the total Revenue.",
                  "expression": {
                    "id": 1298,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 1296,
                      "name": "totalRevenue",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 989,
                      "src": "7302:12:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "+=",
                    "rightHandSide": {
                      "id": 1297,
                      "name": "tokenPrice",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 995,
                      "src": "7318:10:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "7302:26:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 1299,
                  "nodeType": "ExpressionStatement",
                  "src": "7302:26:5"
                },
                {
                  "documentation": "@dev Set the pending token to false.",
                  "expression": {
                    "id": 1304,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 1300,
                        "name": "pending",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1000,
                        "src": "7387:7:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint256_$_t_bool_$",
                          "typeString": "mapping(uint256 => bool)"
                        }
                      },
                      "id": 1302,
                      "indexExpression": {
                        "id": 1301,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1199,
                        "src": "7395:7:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "7387:16:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "66616c7365",
                      "id": 1303,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "7406:5:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "false"
                    },
                    "src": "7387:24:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 1305,
                  "nodeType": "ExpressionStatement",
                  "src": "7387:24:5"
                },
                {
                  "documentation": "@dev Delete the pending receiver.",
                  "expression": {
                    "id": 1309,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "UnaryOperation",
                    "operator": "delete",
                    "prefix": true,
                    "src": "7467:32:5",
                    "subExpression": {
                      "baseExpression": {
                        "id": 1306,
                        "name": "pendingReceivers",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1005,
                        "src": "7474:16:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
                          "typeString": "mapping(uint256 => address)"
                        }
                      },
                      "id": 1308,
                      "indexExpression": {
                        "id": 1307,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1199,
                        "src": "7491:7:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "7474:25:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1310,
                  "nodeType": "ExpressionStatement",
                  "src": "7467:32:5"
                }
              ]
            },
            "documentation": {
              "id": 1195,
              "nodeType": "StructuredDocumentation",
              "src": "5214:315:5",
              "text": " @dev  Allows the `_receiver` to pay the price of one token to \n       fully mint the pending token.\n @notice   Callable by the deployer of this contract [DaccredDeployer].\n @param _receiver  Receiver of the token.\n @param tokenId    Pending tokenId for the receiver."
            },
            "functionSelector": "33e085c1",
            "id": 1312,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 1202,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 1201,
                  "name": "onlyOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 291,
                  "src": "5624:9:5"
                },
                "nodeType": "ModifierInvocation",
                "src": "5624:9:5"
              },
              {
                "id": 1204,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 1203,
                  "name": "nonReentrant",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 1075,
                  "src": "5638:12:5"
                },
                "nodeType": "ModifierInvocation",
                "src": "5638:12:5"
              }
            ],
            "name": "payToReceiveToken",
            "nameLocation": "5543:17:5",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1200,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1197,
                  "mutability": "mutable",
                  "name": "_receiver",
                  "nameLocation": "5569:9:5",
                  "nodeType": "VariableDeclaration",
                  "scope": 1312,
                  "src": "5561:17:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1196,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "5561:7:5",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1199,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nameLocation": "5588:7:5",
                  "nodeType": "VariableDeclaration",
                  "scope": 1312,
                  "src": "5580:15:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1198,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5580:7:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5560:36:5"
            },
            "returnParameters": {
              "id": 1205,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5655:0:5"
            },
            "scope": 1679,
            "src": "5534:1972:5",
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1417,
              "nodeType": "Block",
              "src": "8198:1336:5",
              "statements": [
                {
                  "documentation": "@dev Require _receiver is not a zero address.",
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 1332,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 1327,
                          "name": "_receiver",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1315,
                          "src": "8274:9:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 1330,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "8295:1:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 1329,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "8287:7:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 1328,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "8287:7:5",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 1331,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "8287:10:5",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "8274:23:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "526564656d7074696f6e20746f207a65726f20616464726573732e",
                        "id": 1333,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "8299:29:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_f8ae517d4fbdf4aa8a9a0c9b30153fe2f49b5b913f6c5df159128e1c8e765e0c",
                          "typeString": "literal_string \"Redemption to zero address.\""
                        },
                        "value": "Redemption to zero address."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_f8ae517d4fbdf4aa8a9a0c9b30153fe2f49b5b913f6c5df159128e1c8e765e0c",
                          "typeString": "literal_string \"Redemption to zero address.\""
                        }
                      ],
                      "id": 1326,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "8266:7:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1334,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8266:63:5",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1335,
                  "nodeType": "ExpressionStatement",
                  "src": "8266:63:5"
                },
                {
                  "documentation": "@dev Require tokenId is existent.",
                  "expression": {
                    "arguments": [
                      {
                        "id": 1340,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "UnaryOperation",
                        "operator": "!",
                        "prefix": true,
                        "src": "8393:17:5",
                        "subExpression": {
                          "arguments": [
                            {
                              "id": 1338,
                              "name": "tokenId",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1317,
                              "src": "8402:7:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 1337,
                            "name": "_exists",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2053,
                            "src": "8394:7:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_bool_$",
                              "typeString": "function (uint256) view returns (bool)"
                            }
                          },
                          "id": 1339,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "8394:16:5",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "526564656d7074696f6e206f66206578697374696e6720746f6b656e2e",
                        "id": 1341,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "8412:31:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_8eea3e14730fdda4b1b67df25114b765b9e055f222676279aedc274e392d5c70",
                          "typeString": "literal_string \"Redemption of existing token.\""
                        },
                        "value": "Redemption of existing token."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_8eea3e14730fdda4b1b67df25114b765b9e055f222676279aedc274e392d5c70",
                          "typeString": "literal_string \"Redemption of existing token.\""
                        }
                      ],
                      "id": 1336,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "8385:7:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1342,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8385:59:5",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1343,
                  "nodeType": "ExpressionStatement",
                  "src": "8385:59:5"
                },
                {
                  "documentation": "@dev Require that the token is still pending.",
                  "expression": {
                    "arguments": [
                      {
                        "baseExpression": {
                          "id": 1345,
                          "name": "pending",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1000,
                          "src": "8520:7:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_uint256_$_t_bool_$",
                            "typeString": "mapping(uint256 => bool)"
                          }
                        },
                        "id": 1347,
                        "indexExpression": {
                          "id": 1346,
                          "name": "tokenId",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1317,
                          "src": "8528:7:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "8520:16:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "416c726561647920726563656976656420746f6b656e2e",
                        "id": 1348,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "8538:25:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_12cc045ad24f383fd375b78e3f9b44570c2ab7e10a54320acd82e5dd71df5f27",
                          "typeString": "literal_string \"Already received token.\""
                        },
                        "value": "Already received token."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_12cc045ad24f383fd375b78e3f9b44570c2ab7e10a54320acd82e5dd71df5f27",
                          "typeString": "literal_string \"Already received token.\""
                        }
                      ],
                      "id": 1344,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "8512:7:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1349,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8512:52:5",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1350,
                  "nodeType": "ExpressionStatement",
                  "src": "8512:52:5"
                },
                {
                  "documentation": "@dev Require that the pending receiver is the `_receiver`.",
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 1356,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "baseExpression": {
                            "id": 1352,
                            "name": "pendingReceivers",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1005,
                            "src": "8653:16:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
                              "typeString": "mapping(uint256 => address)"
                            }
                          },
                          "id": 1354,
                          "indexExpression": {
                            "id": 1353,
                            "name": "tokenId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1317,
                            "src": "8670:7:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "8653:25:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "id": 1355,
                          "name": "_receiver",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1315,
                          "src": "8682:9:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "8653:38:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4e6f742070656e64696e672072656365697665722e",
                        "id": 1357,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "8693:23:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_a16ec8e5ff180a35a460e12ce81cf7b6dfd3872605270f5cfeb853c3e10fc874",
                          "typeString": "literal_string \"Not pending receiver.\""
                        },
                        "value": "Not pending receiver."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_a16ec8e5ff180a35a460e12ce81cf7b6dfd3872605270f5cfeb853c3e10fc874",
                          "typeString": "literal_string \"Not pending receiver.\""
                        }
                      ],
                      "id": 1351,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "8645:7:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1358,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8645:72:5",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1359,
                  "nodeType": "ExpressionStatement",
                  "src": "8645:72:5"
                },
                {
                  "documentation": "@dev Require the token has expired.",
                  "expression": {
                    "arguments": [
                      {
                        "id": 1364,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "UnaryOperation",
                        "operator": "!",
                        "prefix": true,
                        "src": "8783:17:5",
                        "subExpression": {
                          "arguments": [
                            {
                              "id": 1362,
                              "name": "tokenId",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1317,
                              "src": "8792:7:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 1361,
                            "name": "isValid",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 234,
                            "src": "8784:7:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_bool_$",
                              "typeString": "function (uint256) view returns (bool)"
                            }
                          },
                          "id": 1363,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "8784:16:5",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "546f6b656e20756e657870697265642e",
                        "id": 1365,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "8802:18:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_5ddea6342fcbf01338b6010e536f87fae8e42a6f07a6359c41895245782d6531",
                          "typeString": "literal_string \"Token unexpired.\""
                        },
                        "value": "Token unexpired."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_5ddea6342fcbf01338b6010e536f87fae8e42a6f07a6359c41895245782d6531",
                          "typeString": "literal_string \"Token unexpired.\""
                        }
                      ],
                      "id": 1360,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "8775:7:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1366,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8775:46:5",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1367,
                  "nodeType": "ExpressionStatement",
                  "src": "8775:46:5"
                },
                {
                  "assignments": [
                    1370
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1370,
                      "mutability": "mutable",
                      "name": "_tax",
                      "nameLocation": "8871:4:5",
                      "nodeType": "VariableDeclaration",
                      "scope": 1417,
                      "src": "8863:12:5",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 1369,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "8863:7:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "documentation": "@dev Calculate tax.",
                  "id": 1374,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 1372,
                        "name": "tax",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1009,
                        "src": "8891:3:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 1371,
                      "name": "calculateTax",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1678,
                      "src": "8878:12:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_uint256_$",
                        "typeString": "function (uint256) view returns (uint256)"
                      }
                    },
                    "id": 1373,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8878:17:5",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "8863:32:5"
                },
                {
                  "documentation": "@dev Require that the amount sent is GTE the tax.",
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 1379,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 1376,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "8975:3:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 1377,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "value",
                          "nodeType": "MemberAccess",
                          "src": "8975:9:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">=",
                        "rightExpression": {
                          "id": 1378,
                          "name": "_tax",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1370,
                          "src": "8988:4:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "8975:17:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "5072696365206c6f776572207468616e20726564656d7074696f6e207461782e",
                        "id": 1380,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "8994:34:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_fa10b2cd99908573898b40e409d7d992862dab35683fc79ab1b58428430f440f",
                          "typeString": "literal_string \"Price lower than redemption tax.\""
                        },
                        "value": "Price lower than redemption tax."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_fa10b2cd99908573898b40e409d7d992862dab35683fc79ab1b58428430f440f",
                          "typeString": "literal_string \"Price lower than redemption tax.\""
                        }
                      ],
                      "id": 1375,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "8967:7:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1381,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8967:62:5",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1382,
                  "nodeType": "ExpressionStatement",
                  "src": "8967:62:5"
                },
                {
                  "assignments": [
                    1385
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1385,
                      "mutability": "mutable",
                      "name": "balance",
                      "nameLocation": "9082:7:5",
                      "nodeType": "VariableDeclaration",
                      "scope": 1417,
                      "src": "9074:15:5",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 1384,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "9074:7:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "documentation": "@dev Initiate balance.",
                  "id": 1386,
                  "nodeType": "VariableDeclarationStatement",
                  "src": "9074:15:5"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 1389,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 1387,
                      "name": "_tax",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1370,
                      "src": "9142:4:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "!=",
                    "rightExpression": {
                      "hexValue": "30",
                      "id": 1388,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "9150:1:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "9142:9:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "documentation": "@dev If the tax is not 0.",
                  "id": 1406,
                  "nodeType": "IfStatement",
                  "src": "9138:205:5",
                  "trueBody": {
                    "id": 1405,
                    "nodeType": "Block",
                    "src": "9153:190:5",
                    "statements": [
                      {
                        "documentation": "@dev Calculate receiver's balance.",
                        "expression": {
                          "id": 1395,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 1390,
                            "name": "balance",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1385,
                            "src": "9218:7:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 1394,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "expression": {
                                "id": 1391,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -15,
                                "src": "9228:3:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 1392,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "value",
                              "nodeType": "MemberAccess",
                              "src": "9228:9:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "-",
                            "rightExpression": {
                              "id": 1393,
                              "name": "_tax",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1370,
                              "src": "9240:4:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "src": "9228:16:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "9218:26:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 1396,
                        "nodeType": "ExpressionStatement",
                        "src": "9218:26:5"
                      },
                      {
                        "documentation": "@dev Pay to receiver.",
                        "expression": {
                          "arguments": [
                            {
                              "id": 1402,
                              "name": "balance",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1385,
                              "src": "9324:7:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "arguments": [
                                {
                                  "id": 1399,
                                  "name": "_receiver",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1315,
                                  "src": "9304:9:5",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                ],
                                "id": 1398,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "9296:8:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_payable_$",
                                  "typeString": "type(address payable)"
                                },
                                "typeName": {
                                  "id": 1397,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "9296:8:5",
                                  "stateMutability": "payable",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 1400,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "9296:18:5",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            },
                            "id": 1401,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "transfer",
                            "nodeType": "MemberAccess",
                            "src": "9296:27:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_transfer_nonpayable$_t_uint256_$returns$__$",
                              "typeString": "function (uint256)"
                            }
                          },
                          "id": 1403,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "9296:36:5",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1404,
                        "nodeType": "ExpressionStatement",
                        "src": "9296:36:5"
                      }
                    ]
                  }
                },
                {
                  "documentation": "@dev Extend expiry of tokenId.",
                  "expression": {
                    "arguments": [
                      {
                        "id": 1408,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1317,
                        "src": "9409:7:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 1409,
                        "name": "_tokenExpiryDate",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1319,
                        "src": "9418:16:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 1407,
                      "name": "extendExpiry",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 205,
                      "src": "9396:12:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,uint256)"
                      }
                    },
                    "id": 1410,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9396:39:5",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1411,
                  "nodeType": "ExpressionStatement",
                  "src": "9396:39:5"
                },
                {
                  "documentation": "@dev Emit the Redeemed event.",
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 1413,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1317,
                        "src": "9501:7:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 1414,
                        "name": "_tokenExpiryDate",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1319,
                        "src": "9510:16:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 1412,
                      "name": "Redeemed",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1019,
                      "src": "9492:8:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,uint256)"
                      }
                    },
                    "id": 1415,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9492:35:5",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1416,
                  "nodeType": "EmitStatement",
                  "src": "9487:40:5"
                }
              ]
            },
            "documentation": {
              "id": 1313,
              "nodeType": "StructuredDocumentation",
              "src": "7512:501:5",
              "text": " @dev  For expired pending tokens, this function redeems them and makes\n       valid for another period of time.\n       Tokens must be expired for it to be redeemed.\n       Emits the {Redeemed} event.\n @notice   Callable by the deployer of this contract [DaccredDeployer].\n @param _receiver          Receiver of the token.\n @param tokenId            Pending tokenId for the receiver.\n @param _tokenExpiryDate   New expiry date for tokens."
            },
            "functionSelector": "ed734730",
            "id": 1418,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 1322,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 1321,
                  "name": "onlyOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 291,
                  "src": "8167:9:5"
                },
                "nodeType": "ModifierInvocation",
                "src": "8167:9:5"
              },
              {
                "id": 1324,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 1323,
                  "name": "nonReentrant",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 1075,
                  "src": "8181:12:5"
                },
                "nodeType": "ModifierInvocation",
                "src": "8181:12:5"
              }
            ],
            "name": "redeemPendingToken",
            "nameLocation": "8027:18:5",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1320,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1315,
                  "mutability": "mutable",
                  "name": "_receiver",
                  "nameLocation": "8063:9:5",
                  "nodeType": "VariableDeclaration",
                  "scope": 1418,
                  "src": "8055:17:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1314,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "8055:7:5",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1317,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nameLocation": "8091:7:5",
                  "nodeType": "VariableDeclaration",
                  "scope": 1418,
                  "src": "8083:15:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1316,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "8083:7:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1319,
                  "mutability": "mutable",
                  "name": "_tokenExpiryDate",
                  "nameLocation": "8116:16:5",
                  "nodeType": "VariableDeclaration",
                  "scope": 1418,
                  "src": "8108:24:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1318,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "8108:7:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "8045:93:5"
            },
            "returnParameters": {
              "id": 1325,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "8198:0:5"
            },
            "scope": 1679,
            "src": "8018:1516:5",
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1523,
              "nodeType": "Block",
              "src": "10224:1323:5",
              "statements": [
                {
                  "documentation": "@dev Require _receiver is not a zero address.",
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 1438,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 1433,
                          "name": "_receiver",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1421,
                          "src": "10300:9:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 1436,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "10321:1:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 1435,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "10313:7:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 1434,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "10313:7:5",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 1437,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "10313:10:5",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "10300:23:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "526564656d7074696f6e20746f207a65726f20616464726573732e",
                        "id": 1439,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "10325:29:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_f8ae517d4fbdf4aa8a9a0c9b30153fe2f49b5b913f6c5df159128e1c8e765e0c",
                          "typeString": "literal_string \"Redemption to zero address.\""
                        },
                        "value": "Redemption to zero address."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_f8ae517d4fbdf4aa8a9a0c9b30153fe2f49b5b913f6c5df159128e1c8e765e0c",
                          "typeString": "literal_string \"Redemption to zero address.\""
                        }
                      ],
                      "id": 1432,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "10292:7:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1440,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10292:63:5",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1441,
                  "nodeType": "ExpressionStatement",
                  "src": "10292:63:5"
                },
                {
                  "documentation": "@dev Require tokenId is existent.",
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 1444,
                            "name": "tokenId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1423,
                            "src": "10427:7:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "id": 1443,
                          "name": "_exists",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2053,
                          "src": "10419:7:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_bool_$",
                            "typeString": "function (uint256) view returns (bool)"
                          }
                        },
                        "id": 1445,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "10419:16:5",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "526564656d7074696f6e206f66206e6f6e2d6578697374696e6720746f6b656e2e",
                        "id": 1446,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "10437:35:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_cbb568e74a4e0859ba3703040914a4b98b5d188a3f26ea09cee63b8d438e279b",
                          "typeString": "literal_string \"Redemption of non-existing token.\""
                        },
                        "value": "Redemption of non-existing token."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_cbb568e74a4e0859ba3703040914a4b98b5d188a3f26ea09cee63b8d438e279b",
                          "typeString": "literal_string \"Redemption of non-existing token.\""
                        }
                      ],
                      "id": 1442,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "10411:7:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1447,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10411:62:5",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1448,
                  "nodeType": "ExpressionStatement",
                  "src": "10411:62:5"
                },
                {
                  "documentation": "@dev Require that the token is still pending.",
                  "expression": {
                    "arguments": [
                      {
                        "id": 1453,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "UnaryOperation",
                        "operator": "!",
                        "prefix": true,
                        "src": "10549:17:5",
                        "subExpression": {
                          "baseExpression": {
                            "id": 1450,
                            "name": "pending",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1000,
                            "src": "10550:7:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_uint256_$_t_bool_$",
                              "typeString": "mapping(uint256 => bool)"
                            }
                          },
                          "id": 1452,
                          "indexExpression": {
                            "id": 1451,
                            "name": "tokenId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1423,
                            "src": "10558:7:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "10550:16:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "546f6b656e207374696c6c2070656e64696e672e",
                        "id": 1454,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "10568:22:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_2b156dcdb30e77c44e138b6c32ca50b0fb732d157e9d549e2a7b839489b59283",
                          "typeString": "literal_string \"Token still pending.\""
                        },
                        "value": "Token still pending."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_2b156dcdb30e77c44e138b6c32ca50b0fb732d157e9d549e2a7b839489b59283",
                          "typeString": "literal_string \"Token still pending.\""
                        }
                      ],
                      "id": 1449,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "10541:7:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1455,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10541:50:5",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1456,
                  "nodeType": "ExpressionStatement",
                  "src": "10541:50:5"
                },
                {
                  "documentation": "@dev Require that the pending receiver is the `_receiver`.",
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 1462,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "arguments": [
                            {
                              "id": 1459,
                              "name": "tokenId",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1423,
                              "src": "10688:7:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 1458,
                            "name": "ownerOf",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2036,
                            "src": "10680:7:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$",
                              "typeString": "function (uint256) view returns (address)"
                            }
                          },
                          "id": 1460,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "10680:16:5",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "id": 1461,
                          "name": "_receiver",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1421,
                          "src": "10700:9:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "10680:29:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4e6f7420746f6b656e206f776e65722e",
                        "id": 1463,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "10711:18:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_01c2b96a94efb063c6ecb037e311fd4167859a7e8380231289135c1d35497ae4",
                          "typeString": "literal_string \"Not token owner.\""
                        },
                        "value": "Not token owner."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_01c2b96a94efb063c6ecb037e311fd4167859a7e8380231289135c1d35497ae4",
                          "typeString": "literal_string \"Not token owner.\""
                        }
                      ],
                      "id": 1457,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "10672:7:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1464,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10672:58:5",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1465,
                  "nodeType": "ExpressionStatement",
                  "src": "10672:58:5"
                },
                {
                  "documentation": "@dev Require the token has expired.",
                  "expression": {
                    "arguments": [
                      {
                        "id": 1470,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "UnaryOperation",
                        "operator": "!",
                        "prefix": true,
                        "src": "10796:17:5",
                        "subExpression": {
                          "arguments": [
                            {
                              "id": 1468,
                              "name": "tokenId",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1423,
                              "src": "10805:7:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 1467,
                            "name": "isValid",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 234,
                            "src": "10797:7:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_bool_$",
                              "typeString": "function (uint256) view returns (bool)"
                            }
                          },
                          "id": 1469,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "10797:16:5",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "546f6b656e20756e657870697265642e",
                        "id": 1471,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "10815:18:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_5ddea6342fcbf01338b6010e536f87fae8e42a6f07a6359c41895245782d6531",
                          "typeString": "literal_string \"Token unexpired.\""
                        },
                        "value": "Token unexpired."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_5ddea6342fcbf01338b6010e536f87fae8e42a6f07a6359c41895245782d6531",
                          "typeString": "literal_string \"Token unexpired.\""
                        }
                      ],
                      "id": 1466,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "10788:7:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1472,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10788:46:5",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1473,
                  "nodeType": "ExpressionStatement",
                  "src": "10788:46:5"
                },
                {
                  "assignments": [
                    1476
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1476,
                      "mutability": "mutable",
                      "name": "_tax",
                      "nameLocation": "10884:4:5",
                      "nodeType": "VariableDeclaration",
                      "scope": 1523,
                      "src": "10876:12:5",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 1475,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "10876:7:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "documentation": "@dev Calculate tax.",
                  "id": 1480,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 1478,
                        "name": "tax",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1009,
                        "src": "10904:3:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 1477,
                      "name": "calculateTax",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1678,
                      "src": "10891:12:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_uint256_$",
                        "typeString": "function (uint256) view returns (uint256)"
                      }
                    },
                    "id": 1479,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10891:17:5",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "10876:32:5"
                },
                {
                  "documentation": "@dev Require that the amount sent is GTE the tax.",
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 1485,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 1482,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "10988:3:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 1483,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "value",
                          "nodeType": "MemberAccess",
                          "src": "10988:9:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">=",
                        "rightExpression": {
                          "id": 1484,
                          "name": "_tax",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1476,
                          "src": "11001:4:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "10988:17:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "5072696365206c6f776572207468616e20726564656d7074696f6e207461782e",
                        "id": 1486,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "11007:34:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_fa10b2cd99908573898b40e409d7d992862dab35683fc79ab1b58428430f440f",
                          "typeString": "literal_string \"Price lower than redemption tax.\""
                        },
                        "value": "Price lower than redemption tax."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_fa10b2cd99908573898b40e409d7d992862dab35683fc79ab1b58428430f440f",
                          "typeString": "literal_string \"Price lower than redemption tax.\""
                        }
                      ],
                      "id": 1481,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "10980:7:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1487,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10980:62:5",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1488,
                  "nodeType": "ExpressionStatement",
                  "src": "10980:62:5"
                },
                {
                  "assignments": [
                    1491
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1491,
                      "mutability": "mutable",
                      "name": "balance",
                      "nameLocation": "11095:7:5",
                      "nodeType": "VariableDeclaration",
                      "scope": 1523,
                      "src": "11087:15:5",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 1490,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "11087:7:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "documentation": "@dev Initiate balance.",
                  "id": 1492,
                  "nodeType": "VariableDeclarationStatement",
                  "src": "11087:15:5"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 1495,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 1493,
                      "name": "_tax",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1476,
                      "src": "11155:4:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "!=",
                    "rightExpression": {
                      "hexValue": "30",
                      "id": 1494,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "11163:1:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "11155:9:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "documentation": "@dev If the tax is not 0.",
                  "id": 1512,
                  "nodeType": "IfStatement",
                  "src": "11151:205:5",
                  "trueBody": {
                    "id": 1511,
                    "nodeType": "Block",
                    "src": "11166:190:5",
                    "statements": [
                      {
                        "documentation": "@dev Calculate receiver's balance.",
                        "expression": {
                          "id": 1501,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 1496,
                            "name": "balance",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1491,
                            "src": "11231:7:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 1500,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "expression": {
                                "id": 1497,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -15,
                                "src": "11241:3:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 1498,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "value",
                              "nodeType": "MemberAccess",
                              "src": "11241:9:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "-",
                            "rightExpression": {
                              "id": 1499,
                              "name": "_tax",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1476,
                              "src": "11253:4:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "src": "11241:16:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "11231:26:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 1502,
                        "nodeType": "ExpressionStatement",
                        "src": "11231:26:5"
                      },
                      {
                        "documentation": "@dev Pay to receiver.",
                        "expression": {
                          "arguments": [
                            {
                              "id": 1508,
                              "name": "balance",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1491,
                              "src": "11337:7:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "arguments": [
                                {
                                  "id": 1505,
                                  "name": "_receiver",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1421,
                                  "src": "11317:9:5",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                ],
                                "id": 1504,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "11309:8:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_payable_$",
                                  "typeString": "type(address payable)"
                                },
                                "typeName": {
                                  "id": 1503,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "11309:8:5",
                                  "stateMutability": "payable",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 1506,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "11309:18:5",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            },
                            "id": 1507,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "transfer",
                            "nodeType": "MemberAccess",
                            "src": "11309:27:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_transfer_nonpayable$_t_uint256_$returns$__$",
                              "typeString": "function (uint256)"
                            }
                          },
                          "id": 1509,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "11309:36:5",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1510,
                        "nodeType": "ExpressionStatement",
                        "src": "11309:36:5"
                      }
                    ]
                  }
                },
                {
                  "documentation": "@dev Extend expiry of tokenId.",
                  "expression": {
                    "arguments": [
                      {
                        "id": 1514,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1423,
                        "src": "11422:7:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 1515,
                        "name": "_tokenExpiryDate",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1425,
                        "src": "11431:16:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 1513,
                      "name": "extendExpiry",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 205,
                      "src": "11409:12:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,uint256)"
                      }
                    },
                    "id": 1516,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11409:39:5",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1517,
                  "nodeType": "ExpressionStatement",
                  "src": "11409:39:5"
                },
                {
                  "documentation": "@dev Emit the Redeemed event.",
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 1519,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1423,
                        "src": "11514:7:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 1520,
                        "name": "_tokenExpiryDate",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1425,
                        "src": "11523:16:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 1518,
                      "name": "Redeemed",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1019,
                      "src": "11505:8:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,uint256)"
                      }
                    },
                    "id": 1521,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11505:35:5",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1522,
                  "nodeType": "EmitStatement",
                  "src": "11500:40:5"
                }
              ]
            },
            "documentation": {
              "id": 1419,
              "nodeType": "StructuredDocumentation",
              "src": "9540:500:5",
              "text": " @dev  For expired minted tokens, this function redeems them and makes\n       valid for another period of time.\n       Tokens must be expired for it to be redeemed.\n       Emits the {Redeemed} event.\n @notice   Callable by the deployer of this contract [DaccredDeployer].\n @param _receiver          Receiver of the token.\n @param tokenId            Pending tokenId for the receiver.\n @param _tokenExpiryDate   New expiry date for tokens."
            },
            "functionSelector": "3d1a350e",
            "id": 1524,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 1428,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 1427,
                  "name": "onlyOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 291,
                  "src": "10193:9:5"
                },
                "nodeType": "ModifierInvocation",
                "src": "10193:9:5"
              },
              {
                "id": 1430,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 1429,
                  "name": "nonReentrant",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 1075,
                  "src": "10207:12:5"
                },
                "nodeType": "ModifierInvocation",
                "src": "10207:12:5"
              }
            ],
            "name": "redeemMintedToken",
            "nameLocation": "10054:17:5",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1426,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1421,
                  "mutability": "mutable",
                  "name": "_receiver",
                  "nameLocation": "10089:9:5",
                  "nodeType": "VariableDeclaration",
                  "scope": 1524,
                  "src": "10081:17:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1420,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "10081:7:5",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1423,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nameLocation": "10117:7:5",
                  "nodeType": "VariableDeclaration",
                  "scope": 1524,
                  "src": "10109:15:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1422,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "10109:7:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1425,
                  "mutability": "mutable",
                  "name": "_tokenExpiryDate",
                  "nameLocation": "10142:16:5",
                  "nodeType": "VariableDeclaration",
                  "scope": 1524,
                  "src": "10134:24:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1424,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "10134:7:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "10071:93:5"
            },
            "returnParameters": {
              "id": 1431,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "10224:0:5"
            },
            "scope": 1679,
            "src": "10045:1502:5",
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1561,
              "nodeType": "Block",
              "src": "12401:285:5",
              "statements": [
                {
                  "documentation": "@dev Require that the signer is the allowlistowner.",
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 1549,
                            "name": "hash",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1535,
                            "src": "12499:4:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          {
                            "id": 1550,
                            "name": "sig",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1537,
                            "src": "12505:3:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            },
                            {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            }
                          ],
                          "id": 1548,
                          "name": "verifySignature",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 54,
                          "src": "12483:15:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_bytes_memory_ptr_$returns$_t_bool_$",
                            "typeString": "function (bytes32,bytes memory) returns (bool)"
                          }
                        },
                        "id": 1551,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "12483:26:5",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "48617368206e6f74207369676e656420627920796f752e",
                        "id": 1552,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "12511:25:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_ef5f160e4668f863b4f5f0eb6838380bb3459b7b0bafc4b8dc1f326dd0a6eedf",
                          "typeString": "literal_string \"Hash not signed by you.\""
                        },
                        "value": "Hash not signed by you."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_ef5f160e4668f863b4f5f0eb6838380bb3459b7b0bafc4b8dc1f326dd0a6eedf",
                          "typeString": "literal_string \"Hash not signed by you.\""
                        }
                      ],
                      "id": 1547,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "12475:7:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1553,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "12475:62:5",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1554,
                  "nodeType": "ExpressionStatement",
                  "src": "12475:62:5"
                },
                {
                  "documentation": "@dev RedeemToken.",
                  "expression": {
                    "arguments": [
                      {
                        "id": 1556,
                        "name": "_receiver",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1529,
                        "src": "12609:9:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 1557,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1531,
                        "src": "12632:7:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 1558,
                        "name": "_tokenExpiryDate",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1533,
                        "src": "12653:16:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 1555,
                      "name": "redeemPendingToken",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1418,
                      "src": "12577:18:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256,uint256)"
                      }
                    },
                    "id": 1559,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "12577:102:5",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1560,
                  "nodeType": "ExpressionStatement",
                  "src": "12577:102:5"
                }
              ]
            },
            "documentation": {
              "id": 1525,
              "nodeType": "StructuredDocumentation",
              "src": "11553:546:5",
              "text": " @dev  Allows the allowlistOwner to redeem an expired pending \n       token on behalf of the tokenOwner.\n @notice   Callable by the deployer of this contract [DaccredDeployer]\n           and the allowlistOwner.\n @param _caller            Allowlist owner.\n @param _receiver          Address of receiver.\n @param tokenId            TokenId.\n @param _tokenExpiryDate   Days to extend the token.\n @param hash               Hash of message.\n @param sig                Signature."
            },
            "functionSelector": "bd131786",
            "id": 1562,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 1540,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 1539,
                  "name": "onlyOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 291,
                  "src": "12338:9:5"
                },
                "nodeType": "ModifierInvocation",
                "src": "12338:9:5"
              },
              {
                "arguments": [
                  {
                    "id": 1542,
                    "name": "_caller",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 1527,
                    "src": "12371:7:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  }
                ],
                "id": 1543,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 1541,
                  "name": "onlyAllowlistOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 694,
                  "src": "12352:18:5"
                },
                "nodeType": "ModifierInvocation",
                "src": "12352:27:5"
              },
              {
                "id": 1545,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 1544,
                  "name": "nonReentrant",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 1075,
                  "src": "12384:12:5"
                },
                "nodeType": "ModifierInvocation",
                "src": "12384:12:5"
              }
            ],
            "name": "redeemPendingTokenWithSignature",
            "nameLocation": "12113:31:5",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1538,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1527,
                  "mutability": "mutable",
                  "name": "_caller",
                  "nameLocation": "12162:7:5",
                  "nodeType": "VariableDeclaration",
                  "scope": 1562,
                  "src": "12154:15:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1526,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "12154:7:5",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1529,
                  "mutability": "mutable",
                  "name": "_receiver",
                  "nameLocation": "12187:9:5",
                  "nodeType": "VariableDeclaration",
                  "scope": 1562,
                  "src": "12179:17:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1528,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "12179:7:5",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1531,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nameLocation": "12215:7:5",
                  "nodeType": "VariableDeclaration",
                  "scope": 1562,
                  "src": "12207:15:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1530,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "12207:7:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1533,
                  "mutability": "mutable",
                  "name": "_tokenExpiryDate",
                  "nameLocation": "12240:16:5",
                  "nodeType": "VariableDeclaration",
                  "scope": 1562,
                  "src": "12232:24:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1532,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "12232:7:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1535,
                  "mutability": "mutable",
                  "name": "hash",
                  "nameLocation": "12274:4:5",
                  "nodeType": "VariableDeclaration",
                  "scope": 1562,
                  "src": "12266:12:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 1534,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "12266:7:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1537,
                  "mutability": "mutable",
                  "name": "sig",
                  "nameLocation": "12301:3:5",
                  "nodeType": "VariableDeclaration",
                  "scope": 1562,
                  "src": "12288:16:5",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 1536,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "12288:5:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "12144:166:5"
            },
            "returnParameters": {
              "id": 1546,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "12401:0:5"
            },
            "scope": 1679,
            "src": "12104:582:5",
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1599,
              "nodeType": "Block",
              "src": "13538:284:5",
              "statements": [
                {
                  "documentation": "@dev Require that the signer is the allowlistowner.",
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 1587,
                            "name": "hash",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1573,
                            "src": "13636:4:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          {
                            "id": 1588,
                            "name": "sig",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1575,
                            "src": "13642:3:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            },
                            {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            }
                          ],
                          "id": 1586,
                          "name": "verifySignature",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 54,
                          "src": "13620:15:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_bytes_memory_ptr_$returns$_t_bool_$",
                            "typeString": "function (bytes32,bytes memory) returns (bool)"
                          }
                        },
                        "id": 1589,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "13620:26:5",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "48617368206e6f74207369676e656420627920796f752e",
                        "id": 1590,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "13648:25:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_ef5f160e4668f863b4f5f0eb6838380bb3459b7b0bafc4b8dc1f326dd0a6eedf",
                          "typeString": "literal_string \"Hash not signed by you.\""
                        },
                        "value": "Hash not signed by you."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_ef5f160e4668f863b4f5f0eb6838380bb3459b7b0bafc4b8dc1f326dd0a6eedf",
                          "typeString": "literal_string \"Hash not signed by you.\""
                        }
                      ],
                      "id": 1585,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "13612:7:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1591,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "13612:62:5",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1592,
                  "nodeType": "ExpressionStatement",
                  "src": "13612:62:5"
                },
                {
                  "documentation": "@dev RedeemToken.",
                  "expression": {
                    "arguments": [
                      {
                        "id": 1594,
                        "name": "_receiver",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1567,
                        "src": "13745:9:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 1595,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1569,
                        "src": "13768:7:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 1596,
                        "name": "_tokenExpiryDate",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1571,
                        "src": "13789:16:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 1593,
                      "name": "redeemMintedToken",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1524,
                      "src": "13714:17:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256,uint256)"
                      }
                    },
                    "id": 1597,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "13714:101:5",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1598,
                  "nodeType": "ExpressionStatement",
                  "src": "13714:101:5"
                }
              ]
            },
            "documentation": {
              "id": 1563,
              "nodeType": "StructuredDocumentation",
              "src": "12692:545:5",
              "text": " @dev  Allows the allowlistOwner to redeem an expired minted \n       token on behalf of the tokenOwner.\n @notice   Callable by the deployer of this contract [DaccredDeployer]\n           and the allowlistOwner.\n @param _caller            Allowlist owner.\n @param _receiver          Address of receiver.\n @param tokenId            TokenId.\n @param _tokenExpiryDate   Days to extend the token.\n @param hash               Hash of message.\n @param sig                Signature."
            },
            "functionSelector": "983a8b94",
            "id": 1600,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 1578,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 1577,
                  "name": "onlyOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 291,
                  "src": "13475:9:5"
                },
                "nodeType": "ModifierInvocation",
                "src": "13475:9:5"
              },
              {
                "arguments": [
                  {
                    "id": 1580,
                    "name": "_caller",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 1565,
                    "src": "13508:7:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  }
                ],
                "id": 1581,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 1579,
                  "name": "onlyAllowlistOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 694,
                  "src": "13489:18:5"
                },
                "nodeType": "ModifierInvocation",
                "src": "13489:27:5"
              },
              {
                "id": 1583,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 1582,
                  "name": "nonReentrant",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 1075,
                  "src": "13521:12:5"
                },
                "nodeType": "ModifierInvocation",
                "src": "13521:12:5"
              }
            ],
            "name": "redeemMintedTokenWithSignature",
            "nameLocation": "13251:30:5",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1576,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1565,
                  "mutability": "mutable",
                  "name": "_caller",
                  "nameLocation": "13299:7:5",
                  "nodeType": "VariableDeclaration",
                  "scope": 1600,
                  "src": "13291:15:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1564,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "13291:7:5",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1567,
                  "mutability": "mutable",
                  "name": "_receiver",
                  "nameLocation": "13324:9:5",
                  "nodeType": "VariableDeclaration",
                  "scope": 1600,
                  "src": "13316:17:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1566,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "13316:7:5",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1569,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nameLocation": "13352:7:5",
                  "nodeType": "VariableDeclaration",
                  "scope": 1600,
                  "src": "13344:15:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1568,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "13344:7:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1571,
                  "mutability": "mutable",
                  "name": "_tokenExpiryDate",
                  "nameLocation": "13377:16:5",
                  "nodeType": "VariableDeclaration",
                  "scope": 1600,
                  "src": "13369:24:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1570,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "13369:7:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1573,
                  "mutability": "mutable",
                  "name": "hash",
                  "nameLocation": "13411:4:5",
                  "nodeType": "VariableDeclaration",
                  "scope": 1600,
                  "src": "13403:12:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 1572,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "13403:7:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1575,
                  "mutability": "mutable",
                  "name": "sig",
                  "nameLocation": "13438:3:5",
                  "nodeType": "VariableDeclaration",
                  "scope": 1600,
                  "src": "13425:16:5",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 1574,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "13425:5:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "13281:166:5"
            },
            "returnParameters": {
              "id": 1584,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "13538:0:5"
            },
            "scope": 1679,
            "src": "13242:580:5",
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1644,
              "nodeType": "Block",
              "src": "14190:499:5",
              "statements": [
                {
                  "documentation": "@dev Require that the allowlistowner is not a zero address.",
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 1617,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 1612,
                          "name": "_caller",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1603,
                          "src": "14280:7:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 1615,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "14299:1:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 1614,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "14291:7:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 1613,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "14291:7:5",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 1616,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "14291:10:5",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "14280:21:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "53656e64696e6720746f207a65726f20616464726573732e",
                        "id": 1618,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "14303:26:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_69550820d91345eff27185892db9732301bb932a686959ef02a532beee79fc14",
                          "typeString": "literal_string \"Sending to zero address.\""
                        },
                        "value": "Sending to zero address."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_69550820d91345eff27185892db9732301bb932a686959ef02a532beee79fc14",
                          "typeString": "literal_string \"Sending to zero address.\""
                        }
                      ],
                      "id": 1611,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "14272:7:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1619,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "14272:58:5",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1620,
                  "nodeType": "ExpressionStatement",
                  "src": "14272:58:5"
                },
                {
                  "documentation": "@dev Require that the balance of this contract is GTE the totalRevenue.",
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 1628,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "arguments": [
                              {
                                "id": 1624,
                                "name": "this",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -28,
                                "src": "14440:4:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_SoulboundRedeemable_$1679",
                                  "typeString": "contract SoulboundRedeemable"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_SoulboundRedeemable_$1679",
                                  "typeString": "contract SoulboundRedeemable"
                                }
                              ],
                              "id": 1623,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "14432:7:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 1622,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "14432:7:5",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 1625,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "14432:13:5",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "id": 1626,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "balance",
                          "nodeType": "MemberAccess",
                          "src": "14432:21:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">=",
                        "rightExpression": {
                          "id": 1627,
                          "name": "totalRevenue",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 989,
                          "src": "14457:12:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "14432:37:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "526576656e756520213d20436f6e74726163742062616c616e63652e",
                        "id": 1629,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "14471:30:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_fca07585151cf995e4811867d30d75ea50f98637b078e7e8276134b3a72fcd66",
                          "typeString": "literal_string \"Revenue != Contract balance.\""
                        },
                        "value": "Revenue != Contract balance."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_fca07585151cf995e4811867d30d75ea50f98637b078e7e8276134b3a72fcd66",
                          "typeString": "literal_string \"Revenue != Contract balance.\""
                        }
                      ],
                      "id": 1621,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "14424:7:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1630,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "14424:78:5",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1631,
                  "nodeType": "ExpressionStatement",
                  "src": "14424:78:5"
                },
                {
                  "documentation": "@dev Pay the totalRevenue to the allowlistowner.",
                  "expression": {
                    "arguments": [
                      {
                        "id": 1637,
                        "name": "totalRevenue",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 989,
                        "src": "14599:12:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "id": 1634,
                            "name": "_caller",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1603,
                            "src": "14581:7:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 1633,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "14573:8:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_payable_$",
                            "typeString": "type(address payable)"
                          },
                          "typeName": {
                            "id": 1632,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "14573:8:5",
                            "stateMutability": "payable",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 1635,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "14573:16:5",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      "id": 1636,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "transfer",
                      "nodeType": "MemberAccess",
                      "src": "14573:25:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_transfer_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 1638,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "14573:39:5",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1639,
                  "nodeType": "ExpressionStatement",
                  "src": "14573:39:5"
                },
                {
                  "documentation": "@dev Set the totalRevenue to 0.",
                  "expression": {
                    "id": 1642,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 1640,
                      "name": "totalRevenue",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 989,
                      "src": "14666:12:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "30",
                      "id": 1641,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "14681:1:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "14666:16:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 1643,
                  "nodeType": "ExpressionStatement",
                  "src": "14666:16:5"
                }
              ]
            },
            "documentation": {
              "id": 1601,
              "nodeType": "StructuredDocumentation",
              "src": "13828:261:5",
              "text": " @dev  Allows the allowlistowner to withdraw his funds to his wallet.\n @notice   Callable by the deployer of this contract [DaccredDeployer]\n           and the allowlistOwner.\n @param _caller Address of allowlistowner."
            },
            "functionSelector": "51cff8d9",
            "id": 1645,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 1606,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 1605,
                  "name": "onlyOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 291,
                  "src": "14144:9:5"
                },
                "nodeType": "ModifierInvocation",
                "src": "14144:9:5"
              },
              {
                "arguments": [
                  {
                    "id": 1608,
                    "name": "_caller",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 1603,
                    "src": "14177:7:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  }
                ],
                "id": 1609,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 1607,
                  "name": "onlyAllowlistOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 694,
                  "src": "14158:18:5"
                },
                "nodeType": "ModifierInvocation",
                "src": "14158:27:5"
              }
            ],
            "name": "withdraw",
            "nameLocation": "14103:8:5",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1604,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1603,
                  "mutability": "mutable",
                  "name": "_caller",
                  "nameLocation": "14120:7:5",
                  "nodeType": "VariableDeclaration",
                  "scope": 1645,
                  "src": "14112:15:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1602,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "14112:7:5",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "14111:17:5"
            },
            "returnParameters": {
              "id": 1610,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "14190:0:5"
            },
            "scope": 1679,
            "src": "14094:595:5",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1677,
              "nodeType": "Block",
              "src": "14914:347:5",
              "statements": [
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "id": 1659,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 1655,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "id": 1653,
                        "name": "totalRevenue",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 989,
                        "src": "15033:12:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": ">=",
                      "rightExpression": {
                        "hexValue": "30",
                        "id": 1654,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "15049:1:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      "src": "15033:17:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "&&",
                    "rightExpression": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 1658,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "id": 1656,
                        "name": "totalRevenue",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 989,
                        "src": "15054:12:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "<",
                      "rightExpression": {
                        "hexValue": "353030",
                        "id": 1657,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "15069:8:5",
                        "subdenomination": "gwei",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_500000000000_by_1",
                          "typeString": "int_const 500000000000"
                        },
                        "value": "500"
                      },
                      "src": "15054:23:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "src": "15033:44:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "documentation": "Grant free tax if the total revenue of the contract is\n in range of 0 - 500 gwei.",
                  "id": 1665,
                  "nodeType": "IfStatement",
                  "src": "15029:118:5",
                  "trueBody": {
                    "id": 1664,
                    "nodeType": "Block",
                    "src": "15079:68:5",
                    "statements": [
                      {
                        "documentation": "@dev Set tax to 0.",
                        "expression": {
                          "id": 1662,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 1660,
                            "name": "_tax",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1648,
                            "src": "15128:4:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "hexValue": "30",
                            "id": 1661,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "15135:1:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "src": "15128:8:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 1663,
                        "nodeType": "ExpressionStatement",
                        "src": "15128:8:5"
                      }
                    ]
                  }
                },
                {
                  "documentation": "Else simply calculate tax on total revenue.",
                  "expression": {
                    "id": 1675,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 1666,
                      "name": "__tax",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1651,
                      "src": "15213:5:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 1674,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "components": [
                          {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 1671,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 1669,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 1667,
                                "name": "_tax",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1648,
                                "src": "15222:4:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "*",
                              "rightExpression": {
                                "id": 1668,
                                "name": "totalRevenue",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 989,
                                "src": "15229:12:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "15222:19:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "*",
                            "rightExpression": {
                              "hexValue": "3130",
                              "id": 1670,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "15244:2:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_10_by_1",
                                "typeString": "int_const 10"
                              },
                              "value": "10"
                            },
                            "src": "15222:24:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "id": 1672,
                        "isConstant": false,
                        "isInlineArray": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "TupleExpression",
                        "src": "15221:26:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "/",
                      "rightExpression": {
                        "hexValue": "31303030",
                        "id": 1673,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "15250:4:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1000_by_1",
                          "typeString": "int_const 1000"
                        },
                        "value": "1000"
                      },
                      "src": "15221:33:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "15213:41:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 1676,
                  "nodeType": "ExpressionStatement",
                  "src": "15213:41:5"
                }
              ]
            },
            "documentation": {
              "id": 1646,
              "nodeType": "StructuredDocumentation",
              "src": "14695:142:5",
              "text": " @dev Calculates the tax off the totalSales.\n @param _tax Percentage tax.\n @return __tax Tax calculated."
            },
            "id": 1678,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "calculateTax",
            "nameLocation": "14851:12:5",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1649,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1648,
                  "mutability": "mutable",
                  "name": "_tax",
                  "nameLocation": "14872:4:5",
                  "nodeType": "VariableDeclaration",
                  "scope": 1678,
                  "src": "14864:12:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1647,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "14864:7:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "14863:14:5"
            },
            "returnParameters": {
              "id": 1652,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1651,
                  "mutability": "mutable",
                  "name": "__tax",
                  "nameLocation": "14907:5:5",
                  "nodeType": "VariableDeclaration",
                  "scope": 1678,
                  "src": "14899:13:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1650,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "14899:7:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "14898:15:5"
            },
            "scope": 1679,
            "src": "14842:419:5",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "private"
          }
        ],
        "scope": 1680,
        "src": "417:14846:5",
        "usedErrors": [
          2150
        ]
      }
    ],
    "src": "36:15228:5"
  },
  "bytecode": "6080604052600f6012553480156200001657600080fd5b506040516200314e3803806200314e833981016040819052620000399162000253565b8585858583838383818484818160016200005483826200038b565b5060026200006382826200038b565b505050620000806200007a6200013060201b60201c565b62000134565b5050600980546001600160a01b0319166001600160a01b03929092169190911790556000819003620000b957620f4240600a55620000bf565b600a8190555b5050505050505050818111156200011c5760405162461bcd60e51b815260206004820152601860248201527f507269636520686967686572207468616e206c696d69742e0000000000000000604482015260640160405180910390fd5b600e91909155600f55506200045792505050565b3390565b600680546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b634e487b7160e01b600052604160045260246000fd5b600082601f830112620001ae57600080fd5b81516001600160401b0380821115620001cb57620001cb62000186565b604051601f8301601f19908116603f01168101908282118183101715620001f657620001f662000186565b816040528381526020925086838588010111156200021357600080fd5b600091505b8382101562000237578582018301518183018401529082019062000218565b83821115620002495760008385830101525b9695505050505050565b60008060008060008060c087890312156200026d57600080fd5b86516001600160401b03808211156200028557600080fd5b620002938a838b016200019c565b97506020890151915080821115620002aa57600080fd5b50620002b989828a016200019c565b604089015190965090506001600160a01b0381168114620002d957600080fd5b80945050606087015192506080870151915060a087015190509295509295509295565b600181811c908216806200031157607f821691505b6020821081036200033257634e487b7160e01b600052602260045260246000fd5b50919050565b601f8211156200038657600081815260208120601f850160051c81016020861015620003615750805b601f850160051c820191505b8181101562000382578281556001016200036d565b5050505b505050565b81516001600160401b03811115620003a757620003a762000186565b620003bf81620003b88454620002fc565b8462000338565b602080601f831160018114620003f75760008415620003de5750858301515b600019600386901b1c1916600185901b17855562000382565b600085815260208120601f198616915b82811015620004285788860151825594840194600190910190840162000407565b5085821015620004475787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b612ce780620004676000396000f3fe60806040526004361061020e5760003560e01c806395d89b4111610118578063daca6f78116100a0578063ed7347301161006f578063ed73473014610601578063f2fde38b14610614578063f577a50014610634578063fad54de714610664578063fb8f198d1461067957600080fd5b8063daca6f7814610581578063e8c58763146105a1578063e92b0842146105c1578063ea5353c7146105e157600080fd5b8063bd97a6ad116100e7578063bd97a6ad146104ec578063c3cab38a1461050c578063c87b56dd1461052c578063c9dd94c71461054c578063c9e4c54d1461056157600080fd5b806395d89b411461049c578063983a8b94146104b1578063a0b97daa146104c4578063bd131786146104d957600080fd5b806351cff8d91161019b5780636e0a87461161016a5780636e0a87461461040b57806370a0823114610429578063715018a614610449578063884336511461045e5780638da5cb5b1461047e57600080fd5b806351cff8d9146103325780635899e7b2146103525780636352211e146103985780636833f200146103d057600080fd5b80631f04d135116101e25780631f04d135146102ac578063210fa96b146102cc57806333e085c1146102ec5780633d1a350e146102ff57806342966c681461031257600080fd5b8062e4768b1461021357806301ffc9a71461023557806306fdde031461026a57806308c92e571461028c575b600080fd5b34801561021f57600080fd5b5061023361022e3660046125a8565b610699565b005b34801561024157600080fd5b506102556102503660046125d2565b610746565b60405190151581526020015b60405180910390f35b34801561027657600080fd5b5061027f610798565b604051610261919061262c565b34801561029857600080fd5b506102336102a7366004612702565b61082a565b3480156102b857600080fd5b506102336102c7366004612702565b610960565b3480156102d857600080fd5b5061027f6102e7366004612752565b6109da565b6102336102fa3660046125a8565b610a5c565b61023361030d36600461276b565b610d52565b34801561031e57600080fd5b5061023361032d366004612752565b611022565b34801561033e57600080fd5b5061023361034d36600461279e565b611097565b34801561035e57600080fd5b5061025561036d3660046125a8565b6001600160a01b03919091166000908152600860209081526040808320938352929052205460ff1690565b3480156103a457600080fd5b506103b86103b3366004612752565b6111cb565b6040516001600160a01b039091168152602001610261565b3480156103dc57600080fd5b506103fd6103eb366004612752565b60009081526020819052604090205490565b604051908152602001610261565b34801561041757600080fd5b506009546001600160a01b03166103b8565b34801561043557600080fd5b506103fd61044436600461279e565b611230565b34801561045557600080fd5b506102336112b9565b34801561046a57600080fd5b506102336104793660046127b9565b6112cd565b34801561048a57600080fd5b506006546001600160a01b03166103b8565b3480156104a857600080fd5b5061027f611321565b6102336104bf366004612807565b611330565b3480156104d057600080fd5b50600e546103fd565b6102336104e7366004612807565b611406565b3480156104f857600080fd5b50610233610507366004612881565b6114c9565b34801561051857600080fd5b506102336105273660046128c3565b61169b565b34801561053857600080fd5b5061027f610547366004612752565b6116f3565b34801561055857600080fd5b5061027f6117e8565b34801561056d57600080fd5b5061023361057c3660046128e5565b611845565b34801561058d57600080fd5b5061025561059c36600461296d565b611952565b3480156105ad57600080fd5b506103fd6105bc366004612752565b611965565b3480156105cd57600080fd5b506102556105dc36600461299e565b6119a2565b3480156105ed57600080fd5b506102336105fc3660046128e5565b611a36565b61023361060f36600461276b565b611a93565b34801561062057600080fd5b5061023361062f36600461279e565b611c1d565b34801561064057600080fd5b5061025561064f366004612752565b60009081526020819052604090205442111590565b34801561067057600080fd5b50600f546103fd565b34801561068557600080fd5b506103b86106943660046125a8565b611c93565b6106a1611da7565b816106b46009546001600160a01b031690565b6001600160a01b0316816001600160a01b0316146106ed5760405162461bcd60e51b81526004016106e4906129f5565b60405180910390fd5b600e5482111561073f5760405162461bcd60e51b815260206004820152601860248201527f507269636520686967686572207468616e206c696d69742e000000000000000060448201526064016106e4565b50600f5550565b60006001600160e01b03198216635b5e139f60e01b148061077757506001600160e01b03198216635164cf4760e01b145b8061079257506301ffc9a760e01b6001600160e01b03198316145b92915050565b6060600180546107a790612a23565b80601f01602080910402602001604051908101604052809291908181526020018280546107d390612a23565b80156108205780601f106107f557610100808354040283529160200191610820565b820191906000526020600020905b81548152906001019060200180831161080357829003601f168201915b5050505050905090565b61083381611e01565b61087f5760405162461bcd60e51b815260206004820152601b60248201527f5265766f6b65206f6620696e6578697374656e7420746f6b656e2e000000000060448201526064016106e4565b81516041146108cb5760405162461bcd60e51b8152602060048201526018602482015277092dcecc2d8d2c840e6d2cedcc2e8eae4ca40d8cadccee8d60431b60448201526064016106e4565b6108d58383611952565b61091d5760405162461bcd60e51b81526020600482015260196024820152782430b9b4103737ba1039b4b3b732b210313c9037bbb732b91760391b60448201526064016106e4565b61092f610929826111cb565b82611e1e565b5060405181907ff947bf2266afede98f27ad2312db8b2a17921852307f979b6f14a2b41fa774bc90600090a2505050565b610968611da7565b600b541561098a57600b805490600061098083612a73565b91905055506109ca565b60405162461bcd60e51b81526020600482015260156024820152742637bbb2b9ba103634b6b4ba103932b0b1b432b21760591b60448201526064016106e4565b6109d583838361082a565b505050565b60606109e46117e8565b51600003610a245760405162461bcd60e51b815260206004820152600d60248201526c456d707479206261736555524960981b60448201526064016106e4565b610a2c6117e8565b610a3583611ee6565b604051602001610a46929190612a8a565b6040516020818303038152906040529050919050565b610a64611da7565b60135460ff1615610a7457600080fd5b6013805460ff191660011790556001600160a01b038216610aa75760405162461bcd60e51b81526004016106e490612ab9565b610ab081611e01565b15610afd5760405162461bcd60e51b815260206004820152601f60248201527f4d696e74206f6620616c7265616479206578697374696e6720746f6b656e2e0060448201526064016106e4565b60008181526010602052604090205460ff16610b555760405162461bcd60e51b815260206004820152601760248201527620b63932b0b23c903932b1b2b4bb32b2103a37b5b2b71760491b60448201526064016106e4565b6000818152601160205260409020546001600160a01b03838116911614610bb65760405162461bcd60e51b81526020600482015260156024820152742737ba103832b73234b733903932b1b2b4bb32b91760591b60448201526064016106e4565b600081815260208190526040902054421115610c255760405162461bcd60e51b815260206004820152602860248201527f526563656976616c206f66206578706972656420746f6b656e2c20726564656560448201526736903a37b5b2b71760c11b60648201526084016106e4565b600f54341015610c775760405162461bcd60e51b815260206004820152601c60248201527f5072696365206c6f776572207468616e20746f6b656e20636f73742e0000000060448201526064016106e4565b6000600f54341115610ccb57600f54610c909034612ae8565b6040519091506001600160a01b0384169082156108fc029083906000818181858888f19350505050158015610cc9573d6000803e3d6000fd5b505b6000610cd6836109da565b9050610ce3848483611fef565b50600c8054906000610cf483612aff565b9190505550600f54600d6000828254610d0d9190612b18565b909155505050600091825250601060209081526040808320805460ff19908116909155601190925290912080546001600160a01b031916905560138054909116905550565b610d5a611da7565b60135460ff1615610d6a57600080fd5b6013805460ff191660011790556001600160a01b038316610dcd5760405162461bcd60e51b815260206004820152601b60248201527f526564656d7074696f6e20746f207a65726f20616464726573732e000000000060448201526064016106e4565b610dd682611e01565b610e2c5760405162461bcd60e51b815260206004820152602160248201527f526564656d7074696f6e206f66206e6f6e2d6578697374696e6720746f6b656e6044820152601760f91b60648201526084016106e4565b60008281526010602052604090205460ff1615610e825760405162461bcd60e51b81526020600482015260146024820152732a37b5b2b71039ba34b636103832b73234b7339760611b60448201526064016106e4565b826001600160a01b0316610e95836111cb565b6001600160a01b031614610ede5760405162461bcd60e51b815260206004820152601060248201526f2737ba103a37b5b2b71037bbb732b91760811b60448201526064016106e4565b6000828152602081905260409020544211610f2e5760405162461bcd60e51b815260206004820152601060248201526f2a37b5b2b7103ab732bc3834b932b21760811b60448201526064016106e4565b6000610f3b601254612006565b905080341015610f8d5760405162461bcd60e51b815260206004820181905260248201527f5072696365206c6f776572207468616e20726564656d7074696f6e207461782e60448201526064016106e4565b60008115610fda57610f9f8234612ae8565b6040519091506001600160a01b0386169082156108fc029083906000818181858888f19350505050158015610fd8573d6000803e3d6000fd5b505b610fe4848461169b565b604051839085907f6f73b7b8d37df32ea60a45eadc8fc3d2d716d705ee099bd506817482ce84731690600090a350506013805460ff19169055505050565b61102b816111cb565b6001600160a01b0316336001600160a01b03161461108b5760405162461bcd60e51b815260206004820152601a60248201527f6275726e3a2073656e646572206d757374206265206f776e657200000000000060448201526064016106e4565b61109481612042565b50565b61109f611da7565b806110b26009546001600160a01b031690565b6001600160a01b0316816001600160a01b0316146110e25760405162461bcd60e51b81526004016106e4906129f5565b6001600160a01b0382166111385760405162461bcd60e51b815260206004820152601860248201527f53656e64696e6720746f207a65726f20616464726573732e000000000000000060448201526064016106e4565b600d5447101561118a5760405162461bcd60e51b815260206004820152601c60248201527f526576656e756520213d20436f6e74726163742062616c616e63652e0000000060448201526064016106e4565b600d546040516001600160a01b0384169180156108fc02916000818181858888f193505050501580156111c1573d6000803e3d6000fd5b50506000600d5550565b6000818152600360205260408120546001600160a01b0316806107925760405162461bcd60e51b815260206004820152601c60248201527f6f776e65724f663a20746f6b656e20646f65736e27742065786973740000000060448201526064016106e4565b60006001600160a01b03821661129d5760405162461bcd60e51b815260206004820152602c60248201527f62616c616e63654f663a2061646472657373207a65726f206973206e6f74206160448201526b103b30b634b21037bbb732b960a11b60648201526084016106e4565b506001600160a01b031660009081526005602052604090205490565b6112c1611da7565b6112cb60006120e9565b565b6112d5611da7565b816112e86009546001600160a01b031690565b6001600160a01b0316816001600160a01b0316146113185760405162461bcd60e51b81526004016106e4906129f5565b6109d58261213b565b6060600280546107a790612a23565b611338611da7565b8561134b6009546001600160a01b031690565b6001600160a01b0316816001600160a01b03161461137b5760405162461bcd60e51b81526004016106e4906129f5565b60135460ff161561138b57600080fd5b6013805460ff191660011790556113a28383611952565b6113e85760405162461bcd60e51b81526020600482015260176024820152762430b9b4103737ba1039b4b3b732b210313c903cb7ba9760491b60448201526064016106e4565b6113f3868686610d52565b50506013805460ff191690555050505050565b61140e611da7565b856114216009546001600160a01b031690565b6001600160a01b0316816001600160a01b0316146114515760405162461bcd60e51b81526004016106e4906129f5565b60135460ff161561146157600080fd5b6013805460ff191660011790556114788383611952565b6114be5760405162461bcd60e51b81526020600482015260176024820152762430b9b4103737ba1039b4b3b732b210313c903cb7ba9760491b60448201526064016106e4565b6113f3868686611a93565b6114d1611da7565b836114e46009546001600160a01b031690565b6001600160a01b0316816001600160a01b0316146115145760405162461bcd60e51b81526004016106e4906129f5565b600a54600b541061155c5760405162461bcd60e51b815260206004820152601260248201527124b9b9bab29021b0b8102932b0b1b432b21760711b60448201526064016106e4565b6001600160a01b0384166115825760405162461bcd60e51b81526004016106e490612ab9565b61158b83611e01565b156115d85760405162461bcd60e51b815260206004820152601f60248201527f4d696e74206f6620616c7265616479206578697374696e6720746f6b656e2e0060448201526064016106e4565b60008381526010602052604090205460ff16156116375760405162461bcd60e51b815260206004820152601e60248201527f4d696e74206f6620616c72656164792070656e64696e6720746f6b656e2e000060448201526064016106e4565b6000838152601060209081526040808320805460ff191660011790556011909152902080546001600160a01b0386166001600160a01b031990911617905561167f838361169b565b600b805490600061168f83612aff565b91905055505050505050565b6116a58142612b18565b600083815260208181526040918290209290925580518481529182018390527f41a73beb1018a8b63e0f451a8a4f483806142cf14be45b1a58a23776a1e9b4bc910160405180910390a15050565b60606116fe82611e01565b61174a5760405162461bcd60e51b815260206004820152601d60248201527f746f6b656e5552493a20746f6b656e20646f65736e277420657869737400000060448201526064016106e4565b6000828152600460205260409020805461176390612a23565b80601f016020809104026020016040519081016040528092919081815260200182805461178f90612a23565b80156117dc5780601f106117b1576101008083540402835291602001916117dc565b820191906000526020600020905b8154815290600101906020018083116117bf57829003601f168201915b50505050509050919050565b6060600780546117f790612a23565b90506000036118385760405162461bcd60e51b815260206004820152600d60248201526c456d707479206261736555524960981b60448201526064016106e4565b600780546107a790612a23565b6001600160a01b03851661186b5760405162461bcd60e51b81526004016106e490612ab9565b82516041146118b75760405162461bcd60e51b8152602060048201526018602482015277092dcecc2d8d2c840e6d2cedcc2e8eae4ca40d8cadccee8d60431b60448201526064016106e4565b6118c18484611952565b6119095760405162461bcd60e51b81526020600482015260196024820152782430b9b4103737ba1039b4b3b732b210313c9037bbb732b91760391b60448201526064016106e4565b611914858383611fef565b5060405182906001600160a01b038716907f79af0e59b31823dd289ceebabc4d63d25f35926b8548e3a084a500c9d4e1855690600090a35050505050565b600061195e838361218d565b9392505050565b60008181526020819052604081205442111561198357506000919050565b600082815260208190526040902054610792904290612ae8565b919050565b602081810151604080840151606080860151835160008082528188018087528a905291821a81860181905292810186905260808101849052935190959293919260019260a080820193601f1981019281900390910190855afa158015611a0c573d6000803e3d6000fd5b505050602060405103516001600160a01b0316876001600160a01b03161493505050509392505050565b611a3e611da7565b600a54600b5410611a865760405162461bcd60e51b815260206004820152601260248201527124b9b9bab29021b0b8102932b0b1b432b21760711b60448201526064016106e4565b61167f8585858585611845565b611a9b611da7565b60135460ff1615611aab57600080fd5b6013805460ff191660011790556001600160a01b038316611b0e5760405162461bcd60e51b815260206004820152601b60248201527f526564656d7074696f6e20746f207a65726f20616464726573732e000000000060448201526064016106e4565b611b1782611e01565b15611b645760405162461bcd60e51b815260206004820152601d60248201527f526564656d7074696f6e206f66206578697374696e6720746f6b656e2e00000060448201526064016106e4565b60008281526010602052604090205460ff16611bbc5760405162461bcd60e51b815260206004820152601760248201527620b63932b0b23c903932b1b2b4bb32b2103a37b5b2b71760491b60448201526064016106e4565b6000828152601160205260409020546001600160a01b03848116911614610ede5760405162461bcd60e51b81526020600482015260156024820152742737ba103832b73234b733903932b1b2b4bb32b91760591b60448201526064016106e4565b611c25611da7565b6001600160a01b038116611c8a5760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b60648201526084016106e4565b611094816120e9565b60006001600160a01b038316611ceb5760405162461bcd60e51b815260206004820152601760248201527f517565727920666f72207a65726f20616464726573732e00000000000000000060448201526064016106e4565b611cf482611e01565b611d365760405162461bcd60e51b81526020600482015260136024820152722737b716b2bc34b9ba32b73a103a37b5b2b71760691b60448201526064016106e4565b826001600160a01b0316611d49836111cb565b6001600160a01b031614611d9f5760405162461bcd60e51b815260206004820152601a60248201527f546f6b656e206e6f74206f776e6564206279206164647265737300000000000060448201526064016106e4565b503092915050565b6006546001600160a01b031633146112cb5760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064016106e4565b6000908152600360205260409020546001600160a01b0316151590565b6000611e2982611e01565b611e6b5760405162461bcd60e51b81526020600482015260136024820152722737b716b2bc34b9ba32b73a103a37b5b2b71760691b60448201526064016106e4565b826001600160a01b0316611e7e836111cb565b6001600160a01b031614611ed45760405162461bcd60e51b815260206004820152601a60248201527f546f6b656e206e6f74206f776e6564206279206164647265737300000000000060448201526064016106e4565b611edd82612310565b50600192915050565b606081600003611f0d5750506040805180820190915260018152600360fc1b602082015290565b8160005b8115611f375780611f2181612aff565b9150611f309050600a83612b46565b9150611f11565b60008167ffffffffffffffff811115611f5257611f5261265f565b6040519080825280601f01601f191660200182016040528015611f7c576020820181803683370190505b5090505b8415611fe757611f91600183612ae8565b9150611f9e600a86612b5a565b611fa9906030612b18565b60f81b818381518110611fbe57611fbe612b6e565b60200101906001600160f81b031916908160001a905350611fe0600a86612b46565b9450611f80565b949350505050565b6000611ffc8484846123a6565b5060019392505050565b600064746a528800600d54101561201c57600091505b6103e8600d548361202d9190612b84565b61203890600a612b84565b6107929190612b46565b600061204d826111cb565b6001600160a01b0381166000908152600560205260408120805492935060019290919061207b908490612ae8565b9091555050600082815260036020908152604080832080546001600160a01b0319169055600490915281206120af91612543565b60405182906001600160a01b038316907fec9ab91322523c899ede7830ec9bfc992b5981cdcc27b91162fb23de5791117b90600090a35050565b600680546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b805160000361217d5760405162461bcd60e51b815260206004820152600e60248201526d092dcecc2d8d2c840d8cadccee8d60931b60448201526064016106e4565b60076121898282612bf1565b5050565b6000612197611da7565b6006546001600160a01b031633146122055760405162461bcd60e51b815260206004820152602b60248201527f4552433732313a3a2043616c6c20746f20636f6e7472616374206d616465206260448201526a3c903737b716b7bbb732b960a91b60648201526084016106e4565b81516041146122565760405162461bcd60e51b815260206004820152601e60248201527f4572723a3a20496e76616c6964207369676e6174757265206c656e677468000060448201526064016106e4565b602082810151604080850151606080870151835160008082529681018086528a905290861a938101849052908101849052608081018290529293909260019060a0016020604051602081039080840390855afa1580156122ba573d6000803e3d6000fd5b5050604051601f198101516009549093506001600160a01b038085169116149150819089907f7e4fe2a2a805a357593fdbdde58c02f6a53d8b4960744cd31a98697fc11c2e3690600090a3979650505050505050565b61231981611e01565b6123655760405162461bcd60e51b815260206004820152601860248201527f4275726e206f6620696e6578697374656e7420746f6b656e000000000000000060448201526064016106e4565b6000612370826111cb565b905061237b82612042565b6001600160a01b0316600090815260086020908152604080832093835292905220805460ff19169055565b6001600160a01b0383166123cc5760405162461bcd60e51b81526004016106e490612ab9565b805160000361240f5760405162461bcd60e51b815260206004820152600f60248201526e22b6b83a3c903a37b5b2b72aa9249760891b60448201526064016106e4565b61241a83838361244c565b50506001600160a01b03909116600090815260086020908152604080832093835292905220805460ff19166001179055565b600061245783611e01565b1561249b5760405162461bcd60e51b81526020600482015260146024820152736d696e743a20746f6b656e49442065786973747360601b60448201526064016106e4565b6001600160a01b03841660009081526005602052604081208054600192906124c4908490612b18565b9091555050600083815260036020908152604080832080546001600160a01b0319166001600160a01b038916179055600490915290206125048382612bf1565b5060405183906001600160a01b038616907fe9274a84b19e9428826de6bae8c48329354f8f0e73f771b97cae2d9dccd45a2790600090a3509092915050565b50805461254f90612a23565b6000825580601f1061255f575050565b601f01602090049060005260206000209081019061109491905b8082111561258d5760008155600101612579565b5090565b80356001600160a01b038116811461199d57600080fd5b600080604083850312156125bb57600080fd5b6125c483612591565b946020939093013593505050565b6000602082840312156125e457600080fd5b81356001600160e01b03198116811461195e57600080fd5b60005b838110156126175781810151838201526020016125ff565b83811115612626576000848401525b50505050565b602081526000825180602084015261264b8160408501602087016125fc565b601f01601f19169190910160400192915050565b634e487b7160e01b600052604160045260246000fd5b600082601f83011261268657600080fd5b813567ffffffffffffffff808211156126a1576126a161265f565b604051601f8301601f19908116603f011681019082821181831017156126c9576126c961265f565b816040528381528660208588010111156126e257600080fd5b836020870160208301376000602085830101528094505050505092915050565b60008060006060848603121561271757600080fd5b83359250602084013567ffffffffffffffff81111561273557600080fd5b61274186828701612675565b925050604084013590509250925092565b60006020828403121561276457600080fd5b5035919050565b60008060006060848603121561278057600080fd5b61278984612591565b95602085013595506040909401359392505050565b6000602082840312156127b057600080fd5b61195e82612591565b600080604083850312156127cc57600080fd5b6127d583612591565b9150602083013567ffffffffffffffff8111156127f157600080fd5b6127fd85828601612675565b9150509250929050565b60008060008060008060c0878903121561282057600080fd5b61282987612591565b955061283760208801612591565b945060408701359350606087013592506080870135915060a087013567ffffffffffffffff81111561286857600080fd5b61287489828a01612675565b9150509295509295509295565b6000806000806080858703121561289757600080fd5b6128a085612591565b93506128ae60208601612591565b93969395505050506040820135916060013590565b600080604083850312156128d657600080fd5b50508035926020909101359150565b600080600080600060a086880312156128fd57600080fd5b61290686612591565b945060208601359350604086013567ffffffffffffffff8082111561292a57600080fd5b61293689838a01612675565b945060608801359350608088013591508082111561295357600080fd5b5061296088828901612675565b9150509295509295909350565b6000806040838503121561298057600080fd5b82359150602083013567ffffffffffffffff8111156127f157600080fd5b6000806000606084860312156129b357600080fd5b6129bc84612591565b925060208401359150604084013567ffffffffffffffff8111156129df57600080fd5b6129eb86828701612675565b9150509250925092565b6020808252601490820152734e6f7420416c6c6f776c697374204f776e65722160601b604082015260600190565b600181811c90821680612a3757607f821691505b602082108103612a5757634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052601160045260246000fd5b600081612a8257612a82612a5d565b506000190190565b60008351612a9c8184602088016125fc565b835190830190612ab08183602088016125fc565b01949350505050565b60208082526015908201527426b4b73a103a37903d32b9379030b2323932b9b99760591b604082015260600190565b600082821015612afa57612afa612a5d565b500390565b600060018201612b1157612b11612a5d565b5060010190565b60008219821115612b2b57612b2b612a5d565b500190565b634e487b7160e01b600052601260045260246000fd5b600082612b5557612b55612b30565b500490565b600082612b6957612b69612b30565b500690565b634e487b7160e01b600052603260045260246000fd5b6000816000190483118215151615612b9e57612b9e612a5d565b500290565b601f8211156109d557600081815260208120601f850160051c81016020861015612bca5750805b601f850160051c820191505b81811015612be957828155600101612bd6565b505050505050565b815167ffffffffffffffff811115612c0b57612c0b61265f565b612c1f81612c198454612a23565b84612ba3565b602080601f831160018114612c545760008415612c3c5750858301515b600019600386901b1c1916600185901b178555612be9565b600085815260208120601f198616915b82811015612c8357888601518255948401946001909101908401612c64565b5085821015612ca15787850151600019600388901b60f8161c191681555b5050505050600190811b0190555056fea26469706673582212201a53a488ad12961ce9413755b43007bbc5c91894a6d07511508f80a7be28aa9f64736f6c634300080f0033",
  "bytecodeSha1": "2033ec8a2990ea735de6c27da8a1e49e3dc61d65",
  "compiler": {
    "evm_version": "istanbul",
    "optimizer": {
      "enabled": true,
      "runs": 200
    },
    "version": "0.8.15+commit.e14f2714"
  },
  "contractName": "SoulboundRedeemable",
  "coverageMap": {
    "branches": {
      "0": {
        "Allowlist._verifySignature": {
          "165": [
            3699,
            3722,
            true
          ],
          "166": [
            3870,
            3886,
            true
          ]
        }
      },
      "1": {
        "IsValidWithDate.getTimeLeft": {
          "171": [
            2223,
            2263,
            false
          ]
        }
      },
      "2": {
        "Ownable._checkOwner": {
          "173": [
            1725,
            1748,
            true
          ]
        },
        "Ownable.transferOwnership": {
          "172": [
            2489,
            2511,
            true
          ]
        }
      },
      "3": {
        "Soulbound._getBaseURI": {
          "174": [
            7473,
            7499,
            true
          ]
        },
        "Soulbound._setBaseURI": {
          "180": [
            7071,
            7098,
            true
          ]
        },
        "Soulbound.burnSoulboundToken": {
          "181": [
            6489,
            6505,
            true
          ]
        },
        "Soulbound.issuerOf": {
          "175": [
            4425,
            4442,
            true
          ],
          "176": [
            4527,
            4544,
            true
          ],
          "177": [
            4637,
            4661,
            true
          ]
        },
        "Soulbound.mintSoulboundToken": {
          "182": [
            5746,
            5762,
            true
          ],
          "183": [
            5928,
            5955,
            true
          ]
        },
        "Soulbound.revoke": {
          "178": [
            3457,
            3474,
            true
          ],
          "179": [
            3569,
            3595,
            true
          ]
        }
      },
      "4": {
        "Allowlist.getAllowlistOwner": {
          "188": [
            1658,
            1688,
            true
          ]
        },
        "SoulboundCore.generateTokenURI": {
          "187": [
            6256,
            6288,
            true
          ]
        },
        "SoulboundCore.issueWithSignature": {
          "189": [
            3024,
            3042,
            true
          ],
          "190": [
            3303,
            3319,
            true
          ],
          "191": [
            3475,
            3501,
            true
          ]
        },
        "SoulboundCore.revokeWithSignature": {
          "184": [
            4414,
            4430,
            true
          ],
          "185": [
            4697,
            4713,
            true
          ],
          "186": [
            4869,
            4895,
            true
          ]
        },
        "SoulboundCore.toString": {
          "192": [
            6886,
            6896,
            false
          ]
        }
      },
      "5": {
        "SoulboundRedeemable.calculateTax": {
          "164": [
            15054,
            15077,
            false
          ]
        },
        "SoulboundRedeemable.mintPendingRedeemableToken": {
          "156": [
            4428,
            4448,
            true
          ],
          "157": [
            4542,
            4558,
            true
          ],
          "158": [
            4661,
            4678,
            true
          ],
          "159": [
            4800,
            4817,
            true
          ]
        },
        "SoulboundRedeemable.payToReceiveToken": {
          "140": [
            5739,
            5762,
            true
          ],
          "141": [
            5866,
            5883,
            true
          ],
          "142": [
            5996,
            6012,
            true
          ],
          "143": [
            6171,
            6209,
            true
          ],
          "144": [
            6474,
            6497,
            true
          ],
          "145": [
            6690,
            6712,
            false
          ]
        },
        "SoulboundRedeemable.redeemMintedToken": {
          "146": [
            10300,
            10323,
            true
          ],
          "147": [
            10419,
            10435,
            true
          ],
          "148": [
            10549,
            10566,
            true
          ],
          "149": [
            10680,
            10709,
            true
          ],
          "150": [
            10988,
            11005,
            true
          ],
          "151": [
            11155,
            11164,
            false
          ]
        },
        "SoulboundRedeemable.redeemMintedTokenWithSignature": {
          "154": [
            13620,
            13646,
            true
          ]
        },
        "SoulboundRedeemable.redeemPendingToken": {
          "160": [
            8274,
            8297,
            true
          ],
          "161": [
            8393,
            8410,
            true
          ],
          "162": [
            8520,
            8536,
            true
          ],
          "163": [
            8653,
            8691,
            true
          ]
        },
        "SoulboundRedeemable.redeemPendingTokenWithSignature": {
          "155": [
            12483,
            12509,
            true
          ]
        },
        "SoulboundRedeemable.setPrice": {
          "139": [
            3337,
            3362,
            true
          ]
        },
        "SoulboundRedeemable.withdraw": {
          "152": [
            14280,
            14301,
            true
          ],
          "153": [
            14432,
            14469,
            true
          ]
        }
      },
      "6": {
        "SoulboundWithSignature.ownerIssueWithSignature": {
          "194": [
            1932,
            1952,
            true
          ]
        },
        "SoulboundWithSignature.ownerRevokeWithSignature": {
          "193": [
            3358,
            3369,
            false
          ]
        }
      },
      "7": {
        "ERC4973._mint": {
          "170": [
            5760,
            5777,
            true
          ]
        },
        "ERC4973.balanceOf": {
          "168": [
            5200,
            5219,
            true
          ]
        },
        "ERC4973.burn": {
          "167": [
            5015,
            5045,
            true
          ]
        },
        "ERC4973.tokenURI": {
          "169": [
            4855,
            4871,
            true
          ]
        }
      },
      "8": {}
    },
    "statements": {
      "0": {
        "Allowlist._verifySignature": {
          "122": [
            3678,
            3792
          ],
          "123": [
            3862,
            3921
          ],
          "124": [
            4348,
            4398
          ],
          "125": [
            4444,
            4473
          ]
        },
        "Allowlist.getAllowlistOwner": {
          "2": [
            2086,
            2107
          ]
        },
        "Allowlist.verifySignature": {
          "80": [
            2436,
            2470
          ]
        },
        "Allowlist.verifySigner": {
          "83": [
            4866,
            4910
          ]
        }
      },
      "1": {
        "IsValidWithDate.extendExpiry": {
          "69": [
            1022,
            1071
          ],
          "70": [
            1125,
            1153
          ]
        },
        "IsValidWithDate.getExpiryDate": {
          "1": [
            1437,
            1468
          ]
        },
        "IsValidWithDate.getTimeLeft": {
          "81": [
            2310,
            2318
          ],
          "82": [
            2421,
            2468
          ]
        },
        "IsValidWithDate.isValid": {
          "5": [
            1770,
            1818
          ]
        }
      },
      "2": {
        "Ownable._checkOwner": {
          "97": [
            1717,
            1785
          ]
        },
        "Ownable._msgSender": {
          "96": [
            3050,
            3067
          ]
        },
        "Ownable._transferOwnership": {
          "118": [
            2865,
            2882
          ],
          "119": [
            2892,
            2937
          ]
        },
        "Ownable.owner": {
          "3": [
            1571,
            1584
          ]
        },
        "Ownable.renounceOwnership": {
          "54": [
            2211,
            2241
          ]
        },
        "Ownable.transferOwnership": {
          "90": [
            2481,
            2554
          ],
          "91": [
            2564,
            2592
          ]
        }
      },
      "3": {
        "Soulbound._getBaseURI": {
          "73": [
            7465,
            7517
          ],
          "74": [
            7560,
            7578
          ]
        },
        "Soulbound._setBaseURI": {
          "120": [
            7063,
            7117
          ],
          "121": [
            7157,
            7175
          ]
        },
        "Soulbound.burnSoulboundToken": {
          "126": [
            6481,
            6534
          ],
          "127": [
            6670,
            6684
          ],
          "128": [
            6741,
            6776
          ]
        },
        "Soulbound.isMinted": {
          "0": [
            5268,
            5295
          ]
        },
        "Soulbound.issue": {
          "110": [
            2360,
            2451
          ],
          "111": [
            2491,
            2502
          ]
        },
        "Soulbound.issuerOf": {
          "92": [
            4417,
            4470
          ],
          "93": [
            4519,
            4568
          ],
          "94": [
            4629,
            4692
          ],
          "95": [
            4741,
            4761
          ]
        },
        "Soulbound.mintSoulboundToken": {
          "129": [
            5738,
            5788
          ],
          "130": [
            5920,
            5975
          ],
          "131": [
            6090,
            6118
          ],
          "132": [
            6174,
            6199
          ]
        },
        "Soulbound.revoke": {
          "99": [
            3449,
            3498
          ],
          "100": [
            3561,
            3626
          ],
          "101": [
            3669,
            3697
          ],
          "102": [
            3737,
            3748
          ]
        }
      },
      "4": {
        "SoulboundCore.generateTokenURI": {
          "20": [
            6248,
            6306
          ],
          "21": [
            6366,
            6470
          ]
        },
        "SoulboundCore.issueWithSignature": {
          "75": [
            3016,
            3068
          ],
          "76": [
            3295,
            3348
          ],
          "77": [
            3467,
            3531
          ],
          "78": [
            3630,
            3660
          ],
          "79": [
            3722,
            3760
          ]
        },
        "SoulboundCore.revokeWithSignature": {
          "12": [
            4406,
            4462
          ],
          "13": [
            4689,
            4742
          ],
          "14": [
            4861,
            4925
          ],
          "15": [
            5024,
            5057
          ],
          "16": [
            5120,
            5153
          ]
        },
        "SoulboundCore.setBaseURI": {
          "55": [
            5654,
            5675
          ]
        },
        "SoulboundCore.toString": {
          "103": [
            6912,
            6922
          ],
          "104": [
            7028,
            7036
          ],
          "105": [
            7050,
            7060
          ],
          "106": [
            7162,
            7173
          ],
          "107": [
            7187,
            7243
          ],
          "108": [
            7257,
            7268
          ],
          "109": [
            7288,
            7309
          ]
        }
      },
      "5": {
        "SoulboundRedeemable.calculateTax": {
          "112": [
            15128,
            15136
          ],
          "113": [
            15213,
            15254
          ]
        },
        "SoulboundRedeemable.getIndividualTokenPrice": {
          "6": [
            2533,
            2557
          ]
        },
        "SoulboundRedeemable.getPriceLimit": {
          "4": [
            2815,
            2839
          ]
        },
        "SoulboundRedeemable.mintPendingRedeemableToken": {
          "61": [
            4420,
            4471
          ],
          "62": [
            4534,
            4584
          ],
          "63": [
            4653,
            4714
          ],
          "64": [
            4792,
            4852
          ],
          "65": [
            4918,
            4941
          ],
          "66": [
            5015,
            5045
          ],
          "67": [
            5109,
            5148
          ],
          "68": [
            5193,
            5201
          ]
        },
        "SoulboundRedeemable.payToReceiveToken": {
          "22": [
            5731,
            5788
          ],
          "23": [
            5858,
            5919
          ],
          "24": [
            5988,
            6040
          ],
          "25": [
            6163,
            6235
          ],
          "26": [
            6310,
            6379
          ],
          "27": [
            6466,
            6530
          ],
          "28": [
            6791,
            6823
          ],
          "29": [
            6891,
            6927
          ],
          "30": [
            7106,
            7188
          ],
          "31": [
            7237,
            7249
          ],
          "32": [
            7302,
            7328
          ],
          "33": [
            7387,
            7411
          ],
          "34": [
            7467,
            7499
          ]
        },
        "SoulboundRedeemable.redeemMintedToken": {
          "35": [
            10292,
            10355
          ],
          "36": [
            10411,
            10473
          ],
          "37": [
            10541,
            10591
          ],
          "38": [
            10672,
            10730
          ],
          "39": [
            10788,
            10834
          ],
          "40": [
            10980,
            11042
          ],
          "41": [
            11231,
            11257
          ],
          "42": [
            11309,
            11345
          ],
          "43": [
            11409,
            11448
          ],
          "44": [
            11500,
            11540
          ]
        },
        "SoulboundRedeemable.redeemMintedTokenWithSignature": {
          "57": [
            13612,
            13674
          ],
          "58": [
            13714,
            13815
          ]
        },
        "SoulboundRedeemable.redeemPendingToken": {
          "86": [
            8266,
            8329
          ],
          "87": [
            8385,
            8444
          ],
          "88": [
            8512,
            8564
          ],
          "89": [
            8645,
            8717
          ]
        },
        "SoulboundRedeemable.redeemPendingTokenWithSignature": {
          "59": [
            12475,
            12537
          ],
          "60": [
            12577,
            12679
          ]
        },
        "SoulboundRedeemable.setPrice": {
          "7": [
            3329,
            3391
          ],
          "8": [
            3429,
            3448
          ]
        },
        "SoulboundRedeemable.withdraw": {
          "47": [
            14272,
            14330
          ],
          "48": [
            14424,
            14502
          ],
          "49": [
            14573,
            14612
          ],
          "50": [
            14666,
            14682
          ]
        }
      },
      "6": {
        "SoulboundWithSignature.ownerIssueWithSignature": {
          "84": [
            1924,
            1975
          ],
          "85": [
            2024,
            2148
          ]
        },
        "SoulboundWithSignature.ownerRevokeWithSignature": {
          "17": [
            3424,
            3432
          ],
          "18": [
            3513,
            3544
          ],
          "19": [
            3605,
            3690
          ]
        }
      },
      "7": {
        "ERC165.supportsInterface": {
          "10": [
            1678,
            1725
          ]
        },
        "ERC4973._burn": {
          "114": [
            6037,
            6058
          ],
          "115": [
            6064,
            6087
          ],
          "116": [
            6093,
            6119
          ],
          "117": [
            6126,
            6153
          ]
        },
        "ERC4973._exists": {
          "98": [
            5586,
            5623
          ]
        },
        "ERC4973._mint": {
          "133": [
            5752,
            5802
          ],
          "134": [
            5808,
            5826
          ],
          "135": [
            5832,
            5853
          ],
          "136": [
            5859,
            5884
          ],
          "137": [
            5890,
            5914
          ],
          "138": [
            5920,
            5934
          ]
        },
        "ERC4973.balanceOf": {
          "52": [
            5192,
            5268
          ],
          "53": [
            5274,
            5297
          ]
        },
        "ERC4973.burn": {
          "45": [
            5007,
            5076
          ],
          "46": [
            5082,
            5096
          ]
        },
        "ERC4973.name": {
          "11": [
            4632,
            4644
          ]
        },
        "ERC4973.ownerOf": {
          "51": [
            5422,
            5482
          ]
        },
        "ERC4973.supportsInterface": {
          "9": [
            4390,
            4548
          ]
        },
        "ERC4973.symbol": {
          "56": [
            4730,
            4744
          ]
        },
        "ERC4973.tokenURI": {
          "71": [
            4847,
            4905
          ],
          "72": [
            4911,
            4937
          ]
        }
      },
      "8": {}
    }
  },
  "dependencies": [
    "Allowlist",
    "ERC165",
    "ERC4973",
    "IAllowlist",
    "IERC165",
    "IERC4973",
    "IERC721Metadata",
    "IsValidWithDate",
    "Ownable",
    "Soulbound",
    "SoulboundCore",
    "SoulboundWithSignature"
  ],
  "deployedBytecode": "60806040526004361061020e5760003560e01c806395d89b4111610118578063daca6f78116100a0578063ed7347301161006f578063ed73473014610601578063f2fde38b14610614578063f577a50014610634578063fad54de714610664578063fb8f198d1461067957600080fd5b8063daca6f7814610581578063e8c58763146105a1578063e92b0842146105c1578063ea5353c7146105e157600080fd5b8063bd97a6ad116100e7578063bd97a6ad146104ec578063c3cab38a1461050c578063c87b56dd1461052c578063c9dd94c71461054c578063c9e4c54d1461056157600080fd5b806395d89b411461049c578063983a8b94146104b1578063a0b97daa146104c4578063bd131786146104d957600080fd5b806351cff8d91161019b5780636e0a87461161016a5780636e0a87461461040b57806370a0823114610429578063715018a614610449578063884336511461045e5780638da5cb5b1461047e57600080fd5b806351cff8d9146103325780635899e7b2146103525780636352211e146103985780636833f200146103d057600080fd5b80631f04d135116101e25780631f04d135146102ac578063210fa96b146102cc57806333e085c1146102ec5780633d1a350e146102ff57806342966c681461031257600080fd5b8062e4768b1461021357806301ffc9a71461023557806306fdde031461026a57806308c92e571461028c575b600080fd5b34801561021f57600080fd5b5061023361022e3660046125a8565b610699565b005b34801561024157600080fd5b506102556102503660046125d2565b610746565b60405190151581526020015b60405180910390f35b34801561027657600080fd5b5061027f610798565b604051610261919061262c565b34801561029857600080fd5b506102336102a7366004612702565b61082a565b3480156102b857600080fd5b506102336102c7366004612702565b610960565b3480156102d857600080fd5b5061027f6102e7366004612752565b6109da565b6102336102fa3660046125a8565b610a5c565b61023361030d36600461276b565b610d52565b34801561031e57600080fd5b5061023361032d366004612752565b611022565b34801561033e57600080fd5b5061023361034d36600461279e565b611097565b34801561035e57600080fd5b5061025561036d3660046125a8565b6001600160a01b03919091166000908152600860209081526040808320938352929052205460ff1690565b3480156103a457600080fd5b506103b86103b3366004612752565b6111cb565b6040516001600160a01b039091168152602001610261565b3480156103dc57600080fd5b506103fd6103eb366004612752565b60009081526020819052604090205490565b604051908152602001610261565b34801561041757600080fd5b506009546001600160a01b03166103b8565b34801561043557600080fd5b506103fd61044436600461279e565b611230565b34801561045557600080fd5b506102336112b9565b34801561046a57600080fd5b506102336104793660046127b9565b6112cd565b34801561048a57600080fd5b506006546001600160a01b03166103b8565b3480156104a857600080fd5b5061027f611321565b6102336104bf366004612807565b611330565b3480156104d057600080fd5b50600e546103fd565b6102336104e7366004612807565b611406565b3480156104f857600080fd5b50610233610507366004612881565b6114c9565b34801561051857600080fd5b506102336105273660046128c3565b61169b565b34801561053857600080fd5b5061027f610547366004612752565b6116f3565b34801561055857600080fd5b5061027f6117e8565b34801561056d57600080fd5b5061023361057c3660046128e5565b611845565b34801561058d57600080fd5b5061025561059c36600461296d565b611952565b3480156105ad57600080fd5b506103fd6105bc366004612752565b611965565b3480156105cd57600080fd5b506102556105dc36600461299e565b6119a2565b3480156105ed57600080fd5b506102336105fc3660046128e5565b611a36565b61023361060f36600461276b565b611a93565b34801561062057600080fd5b5061023361062f36600461279e565b611c1d565b34801561064057600080fd5b5061025561064f366004612752565b60009081526020819052604090205442111590565b34801561067057600080fd5b50600f546103fd565b34801561068557600080fd5b506103b86106943660046125a8565b611c93565b6106a1611da7565b816106b46009546001600160a01b031690565b6001600160a01b0316816001600160a01b0316146106ed5760405162461bcd60e51b81526004016106e4906129f5565b60405180910390fd5b600e5482111561073f5760405162461bcd60e51b815260206004820152601860248201527f507269636520686967686572207468616e206c696d69742e000000000000000060448201526064016106e4565b50600f5550565b60006001600160e01b03198216635b5e139f60e01b148061077757506001600160e01b03198216635164cf4760e01b145b8061079257506301ffc9a760e01b6001600160e01b03198316145b92915050565b6060600180546107a790612a23565b80601f01602080910402602001604051908101604052809291908181526020018280546107d390612a23565b80156108205780601f106107f557610100808354040283529160200191610820565b820191906000526020600020905b81548152906001019060200180831161080357829003601f168201915b5050505050905090565b61083381611e01565b61087f5760405162461bcd60e51b815260206004820152601b60248201527f5265766f6b65206f6620696e6578697374656e7420746f6b656e2e000000000060448201526064016106e4565b81516041146108cb5760405162461bcd60e51b8152602060048201526018602482015277092dcecc2d8d2c840e6d2cedcc2e8eae4ca40d8cadccee8d60431b60448201526064016106e4565b6108d58383611952565b61091d5760405162461bcd60e51b81526020600482015260196024820152782430b9b4103737ba1039b4b3b732b210313c9037bbb732b91760391b60448201526064016106e4565b61092f610929826111cb565b82611e1e565b5060405181907ff947bf2266afede98f27ad2312db8b2a17921852307f979b6f14a2b41fa774bc90600090a2505050565b610968611da7565b600b541561098a57600b805490600061098083612a73565b91905055506109ca565b60405162461bcd60e51b81526020600482015260156024820152742637bbb2b9ba103634b6b4ba103932b0b1b432b21760591b60448201526064016106e4565b6109d583838361082a565b505050565b60606109e46117e8565b51600003610a245760405162461bcd60e51b815260206004820152600d60248201526c456d707479206261736555524960981b60448201526064016106e4565b610a2c6117e8565b610a3583611ee6565b604051602001610a46929190612a8a565b6040516020818303038152906040529050919050565b610a64611da7565b60135460ff1615610a7457600080fd5b6013805460ff191660011790556001600160a01b038216610aa75760405162461bcd60e51b81526004016106e490612ab9565b610ab081611e01565b15610afd5760405162461bcd60e51b815260206004820152601f60248201527f4d696e74206f6620616c7265616479206578697374696e6720746f6b656e2e0060448201526064016106e4565b60008181526010602052604090205460ff16610b555760405162461bcd60e51b815260206004820152601760248201527620b63932b0b23c903932b1b2b4bb32b2103a37b5b2b71760491b60448201526064016106e4565b6000818152601160205260409020546001600160a01b03838116911614610bb65760405162461bcd60e51b81526020600482015260156024820152742737ba103832b73234b733903932b1b2b4bb32b91760591b60448201526064016106e4565b600081815260208190526040902054421115610c255760405162461bcd60e51b815260206004820152602860248201527f526563656976616c206f66206578706972656420746f6b656e2c20726564656560448201526736903a37b5b2b71760c11b60648201526084016106e4565b600f54341015610c775760405162461bcd60e51b815260206004820152601c60248201527f5072696365206c6f776572207468616e20746f6b656e20636f73742e0000000060448201526064016106e4565b6000600f54341115610ccb57600f54610c909034612ae8565b6040519091506001600160a01b0384169082156108fc029083906000818181858888f19350505050158015610cc9573d6000803e3d6000fd5b505b6000610cd6836109da565b9050610ce3848483611fef565b50600c8054906000610cf483612aff565b9190505550600f54600d6000828254610d0d9190612b18565b909155505050600091825250601060209081526040808320805460ff19908116909155601190925290912080546001600160a01b031916905560138054909116905550565b610d5a611da7565b60135460ff1615610d6a57600080fd5b6013805460ff191660011790556001600160a01b038316610dcd5760405162461bcd60e51b815260206004820152601b60248201527f526564656d7074696f6e20746f207a65726f20616464726573732e000000000060448201526064016106e4565b610dd682611e01565b610e2c5760405162461bcd60e51b815260206004820152602160248201527f526564656d7074696f6e206f66206e6f6e2d6578697374696e6720746f6b656e6044820152601760f91b60648201526084016106e4565b60008281526010602052604090205460ff1615610e825760405162461bcd60e51b81526020600482015260146024820152732a37b5b2b71039ba34b636103832b73234b7339760611b60448201526064016106e4565b826001600160a01b0316610e95836111cb565b6001600160a01b031614610ede5760405162461bcd60e51b815260206004820152601060248201526f2737ba103a37b5b2b71037bbb732b91760811b60448201526064016106e4565b6000828152602081905260409020544211610f2e5760405162461bcd60e51b815260206004820152601060248201526f2a37b5b2b7103ab732bc3834b932b21760811b60448201526064016106e4565b6000610f3b601254612006565b905080341015610f8d5760405162461bcd60e51b815260206004820181905260248201527f5072696365206c6f776572207468616e20726564656d7074696f6e207461782e60448201526064016106e4565b60008115610fda57610f9f8234612ae8565b6040519091506001600160a01b0386169082156108fc029083906000818181858888f19350505050158015610fd8573d6000803e3d6000fd5b505b610fe4848461169b565b604051839085907f6f73b7b8d37df32ea60a45eadc8fc3d2d716d705ee099bd506817482ce84731690600090a350506013805460ff19169055505050565b61102b816111cb565b6001600160a01b0316336001600160a01b03161461108b5760405162461bcd60e51b815260206004820152601a60248201527f6275726e3a2073656e646572206d757374206265206f776e657200000000000060448201526064016106e4565b61109481612042565b50565b61109f611da7565b806110b26009546001600160a01b031690565b6001600160a01b0316816001600160a01b0316146110e25760405162461bcd60e51b81526004016106e4906129f5565b6001600160a01b0382166111385760405162461bcd60e51b815260206004820152601860248201527f53656e64696e6720746f207a65726f20616464726573732e000000000000000060448201526064016106e4565b600d5447101561118a5760405162461bcd60e51b815260206004820152601c60248201527f526576656e756520213d20436f6e74726163742062616c616e63652e0000000060448201526064016106e4565b600d546040516001600160a01b0384169180156108fc02916000818181858888f193505050501580156111c1573d6000803e3d6000fd5b50506000600d5550565b6000818152600360205260408120546001600160a01b0316806107925760405162461bcd60e51b815260206004820152601c60248201527f6f776e65724f663a20746f6b656e20646f65736e27742065786973740000000060448201526064016106e4565b60006001600160a01b03821661129d5760405162461bcd60e51b815260206004820152602c60248201527f62616c616e63654f663a2061646472657373207a65726f206973206e6f74206160448201526b103b30b634b21037bbb732b960a11b60648201526084016106e4565b506001600160a01b031660009081526005602052604090205490565b6112c1611da7565b6112cb60006120e9565b565b6112d5611da7565b816112e86009546001600160a01b031690565b6001600160a01b0316816001600160a01b0316146113185760405162461bcd60e51b81526004016106e4906129f5565b6109d58261213b565b6060600280546107a790612a23565b611338611da7565b8561134b6009546001600160a01b031690565b6001600160a01b0316816001600160a01b03161461137b5760405162461bcd60e51b81526004016106e4906129f5565b60135460ff161561138b57600080fd5b6013805460ff191660011790556113a28383611952565b6113e85760405162461bcd60e51b81526020600482015260176024820152762430b9b4103737ba1039b4b3b732b210313c903cb7ba9760491b60448201526064016106e4565b6113f3868686610d52565b50506013805460ff191690555050505050565b61140e611da7565b856114216009546001600160a01b031690565b6001600160a01b0316816001600160a01b0316146114515760405162461bcd60e51b81526004016106e4906129f5565b60135460ff161561146157600080fd5b6013805460ff191660011790556114788383611952565b6114be5760405162461bcd60e51b81526020600482015260176024820152762430b9b4103737ba1039b4b3b732b210313c903cb7ba9760491b60448201526064016106e4565b6113f3868686611a93565b6114d1611da7565b836114e46009546001600160a01b031690565b6001600160a01b0316816001600160a01b0316146115145760405162461bcd60e51b81526004016106e4906129f5565b600a54600b541061155c5760405162461bcd60e51b815260206004820152601260248201527124b9b9bab29021b0b8102932b0b1b432b21760711b60448201526064016106e4565b6001600160a01b0384166115825760405162461bcd60e51b81526004016106e490612ab9565b61158b83611e01565b156115d85760405162461bcd60e51b815260206004820152601f60248201527f4d696e74206f6620616c7265616479206578697374696e6720746f6b656e2e0060448201526064016106e4565b60008381526010602052604090205460ff16156116375760405162461bcd60e51b815260206004820152601e60248201527f4d696e74206f6620616c72656164792070656e64696e6720746f6b656e2e000060448201526064016106e4565b6000838152601060209081526040808320805460ff191660011790556011909152902080546001600160a01b0386166001600160a01b031990911617905561167f838361169b565b600b805490600061168f83612aff565b91905055505050505050565b6116a58142612b18565b600083815260208181526040918290209290925580518481529182018390527f41a73beb1018a8b63e0f451a8a4f483806142cf14be45b1a58a23776a1e9b4bc910160405180910390a15050565b60606116fe82611e01565b61174a5760405162461bcd60e51b815260206004820152601d60248201527f746f6b656e5552493a20746f6b656e20646f65736e277420657869737400000060448201526064016106e4565b6000828152600460205260409020805461176390612a23565b80601f016020809104026020016040519081016040528092919081815260200182805461178f90612a23565b80156117dc5780601f106117b1576101008083540402835291602001916117dc565b820191906000526020600020905b8154815290600101906020018083116117bf57829003601f168201915b50505050509050919050565b6060600780546117f790612a23565b90506000036118385760405162461bcd60e51b815260206004820152600d60248201526c456d707479206261736555524960981b60448201526064016106e4565b600780546107a790612a23565b6001600160a01b03851661186b5760405162461bcd60e51b81526004016106e490612ab9565b82516041146118b75760405162461bcd60e51b8152602060048201526018602482015277092dcecc2d8d2c840e6d2cedcc2e8eae4ca40d8cadccee8d60431b60448201526064016106e4565b6118c18484611952565b6119095760405162461bcd60e51b81526020600482015260196024820152782430b9b4103737ba1039b4b3b732b210313c9037bbb732b91760391b60448201526064016106e4565b611914858383611fef565b5060405182906001600160a01b038716907f79af0e59b31823dd289ceebabc4d63d25f35926b8548e3a084a500c9d4e1855690600090a35050505050565b600061195e838361218d565b9392505050565b60008181526020819052604081205442111561198357506000919050565b600082815260208190526040902054610792904290612ae8565b919050565b602081810151604080840151606080860151835160008082528188018087528a905291821a81860181905292810186905260808101849052935190959293919260019260a080820193601f1981019281900390910190855afa158015611a0c573d6000803e3d6000fd5b505050602060405103516001600160a01b0316876001600160a01b03161493505050509392505050565b611a3e611da7565b600a54600b5410611a865760405162461bcd60e51b815260206004820152601260248201527124b9b9bab29021b0b8102932b0b1b432b21760711b60448201526064016106e4565b61167f8585858585611845565b611a9b611da7565b60135460ff1615611aab57600080fd5b6013805460ff191660011790556001600160a01b038316611b0e5760405162461bcd60e51b815260206004820152601b60248201527f526564656d7074696f6e20746f207a65726f20616464726573732e000000000060448201526064016106e4565b611b1782611e01565b15611b645760405162461bcd60e51b815260206004820152601d60248201527f526564656d7074696f6e206f66206578697374696e6720746f6b656e2e00000060448201526064016106e4565b60008281526010602052604090205460ff16611bbc5760405162461bcd60e51b815260206004820152601760248201527620b63932b0b23c903932b1b2b4bb32b2103a37b5b2b71760491b60448201526064016106e4565b6000828152601160205260409020546001600160a01b03848116911614610ede5760405162461bcd60e51b81526020600482015260156024820152742737ba103832b73234b733903932b1b2b4bb32b91760591b60448201526064016106e4565b611c25611da7565b6001600160a01b038116611c8a5760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b60648201526084016106e4565b611094816120e9565b60006001600160a01b038316611ceb5760405162461bcd60e51b815260206004820152601760248201527f517565727920666f72207a65726f20616464726573732e00000000000000000060448201526064016106e4565b611cf482611e01565b611d365760405162461bcd60e51b81526020600482015260136024820152722737b716b2bc34b9ba32b73a103a37b5b2b71760691b60448201526064016106e4565b826001600160a01b0316611d49836111cb565b6001600160a01b031614611d9f5760405162461bcd60e51b815260206004820152601a60248201527f546f6b656e206e6f74206f776e6564206279206164647265737300000000000060448201526064016106e4565b503092915050565b6006546001600160a01b031633146112cb5760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064016106e4565b6000908152600360205260409020546001600160a01b0316151590565b6000611e2982611e01565b611e6b5760405162461bcd60e51b81526020600482015260136024820152722737b716b2bc34b9ba32b73a103a37b5b2b71760691b60448201526064016106e4565b826001600160a01b0316611e7e836111cb565b6001600160a01b031614611ed45760405162461bcd60e51b815260206004820152601a60248201527f546f6b656e206e6f74206f776e6564206279206164647265737300000000000060448201526064016106e4565b611edd82612310565b50600192915050565b606081600003611f0d5750506040805180820190915260018152600360fc1b602082015290565b8160005b8115611f375780611f2181612aff565b9150611f309050600a83612b46565b9150611f11565b60008167ffffffffffffffff811115611f5257611f5261265f565b6040519080825280601f01601f191660200182016040528015611f7c576020820181803683370190505b5090505b8415611fe757611f91600183612ae8565b9150611f9e600a86612b5a565b611fa9906030612b18565b60f81b818381518110611fbe57611fbe612b6e565b60200101906001600160f81b031916908160001a905350611fe0600a86612b46565b9450611f80565b949350505050565b6000611ffc8484846123a6565b5060019392505050565b600064746a528800600d54101561201c57600091505b6103e8600d548361202d9190612b84565b61203890600a612b84565b6107929190612b46565b600061204d826111cb565b6001600160a01b0381166000908152600560205260408120805492935060019290919061207b908490612ae8565b9091555050600082815260036020908152604080832080546001600160a01b0319169055600490915281206120af91612543565b60405182906001600160a01b038316907fec9ab91322523c899ede7830ec9bfc992b5981cdcc27b91162fb23de5791117b90600090a35050565b600680546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b805160000361217d5760405162461bcd60e51b815260206004820152600e60248201526d092dcecc2d8d2c840d8cadccee8d60931b60448201526064016106e4565b60076121898282612bf1565b5050565b6000612197611da7565b6006546001600160a01b031633146122055760405162461bcd60e51b815260206004820152602b60248201527f4552433732313a3a2043616c6c20746f20636f6e7472616374206d616465206260448201526a3c903737b716b7bbb732b960a91b60648201526084016106e4565b81516041146122565760405162461bcd60e51b815260206004820152601e60248201527f4572723a3a20496e76616c6964207369676e6174757265206c656e677468000060448201526064016106e4565b602082810151604080850151606080870151835160008082529681018086528a905290861a938101849052908101849052608081018290529293909260019060a0016020604051602081039080840390855afa1580156122ba573d6000803e3d6000fd5b5050604051601f198101516009549093506001600160a01b038085169116149150819089907f7e4fe2a2a805a357593fdbdde58c02f6a53d8b4960744cd31a98697fc11c2e3690600090a3979650505050505050565b61231981611e01565b6123655760405162461bcd60e51b815260206004820152601860248201527f4275726e206f6620696e6578697374656e7420746f6b656e000000000000000060448201526064016106e4565b6000612370826111cb565b905061237b82612042565b6001600160a01b0316600090815260086020908152604080832093835292905220805460ff19169055565b6001600160a01b0383166123cc5760405162461bcd60e51b81526004016106e490612ab9565b805160000361240f5760405162461bcd60e51b815260206004820152600f60248201526e22b6b83a3c903a37b5b2b72aa9249760891b60448201526064016106e4565b61241a83838361244c565b50506001600160a01b03909116600090815260086020908152604080832093835292905220805460ff19166001179055565b600061245783611e01565b1561249b5760405162461bcd60e51b81526020600482015260146024820152736d696e743a20746f6b656e49442065786973747360601b60448201526064016106e4565b6001600160a01b03841660009081526005602052604081208054600192906124c4908490612b18565b9091555050600083815260036020908152604080832080546001600160a01b0319166001600160a01b038916179055600490915290206125048382612bf1565b5060405183906001600160a01b038616907fe9274a84b19e9428826de6bae8c48329354f8f0e73f771b97cae2d9dccd45a2790600090a3509092915050565b50805461254f90612a23565b6000825580601f1061255f575050565b601f01602090049060005260206000209081019061109491905b8082111561258d5760008155600101612579565b5090565b80356001600160a01b038116811461199d57600080fd5b600080604083850312156125bb57600080fd5b6125c483612591565b946020939093013593505050565b6000602082840312156125e457600080fd5b81356001600160e01b03198116811461195e57600080fd5b60005b838110156126175781810151838201526020016125ff565b83811115612626576000848401525b50505050565b602081526000825180602084015261264b8160408501602087016125fc565b601f01601f19169190910160400192915050565b634e487b7160e01b600052604160045260246000fd5b600082601f83011261268657600080fd5b813567ffffffffffffffff808211156126a1576126a161265f565b604051601f8301601f19908116603f011681019082821181831017156126c9576126c961265f565b816040528381528660208588010111156126e257600080fd5b836020870160208301376000602085830101528094505050505092915050565b60008060006060848603121561271757600080fd5b83359250602084013567ffffffffffffffff81111561273557600080fd5b61274186828701612675565b925050604084013590509250925092565b60006020828403121561276457600080fd5b5035919050565b60008060006060848603121561278057600080fd5b61278984612591565b95602085013595506040909401359392505050565b6000602082840312156127b057600080fd5b61195e82612591565b600080604083850312156127cc57600080fd5b6127d583612591565b9150602083013567ffffffffffffffff8111156127f157600080fd5b6127fd85828601612675565b9150509250929050565b60008060008060008060c0878903121561282057600080fd5b61282987612591565b955061283760208801612591565b945060408701359350606087013592506080870135915060a087013567ffffffffffffffff81111561286857600080fd5b61287489828a01612675565b9150509295509295509295565b6000806000806080858703121561289757600080fd5b6128a085612591565b93506128ae60208601612591565b93969395505050506040820135916060013590565b600080604083850312156128d657600080fd5b50508035926020909101359150565b600080600080600060a086880312156128fd57600080fd5b61290686612591565b945060208601359350604086013567ffffffffffffffff8082111561292a57600080fd5b61293689838a01612675565b945060608801359350608088013591508082111561295357600080fd5b5061296088828901612675565b9150509295509295909350565b6000806040838503121561298057600080fd5b82359150602083013567ffffffffffffffff8111156127f157600080fd5b6000806000606084860312156129b357600080fd5b6129bc84612591565b925060208401359150604084013567ffffffffffffffff8111156129df57600080fd5b6129eb86828701612675565b9150509250925092565b6020808252601490820152734e6f7420416c6c6f776c697374204f776e65722160601b604082015260600190565b600181811c90821680612a3757607f821691505b602082108103612a5757634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052601160045260246000fd5b600081612a8257612a82612a5d565b506000190190565b60008351612a9c8184602088016125fc565b835190830190612ab08183602088016125fc565b01949350505050565b60208082526015908201527426b4b73a103a37903d32b9379030b2323932b9b99760591b604082015260600190565b600082821015612afa57612afa612a5d565b500390565b600060018201612b1157612b11612a5d565b5060010190565b60008219821115612b2b57612b2b612a5d565b500190565b634e487b7160e01b600052601260045260246000fd5b600082612b5557612b55612b30565b500490565b600082612b6957612b69612b30565b500690565b634e487b7160e01b600052603260045260246000fd5b6000816000190483118215151615612b9e57612b9e612a5d565b500290565b601f8211156109d557600081815260208120601f850160051c81016020861015612bca5750805b601f850160051c820191505b81811015612be957828155600101612bd6565b505050505050565b815167ffffffffffffffff811115612c0b57612c0b61265f565b612c1f81612c198454612a23565b84612ba3565b602080601f831160018114612c545760008415612c3c5750858301515b600019600386901b1c1916600185901b178555612be9565b600085815260208120601f198616915b82811015612c8357888601518255948401946001909101908401612c64565b5085821015612ca15787850151600019600388901b60f8161c191681555b5050505050600190811b0190555056fea26469706673582212201a53a488ad12961ce9413755b43007bbc5c91894a6d07511508f80a7be28aa9f64736f6c634300080f0033",
  "deployedSourceMap": "417:14846:5:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3128:327;;;;;;;;;;-1:-1:-1;3128:327:5;;;;;:::i;:::-;;:::i;:::-;;4293:260:7;;;;;;;;;;-1:-1:-1;4293:260:7;;;;;:::i;:::-;;:::i;:::-;;;907:14:10;;900:22;882:41;;870:2;855:18;4293:260:7;;;;;;;;4557:92;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;4229:931:4:-;;;;;;;;;;-1:-1:-1;4229:931:4;;;;;:::i;:::-;;:::i;2932:765:6:-;;;;;;;;;;-1:-1:-1;2932:765:6;;;;;:::i;:::-;;:::i;6072:405:4:-;;;;;;;;;;-1:-1:-1;6072:405:4;;;;;:::i;:::-;;:::i;5534:1972:5:-;;;;;;:::i;:::-;;:::i;10045:1502::-;;;;;;:::i;:::-;;:::i;4946:155:7:-;;;;;;;;;;-1:-1:-1;4946:155:7;;;;;:::i;:::-;;:::i;14094:595:5:-;;;;;;;;;;-1:-1:-1;14094:595:5;;;;;:::i;:::-;;:::i;5160:142:3:-;;;;;;;;;;-1:-1:-1;5160:142:3;;;;;:::i;:::-;-1:-1:-1;;;;;5275:10:3;;;;5252:4;5275:10;;;:5;:10;;;;;;;;:20;;;;;;;;;;;5160:142;5306:199:7;;;;;;;;;;-1:-1:-1;5306:199:7;;;;;:::i;:::-;;:::i;:::-;;;-1:-1:-1;;;;;3768:32:10;;;3750:51;;3738:2;3723:18;5306:199:7;3604:203:10;1358:117:1;;;;;;;;;;-1:-1:-1;1358:117:1;;;;;:::i;:::-;1418:7;1444:24;;;;;;;;;;;;1358:117;;;;3958:25:10;;;3946:2;3931:18;1358:117:1;3812:177:10;2018:96:0;;;;;;;;;;-1:-1:-1;2093:14:0;;-1:-1:-1;;;;;2093:14:0;2018:96;;5105:197:7;;;;;;;;;;-1:-1:-1;5105:197:7;;;;;:::i;:::-;;:::i;2147:101:2:-;;;;;;;;;;;;;:::i;5491:191:4:-;;;;;;;;;;-1:-1:-1;5491:191:4;;;;;:::i;:::-;;:::i;1506:85:2:-;;;;;;;;;;-1:-1:-1;1578:6:2;;-1:-1:-1;;;;;1578:6:2;1506:85;;4653:96:7;;;;;;;;;;;;;:::i;13242:580:5:-;;;;;;:::i;:::-;;:::i;2739:107::-;;;;;;;;;;-1:-1:-1;2829:10:5;;2739:107;;12104:582;;;;;;:::i;:::-;;:::i;3982:1226::-;;;;;;;;;;-1:-1:-1;3982:1226:5;;;;;:::i;:::-;;:::i;902:258:1:-;;;;;;;;;;-1:-1:-1;902:258:1;;;;;:::i;:::-;;:::i;4753:189:7:-;;;;;;;;;;-1:-1:-1;4753:189:7;;;;;:::i;:::-;;:::i;7338:247:3:-;;;;;;;;;;;;;:::i;2769:998:4:-;;;;;;;;;;-1:-1:-1;2769:998:4;;;;;:::i;:::-;;:::i;2334:143:0:-;;;;;;;;;;-1:-1:-1;2334:143:0;;;;;:::i;:::-;;:::i;2037:448:1:-;;;;;;;;;;-1:-1:-1;2037:448:1;;;;;:::i;:::-;;:::i;4649:268:0:-;;;;;;;;;;-1:-1:-1;4649:268:0;;;;;:::i;:::-;;:::i;1488:740:6:-;;;;;;;;;;-1:-1:-1;1488:740:6;;;;;:::i;:::-;;:::i;8018:1516:5:-;;;;;;:::i;:::-;;:::i;2401:198:2:-;;;;;;;;;;-1:-1:-1;2401:198:2;;;;;:::i;:::-;;:::i;1700:125:1:-;;;;;;;;;;-1:-1:-1;1700:125:1;;;;;:::i;:::-;1754:4;1444:24;;;;;;;;;;;1777:15;:41;;;1700:125;2447:117:5;;;;;;;;;;-1:-1:-1;2547:10:5;;2447:117;;4277:491:3;;;;;;;;;;-1:-1:-1;4277:491:3;;;;;:::i;:::-;;:::i;3128:327:5:-;1401:13:2;:11;:13::i;:::-;3228:6:5::1;1669:19:4;2093:14:0::0;;-1:-1:-1;;;;;2093:14:0;;2018:96;1669:19:4::1;-1:-1:-1::0;;;;;1658:30:4::1;:7;-1:-1:-1::0;;;;;1658:30:4::1;;1650:63;;;;-1:-1:-1::0;;;1650:63:4::1;;;;;;;:::i;:::-;;;;;;;;;2829:10:5::0;;3337:6:::2;:25;;3329:62;;;::::0;-1:-1:-1;;;3329:62:5;;7897:2:10;3329:62:5::2;::::0;::::2;7879:21:10::0;7936:2;7916:18;;;7909:30;7975:26;7955:18;;;7948:54;8019:18;;3329:62:5::2;7695:348:10::0;3329:62:5::2;-1:-1:-1::0;3429:10:5::2;:19:::0;-1:-1:-1;3128:327:5:o;4293:260:7:-;4378:4;-1:-1:-1;;;;;;4403:48:7;;-1:-1:-1;;;4403:48:7;;:99;;-1:-1:-1;;;;;;;4461:41:7;;-1:-1:-1;;;4461:41:7;4403:99;:145;;;-1:-1:-1;;;;;;;;;;1685:40:7;;;4512:36;4390:158;4293:260;-1:-1:-1;;4293:260:7:o;4557:92::-;4611:13;4639:5;4632:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4557:92;:::o;4229:931:4:-;4414:16;4422:7;4414;:16::i;:::-;4406:56;;;;-1:-1:-1;;;4406:56:4;;8635:2:10;4406:56:4;;;8617:21:10;8674:2;8654:18;;;8647:30;8713:29;8693:18;;;8686:57;8760:18;;4406:56:4;8433:351:10;4406:56:4;4697:3;:10;4711:2;4697:16;4689:53;;;;-1:-1:-1;;;4689:53:4;;9333:2:10;4689:53:4;;;9315:21:10;9372:2;9352:18;;;9345:30;-1:-1:-1;;;9391:18:10;;;9384:54;9455:18;;4689:53:4;9131:348:10;4689:53:4;4869:26;4885:4;4891:3;4869:15;:26::i;:::-;4861:64;;;;-1:-1:-1;;;4861:64:4;;9686:2:10;4861:64:4;;;9668:21:10;9725:2;9705:18;;;9698:30;-1:-1:-1;;;9744:18:10;;;9737:55;9809:18;;4861:64:4;9484:349:10;4861:64:4;5024:33;5031:16;5039:7;5031;:16::i;:::-;5049:7;5024:6;:33::i;:::-;-1:-1:-1;5125:28:4;;5145:7;;5125:28;;;;;4229:931;;;:::o;2932:765:6:-;1401:13:2;:11;:13::i;:::-;3358:6:6::1;::::0;:11;3354:201:::1;;3424:6;:8:::0;;;:6:::1;:8;::::0;::::1;:::i;:::-;;;;;;3354:201;;;3513:31;::::0;-1:-1:-1;;;3513:31:6;;10313:2:10;3513:31:6::1;::::0;::::1;10295:21:10::0;10352:2;10332:18;;;10325:30;-1:-1:-1;;;10371:18:10;;;10364:51;10432:18;;3513:31:6::1;10111:345:10::0;3354:201:6::1;3605:85;3638:4;3656:3;3673:7;3605:19;:85::i;:::-;2932:765:::0;;;:::o;6072:405:4:-;6149:23;6262:13;:11;:13::i;:::-;6256:27;6287:1;6256:32;6248:58;;;;-1:-1:-1;;;6248:58:4;;10663:2:10;6248:58:4;;;10645:21:10;10702:2;10682:18;;;10675:30;-1:-1:-1;;;10721:18:10;;;10714:43;10774:18;;6248:58:4;10461:337:10;6248:58:4;6415:13;:11;:13::i;:::-;6442:17;6451:7;6442:8;:17::i;:::-;6385:84;;;;;;;;;:::i;:::-;;;;;;;;;;;;;6366:104;;6072:405;;;:::o;5534:1972:5:-;1401:13:2;:11;:13::i;:::-;2194:6:5::1;::::0;::::1;;2193:7;2185:16;;;::::0;::::1;;2211:6;:13:::0;;-1:-1:-1;;2211:13:5::1;2220:4;2211:13;::::0;;-1:-1:-1;;;;;5739:23:5;::::2;5731:57;;;;-1:-1:-1::0;;;5731:57:5::2;;;;;;;:::i;:::-;5867:16;5875:7;5867;:16::i;:::-;5866:17;5858:61;;;::::0;-1:-1:-1;;;5858:61:5;;11830:2:10;5858:61:5::2;::::0;::::2;11812:21:10::0;11869:2;11849:18;;;11842:30;11908:33;11888:18;;;11881:61;11959:18;;5858:61:5::2;11628:355:10::0;5858:61:5::2;5996:16;::::0;;;:7:::2;:16;::::0;;;;;::::2;;5988:52;;;::::0;-1:-1:-1;;;5988:52:5;;12190:2:10;5988:52:5::2;::::0;::::2;12172:21:10::0;12229:2;12209:18;;;12202:30;-1:-1:-1;;;12248:18:10;;;12241:53;12311:18;;5988:52:5::2;11988:347:10::0;5988:52:5::2;6171:25;::::0;;;:16:::2;:25;::::0;;;;;-1:-1:-1;;;;;6171:38:5;;::::2;:25:::0;::::2;:38;6163:72;;;::::0;-1:-1:-1;;;6163:72:5;;12542:2:10;6163:72:5::2;::::0;::::2;12524:21:10::0;12581:2;12561:18;;;12554:30;-1:-1:-1;;;12600:18:10;;;12593:51;12661:18;;6163:72:5::2;12340:345:10::0;6163:72:5::2;1754:4:1::0;1444:24;;;;;;;;;;;1777:15;:41;;6310:69:5::2;;;::::0;-1:-1:-1;;;6310:69:5;;12892:2:10;6310:69:5::2;::::0;::::2;12874:21:10::0;12931:2;12911:18;;;12904:30;12970:34;12950:18;;;12943:62;-1:-1:-1;;;13021:18:10;;;13014:38;13069:19;;6310:69:5::2;12690:404:10::0;6310:69:5::2;6487:10;;6474:9;:23;;6466:64;;;::::0;-1:-1:-1;;;6466:64:5;;13301:2:10;6466:64:5::2;::::0;::::2;13283:21:10::0;13340:2;13320:18;;;13313:30;13379;13359:18;;;13352:58;13427:18;;6466:64:5::2;13099:352:10::0;6466:64:5::2;6577:15;6702:10;;6690:9;:22;6686:252;;;6813:10;::::0;6801:22:::2;::::0;:9:::2;:22;:::i;:::-;6891:36;::::0;6791:32;;-1:-1:-1;;;;;;6891:27:5;::::2;::::0;:36;::::2;;;::::0;6791:32;;6891:36:::2;::::0;;;6791:32;6891:27;:36;::::2;;;;;;;;;;;;;::::0;::::2;;;;;;6686:252;6984:23;7010:25;7027:7;7010:16;:25::i;:::-;6984:51;;7106:82;7125:9;7148:7;7169:9;7106:5;:82::i;:::-;-1:-1:-1::0;7237:10:5::2;:12:::0;;;:10:::2;:12;::::0;::::2;:::i;:::-;;;;;;7318:10;;7302:12;;:26;;;;;;;:::i;:::-;::::0;;;-1:-1:-1;;;7406:5:5::2;7387:16:::0;;;-1:-1:-1;7387:7:5::2;:16;::::0;;;;;;;:24;;-1:-1:-1;;7387:24:5;;::::2;::::0;;;7474:16:::2;:25:::0;;;;;;7467:32;;-1:-1:-1;;;;;;7467:32:5::2;::::0;;2245:6:::1;:14:::0;;;;::::1;::::0;;-1:-1:-1;5534:1972:5:o;10045:1502::-;1401:13:2;:11;:13::i;:::-;2194:6:5::1;::::0;::::1;;2193:7;2185:16;;;::::0;::::1;;2211:6;:13:::0;;-1:-1:-1;;2211:13:5::1;2220:4;2211:13;::::0;;-1:-1:-1;;;;;10300:23:5;::::2;10292:63;;;::::0;-1:-1:-1;;;10292:63:5;;14061:2:10;10292:63:5::2;::::0;::::2;14043:21:10::0;14100:2;14080:18;;;14073:30;14139:29;14119:18;;;14112:57;14186:18;;10292:63:5::2;13859:351:10::0;10292:63:5::2;10419:16;10427:7;10419;:16::i;:::-;10411:62;;;::::0;-1:-1:-1;;;10411:62:5;;14417:2:10;10411:62:5::2;::::0;::::2;14399:21:10::0;14456:2;14436:18;;;14429:30;14495:34;14475:18;;;14468:62;-1:-1:-1;;;14546:18:10;;;14539:31;14587:19;;10411:62:5::2;14215:397:10::0;10411:62:5::2;10550:16;::::0;;;:7:::2;:16;::::0;;;;;::::2;;10549:17;10541:50;;;::::0;-1:-1:-1;;;10541:50:5;;14819:2:10;10541:50:5::2;::::0;::::2;14801:21:10::0;14858:2;14838:18;;;14831:30;-1:-1:-1;;;14877:18:10;;;14870:50;14937:18;;10541:50:5::2;14617:344:10::0;10541:50:5::2;10700:9;-1:-1:-1::0;;;;;10680:29:5::2;:16;10688:7;10680;:16::i;:::-;-1:-1:-1::0;;;;;10680:29:5::2;;10672:58;;;::::0;-1:-1:-1;;;10672:58:5;;15168:2:10;10672:58:5::2;::::0;::::2;15150:21:10::0;15207:2;15187:18;;;15180:30;-1:-1:-1;;;15226:18:10;;;15219:46;15282:18;;10672:58:5::2;14966:340:10::0;10672:58:5::2;1754:4:1::0;1444:24;;;;;;;;;;;1777:15;:41;10788:46:5::2;;;::::0;-1:-1:-1;;;10788:46:5;;15513:2:10;10788:46:5::2;::::0;::::2;15495:21:10::0;15552:2;15532:18;;;15525:30;-1:-1:-1;;;15571:18:10;;;15564:46;15627:18;;10788:46:5::2;15311:340:10::0;10788:46:5::2;10876:12;10891:17;10904:3;;10891:12;:17::i;:::-;10876:32;;11001:4;10988:9;:17;;10980:62;;;::::0;-1:-1:-1;;;10980:62:5;;15858:2:10;10980:62:5::2;::::0;::::2;15840:21:10::0;;;15877:18;;;15870:30;15936:34;15916:18;;;15909:62;15988:18;;10980:62:5::2;15656:356:10::0;10980:62:5::2;11087:15;11155:9:::0;;11151:205:::2;;11241:16;11253:4:::0;11241:9:::2;:16;:::i;:::-;11309:36;::::0;11231:26;;-1:-1:-1;;;;;;11309:27:5;::::2;::::0;:36;::::2;;;::::0;11231:26;;11309:36:::2;::::0;;;11231:26;11309:27;:36;::::2;;;;;;;;;;;;;::::0;::::2;;;;;;11151:205;11409:39;11422:7;11431:16;11409:12;:39::i;:::-;11505:35;::::0;11523:16;;11514:7;;11505:35:::2;::::0;;;::::2;-1:-1:-1::0;;2245:6:5::1;:14:::0;;-1:-1:-1;;2245:14:5::1;::::0;;-1:-1:-1;;;10045:1502:5:o;4946:155:7:-;5029:16;5037:7;5029;:16::i;:::-;-1:-1:-1;;;;;5015:30:7;:10;-1:-1:-1;;;;;5015:30:7;;5007:69;;;;-1:-1:-1;;;5007:69:7;;16219:2:10;5007:69:7;;;16201:21:10;16258:2;16238:18;;;16231:30;16297:28;16277:18;;;16270:56;16343:18;;5007:69:7;16017:350:10;5007:69:7;5082:14;5088:7;5082:5;:14::i;:::-;4946:155;:::o;14094:595:5:-;1401:13:2;:11;:13::i;:::-;14177:7:5::1;1669:19:4;2093:14:0::0;;-1:-1:-1;;;;;2093:14:0;;2018:96;1669:19:4::1;-1:-1:-1::0;;;;;1658:30:4::1;:7;-1:-1:-1::0;;;;;1658:30:4::1;;1650:63;;;;-1:-1:-1::0;;;1650:63:4::1;;;;;;;:::i;:::-;-1:-1:-1::0;;;;;14280:21:5;::::2;14272:58;;;::::0;-1:-1:-1;;;14272:58:5;;16574:2:10;14272:58:5::2;::::0;::::2;16556:21:10::0;16613:2;16593:18;;;16586:30;16652:26;16632:18;;;16625:54;16696:18;;14272:58:5::2;16372:348:10::0;14272:58:5::2;14457:12;;14432:21;:37;;14424:78;;;::::0;-1:-1:-1;;;14424:78:5;;16927:2:10;14424:78:5::2;::::0;::::2;16909:21:10::0;16966:2;16946:18;;;16939:30;17005;16985:18;;;16978:58;17053:18;;14424:78:5::2;16725:352:10::0;14424:78:5::2;14599:12;::::0;14573:39:::2;::::0;-1:-1:-1;;;;;14573:25:5;::::2;::::0;:39;::::2;;;::::0;::::2;::::0;;;14599:12;14573:25;:39;::::2;;;;;;;;;;;;;::::0;::::2;;;;;-1:-1:-1::0;;14681:1:5::2;14666:12;:16:::0;-1:-1:-1;14094:595:5:o;5306:199:7:-;5369:7;5400:16;;;:7;:16;;;;;;-1:-1:-1;;;;;5400:16:7;;5422:60;;;;-1:-1:-1;;;5422:60:7;;17284:2:10;5422:60:7;;;17266:21:10;17323:2;17303:18;;;17296:30;17362;17342:18;;;17335:58;17410:18;;5422:60:7;17082:352:10;5105:197:7;5177:7;-1:-1:-1;;;;;5200:19:7;;5192:76;;;;-1:-1:-1;;;5192:76:7;;17641:2:10;5192:76:7;;;17623:21:10;17680:2;17660:18;;;17653:30;17719:34;17699:18;;;17692:62;-1:-1:-1;;;17770:18:10;;;17763:42;17822:19;;5192:76:7;17439:408:10;5192:76:7;-1:-1:-1;;;;;;5281:16:7;;;;;:9;:16;;;;;;;5105:197::o;2147:101:2:-;1401:13;:11;:13::i;:::-;2211:30:::1;2238:1;2211:18;:30::i;:::-;2147:101::o:0;5491:191:4:-;1401:13:2;:11;:13::i;:::-;5602:6:4::1;1669:19;2093:14:0::0;;-1:-1:-1;;;;;2093:14:0;;2018:96;1669:19:4::1;-1:-1:-1::0;;;;;1658:30:4::1;:7;-1:-1:-1::0;;;;;1658:30:4::1;;1650:63;;;;-1:-1:-1::0;;;1650:63:4::1;;;;;;;:::i;:::-;5654:21:::2;5666:8;5654:11;:21::i;4653:96:7:-:0;4709:13;4737:7;4730:14;;;;;:::i;13242:580:5:-;1401:13:2;:11;:13::i;:::-;13508:7:5::1;1669:19:4;2093:14:0::0;;-1:-1:-1;;;;;2093:14:0;;2018:96;1669:19:4::1;-1:-1:-1::0;;;;;1658:30:4::1;:7;-1:-1:-1::0;;;;;1658:30:4::1;;1650:63;;;;-1:-1:-1::0;;;1650:63:4::1;;;;;;;:::i;:::-;2194:6:5::2;::::0;::::2;;2193:7;2185:16;;;::::0;::::2;;2211:6;:13:::0;;-1:-1:-1;;2211:13:5::2;2220:4;2211:13;::::0;;13620:26:::3;13636:4:::0;13642:3;13620:15:::3;:26::i;:::-;13612:62;;;::::0;-1:-1:-1;;;13612:62:5;;18054:2:10;13612:62:5::3;::::0;::::3;18036:21:10::0;18093:2;18073:18;;;18066:30;-1:-1:-1;;;18112:18:10;;;18105:53;18175:18;;13612:62:5::3;17852:347:10::0;13612:62:5::3;13714:101;13745:9;13768:7;13789:16;13714:17;:101::i;:::-;-1:-1:-1::0;;2245:6:5::2;:14:::0;;-1:-1:-1;;2245:14:5::2;::::0;;-1:-1:-1;;;;;13242:580:5:o;12104:582::-;1401:13:2;:11;:13::i;:::-;12371:7:5::1;1669:19:4;2093:14:0::0;;-1:-1:-1;;;;;2093:14:0;;2018:96;1669:19:4::1;-1:-1:-1::0;;;;;1658:30:4::1;:7;-1:-1:-1::0;;;;;1658:30:4::1;;1650:63;;;;-1:-1:-1::0;;;1650:63:4::1;;;;;;;:::i;:::-;2194:6:5::2;::::0;::::2;;2193:7;2185:16;;;::::0;::::2;;2211:6;:13:::0;;-1:-1:-1;;2211:13:5::2;2220:4;2211:13;::::0;;12483:26:::3;12499:4:::0;12505:3;12483:15:::3;:26::i;:::-;12475:62;;;::::0;-1:-1:-1;;;12475:62:5;;18054:2:10;12475:62:5::3;::::0;::::3;18036:21:10::0;18093:2;18073:18;;;18066:30;-1:-1:-1;;;18112:18:10;;;18105:53;18175:18;;12475:62:5::3;17852:347:10::0;12475:62:5::3;12577:102;12609:9;12632:7;12653:16;12577:18;:102::i;3982:1226::-:0;1401:13:2;:11;:13::i;:::-;4161:4:5::1;1669:19:4;2093:14:0::0;;-1:-1:-1;;;;;2093:14:0;;2018:96;1669:19:4::1;-1:-1:-1::0;;;;;1658:30:4::1;:7;-1:-1:-1::0;;;;;1658:30:4::1;;1650:63;;;;-1:-1:-1::0;;;1650:63:4::1;;;;;;;:::i;:::-;4437:11:5::2;;4428:6;;:20;4420:51;;;::::0;-1:-1:-1;;;4420:51:5;;18406:2:10;4420:51:5::2;::::0;::::2;18388:21:10::0;18445:2;18425:18;;;18418:30;-1:-1:-1;;;18464:18:10;;;18457:48;18522:18;;4420:51:5::2;18204:342:10::0;4420:51:5::2;-1:-1:-1::0;;;;;4542:16:5;::::2;4534:50;;;;-1:-1:-1::0;;;4534:50:5::2;;;;;;;:::i;:::-;4662:16;4670:7;4662;:16::i;:::-;4661:17;4653:61;;;::::0;-1:-1:-1;;;4653:61:5;;11830:2:10;4653:61:5::2;::::0;::::2;11812:21:10::0;11869:2;11849:18;;;11842:30;11908:33;11888:18;;;11881:61;11959:18;;4653:61:5::2;11628:355:10::0;4653:61:5::2;4801:16;::::0;;;:7:::2;:16;::::0;;;;;::::2;;4800:17;4792:60;;;::::0;-1:-1:-1;;;4792:60:5;;18753:2:10;4792:60:5::2;::::0;::::2;18735:21:10::0;18792:2;18772:18;;;18765:30;18831:32;18811:18;;;18804:60;18881:18;;4792:60:5::2;18551:354:10::0;4792:60:5::2;4918:16;::::0;;;:7:::2;:16;::::0;;;;;;;:23;;-1:-1:-1;;4918:23:5::2;4937:4;4918:23;::::0;;5015:16:::2;:25:::0;;;;;:30;;-1:-1:-1;;;;;5015:30:5;::::2;-1:-1:-1::0;;;;;;5015:30:5;;::::2;;::::0;;5109:39:::2;4926:7:::0;5131:16;5109:12:::2;:39::i;:::-;5193:6;:8:::0;;;:6:::2;:8;::::0;::::2;:::i;:::-;;;;;;1424:1:2::1;3982:1226:5::0;;;;:::o;902:258:1:-;1049:22;1067:4;1049:15;:22;:::i;:::-;1022:15;:24;;;;;;;;;;;;:49;;;;1130:23;;19084:25:10;;;19125:18;;;19118:34;;;1130:23:1;;19057:18:10;1130:23:1;;;;;;;902:258;;:::o;4753:189:7:-;4826:13;4855:16;4863:7;4855;:16::i;:::-;4847:58;;;;-1:-1:-1;;;4847:58:7;;19365:2:10;4847:58:7;;;19347:21:10;19404:2;19384:18;;;19377:30;19443:31;19423:18;;;19416:59;19492:18;;4847:58:7;19163:353:10;4847:58:7;4918:19;;;;:10;:19;;;;;4911:26;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4753:189;;;:::o;7338:247:3:-;7381:22;7479:7;7473:21;;;;;:::i;:::-;;;7498:1;7473:26;7465:52;;;;-1:-1:-1;;;7465:52:3;;10663:2:10;7465:52:3;;;10645:21:10;10702:2;10682:18;;;10675:30;-1:-1:-1;;;10721:18:10;;;10714:43;10774:18;;7465:52:3;10461:337:10;7465:52:3;7571:7;7560:18;;;;;:::i;2769:998:4:-;-1:-1:-1;;;;;3024:18:4;;3016:52;;;;-1:-1:-1;;;3016:52:4;;;;;;;:::i;:::-;3303:3;:10;3317:2;3303:16;3295:53;;;;-1:-1:-1;;;3295:53:4;;9333:2:10;3295:53:4;;;9315:21:10;9372:2;9352:18;;;9345:30;-1:-1:-1;;;9391:18:10;;;9384:54;9455:18;;3295:53:4;9131:348:10;3295:53:4;3475:26;3491:4;3497:3;3475:15;:26::i;:::-;3467:64;;;;-1:-1:-1;;;3467:64:4;;9686:2:10;3467:64:4;;;9668:21:10;9725:2;9705:18;;;9698:30;-1:-1:-1;;;9744:18:10;;;9737:55;9809:18;;3467:64:4;9484:349:10;3467:64:4;3630:30;3636:4;3642:7;3651:8;3630:5;:30::i;:::-;-1:-1:-1;3727:33:4;;3752:7;;-1:-1:-1;;;;;3727:33:4;;;;;;;;2769:998;;;;;:::o;2334:143:0:-;2416:4;2443:27;2460:4;2466:3;2443:16;:27::i;:::-;2436:34;2334:143;-1:-1:-1;;;2334:143:0:o;2037:448:1:-;2095:7;1444:24;;;;;;;;;;;2223:15;:40;2219:260;;;-1:-1:-1;2317:1:1;;2037:448;-1:-1:-1;2037:448:1:o;2219:260::-;1418:7;1444:24;;;;;;;;;;;2428:40;;2453:15;;2428:40;:::i;2219:260::-;2037:448;;;:::o;4649:268:0:-;5808:2;5799:12;;;5793:19;5883:2;5874:12;;;5868:19;5995:2;5986:12;;;5980:19;4884:25;;4780:4;4884:25;;;;;;;;;19748::10;;;5972:28:0;;;19789:18:10;;;19782:45;;;19843:18;;;19836:34;;;19886:18;;;19879:34;;;4884:25:0;;4780:4;;5868:19;;5972:28;;4884:25;;19720:19:10;;;;;-1:-1:-1;;4884:25:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;4873:36:0;:7;-1:-1:-1;;;;;4873:36:0;;4866:44;;;;;4649:268;;;;;:::o;1488:740:6:-;1401:13:2;:11;:13::i;:::-;1941:11:6::1;;1932:6;;:20;1924:51;;;::::0;-1:-1:-1;;;1924:51:6;;18406:2:10;1924:51:6::1;::::0;::::1;18388:21:10::0;18445:2;18425:18;;;18418:30;-1:-1:-1;;;18464:18:10;;;18457:48;18522:18;;1924:51:6::1;18204:342:10::0;1924:51:6::1;2024:124;2056:4;2074;2092:3;2109:7;2130:8;2024:18;:124::i;8018:1516:5:-:0;1401:13:2;:11;:13::i;:::-;2194:6:5::1;::::0;::::1;;2193:7;2185:16;;;::::0;::::1;;2211:6;:13:::0;;-1:-1:-1;;2211:13:5::1;2220:4;2211:13;::::0;;-1:-1:-1;;;;;8274:23:5;::::2;8266:63;;;::::0;-1:-1:-1;;;8266:63:5;;14061:2:10;8266:63:5::2;::::0;::::2;14043:21:10::0;14100:2;14080:18;;;14073:30;14139:29;14119:18;;;14112:57;14186:18;;8266:63:5::2;13859:351:10::0;8266:63:5::2;8394:16;8402:7;8394;:16::i;:::-;8393:17;8385:59;;;::::0;-1:-1:-1;;;8385:59:5;;20126:2:10;8385:59:5::2;::::0;::::2;20108:21:10::0;20165:2;20145:18;;;20138:30;20204:31;20184:18;;;20177:59;20253:18;;8385:59:5::2;19924:353:10::0;8385:59:5::2;8520:16;::::0;;;:7:::2;:16;::::0;;;;;::::2;;8512:52;;;::::0;-1:-1:-1;;;8512:52:5;;12190:2:10;8512:52:5::2;::::0;::::2;12172:21:10::0;12229:2;12209:18;;;12202:30;-1:-1:-1;;;12248:18:10;;;12241:53;12311:18;;8512:52:5::2;11988:347:10::0;8512:52:5::2;8653:25;::::0;;;:16:::2;:25;::::0;;;;;-1:-1:-1;;;;;8653:38:5;;::::2;:25:::0;::::2;:38;8645:72;;;::::0;-1:-1:-1;;;8645:72:5;;12542:2:10;8645:72:5::2;::::0;::::2;12524:21:10::0;12581:2;12561:18;;;12554:30;-1:-1:-1;;;12600:18:10;;;12593:51;12661:18;;8645:72:5::2;12340:345:10::0;2401:198:2;1401:13;:11;:13::i;:::-;-1:-1:-1;;;;;2489:22:2;::::1;2481:73;;;::::0;-1:-1:-1;;;2481:73:2;;20484:2:10;2481:73:2::1;::::0;::::1;20466:21:10::0;20523:2;20503:18;;;20496:30;20562:34;20542:18;;;20535:62;-1:-1:-1;;;20613:18:10;;;20606:36;20659:19;;2481:73:2::1;20282:402:10::0;2481:73:2::1;2564:28;2583:8;2564:18;:28::i;4277:491:3:-:0;4346:7;-1:-1:-1;;;;;4425:17:3;;4417:53;;;;-1:-1:-1;;;4417:53:3;;20891:2:10;4417:53:3;;;20873:21:10;20930:2;20910:18;;;20903:30;20969:25;20949:18;;;20942:53;21012:18;;4417:53:3;20689:347:10;4417:53:3;4527:17;4535:8;4527:7;:17::i;:::-;4519:49;;;;-1:-1:-1;;;4519:49:3;;21243:2:10;4519:49:3;;;21225:21:10;21282:2;21262:18;;;21255:30;-1:-1:-1;;;21301:18:10;;;21294:49;21360:18;;4519:49:3;21041:343:10;4519:49:3;4658:3;-1:-1:-1;;;;;4637:24:3;:17;4645:8;4637:7;:17::i;:::-;-1:-1:-1;;;;;4637:24:3;;4629:63;;;;-1:-1:-1;;;4629:63:3;;21591:2:10;4629:63:3;;;21573:21:10;21630:2;21610:18;;;21603:30;21669:28;21649:18;;;21642:56;21715:18;;4629:63:3;21389:350:10;4629:63:3;-1:-1:-1;4756:4:3;4277:491;;;;:::o;1662:130:2:-;1578:6;;-1:-1:-1;;;;;1578:6:2;3057:10;1725:23;1717:68;;;;-1:-1:-1;;;1717:68:2;;21946:2:10;1717:68:2;;;21928:21:10;;;21965:18;;;21958:30;22024:34;22004:18;;;21997:62;22076:18;;1717:68:2;21744:356:10;5509:119:7;5574:4;5593:16;;;:7;:16;;;;;;-1:-1:-1;;;;;5593:16:7;:30;;;5509:119::o;3328:427:3:-;3394:4;3457:17;3465:8;3457:7;:17::i;:::-;3449:49;;;;-1:-1:-1;;;3449:49:3;;21243:2:10;3449:49:3;;;21225:21:10;21282:2;21262:18;;;21255:30;-1:-1:-1;;;21301:18:10;;;21294:49;21360:18;;3449:49:3;21041:343:10;3449:49:3;3590:5;-1:-1:-1;;;;;3569:26:3;:17;3577:8;3569:7;:17::i;:::-;-1:-1:-1;;;;;3569:26:3;;3561:65;;;;-1:-1:-1;;;3561:65:3;;21591:2:10;3561:65:3;;;21573:21:10;21630:2;21610:18;;;21603:30;21669:28;21649:18;;;21642:56;21715:18;;3561:65:3;21389:350:10;3561:65:3;3669:28;3688:8;3669:18;:28::i;:::-;-1:-1:-1;3744:4:3;3328:427;;;;:::o;6613:703:4:-;6669:13;6886:5;6895:1;6886:10;6882:51;;-1:-1:-1;;6912:10:4;;;;;;;;;;;;-1:-1:-1;;;6912:10:4;;;;;6613:703::o;6882:51::-;6957:5;6942:12;6996:75;7003:9;;6996:75;;7028:8;;;;:::i;:::-;;-1:-1:-1;7050:10:4;;-1:-1:-1;7058:2:4;7050:10;;:::i;:::-;;;6996:75;;;7080:19;7112:6;7102:17;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;7102:17:4;;7080:39;;7129:150;7136:10;;7129:150;;7162:11;7172:1;7162:11;;:::i;:::-;;-1:-1:-1;7230:10:4;7238:2;7230:5;:10;:::i;:::-;7217:24;;:2;:24;:::i;:::-;7204:39;;7187:6;7194;7187:14;;;;;;;;:::i;:::-;;;;:56;-1:-1:-1;;;;;7187:56:4;;;;;;;;-1:-1:-1;7257:11:4;7266:2;7257:11;;:::i;:::-;;;7129:150;;;7302:6;6613:703;-1:-1:-1;;;;6613:703:4:o;2151:358:3:-;2270:4;2360:91;2392:3;2410:8;2433;2360:18;:91::i;:::-;-1:-1:-1;2498:4:3;2151:358;;;;;:::o;14842:419:5:-;14899:13;15069:8;15054:12;;:23;15029:118;;;15135:1;15128:8;;15029:118;15250:4;15229:12;;15222:4;:19;;;;:::i;:::-;:24;;15244:2;15222:24;:::i;:::-;15221:33;;;;:::i;5943:215:7:-;5998:13;6014:16;6022:7;6014;:16::i;:::-;-1:-1:-1;;;;;6037:16:7;;;;;;:9;:16;;;;;:21;;5998:32;;-1:-1:-1;6057:1:7;;6037:16;;;:21;;6057:1;;6037:21;:::i;:::-;;;;-1:-1:-1;;6071:16:7;;;;:7;:16;;;;;;;;6064:23;;-1:-1:-1;;;;;;6064:23:7;;;6100:10;:19;;;;;6093:26;;;:::i;:::-;6131:22;;6145:7;;-1:-1:-1;;;;;6131:22:7;;;;;;;;5992:166;5943:215;:::o;2757:187:2:-;2849:6;;;-1:-1:-1;;;;;2865:17:2;;;-1:-1:-1;;;;;;2865:17:2;;;;;;;2897:40;;2849:6;;;2865:17;2849:6;;2897:40;;2830:16;;2897:40;2820:124;2757:187;:::o;6948:234:3:-;7077:8;7071:22;7097:1;7071:27;7063:54;;;;-1:-1:-1;;;7063:54:3;;22986:2:10;7063:54:3;;;22968:21:10;23025:2;23005:18;;;22998:30;-1:-1:-1;;;23044:18:10;;;23037:44;23098:18;;7063:54:3;22784:338:10;7063:54:3;7157:7;:18;7167:8;7157:7;:18;:::i;:::-;;6948:234;:::o;3437:1043:0:-;3534:4;1401:13:2;:11;:13::i;:::-;1578:6;;-1:-1:-1;;;;;1578:6:2;3057:10;3699:23:0::1;3678:114;;;::::0;-1:-1:-1;;;3678:114:0;;25533:2:10;3678:114:0::1;::::0;::::1;25515:21:10::0;25572:2;25552:18;;;25545:30;25611:34;25591:18;;;25584:62;-1:-1:-1;;;25662:18:10;;;25655:41;25713:19;;3678:114:0::1;25331:407:10::0;3678:114:0::1;3870:3;:10;3884:2;3870:16;3862:59;;;::::0;-1:-1:-1;;;3862:59:0;;25945:2:10;3862:59:0::1;::::0;::::1;25927:21:10::0;25984:2;25964:18;;;25957:30;26023:32;26003:18;;;25996:60;26073:18;;3862:59:0::1;25743:354:10::0;3862:59:0::1;5808:2:::0;5799:12;;;5793:19;5883:2;5874:12;;;5868:19;5995:2;5986:12;;;5980:19;4134:24;;4000:9:::1;4134:24:::0;;;;;::::1;::::0;;;19748:25:10;;;5972:28:0;;;19789:18:10;;;19782:45;;;19843:18;;;19836:34;;;19886:18;;;19879:34;;;5793:19:0;;5868;;4134:24:::1;::::0;19720:19:10;;4134:24:0::1;;;;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;-1:-1:-1::0;;4134:24:0::1;::::0;-1:-1:-1;;4134:24:0;;;4272:14:::1;::::0;4134:24;;-1:-1:-1;;;;;;4262:24:0;;::::1;4272:14:::0;::::1;4262:24;::::0;-1:-1:-1;4262:24:0;;4369:4;;4353:45:::1;::::0;4231:27:::1;::::0;4353:45:::1;4451:22:::0;3437:1043;-1:-1:-1;;;;;;;3437:1043:0:o;6362:421:3:-;6489:16;6497:7;6489;:16::i;:::-;6481:53;;;;-1:-1:-1;;;6481:53:3;;26304:2:10;6481:53:3;;;26286:21:10;26343:2;26323:18;;;26316:30;26382:26;26362:18;;;26355:54;26426:18;;6481:53:3;26102:348:10;6481:53:3;6589:19;6611:16;6619:7;6611;:16::i;:::-;6589:38;;6670:14;6676:7;6670:5;:14::i;:::-;-1:-1:-1;;;;;6741:18:3;6771:5;6741:18;;;:5;:18;;;;;;;;:27;;;;;;;:35;;-1:-1:-1;;6741:35:3;;;6362:421::o;5532:674::-;-1:-1:-1;;;;;5746:16:3;;5738:50;;;;-1:-1:-1;;;5738:50:3;;;;;;;:::i;:::-;5934:8;5928:22;5954:1;5928:27;5920:55;;;;-1:-1:-1;;;5920:55:3;;26657:2:10;5920:55:3;;;26639:21:10;26696:2;26676:18;;;26669:30;-1:-1:-1;;;26715:18:10;;;26708:45;26770:18;;5920:55:3;26455:339:10;5920:55:3;6090:28;6096:2;6100:7;6109:8;6090:5;:28::i;:::-;-1:-1:-1;;;;;;;6174:9:3;;;;;;;:5;:9;;;;;;;;:18;;;;;;;:25;;-1:-1:-1;;6174:25:3;6195:4;6174:25;;;5532:674::o;5632:307:7:-;5737:7;5761:16;5769:7;5761;:16::i;:::-;5760:17;5752:50;;;;-1:-1:-1;;;5752:50:7;;27001:2:10;5752:50:7;;;26983:21:10;27040:2;27020:18;;;27013:30;-1:-1:-1;;;27059:18:10;;;27052:50;27119:18;;5752:50:7;26799:344:10;5752:50:7;-1:-1:-1;;;;;5808:13:7;;;;;;:9;:13;;;;;:18;;5825:1;;5808:13;:18;;5825:1;;5808:18;:::i;:::-;;;;-1:-1:-1;;5832:16:7;;;;:7;:16;;;;;;;;:21;;-1:-1:-1;;;;;;5832:21:7;-1:-1:-1;;;;;5832:21:7;;;;;5859:10;:19;;;;;:25;5881:3;5859:19;:25;:::i;:::-;-1:-1:-1;5895:19:7;;5906:7;;-1:-1:-1;;;;;5895:19:7;;;;;;;;-1:-1:-1;5927:7:7;;5632:307;-1:-1:-1;;5632:307:7:o;-1:-1:-1:-;;;;;;;:::i;:::-;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;14:173:10:-;82:20;;-1:-1:-1;;;;;131:31:10;;121:42;;111:70;;177:1;174;167:12;192:254;260:6;268;321:2;309:9;300:7;296:23;292:32;289:52;;;337:1;334;327:12;289:52;360:29;379:9;360:29;:::i;:::-;350:39;436:2;421:18;;;;408:32;;-1:-1:-1;;;192:254:10:o;451:286::-;509:6;562:2;550:9;541:7;537:23;533:32;530:52;;;578:1;575;568:12;530:52;604:23;;-1:-1:-1;;;;;;656:32:10;;646:43;;636:71;;703:1;700;693:12;934:258;1006:1;1016:113;1030:6;1027:1;1024:13;1016:113;;;1106:11;;;1100:18;1087:11;;;1080:39;1052:2;1045:10;1016:113;;;1147:6;1144:1;1141:13;1138:48;;;1182:1;1173:6;1168:3;1164:16;1157:27;1138:48;;934:258;;;:::o;1197:383::-;1346:2;1335:9;1328:21;1309:4;1378:6;1372:13;1421:6;1416:2;1405:9;1401:18;1394:34;1437:66;1496:6;1491:2;1480:9;1476:18;1471:2;1463:6;1459:15;1437:66;:::i;:::-;1564:2;1543:15;-1:-1:-1;;1539:29:10;1524:45;;;;1571:2;1520:54;;1197:383;-1:-1:-1;;1197:383:10:o;1585:127::-;1646:10;1641:3;1637:20;1634:1;1627:31;1677:4;1674:1;1667:15;1701:4;1698:1;1691:15;1717:718;1759:5;1812:3;1805:4;1797:6;1793:17;1789:27;1779:55;;1830:1;1827;1820:12;1779:55;1866:6;1853:20;1892:18;1929:2;1925;1922:10;1919:36;;;1935:18;;:::i;:::-;2010:2;2004:9;1978:2;2064:13;;-1:-1:-1;;2060:22:10;;;2084:2;2056:31;2052:40;2040:53;;;2108:18;;;2128:22;;;2105:46;2102:72;;;2154:18;;:::i;:::-;2194:10;2190:2;2183:22;2229:2;2221:6;2214:18;2275:3;2268:4;2263:2;2255:6;2251:15;2247:26;2244:35;2241:55;;;2292:1;2289;2282:12;2241:55;2356:2;2349:4;2341:6;2337:17;2330:4;2322:6;2318:17;2305:54;2403:1;2396:4;2391:2;2383:6;2379:15;2375:26;2368:37;2423:6;2414:15;;;;;;1717:718;;;;:::o;2440:456::-;2526:6;2534;2542;2595:2;2583:9;2574:7;2570:23;2566:32;2563:52;;;2611:1;2608;2601:12;2563:52;2647:9;2634:23;2624:33;;2708:2;2697:9;2693:18;2680:32;2735:18;2727:6;2724:30;2721:50;;;2767:1;2764;2757:12;2721:50;2790:49;2831:7;2822:6;2811:9;2807:22;2790:49;:::i;:::-;2780:59;;;2886:2;2875:9;2871:18;2858:32;2848:42;;2440:456;;;;;:::o;2901:180::-;2960:6;3013:2;3001:9;2992:7;2988:23;2984:32;2981:52;;;3029:1;3026;3019:12;2981:52;-1:-1:-1;3052:23:10;;2901:180;-1:-1:-1;2901:180:10:o;3086:322::-;3163:6;3171;3179;3232:2;3220:9;3211:7;3207:23;3203:32;3200:52;;;3248:1;3245;3238:12;3200:52;3271:29;3290:9;3271:29;:::i;:::-;3261:39;3347:2;3332:18;;3319:32;;-1:-1:-1;3398:2:10;3383:18;;;3370:32;;3086:322;-1:-1:-1;;;3086:322:10:o;3413:186::-;3472:6;3525:2;3513:9;3504:7;3500:23;3496:32;3493:52;;;3541:1;3538;3531:12;3493:52;3564:29;3583:9;3564:29;:::i;3994:395::-;4072:6;4080;4133:2;4121:9;4112:7;4108:23;4104:32;4101:52;;;4149:1;4146;4139:12;4101:52;4172:29;4191:9;4172:29;:::i;:::-;4162:39;;4252:2;4241:9;4237:18;4224:32;4279:18;4271:6;4268:30;4265:50;;;4311:1;4308;4301:12;4265:50;4334:49;4375:7;4366:6;4355:9;4351:22;4334:49;:::i;:::-;4324:59;;;3994:395;;;;;:::o;4394:675::-;4507:6;4515;4523;4531;4539;4547;4600:3;4588:9;4579:7;4575:23;4571:33;4568:53;;;4617:1;4614;4607:12;4568:53;4640:29;4659:9;4640:29;:::i;:::-;4630:39;;4688:38;4722:2;4711:9;4707:18;4688:38;:::i;:::-;4678:48;;4773:2;4762:9;4758:18;4745:32;4735:42;;4824:2;4813:9;4809:18;4796:32;4786:42;;4875:3;4864:9;4860:19;4847:33;4837:43;;4931:3;4920:9;4916:19;4903:33;4959:18;4951:6;4948:30;4945:50;;;4991:1;4988;4981:12;4945:50;5014:49;5055:7;5046:6;5035:9;5031:22;5014:49;:::i;:::-;5004:59;;;4394:675;;;;;;;;:::o;5074:397::-;5160:6;5168;5176;5184;5237:3;5225:9;5216:7;5212:23;5208:33;5205:53;;;5254:1;5251;5244:12;5205:53;5277:29;5296:9;5277:29;:::i;:::-;5267:39;;5325:38;5359:2;5348:9;5344:18;5325:38;:::i;:::-;5074:397;;5315:48;;-1:-1:-1;;;;5410:2:10;5395:18;;5382:32;;5461:2;5446:18;5433:32;;5074:397::o;5476:248::-;5544:6;5552;5605:2;5593:9;5584:7;5580:23;5576:32;5573:52;;;5621:1;5618;5611:12;5573:52;-1:-1:-1;;5644:23:10;;;5714:2;5699:18;;;5686:32;;-1:-1:-1;5476:248:10:o;5729:752::-;5843:6;5851;5859;5867;5875;5928:3;5916:9;5907:7;5903:23;5899:33;5896:53;;;5945:1;5942;5935:12;5896:53;5968:29;5987:9;5968:29;:::i;:::-;5958:39;;6044:2;6033:9;6029:18;6016:32;6006:42;;6099:2;6088:9;6084:18;6071:32;6122:18;6163:2;6155:6;6152:14;6149:34;;;6179:1;6176;6169:12;6149:34;6202:49;6243:7;6234:6;6223:9;6219:22;6202:49;:::i;:::-;6192:59;;6298:2;6287:9;6283:18;6270:32;6260:42;;6355:3;6344:9;6340:19;6327:33;6311:49;;6385:2;6375:8;6372:16;6369:36;;;6401:1;6398;6391:12;6369:36;;6424:51;6467:7;6456:8;6445:9;6441:24;6424:51;:::i;:::-;6414:61;;;5729:752;;;;;;;;:::o;6486:388::-;6563:6;6571;6624:2;6612:9;6603:7;6599:23;6595:32;6592:52;;;6640:1;6637;6630:12;6592:52;6676:9;6663:23;6653:33;;6737:2;6726:9;6722:18;6709:32;6764:18;6756:6;6753:30;6750:50;;;6796:1;6793;6786:12;6879:462;6965:6;6973;6981;7034:2;7022:9;7013:7;7009:23;7005:32;7002:52;;;7050:1;7047;7040:12;7002:52;7073:29;7092:9;7073:29;:::i;:::-;7063:39;;7149:2;7138:9;7134:18;7121:32;7111:42;;7204:2;7193:9;7189:18;7176:32;7231:18;7223:6;7220:30;7217:50;;;7263:1;7260;7253:12;7217:50;7286:49;7327:7;7318:6;7307:9;7303:22;7286:49;:::i;:::-;7276:59;;;6879:462;;;;;:::o;7346:344::-;7548:2;7530:21;;;7587:2;7567:18;;;7560:30;-1:-1:-1;;;7621:2:10;7606:18;;7599:50;7681:2;7666:18;;7346:344::o;8048:380::-;8127:1;8123:12;;;;8170;;;8191:61;;8245:4;8237:6;8233:17;8223:27;;8191:61;8298:2;8290:6;8287:14;8267:18;8264:38;8261:161;;8344:10;8339:3;8335:20;8332:1;8325:31;8379:4;8376:1;8369:15;8407:4;8404:1;8397:15;8261:161;;8048:380;;;:::o;9838:127::-;9899:10;9894:3;9890:20;9887:1;9880:31;9930:4;9927:1;9920:15;9954:4;9951:1;9944:15;9970:136;10009:3;10037:5;10027:39;;10046:18;;:::i;:::-;-1:-1:-1;;;10082:18:10;;9970:136::o;10803:470::-;10982:3;11020:6;11014:13;11036:53;11082:6;11077:3;11070:4;11062:6;11058:17;11036:53;:::i;:::-;11152:13;;11111:16;;;;11174:57;11152:13;11111:16;11208:4;11196:17;;11174:57;:::i;:::-;11247:20;;10803:470;-1:-1:-1;;;;10803:470:10:o;11278:345::-;11480:2;11462:21;;;11519:2;11499:18;;;11492:30;-1:-1:-1;;;11553:2:10;11538:18;;11531:51;11614:2;11599:18;;11278:345::o;13456:125::-;13496:4;13524:1;13521;13518:8;13515:34;;;13529:18;;:::i;:::-;-1:-1:-1;13566:9:10;;13456:125::o;13586:135::-;13625:3;13646:17;;;13643:43;;13666:18;;:::i;:::-;-1:-1:-1;13713:1:10;13702:13;;13586:135::o;13726:128::-;13766:3;13797:1;13793:6;13790:1;13787:13;13784:39;;;13803:18;;:::i;:::-;-1:-1:-1;13839:9:10;;13726:128::o;22105:127::-;22166:10;22161:3;22157:20;22154:1;22147:31;22197:4;22194:1;22187:15;22221:4;22218:1;22211:15;22237:120;22277:1;22303;22293:35;;22308:18;;:::i;:::-;-1:-1:-1;22342:9:10;;22237:120::o;22362:112::-;22394:1;22420;22410:35;;22425:18;;:::i;:::-;-1:-1:-1;22459:9:10;;22362:112::o;22479:127::-;22540:10;22535:3;22531:20;22528:1;22521:31;22571:4;22568:1;22561:15;22595:4;22592:1;22585:15;22611:168;22651:7;22717:1;22713;22709:6;22705:14;22702:1;22699:21;22694:1;22687:9;22680:17;22676:45;22673:71;;;22724:18;;:::i;:::-;-1:-1:-1;22764:9:10;;22611:168::o;23253:545::-;23355:2;23350:3;23347:11;23344:448;;;23391:1;23416:5;23412:2;23405:17;23461:4;23457:2;23447:19;23531:2;23519:10;23515:19;23512:1;23508:27;23502:4;23498:38;23567:4;23555:10;23552:20;23549:47;;;-1:-1:-1;23590:4:10;23549:47;23645:2;23640:3;23636:12;23633:1;23629:20;23623:4;23619:31;23609:41;;23700:82;23718:2;23711:5;23708:13;23700:82;;;23763:17;;;23744:1;23733:13;23700:82;;;23704:3;;;23253:545;;;:::o;23974:1352::-;24100:3;24094:10;24127:18;24119:6;24116:30;24113:56;;;24149:18;;:::i;:::-;24178:97;24268:6;24228:38;24260:4;24254:11;24228:38;:::i;:::-;24222:4;24178:97;:::i;:::-;24330:4;;24394:2;24383:14;;24411:1;24406:663;;;;25113:1;25130:6;25127:89;;;-1:-1:-1;25182:19:10;;;25176:26;25127:89;-1:-1:-1;;23931:1:10;23927:11;;;23923:24;23919:29;23909:40;23955:1;23951:11;;;23906:57;25229:81;;24376:944;;24406:663;23200:1;23193:14;;;23237:4;23224:18;;-1:-1:-1;;24442:20:10;;;24560:236;24574:7;24571:1;24568:14;24560:236;;;24663:19;;;24657:26;24642:42;;24755:27;;;;24723:1;24711:14;;;;24590:19;;24560:236;;;24564:3;24824:6;24815:7;24812:19;24809:201;;;24885:19;;;24879:26;-1:-1:-1;;24968:1:10;24964:14;;;24980:3;24960:24;24956:37;24952:42;24937:58;24922:74;;24809:201;-1:-1:-1;;;;;25056:1:10;25040:14;;;25036:22;25023:36;;-1:-1:-1;23974:1352:10:o",
  "language": "Solidity",
  "natspec": {
    "author": "Daccred.",
    "details": "An instance of the Soulbound token with capped supply       and tokens having their own individual expiry date.       Tokens are minted to and are pendng until receivers       pay to receive their complete token.",
    "errors": {
      "Unsigned(address)": [
        {
          "details": "Thrown when the address passed to the verify function is not signed."
        }
      ]
    },
    "events": {
      "Redeemed(uint256,uint256)": {
        "details": "Emitted when a token is redeemed."
      }
    },
    "kind": "dev",
    "methods": {
      "_getBaseURI()": {
        "details": "Returns already set baseURI if it exists.",
        "notice": "Callable by anyone.",
        "returns": {
          "_baseURI": "baseURI set."
        }
      },
      "balanceOf(address)": {
        "details": "ABTs assigned to the zero address are considered invalid, and this  function throws for queries about the zero address.",
        "notice": "Count all ABTs assigned to an owner",
        "params": {
          "owner": "An address for whom to query the balance"
        },
        "returns": {
          "_0": "The number of ABTs owned by `owner`, possibly zero"
        }
      },
      "burn(uint256)": {
        "details": "Must emit a `event Revoke` with the `address to` field pointing to  the zero address.",
        "notice": "Destroys `tokenId`. At any time, an ABT receiver must be able to  disassociate themselves from an ABT publicly through calling this  function.",
        "params": {
          "tokenId": "The identifier for an ABT"
        }
      },
      "constructor": {
        "details": "Deploy the SoulboundWithSignature with set         total supply, priceLimit and price of an individual token."
      },
      "extendExpiry(uint256,uint256)": {
        "details": "On every successful redemption or mint of token the       expiry of the token is extended by the duration passed       in the contract.       This should be called on expired tokens.",
        "notice": "This function is expected to be called by the           SoulboundRedeemable on every mint.",
        "params": {
          "time": "Length of time to extend it with.",
          "tokenId": "Token to extend its expiry."
        }
      },
      "generateTokenURI(uint256)": {
        "details": "Using the `tokenId` passed, it generates a `stringified` tokenURI,       packing the baseURI and the current tokenId.       Makes use of OpenZeppelin's uint to string function.",
        "notice": "Callable by anyone.",
        "params": {
          "tokenId": "ID of token whose tokenURI is desired."
        },
        "returns": {
          "_tokenURI": "TokenURI of the passed tokenId."
        }
      },
      "getAllowlistOwner()": {
        "details": "Return the allowlistOwner.",
        "notice": "Callable by anyone.",
        "returns": {
          "_0": "address of allowlistOwner."
        }
      },
      "getExpiryDate(uint256)": {
        "details": "Returns the expiry date of `tokenId`.",
        "notice": "Callable by anyone.",
        "params": {
          "tokenId": "Token to get its expiry."
        },
        "returns": {
          "_0": "time of expiry."
        }
      },
      "getIndividualTokenPrice()": {
        "details": "Return the price of one token, set by the deployer.",
        "notice": "Callable by anyone.",
        "returns": {
          "_tokenPrice": "Price of a single token."
        }
      },
      "getPriceLimit()": {
        "details": "Return the highest possible price for a token.",
        "notice": "Callable by anyone.",
        "returns": {
          "_priceLimit": "Highest possible price."
        }
      },
      "getTimeLeft(uint256)": {
        "details": "Returns the time left for a token to expire.",
        "notice": "Callable by anyone.",
        "params": {
          "tokenId": "Token to get its expiry."
        },
        "returns": {
          "_0": "time left till expiry."
        }
      },
      "isMinted(address,uint256)": {
        "details": "Returns true if token `_tokenId` was minted from this contract to `_to`.       `_to` must not be a 0 address.       `_tokenId` must be an existent token.",
        "notice": "Callable by anyone.",
        "params": {
          "_to": "Address to which token `_tokenId` is minted.",
          "_tokenId": "Token minted."
        },
        "returns": {
          "_0": "bool true or false."
        }
      },
      "isValid(uint256)": {
        "details": "Return true if the token is expired or false if otherwise.",
        "notice": "Callable by anyone.",
        "params": {
          "tokenId": "Token to check if expired."
        },
        "returns": {
          "_0": "bool true or false."
        }
      },
      "issueWithSignature(address,bytes32,bytes,uint256,string)": {
        "details": "Mints a particular quantity of tokens to `to`,        on the condition that the address has been        signed by the allowlistOwner off-chain.       This will emit the {MintSoulboundToken} event       from the Soulbound.sol.",
        "notice": "Callable by anyone.",
        "params": {
          "addr": "Address to mint tokens to.",
          "hash": "Hashed message by the allowlistOwner.",
          "sig": "Signature, signed by the allowlistOwner.",
          "tokenId": "Id of the tokens to mint to the `addr`.",
          "tokenURI": "URI of the token to be minted."
        }
      },
      "issuerOf(address,uint256)": {
        "details": "Since a token cannnot be minted twice.       This function returns the address that minted token `_tokenId` to `_to`,       otherwise this contract.       `_to` must not be a 0 address.       `_tokenId` must be an existent token.       Owner of _tokenId must be _to.",
        "notice": "Callable by anyone.",
        "params": {
          "_to": "Address to which token `_tokenId` is minted.",
          "_tokenId": "Token minted."
        },
        "returns": {
          "_0": "address of issuer."
        }
      },
      "mintPendingRedeemableToken(address,address,uint256,uint256)": {
        "details": "Mints a pending soulbound token to `to`.       Pending tokens are minted and the receiver pays       to receive and completely mint them.",
        "notice": "Callable by the deployer of this contract [DaccredDeployer]           and the allowlistOwner.",
        "params": {
          "_tokenExpiryDate": "Set expiry date from the deployer.",
          "from": "Allowlist owner.",
          "to": "Receiver.",
          "tokenId": "Id of token to be minted."
        }
      },
      "owner()": {
        "details": "Returns the address of the current owner."
      },
      "ownerIssueWithSignature(address,bytes32,bytes,uint256,string)": {
        "details": "Ref SoulboundCore.sol issueWithSignature       This function grants the access to only the       deployer of the contract, unlike the core       that allows the function for anyone who has a       signature signed by the allowlistOwner.       This contract can be called by the deployer of the       contract [DaccredDeployer] but is also protected       as to the allowlistOwner must be the signer of the `sig.`",
        "notice": "Callable by the deployer of this contract [DaccredDeployer].",
        "params": {
          "addr": "Address to be minted to.",
          "hash": "Hash of message signed.",
          "sig": "Signature.",
          "tokenId": "TokenId to be issued.",
          "tokenURI": "URI of token to be issued."
        }
      },
      "ownerOf(uint256)": {
        "details": "ABTs assigned to zero address are considered invalid, and queries  about them do throw.",
        "notice": "Find the address bound to an ERC4973 account-bound token",
        "params": {
          "tokenId": "The identifier for an ABT"
        },
        "returns": {
          "_0": "The address of the owner bound to the ABT"
        }
      },
      "ownerRevokeWithSignature(bytes32,bytes,uint256)": {
        "details": "Ref SoulboundCore.sol revokeWithSignature       This function grants the access to only the       deployer of the contract, unlike the core       that allows the function for anyone who has a       signature signed by the allowlistOwner.       This contract can be called by the deployer of the       contract [DaccredDeployer] but is also protected       as to the allowlistOwner must be the signer of the `sig.`",
        "notice": "Callable by the deployer of this contract [DaccredDeployer].",
        "params": {
          "hash": "Hash of message signed.",
          "sig": "Signature.",
          "tokenId": "TokenId to be issued."
        }
      },
      "payToReceiveToken(address,uint256)": {
        "details": "Allows the `_receiver` to pay the price of one token to        fully mint the pending token.",
        "notice": "Callable by the deployer of this contract [DaccredDeployer].",
        "params": {
          "_receiver": "Receiver of the token.",
          "tokenId": "Pending tokenId for the receiver."
        }
      },
      "redeemMintedToken(address,uint256,uint256)": {
        "details": "For expired minted tokens, this function redeems them and makes       valid for another period of time.       Tokens must be expired for it to be redeemed.       Emits the {Redeemed} event.",
        "notice": "Callable by the deployer of this contract [DaccredDeployer].",
        "params": {
          "_receiver": "Receiver of the token.",
          "_tokenExpiryDate": "New expiry date for tokens.",
          "tokenId": "Pending tokenId for the receiver."
        }
      },
      "redeemMintedTokenWithSignature(address,address,uint256,uint256,bytes32,bytes)": {
        "details": "Allows the allowlistOwner to redeem an expired minted        token on behalf of the tokenOwner.",
        "notice": "Callable by the deployer of this contract [DaccredDeployer]           and the allowlistOwner.",
        "params": {
          "_caller": "Allowlist owner.",
          "_receiver": "Address of receiver.",
          "_tokenExpiryDate": "Days to extend the token.",
          "hash": "Hash of message.",
          "sig": "Signature.",
          "tokenId": "TokenId."
        }
      },
      "redeemPendingToken(address,uint256,uint256)": {
        "details": "For expired pending tokens, this function redeems them and makes       valid for another period of time.       Tokens must be expired for it to be redeemed.       Emits the {Redeemed} event.",
        "notice": "Callable by the deployer of this contract [DaccredDeployer].",
        "params": {
          "_receiver": "Receiver of the token.",
          "_tokenExpiryDate": "New expiry date for tokens.",
          "tokenId": "Pending tokenId for the receiver."
        }
      },
      "redeemPendingTokenWithSignature(address,address,uint256,uint256,bytes32,bytes)": {
        "details": "Allows the allowlistOwner to redeem an expired pending        token on behalf of the tokenOwner.",
        "notice": "Callable by the deployer of this contract [DaccredDeployer]           and the allowlistOwner.",
        "params": {
          "_caller": "Allowlist owner.",
          "_receiver": "Address of receiver.",
          "_tokenExpiryDate": "Days to extend the token.",
          "hash": "Hash of message.",
          "sig": "Signature.",
          "tokenId": "TokenId."
        }
      },
      "renounceOwnership()": {
        "details": "Leaves the contract without owner. It will not be possible to call       `onlyOwner` functions anymore. Can only be called by the current owner.       NOTE: Renouncing ownership will leave the contract without an owner,       thereby removing any functionality that is only available to the owner."
      },
      "revokeWithSignature(bytes32,bytes,uint256)": {
        "details": "Revokes the ownership of `tokenId` from the owner.       The token must exist and the signature must be signed the       allowlistOwner.       This emits the {RevokeWithSignature} event.",
        "notice": "Callable by anyone.",
        "params": {
          "hash": "Hashed message by the allowlistOwner.",
          "sig": "Signature, signed by the allowlistOwner.",
          "tokenId": "Id of the token to revoke."
        }
      },
      "setBaseURI(address,string)": {
        "details": "Allows the `caller` (allowlistOwner) to set the baseURI.       This is really important when the caller wants to mint       Multiple tokens with the same base URI.",
        "notice": "Callable by the deployer of this contract [DaccredDeployer]           and the allowlistOwner."
      },
      "setPrice(address,uint256)": {
        "details": "Allows `caller` to set `_price` as price of one token.",
        "notice": "Callable by the deployer of this contract [DaccredDeployer]           and the allowlistOwner.",
        "params": {
          "_price": "New price.",
          "caller": "AllowlistOwner."
        }
      },
      "supportsInterface(bytes4)": {
        "details": "See {IERC165-supportsInterface}."
      },
      "transferOwnership(address)": {
        "details": "Transfers ownership of the contract to a new account (`newOwner`).       Can only be called by the current owner."
      },
      "verifySignature(bytes32,bytes)": {
        "details": "Returns true if the signer of signature `sig` is the `allowlistOwner`.       And false if otherwise.",
        "notice": "Callable by anyone.",
        "returns": {
          "_0": "bool true or false."
        }
      },
      "verifySigner(address,bytes32,bytes)": {
        "details": "Returns true if the signer of `_signature` is `_signer`.",
        "notice": "Callable by anyone.",
        "returns": {
          "_0": "bool true or false."
        }
      },
      "withdraw(address)": {
        "details": "Allows the allowlistowner to withdraw his funds to his wallet.",
        "notice": "Callable by the deployer of this contract [DaccredDeployer]           and the allowlistOwner.",
        "params": {
          "_caller": "Address of allowlistowner."
        }
      }
    },
    "stateVariables": {
      "locked": {
        "details": "ReEntrancy Lock."
      },
      "pending": {
        "details": "Pending token receivals."
      },
      "pendingReceivers": {
        "details": "Pending address to receive tokens."
      },
      "priceLimit": {
        "details": "Price Limit [in eth] set by deploying contract."
      },
      "tax": {
        "details": "Tax for token redemptions.         15 represents 1.5% of total sales."
      },
      "tokenPrice": {
        "details": "Price of individual tokens, set by deployer."
      },
      "totalRevenue": {
        "details": "Total revenue from sales."
      },
      "totalSales": {
        "details": "Total sales of tokens [Total tokens paid for]."
      }
    },
    "title": "Soulbound Redeemable.",
    "version": 1
  },
  "offset": [
    417,
    15263
  ],
  "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x20E JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x95D89B41 GT PUSH2 0x118 JUMPI DUP1 PUSH4 0xDACA6F78 GT PUSH2 0xA0 JUMPI DUP1 PUSH4 0xED734730 GT PUSH2 0x6F JUMPI DUP1 PUSH4 0xED734730 EQ PUSH2 0x601 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x614 JUMPI DUP1 PUSH4 0xF577A500 EQ PUSH2 0x634 JUMPI DUP1 PUSH4 0xFAD54DE7 EQ PUSH2 0x664 JUMPI DUP1 PUSH4 0xFB8F198D EQ PUSH2 0x679 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0xDACA6F78 EQ PUSH2 0x581 JUMPI DUP1 PUSH4 0xE8C58763 EQ PUSH2 0x5A1 JUMPI DUP1 PUSH4 0xE92B0842 EQ PUSH2 0x5C1 JUMPI DUP1 PUSH4 0xEA5353C7 EQ PUSH2 0x5E1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0xBD97A6AD GT PUSH2 0xE7 JUMPI DUP1 PUSH4 0xBD97A6AD EQ PUSH2 0x4EC JUMPI DUP1 PUSH4 0xC3CAB38A EQ PUSH2 0x50C JUMPI DUP1 PUSH4 0xC87B56DD EQ PUSH2 0x52C JUMPI DUP1 PUSH4 0xC9DD94C7 EQ PUSH2 0x54C JUMPI DUP1 PUSH4 0xC9E4C54D EQ PUSH2 0x561 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x49C JUMPI DUP1 PUSH4 0x983A8B94 EQ PUSH2 0x4B1 JUMPI DUP1 PUSH4 0xA0B97DAA EQ PUSH2 0x4C4 JUMPI DUP1 PUSH4 0xBD131786 EQ PUSH2 0x4D9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x51CFF8D9 GT PUSH2 0x19B JUMPI DUP1 PUSH4 0x6E0A8746 GT PUSH2 0x16A JUMPI DUP1 PUSH4 0x6E0A8746 EQ PUSH2 0x40B JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x429 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x449 JUMPI DUP1 PUSH4 0x88433651 EQ PUSH2 0x45E JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x47E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x51CFF8D9 EQ PUSH2 0x332 JUMPI DUP1 PUSH4 0x5899E7B2 EQ PUSH2 0x352 JUMPI DUP1 PUSH4 0x6352211E EQ PUSH2 0x398 JUMPI DUP1 PUSH4 0x6833F200 EQ PUSH2 0x3D0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x1F04D135 GT PUSH2 0x1E2 JUMPI DUP1 PUSH4 0x1F04D135 EQ PUSH2 0x2AC JUMPI DUP1 PUSH4 0x210FA96B EQ PUSH2 0x2CC JUMPI DUP1 PUSH4 0x33E085C1 EQ PUSH2 0x2EC JUMPI DUP1 PUSH4 0x3D1A350E EQ PUSH2 0x2FF JUMPI DUP1 PUSH4 0x42966C68 EQ PUSH2 0x312 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH3 0xE4768B EQ PUSH2 0x213 JUMPI DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0x235 JUMPI DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x26A JUMPI DUP1 PUSH4 0x8C92E57 EQ PUSH2 0x28C JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x21F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x233 PUSH2 0x22E CALLDATASIZE PUSH1 0x4 PUSH2 0x25A8 JUMP JUMPDEST PUSH2 0x699 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x241 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x255 PUSH2 0x250 CALLDATASIZE PUSH1 0x4 PUSH2 0x25D2 JUMP JUMPDEST PUSH2 0x746 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x276 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x27F PUSH2 0x798 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x261 SWAP2 SWAP1 PUSH2 0x262C JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x298 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x233 PUSH2 0x2A7 CALLDATASIZE PUSH1 0x4 PUSH2 0x2702 JUMP JUMPDEST PUSH2 0x82A JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2B8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x233 PUSH2 0x2C7 CALLDATASIZE PUSH1 0x4 PUSH2 0x2702 JUMP JUMPDEST PUSH2 0x960 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2D8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x27F PUSH2 0x2E7 CALLDATASIZE PUSH1 0x4 PUSH2 0x2752 JUMP JUMPDEST PUSH2 0x9DA JUMP JUMPDEST PUSH2 0x233 PUSH2 0x2FA CALLDATASIZE PUSH1 0x4 PUSH2 0x25A8 JUMP JUMPDEST PUSH2 0xA5C JUMP JUMPDEST PUSH2 0x233 PUSH2 0x30D CALLDATASIZE PUSH1 0x4 PUSH2 0x276B JUMP JUMPDEST PUSH2 0xD52 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x31E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x233 PUSH2 0x32D CALLDATASIZE PUSH1 0x4 PUSH2 0x2752 JUMP JUMPDEST PUSH2 0x1022 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x33E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x233 PUSH2 0x34D CALLDATASIZE PUSH1 0x4 PUSH2 0x279E JUMP JUMPDEST PUSH2 0x1097 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x35E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x255 PUSH2 0x36D CALLDATASIZE PUSH1 0x4 PUSH2 0x25A8 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 SWAP1 SWAP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x8 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 DUP4 MSTORE SWAP3 SWAP1 MSTORE KECCAK256 SLOAD PUSH1 0xFF AND SWAP1 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3A4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x3B8 PUSH2 0x3B3 CALLDATASIZE PUSH1 0x4 PUSH2 0x2752 JUMP JUMPDEST PUSH2 0x11CB JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x261 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3DC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x3FD PUSH2 0x3EB CALLDATASIZE PUSH1 0x4 PUSH2 0x2752 JUMP JUMPDEST PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x261 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x417 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x9 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x3B8 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x435 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x3FD PUSH2 0x444 CALLDATASIZE PUSH1 0x4 PUSH2 0x279E JUMP JUMPDEST PUSH2 0x1230 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x455 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x233 PUSH2 0x12B9 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x46A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x233 PUSH2 0x479 CALLDATASIZE PUSH1 0x4 PUSH2 0x27B9 JUMP JUMPDEST PUSH2 0x12CD JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x48A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x6 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x3B8 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4A8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x27F PUSH2 0x1321 JUMP JUMPDEST PUSH2 0x233 PUSH2 0x4BF CALLDATASIZE PUSH1 0x4 PUSH2 0x2807 JUMP JUMPDEST PUSH2 0x1330 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4D0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0xE SLOAD PUSH2 0x3FD JUMP JUMPDEST PUSH2 0x233 PUSH2 0x4E7 CALLDATASIZE PUSH1 0x4 PUSH2 0x2807 JUMP JUMPDEST PUSH2 0x1406 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4F8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x233 PUSH2 0x507 CALLDATASIZE PUSH1 0x4 PUSH2 0x2881 JUMP JUMPDEST PUSH2 0x14C9 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x518 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x233 PUSH2 0x527 CALLDATASIZE PUSH1 0x4 PUSH2 0x28C3 JUMP JUMPDEST PUSH2 0x169B JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x538 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x27F PUSH2 0x547 CALLDATASIZE PUSH1 0x4 PUSH2 0x2752 JUMP JUMPDEST PUSH2 0x16F3 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x558 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x27F PUSH2 0x17E8 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x56D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x233 PUSH2 0x57C CALLDATASIZE PUSH1 0x4 PUSH2 0x28E5 JUMP JUMPDEST PUSH2 0x1845 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x58D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x255 PUSH2 0x59C CALLDATASIZE PUSH1 0x4 PUSH2 0x296D JUMP JUMPDEST PUSH2 0x1952 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x5AD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x3FD PUSH2 0x5BC CALLDATASIZE PUSH1 0x4 PUSH2 0x2752 JUMP JUMPDEST PUSH2 0x1965 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x5CD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x255 PUSH2 0x5DC CALLDATASIZE PUSH1 0x4 PUSH2 0x299E JUMP JUMPDEST PUSH2 0x19A2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x5ED JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x233 PUSH2 0x5FC CALLDATASIZE PUSH1 0x4 PUSH2 0x28E5 JUMP JUMPDEST PUSH2 0x1A36 JUMP JUMPDEST PUSH2 0x233 PUSH2 0x60F CALLDATASIZE PUSH1 0x4 PUSH2 0x276B JUMP JUMPDEST PUSH2 0x1A93 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x620 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x233 PUSH2 0x62F CALLDATASIZE PUSH1 0x4 PUSH2 0x279E JUMP JUMPDEST PUSH2 0x1C1D JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x640 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x255 PUSH2 0x64F CALLDATASIZE PUSH1 0x4 PUSH2 0x2752 JUMP JUMPDEST PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD TIMESTAMP GT ISZERO SWAP1 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x670 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0xF SLOAD PUSH2 0x3FD JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x685 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x3B8 PUSH2 0x694 CALLDATASIZE PUSH1 0x4 PUSH2 0x25A8 JUMP JUMPDEST PUSH2 0x1C93 JUMP JUMPDEST PUSH2 0x6A1 PUSH2 0x1DA7 JUMP JUMPDEST DUP2 PUSH2 0x6B4 PUSH1 0x9 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0x6ED JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x6E4 SWAP1 PUSH2 0x29F5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0xE SLOAD DUP3 GT ISZERO PUSH2 0x73F JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x18 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x507269636520686967686572207468616E206C696D69742E0000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x6E4 JUMP JUMPDEST POP PUSH1 0xF SSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND PUSH4 0x5B5E139F PUSH1 0xE0 SHL EQ DUP1 PUSH2 0x777 JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND PUSH4 0x5164CF47 PUSH1 0xE0 SHL EQ JUMPDEST DUP1 PUSH2 0x792 JUMPI POP PUSH4 0x1FFC9A7 PUSH1 0xE0 SHL PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP4 AND EQ JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x1 DUP1 SLOAD PUSH2 0x7A7 SWAP1 PUSH2 0x2A23 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x7D3 SWAP1 PUSH2 0x2A23 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x820 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x7F5 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x820 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x803 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x833 DUP2 PUSH2 0x1E01 JUMP JUMPDEST PUSH2 0x87F JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5265766F6B65206F6620696E6578697374656E7420746F6B656E2E0000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x6E4 JUMP JUMPDEST DUP2 MLOAD PUSH1 0x41 EQ PUSH2 0x8CB JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x18 PUSH1 0x24 DUP3 ADD MSTORE PUSH24 0x92DCECC2D8D2C840E6D2CEDCC2E8EAE4CA40D8CADCCEE8D PUSH1 0x43 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x6E4 JUMP JUMPDEST PUSH2 0x8D5 DUP4 DUP4 PUSH2 0x1952 JUMP JUMPDEST PUSH2 0x91D JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x19 PUSH1 0x24 DUP3 ADD MSTORE PUSH25 0x2430B9B4103737BA1039B4B3B732B210313C9037BBB732B917 PUSH1 0x39 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x6E4 JUMP JUMPDEST PUSH2 0x92F PUSH2 0x929 DUP3 PUSH2 0x11CB JUMP JUMPDEST DUP3 PUSH2 0x1E1E JUMP JUMPDEST POP PUSH1 0x40 MLOAD DUP2 SWAP1 PUSH32 0xF947BF2266AFEDE98F27AD2312DB8B2A17921852307F979B6F14A2B41FA774BC SWAP1 PUSH1 0x0 SWAP1 LOG2 POP POP POP JUMP JUMPDEST PUSH2 0x968 PUSH2 0x1DA7 JUMP JUMPDEST PUSH1 0xB SLOAD ISZERO PUSH2 0x98A JUMPI PUSH1 0xB DUP1 SLOAD SWAP1 PUSH1 0x0 PUSH2 0x980 DUP4 PUSH2 0x2A73 JUMP JUMPDEST SWAP2 SWAP1 POP SSTORE POP PUSH2 0x9CA JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x15 PUSH1 0x24 DUP3 ADD MSTORE PUSH21 0x2637BBB2B9BA103634B6B4BA103932B0B1B432B217 PUSH1 0x59 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x6E4 JUMP JUMPDEST PUSH2 0x9D5 DUP4 DUP4 DUP4 PUSH2 0x82A JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH2 0x9E4 PUSH2 0x17E8 JUMP JUMPDEST MLOAD PUSH1 0x0 SUB PUSH2 0xA24 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xD PUSH1 0x24 DUP3 ADD MSTORE PUSH13 0x456D7074792062617365555249 PUSH1 0x98 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x6E4 JUMP JUMPDEST PUSH2 0xA2C PUSH2 0x17E8 JUMP JUMPDEST PUSH2 0xA35 DUP4 PUSH2 0x1EE6 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0xA46 SWAP3 SWAP2 SWAP1 PUSH2 0x2A8A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xA64 PUSH2 0x1DA7 JUMP JUMPDEST PUSH1 0x13 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0xA74 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x13 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0xAA7 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x6E4 SWAP1 PUSH2 0x2AB9 JUMP JUMPDEST PUSH2 0xAB0 DUP2 PUSH2 0x1E01 JUMP JUMPDEST ISZERO PUSH2 0xAFD JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4D696E74206F6620616C7265616479206578697374696E6720746F6B656E2E00 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x6E4 JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x10 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND PUSH2 0xB55 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x17 PUSH1 0x24 DUP3 ADD MSTORE PUSH23 0x20B63932B0B23C903932B1B2B4BB32B2103A37B5B2B717 PUSH1 0x49 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x6E4 JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x11 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND SWAP2 AND EQ PUSH2 0xBB6 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x15 PUSH1 0x24 DUP3 ADD MSTORE PUSH21 0x2737BA103832B73234B733903932B1B2B4BB32B917 PUSH1 0x59 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x6E4 JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD TIMESTAMP GT ISZERO PUSH2 0xC25 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x28 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x526563656976616C206F66206578706972656420746F6B656E2C207265646565 PUSH1 0x44 DUP3 ADD MSTORE PUSH8 0x36903A37B5B2B717 PUSH1 0xC1 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x6E4 JUMP JUMPDEST PUSH1 0xF SLOAD CALLVALUE LT ISZERO PUSH2 0xC77 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1C PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5072696365206C6F776572207468616E20746F6B656E20636F73742E00000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x6E4 JUMP JUMPDEST PUSH1 0x0 PUSH1 0xF SLOAD CALLVALUE GT ISZERO PUSH2 0xCCB JUMPI PUSH1 0xF SLOAD PUSH2 0xC90 SWAP1 CALLVALUE PUSH2 0x2AE8 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 SWAP2 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND SWAP1 DUP3 ISZERO PUSH2 0x8FC MUL SWAP1 DUP4 SWAP1 PUSH1 0x0 DUP2 DUP2 DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0xCC9 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP JUMPDEST PUSH1 0x0 PUSH2 0xCD6 DUP4 PUSH2 0x9DA JUMP JUMPDEST SWAP1 POP PUSH2 0xCE3 DUP5 DUP5 DUP4 PUSH2 0x1FEF JUMP JUMPDEST POP PUSH1 0xC DUP1 SLOAD SWAP1 PUSH1 0x0 PUSH2 0xCF4 DUP4 PUSH2 0x2AFF JUMP JUMPDEST SWAP2 SWAP1 POP SSTORE POP PUSH1 0xF SLOAD PUSH1 0xD PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0xD0D SWAP2 SWAP1 PUSH2 0x2B18 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP POP PUSH1 0x0 SWAP2 DUP3 MSTORE POP PUSH1 0x10 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT SWAP1 DUP2 AND SWAP1 SWAP2 SSTORE PUSH1 0x11 SWAP1 SWAP3 MSTORE SWAP1 SWAP2 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND SWAP1 SSTORE PUSH1 0x13 DUP1 SLOAD SWAP1 SWAP2 AND SWAP1 SSTORE POP JUMP JUMPDEST PUSH2 0xD5A PUSH2 0x1DA7 JUMP JUMPDEST PUSH1 0x13 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0xD6A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x13 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0xDCD JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x526564656D7074696F6E20746F207A65726F20616464726573732E0000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x6E4 JUMP JUMPDEST PUSH2 0xDD6 DUP3 PUSH2 0x1E01 JUMP JUMPDEST PUSH2 0xE2C JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x21 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x526564656D7074696F6E206F66206E6F6E2D6578697374696E6720746F6B656E PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x17 PUSH1 0xF9 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x6E4 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x10 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0xE82 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x14 PUSH1 0x24 DUP3 ADD MSTORE PUSH20 0x2A37B5B2B71039BA34B636103832B73234B73397 PUSH1 0x61 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x6E4 JUMP JUMPDEST DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0xE95 DUP4 PUSH2 0x11CB JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0xEDE JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x10 PUSH1 0x24 DUP3 ADD MSTORE PUSH16 0x2737BA103A37B5B2B71037BBB732B917 PUSH1 0x81 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x6E4 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD TIMESTAMP GT PUSH2 0xF2E JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x10 PUSH1 0x24 DUP3 ADD MSTORE PUSH16 0x2A37B5B2B7103AB732BC3834B932B217 PUSH1 0x81 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x6E4 JUMP JUMPDEST PUSH1 0x0 PUSH2 0xF3B PUSH1 0x12 SLOAD PUSH2 0x2006 JUMP JUMPDEST SWAP1 POP DUP1 CALLVALUE LT ISZERO PUSH2 0xF8D JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5072696365206C6F776572207468616E20726564656D7074696F6E207461782E PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x6E4 JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO PUSH2 0xFDA JUMPI PUSH2 0xF9F DUP3 CALLVALUE PUSH2 0x2AE8 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 SWAP2 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND SWAP1 DUP3 ISZERO PUSH2 0x8FC MUL SWAP1 DUP4 SWAP1 PUSH1 0x0 DUP2 DUP2 DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0xFD8 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP JUMPDEST PUSH2 0xFE4 DUP5 DUP5 PUSH2 0x169B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP4 SWAP1 DUP6 SWAP1 PUSH32 0x6F73B7B8D37DF32EA60A45EADC8FC3D2D716D705EE099BD506817482CE847316 SWAP1 PUSH1 0x0 SWAP1 LOG3 POP POP PUSH1 0x13 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SSTORE POP POP POP JUMP JUMPDEST PUSH2 0x102B DUP2 PUSH2 0x11CB JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0x108B JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x6275726E3A2073656E646572206D757374206265206F776E6572000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x6E4 JUMP JUMPDEST PUSH2 0x1094 DUP2 PUSH2 0x2042 JUMP JUMPDEST POP JUMP JUMPDEST PUSH2 0x109F PUSH2 0x1DA7 JUMP JUMPDEST DUP1 PUSH2 0x10B2 PUSH1 0x9 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0x10E2 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x6E4 SWAP1 PUSH2 0x29F5 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x1138 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x18 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x53656E64696E6720746F207A65726F20616464726573732E0000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x6E4 JUMP JUMPDEST PUSH1 0xD SLOAD SELFBALANCE LT ISZERO PUSH2 0x118A JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1C PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x526576656E756520213D20436F6E74726163742062616C616E63652E00000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x6E4 JUMP JUMPDEST PUSH1 0xD SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND SWAP2 DUP1 ISZERO PUSH2 0x8FC MUL SWAP2 PUSH1 0x0 DUP2 DUP2 DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0x11C1 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP PUSH1 0x0 PUSH1 0xD SSTORE POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP1 PUSH2 0x792 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1C PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x6F776E65724F663A20746F6B656E20646F65736E277420657869737400000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x6E4 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x129D JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2C PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x62616C616E63654F663A2061646472657373207A65726F206973206E6F742061 PUSH1 0x44 DUP3 ADD MSTORE PUSH12 0x103B30B634B21037BBB732B9 PUSH1 0xA1 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x6E4 JUMP JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0x12C1 PUSH2 0x1DA7 JUMP JUMPDEST PUSH2 0x12CB PUSH1 0x0 PUSH2 0x20E9 JUMP JUMPDEST JUMP JUMPDEST PUSH2 0x12D5 PUSH2 0x1DA7 JUMP JUMPDEST DUP2 PUSH2 0x12E8 PUSH1 0x9 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0x1318 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x6E4 SWAP1 PUSH2 0x29F5 JUMP JUMPDEST PUSH2 0x9D5 DUP3 PUSH2 0x213B JUMP JUMPDEST PUSH1 0x60 PUSH1 0x2 DUP1 SLOAD PUSH2 0x7A7 SWAP1 PUSH2 0x2A23 JUMP JUMPDEST PUSH2 0x1338 PUSH2 0x1DA7 JUMP JUMPDEST DUP6 PUSH2 0x134B PUSH1 0x9 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0x137B JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x6E4 SWAP1 PUSH2 0x29F5 JUMP JUMPDEST PUSH1 0x13 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x138B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x13 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE PUSH2 0x13A2 DUP4 DUP4 PUSH2 0x1952 JUMP JUMPDEST PUSH2 0x13E8 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x17 PUSH1 0x24 DUP3 ADD MSTORE PUSH23 0x2430B9B4103737BA1039B4B3B732B210313C903CB7BA97 PUSH1 0x49 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x6E4 JUMP JUMPDEST PUSH2 0x13F3 DUP7 DUP7 DUP7 PUSH2 0xD52 JUMP JUMPDEST POP POP PUSH1 0x13 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SSTORE POP POP POP POP POP JUMP JUMPDEST PUSH2 0x140E PUSH2 0x1DA7 JUMP JUMPDEST DUP6 PUSH2 0x1421 PUSH1 0x9 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0x1451 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x6E4 SWAP1 PUSH2 0x29F5 JUMP JUMPDEST PUSH1 0x13 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x1461 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x13 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE PUSH2 0x1478 DUP4 DUP4 PUSH2 0x1952 JUMP JUMPDEST PUSH2 0x14BE JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x17 PUSH1 0x24 DUP3 ADD MSTORE PUSH23 0x2430B9B4103737BA1039B4B3B732B210313C903CB7BA97 PUSH1 0x49 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x6E4 JUMP JUMPDEST PUSH2 0x13F3 DUP7 DUP7 DUP7 PUSH2 0x1A93 JUMP JUMPDEST PUSH2 0x14D1 PUSH2 0x1DA7 JUMP JUMPDEST DUP4 PUSH2 0x14E4 PUSH1 0x9 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0x1514 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x6E4 SWAP1 PUSH2 0x29F5 JUMP JUMPDEST PUSH1 0xA SLOAD PUSH1 0xB SLOAD LT PUSH2 0x155C JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x12 PUSH1 0x24 DUP3 ADD MSTORE PUSH18 0x24B9B9BAB29021B0B8102932B0B1B432B217 PUSH1 0x71 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x6E4 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH2 0x1582 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x6E4 SWAP1 PUSH2 0x2AB9 JUMP JUMPDEST PUSH2 0x158B DUP4 PUSH2 0x1E01 JUMP JUMPDEST ISZERO PUSH2 0x15D8 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4D696E74206F6620616C7265616479206578697374696E6720746F6B656E2E00 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x6E4 JUMP JUMPDEST PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x10 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x1637 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1E PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4D696E74206F6620616C72656164792070656E64696E6720746F6B656E2E0000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x6E4 JUMP JUMPDEST PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x10 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE PUSH1 0x11 SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT SWAP1 SWAP2 AND OR SWAP1 SSTORE PUSH2 0x167F DUP4 DUP4 PUSH2 0x169B JUMP JUMPDEST PUSH1 0xB DUP1 SLOAD SWAP1 PUSH1 0x0 PUSH2 0x168F DUP4 PUSH2 0x2AFF JUMP JUMPDEST SWAP2 SWAP1 POP SSTORE POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0x16A5 DUP2 TIMESTAMP PUSH2 0x2B18 JUMP JUMPDEST PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 SWAP2 DUP3 SWAP1 KECCAK256 SWAP3 SWAP1 SWAP3 SSTORE DUP1 MLOAD DUP5 DUP2 MSTORE SWAP2 DUP3 ADD DUP4 SWAP1 MSTORE PUSH32 0x41A73BEB1018A8B63E0F451A8A4F483806142CF14BE45B1A58A23776A1E9B4BC SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP JUMP JUMPDEST PUSH1 0x60 PUSH2 0x16FE DUP3 PUSH2 0x1E01 JUMP JUMPDEST PUSH2 0x174A JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x746F6B656E5552493A20746F6B656E20646F65736E2774206578697374000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x6E4 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH2 0x1763 SWAP1 PUSH2 0x2A23 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x178F SWAP1 PUSH2 0x2A23 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x17DC JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x17B1 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x17DC JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x17BF JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x7 DUP1 SLOAD PUSH2 0x17F7 SWAP1 PUSH2 0x2A23 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 SUB PUSH2 0x1838 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xD PUSH1 0x24 DUP3 ADD MSTORE PUSH13 0x456D7074792062617365555249 PUSH1 0x98 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x6E4 JUMP JUMPDEST PUSH1 0x7 DUP1 SLOAD PUSH2 0x7A7 SWAP1 PUSH2 0x2A23 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH2 0x186B JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x6E4 SWAP1 PUSH2 0x2AB9 JUMP JUMPDEST DUP3 MLOAD PUSH1 0x41 EQ PUSH2 0x18B7 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x18 PUSH1 0x24 DUP3 ADD MSTORE PUSH24 0x92DCECC2D8D2C840E6D2CEDCC2E8EAE4CA40D8CADCCEE8D PUSH1 0x43 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x6E4 JUMP JUMPDEST PUSH2 0x18C1 DUP5 DUP5 PUSH2 0x1952 JUMP JUMPDEST PUSH2 0x1909 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x19 PUSH1 0x24 DUP3 ADD MSTORE PUSH25 0x2430B9B4103737BA1039B4B3B732B210313C9037BBB732B917 PUSH1 0x39 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x6E4 JUMP JUMPDEST PUSH2 0x1914 DUP6 DUP4 DUP4 PUSH2 0x1FEF JUMP JUMPDEST POP PUSH1 0x40 MLOAD DUP3 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 AND SWAP1 PUSH32 0x79AF0E59B31823DD289CEEBABC4D63D25F35926B8548E3A084A500C9D4E18556 SWAP1 PUSH1 0x0 SWAP1 LOG3 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x195E DUP4 DUP4 PUSH2 0x218D JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD TIMESTAMP GT ISZERO PUSH2 0x1983 JUMPI POP PUSH1 0x0 SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH2 0x792 SWAP1 TIMESTAMP SWAP1 PUSH2 0x2AE8 JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x20 DUP2 DUP2 ADD MLOAD PUSH1 0x40 DUP1 DUP5 ADD MLOAD PUSH1 0x60 DUP1 DUP7 ADD MLOAD DUP4 MLOAD PUSH1 0x0 DUP1 DUP3 MSTORE DUP2 DUP9 ADD DUP1 DUP8 MSTORE DUP11 SWAP1 MSTORE SWAP2 DUP3 BYTE DUP2 DUP7 ADD DUP2 SWAP1 MSTORE SWAP3 DUP2 ADD DUP7 SWAP1 MSTORE PUSH1 0x80 DUP2 ADD DUP5 SWAP1 MSTORE SWAP4 MLOAD SWAP1 SWAP6 SWAP3 SWAP4 SWAP2 SWAP3 PUSH1 0x1 SWAP3 PUSH1 0xA0 DUP1 DUP3 ADD SWAP4 PUSH1 0x1F NOT DUP2 ADD SWAP3 DUP2 SWAP1 SUB SWAP1 SWAP2 ADD SWAP1 DUP6 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1A0C JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP PUSH1 0x20 PUSH1 0x40 MLOAD SUB MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP8 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ SWAP4 POP POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH2 0x1A3E PUSH2 0x1DA7 JUMP JUMPDEST PUSH1 0xA SLOAD PUSH1 0xB SLOAD LT PUSH2 0x1A86 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x12 PUSH1 0x24 DUP3 ADD MSTORE PUSH18 0x24B9B9BAB29021B0B8102932B0B1B432B217 PUSH1 0x71 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x6E4 JUMP JUMPDEST PUSH2 0x167F DUP6 DUP6 DUP6 DUP6 DUP6 PUSH2 0x1845 JUMP JUMPDEST PUSH2 0x1A9B PUSH2 0x1DA7 JUMP JUMPDEST PUSH1 0x13 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x1AAB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x13 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x1B0E JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x526564656D7074696F6E20746F207A65726F20616464726573732E0000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x6E4 JUMP JUMPDEST PUSH2 0x1B17 DUP3 PUSH2 0x1E01 JUMP JUMPDEST ISZERO PUSH2 0x1B64 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x526564656D7074696F6E206F66206578697374696E6720746F6B656E2E000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x6E4 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x10 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND PUSH2 0x1BBC JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x17 PUSH1 0x24 DUP3 ADD MSTORE PUSH23 0x20B63932B0B23C903932B1B2B4BB32B2103A37B5B2B717 PUSH1 0x49 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x6E4 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x11 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 DUP2 AND SWAP2 AND EQ PUSH2 0xEDE JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x15 PUSH1 0x24 DUP3 ADD MSTORE PUSH21 0x2737BA103832B73234B733903932B1B2B4BB32B917 PUSH1 0x59 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x6E4 JUMP JUMPDEST PUSH2 0x1C25 PUSH2 0x1DA7 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x1C8A JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x646472657373 PUSH1 0xD0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x6E4 JUMP JUMPDEST PUSH2 0x1094 DUP2 PUSH2 0x20E9 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x1CEB JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x17 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x517565727920666F72207A65726F20616464726573732E000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x6E4 JUMP JUMPDEST PUSH2 0x1CF4 DUP3 PUSH2 0x1E01 JUMP JUMPDEST PUSH2 0x1D36 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x13 PUSH1 0x24 DUP3 ADD MSTORE PUSH19 0x2737B716B2BC34B9BA32B73A103A37B5B2B717 PUSH1 0x69 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x6E4 JUMP JUMPDEST DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x1D49 DUP4 PUSH2 0x11CB JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0x1D9F JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x546F6B656E206E6F74206F776E65642062792061646472657373000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x6E4 JUMP JUMPDEST POP ADDRESS SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x6 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x12CB JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x6E4 JUMP JUMPDEST PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND ISZERO ISZERO SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1E29 DUP3 PUSH2 0x1E01 JUMP JUMPDEST PUSH2 0x1E6B JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x13 PUSH1 0x24 DUP3 ADD MSTORE PUSH19 0x2737B716B2BC34B9BA32B73A103A37B5B2B717 PUSH1 0x69 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x6E4 JUMP JUMPDEST DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x1E7E DUP4 PUSH2 0x11CB JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0x1ED4 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x546F6B656E206E6F74206F776E65642062792061646472657373000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x6E4 JUMP JUMPDEST PUSH2 0x1EDD DUP3 PUSH2 0x2310 JUMP JUMPDEST POP PUSH1 0x1 SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x60 DUP2 PUSH1 0x0 SUB PUSH2 0x1F0D JUMPI POP POP PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD SWAP1 SWAP2 MSTORE PUSH1 0x1 DUP2 MSTORE PUSH1 0x3 PUSH1 0xFC SHL PUSH1 0x20 DUP3 ADD MSTORE SWAP1 JUMP JUMPDEST DUP2 PUSH1 0x0 JUMPDEST DUP2 ISZERO PUSH2 0x1F37 JUMPI DUP1 PUSH2 0x1F21 DUP2 PUSH2 0x2AFF JUMP JUMPDEST SWAP2 POP PUSH2 0x1F30 SWAP1 POP PUSH1 0xA DUP4 PUSH2 0x2B46 JUMP JUMPDEST SWAP2 POP PUSH2 0x1F11 JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1F52 JUMPI PUSH2 0x1F52 PUSH2 0x265F JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x1F ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x1F7C JUMPI PUSH1 0x20 DUP3 ADD DUP2 DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP JUMPDEST POP SWAP1 POP JUMPDEST DUP5 ISZERO PUSH2 0x1FE7 JUMPI PUSH2 0x1F91 PUSH1 0x1 DUP4 PUSH2 0x2AE8 JUMP JUMPDEST SWAP2 POP PUSH2 0x1F9E PUSH1 0xA DUP7 PUSH2 0x2B5A JUMP JUMPDEST PUSH2 0x1FA9 SWAP1 PUSH1 0x30 PUSH2 0x2B18 JUMP JUMPDEST PUSH1 0xF8 SHL DUP2 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0x1FBE JUMPI PUSH2 0x1FBE PUSH2 0x2B6E JUMP JUMPDEST PUSH1 0x20 ADD ADD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xF8 SHL SUB NOT AND SWAP1 DUP2 PUSH1 0x0 BYTE SWAP1 MSTORE8 POP PUSH2 0x1FE0 PUSH1 0xA DUP7 PUSH2 0x2B46 JUMP JUMPDEST SWAP5 POP PUSH2 0x1F80 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1FFC DUP5 DUP5 DUP5 PUSH2 0x23A6 JUMP JUMPDEST POP PUSH1 0x1 SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH5 0x746A528800 PUSH1 0xD SLOAD LT ISZERO PUSH2 0x201C JUMPI PUSH1 0x0 SWAP2 POP JUMPDEST PUSH2 0x3E8 PUSH1 0xD SLOAD DUP4 PUSH2 0x202D SWAP2 SWAP1 PUSH2 0x2B84 JUMP JUMPDEST PUSH2 0x2038 SWAP1 PUSH1 0xA PUSH2 0x2B84 JUMP JUMPDEST PUSH2 0x792 SWAP2 SWAP1 PUSH2 0x2B46 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x204D DUP3 PUSH2 0x11CB JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD SWAP3 SWAP4 POP PUSH1 0x1 SWAP3 SWAP1 SWAP2 SWAP1 PUSH2 0x207B SWAP1 DUP5 SWAP1 PUSH2 0x2AE8 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND SWAP1 SSTORE PUSH1 0x4 SWAP1 SWAP2 MSTORE DUP2 KECCAK256 PUSH2 0x20AF SWAP2 PUSH2 0x2543 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP3 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND SWAP1 PUSH32 0xEC9AB91322523C899EDE7830EC9BFC992B5981CDCC27B91162FB23DE5791117B SWAP1 PUSH1 0x0 SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x6 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR SWAP1 SWAP4 SSTORE PUSH1 0x40 MLOAD SWAP2 AND SWAP2 SWAP1 DUP3 SWAP1 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP1 PUSH1 0x0 SWAP1 LOG3 POP POP JUMP JUMPDEST DUP1 MLOAD PUSH1 0x0 SUB PUSH2 0x217D JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xE PUSH1 0x24 DUP3 ADD MSTORE PUSH14 0x92DCECC2D8D2C840D8CADCCEE8D PUSH1 0x93 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x6E4 JUMP JUMPDEST PUSH1 0x7 PUSH2 0x2189 DUP3 DUP3 PUSH2 0x2BF1 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2197 PUSH2 0x1DA7 JUMP JUMPDEST PUSH1 0x6 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x2205 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433732313A3A2043616C6C20746F20636F6E7472616374206D6164652062 PUSH1 0x44 DUP3 ADD MSTORE PUSH11 0x3C903737B716B7BBB732B9 PUSH1 0xA9 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x6E4 JUMP JUMPDEST DUP2 MLOAD PUSH1 0x41 EQ PUSH2 0x2256 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1E PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4572723A3A20496E76616C6964207369676E6174757265206C656E6774680000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x6E4 JUMP JUMPDEST PUSH1 0x20 DUP3 DUP2 ADD MLOAD PUSH1 0x40 DUP1 DUP6 ADD MLOAD PUSH1 0x60 DUP1 DUP8 ADD MLOAD DUP4 MLOAD PUSH1 0x0 DUP1 DUP3 MSTORE SWAP7 DUP2 ADD DUP1 DUP7 MSTORE DUP11 SWAP1 MSTORE SWAP1 DUP7 BYTE SWAP4 DUP2 ADD DUP5 SWAP1 MSTORE SWAP1 DUP2 ADD DUP5 SWAP1 MSTORE PUSH1 0x80 DUP2 ADD DUP3 SWAP1 MSTORE SWAP3 SWAP4 SWAP1 SWAP3 PUSH1 0x1 SWAP1 PUSH1 0xA0 ADD PUSH1 0x20 PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 SUB SWAP1 DUP1 DUP5 SUB SWAP1 DUP6 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x22BA JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP PUSH1 0x40 MLOAD PUSH1 0x1F NOT DUP2 ADD MLOAD PUSH1 0x9 SLOAD SWAP1 SWAP4 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP6 AND SWAP2 AND EQ SWAP2 POP DUP2 SWAP1 DUP10 SWAP1 PUSH32 0x7E4FE2A2A805A357593FDBDDE58C02F6A53D8B4960744CD31A98697FC11C2E36 SWAP1 PUSH1 0x0 SWAP1 LOG3 SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0x2319 DUP2 PUSH2 0x1E01 JUMP JUMPDEST PUSH2 0x2365 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x18 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4275726E206F6620696E6578697374656E7420746F6B656E0000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x6E4 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2370 DUP3 PUSH2 0x11CB JUMP JUMPDEST SWAP1 POP PUSH2 0x237B DUP3 PUSH2 0x2042 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x8 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 DUP4 MSTORE SWAP3 SWAP1 MSTORE KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x23CC JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x6E4 SWAP1 PUSH2 0x2AB9 JUMP JUMPDEST DUP1 MLOAD PUSH1 0x0 SUB PUSH2 0x240F JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xF PUSH1 0x24 DUP3 ADD MSTORE PUSH15 0x22B6B83A3C903A37B5B2B72AA92497 PUSH1 0x89 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x6E4 JUMP JUMPDEST PUSH2 0x241A DUP4 DUP4 DUP4 PUSH2 0x244C JUMP JUMPDEST POP POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x8 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 DUP4 MSTORE SWAP3 SWAP1 MSTORE KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2457 DUP4 PUSH2 0x1E01 JUMP JUMPDEST ISZERO PUSH2 0x249B JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x14 PUSH1 0x24 DUP3 ADD MSTORE PUSH20 0x6D696E743A20746F6B656E494420657869737473 PUSH1 0x60 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x6E4 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD PUSH1 0x1 SWAP3 SWAP1 PUSH2 0x24C4 SWAP1 DUP5 SWAP1 PUSH2 0x2B18 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP10 AND OR SWAP1 SSTORE PUSH1 0x4 SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 PUSH2 0x2504 DUP4 DUP3 PUSH2 0x2BF1 JUMP JUMPDEST POP PUSH1 0x40 MLOAD DUP4 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND SWAP1 PUSH32 0xE9274A84B19E9428826DE6BAE8C48329354F8F0E73F771B97CAE2D9DCCD45A27 SWAP1 PUSH1 0x0 SWAP1 LOG3 POP SWAP1 SWAP3 SWAP2 POP POP JUMP JUMPDEST POP DUP1 SLOAD PUSH2 0x254F SWAP1 PUSH2 0x2A23 JUMP JUMPDEST PUSH1 0x0 DUP3 SSTORE DUP1 PUSH1 0x1F LT PUSH2 0x255F JUMPI POP POP JUMP JUMPDEST PUSH1 0x1F ADD PUSH1 0x20 SWAP1 DIV SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 DUP2 ADD SWAP1 PUSH2 0x1094 SWAP2 SWAP1 JUMPDEST DUP1 DUP3 GT ISZERO PUSH2 0x258D JUMPI PUSH1 0x0 DUP2 SSTORE PUSH1 0x1 ADD PUSH2 0x2579 JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x199D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x25BB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x25C4 DUP4 PUSH2 0x2591 JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x25E4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP2 AND DUP2 EQ PUSH2 0x195E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x2617 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x25FF JUMP JUMPDEST DUP4 DUP2 GT ISZERO PUSH2 0x2626 JUMPI PUSH1 0x0 DUP5 DUP5 ADD MSTORE JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH1 0x0 DUP3 MLOAD DUP1 PUSH1 0x20 DUP5 ADD MSTORE PUSH2 0x264B DUP2 PUSH1 0x40 DUP6 ADD PUSH1 0x20 DUP8 ADD PUSH2 0x25FC JUMP JUMPDEST PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP2 SWAP1 SWAP2 ADD PUSH1 0x40 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x2686 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x26A1 JUMPI PUSH2 0x26A1 PUSH2 0x265F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1F DUP4 ADD PUSH1 0x1F NOT SWAP1 DUP2 AND PUSH1 0x3F ADD AND DUP2 ADD SWAP1 DUP3 DUP3 GT DUP2 DUP4 LT OR ISZERO PUSH2 0x26C9 JUMPI PUSH2 0x26C9 PUSH2 0x265F JUMP JUMPDEST DUP2 PUSH1 0x40 MSTORE DUP4 DUP2 MSTORE DUP7 PUSH1 0x20 DUP6 DUP9 ADD ADD GT ISZERO PUSH2 0x26E2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP4 PUSH1 0x20 DUP8 ADD PUSH1 0x20 DUP4 ADD CALLDATACOPY PUSH1 0x0 PUSH1 0x20 DUP6 DUP4 ADD ADD MSTORE DUP1 SWAP5 POP POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x2717 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP4 CALLDATALOAD SWAP3 POP PUSH1 0x20 DUP5 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x2735 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x2741 DUP7 DUP3 DUP8 ADD PUSH2 0x2675 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 DUP5 ADD CALLDATALOAD SWAP1 POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2764 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x2780 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x2789 DUP5 PUSH2 0x2591 JUMP JUMPDEST SWAP6 PUSH1 0x20 DUP6 ADD CALLDATALOAD SWAP6 POP PUSH1 0x40 SWAP1 SWAP5 ADD CALLDATALOAD SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x27B0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x195E DUP3 PUSH2 0x2591 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x27CC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x27D5 DUP4 PUSH2 0x2591 JUMP JUMPDEST SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x27F1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x27FD DUP6 DUP3 DUP7 ADD PUSH2 0x2675 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0xC0 DUP8 DUP10 SUB SLT ISZERO PUSH2 0x2820 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x2829 DUP8 PUSH2 0x2591 JUMP JUMPDEST SWAP6 POP PUSH2 0x2837 PUSH1 0x20 DUP9 ADD PUSH2 0x2591 JUMP JUMPDEST SWAP5 POP PUSH1 0x40 DUP8 ADD CALLDATALOAD SWAP4 POP PUSH1 0x60 DUP8 ADD CALLDATALOAD SWAP3 POP PUSH1 0x80 DUP8 ADD CALLDATALOAD SWAP2 POP PUSH1 0xA0 DUP8 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x2868 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x2874 DUP10 DUP3 DUP11 ADD PUSH2 0x2675 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 POP SWAP3 SWAP6 POP SWAP3 SWAP6 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x2897 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x28A0 DUP6 PUSH2 0x2591 JUMP JUMPDEST SWAP4 POP PUSH2 0x28AE PUSH1 0x20 DUP7 ADD PUSH2 0x2591 JUMP JUMPDEST SWAP4 SWAP7 SWAP4 SWAP6 POP POP POP POP PUSH1 0x40 DUP3 ADD CALLDATALOAD SWAP2 PUSH1 0x60 ADD CALLDATALOAD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x28D6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP POP DUP1 CALLDATALOAD SWAP3 PUSH1 0x20 SWAP1 SWAP2 ADD CALLDATALOAD SWAP2 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xA0 DUP7 DUP9 SUB SLT ISZERO PUSH2 0x28FD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x2906 DUP7 PUSH2 0x2591 JUMP JUMPDEST SWAP5 POP PUSH1 0x20 DUP7 ADD CALLDATALOAD SWAP4 POP PUSH1 0x40 DUP7 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x292A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x2936 DUP10 DUP4 DUP11 ADD PUSH2 0x2675 JUMP JUMPDEST SWAP5 POP PUSH1 0x60 DUP9 ADD CALLDATALOAD SWAP4 POP PUSH1 0x80 DUP9 ADD CALLDATALOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH2 0x2953 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2960 DUP9 DUP3 DUP10 ADD PUSH2 0x2675 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 POP SWAP3 SWAP6 SWAP1 SWAP4 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x2980 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x27F1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x29B3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x29BC DUP5 PUSH2 0x2591 JUMP JUMPDEST SWAP3 POP PUSH1 0x20 DUP5 ADD CALLDATALOAD SWAP2 POP PUSH1 0x40 DUP5 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x29DF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x29EB DUP7 DUP3 DUP8 ADD PUSH2 0x2675 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x14 SWAP1 DUP3 ADD MSTORE PUSH20 0x4E6F7420416C6C6F776C697374204F776E657221 PUSH1 0x60 SHL PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0x2A37 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x2A57 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP2 PUSH2 0x2A82 JUMPI PUSH2 0x2A82 PUSH2 0x2A5D JUMP JUMPDEST POP PUSH1 0x0 NOT ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP4 MLOAD PUSH2 0x2A9C DUP2 DUP5 PUSH1 0x20 DUP9 ADD PUSH2 0x25FC JUMP JUMPDEST DUP4 MLOAD SWAP1 DUP4 ADD SWAP1 PUSH2 0x2AB0 DUP2 DUP4 PUSH1 0x20 DUP9 ADD PUSH2 0x25FC JUMP JUMPDEST ADD SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x15 SWAP1 DUP3 ADD MSTORE PUSH21 0x26B4B73A103A37903D32B9379030B2323932B9B997 PUSH1 0x59 SHL PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 LT ISZERO PUSH2 0x2AFA JUMPI PUSH2 0x2AFA PUSH2 0x2A5D JUMP JUMPDEST POP SUB SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 DUP3 ADD PUSH2 0x2B11 JUMPI PUSH2 0x2B11 PUSH2 0x2A5D JUMP JUMPDEST POP PUSH1 0x1 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 NOT DUP3 GT ISZERO PUSH2 0x2B2B JUMPI PUSH2 0x2B2B PUSH2 0x2A5D JUMP JUMPDEST POP ADD SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x2B55 JUMPI PUSH2 0x2B55 PUSH2 0x2B30 JUMP JUMPDEST POP DIV SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x2B69 JUMPI PUSH2 0x2B69 PUSH2 0x2B30 JUMP JUMPDEST POP MOD SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x0 NOT DIV DUP4 GT DUP3 ISZERO ISZERO AND ISZERO PUSH2 0x2B9E JUMPI PUSH2 0x2B9E PUSH2 0x2A5D JUMP JUMPDEST POP MUL SWAP1 JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH2 0x9D5 JUMPI PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x20 DUP2 KECCAK256 PUSH1 0x1F DUP6 ADD PUSH1 0x5 SHR DUP2 ADD PUSH1 0x20 DUP7 LT ISZERO PUSH2 0x2BCA JUMPI POP DUP1 JUMPDEST PUSH1 0x1F DUP6 ADD PUSH1 0x5 SHR DUP3 ADD SWAP2 POP JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x2BE9 JUMPI DUP3 DUP2 SSTORE PUSH1 0x1 ADD PUSH2 0x2BD6 JUMP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST DUP2 MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x2C0B JUMPI PUSH2 0x2C0B PUSH2 0x265F JUMP JUMPDEST PUSH2 0x2C1F DUP2 PUSH2 0x2C19 DUP5 SLOAD PUSH2 0x2A23 JUMP JUMPDEST DUP5 PUSH2 0x2BA3 JUMP JUMPDEST PUSH1 0x20 DUP1 PUSH1 0x1F DUP4 GT PUSH1 0x1 DUP2 EQ PUSH2 0x2C54 JUMPI PUSH1 0x0 DUP5 ISZERO PUSH2 0x2C3C JUMPI POP DUP6 DUP4 ADD MLOAD JUMPDEST PUSH1 0x0 NOT PUSH1 0x3 DUP7 SWAP1 SHL SHR NOT AND PUSH1 0x1 DUP6 SWAP1 SHL OR DUP6 SSTORE PUSH2 0x2BE9 JUMP JUMPDEST PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 DUP2 KECCAK256 PUSH1 0x1F NOT DUP7 AND SWAP2 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x2C83 JUMPI DUP9 DUP7 ADD MLOAD DUP3 SSTORE SWAP5 DUP5 ADD SWAP5 PUSH1 0x1 SWAP1 SWAP2 ADD SWAP1 DUP5 ADD PUSH2 0x2C64 JUMP JUMPDEST POP DUP6 DUP3 LT ISZERO PUSH2 0x2CA1 JUMPI DUP8 DUP6 ADD MLOAD PUSH1 0x0 NOT PUSH1 0x3 DUP9 SWAP1 SHL PUSH1 0xF8 AND SHR NOT AND DUP2 SSTORE JUMPDEST POP POP POP POP POP PUSH1 0x1 SWAP1 DUP2 SHL ADD SWAP1 SSTORE POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 BYTE MSTORE8 LOG4 DUP9 0xAD SLT SWAP7 SHR 0xE9 COINBASE CALLDATACOPY SSTORE 0xB4 ADDRESS SMOD 0xBB 0xC5 0xC9 XOR SWAP5 0xA6 0xD0 PUSH22 0x11508F80A7BE28AA9F64736F6C634300080F00330000 ",
  "pcMap": {
    "0": {
      "offset": [
        417,
        15263
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x80"
    },
    "2": {
      "fn": null,
      "offset": [
        417,
        15263
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "4": {
      "fn": null,
      "offset": [
        417,
        15263
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "5": {
      "fn": null,
      "offset": [
        417,
        15263
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x4"
    },
    "7": {
      "fn": null,
      "offset": [
        417,
        15263
      ],
      "op": "CALLDATASIZE",
      "path": "5"
    },
    "8": {
      "fn": null,
      "offset": [
        417,
        15263
      ],
      "op": "LT",
      "path": "5"
    },
    "9": {
      "fn": null,
      "offset": [
        417,
        15263
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x20E"
    },
    "12": {
      "fn": null,
      "offset": [
        417,
        15263
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "13": {
      "fn": null,
      "offset": [
        417,
        15263
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "15": {
      "fn": null,
      "offset": [
        417,
        15263
      ],
      "op": "CALLDATALOAD",
      "path": "5"
    },
    "16": {
      "fn": null,
      "offset": [
        417,
        15263
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0xE0"
    },
    "18": {
      "fn": null,
      "offset": [
        417,
        15263
      ],
      "op": "SHR",
      "path": "5"
    },
    "19": {
      "fn": null,
      "offset": [
        417,
        15263
      ],
      "op": "DUP1",
      "path": "5"
    },
    "20": {
      "fn": null,
      "offset": [
        417,
        15263
      ],
      "op": "PUSH4",
      "path": "5",
      "value": "0x95D89B41"
    },
    "25": {
      "fn": null,
      "offset": [
        417,
        15263
      ],
      "op": "GT",
      "path": "5"
    },
    "26": {
      "fn": null,
      "offset": [
        417,
        15263
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x118"
    },
    "29": {
      "fn": null,
      "offset": [
        417,
        15263
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "30": {
      "fn": null,
      "offset": [
        417,
        15263
      ],
      "op": "DUP1",
      "path": "5"
    },
    "31": {
      "fn": null,
      "offset": [
        417,
        15263
      ],
      "op": "PUSH4",
      "path": "5",
      "value": "0xDACA6F78"
    },
    "36": {
      "fn": null,
      "offset": [
        417,
        15263
      ],
      "op": "GT",
      "path": "5"
    },
    "37": {
      "fn": null,
      "offset": [
        417,
        15263
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0xA0"
    },
    "40": {
      "fn": null,
      "offset": [
        417,
        15263
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "41": {
      "fn": null,
      "offset": [
        417,
        15263
      ],
      "op": "DUP1",
      "path": "5"
    },
    "42": {
      "fn": null,
      "offset": [
        417,
        15263
      ],
      "op": "PUSH4",
      "path": "5",
      "value": "0xED734730"
    },
    "47": {
      "fn": null,
      "offset": [
        417,
        15263
      ],
      "op": "GT",
      "path": "5"
    },
    "48": {
      "fn": null,
      "offset": [
        417,
        15263
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x6F"
    },
    "51": {
      "fn": null,
      "offset": [
        417,
        15263
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "52": {
      "fn": null,
      "offset": [
        417,
        15263
      ],
      "op": "DUP1",
      "path": "5"
    },
    "53": {
      "fn": null,
      "offset": [
        417,
        15263
      ],
      "op": "PUSH4",
      "path": "5",
      "value": "0xED734730"
    },
    "58": {
      "fn": null,
      "offset": [
        417,
        15263
      ],
      "op": "EQ",
      "path": "5"
    },
    "59": {
      "fn": null,
      "offset": [
        417,
        15263
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x601"
    },
    "62": {
      "fn": null,
      "offset": [
        417,
        15263
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "63": {
      "fn": null,
      "offset": [
        417,
        15263
      ],
      "op": "DUP1",
      "path": "5"
    },
    "64": {
      "fn": null,
      "offset": [
        417,
        15263
      ],
      "op": "PUSH4",
      "path": "5",
      "value": "0xF2FDE38B"
    },
    "69": {
      "fn": null,
      "offset": [
        417,
        15263
      ],
      "op": "EQ",
      "path": "5"
    },
    "70": {
      "fn": null,
      "offset": [
        417,
        15263
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x614"
    },
    "73": {
      "fn": null,
      "offset": [
        417,
        15263
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "74": {
      "fn": null,
      "offset": [
        417,
        15263
      ],
      "op": "DUP1",
      "path": "5"
    },
    "75": {
      "fn": null,
      "offset": [
        417,
        15263
      ],
      "op": "PUSH4",
      "path": "5",
      "value": "0xF577A500"
    },
    "80": {
      "fn": null,
      "offset": [
        417,
        15263
      ],
      "op": "EQ",
      "path": "5"
    },
    "81": {
      "fn": null,
      "offset": [
        417,
        15263
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x634"
    },
    "84": {
      "fn": null,
      "offset": [
        417,
        15263
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "85": {
      "fn": null,
      "offset": [
        417,
        15263
      ],
      "op": "DUP1",
      "path": "5"
    },
    "86": {
      "fn": null,
      "offset": [
        417,
        15263
      ],
      "op": "PUSH4",
      "path": "5",
      "value": "0xFAD54DE7"
    },
    "91": {
      "fn": null,
      "offset": [
        417,
        15263
      ],
      "op": "EQ",
      "path": "5"
    },
    "92": {
      "fn": null,
      "offset": [
        417,
        15263
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x664"
    },
    "95": {
      "fn": null,
      "offset": [
        417,
        15263
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "96": {
      "fn": null,
      "offset": [
        417,
        15263
      ],
      "op": "DUP1",
      "path": "5"
    },
    "97": {
      "fn": null,
      "offset": [
        417,
        15263
      ],
      "op": "PUSH4",
      "path": "5",
      "value": "0xFB8F198D"
    },
    "102": {
      "fn": null,
      "offset": [
        417,
        15263
      ],
      "op": "EQ",
      "path": "5"
    },
    "103": {
      "fn": null,
      "offset": [
        417,
        15263
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x679"
    },
    "106": {
      "fn": null,
      "offset": [
        417,
        15263
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "107": {
      "fn": null,
      "offset": [
        417,
        15263
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "109": {
      "fn": null,
      "offset": [
        417,
        15263
      ],
      "op": "DUP1",
      "path": "5"
    },
    "110": {
      "fn": null,
      "offset": [
        417,
        15263
      ],
      "op": "REVERT",
      "path": "5"
    },
    "111": {
      "fn": null,
      "offset": [
        417,
        15263
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "112": {
      "fn": null,
      "offset": [
        417,
        15263
      ],
      "op": "DUP1",
      "path": "5"
    },
    "113": {
      "fn": null,
      "offset": [
        417,
        15263
      ],
      "op": "PUSH4",
      "path": "5",
      "value": "0xDACA6F78"
    },
    "118": {
      "fn": null,
      "offset": [
        417,
        15263
      ],
      "op": "EQ",
      "path": "5"
    },
    "119": {
      "fn": null,
      "offset": [
        417,
        15263
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x581"
    },
    "122": {
      "fn": null,
      "offset": [
        417,
        15263
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "123": {
      "fn": null,
      "offset": [
        417,
        15263
      ],
      "op": "DUP1",
      "path": "5"
    },
    "124": {
      "fn": null,
      "offset": [
        417,
        15263
      ],
      "op": "PUSH4",
      "path": "5",
      "value": "0xE8C58763"
    },
    "129": {
      "fn": null,
      "offset": [
        417,
        15263
      ],
      "op": "EQ",
      "path": "5"
    },
    "130": {
      "fn": null,
      "offset": [
        417,
        15263
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x5A1"
    },
    "133": {
      "fn": null,
      "offset": [
        417,
        15263
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "134": {
      "fn": null,
      "offset": [
        417,
        15263
      ],
      "op": "DUP1",
      "path": "5"
    },
    "135": {
      "fn": null,
      "offset": [
        417,
        15263
      ],
      "op": "PUSH4",
      "path": "5",
      "value": "0xE92B0842"
    },
    "140": {
      "fn": null,
      "offset": [
        417,
        15263
      ],
      "op": "EQ",
      "path": "5"
    },
    "141": {
      "fn": null,
      "offset": [
        417,
        15263
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x5C1"
    },
    "144": {
      "fn": null,
      "offset": [
        417,
        15263
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "145": {
      "fn": null,
      "offset": [
        417,
        15263
      ],
      "op": "DUP1",
      "path": "5"
    },
    "146": {
      "fn": null,
      "offset": [
        417,
        15263
      ],
      "op": "PUSH4",
      "path": "5",
      "value": "0xEA5353C7"
    },
    "151": {
      "fn": null,
      "offset": [
        417,
        15263
      ],
      "op": "EQ",
      "path": "5"
    },
    "152": {
      "fn": null,
      "offset": [
        417,
        15263
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x5E1"
    },
    "155": {
      "fn": null,
      "offset": [
        417,
        15263
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "156": {
      "fn": null,
      "offset": [
        417,
        15263
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "158": {
      "fn": null,
      "offset": [
        417,
        15263
      ],
      "op": "DUP1",
      "path": "5"
    },
    "159": {
      "fn": null,
      "offset": [
        417,
        15263
      ],
      "op": "REVERT",
      "path": "5"
    },
    "160": {
      "fn": null,
      "offset": [
        417,
        15263
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "161": {
      "fn": null,
      "offset": [
        417,
        15263
      ],
      "op": "DUP1",
      "path": "5"
    },
    "162": {
      "fn": null,
      "offset": [
        417,
        15263
      ],
      "op": "PUSH4",
      "path": "5",
      "value": "0xBD97A6AD"
    },
    "167": {
      "fn": null,
      "offset": [
        417,
        15263
      ],
      "op": "GT",
      "path": "5"
    },
    "168": {
      "fn": null,
      "offset": [
        417,
        15263
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0xE7"
    },
    "171": {
      "fn": null,
      "offset": [
        417,
        15263
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "172": {
      "fn": null,
      "offset": [
        417,
        15263
      ],
      "op": "DUP1",
      "path": "5"
    },
    "173": {
      "fn": null,
      "offset": [
        417,
        15263
      ],
      "op": "PUSH4",
      "path": "5",
      "value": "0xBD97A6AD"
    },
    "178": {
      "fn": null,
      "offset": [
        417,
        15263
      ],
      "op": "EQ",
      "path": "5"
    },
    "179": {
      "fn": null,
      "offset": [
        417,
        15263
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x4EC"
    },
    "182": {
      "fn": null,
      "offset": [
        417,
        15263
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "183": {
      "fn": null,
      "offset": [
        417,
        15263
      ],
      "op": "DUP1",
      "path": "5"
    },
    "184": {
      "fn": null,
      "offset": [
        417,
        15263
      ],
      "op": "PUSH4",
      "path": "5",
      "value": "0xC3CAB38A"
    },
    "189": {
      "fn": null,
      "offset": [
        417,
        15263
      ],
      "op": "EQ",
      "path": "5"
    },
    "190": {
      "fn": null,
      "offset": [
        417,
        15263
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x50C"
    },
    "193": {
      "fn": null,
      "offset": [
        417,
        15263
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "194": {
      "fn": null,
      "offset": [
        417,
        15263
      ],
      "op": "DUP1",
      "path": "5"
    },
    "195": {
      "fn": null,
      "offset": [
        417,
        15263
      ],
      "op": "PUSH4",
      "path": "5",
      "value": "0xC87B56DD"
    },
    "200": {
      "fn": null,
      "offset": [
        417,
        15263
      ],
      "op": "EQ",
      "path": "5"
    },
    "201": {
      "fn": null,
      "offset": [
        417,
        15263
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x52C"
    },
    "204": {
      "fn": null,
      "offset": [
        417,
        15263
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "205": {
      "fn": null,
      "offset": [
        417,
        15263
      ],
      "op": "DUP1",
      "path": "5"
    },
    "206": {
      "fn": null,
      "offset": [
        417,
        15263
      ],
      "op": "PUSH4",
      "path": "5",
      "value": "0xC9DD94C7"
    },
    "211": {
      "fn": null,
      "offset": [
        417,
        15263
      ],
      "op": "EQ",
      "path": "5"
    },
    "212": {
      "fn": null,
      "offset": [
        417,
        15263
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x54C"
    },
    "215": {
      "fn": null,
      "offset": [
        417,
        15263
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "216": {
      "fn": null,
      "offset": [
        417,
        15263
      ],
      "op": "DUP1",
      "path": "5"
    },
    "217": {
      "fn": null,
      "offset": [
        417,
        15263
      ],
      "op": "PUSH4",
      "path": "5",
      "value": "0xC9E4C54D"
    },
    "222": {
      "fn": null,
      "offset": [
        417,
        15263
      ],
      "op": "EQ",
      "path": "5"
    },
    "223": {
      "fn": null,
      "offset": [
        417,
        15263
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x561"
    },
    "226": {
      "fn": null,
      "offset": [
        417,
        15263
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "227": {
      "fn": null,
      "offset": [
        417,
        15263
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "229": {
      "fn": null,
      "offset": [
        417,
        15263
      ],
      "op": "DUP1",
      "path": "5"
    },
    "230": {
      "fn": null,
      "offset": [
        417,
        15263
      ],
      "op": "REVERT",
      "path": "5"
    },
    "231": {
      "fn": null,
      "offset": [
        417,
        15263
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "232": {
      "fn": null,
      "offset": [
        417,
        15263
      ],
      "op": "DUP1",
      "path": "5"
    },
    "233": {
      "fn": null,
      "offset": [
        417,
        15263
      ],
      "op": "PUSH4",
      "path": "5",
      "value": "0x95D89B41"
    },
    "238": {
      "fn": null,
      "offset": [
        417,
        15263
      ],
      "op": "EQ",
      "path": "5"
    },
    "239": {
      "fn": null,
      "offset": [
        417,
        15263
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x49C"
    },
    "242": {
      "fn": null,
      "offset": [
        417,
        15263
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "243": {
      "fn": null,
      "offset": [
        417,
        15263
      ],
      "op": "DUP1",
      "path": "5"
    },
    "244": {
      "fn": null,
      "offset": [
        417,
        15263
      ],
      "op": "PUSH4",
      "path": "5",
      "value": "0x983A8B94"
    },
    "249": {
      "fn": null,
      "offset": [
        417,
        15263
      ],
      "op": "EQ",
      "path": "5"
    },
    "250": {
      "fn": null,
      "offset": [
        417,
        15263
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x4B1"
    },
    "253": {
      "fn": null,
      "offset": [
        417,
        15263
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "254": {
      "fn": null,
      "offset": [
        417,
        15263
      ],
      "op": "DUP1",
      "path": "5"
    },
    "255": {
      "fn": null,
      "offset": [
        417,
        15263
      ],
      "op": "PUSH4",
      "path": "5",
      "value": "0xA0B97DAA"
    },
    "260": {
      "fn": null,
      "offset": [
        417,
        15263
      ],
      "op": "EQ",
      "path": "5"
    },
    "261": {
      "fn": null,
      "offset": [
        417,
        15263
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x4C4"
    },
    "264": {
      "fn": null,
      "offset": [
        417,
        15263
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "265": {
      "fn": null,
      "offset": [
        417,
        15263
      ],
      "op": "DUP1",
      "path": "5"
    },
    "266": {
      "fn": null,
      "offset": [
        417,
        15263
      ],
      "op": "PUSH4",
      "path": "5",
      "value": "0xBD131786"
    },
    "271": {
      "fn": null,
      "offset": [
        417,
        15263
      ],
      "op": "EQ",
      "path": "5"
    },
    "272": {
      "fn": null,
      "offset": [
        417,
        15263
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x4D9"
    },
    "275": {
      "fn": null,
      "offset": [
        417,
        15263
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "276": {
      "fn": null,
      "offset": [
        417,
        15263
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "278": {
      "fn": null,
      "offset": [
        417,
        15263
      ],
      "op": "DUP1",
      "path": "5"
    },
    "279": {
      "fn": null,
      "offset": [
        417,
        15263
      ],
      "op": "REVERT",
      "path": "5"
    },
    "280": {
      "fn": null,
      "offset": [
        417,
        15263
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "281": {
      "fn": null,
      "offset": [
        417,
        15263
      ],
      "op": "DUP1",
      "path": "5"
    },
    "282": {
      "fn": null,
      "offset": [
        417,
        15263
      ],
      "op": "PUSH4",
      "path": "5",
      "value": "0x51CFF8D9"
    },
    "287": {
      "fn": null,
      "offset": [
        417,
        15263
      ],
      "op": "GT",
      "path": "5"
    },
    "288": {
      "fn": null,
      "offset": [
        417,
        15263
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x19B"
    },
    "291": {
      "fn": null,
      "offset": [
        417,
        15263
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "292": {
      "fn": null,
      "offset": [
        417,
        15263
      ],
      "op": "DUP1",
      "path": "5"
    },
    "293": {
      "fn": null,
      "offset": [
        417,
        15263
      ],
      "op": "PUSH4",
      "path": "5",
      "value": "0x6E0A8746"
    },
    "298": {
      "fn": null,
      "offset": [
        417,
        15263
      ],
      "op": "GT",
      "path": "5"
    },
    "299": {
      "fn": null,
      "offset": [
        417,
        15263
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x16A"
    },
    "302": {
      "fn": null,
      "offset": [
        417,
        15263
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "303": {
      "fn": null,
      "offset": [
        417,
        15263
      ],
      "op": "DUP1",
      "path": "5"
    },
    "304": {
      "fn": null,
      "offset": [
        417,
        15263
      ],
      "op": "PUSH4",
      "path": "5",
      "value": "0x6E0A8746"
    },
    "309": {
      "fn": null,
      "offset": [
        417,
        15263
      ],
      "op": "EQ",
      "path": "5"
    },
    "310": {
      "fn": null,
      "offset": [
        417,
        15263
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x40B"
    },
    "313": {
      "fn": null,
      "offset": [
        417,
        15263
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "314": {
      "fn": null,
      "offset": [
        417,
        15263
      ],
      "op": "DUP1",
      "path": "5"
    },
    "315": {
      "fn": null,
      "offset": [
        417,
        15263
      ],
      "op": "PUSH4",
      "path": "5",
      "value": "0x70A08231"
    },
    "320": {
      "fn": null,
      "offset": [
        417,
        15263
      ],
      "op": "EQ",
      "path": "5"
    },
    "321": {
      "fn": null,
      "offset": [
        417,
        15263
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x429"
    },
    "324": {
      "fn": null,
      "offset": [
        417,
        15263
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "325": {
      "fn": null,
      "offset": [
        417,
        15263
      ],
      "op": "DUP1",
      "path": "5"
    },
    "326": {
      "fn": null,
      "offset": [
        417,
        15263
      ],
      "op": "PUSH4",
      "path": "5",
      "value": "0x715018A6"
    },
    "331": {
      "fn": null,
      "offset": [
        417,
        15263
      ],
      "op": "EQ",
      "path": "5"
    },
    "332": {
      "fn": null,
      "offset": [
        417,
        15263
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x449"
    },
    "335": {
      "fn": null,
      "offset": [
        417,
        15263
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "336": {
      "fn": null,
      "offset": [
        417,
        15263
      ],
      "op": "DUP1",
      "path": "5"
    },
    "337": {
      "fn": null,
      "offset": [
        417,
        15263
      ],
      "op": "PUSH4",
      "path": "5",
      "value": "0x88433651"
    },
    "342": {
      "fn": null,
      "offset": [
        417,
        15263
      ],
      "op": "EQ",
      "path": "5"
    },
    "343": {
      "fn": null,
      "offset": [
        417,
        15263
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x45E"
    },
    "346": {
      "fn": null,
      "offset": [
        417,
        15263
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "347": {
      "fn": null,
      "offset": [
        417,
        15263
      ],
      "op": "DUP1",
      "path": "5"
    },
    "348": {
      "fn": null,
      "offset": [
        417,
        15263
      ],
      "op": "PUSH4",
      "path": "5",
      "value": "0x8DA5CB5B"
    },
    "353": {
      "fn": null,
      "offset": [
        417,
        15263
      ],
      "op": "EQ",
      "path": "5"
    },
    "354": {
      "fn": null,
      "offset": [
        417,
        15263
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x47E"
    },
    "357": {
      "fn": null,
      "offset": [
        417,
        15263
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "358": {
      "fn": null,
      "offset": [
        417,
        15263
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "360": {
      "fn": null,
      "offset": [
        417,
        15263
      ],
      "op": "DUP1",
      "path": "5"
    },
    "361": {
      "fn": null,
      "offset": [
        417,
        15263
      ],
      "op": "REVERT",
      "path": "5"
    },
    "362": {
      "fn": null,
      "offset": [
        417,
        15263
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "363": {
      "fn": null,
      "offset": [
        417,
        15263
      ],
      "op": "DUP1",
      "path": "5"
    },
    "364": {
      "fn": null,
      "offset": [
        417,
        15263
      ],
      "op": "PUSH4",
      "path": "5",
      "value": "0x51CFF8D9"
    },
    "369": {
      "fn": null,
      "offset": [
        417,
        15263
      ],
      "op": "EQ",
      "path": "5"
    },
    "370": {
      "fn": null,
      "offset": [
        417,
        15263
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x332"
    },
    "373": {
      "fn": null,
      "offset": [
        417,
        15263
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "374": {
      "fn": null,
      "offset": [
        417,
        15263
      ],
      "op": "DUP1",
      "path": "5"
    },
    "375": {
      "fn": null,
      "offset": [
        417,
        15263
      ],
      "op": "PUSH4",
      "path": "5",
      "value": "0x5899E7B2"
    },
    "380": {
      "fn": null,
      "offset": [
        417,
        15263
      ],
      "op": "EQ",
      "path": "5"
    },
    "381": {
      "fn": null,
      "offset": [
        417,
        15263
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x352"
    },
    "384": {
      "fn": null,
      "offset": [
        417,
        15263
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "385": {
      "fn": null,
      "offset": [
        417,
        15263
      ],
      "op": "DUP1",
      "path": "5"
    },
    "386": {
      "fn": null,
      "offset": [
        417,
        15263
      ],
      "op": "PUSH4",
      "path": "5",
      "value": "0x6352211E"
    },
    "391": {
      "fn": null,
      "offset": [
        417,
        15263
      ],
      "op": "EQ",
      "path": "5"
    },
    "392": {
      "fn": null,
      "offset": [
        417,
        15263
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x398"
    },
    "395": {
      "fn": null,
      "offset": [
        417,
        15263
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "396": {
      "fn": null,
      "offset": [
        417,
        15263
      ],
      "op": "DUP1",
      "path": "5"
    },
    "397": {
      "fn": null,
      "offset": [
        417,
        15263
      ],
      "op": "PUSH4",
      "path": "5",
      "value": "0x6833F200"
    },
    "402": {
      "fn": null,
      "offset": [
        417,
        15263
      ],
      "op": "EQ",
      "path": "5"
    },
    "403": {
      "fn": null,
      "offset": [
        417,
        15263
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x3D0"
    },
    "406": {
      "fn": null,
      "offset": [
        417,
        15263
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "407": {
      "fn": null,
      "offset": [
        417,
        15263
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "409": {
      "fn": null,
      "offset": [
        417,
        15263
      ],
      "op": "DUP1",
      "path": "5"
    },
    "410": {
      "fn": null,
      "offset": [
        417,
        15263
      ],
      "op": "REVERT",
      "path": "5"
    },
    "411": {
      "fn": null,
      "offset": [
        417,
        15263
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "412": {
      "fn": null,
      "offset": [
        417,
        15263
      ],
      "op": "DUP1",
      "path": "5"
    },
    "413": {
      "fn": null,
      "offset": [
        417,
        15263
      ],
      "op": "PUSH4",
      "path": "5",
      "value": "0x1F04D135"
    },
    "418": {
      "fn": null,
      "offset": [
        417,
        15263
      ],
      "op": "GT",
      "path": "5"
    },
    "419": {
      "fn": null,
      "offset": [
        417,
        15263
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x1E2"
    },
    "422": {
      "fn": null,
      "offset": [
        417,
        15263
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "423": {
      "fn": null,
      "offset": [
        417,
        15263
      ],
      "op": "DUP1",
      "path": "5"
    },
    "424": {
      "fn": null,
      "offset": [
        417,
        15263
      ],
      "op": "PUSH4",
      "path": "5",
      "value": "0x1F04D135"
    },
    "429": {
      "fn": null,
      "offset": [
        417,
        15263
      ],
      "op": "EQ",
      "path": "5"
    },
    "430": {
      "fn": null,
      "offset": [
        417,
        15263
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x2AC"
    },
    "433": {
      "fn": null,
      "offset": [
        417,
        15263
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "434": {
      "fn": null,
      "offset": [
        417,
        15263
      ],
      "op": "DUP1",
      "path": "5"
    },
    "435": {
      "fn": null,
      "offset": [
        417,
        15263
      ],
      "op": "PUSH4",
      "path": "5",
      "value": "0x210FA96B"
    },
    "440": {
      "fn": null,
      "offset": [
        417,
        15263
      ],
      "op": "EQ",
      "path": "5"
    },
    "441": {
      "fn": null,
      "offset": [
        417,
        15263
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x2CC"
    },
    "444": {
      "fn": null,
      "offset": [
        417,
        15263
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "445": {
      "fn": null,
      "offset": [
        417,
        15263
      ],
      "op": "DUP1",
      "path": "5"
    },
    "446": {
      "fn": null,
      "offset": [
        417,
        15263
      ],
      "op": "PUSH4",
      "path": "5",
      "value": "0x33E085C1"
    },
    "451": {
      "fn": null,
      "offset": [
        417,
        15263
      ],
      "op": "EQ",
      "path": "5"
    },
    "452": {
      "fn": null,
      "offset": [
        417,
        15263
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x2EC"
    },
    "455": {
      "fn": null,
      "offset": [
        417,
        15263
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "456": {
      "fn": null,
      "offset": [
        417,
        15263
      ],
      "op": "DUP1",
      "path": "5"
    },
    "457": {
      "fn": null,
      "offset": [
        417,
        15263
      ],
      "op": "PUSH4",
      "path": "5",
      "value": "0x3D1A350E"
    },
    "462": {
      "fn": null,
      "offset": [
        417,
        15263
      ],
      "op": "EQ",
      "path": "5"
    },
    "463": {
      "fn": null,
      "offset": [
        417,
        15263
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x2FF"
    },
    "466": {
      "fn": null,
      "offset": [
        417,
        15263
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "467": {
      "fn": null,
      "offset": [
        417,
        15263
      ],
      "op": "DUP1",
      "path": "5"
    },
    "468": {
      "fn": null,
      "offset": [
        417,
        15263
      ],
      "op": "PUSH4",
      "path": "5",
      "value": "0x42966C68"
    },
    "473": {
      "fn": null,
      "offset": [
        417,
        15263
      ],
      "op": "EQ",
      "path": "5"
    },
    "474": {
      "fn": null,
      "offset": [
        417,
        15263
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x312"
    },
    "477": {
      "fn": null,
      "offset": [
        417,
        15263
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "478": {
      "fn": null,
      "offset": [
        417,
        15263
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "480": {
      "fn": null,
      "offset": [
        417,
        15263
      ],
      "op": "DUP1",
      "path": "5"
    },
    "481": {
      "fn": null,
      "offset": [
        417,
        15263
      ],
      "op": "REVERT",
      "path": "5"
    },
    "482": {
      "fn": null,
      "offset": [
        417,
        15263
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "483": {
      "fn": null,
      "offset": [
        417,
        15263
      ],
      "op": "DUP1",
      "path": "5"
    },
    "484": {
      "fn": null,
      "offset": [
        417,
        15263
      ],
      "op": "PUSH3",
      "path": "5",
      "value": "0xE4768B"
    },
    "488": {
      "fn": null,
      "offset": [
        417,
        15263
      ],
      "op": "EQ",
      "path": "5"
    },
    "489": {
      "fn": null,
      "offset": [
        417,
        15263
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x213"
    },
    "492": {
      "fn": null,
      "offset": [
        417,
        15263
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "493": {
      "fn": null,
      "offset": [
        417,
        15263
      ],
      "op": "DUP1",
      "path": "5"
    },
    "494": {
      "fn": null,
      "offset": [
        417,
        15263
      ],
      "op": "PUSH4",
      "path": "5",
      "value": "0x1FFC9A7"
    },
    "499": {
      "fn": null,
      "offset": [
        417,
        15263
      ],
      "op": "EQ",
      "path": "5"
    },
    "500": {
      "fn": null,
      "offset": [
        417,
        15263
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x235"
    },
    "503": {
      "fn": null,
      "offset": [
        417,
        15263
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "504": {
      "fn": null,
      "offset": [
        417,
        15263
      ],
      "op": "DUP1",
      "path": "5"
    },
    "505": {
      "fn": null,
      "offset": [
        417,
        15263
      ],
      "op": "PUSH4",
      "path": "5",
      "value": "0x6FDDE03"
    },
    "510": {
      "fn": null,
      "offset": [
        417,
        15263
      ],
      "op": "EQ",
      "path": "5"
    },
    "511": {
      "fn": null,
      "offset": [
        417,
        15263
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x26A"
    },
    "514": {
      "fn": null,
      "offset": [
        417,
        15263
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "515": {
      "fn": null,
      "offset": [
        417,
        15263
      ],
      "op": "DUP1",
      "path": "5"
    },
    "516": {
      "fn": null,
      "offset": [
        417,
        15263
      ],
      "op": "PUSH4",
      "path": "5",
      "value": "0x8C92E57"
    },
    "521": {
      "fn": null,
      "offset": [
        417,
        15263
      ],
      "op": "EQ",
      "path": "5"
    },
    "522": {
      "fn": null,
      "offset": [
        417,
        15263
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x28C"
    },
    "525": {
      "fn": null,
      "offset": [
        417,
        15263
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "526": {
      "fn": null,
      "offset": [
        417,
        15263
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "527": {
      "fn": null,
      "offset": [
        417,
        15263
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "529": {
      "fn": null,
      "offset": [
        417,
        15263
      ],
      "op": "DUP1",
      "path": "5"
    },
    "530": {
      "first_revert": true,
      "fn": null,
      "offset": [
        417,
        15263
      ],
      "op": "REVERT",
      "path": "5"
    },
    "531": {
      "fn": "SoulboundRedeemable.setPrice",
      "offset": [
        3128,
        3455
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "532": {
      "fn": "SoulboundRedeemable.setPrice",
      "offset": [
        3128,
        3455
      ],
      "op": "CALLVALUE",
      "path": "5"
    },
    "533": {
      "fn": "SoulboundRedeemable.setPrice",
      "offset": [
        3128,
        3455
      ],
      "op": "DUP1",
      "path": "5"
    },
    "534": {
      "fn": "SoulboundRedeemable.setPrice",
      "offset": [
        3128,
        3455
      ],
      "op": "ISZERO",
      "path": "5"
    },
    "535": {
      "fn": "SoulboundRedeemable.setPrice",
      "offset": [
        3128,
        3455
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x21F"
    },
    "538": {
      "fn": "SoulboundRedeemable.setPrice",
      "offset": [
        3128,
        3455
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "539": {
      "fn": "SoulboundRedeemable.setPrice",
      "offset": [
        3128,
        3455
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "541": {
      "fn": "SoulboundRedeemable.setPrice",
      "offset": [
        3128,
        3455
      ],
      "op": "DUP1",
      "path": "5"
    },
    "542": {
      "fn": "SoulboundRedeemable.setPrice",
      "offset": [
        3128,
        3455
      ],
      "op": "REVERT",
      "path": "5"
    },
    "543": {
      "fn": "SoulboundRedeemable.setPrice",
      "offset": [
        3128,
        3455
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "544": {
      "op": "POP"
    },
    "545": {
      "fn": "SoulboundRedeemable.setPrice",
      "offset": [
        3128,
        3455
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x233"
    },
    "548": {
      "fn": "SoulboundRedeemable.setPrice",
      "offset": [
        3128,
        3455
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x22E"
    },
    "551": {
      "fn": "SoulboundRedeemable.setPrice",
      "offset": [
        3128,
        3455
      ],
      "op": "CALLDATASIZE",
      "path": "5"
    },
    "552": {
      "fn": "SoulboundRedeemable.setPrice",
      "offset": [
        3128,
        3455
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x4"
    },
    "554": {
      "fn": "SoulboundRedeemable.setPrice",
      "offset": [
        3128,
        3455
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x25A8"
    },
    "557": {
      "fn": "SoulboundRedeemable.setPrice",
      "jump": "i",
      "offset": [
        3128,
        3455
      ],
      "op": "JUMP",
      "path": "5"
    },
    "558": {
      "fn": "SoulboundRedeemable.setPrice",
      "offset": [
        3128,
        3455
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "559": {
      "fn": "SoulboundRedeemable.setPrice",
      "offset": [
        3128,
        3455
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x699"
    },
    "562": {
      "fn": "SoulboundRedeemable.setPrice",
      "jump": "i",
      "offset": [
        3128,
        3455
      ],
      "op": "JUMP",
      "path": "5"
    },
    "563": {
      "fn": "SoulboundRedeemable.setPrice",
      "offset": [
        3128,
        3455
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "564": {
      "fn": "SoulboundRedeemable.setPrice",
      "offset": [
        3128,
        3455
      ],
      "op": "STOP",
      "path": "5"
    },
    "565": {
      "fn": "ERC4973.supportsInterface",
      "offset": [
        4293,
        4553
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "566": {
      "fn": "ERC4973.supportsInterface",
      "offset": [
        4293,
        4553
      ],
      "op": "CALLVALUE",
      "path": "7"
    },
    "567": {
      "fn": "ERC4973.supportsInterface",
      "offset": [
        4293,
        4553
      ],
      "op": "DUP1",
      "path": "7"
    },
    "568": {
      "fn": "ERC4973.supportsInterface",
      "offset": [
        4293,
        4553
      ],
      "op": "ISZERO",
      "path": "7"
    },
    "569": {
      "fn": "ERC4973.supportsInterface",
      "offset": [
        4293,
        4553
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x241"
    },
    "572": {
      "fn": "ERC4973.supportsInterface",
      "offset": [
        4293,
        4553
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "573": {
      "fn": "ERC4973.supportsInterface",
      "offset": [
        4293,
        4553
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x0"
    },
    "575": {
      "fn": "ERC4973.supportsInterface",
      "offset": [
        4293,
        4553
      ],
      "op": "DUP1",
      "path": "7"
    },
    "576": {
      "fn": "ERC4973.supportsInterface",
      "offset": [
        4293,
        4553
      ],
      "op": "REVERT",
      "path": "7"
    },
    "577": {
      "fn": "ERC4973.supportsInterface",
      "offset": [
        4293,
        4553
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "578": {
      "op": "POP"
    },
    "579": {
      "fn": "ERC4973.supportsInterface",
      "offset": [
        4293,
        4553
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x255"
    },
    "582": {
      "fn": "ERC4973.supportsInterface",
      "offset": [
        4293,
        4553
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x250"
    },
    "585": {
      "fn": "ERC4973.supportsInterface",
      "offset": [
        4293,
        4553
      ],
      "op": "CALLDATASIZE",
      "path": "7"
    },
    "586": {
      "fn": "ERC4973.supportsInterface",
      "offset": [
        4293,
        4553
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x4"
    },
    "588": {
      "fn": "ERC4973.supportsInterface",
      "offset": [
        4293,
        4553
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x25D2"
    },
    "591": {
      "fn": "ERC4973.supportsInterface",
      "jump": "i",
      "offset": [
        4293,
        4553
      ],
      "op": "JUMP",
      "path": "7"
    },
    "592": {
      "fn": "ERC4973.supportsInterface",
      "offset": [
        4293,
        4553
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "593": {
      "fn": "ERC4973.supportsInterface",
      "offset": [
        4293,
        4553
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x746"
    },
    "596": {
      "fn": "ERC4973.supportsInterface",
      "jump": "i",
      "offset": [
        4293,
        4553
      ],
      "op": "JUMP",
      "path": "7"
    },
    "597": {
      "fn": "ERC4973.supportsInterface",
      "offset": [
        4293,
        4553
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "598": {
      "fn": "ERC4973.supportsInterface",
      "offset": [
        4293,
        4553
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x40"
    },
    "600": {
      "fn": "ERC4973.supportsInterface",
      "offset": [
        4293,
        4553
      ],
      "op": "MLOAD",
      "path": "7"
    },
    "601": {
      "op": "SWAP1"
    },
    "602": {
      "op": "ISZERO"
    },
    "603": {
      "op": "ISZERO"
    },
    "604": {
      "op": "DUP2"
    },
    "605": {
      "op": "MSTORE"
    },
    "606": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "608": {
      "op": "ADD"
    },
    "609": {
      "fn": "ERC4973.supportsInterface",
      "offset": [
        4293,
        4553
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "610": {
      "fn": "ERC4973.supportsInterface",
      "offset": [
        4293,
        4553
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x40"
    },
    "612": {
      "fn": "ERC4973.supportsInterface",
      "offset": [
        4293,
        4553
      ],
      "op": "MLOAD",
      "path": "7"
    },
    "613": {
      "fn": "ERC4973.supportsInterface",
      "offset": [
        4293,
        4553
      ],
      "op": "DUP1",
      "path": "7"
    },
    "614": {
      "fn": "ERC4973.supportsInterface",
      "offset": [
        4293,
        4553
      ],
      "op": "SWAP2",
      "path": "7"
    },
    "615": {
      "fn": "ERC4973.supportsInterface",
      "offset": [
        4293,
        4553
      ],
      "op": "SUB",
      "path": "7"
    },
    "616": {
      "fn": "ERC4973.supportsInterface",
      "offset": [
        4293,
        4553
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "617": {
      "fn": "ERC4973.supportsInterface",
      "offset": [
        4293,
        4553
      ],
      "op": "RETURN",
      "path": "7"
    },
    "618": {
      "fn": "ERC4973.name",
      "offset": [
        4557,
        4649
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "619": {
      "fn": "ERC4973.name",
      "offset": [
        4557,
        4649
      ],
      "op": "CALLVALUE",
      "path": "7"
    },
    "620": {
      "fn": "ERC4973.name",
      "offset": [
        4557,
        4649
      ],
      "op": "DUP1",
      "path": "7"
    },
    "621": {
      "fn": "ERC4973.name",
      "offset": [
        4557,
        4649
      ],
      "op": "ISZERO",
      "path": "7"
    },
    "622": {
      "fn": "ERC4973.name",
      "offset": [
        4557,
        4649
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x276"
    },
    "625": {
      "fn": "ERC4973.name",
      "offset": [
        4557,
        4649
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "626": {
      "fn": "ERC4973.name",
      "offset": [
        4557,
        4649
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x0"
    },
    "628": {
      "fn": "ERC4973.name",
      "offset": [
        4557,
        4649
      ],
      "op": "DUP1",
      "path": "7"
    },
    "629": {
      "fn": "ERC4973.name",
      "offset": [
        4557,
        4649
      ],
      "op": "REVERT",
      "path": "7"
    },
    "630": {
      "fn": "ERC4973.name",
      "offset": [
        4557,
        4649
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "631": {
      "fn": "ERC4973.name",
      "offset": [
        4557,
        4649
      ],
      "op": "POP",
      "path": "7"
    },
    "632": {
      "fn": "ERC4973.name",
      "offset": [
        4557,
        4649
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x27F"
    },
    "635": {
      "fn": "ERC4973.name",
      "offset": [
        4557,
        4649
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x798"
    },
    "638": {
      "fn": "ERC4973.name",
      "jump": "i",
      "offset": [
        4557,
        4649
      ],
      "op": "JUMP",
      "path": "7"
    },
    "639": {
      "fn": "ERC4973.name",
      "offset": [
        4557,
        4649
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "640": {
      "fn": "ERC4973.name",
      "offset": [
        4557,
        4649
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x40"
    },
    "642": {
      "fn": "ERC4973.name",
      "offset": [
        4557,
        4649
      ],
      "op": "MLOAD",
      "path": "7"
    },
    "643": {
      "fn": "ERC4973.name",
      "offset": [
        4557,
        4649
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x261"
    },
    "646": {
      "fn": "ERC4973.name",
      "offset": [
        4557,
        4649
      ],
      "op": "SWAP2",
      "path": "7"
    },
    "647": {
      "fn": "ERC4973.name",
      "offset": [
        4557,
        4649
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "648": {
      "fn": "ERC4973.name",
      "offset": [
        4557,
        4649
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x262C"
    },
    "651": {
      "fn": "ERC4973.name",
      "jump": "i",
      "offset": [
        4557,
        4649
      ],
      "op": "JUMP",
      "path": "7"
    },
    "652": {
      "fn": "SoulboundCore.revokeWithSignature",
      "offset": [
        4229,
        5160
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "653": {
      "fn": "SoulboundCore.revokeWithSignature",
      "offset": [
        4229,
        5160
      ],
      "op": "CALLVALUE",
      "path": "4"
    },
    "654": {
      "fn": "SoulboundCore.revokeWithSignature",
      "offset": [
        4229,
        5160
      ],
      "op": "DUP1",
      "path": "4"
    },
    "655": {
      "fn": "SoulboundCore.revokeWithSignature",
      "offset": [
        4229,
        5160
      ],
      "op": "ISZERO",
      "path": "4"
    },
    "656": {
      "fn": "SoulboundCore.revokeWithSignature",
      "offset": [
        4229,
        5160
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x298"
    },
    "659": {
      "fn": "SoulboundCore.revokeWithSignature",
      "offset": [
        4229,
        5160
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "660": {
      "fn": "SoulboundCore.revokeWithSignature",
      "offset": [
        4229,
        5160
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "662": {
      "fn": "SoulboundCore.revokeWithSignature",
      "offset": [
        4229,
        5160
      ],
      "op": "DUP1",
      "path": "4"
    },
    "663": {
      "fn": "SoulboundCore.revokeWithSignature",
      "offset": [
        4229,
        5160
      ],
      "op": "REVERT",
      "path": "4"
    },
    "664": {
      "fn": "SoulboundCore.revokeWithSignature",
      "offset": [
        4229,
        5160
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "665": {
      "op": "POP"
    },
    "666": {
      "fn": "SoulboundCore.revokeWithSignature",
      "offset": [
        4229,
        5160
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x233"
    },
    "669": {
      "fn": "SoulboundCore.revokeWithSignature",
      "offset": [
        4229,
        5160
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x2A7"
    },
    "672": {
      "fn": "SoulboundCore.revokeWithSignature",
      "offset": [
        4229,
        5160
      ],
      "op": "CALLDATASIZE",
      "path": "4"
    },
    "673": {
      "fn": "SoulboundCore.revokeWithSignature",
      "offset": [
        4229,
        5160
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x4"
    },
    "675": {
      "fn": "SoulboundCore.revokeWithSignature",
      "offset": [
        4229,
        5160
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x2702"
    },
    "678": {
      "fn": "SoulboundCore.revokeWithSignature",
      "jump": "i",
      "offset": [
        4229,
        5160
      ],
      "op": "JUMP",
      "path": "4"
    },
    "679": {
      "fn": "SoulboundCore.revokeWithSignature",
      "offset": [
        4229,
        5160
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "680": {
      "fn": "SoulboundCore.revokeWithSignature",
      "offset": [
        4229,
        5160
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x82A"
    },
    "683": {
      "fn": "SoulboundCore.revokeWithSignature",
      "jump": "i",
      "offset": [
        4229,
        5160
      ],
      "op": "JUMP",
      "path": "4"
    },
    "684": {
      "fn": "SoulboundWithSignature.ownerRevokeWithSignature",
      "offset": [
        2932,
        3697
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "685": {
      "fn": "SoulboundWithSignature.ownerRevokeWithSignature",
      "offset": [
        2932,
        3697
      ],
      "op": "CALLVALUE",
      "path": "6"
    },
    "686": {
      "fn": "SoulboundWithSignature.ownerRevokeWithSignature",
      "offset": [
        2932,
        3697
      ],
      "op": "DUP1",
      "path": "6"
    },
    "687": {
      "fn": "SoulboundWithSignature.ownerRevokeWithSignature",
      "offset": [
        2932,
        3697
      ],
      "op": "ISZERO",
      "path": "6"
    },
    "688": {
      "fn": "SoulboundWithSignature.ownerRevokeWithSignature",
      "offset": [
        2932,
        3697
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x2B8"
    },
    "691": {
      "fn": "SoulboundWithSignature.ownerRevokeWithSignature",
      "offset": [
        2932,
        3697
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "692": {
      "fn": "SoulboundWithSignature.ownerRevokeWithSignature",
      "offset": [
        2932,
        3697
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "694": {
      "fn": "SoulboundWithSignature.ownerRevokeWithSignature",
      "offset": [
        2932,
        3697
      ],
      "op": "DUP1",
      "path": "6"
    },
    "695": {
      "fn": "SoulboundWithSignature.ownerRevokeWithSignature",
      "offset": [
        2932,
        3697
      ],
      "op": "REVERT",
      "path": "6"
    },
    "696": {
      "fn": "SoulboundWithSignature.ownerRevokeWithSignature",
      "offset": [
        2932,
        3697
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "697": {
      "op": "POP"
    },
    "698": {
      "fn": "SoulboundWithSignature.ownerRevokeWithSignature",
      "offset": [
        2932,
        3697
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x233"
    },
    "701": {
      "fn": "SoulboundWithSignature.ownerRevokeWithSignature",
      "offset": [
        2932,
        3697
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x2C7"
    },
    "704": {
      "fn": "SoulboundWithSignature.ownerRevokeWithSignature",
      "offset": [
        2932,
        3697
      ],
      "op": "CALLDATASIZE",
      "path": "6"
    },
    "705": {
      "fn": "SoulboundWithSignature.ownerRevokeWithSignature",
      "offset": [
        2932,
        3697
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x4"
    },
    "707": {
      "fn": "SoulboundWithSignature.ownerRevokeWithSignature",
      "offset": [
        2932,
        3697
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x2702"
    },
    "710": {
      "fn": "SoulboundWithSignature.ownerRevokeWithSignature",
      "jump": "i",
      "offset": [
        2932,
        3697
      ],
      "op": "JUMP",
      "path": "6"
    },
    "711": {
      "fn": "SoulboundWithSignature.ownerRevokeWithSignature",
      "offset": [
        2932,
        3697
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "712": {
      "fn": "SoulboundWithSignature.ownerRevokeWithSignature",
      "offset": [
        2932,
        3697
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x960"
    },
    "715": {
      "fn": "SoulboundWithSignature.ownerRevokeWithSignature",
      "jump": "i",
      "offset": [
        2932,
        3697
      ],
      "op": "JUMP",
      "path": "6"
    },
    "716": {
      "fn": "SoulboundCore.generateTokenURI",
      "offset": [
        6072,
        6477
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "717": {
      "fn": "SoulboundCore.generateTokenURI",
      "offset": [
        6072,
        6477
      ],
      "op": "CALLVALUE",
      "path": "4"
    },
    "718": {
      "fn": "SoulboundCore.generateTokenURI",
      "offset": [
        6072,
        6477
      ],
      "op": "DUP1",
      "path": "4"
    },
    "719": {
      "fn": "SoulboundCore.generateTokenURI",
      "offset": [
        6072,
        6477
      ],
      "op": "ISZERO",
      "path": "4"
    },
    "720": {
      "fn": "SoulboundCore.generateTokenURI",
      "offset": [
        6072,
        6477
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x2D8"
    },
    "723": {
      "fn": "SoulboundCore.generateTokenURI",
      "offset": [
        6072,
        6477
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "724": {
      "fn": "SoulboundCore.generateTokenURI",
      "offset": [
        6072,
        6477
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "726": {
      "fn": "SoulboundCore.generateTokenURI",
      "offset": [
        6072,
        6477
      ],
      "op": "DUP1",
      "path": "4"
    },
    "727": {
      "fn": "SoulboundCore.generateTokenURI",
      "offset": [
        6072,
        6477
      ],
      "op": "REVERT",
      "path": "4"
    },
    "728": {
      "fn": "SoulboundCore.generateTokenURI",
      "offset": [
        6072,
        6477
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "729": {
      "op": "POP"
    },
    "730": {
      "fn": "SoulboundCore.generateTokenURI",
      "offset": [
        6072,
        6477
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x27F"
    },
    "733": {
      "fn": "SoulboundCore.generateTokenURI",
      "offset": [
        6072,
        6477
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x2E7"
    },
    "736": {
      "fn": "SoulboundCore.generateTokenURI",
      "offset": [
        6072,
        6477
      ],
      "op": "CALLDATASIZE",
      "path": "4"
    },
    "737": {
      "fn": "SoulboundCore.generateTokenURI",
      "offset": [
        6072,
        6477
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x4"
    },
    "739": {
      "fn": "SoulboundCore.generateTokenURI",
      "offset": [
        6072,
        6477
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x2752"
    },
    "742": {
      "fn": "SoulboundCore.generateTokenURI",
      "jump": "i",
      "offset": [
        6072,
        6477
      ],
      "op": "JUMP",
      "path": "4"
    },
    "743": {
      "fn": "SoulboundCore.generateTokenURI",
      "offset": [
        6072,
        6477
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "744": {
      "fn": "SoulboundCore.generateTokenURI",
      "offset": [
        6072,
        6477
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x9DA"
    },
    "747": {
      "fn": "SoulboundCore.generateTokenURI",
      "jump": "i",
      "offset": [
        6072,
        6477
      ],
      "op": "JUMP",
      "path": "4"
    },
    "748": {
      "fn": "SoulboundRedeemable.payToReceiveToken",
      "offset": [
        5534,
        7506
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "749": {
      "fn": "SoulboundRedeemable.payToReceiveToken",
      "offset": [
        5534,
        7506
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x233"
    },
    "752": {
      "fn": "SoulboundRedeemable.payToReceiveToken",
      "offset": [
        5534,
        7506
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x2FA"
    },
    "755": {
      "fn": "SoulboundRedeemable.payToReceiveToken",
      "offset": [
        5534,
        7506
      ],
      "op": "CALLDATASIZE",
      "path": "5"
    },
    "756": {
      "fn": "SoulboundRedeemable.payToReceiveToken",
      "offset": [
        5534,
        7506
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x4"
    },
    "758": {
      "fn": "SoulboundRedeemable.payToReceiveToken",
      "offset": [
        5534,
        7506
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x25A8"
    },
    "761": {
      "fn": "SoulboundRedeemable.payToReceiveToken",
      "jump": "i",
      "offset": [
        5534,
        7506
      ],
      "op": "JUMP",
      "path": "5"
    },
    "762": {
      "fn": "SoulboundRedeemable.payToReceiveToken",
      "offset": [
        5534,
        7506
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "763": {
      "fn": "SoulboundRedeemable.payToReceiveToken",
      "offset": [
        5534,
        7506
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0xA5C"
    },
    "766": {
      "fn": "SoulboundRedeemable.payToReceiveToken",
      "jump": "i",
      "offset": [
        5534,
        7506
      ],
      "op": "JUMP",
      "path": "5"
    },
    "767": {
      "fn": "SoulboundRedeemable.redeemMintedToken",
      "offset": [
        10045,
        11547
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "768": {
      "fn": "SoulboundRedeemable.redeemMintedToken",
      "offset": [
        10045,
        11547
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x233"
    },
    "771": {
      "fn": "SoulboundRedeemable.redeemMintedToken",
      "offset": [
        10045,
        11547
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x30D"
    },
    "774": {
      "fn": "SoulboundRedeemable.redeemMintedToken",
      "offset": [
        10045,
        11547
      ],
      "op": "CALLDATASIZE",
      "path": "5"
    },
    "775": {
      "fn": "SoulboundRedeemable.redeemMintedToken",
      "offset": [
        10045,
        11547
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x4"
    },
    "777": {
      "fn": "SoulboundRedeemable.redeemMintedToken",
      "offset": [
        10045,
        11547
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x276B"
    },
    "780": {
      "fn": "SoulboundRedeemable.redeemMintedToken",
      "jump": "i",
      "offset": [
        10045,
        11547
      ],
      "op": "JUMP",
      "path": "5"
    },
    "781": {
      "fn": "SoulboundRedeemable.redeemMintedToken",
      "offset": [
        10045,
        11547
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "782": {
      "fn": "SoulboundRedeemable.redeemMintedToken",
      "offset": [
        10045,
        11547
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0xD52"
    },
    "785": {
      "fn": "SoulboundRedeemable.redeemMintedToken",
      "jump": "i",
      "offset": [
        10045,
        11547
      ],
      "op": "JUMP",
      "path": "5"
    },
    "786": {
      "fn": "ERC4973.burn",
      "offset": [
        4946,
        5101
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "787": {
      "fn": "ERC4973.burn",
      "offset": [
        4946,
        5101
      ],
      "op": "CALLVALUE",
      "path": "7"
    },
    "788": {
      "fn": "ERC4973.burn",
      "offset": [
        4946,
        5101
      ],
      "op": "DUP1",
      "path": "7"
    },
    "789": {
      "fn": "ERC4973.burn",
      "offset": [
        4946,
        5101
      ],
      "op": "ISZERO",
      "path": "7"
    },
    "790": {
      "fn": "ERC4973.burn",
      "offset": [
        4946,
        5101
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x31E"
    },
    "793": {
      "fn": "ERC4973.burn",
      "offset": [
        4946,
        5101
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "794": {
      "fn": "ERC4973.burn",
      "offset": [
        4946,
        5101
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x0"
    },
    "796": {
      "fn": "ERC4973.burn",
      "offset": [
        4946,
        5101
      ],
      "op": "DUP1",
      "path": "7"
    },
    "797": {
      "fn": "ERC4973.burn",
      "offset": [
        4946,
        5101
      ],
      "op": "REVERT",
      "path": "7"
    },
    "798": {
      "fn": "ERC4973.burn",
      "offset": [
        4946,
        5101
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "799": {
      "op": "POP"
    },
    "800": {
      "fn": "ERC4973.burn",
      "offset": [
        4946,
        5101
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x233"
    },
    "803": {
      "fn": "ERC4973.burn",
      "offset": [
        4946,
        5101
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x32D"
    },
    "806": {
      "fn": "ERC4973.burn",
      "offset": [
        4946,
        5101
      ],
      "op": "CALLDATASIZE",
      "path": "7"
    },
    "807": {
      "fn": "ERC4973.burn",
      "offset": [
        4946,
        5101
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x4"
    },
    "809": {
      "fn": "ERC4973.burn",
      "offset": [
        4946,
        5101
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x2752"
    },
    "812": {
      "fn": "ERC4973.burn",
      "jump": "i",
      "offset": [
        4946,
        5101
      ],
      "op": "JUMP",
      "path": "7"
    },
    "813": {
      "fn": "ERC4973.burn",
      "offset": [
        4946,
        5101
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "814": {
      "fn": "ERC4973.burn",
      "offset": [
        4946,
        5101
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x1022"
    },
    "817": {
      "fn": "ERC4973.burn",
      "jump": "i",
      "offset": [
        4946,
        5101
      ],
      "op": "JUMP",
      "path": "7"
    },
    "818": {
      "fn": "SoulboundRedeemable.withdraw",
      "offset": [
        14094,
        14689
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "819": {
      "fn": "SoulboundRedeemable.withdraw",
      "offset": [
        14094,
        14689
      ],
      "op": "CALLVALUE",
      "path": "5"
    },
    "820": {
      "fn": "SoulboundRedeemable.withdraw",
      "offset": [
        14094,
        14689
      ],
      "op": "DUP1",
      "path": "5"
    },
    "821": {
      "fn": "SoulboundRedeemable.withdraw",
      "offset": [
        14094,
        14689
      ],
      "op": "ISZERO",
      "path": "5"
    },
    "822": {
      "fn": "SoulboundRedeemable.withdraw",
      "offset": [
        14094,
        14689
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x33E"
    },
    "825": {
      "fn": "SoulboundRedeemable.withdraw",
      "offset": [
        14094,
        14689
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "826": {
      "fn": "SoulboundRedeemable.withdraw",
      "offset": [
        14094,
        14689
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "828": {
      "fn": "SoulboundRedeemable.withdraw",
      "offset": [
        14094,
        14689
      ],
      "op": "DUP1",
      "path": "5"
    },
    "829": {
      "fn": "SoulboundRedeemable.withdraw",
      "offset": [
        14094,
        14689
      ],
      "op": "REVERT",
      "path": "5"
    },
    "830": {
      "fn": "SoulboundRedeemable.withdraw",
      "offset": [
        14094,
        14689
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "831": {
      "op": "POP"
    },
    "832": {
      "fn": "SoulboundRedeemable.withdraw",
      "offset": [
        14094,
        14689
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x233"
    },
    "835": {
      "fn": "SoulboundRedeemable.withdraw",
      "offset": [
        14094,
        14689
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x34D"
    },
    "838": {
      "fn": "SoulboundRedeemable.withdraw",
      "offset": [
        14094,
        14689
      ],
      "op": "CALLDATASIZE",
      "path": "5"
    },
    "839": {
      "fn": "SoulboundRedeemable.withdraw",
      "offset": [
        14094,
        14689
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x4"
    },
    "841": {
      "fn": "SoulboundRedeemable.withdraw",
      "offset": [
        14094,
        14689
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x279E"
    },
    "844": {
      "fn": "SoulboundRedeemable.withdraw",
      "jump": "i",
      "offset": [
        14094,
        14689
      ],
      "op": "JUMP",
      "path": "5"
    },
    "845": {
      "fn": "SoulboundRedeemable.withdraw",
      "offset": [
        14094,
        14689
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "846": {
      "fn": "SoulboundRedeemable.withdraw",
      "offset": [
        14094,
        14689
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x1097"
    },
    "849": {
      "fn": "SoulboundRedeemable.withdraw",
      "jump": "i",
      "offset": [
        14094,
        14689
      ],
      "op": "JUMP",
      "path": "5"
    },
    "850": {
      "fn": "Soulbound.isMinted",
      "offset": [
        5160,
        5302
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "851": {
      "fn": "Soulbound.isMinted",
      "offset": [
        5160,
        5302
      ],
      "op": "CALLVALUE",
      "path": "3"
    },
    "852": {
      "fn": "Soulbound.isMinted",
      "offset": [
        5160,
        5302
      ],
      "op": "DUP1",
      "path": "3"
    },
    "853": {
      "fn": "Soulbound.isMinted",
      "offset": [
        5160,
        5302
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "854": {
      "fn": "Soulbound.isMinted",
      "offset": [
        5160,
        5302
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x35E"
    },
    "857": {
      "fn": "Soulbound.isMinted",
      "offset": [
        5160,
        5302
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "858": {
      "fn": "Soulbound.isMinted",
      "offset": [
        5160,
        5302
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "860": {
      "fn": "Soulbound.isMinted",
      "offset": [
        5160,
        5302
      ],
      "op": "DUP1",
      "path": "3"
    },
    "861": {
      "fn": "Soulbound.isMinted",
      "offset": [
        5160,
        5302
      ],
      "op": "REVERT",
      "path": "3"
    },
    "862": {
      "fn": "Soulbound.isMinted",
      "offset": [
        5160,
        5302
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "863": {
      "op": "POP"
    },
    "864": {
      "fn": "Soulbound.isMinted",
      "offset": [
        5160,
        5302
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x255"
    },
    "867": {
      "fn": "Soulbound.isMinted",
      "offset": [
        5160,
        5302
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x36D"
    },
    "870": {
      "fn": "Soulbound.isMinted",
      "offset": [
        5160,
        5302
      ],
      "op": "CALLDATASIZE",
      "path": "3"
    },
    "871": {
      "fn": "Soulbound.isMinted",
      "offset": [
        5160,
        5302
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x4"
    },
    "873": {
      "fn": "Soulbound.isMinted",
      "offset": [
        5160,
        5302
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x25A8"
    },
    "876": {
      "fn": "Soulbound.isMinted",
      "jump": "i",
      "offset": [
        5160,
        5302
      ],
      "op": "JUMP",
      "path": "3"
    },
    "877": {
      "fn": "Soulbound.isMinted",
      "offset": [
        5160,
        5302
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "878": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "880": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "882": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "884": {
      "op": "SHL"
    },
    "885": {
      "op": "SUB"
    },
    "886": {
      "fn": "Soulbound.isMinted",
      "offset": [
        5275,
        5285
      ],
      "op": "SWAP2",
      "path": "3",
      "statement": 0
    },
    "887": {
      "fn": "Soulbound.isMinted",
      "offset": [
        5275,
        5285
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "888": {
      "fn": "Soulbound.isMinted",
      "offset": [
        5275,
        5285
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "889": {
      "fn": "Soulbound.isMinted",
      "offset": [
        5275,
        5285
      ],
      "op": "AND",
      "path": "3"
    },
    "890": {
      "fn": "Soulbound.isMinted",
      "offset": [
        5252,
        5256
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "892": {
      "fn": "Soulbound.isMinted",
      "offset": [
        5275,
        5285
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "893": {
      "fn": "Soulbound.isMinted",
      "offset": [
        5275,
        5285
      ],
      "op": "DUP2",
      "path": "3"
    },
    "894": {
      "fn": "Soulbound.isMinted",
      "offset": [
        5275,
        5285
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "895": {
      "fn": "Soulbound.isMinted",
      "offset": [
        5275,
        5280
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x8"
    },
    "897": {
      "fn": "Soulbound.isMinted",
      "offset": [
        5275,
        5285
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "899": {
      "fn": "Soulbound.isMinted",
      "offset": [
        5275,
        5285
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "900": {
      "fn": "Soulbound.isMinted",
      "offset": [
        5275,
        5285
      ],
      "op": "DUP2",
      "path": "3"
    },
    "901": {
      "fn": "Soulbound.isMinted",
      "offset": [
        5275,
        5285
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "902": {
      "fn": "Soulbound.isMinted",
      "offset": [
        5275,
        5285
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "904": {
      "fn": "Soulbound.isMinted",
      "offset": [
        5275,
        5285
      ],
      "op": "DUP1",
      "path": "3"
    },
    "905": {
      "fn": "Soulbound.isMinted",
      "offset": [
        5275,
        5285
      ],
      "op": "DUP4",
      "path": "3"
    },
    "906": {
      "fn": "Soulbound.isMinted",
      "offset": [
        5275,
        5285
      ],
      "op": "KECCAK256",
      "path": "3"
    },
    "907": {
      "fn": "Soulbound.isMinted",
      "offset": [
        5275,
        5295
      ],
      "op": "SWAP4",
      "path": "3"
    },
    "908": {
      "fn": "Soulbound.isMinted",
      "offset": [
        5275,
        5295
      ],
      "op": "DUP4",
      "path": "3"
    },
    "909": {
      "fn": "Soulbound.isMinted",
      "offset": [
        5275,
        5295
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "910": {
      "fn": "Soulbound.isMinted",
      "offset": [
        5275,
        5295
      ],
      "op": "SWAP3",
      "path": "3"
    },
    "911": {
      "fn": "Soulbound.isMinted",
      "offset": [
        5275,
        5295
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "912": {
      "fn": "Soulbound.isMinted",
      "offset": [
        5275,
        5295
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "913": {
      "fn": "Soulbound.isMinted",
      "offset": [
        5275,
        5295
      ],
      "op": "KECCAK256",
      "path": "3"
    },
    "914": {
      "fn": "Soulbound.isMinted",
      "offset": [
        5275,
        5295
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "915": {
      "fn": "Soulbound.isMinted",
      "offset": [
        5275,
        5295
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0xFF"
    },
    "917": {
      "fn": "Soulbound.isMinted",
      "offset": [
        5275,
        5295
      ],
      "op": "AND",
      "path": "3"
    },
    "918": {
      "fn": "Soulbound.isMinted",
      "offset": [
        5275,
        5295
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "919": {
      "fn": "Soulbound.isMinted",
      "offset": [
        5160,
        5302
      ],
      "op": "JUMP",
      "path": "3"
    },
    "920": {
      "fn": "ERC4973.ownerOf",
      "offset": [
        5306,
        5505
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "921": {
      "fn": "ERC4973.ownerOf",
      "offset": [
        5306,
        5505
      ],
      "op": "CALLVALUE",
      "path": "7"
    },
    "922": {
      "fn": "ERC4973.ownerOf",
      "offset": [
        5306,
        5505
      ],
      "op": "DUP1",
      "path": "7"
    },
    "923": {
      "fn": "ERC4973.ownerOf",
      "offset": [
        5306,
        5505
      ],
      "op": "ISZERO",
      "path": "7"
    },
    "924": {
      "fn": "ERC4973.ownerOf",
      "offset": [
        5306,
        5505
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x3A4"
    },
    "927": {
      "fn": "ERC4973.ownerOf",
      "offset": [
        5306,
        5505
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "928": {
      "fn": "ERC4973.ownerOf",
      "offset": [
        5306,
        5505
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x0"
    },
    "930": {
      "fn": "ERC4973.ownerOf",
      "offset": [
        5306,
        5505
      ],
      "op": "DUP1",
      "path": "7"
    },
    "931": {
      "fn": "ERC4973.ownerOf",
      "offset": [
        5306,
        5505
      ],
      "op": "REVERT",
      "path": "7"
    },
    "932": {
      "fn": "ERC4973.ownerOf",
      "offset": [
        5306,
        5505
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "933": {
      "op": "POP"
    },
    "934": {
      "fn": "ERC4973.ownerOf",
      "offset": [
        5306,
        5505
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x3B8"
    },
    "937": {
      "fn": "ERC4973.ownerOf",
      "offset": [
        5306,
        5505
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x3B3"
    },
    "940": {
      "fn": "ERC4973.ownerOf",
      "offset": [
        5306,
        5505
      ],
      "op": "CALLDATASIZE",
      "path": "7"
    },
    "941": {
      "fn": "ERC4973.ownerOf",
      "offset": [
        5306,
        5505
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x4"
    },
    "943": {
      "fn": "ERC4973.ownerOf",
      "offset": [
        5306,
        5505
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x2752"
    },
    "946": {
      "fn": "ERC4973.ownerOf",
      "jump": "i",
      "offset": [
        5306,
        5505
      ],
      "op": "JUMP",
      "path": "7"
    },
    "947": {
      "fn": "ERC4973.ownerOf",
      "offset": [
        5306,
        5505
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "948": {
      "fn": "ERC4973.ownerOf",
      "offset": [
        5306,
        5505
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x11CB"
    },
    "951": {
      "fn": "ERC4973.ownerOf",
      "jump": "i",
      "offset": [
        5306,
        5505
      ],
      "op": "JUMP",
      "path": "7"
    },
    "952": {
      "fn": "ERC4973.ownerOf",
      "offset": [
        5306,
        5505
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "953": {
      "fn": "ERC4973.ownerOf",
      "offset": [
        5306,
        5505
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x40"
    },
    "955": {
      "fn": "ERC4973.ownerOf",
      "offset": [
        5306,
        5505
      ],
      "op": "MLOAD",
      "path": "7"
    },
    "956": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "958": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "960": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "962": {
      "op": "SHL"
    },
    "963": {
      "op": "SUB"
    },
    "964": {
      "op": "SWAP1"
    },
    "965": {
      "op": "SWAP2"
    },
    "966": {
      "op": "AND"
    },
    "967": {
      "op": "DUP2"
    },
    "968": {
      "op": "MSTORE"
    },
    "969": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "971": {
      "op": "ADD"
    },
    "972": {
      "fn": "ERC4973.ownerOf",
      "offset": [
        5306,
        5505
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x261"
    },
    "975": {
      "op": "JUMP"
    },
    "976": {
      "fn": "IsValidWithDate.getExpiryDate",
      "offset": [
        1358,
        1475
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "977": {
      "fn": "IsValidWithDate.getExpiryDate",
      "offset": [
        1358,
        1475
      ],
      "op": "CALLVALUE",
      "path": "1"
    },
    "978": {
      "fn": "IsValidWithDate.getExpiryDate",
      "offset": [
        1358,
        1475
      ],
      "op": "DUP1",
      "path": "1"
    },
    "979": {
      "fn": "IsValidWithDate.getExpiryDate",
      "offset": [
        1358,
        1475
      ],
      "op": "ISZERO",
      "path": "1"
    },
    "980": {
      "fn": "IsValidWithDate.getExpiryDate",
      "offset": [
        1358,
        1475
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x3DC"
    },
    "983": {
      "fn": "IsValidWithDate.getExpiryDate",
      "offset": [
        1358,
        1475
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "984": {
      "fn": "IsValidWithDate.getExpiryDate",
      "offset": [
        1358,
        1475
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "986": {
      "fn": "IsValidWithDate.getExpiryDate",
      "offset": [
        1358,
        1475
      ],
      "op": "DUP1",
      "path": "1"
    },
    "987": {
      "fn": "IsValidWithDate.getExpiryDate",
      "offset": [
        1358,
        1475
      ],
      "op": "REVERT",
      "path": "1"
    },
    "988": {
      "fn": "IsValidWithDate.getExpiryDate",
      "offset": [
        1358,
        1475
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "989": {
      "op": "POP"
    },
    "990": {
      "fn": "IsValidWithDate.getExpiryDate",
      "offset": [
        1358,
        1475
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x3FD"
    },
    "993": {
      "fn": "IsValidWithDate.getExpiryDate",
      "offset": [
        1358,
        1475
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x3EB"
    },
    "996": {
      "fn": "IsValidWithDate.getExpiryDate",
      "offset": [
        1358,
        1475
      ],
      "op": "CALLDATASIZE",
      "path": "1"
    },
    "997": {
      "fn": "IsValidWithDate.getExpiryDate",
      "offset": [
        1358,
        1475
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "999": {
      "fn": "IsValidWithDate.getExpiryDate",
      "offset": [
        1358,
        1475
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x2752"
    },
    "1002": {
      "fn": "IsValidWithDate.getExpiryDate",
      "jump": "i",
      "offset": [
        1358,
        1475
      ],
      "op": "JUMP",
      "path": "1"
    },
    "1003": {
      "fn": "IsValidWithDate.getExpiryDate",
      "offset": [
        1358,
        1475
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "1004": {
      "fn": "IsValidWithDate.getExpiryDate",
      "offset": [
        1418,
        1425
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "1006": {
      "fn": "IsValidWithDate.getExpiryDate",
      "offset": [
        1444,
        1468
      ],
      "op": "SWAP1",
      "path": "1",
      "statement": 1
    },
    "1007": {
      "fn": "IsValidWithDate.getExpiryDate",
      "offset": [
        1444,
        1468
      ],
      "op": "DUP2",
      "path": "1"
    },
    "1008": {
      "fn": "IsValidWithDate.getExpiryDate",
      "offset": [
        1444,
        1468
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "1009": {
      "fn": "IsValidWithDate.getExpiryDate",
      "offset": [
        1444,
        1468
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "1011": {
      "fn": "IsValidWithDate.getExpiryDate",
      "offset": [
        1444,
        1468
      ],
      "op": "DUP2",
      "path": "1"
    },
    "1012": {
      "fn": "IsValidWithDate.getExpiryDate",
      "offset": [
        1444,
        1468
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "1013": {
      "fn": "IsValidWithDate.getExpiryDate",
      "offset": [
        1444,
        1468
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "1014": {
      "fn": "IsValidWithDate.getExpiryDate",
      "offset": [
        1444,
        1468
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "1016": {
      "fn": "IsValidWithDate.getExpiryDate",
      "offset": [
        1444,
        1468
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "1017": {
      "fn": "IsValidWithDate.getExpiryDate",
      "offset": [
        1444,
        1468
      ],
      "op": "KECCAK256",
      "path": "1"
    },
    "1018": {
      "fn": "IsValidWithDate.getExpiryDate",
      "offset": [
        1444,
        1468
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "1019": {
      "fn": "IsValidWithDate.getExpiryDate",
      "offset": [
        1444,
        1468
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "1020": {
      "fn": "IsValidWithDate.getExpiryDate",
      "offset": [
        1358,
        1475
      ],
      "op": "JUMP",
      "path": "1"
    },
    "1021": {
      "fn": "IsValidWithDate.getExpiryDate",
      "offset": [
        1358,
        1475
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "1022": {
      "fn": "IsValidWithDate.getExpiryDate",
      "offset": [
        1358,
        1475
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "1024": {
      "fn": "IsValidWithDate.getExpiryDate",
      "offset": [
        1358,
        1475
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "1025": {
      "op": "SWAP1"
    },
    "1026": {
      "op": "DUP2"
    },
    "1027": {
      "op": "MSTORE"
    },
    "1028": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1030": {
      "op": "ADD"
    },
    "1031": {
      "fn": "IsValidWithDate.getExpiryDate",
      "offset": [
        1358,
        1475
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x261"
    },
    "1034": {
      "op": "JUMP"
    },
    "1035": {
      "fn": "Allowlist.getAllowlistOwner",
      "offset": [
        2018,
        2114
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1036": {
      "fn": "Allowlist.getAllowlistOwner",
      "offset": [
        2018,
        2114
      ],
      "op": "CALLVALUE",
      "path": "0"
    },
    "1037": {
      "fn": "Allowlist.getAllowlistOwner",
      "offset": [
        2018,
        2114
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1038": {
      "fn": "Allowlist.getAllowlistOwner",
      "offset": [
        2018,
        2114
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "1039": {
      "fn": "Allowlist.getAllowlistOwner",
      "offset": [
        2018,
        2114
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x417"
    },
    "1042": {
      "fn": "Allowlist.getAllowlistOwner",
      "offset": [
        2018,
        2114
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "1043": {
      "fn": "Allowlist.getAllowlistOwner",
      "offset": [
        2018,
        2114
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1045": {
      "fn": "Allowlist.getAllowlistOwner",
      "offset": [
        2018,
        2114
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1046": {
      "fn": "Allowlist.getAllowlistOwner",
      "offset": [
        2018,
        2114
      ],
      "op": "REVERT",
      "path": "0"
    },
    "1047": {
      "fn": "Allowlist.getAllowlistOwner",
      "offset": [
        2018,
        2114
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1048": {
      "op": "POP"
    },
    "1049": {
      "fn": "Allowlist.getAllowlistOwner",
      "offset": [
        2093,
        2107
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 2,
      "value": "0x9"
    },
    "1051": {
      "fn": "Allowlist.getAllowlistOwner",
      "offset": [
        2093,
        2107
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "1052": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1054": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1056": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1058": {
      "op": "SHL"
    },
    "1059": {
      "op": "SUB"
    },
    "1060": {
      "fn": "Allowlist.getAllowlistOwner",
      "offset": [
        2093,
        2107
      ],
      "op": "AND",
      "path": "0"
    },
    "1061": {
      "fn": "Allowlist.getAllowlistOwner",
      "offset": [
        2018,
        2114
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x3B8"
    },
    "1064": {
      "fn": "Allowlist.getAllowlistOwner",
      "offset": [
        2018,
        2114
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1065": {
      "fn": "ERC4973.balanceOf",
      "offset": [
        5105,
        5302
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "1066": {
      "fn": "ERC4973.balanceOf",
      "offset": [
        5105,
        5302
      ],
      "op": "CALLVALUE",
      "path": "7"
    },
    "1067": {
      "fn": "ERC4973.balanceOf",
      "offset": [
        5105,
        5302
      ],
      "op": "DUP1",
      "path": "7"
    },
    "1068": {
      "fn": "ERC4973.balanceOf",
      "offset": [
        5105,
        5302
      ],
      "op": "ISZERO",
      "path": "7"
    },
    "1069": {
      "fn": "ERC4973.balanceOf",
      "offset": [
        5105,
        5302
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x435"
    },
    "1072": {
      "fn": "ERC4973.balanceOf",
      "offset": [
        5105,
        5302
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "1073": {
      "fn": "ERC4973.balanceOf",
      "offset": [
        5105,
        5302
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x0"
    },
    "1075": {
      "fn": "ERC4973.balanceOf",
      "offset": [
        5105,
        5302
      ],
      "op": "DUP1",
      "path": "7"
    },
    "1076": {
      "fn": "ERC4973.balanceOf",
      "offset": [
        5105,
        5302
      ],
      "op": "REVERT",
      "path": "7"
    },
    "1077": {
      "fn": "ERC4973.balanceOf",
      "offset": [
        5105,
        5302
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "1078": {
      "op": "POP"
    },
    "1079": {
      "fn": "ERC4973.balanceOf",
      "offset": [
        5105,
        5302
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x3FD"
    },
    "1082": {
      "fn": "ERC4973.balanceOf",
      "offset": [
        5105,
        5302
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x444"
    },
    "1085": {
      "fn": "ERC4973.balanceOf",
      "offset": [
        5105,
        5302
      ],
      "op": "CALLDATASIZE",
      "path": "7"
    },
    "1086": {
      "fn": "ERC4973.balanceOf",
      "offset": [
        5105,
        5302
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x4"
    },
    "1088": {
      "fn": "ERC4973.balanceOf",
      "offset": [
        5105,
        5302
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x279E"
    },
    "1091": {
      "fn": "ERC4973.balanceOf",
      "jump": "i",
      "offset": [
        5105,
        5302
      ],
      "op": "JUMP",
      "path": "7"
    },
    "1092": {
      "fn": "ERC4973.balanceOf",
      "offset": [
        5105,
        5302
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "1093": {
      "fn": "ERC4973.balanceOf",
      "offset": [
        5105,
        5302
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x1230"
    },
    "1096": {
      "fn": "ERC4973.balanceOf",
      "jump": "i",
      "offset": [
        5105,
        5302
      ],
      "op": "JUMP",
      "path": "7"
    },
    "1097": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        2147,
        2248
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1098": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        2147,
        2248
      ],
      "op": "CALLVALUE",
      "path": "2"
    },
    "1099": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        2147,
        2248
      ],
      "op": "DUP1",
      "path": "2"
    },
    "1100": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        2147,
        2248
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "1101": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        2147,
        2248
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x455"
    },
    "1104": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        2147,
        2248
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "1105": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        2147,
        2248
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "1107": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        2147,
        2248
      ],
      "op": "DUP1",
      "path": "2"
    },
    "1108": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        2147,
        2248
      ],
      "op": "REVERT",
      "path": "2"
    },
    "1109": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        2147,
        2248
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1110": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        2147,
        2248
      ],
      "op": "POP",
      "path": "2"
    },
    "1111": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        2147,
        2248
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x233"
    },
    "1114": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        2147,
        2248
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x12B9"
    },
    "1117": {
      "fn": "Ownable.renounceOwnership",
      "jump": "i",
      "offset": [
        2147,
        2248
      ],
      "op": "JUMP",
      "path": "2"
    },
    "1118": {
      "fn": "SoulboundCore.setBaseURI",
      "offset": [
        5491,
        5682
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "1119": {
      "fn": "SoulboundCore.setBaseURI",
      "offset": [
        5491,
        5682
      ],
      "op": "CALLVALUE",
      "path": "4"
    },
    "1120": {
      "fn": "SoulboundCore.setBaseURI",
      "offset": [
        5491,
        5682
      ],
      "op": "DUP1",
      "path": "4"
    },
    "1121": {
      "fn": "SoulboundCore.setBaseURI",
      "offset": [
        5491,
        5682
      ],
      "op": "ISZERO",
      "path": "4"
    },
    "1122": {
      "fn": "SoulboundCore.setBaseURI",
      "offset": [
        5491,
        5682
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x46A"
    },
    "1125": {
      "fn": "SoulboundCore.setBaseURI",
      "offset": [
        5491,
        5682
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "1126": {
      "fn": "SoulboundCore.setBaseURI",
      "offset": [
        5491,
        5682
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "1128": {
      "fn": "SoulboundCore.setBaseURI",
      "offset": [
        5491,
        5682
      ],
      "op": "DUP1",
      "path": "4"
    },
    "1129": {
      "fn": "SoulboundCore.setBaseURI",
      "offset": [
        5491,
        5682
      ],
      "op": "REVERT",
      "path": "4"
    },
    "1130": {
      "fn": "SoulboundCore.setBaseURI",
      "offset": [
        5491,
        5682
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "1131": {
      "op": "POP"
    },
    "1132": {
      "fn": "SoulboundCore.setBaseURI",
      "offset": [
        5491,
        5682
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x233"
    },
    "1135": {
      "fn": "SoulboundCore.setBaseURI",
      "offset": [
        5491,
        5682
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x479"
    },
    "1138": {
      "fn": "SoulboundCore.setBaseURI",
      "offset": [
        5491,
        5682
      ],
      "op": "CALLDATASIZE",
      "path": "4"
    },
    "1139": {
      "fn": "SoulboundCore.setBaseURI",
      "offset": [
        5491,
        5682
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x4"
    },
    "1141": {
      "fn": "SoulboundCore.setBaseURI",
      "offset": [
        5491,
        5682
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x27B9"
    },
    "1144": {
      "fn": "SoulboundCore.setBaseURI",
      "jump": "i",
      "offset": [
        5491,
        5682
      ],
      "op": "JUMP",
      "path": "4"
    },
    "1145": {
      "fn": "SoulboundCore.setBaseURI",
      "offset": [
        5491,
        5682
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "1146": {
      "fn": "SoulboundCore.setBaseURI",
      "offset": [
        5491,
        5682
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x12CD"
    },
    "1149": {
      "fn": "SoulboundCore.setBaseURI",
      "jump": "i",
      "offset": [
        5491,
        5682
      ],
      "op": "JUMP",
      "path": "4"
    },
    "1150": {
      "fn": "Ownable.owner",
      "offset": [
        1506,
        1591
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1151": {
      "fn": "Ownable.owner",
      "offset": [
        1506,
        1591
      ],
      "op": "CALLVALUE",
      "path": "2"
    },
    "1152": {
      "fn": "Ownable.owner",
      "offset": [
        1506,
        1591
      ],
      "op": "DUP1",
      "path": "2"
    },
    "1153": {
      "fn": "Ownable.owner",
      "offset": [
        1506,
        1591
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "1154": {
      "fn": "Ownable.owner",
      "offset": [
        1506,
        1591
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x48A"
    },
    "1157": {
      "fn": "Ownable.owner",
      "offset": [
        1506,
        1591
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "1158": {
      "fn": "Ownable.owner",
      "offset": [
        1506,
        1591
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "1160": {
      "fn": "Ownable.owner",
      "offset": [
        1506,
        1591
      ],
      "op": "DUP1",
      "path": "2"
    },
    "1161": {
      "fn": "Ownable.owner",
      "offset": [
        1506,
        1591
      ],
      "op": "REVERT",
      "path": "2"
    },
    "1162": {
      "fn": "Ownable.owner",
      "offset": [
        1506,
        1591
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1163": {
      "op": "POP"
    },
    "1164": {
      "fn": "Ownable.owner",
      "offset": [
        1578,
        1584
      ],
      "op": "PUSH1",
      "path": "2",
      "statement": 3,
      "value": "0x6"
    },
    "1166": {
      "fn": "Ownable.owner",
      "offset": [
        1578,
        1584
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "1167": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1169": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1171": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1173": {
      "op": "SHL"
    },
    "1174": {
      "op": "SUB"
    },
    "1175": {
      "fn": "Ownable.owner",
      "offset": [
        1578,
        1584
      ],
      "op": "AND",
      "path": "2"
    },
    "1176": {
      "fn": "Ownable.owner",
      "offset": [
        1506,
        1591
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x3B8"
    },
    "1179": {
      "fn": "Ownable.owner",
      "offset": [
        1506,
        1591
      ],
      "op": "JUMP",
      "path": "2"
    },
    "1180": {
      "fn": "ERC4973.symbol",
      "offset": [
        4653,
        4749
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "1181": {
      "fn": "ERC4973.symbol",
      "offset": [
        4653,
        4749
      ],
      "op": "CALLVALUE",
      "path": "7"
    },
    "1182": {
      "fn": "ERC4973.symbol",
      "offset": [
        4653,
        4749
      ],
      "op": "DUP1",
      "path": "7"
    },
    "1183": {
      "fn": "ERC4973.symbol",
      "offset": [
        4653,
        4749
      ],
      "op": "ISZERO",
      "path": "7"
    },
    "1184": {
      "fn": "ERC4973.symbol",
      "offset": [
        4653,
        4749
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x4A8"
    },
    "1187": {
      "fn": "ERC4973.symbol",
      "offset": [
        4653,
        4749
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "1188": {
      "fn": "ERC4973.symbol",
      "offset": [
        4653,
        4749
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x0"
    },
    "1190": {
      "fn": "ERC4973.symbol",
      "offset": [
        4653,
        4749
      ],
      "op": "DUP1",
      "path": "7"
    },
    "1191": {
      "fn": "ERC4973.symbol",
      "offset": [
        4653,
        4749
      ],
      "op": "REVERT",
      "path": "7"
    },
    "1192": {
      "fn": "ERC4973.symbol",
      "offset": [
        4653,
        4749
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "1193": {
      "fn": "ERC4973.symbol",
      "offset": [
        4653,
        4749
      ],
      "op": "POP",
      "path": "7"
    },
    "1194": {
      "fn": "ERC4973.symbol",
      "offset": [
        4653,
        4749
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x27F"
    },
    "1197": {
      "fn": "ERC4973.symbol",
      "offset": [
        4653,
        4749
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x1321"
    },
    "1200": {
      "fn": "ERC4973.symbol",
      "jump": "i",
      "offset": [
        4653,
        4749
      ],
      "op": "JUMP",
      "path": "7"
    },
    "1201": {
      "fn": "SoulboundRedeemable.redeemMintedTokenWithSignature",
      "offset": [
        13242,
        13822
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "1202": {
      "fn": "SoulboundRedeemable.redeemMintedTokenWithSignature",
      "offset": [
        13242,
        13822
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x233"
    },
    "1205": {
      "fn": "SoulboundRedeemable.redeemMintedTokenWithSignature",
      "offset": [
        13242,
        13822
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x4BF"
    },
    "1208": {
      "fn": "SoulboundRedeemable.redeemMintedTokenWithSignature",
      "offset": [
        13242,
        13822
      ],
      "op": "CALLDATASIZE",
      "path": "5"
    },
    "1209": {
      "fn": "SoulboundRedeemable.redeemMintedTokenWithSignature",
      "offset": [
        13242,
        13822
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x4"
    },
    "1211": {
      "fn": "SoulboundRedeemable.redeemMintedTokenWithSignature",
      "offset": [
        13242,
        13822
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x2807"
    },
    "1214": {
      "fn": "SoulboundRedeemable.redeemMintedTokenWithSignature",
      "jump": "i",
      "offset": [
        13242,
        13822
      ],
      "op": "JUMP",
      "path": "5"
    },
    "1215": {
      "fn": "SoulboundRedeemable.redeemMintedTokenWithSignature",
      "offset": [
        13242,
        13822
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "1216": {
      "fn": "SoulboundRedeemable.redeemMintedTokenWithSignature",
      "offset": [
        13242,
        13822
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x1330"
    },
    "1219": {
      "fn": "SoulboundRedeemable.redeemMintedTokenWithSignature",
      "jump": "i",
      "offset": [
        13242,
        13822
      ],
      "op": "JUMP",
      "path": "5"
    },
    "1220": {
      "fn": "SoulboundRedeemable.getPriceLimit",
      "offset": [
        2739,
        2846
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "1221": {
      "fn": "SoulboundRedeemable.getPriceLimit",
      "offset": [
        2739,
        2846
      ],
      "op": "CALLVALUE",
      "path": "5"
    },
    "1222": {
      "fn": "SoulboundRedeemable.getPriceLimit",
      "offset": [
        2739,
        2846
      ],
      "op": "DUP1",
      "path": "5"
    },
    "1223": {
      "fn": "SoulboundRedeemable.getPriceLimit",
      "offset": [
        2739,
        2846
      ],
      "op": "ISZERO",
      "path": "5"
    },
    "1224": {
      "fn": "SoulboundRedeemable.getPriceLimit",
      "offset": [
        2739,
        2846
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x4D0"
    },
    "1227": {
      "fn": "SoulboundRedeemable.getPriceLimit",
      "offset": [
        2739,
        2846
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "1228": {
      "fn": "SoulboundRedeemable.getPriceLimit",
      "offset": [
        2739,
        2846
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "1230": {
      "fn": "SoulboundRedeemable.getPriceLimit",
      "offset": [
        2739,
        2846
      ],
      "op": "DUP1",
      "path": "5"
    },
    "1231": {
      "fn": "SoulboundRedeemable.getPriceLimit",
      "offset": [
        2739,
        2846
      ],
      "op": "REVERT",
      "path": "5"
    },
    "1232": {
      "fn": "SoulboundRedeemable.getPriceLimit",
      "offset": [
        2739,
        2846
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "1233": {
      "op": "POP"
    },
    "1234": {
      "fn": "SoulboundRedeemable.getPriceLimit",
      "offset": [
        2829,
        2839
      ],
      "op": "PUSH1",
      "path": "5",
      "statement": 4,
      "value": "0xE"
    },
    "1236": {
      "fn": "SoulboundRedeemable.getPriceLimit",
      "offset": [
        2829,
        2839
      ],
      "op": "SLOAD",
      "path": "5"
    },
    "1237": {
      "fn": "SoulboundRedeemable.getPriceLimit",
      "offset": [
        2739,
        2846
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x3FD"
    },
    "1240": {
      "fn": "SoulboundRedeemable.getPriceLimit",
      "offset": [
        2739,
        2846
      ],
      "op": "JUMP",
      "path": "5"
    },
    "1241": {
      "fn": "SoulboundRedeemable.redeemPendingTokenWithSignature",
      "offset": [
        12104,
        12686
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "1242": {
      "fn": "SoulboundRedeemable.redeemPendingTokenWithSignature",
      "offset": [
        12104,
        12686
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x233"
    },
    "1245": {
      "fn": "SoulboundRedeemable.redeemPendingTokenWithSignature",
      "offset": [
        12104,
        12686
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x4E7"
    },
    "1248": {
      "fn": "SoulboundRedeemable.redeemPendingTokenWithSignature",
      "offset": [
        12104,
        12686
      ],
      "op": "CALLDATASIZE",
      "path": "5"
    },
    "1249": {
      "fn": "SoulboundRedeemable.redeemPendingTokenWithSignature",
      "offset": [
        12104,
        12686
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x4"
    },
    "1251": {
      "fn": "SoulboundRedeemable.redeemPendingTokenWithSignature",
      "offset": [
        12104,
        12686
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x2807"
    },
    "1254": {
      "fn": "SoulboundRedeemable.redeemPendingTokenWithSignature",
      "jump": "i",
      "offset": [
        12104,
        12686
      ],
      "op": "JUMP",
      "path": "5"
    },
    "1255": {
      "fn": "SoulboundRedeemable.redeemPendingTokenWithSignature",
      "offset": [
        12104,
        12686
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "1256": {
      "fn": "SoulboundRedeemable.redeemPendingTokenWithSignature",
      "offset": [
        12104,
        12686
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x1406"
    },
    "1259": {
      "fn": "SoulboundRedeemable.redeemPendingTokenWithSignature",
      "jump": "i",
      "offset": [
        12104,
        12686
      ],
      "op": "JUMP",
      "path": "5"
    },
    "1260": {
      "fn": "SoulboundRedeemable.mintPendingRedeemableToken",
      "offset": [
        3982,
        5208
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "1261": {
      "fn": "SoulboundRedeemable.mintPendingRedeemableToken",
      "offset": [
        3982,
        5208
      ],
      "op": "CALLVALUE",
      "path": "5"
    },
    "1262": {
      "fn": "SoulboundRedeemable.mintPendingRedeemableToken",
      "offset": [
        3982,
        5208
      ],
      "op": "DUP1",
      "path": "5"
    },
    "1263": {
      "fn": "SoulboundRedeemable.mintPendingRedeemableToken",
      "offset": [
        3982,
        5208
      ],
      "op": "ISZERO",
      "path": "5"
    },
    "1264": {
      "fn": "SoulboundRedeemable.mintPendingRedeemableToken",
      "offset": [
        3982,
        5208
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x4F8"
    },
    "1267": {
      "fn": "SoulboundRedeemable.mintPendingRedeemableToken",
      "offset": [
        3982,
        5208
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "1268": {
      "fn": "SoulboundRedeemable.mintPendingRedeemableToken",
      "offset": [
        3982,
        5208
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "1270": {
      "fn": "SoulboundRedeemable.mintPendingRedeemableToken",
      "offset": [
        3982,
        5208
      ],
      "op": "DUP1",
      "path": "5"
    },
    "1271": {
      "fn": "SoulboundRedeemable.mintPendingRedeemableToken",
      "offset": [
        3982,
        5208
      ],
      "op": "REVERT",
      "path": "5"
    },
    "1272": {
      "fn": "SoulboundRedeemable.mintPendingRedeemableToken",
      "offset": [
        3982,
        5208
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "1273": {
      "op": "POP"
    },
    "1274": {
      "fn": "SoulboundRedeemable.mintPendingRedeemableToken",
      "offset": [
        3982,
        5208
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x233"
    },
    "1277": {
      "fn": "SoulboundRedeemable.mintPendingRedeemableToken",
      "offset": [
        3982,
        5208
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x507"
    },
    "1280": {
      "fn": "SoulboundRedeemable.mintPendingRedeemableToken",
      "offset": [
        3982,
        5208
      ],
      "op": "CALLDATASIZE",
      "path": "5"
    },
    "1281": {
      "fn": "SoulboundRedeemable.mintPendingRedeemableToken",
      "offset": [
        3982,
        5208
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x4"
    },
    "1283": {
      "fn": "SoulboundRedeemable.mintPendingRedeemableToken",
      "offset": [
        3982,
        5208
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x2881"
    },
    "1286": {
      "fn": "SoulboundRedeemable.mintPendingRedeemableToken",
      "jump": "i",
      "offset": [
        3982,
        5208
      ],
      "op": "JUMP",
      "path": "5"
    },
    "1287": {
      "fn": "SoulboundRedeemable.mintPendingRedeemableToken",
      "offset": [
        3982,
        5208
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "1288": {
      "fn": "SoulboundRedeemable.mintPendingRedeemableToken",
      "offset": [
        3982,
        5208
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x14C9"
    },
    "1291": {
      "fn": "SoulboundRedeemable.mintPendingRedeemableToken",
      "jump": "i",
      "offset": [
        3982,
        5208
      ],
      "op": "JUMP",
      "path": "5"
    },
    "1292": {
      "fn": "IsValidWithDate.extendExpiry",
      "offset": [
        902,
        1160
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "1293": {
      "fn": "IsValidWithDate.extendExpiry",
      "offset": [
        902,
        1160
      ],
      "op": "CALLVALUE",
      "path": "1"
    },
    "1294": {
      "fn": "IsValidWithDate.extendExpiry",
      "offset": [
        902,
        1160
      ],
      "op": "DUP1",
      "path": "1"
    },
    "1295": {
      "fn": "IsValidWithDate.extendExpiry",
      "offset": [
        902,
        1160
      ],
      "op": "ISZERO",
      "path": "1"
    },
    "1296": {
      "fn": "IsValidWithDate.extendExpiry",
      "offset": [
        902,
        1160
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x518"
    },
    "1299": {
      "fn": "IsValidWithDate.extendExpiry",
      "offset": [
        902,
        1160
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "1300": {
      "fn": "IsValidWithDate.extendExpiry",
      "offset": [
        902,
        1160
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "1302": {
      "fn": "IsValidWithDate.extendExpiry",
      "offset": [
        902,
        1160
      ],
      "op": "DUP1",
      "path": "1"
    },
    "1303": {
      "fn": "IsValidWithDate.extendExpiry",
      "offset": [
        902,
        1160
      ],
      "op": "REVERT",
      "path": "1"
    },
    "1304": {
      "fn": "IsValidWithDate.extendExpiry",
      "offset": [
        902,
        1160
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "1305": {
      "op": "POP"
    },
    "1306": {
      "fn": "IsValidWithDate.extendExpiry",
      "offset": [
        902,
        1160
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x233"
    },
    "1309": {
      "fn": "IsValidWithDate.extendExpiry",
      "offset": [
        902,
        1160
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x527"
    },
    "1312": {
      "fn": "IsValidWithDate.extendExpiry",
      "offset": [
        902,
        1160
      ],
      "op": "CALLDATASIZE",
      "path": "1"
    },
    "1313": {
      "fn": "IsValidWithDate.extendExpiry",
      "offset": [
        902,
        1160
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "1315": {
      "fn": "IsValidWithDate.extendExpiry",
      "offset": [
        902,
        1160
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x28C3"
    },
    "1318": {
      "fn": "IsValidWithDate.extendExpiry",
      "jump": "i",
      "offset": [
        902,
        1160
      ],
      "op": "JUMP",
      "path": "1"
    },
    "1319": {
      "fn": "IsValidWithDate.extendExpiry",
      "offset": [
        902,
        1160
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "1320": {
      "fn": "IsValidWithDate.extendExpiry",
      "offset": [
        902,
        1160
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x169B"
    },
    "1323": {
      "fn": "IsValidWithDate.extendExpiry",
      "jump": "i",
      "offset": [
        902,
        1160
      ],
      "op": "JUMP",
      "path": "1"
    },
    "1324": {
      "fn": "ERC4973.tokenURI",
      "offset": [
        4753,
        4942
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "1325": {
      "fn": "ERC4973.tokenURI",
      "offset": [
        4753,
        4942
      ],
      "op": "CALLVALUE",
      "path": "7"
    },
    "1326": {
      "fn": "ERC4973.tokenURI",
      "offset": [
        4753,
        4942
      ],
      "op": "DUP1",
      "path": "7"
    },
    "1327": {
      "fn": "ERC4973.tokenURI",
      "offset": [
        4753,
        4942
      ],
      "op": "ISZERO",
      "path": "7"
    },
    "1328": {
      "fn": "ERC4973.tokenURI",
      "offset": [
        4753,
        4942
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x538"
    },
    "1331": {
      "fn": "ERC4973.tokenURI",
      "offset": [
        4753,
        4942
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "1332": {
      "fn": "ERC4973.tokenURI",
      "offset": [
        4753,
        4942
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x0"
    },
    "1334": {
      "fn": "ERC4973.tokenURI",
      "offset": [
        4753,
        4942
      ],
      "op": "DUP1",
      "path": "7"
    },
    "1335": {
      "fn": "ERC4973.tokenURI",
      "offset": [
        4753,
        4942
      ],
      "op": "REVERT",
      "path": "7"
    },
    "1336": {
      "fn": "ERC4973.tokenURI",
      "offset": [
        4753,
        4942
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "1337": {
      "op": "POP"
    },
    "1338": {
      "fn": "ERC4973.tokenURI",
      "offset": [
        4753,
        4942
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x27F"
    },
    "1341": {
      "fn": "ERC4973.tokenURI",
      "offset": [
        4753,
        4942
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x547"
    },
    "1344": {
      "fn": "ERC4973.tokenURI",
      "offset": [
        4753,
        4942
      ],
      "op": "CALLDATASIZE",
      "path": "7"
    },
    "1345": {
      "fn": "ERC4973.tokenURI",
      "offset": [
        4753,
        4942
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x4"
    },
    "1347": {
      "fn": "ERC4973.tokenURI",
      "offset": [
        4753,
        4942
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x2752"
    },
    "1350": {
      "fn": "ERC4973.tokenURI",
      "jump": "i",
      "offset": [
        4753,
        4942
      ],
      "op": "JUMP",
      "path": "7"
    },
    "1351": {
      "fn": "ERC4973.tokenURI",
      "offset": [
        4753,
        4942
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "1352": {
      "fn": "ERC4973.tokenURI",
      "offset": [
        4753,
        4942
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x16F3"
    },
    "1355": {
      "fn": "ERC4973.tokenURI",
      "jump": "i",
      "offset": [
        4753,
        4942
      ],
      "op": "JUMP",
      "path": "7"
    },
    "1356": {
      "fn": "Soulbound._getBaseURI",
      "offset": [
        7338,
        7585
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "1357": {
      "fn": "Soulbound._getBaseURI",
      "offset": [
        7338,
        7585
      ],
      "op": "CALLVALUE",
      "path": "3"
    },
    "1358": {
      "fn": "Soulbound._getBaseURI",
      "offset": [
        7338,
        7585
      ],
      "op": "DUP1",
      "path": "3"
    },
    "1359": {
      "fn": "Soulbound._getBaseURI",
      "offset": [
        7338,
        7585
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "1360": {
      "fn": "Soulbound._getBaseURI",
      "offset": [
        7338,
        7585
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x558"
    },
    "1363": {
      "fn": "Soulbound._getBaseURI",
      "offset": [
        7338,
        7585
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "1364": {
      "fn": "Soulbound._getBaseURI",
      "offset": [
        7338,
        7585
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "1366": {
      "fn": "Soulbound._getBaseURI",
      "offset": [
        7338,
        7585
      ],
      "op": "DUP1",
      "path": "3"
    },
    "1367": {
      "fn": "Soulbound._getBaseURI",
      "offset": [
        7338,
        7585
      ],
      "op": "REVERT",
      "path": "3"
    },
    "1368": {
      "fn": "Soulbound._getBaseURI",
      "offset": [
        7338,
        7585
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "1369": {
      "fn": "Soulbound._getBaseURI",
      "offset": [
        7338,
        7585
      ],
      "op": "POP",
      "path": "3"
    },
    "1370": {
      "fn": "Soulbound._getBaseURI",
      "offset": [
        7338,
        7585
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x27F"
    },
    "1373": {
      "fn": "Soulbound._getBaseURI",
      "offset": [
        7338,
        7585
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x17E8"
    },
    "1376": {
      "fn": "Soulbound._getBaseURI",
      "jump": "i",
      "offset": [
        7338,
        7585
      ],
      "op": "JUMP",
      "path": "3"
    },
    "1377": {
      "fn": "SoulboundCore.issueWithSignature",
      "offset": [
        2769,
        3767
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "1378": {
      "fn": "SoulboundCore.issueWithSignature",
      "offset": [
        2769,
        3767
      ],
      "op": "CALLVALUE",
      "path": "4"
    },
    "1379": {
      "fn": "SoulboundCore.issueWithSignature",
      "offset": [
        2769,
        3767
      ],
      "op": "DUP1",
      "path": "4"
    },
    "1380": {
      "fn": "SoulboundCore.issueWithSignature",
      "offset": [
        2769,
        3767
      ],
      "op": "ISZERO",
      "path": "4"
    },
    "1381": {
      "fn": "SoulboundCore.issueWithSignature",
      "offset": [
        2769,
        3767
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x56D"
    },
    "1384": {
      "fn": "SoulboundCore.issueWithSignature",
      "offset": [
        2769,
        3767
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "1385": {
      "fn": "SoulboundCore.issueWithSignature",
      "offset": [
        2769,
        3767
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "1387": {
      "fn": "SoulboundCore.issueWithSignature",
      "offset": [
        2769,
        3767
      ],
      "op": "DUP1",
      "path": "4"
    },
    "1388": {
      "fn": "SoulboundCore.issueWithSignature",
      "offset": [
        2769,
        3767
      ],
      "op": "REVERT",
      "path": "4"
    },
    "1389": {
      "fn": "SoulboundCore.issueWithSignature",
      "offset": [
        2769,
        3767
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "1390": {
      "op": "POP"
    },
    "1391": {
      "fn": "SoulboundCore.issueWithSignature",
      "offset": [
        2769,
        3767
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x233"
    },
    "1394": {
      "fn": "SoulboundCore.issueWithSignature",
      "offset": [
        2769,
        3767
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x57C"
    },
    "1397": {
      "fn": "SoulboundCore.issueWithSignature",
      "offset": [
        2769,
        3767
      ],
      "op": "CALLDATASIZE",
      "path": "4"
    },
    "1398": {
      "fn": "SoulboundCore.issueWithSignature",
      "offset": [
        2769,
        3767
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x4"
    },
    "1400": {
      "fn": "SoulboundCore.issueWithSignature",
      "offset": [
        2769,
        3767
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x28E5"
    },
    "1403": {
      "fn": "SoulboundCore.issueWithSignature",
      "jump": "i",
      "offset": [
        2769,
        3767
      ],
      "op": "JUMP",
      "path": "4"
    },
    "1404": {
      "fn": "SoulboundCore.issueWithSignature",
      "offset": [
        2769,
        3767
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "1405": {
      "fn": "SoulboundCore.issueWithSignature",
      "offset": [
        2769,
        3767
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x1845"
    },
    "1408": {
      "fn": "SoulboundCore.issueWithSignature",
      "jump": "i",
      "offset": [
        2769,
        3767
      ],
      "op": "JUMP",
      "path": "4"
    },
    "1409": {
      "fn": "Allowlist.verifySignature",
      "offset": [
        2334,
        2477
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1410": {
      "fn": "Allowlist.verifySignature",
      "offset": [
        2334,
        2477
      ],
      "op": "CALLVALUE",
      "path": "0"
    },
    "1411": {
      "fn": "Allowlist.verifySignature",
      "offset": [
        2334,
        2477
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1412": {
      "fn": "Allowlist.verifySignature",
      "offset": [
        2334,
        2477
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "1413": {
      "fn": "Allowlist.verifySignature",
      "offset": [
        2334,
        2477
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x58D"
    },
    "1416": {
      "fn": "Allowlist.verifySignature",
      "offset": [
        2334,
        2477
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "1417": {
      "fn": "Allowlist.verifySignature",
      "offset": [
        2334,
        2477
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1419": {
      "fn": "Allowlist.verifySignature",
      "offset": [
        2334,
        2477
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1420": {
      "fn": "Allowlist.verifySignature",
      "offset": [
        2334,
        2477
      ],
      "op": "REVERT",
      "path": "0"
    },
    "1421": {
      "fn": "Allowlist.verifySignature",
      "offset": [
        2334,
        2477
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1422": {
      "op": "POP"
    },
    "1423": {
      "fn": "Allowlist.verifySignature",
      "offset": [
        2334,
        2477
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x255"
    },
    "1426": {
      "fn": "Allowlist.verifySignature",
      "offset": [
        2334,
        2477
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x59C"
    },
    "1429": {
      "fn": "Allowlist.verifySignature",
      "offset": [
        2334,
        2477
      ],
      "op": "CALLDATASIZE",
      "path": "0"
    },
    "1430": {
      "fn": "Allowlist.verifySignature",
      "offset": [
        2334,
        2477
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "1432": {
      "fn": "Allowlist.verifySignature",
      "offset": [
        2334,
        2477
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x296D"
    },
    "1435": {
      "fn": "Allowlist.verifySignature",
      "jump": "i",
      "offset": [
        2334,
        2477
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1436": {
      "fn": "Allowlist.verifySignature",
      "offset": [
        2334,
        2477
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1437": {
      "fn": "Allowlist.verifySignature",
      "offset": [
        2334,
        2477
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1952"
    },
    "1440": {
      "fn": "Allowlist.verifySignature",
      "jump": "i",
      "offset": [
        2334,
        2477
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1441": {
      "fn": "IsValidWithDate.getTimeLeft",
      "offset": [
        2037,
        2485
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "1442": {
      "fn": "IsValidWithDate.getTimeLeft",
      "offset": [
        2037,
        2485
      ],
      "op": "CALLVALUE",
      "path": "1"
    },
    "1443": {
      "fn": "IsValidWithDate.getTimeLeft",
      "offset": [
        2037,
        2485
      ],
      "op": "DUP1",
      "path": "1"
    },
    "1444": {
      "fn": "IsValidWithDate.getTimeLeft",
      "offset": [
        2037,
        2485
      ],
      "op": "ISZERO",
      "path": "1"
    },
    "1445": {
      "fn": "IsValidWithDate.getTimeLeft",
      "offset": [
        2037,
        2485
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x5AD"
    },
    "1448": {
      "fn": "IsValidWithDate.getTimeLeft",
      "offset": [
        2037,
        2485
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "1449": {
      "fn": "IsValidWithDate.getTimeLeft",
      "offset": [
        2037,
        2485
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "1451": {
      "fn": "IsValidWithDate.getTimeLeft",
      "offset": [
        2037,
        2485
      ],
      "op": "DUP1",
      "path": "1"
    },
    "1452": {
      "fn": "IsValidWithDate.getTimeLeft",
      "offset": [
        2037,
        2485
      ],
      "op": "REVERT",
      "path": "1"
    },
    "1453": {
      "fn": "IsValidWithDate.getTimeLeft",
      "offset": [
        2037,
        2485
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "1454": {
      "op": "POP"
    },
    "1455": {
      "fn": "IsValidWithDate.getTimeLeft",
      "offset": [
        2037,
        2485
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x3FD"
    },
    "1458": {
      "fn": "IsValidWithDate.getTimeLeft",
      "offset": [
        2037,
        2485
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x5BC"
    },
    "1461": {
      "fn": "IsValidWithDate.getTimeLeft",
      "offset": [
        2037,
        2485
      ],
      "op": "CALLDATASIZE",
      "path": "1"
    },
    "1462": {
      "fn": "IsValidWithDate.getTimeLeft",
      "offset": [
        2037,
        2485
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "1464": {
      "fn": "IsValidWithDate.getTimeLeft",
      "offset": [
        2037,
        2485
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x2752"
    },
    "1467": {
      "fn": "IsValidWithDate.getTimeLeft",
      "jump": "i",
      "offset": [
        2037,
        2485
      ],
      "op": "JUMP",
      "path": "1"
    },
    "1468": {
      "fn": "IsValidWithDate.getTimeLeft",
      "offset": [
        2037,
        2485
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "1469": {
      "fn": "IsValidWithDate.getTimeLeft",
      "offset": [
        2037,
        2485
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x1965"
    },
    "1472": {
      "fn": "IsValidWithDate.getTimeLeft",
      "jump": "i",
      "offset": [
        2037,
        2485
      ],
      "op": "JUMP",
      "path": "1"
    },
    "1473": {
      "fn": "Allowlist.verifySigner",
      "offset": [
        4649,
        4917
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1474": {
      "fn": "Allowlist.verifySigner",
      "offset": [
        4649,
        4917
      ],
      "op": "CALLVALUE",
      "path": "0"
    },
    "1475": {
      "fn": "Allowlist.verifySigner",
      "offset": [
        4649,
        4917
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1476": {
      "fn": "Allowlist.verifySigner",
      "offset": [
        4649,
        4917
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "1477": {
      "fn": "Allowlist.verifySigner",
      "offset": [
        4649,
        4917
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x5CD"
    },
    "1480": {
      "fn": "Allowlist.verifySigner",
      "offset": [
        4649,
        4917
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "1481": {
      "fn": "Allowlist.verifySigner",
      "offset": [
        4649,
        4917
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1483": {
      "fn": "Allowlist.verifySigner",
      "offset": [
        4649,
        4917
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1484": {
      "fn": "Allowlist.verifySigner",
      "offset": [
        4649,
        4917
      ],
      "op": "REVERT",
      "path": "0"
    },
    "1485": {
      "fn": "Allowlist.verifySigner",
      "offset": [
        4649,
        4917
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1486": {
      "op": "POP"
    },
    "1487": {
      "fn": "Allowlist.verifySigner",
      "offset": [
        4649,
        4917
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x255"
    },
    "1490": {
      "fn": "Allowlist.verifySigner",
      "offset": [
        4649,
        4917
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x5DC"
    },
    "1493": {
      "fn": "Allowlist.verifySigner",
      "offset": [
        4649,
        4917
      ],
      "op": "CALLDATASIZE",
      "path": "0"
    },
    "1494": {
      "fn": "Allowlist.verifySigner",
      "offset": [
        4649,
        4917
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "1496": {
      "fn": "Allowlist.verifySigner",
      "offset": [
        4649,
        4917
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x299E"
    },
    "1499": {
      "fn": "Allowlist.verifySigner",
      "jump": "i",
      "offset": [
        4649,
        4917
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1500": {
      "fn": "Allowlist.verifySigner",
      "offset": [
        4649,
        4917
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1501": {
      "fn": "Allowlist.verifySigner",
      "offset": [
        4649,
        4917
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x19A2"
    },
    "1504": {
      "fn": "Allowlist.verifySigner",
      "jump": "i",
      "offset": [
        4649,
        4917
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1505": {
      "fn": "SoulboundWithSignature.ownerIssueWithSignature",
      "offset": [
        1488,
        2228
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "1506": {
      "fn": "SoulboundWithSignature.ownerIssueWithSignature",
      "offset": [
        1488,
        2228
      ],
      "op": "CALLVALUE",
      "path": "6"
    },
    "1507": {
      "fn": "SoulboundWithSignature.ownerIssueWithSignature",
      "offset": [
        1488,
        2228
      ],
      "op": "DUP1",
      "path": "6"
    },
    "1508": {
      "fn": "SoulboundWithSignature.ownerIssueWithSignature",
      "offset": [
        1488,
        2228
      ],
      "op": "ISZERO",
      "path": "6"
    },
    "1509": {
      "fn": "SoulboundWithSignature.ownerIssueWithSignature",
      "offset": [
        1488,
        2228
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x5ED"
    },
    "1512": {
      "fn": "SoulboundWithSignature.ownerIssueWithSignature",
      "offset": [
        1488,
        2228
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "1513": {
      "fn": "SoulboundWithSignature.ownerIssueWithSignature",
      "offset": [
        1488,
        2228
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "1515": {
      "fn": "SoulboundWithSignature.ownerIssueWithSignature",
      "offset": [
        1488,
        2228
      ],
      "op": "DUP1",
      "path": "6"
    },
    "1516": {
      "fn": "SoulboundWithSignature.ownerIssueWithSignature",
      "offset": [
        1488,
        2228
      ],
      "op": "REVERT",
      "path": "6"
    },
    "1517": {
      "fn": "SoulboundWithSignature.ownerIssueWithSignature",
      "offset": [
        1488,
        2228
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "1518": {
      "op": "POP"
    },
    "1519": {
      "fn": "SoulboundWithSignature.ownerIssueWithSignature",
      "offset": [
        1488,
        2228
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x233"
    },
    "1522": {
      "fn": "SoulboundWithSignature.ownerIssueWithSignature",
      "offset": [
        1488,
        2228
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x5FC"
    },
    "1525": {
      "fn": "SoulboundWithSignature.ownerIssueWithSignature",
      "offset": [
        1488,
        2228
      ],
      "op": "CALLDATASIZE",
      "path": "6"
    },
    "1526": {
      "fn": "SoulboundWithSignature.ownerIssueWithSignature",
      "offset": [
        1488,
        2228
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x4"
    },
    "1528": {
      "fn": "SoulboundWithSignature.ownerIssueWithSignature",
      "offset": [
        1488,
        2228
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x28E5"
    },
    "1531": {
      "fn": "SoulboundWithSignature.ownerIssueWithSignature",
      "jump": "i",
      "offset": [
        1488,
        2228
      ],
      "op": "JUMP",
      "path": "6"
    },
    "1532": {
      "fn": "SoulboundWithSignature.ownerIssueWithSignature",
      "offset": [
        1488,
        2228
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "1533": {
      "fn": "SoulboundWithSignature.ownerIssueWithSignature",
      "offset": [
        1488,
        2228
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x1A36"
    },
    "1536": {
      "fn": "SoulboundWithSignature.ownerIssueWithSignature",
      "jump": "i",
      "offset": [
        1488,
        2228
      ],
      "op": "JUMP",
      "path": "6"
    },
    "1537": {
      "fn": "SoulboundRedeemable.redeemPendingToken",
      "offset": [
        8018,
        9534
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "1538": {
      "fn": "SoulboundRedeemable.redeemPendingToken",
      "offset": [
        8018,
        9534
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x233"
    },
    "1541": {
      "fn": "SoulboundRedeemable.redeemPendingToken",
      "offset": [
        8018,
        9534
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x60F"
    },
    "1544": {
      "fn": "SoulboundRedeemable.redeemPendingToken",
      "offset": [
        8018,
        9534
      ],
      "op": "CALLDATASIZE",
      "path": "5"
    },
    "1545": {
      "fn": "SoulboundRedeemable.redeemPendingToken",
      "offset": [
        8018,
        9534
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x4"
    },
    "1547": {
      "fn": "SoulboundRedeemable.redeemPendingToken",
      "offset": [
        8018,
        9534
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x276B"
    },
    "1550": {
      "fn": "SoulboundRedeemable.redeemPendingToken",
      "jump": "i",
      "offset": [
        8018,
        9534
      ],
      "op": "JUMP",
      "path": "5"
    },
    "1551": {
      "fn": "SoulboundRedeemable.redeemPendingToken",
      "offset": [
        8018,
        9534
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "1552": {
      "fn": "SoulboundRedeemable.redeemPendingToken",
      "offset": [
        8018,
        9534
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x1A93"
    },
    "1555": {
      "fn": "SoulboundRedeemable.redeemPendingToken",
      "jump": "i",
      "offset": [
        8018,
        9534
      ],
      "op": "JUMP",
      "path": "5"
    },
    "1556": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2401,
        2599
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1557": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2401,
        2599
      ],
      "op": "CALLVALUE",
      "path": "2"
    },
    "1558": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2401,
        2599
      ],
      "op": "DUP1",
      "path": "2"
    },
    "1559": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2401,
        2599
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "1560": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2401,
        2599
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x620"
    },
    "1563": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2401,
        2599
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "1564": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2401,
        2599
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "1566": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2401,
        2599
      ],
      "op": "DUP1",
      "path": "2"
    },
    "1567": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2401,
        2599
      ],
      "op": "REVERT",
      "path": "2"
    },
    "1568": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2401,
        2599
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1569": {
      "op": "POP"
    },
    "1570": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2401,
        2599
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x233"
    },
    "1573": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2401,
        2599
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x62F"
    },
    "1576": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2401,
        2599
      ],
      "op": "CALLDATASIZE",
      "path": "2"
    },
    "1577": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2401,
        2599
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "1579": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2401,
        2599
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x279E"
    },
    "1582": {
      "fn": "Ownable.transferOwnership",
      "jump": "i",
      "offset": [
        2401,
        2599
      ],
      "op": "JUMP",
      "path": "2"
    },
    "1583": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2401,
        2599
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1584": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2401,
        2599
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1C1D"
    },
    "1587": {
      "fn": "Ownable.transferOwnership",
      "jump": "i",
      "offset": [
        2401,
        2599
      ],
      "op": "JUMP",
      "path": "2"
    },
    "1588": {
      "fn": "IsValidWithDate.isValid",
      "offset": [
        1700,
        1825
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "1589": {
      "fn": "IsValidWithDate.isValid",
      "offset": [
        1700,
        1825
      ],
      "op": "CALLVALUE",
      "path": "1"
    },
    "1590": {
      "fn": "IsValidWithDate.isValid",
      "offset": [
        1700,
        1825
      ],
      "op": "DUP1",
      "path": "1"
    },
    "1591": {
      "fn": "IsValidWithDate.isValid",
      "offset": [
        1700,
        1825
      ],
      "op": "ISZERO",
      "path": "1"
    },
    "1592": {
      "fn": "IsValidWithDate.isValid",
      "offset": [
        1700,
        1825
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x640"
    },
    "1595": {
      "fn": "IsValidWithDate.isValid",
      "offset": [
        1700,
        1825
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "1596": {
      "fn": "IsValidWithDate.isValid",
      "offset": [
        1700,
        1825
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "1598": {
      "fn": "IsValidWithDate.isValid",
      "offset": [
        1700,
        1825
      ],
      "op": "DUP1",
      "path": "1"
    },
    "1599": {
      "fn": "IsValidWithDate.isValid",
      "offset": [
        1700,
        1825
      ],
      "op": "REVERT",
      "path": "1"
    },
    "1600": {
      "fn": "IsValidWithDate.isValid",
      "offset": [
        1700,
        1825
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "1601": {
      "op": "POP"
    },
    "1602": {
      "fn": "IsValidWithDate.isValid",
      "offset": [
        1700,
        1825
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x255"
    },
    "1605": {
      "fn": "IsValidWithDate.isValid",
      "offset": [
        1700,
        1825
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x64F"
    },
    "1608": {
      "fn": "IsValidWithDate.isValid",
      "offset": [
        1700,
        1825
      ],
      "op": "CALLDATASIZE",
      "path": "1"
    },
    "1609": {
      "fn": "IsValidWithDate.isValid",
      "offset": [
        1700,
        1825
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "1611": {
      "fn": "IsValidWithDate.isValid",
      "offset": [
        1700,
        1825
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x2752"
    },
    "1614": {
      "fn": "IsValidWithDate.isValid",
      "jump": "i",
      "offset": [
        1700,
        1825
      ],
      "op": "JUMP",
      "path": "1"
    },
    "1615": {
      "fn": "IsValidWithDate.isValid",
      "offset": [
        1700,
        1825
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "1616": {
      "fn": "IsValidWithDate.isValid",
      "offset": [
        1754,
        1758
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "1618": {
      "fn": "IsValidWithDate.getExpiryDate",
      "offset": [
        1444,
        1468
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "1619": {
      "fn": "IsValidWithDate.getExpiryDate",
      "offset": [
        1444,
        1468
      ],
      "op": "DUP2",
      "path": "1"
    },
    "1620": {
      "fn": "IsValidWithDate.getExpiryDate",
      "offset": [
        1444,
        1468
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "1621": {
      "fn": "IsValidWithDate.getExpiryDate",
      "offset": [
        1444,
        1468
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "1623": {
      "fn": "IsValidWithDate.getExpiryDate",
      "offset": [
        1444,
        1468
      ],
      "op": "DUP2",
      "path": "1"
    },
    "1624": {
      "fn": "IsValidWithDate.getExpiryDate",
      "offset": [
        1444,
        1468
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "1625": {
      "fn": "IsValidWithDate.getExpiryDate",
      "offset": [
        1444,
        1468
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "1626": {
      "fn": "IsValidWithDate.getExpiryDate",
      "offset": [
        1444,
        1468
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "1628": {
      "fn": "IsValidWithDate.getExpiryDate",
      "offset": [
        1444,
        1468
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "1629": {
      "fn": "IsValidWithDate.getExpiryDate",
      "offset": [
        1444,
        1468
      ],
      "op": "KECCAK256",
      "path": "1"
    },
    "1630": {
      "fn": "IsValidWithDate.getExpiryDate",
      "offset": [
        1444,
        1468
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "1631": {
      "fn": "IsValidWithDate.isValid",
      "offset": [
        1777,
        1792
      ],
      "op": "TIMESTAMP",
      "path": "1",
      "statement": 5
    },
    "1632": {
      "fn": "IsValidWithDate.isValid",
      "offset": [
        1777,
        1818
      ],
      "op": "GT",
      "path": "1"
    },
    "1633": {
      "fn": "IsValidWithDate.isValid",
      "offset": [
        1777,
        1818
      ],
      "op": "ISZERO",
      "path": "1"
    },
    "1634": {
      "fn": "IsValidWithDate.isValid",
      "offset": [
        1777,
        1818
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "1635": {
      "fn": "IsValidWithDate.isValid",
      "offset": [
        1700,
        1825
      ],
      "op": "JUMP",
      "path": "1"
    },
    "1636": {
      "fn": "SoulboundRedeemable.getIndividualTokenPrice",
      "offset": [
        2447,
        2564
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "1637": {
      "fn": "SoulboundRedeemable.getIndividualTokenPrice",
      "offset": [
        2447,
        2564
      ],
      "op": "CALLVALUE",
      "path": "5"
    },
    "1638": {
      "fn": "SoulboundRedeemable.getIndividualTokenPrice",
      "offset": [
        2447,
        2564
      ],
      "op": "DUP1",
      "path": "5"
    },
    "1639": {
      "fn": "SoulboundRedeemable.getIndividualTokenPrice",
      "offset": [
        2447,
        2564
      ],
      "op": "ISZERO",
      "path": "5"
    },
    "1640": {
      "fn": "SoulboundRedeemable.getIndividualTokenPrice",
      "offset": [
        2447,
        2564
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x670"
    },
    "1643": {
      "fn": "SoulboundRedeemable.getIndividualTokenPrice",
      "offset": [
        2447,
        2564
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "1644": {
      "fn": "SoulboundRedeemable.getIndividualTokenPrice",
      "offset": [
        2447,
        2564
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "1646": {
      "fn": "SoulboundRedeemable.getIndividualTokenPrice",
      "offset": [
        2447,
        2564
      ],
      "op": "DUP1",
      "path": "5"
    },
    "1647": {
      "fn": "SoulboundRedeemable.getIndividualTokenPrice",
      "offset": [
        2447,
        2564
      ],
      "op": "REVERT",
      "path": "5"
    },
    "1648": {
      "fn": "SoulboundRedeemable.getIndividualTokenPrice",
      "offset": [
        2447,
        2564
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "1649": {
      "op": "POP"
    },
    "1650": {
      "fn": "SoulboundRedeemable.getIndividualTokenPrice",
      "offset": [
        2547,
        2557
      ],
      "op": "PUSH1",
      "path": "5",
      "statement": 6,
      "value": "0xF"
    },
    "1652": {
      "fn": "SoulboundRedeemable.getIndividualTokenPrice",
      "offset": [
        2547,
        2557
      ],
      "op": "SLOAD",
      "path": "5"
    },
    "1653": {
      "fn": "SoulboundRedeemable.getIndividualTokenPrice",
      "offset": [
        2447,
        2564
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x3FD"
    },
    "1656": {
      "fn": "SoulboundRedeemable.getIndividualTokenPrice",
      "offset": [
        2447,
        2564
      ],
      "op": "JUMP",
      "path": "5"
    },
    "1657": {
      "fn": "Soulbound.issuerOf",
      "offset": [
        4277,
        4768
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "1658": {
      "fn": "Soulbound.issuerOf",
      "offset": [
        4277,
        4768
      ],
      "op": "CALLVALUE",
      "path": "3"
    },
    "1659": {
      "fn": "Soulbound.issuerOf",
      "offset": [
        4277,
        4768
      ],
      "op": "DUP1",
      "path": "3"
    },
    "1660": {
      "fn": "Soulbound.issuerOf",
      "offset": [
        4277,
        4768
      ],
      "op": "ISZERO",
      "path": "3"
    },
    "1661": {
      "fn": "Soulbound.issuerOf",
      "offset": [
        4277,
        4768
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x685"
    },
    "1664": {
      "fn": "Soulbound.issuerOf",
      "offset": [
        4277,
        4768
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "1665": {
      "fn": "Soulbound.issuerOf",
      "offset": [
        4277,
        4768
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "1667": {
      "fn": "Soulbound.issuerOf",
      "offset": [
        4277,
        4768
      ],
      "op": "DUP1",
      "path": "3"
    },
    "1668": {
      "fn": "Soulbound.issuerOf",
      "offset": [
        4277,
        4768
      ],
      "op": "REVERT",
      "path": "3"
    },
    "1669": {
      "fn": "Soulbound.issuerOf",
      "offset": [
        4277,
        4768
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "1670": {
      "op": "POP"
    },
    "1671": {
      "fn": "Soulbound.issuerOf",
      "offset": [
        4277,
        4768
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x3B8"
    },
    "1674": {
      "fn": "Soulbound.issuerOf",
      "offset": [
        4277,
        4768
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x694"
    },
    "1677": {
      "fn": "Soulbound.issuerOf",
      "offset": [
        4277,
        4768
      ],
      "op": "CALLDATASIZE",
      "path": "3"
    },
    "1678": {
      "fn": "Soulbound.issuerOf",
      "offset": [
        4277,
        4768
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x4"
    },
    "1680": {
      "fn": "Soulbound.issuerOf",
      "offset": [
        4277,
        4768
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x25A8"
    },
    "1683": {
      "fn": "Soulbound.issuerOf",
      "jump": "i",
      "offset": [
        4277,
        4768
      ],
      "op": "JUMP",
      "path": "3"
    },
    "1684": {
      "fn": "Soulbound.issuerOf",
      "offset": [
        4277,
        4768
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "1685": {
      "fn": "Soulbound.issuerOf",
      "offset": [
        4277,
        4768
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x1C93"
    },
    "1688": {
      "fn": "Soulbound.issuerOf",
      "jump": "i",
      "offset": [
        4277,
        4768
      ],
      "op": "JUMP",
      "path": "3"
    },
    "1689": {
      "fn": "SoulboundRedeemable.setPrice",
      "offset": [
        3128,
        3455
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "1690": {
      "offset": [
        1401,
        1414
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x6A1"
    },
    "1693": {
      "offset": [
        1401,
        1412
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1DA7"
    },
    "1696": {
      "jump": "i",
      "offset": [
        1401,
        1414
      ],
      "op": "JUMP",
      "path": "2"
    },
    "1697": {
      "fn": "SoulboundRedeemable.setPrice",
      "offset": [
        1401,
        1414
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1698": {
      "fn": "SoulboundRedeemable.setPrice",
      "offset": [
        3228,
        3234
      ],
      "op": "DUP2",
      "path": "5"
    },
    "1699": {
      "offset": [
        1669,
        1688
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x6B4"
    },
    "1702": {
      "fn": "Allowlist.getAllowlistOwner",
      "offset": [
        2093,
        2107
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x9"
    },
    "1704": {
      "fn": "Allowlist.getAllowlistOwner",
      "offset": [
        2093,
        2107
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "1705": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1707": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1709": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1711": {
      "op": "SHL"
    },
    "1712": {
      "op": "SUB"
    },
    "1713": {
      "fn": "Allowlist.getAllowlistOwner",
      "offset": [
        2093,
        2107
      ],
      "op": "AND",
      "path": "0"
    },
    "1714": {
      "fn": "Allowlist.getAllowlistOwner",
      "offset": [
        2093,
        2107
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1715": {
      "fn": "Allowlist.getAllowlistOwner",
      "offset": [
        2018,
        2114
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1716": {
      "offset": [
        1669,
        1688
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "1717": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1719": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1721": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1723": {
      "op": "SHL"
    },
    "1724": {
      "op": "SUB"
    },
    "1725": {
      "offset": [
        1658,
        1688
      ],
      "op": "AND",
      "path": "4"
    },
    "1726": {
      "offset": [
        1658,
        1665
      ],
      "op": "DUP2",
      "path": "4"
    },
    "1727": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1729": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1731": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1733": {
      "op": "SHL"
    },
    "1734": {
      "op": "SUB"
    },
    "1735": {
      "offset": [
        1658,
        1688
      ],
      "op": "AND",
      "path": "4"
    },
    "1736": {
      "fn": "Allowlist.getAllowlistOwner",
      "offset": [
        1658,
        1688
      ],
      "op": "EQ",
      "path": "4"
    },
    "1737": {
      "offset": [
        1650,
        1713
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x6ED"
    },
    "1740": {
      "offset": [
        1650,
        1713
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "1741": {
      "fn": "Allowlist.getAllowlistOwner",
      "offset": [
        1650,
        1713
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "1743": {
      "fn": "Allowlist.getAllowlistOwner",
      "offset": [
        1650,
        1713
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "1744": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1748": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1750": {
      "op": "SHL"
    },
    "1751": {
      "offset": [
        1650,
        1713
      ],
      "op": "DUP2",
      "path": "4"
    },
    "1752": {
      "fn": "Allowlist.getAllowlistOwner",
      "offset": [
        1650,
        1713
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "1753": {
      "fn": "Allowlist.getAllowlistOwner",
      "offset": [
        1650,
        1713
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x4"
    },
    "1755": {
      "fn": "Allowlist.getAllowlistOwner",
      "offset": [
        1650,
        1713
      ],
      "op": "ADD",
      "path": "4"
    },
    "1756": {
      "fn": "Allowlist.getAllowlistOwner",
      "offset": [
        1650,
        1713
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x6E4"
    },
    "1759": {
      "fn": "Allowlist.getAllowlistOwner",
      "offset": [
        1650,
        1713
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "1760": {
      "fn": "Allowlist.getAllowlistOwner",
      "offset": [
        1650,
        1713
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x29F5"
    },
    "1763": {
      "fn": "Allowlist.getAllowlistOwner",
      "jump": "i",
      "offset": [
        1650,
        1713
      ],
      "op": "JUMP",
      "path": "4"
    },
    "1764": {
      "fn": "Allowlist.getAllowlistOwner",
      "offset": [
        1650,
        1713
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "1765": {
      "fn": "Allowlist.getAllowlistOwner",
      "offset": [
        1650,
        1713
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "1767": {
      "fn": "Allowlist.getAllowlistOwner",
      "offset": [
        1650,
        1713
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "1768": {
      "fn": "Allowlist.getAllowlistOwner",
      "offset": [
        1650,
        1713
      ],
      "op": "DUP1",
      "path": "4"
    },
    "1769": {
      "fn": "Allowlist.getAllowlistOwner",
      "offset": [
        1650,
        1713
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "1770": {
      "fn": "Allowlist.getAllowlistOwner",
      "offset": [
        1650,
        1713
      ],
      "op": "SUB",
      "path": "4"
    },
    "1771": {
      "fn": "Allowlist.getAllowlistOwner",
      "offset": [
        1650,
        1713
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "1772": {
      "fn": "Allowlist.getAllowlistOwner",
      "offset": [
        1650,
        1713
      ],
      "op": "REVERT",
      "optimizer_revert": true,
      "path": "4"
    },
    "1773": {
      "fn": "Allowlist.getAllowlistOwner",
      "offset": [
        1650,
        1713
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "1774": {
      "fn": "SoulboundRedeemable.getPriceLimit",
      "offset": [
        2829,
        2839
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0xE"
    },
    "1776": {
      "fn": "SoulboundRedeemable.getPriceLimit",
      "offset": [
        2829,
        2839
      ],
      "op": "SLOAD",
      "path": "5"
    },
    "1777": {
      "fn": "SoulboundRedeemable.setPrice",
      "offset": [
        3337,
        3343
      ],
      "op": "DUP3",
      "path": "5",
      "statement": 7
    },
    "1778": {
      "fn": "SoulboundRedeemable.setPrice",
      "offset": [
        3337,
        3362
      ],
      "op": "GT",
      "path": "5"
    },
    "1779": {
      "branch": 139,
      "fn": "SoulboundRedeemable.setPrice",
      "offset": [
        3337,
        3362
      ],
      "op": "ISZERO",
      "path": "5"
    },
    "1780": {
      "fn": "SoulboundRedeemable.setPrice",
      "offset": [
        3329,
        3391
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x73F"
    },
    "1783": {
      "branch": 139,
      "fn": "SoulboundRedeemable.setPrice",
      "offset": [
        3329,
        3391
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "1784": {
      "fn": "SoulboundRedeemable.setPrice",
      "offset": [
        3329,
        3391
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "1786": {
      "fn": "SoulboundRedeemable.setPrice",
      "offset": [
        3329,
        3391
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "1787": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1791": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1793": {
      "op": "SHL"
    },
    "1794": {
      "fn": "SoulboundRedeemable.setPrice",
      "offset": [
        3329,
        3391
      ],
      "op": "DUP2",
      "path": "5"
    },
    "1795": {
      "fn": "SoulboundRedeemable.setPrice",
      "offset": [
        3329,
        3391
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "1796": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1798": {
      "fn": "SoulboundRedeemable.setPrice",
      "offset": [
        3329,
        3391
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x4"
    },
    "1800": {
      "fn": "SoulboundRedeemable.setPrice",
      "offset": [
        3329,
        3391
      ],
      "op": "DUP3",
      "path": "5"
    },
    "1801": {
      "fn": "SoulboundRedeemable.setPrice",
      "offset": [
        3329,
        3391
      ],
      "op": "ADD",
      "path": "5"
    },
    "1802": {
      "op": "MSTORE"
    },
    "1803": {
      "op": "PUSH1",
      "value": "0x18"
    },
    "1805": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "1807": {
      "op": "DUP3"
    },
    "1808": {
      "op": "ADD"
    },
    "1809": {
      "op": "MSTORE"
    },
    "1810": {
      "op": "PUSH32",
      "value": "0x507269636520686967686572207468616E206C696D69742E0000000000000000"
    },
    "1843": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "1845": {
      "op": "DUP3"
    },
    "1846": {
      "op": "ADD"
    },
    "1847": {
      "op": "MSTORE"
    },
    "1848": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "1850": {
      "op": "ADD"
    },
    "1851": {
      "fn": "SoulboundRedeemable.setPrice",
      "offset": [
        3329,
        3391
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x6E4"
    },
    "1854": {
      "op": "JUMP"
    },
    "1855": {
      "fn": "SoulboundRedeemable.setPrice",
      "offset": [
        3329,
        3391
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "1856": {
      "op": "POP"
    },
    "1857": {
      "fn": "SoulboundRedeemable.setPrice",
      "offset": [
        3429,
        3439
      ],
      "op": "PUSH1",
      "path": "5",
      "statement": 8,
      "value": "0xF"
    },
    "1859": {
      "fn": "SoulboundRedeemable.setPrice",
      "offset": [
        3429,
        3448
      ],
      "op": "SSTORE",
      "path": "5"
    },
    "1860": {
      "op": "POP"
    },
    "1861": {
      "fn": "SoulboundRedeemable.setPrice",
      "jump": "o",
      "offset": [
        3128,
        3455
      ],
      "op": "JUMP",
      "path": "5"
    },
    "1862": {
      "fn": "ERC4973.supportsInterface",
      "offset": [
        4293,
        4553
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "1863": {
      "fn": "ERC4973.supportsInterface",
      "offset": [
        4378,
        4382
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x0"
    },
    "1865": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1867": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1869": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "1871": {
      "op": "SHL"
    },
    "1872": {
      "op": "SUB"
    },
    "1873": {
      "op": "NOT"
    },
    "1874": {
      "fn": "ERC4973.supportsInterface",
      "offset": [
        4403,
        4451
      ],
      "op": "DUP3",
      "path": "7",
      "statement": 9
    },
    "1875": {
      "fn": "ERC4973.supportsInterface",
      "offset": [
        4403,
        4451
      ],
      "op": "AND",
      "path": "7"
    },
    "1876": {
      "op": "PUSH4",
      "value": "0x5B5E139F"
    },
    "1881": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "1883": {
      "op": "SHL"
    },
    "1884": {
      "fn": "ERC4973.supportsInterface",
      "offset": [
        4403,
        4451
      ],
      "op": "EQ",
      "path": "7"
    },
    "1885": {
      "fn": "ERC4973.supportsInterface",
      "offset": [
        4403,
        4451
      ],
      "op": "DUP1",
      "path": "7"
    },
    "1886": {
      "fn": "ERC4973.supportsInterface",
      "offset": [
        4403,
        4502
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x777"
    },
    "1889": {
      "fn": "ERC4973.supportsInterface",
      "offset": [
        4403,
        4502
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "1890": {
      "op": "POP"
    },
    "1891": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1893": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1895": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "1897": {
      "op": "SHL"
    },
    "1898": {
      "op": "SUB"
    },
    "1899": {
      "op": "NOT"
    },
    "1900": {
      "fn": "ERC4973.supportsInterface",
      "offset": [
        4461,
        4502
      ],
      "op": "DUP3",
      "path": "7"
    },
    "1901": {
      "fn": "ERC4973.supportsInterface",
      "offset": [
        4461,
        4502
      ],
      "op": "AND",
      "path": "7"
    },
    "1902": {
      "op": "PUSH4",
      "value": "0x5164CF47"
    },
    "1907": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "1909": {
      "op": "SHL"
    },
    "1910": {
      "fn": "ERC4973.supportsInterface",
      "offset": [
        4461,
        4502
      ],
      "op": "EQ",
      "path": "7"
    },
    "1911": {
      "fn": "ERC4973.supportsInterface",
      "offset": [
        4403,
        4502
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "1912": {
      "fn": "ERC4973.supportsInterface",
      "offset": [
        4403,
        4548
      ],
      "op": "DUP1",
      "path": "7"
    },
    "1913": {
      "fn": "ERC4973.supportsInterface",
      "offset": [
        4403,
        4548
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x792"
    },
    "1916": {
      "fn": "ERC4973.supportsInterface",
      "offset": [
        4403,
        4548
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "1917": {
      "op": "POP"
    },
    "1918": {
      "op": "PUSH4",
      "value": "0x1FFC9A7"
    },
    "1923": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "1925": {
      "op": "SHL"
    },
    "1926": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1928": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1930": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "1932": {
      "op": "SHL"
    },
    "1933": {
      "op": "SUB"
    },
    "1934": {
      "op": "NOT"
    },
    "1935": {
      "fn": "ERC165.supportsInterface",
      "offset": [
        1685,
        1725
      ],
      "op": "DUP4",
      "path": "7",
      "statement": 10
    },
    "1936": {
      "fn": "ERC165.supportsInterface",
      "offset": [
        1685,
        1725
      ],
      "op": "AND",
      "path": "7"
    },
    "1937": {
      "fn": "ERC165.supportsInterface",
      "offset": [
        1685,
        1725
      ],
      "op": "EQ",
      "path": "7"
    },
    "1938": {
      "fn": "ERC4973.supportsInterface",
      "offset": [
        4512,
        4548
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "1939": {
      "fn": "ERC4973.supportsInterface",
      "offset": [
        4390,
        4548
      ],
      "op": "SWAP3",
      "path": "7"
    },
    "1940": {
      "fn": "ERC4973.supportsInterface",
      "offset": [
        4293,
        4553
      ],
      "op": "SWAP2",
      "path": "7"
    },
    "1941": {
      "op": "POP"
    },
    "1942": {
      "op": "POP"
    },
    "1943": {
      "fn": "ERC4973.supportsInterface",
      "jump": "o",
      "offset": [
        4293,
        4553
      ],
      "op": "JUMP",
      "path": "7"
    },
    "1944": {
      "fn": "ERC4973.name",
      "offset": [
        4557,
        4649
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "1945": {
      "fn": "ERC4973.name",
      "offset": [
        4611,
        4624
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x60"
    },
    "1947": {
      "fn": "ERC4973.name",
      "offset": [
        4639,
        4644
      ],
      "op": "PUSH1",
      "path": "7",
      "statement": 11,
      "value": "0x1"
    },
    "1949": {
      "fn": "ERC4973.name",
      "offset": [
        4632,
        4644
      ],
      "op": "DUP1",
      "path": "7"
    },
    "1950": {
      "fn": "ERC4973.name",
      "offset": [
        4632,
        4644
      ],
      "op": "SLOAD",
      "path": "7"
    },
    "1951": {
      "fn": "ERC4973.name",
      "offset": [
        4632,
        4644
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x7A7"
    },
    "1954": {
      "fn": "ERC4973.name",
      "offset": [
        4632,
        4644
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "1955": {
      "fn": "ERC4973.name",
      "offset": [
        4632,
        4644
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x2A23"
    },
    "1958": {
      "fn": "ERC4973.name",
      "jump": "i",
      "offset": [
        4632,
        4644
      ],
      "op": "JUMP",
      "path": "7"
    },
    "1959": {
      "fn": "ERC4973.name",
      "offset": [
        4632,
        4644
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "1960": {
      "fn": "ERC4973.name",
      "offset": [
        4632,
        4644
      ],
      "op": "DUP1",
      "path": "7"
    },
    "1961": {
      "fn": "ERC4973.name",
      "offset": [
        4632,
        4644
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x1F"
    },
    "1963": {
      "fn": "ERC4973.name",
      "offset": [
        4632,
        4644
      ],
      "op": "ADD",
      "path": "7"
    },
    "1964": {
      "fn": "ERC4973.name",
      "offset": [
        4632,
        4644
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x20"
    },
    "1966": {
      "fn": "ERC4973.name",
      "offset": [
        4632,
        4644
      ],
      "op": "DUP1",
      "path": "7"
    },
    "1967": {
      "fn": "ERC4973.name",
      "offset": [
        4632,
        4644
      ],
      "op": "SWAP2",
      "path": "7"
    },
    "1968": {
      "fn": "ERC4973.name",
      "offset": [
        4632,
        4644
      ],
      "op": "DIV",
      "path": "7"
    },
    "1969": {
      "fn": "ERC4973.name",
      "offset": [
        4632,
        4644
      ],
      "op": "MUL",
      "path": "7"
    },
    "1970": {
      "fn": "ERC4973.name",
      "offset": [
        4632,
        4644
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x20"
    },
    "1972": {
      "fn": "ERC4973.name",
      "offset": [
        4632,
        4644
      ],
      "op": "ADD",
      "path": "7"
    },
    "1973": {
      "fn": "ERC4973.name",
      "offset": [
        4632,
        4644
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x40"
    },
    "1975": {
      "fn": "ERC4973.name",
      "offset": [
        4632,
        4644
      ],
      "op": "MLOAD",
      "path": "7"
    },
    "1976": {
      "fn": "ERC4973.name",
      "offset": [
        4632,
        4644
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "1977": {
      "fn": "ERC4973.name",
      "offset": [
        4632,
        4644
      ],
      "op": "DUP2",
      "path": "7"
    },
    "1978": {
      "fn": "ERC4973.name",
      "offset": [
        4632,
        4644
      ],
      "op": "ADD",
      "path": "7"
    },
    "1979": {
      "fn": "ERC4973.name",
      "offset": [
        4632,
        4644
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x40"
    },
    "1981": {
      "fn": "ERC4973.name",
      "offset": [
        4632,
        4644
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "1982": {
      "fn": "ERC4973.name",
      "offset": [
        4632,
        4644
      ],
      "op": "DUP1",
      "path": "7"
    },
    "1983": {
      "fn": "ERC4973.name",
      "offset": [
        4632,
        4644
      ],
      "op": "SWAP3",
      "path": "7"
    },
    "1984": {
      "fn": "ERC4973.name",
      "offset": [
        4632,
        4644
      ],
      "op": "SWAP2",
      "path": "7"
    },
    "1985": {
      "fn": "ERC4973.name",
      "offset": [
        4632,
        4644
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "1986": {
      "fn": "ERC4973.name",
      "offset": [
        4632,
        4644
      ],
      "op": "DUP2",
      "path": "7"
    },
    "1987": {
      "fn": "ERC4973.name",
      "offset": [
        4632,
        4644
      ],
      "op": "DUP2",
      "path": "7"
    },
    "1988": {
      "fn": "ERC4973.name",
      "offset": [
        4632,
        4644
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "1989": {
      "fn": "ERC4973.name",
      "offset": [
        4632,
        4644
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x20"
    },
    "1991": {
      "fn": "ERC4973.name",
      "offset": [
        4632,
        4644
      ],
      "op": "ADD",
      "path": "7"
    },
    "1992": {
      "fn": "ERC4973.name",
      "offset": [
        4632,
        4644
      ],
      "op": "DUP3",
      "path": "7"
    },
    "1993": {
      "fn": "ERC4973.name",
      "offset": [
        4632,
        4644
      ],
      "op": "DUP1",
      "path": "7"
    },
    "1994": {
      "fn": "ERC4973.name",
      "offset": [
        4632,
        4644
      ],
      "op": "SLOAD",
      "path": "7"
    },
    "1995": {
      "fn": "ERC4973.name",
      "offset": [
        4632,
        4644
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x7D3"
    },
    "1998": {
      "fn": "ERC4973.name",
      "offset": [
        4632,
        4644
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "1999": {
      "fn": "ERC4973.name",
      "offset": [
        4632,
        4644
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x2A23"
    },
    "2002": {
      "fn": "ERC4973.name",
      "jump": "i",
      "offset": [
        4632,
        4644
      ],
      "op": "JUMP",
      "path": "7"
    },
    "2003": {
      "fn": "ERC4973.name",
      "offset": [
        4632,
        4644
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "2004": {
      "fn": "ERC4973.name",
      "offset": [
        4632,
        4644
      ],
      "op": "DUP1",
      "path": "7"
    },
    "2005": {
      "fn": "ERC4973.name",
      "offset": [
        4632,
        4644
      ],
      "op": "ISZERO",
      "path": "7"
    },
    "2006": {
      "fn": "ERC4973.name",
      "offset": [
        4632,
        4644
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x820"
    },
    "2009": {
      "fn": "ERC4973.name",
      "offset": [
        4632,
        4644
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "2010": {
      "fn": "ERC4973.name",
      "offset": [
        4632,
        4644
      ],
      "op": "DUP1",
      "path": "7"
    },
    "2011": {
      "fn": "ERC4973.name",
      "offset": [
        4632,
        4644
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x1F"
    },
    "2013": {
      "fn": "ERC4973.name",
      "offset": [
        4632,
        4644
      ],
      "op": "LT",
      "path": "7"
    },
    "2014": {
      "fn": "ERC4973.name",
      "offset": [
        4632,
        4644
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x7F5"
    },
    "2017": {
      "fn": "ERC4973.name",
      "offset": [
        4632,
        4644
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "2018": {
      "fn": "ERC4973.name",
      "offset": [
        4632,
        4644
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x100"
    },
    "2021": {
      "fn": "ERC4973.name",
      "offset": [
        4632,
        4644
      ],
      "op": "DUP1",
      "path": "7"
    },
    "2022": {
      "fn": "ERC4973.name",
      "offset": [
        4632,
        4644
      ],
      "op": "DUP4",
      "path": "7"
    },
    "2023": {
      "fn": "ERC4973.name",
      "offset": [
        4632,
        4644
      ],
      "op": "SLOAD",
      "path": "7"
    },
    "2024": {
      "fn": "ERC4973.name",
      "offset": [
        4632,
        4644
      ],
      "op": "DIV",
      "path": "7"
    },
    "2025": {
      "fn": "ERC4973.name",
      "offset": [
        4632,
        4644
      ],
      "op": "MUL",
      "path": "7"
    },
    "2026": {
      "fn": "ERC4973.name",
      "offset": [
        4632,
        4644
      ],
      "op": "DUP4",
      "path": "7"
    },
    "2027": {
      "fn": "ERC4973.name",
      "offset": [
        4632,
        4644
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "2028": {
      "fn": "ERC4973.name",
      "offset": [
        4632,
        4644
      ],
      "op": "SWAP2",
      "path": "7"
    },
    "2029": {
      "fn": "ERC4973.name",
      "offset": [
        4632,
        4644
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x20"
    },
    "2031": {
      "fn": "ERC4973.name",
      "offset": [
        4632,
        4644
      ],
      "op": "ADD",
      "path": "7"
    },
    "2032": {
      "fn": "ERC4973.name",
      "offset": [
        4632,
        4644
      ],
      "op": "SWAP2",
      "path": "7"
    },
    "2033": {
      "fn": "ERC4973.name",
      "offset": [
        4632,
        4644
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x820"
    },
    "2036": {
      "fn": "ERC4973.name",
      "offset": [
        4632,
        4644
      ],
      "op": "JUMP",
      "path": "7"
    },
    "2037": {
      "fn": "ERC4973.name",
      "offset": [
        4632,
        4644
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "2038": {
      "fn": "ERC4973.name",
      "offset": [
        4632,
        4644
      ],
      "op": "DUP3",
      "path": "7"
    },
    "2039": {
      "fn": "ERC4973.name",
      "offset": [
        4632,
        4644
      ],
      "op": "ADD",
      "path": "7"
    },
    "2040": {
      "fn": "ERC4973.name",
      "offset": [
        4632,
        4644
      ],
      "op": "SWAP2",
      "path": "7"
    },
    "2041": {
      "fn": "ERC4973.name",
      "offset": [
        4632,
        4644
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "2042": {
      "fn": "ERC4973.name",
      "offset": [
        4632,
        4644
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x0"
    },
    "2044": {
      "fn": "ERC4973.name",
      "offset": [
        4632,
        4644
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "2045": {
      "fn": "ERC4973.name",
      "offset": [
        4632,
        4644
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x20"
    },
    "2047": {
      "fn": "ERC4973.name",
      "offset": [
        4632,
        4644
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x0"
    },
    "2049": {
      "fn": "ERC4973.name",
      "offset": [
        4632,
        4644
      ],
      "op": "KECCAK256",
      "path": "7"
    },
    "2050": {
      "fn": "ERC4973.name",
      "offset": [
        4632,
        4644
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "2051": {
      "fn": "ERC4973.name",
      "offset": [
        4632,
        4644
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "2052": {
      "fn": "ERC4973.name",
      "offset": [
        4632,
        4644
      ],
      "op": "DUP2",
      "path": "7"
    },
    "2053": {
      "fn": "ERC4973.name",
      "offset": [
        4632,
        4644
      ],
      "op": "SLOAD",
      "path": "7"
    },
    "2054": {
      "fn": "ERC4973.name",
      "offset": [
        4632,
        4644
      ],
      "op": "DUP2",
      "path": "7"
    },
    "2055": {
      "fn": "ERC4973.name",
      "offset": [
        4632,
        4644
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "2056": {
      "fn": "ERC4973.name",
      "offset": [
        4632,
        4644
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "2057": {
      "fn": "ERC4973.name",
      "offset": [
        4632,
        4644
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x1"
    },
    "2059": {
      "fn": "ERC4973.name",
      "offset": [
        4632,
        4644
      ],
      "op": "ADD",
      "path": "7"
    },
    "2060": {
      "fn": "ERC4973.name",
      "offset": [
        4632,
        4644
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "2061": {
      "fn": "ERC4973.name",
      "offset": [
        4632,
        4644
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x20"
    },
    "2063": {
      "fn": "ERC4973.name",
      "offset": [
        4632,
        4644
      ],
      "op": "ADD",
      "path": "7"
    },
    "2064": {
      "fn": "ERC4973.name",
      "offset": [
        4632,
        4644
      ],
      "op": "DUP1",
      "path": "7"
    },
    "2065": {
      "fn": "ERC4973.name",
      "offset": [
        4632,
        4644
      ],
      "op": "DUP4",
      "path": "7"
    },
    "2066": {
      "fn": "ERC4973.name",
      "offset": [
        4632,
        4644
      ],
      "op": "GT",
      "path": "7"
    },
    "2067": {
      "fn": "ERC4973.name",
      "offset": [
        4632,
        4644
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x803"
    },
    "2070": {
      "fn": "ERC4973.name",
      "offset": [
        4632,
        4644
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "2071": {
      "fn": "ERC4973.name",
      "offset": [
        4632,
        4644
      ],
      "op": "DUP3",
      "path": "7"
    },
    "2072": {
      "fn": "ERC4973.name",
      "offset": [
        4632,
        4644
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "2073": {
      "fn": "ERC4973.name",
      "offset": [
        4632,
        4644
      ],
      "op": "SUB",
      "path": "7"
    },
    "2074": {
      "fn": "ERC4973.name",
      "offset": [
        4632,
        4644
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x1F"
    },
    "2076": {
      "fn": "ERC4973.name",
      "offset": [
        4632,
        4644
      ],
      "op": "AND",
      "path": "7"
    },
    "2077": {
      "fn": "ERC4973.name",
      "offset": [
        4632,
        4644
      ],
      "op": "DUP3",
      "path": "7"
    },
    "2078": {
      "fn": "ERC4973.name",
      "offset": [
        4632,
        4644
      ],
      "op": "ADD",
      "path": "7"
    },
    "2079": {
      "fn": "ERC4973.name",
      "offset": [
        4632,
        4644
      ],
      "op": "SWAP2",
      "path": "7"
    },
    "2080": {
      "fn": "ERC4973.name",
      "offset": [
        4632,
        4644
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "2081": {
      "fn": "ERC4973.name",
      "offset": [
        4632,
        4644
      ],
      "op": "POP",
      "path": "7"
    },
    "2082": {
      "fn": "ERC4973.name",
      "offset": [
        4632,
        4644
      ],
      "op": "POP",
      "path": "7"
    },
    "2083": {
      "fn": "ERC4973.name",
      "offset": [
        4632,
        4644
      ],
      "op": "POP",
      "path": "7"
    },
    "2084": {
      "fn": "ERC4973.name",
      "offset": [
        4632,
        4644
      ],
      "op": "POP",
      "path": "7"
    },
    "2085": {
      "fn": "ERC4973.name",
      "offset": [
        4632,
        4644
      ],
      "op": "POP",
      "path": "7"
    },
    "2086": {
      "fn": "ERC4973.name",
      "offset": [
        4632,
        4644
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "2087": {
      "fn": "ERC4973.name",
      "offset": [
        4632,
        4644
      ],
      "op": "POP",
      "path": "7"
    },
    "2088": {
      "fn": "ERC4973.name",
      "offset": [
        4557,
        4649
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "2089": {
      "fn": "ERC4973.name",
      "jump": "o",
      "offset": [
        4557,
        4649
      ],
      "op": "JUMP",
      "path": "7"
    },
    "2090": {
      "fn": "SoulboundCore.revokeWithSignature",
      "offset": [
        4229,
        5160
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "2091": {
      "fn": "SoulboundCore.revokeWithSignature",
      "offset": [
        4414,
        4430
      ],
      "op": "PUSH2",
      "path": "4",
      "statement": 12,
      "value": "0x833"
    },
    "2094": {
      "fn": "SoulboundCore.revokeWithSignature",
      "offset": [
        4422,
        4429
      ],
      "op": "DUP2",
      "path": "4"
    },
    "2095": {
      "fn": "SoulboundCore.revokeWithSignature",
      "offset": [
        4414,
        4421
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x1E01"
    },
    "2098": {
      "fn": "SoulboundCore.revokeWithSignature",
      "jump": "i",
      "offset": [
        4414,
        4430
      ],
      "op": "JUMP",
      "path": "4"
    },
    "2099": {
      "branch": 184,
      "fn": "SoulboundCore.revokeWithSignature",
      "offset": [
        4414,
        4430
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "2100": {
      "fn": "SoulboundCore.revokeWithSignature",
      "offset": [
        4406,
        4462
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x87F"
    },
    "2103": {
      "branch": 184,
      "fn": "SoulboundCore.revokeWithSignature",
      "offset": [
        4406,
        4462
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "2104": {
      "fn": "SoulboundCore.revokeWithSignature",
      "offset": [
        4406,
        4462
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "2106": {
      "fn": "SoulboundCore.revokeWithSignature",
      "offset": [
        4406,
        4462
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "2107": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "2111": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "2113": {
      "op": "SHL"
    },
    "2114": {
      "fn": "SoulboundCore.revokeWithSignature",
      "offset": [
        4406,
        4462
      ],
      "op": "DUP2",
      "path": "4"
    },
    "2115": {
      "fn": "SoulboundCore.revokeWithSignature",
      "offset": [
        4406,
        4462
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "2116": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2118": {
      "fn": "SoulboundCore.revokeWithSignature",
      "offset": [
        4406,
        4462
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x4"
    },
    "2120": {
      "fn": "SoulboundCore.revokeWithSignature",
      "offset": [
        4406,
        4462
      ],
      "op": "DUP3",
      "path": "4"
    },
    "2121": {
      "fn": "SoulboundCore.revokeWithSignature",
      "offset": [
        4406,
        4462
      ],
      "op": "ADD",
      "path": "4"
    },
    "2122": {
      "op": "MSTORE"
    },
    "2123": {
      "op": "PUSH1",
      "value": "0x1B"
    },
    "2125": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "2127": {
      "op": "DUP3"
    },
    "2128": {
      "op": "ADD"
    },
    "2129": {
      "op": "MSTORE"
    },
    "2130": {
      "op": "PUSH32",
      "value": "0x5265766F6B65206F6620696E6578697374656E7420746F6B656E2E0000000000"
    },
    "2163": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "2165": {
      "op": "DUP3"
    },
    "2166": {
      "op": "ADD"
    },
    "2167": {
      "op": "MSTORE"
    },
    "2168": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "2170": {
      "op": "ADD"
    },
    "2171": {
      "fn": "SoulboundCore.revokeWithSignature",
      "offset": [
        4406,
        4462
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x6E4"
    },
    "2174": {
      "op": "JUMP"
    },
    "2175": {
      "fn": "SoulboundCore.revokeWithSignature",
      "offset": [
        4406,
        4462
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "2176": {
      "fn": "SoulboundCore.revokeWithSignature",
      "offset": [
        4697,
        4700
      ],
      "op": "DUP2",
      "path": "4",
      "statement": 13
    },
    "2177": {
      "fn": "SoulboundCore.revokeWithSignature",
      "offset": [
        4697,
        4707
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "2178": {
      "fn": "SoulboundCore.revokeWithSignature",
      "offset": [
        4711,
        4713
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x41"
    },
    "2180": {
      "branch": 185,
      "fn": "SoulboundCore.revokeWithSignature",
      "offset": [
        4697,
        4713
      ],
      "op": "EQ",
      "path": "4"
    },
    "2181": {
      "fn": "SoulboundCore.revokeWithSignature",
      "offset": [
        4689,
        4742
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x8CB"
    },
    "2184": {
      "branch": 185,
      "fn": "SoulboundCore.revokeWithSignature",
      "offset": [
        4689,
        4742
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "2185": {
      "fn": "SoulboundCore.revokeWithSignature",
      "offset": [
        4689,
        4742
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "2187": {
      "fn": "SoulboundCore.revokeWithSignature",
      "offset": [
        4689,
        4742
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "2188": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "2192": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "2194": {
      "op": "SHL"
    },
    "2195": {
      "fn": "SoulboundCore.revokeWithSignature",
      "offset": [
        4689,
        4742
      ],
      "op": "DUP2",
      "path": "4"
    },
    "2196": {
      "fn": "SoulboundCore.revokeWithSignature",
      "offset": [
        4689,
        4742
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "2197": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2199": {
      "fn": "SoulboundCore.revokeWithSignature",
      "offset": [
        4689,
        4742
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x4"
    },
    "2201": {
      "fn": "SoulboundCore.revokeWithSignature",
      "offset": [
        4689,
        4742
      ],
      "op": "DUP3",
      "path": "4"
    },
    "2202": {
      "fn": "SoulboundCore.revokeWithSignature",
      "offset": [
        4689,
        4742
      ],
      "op": "ADD",
      "path": "4"
    },
    "2203": {
      "op": "MSTORE"
    },
    "2204": {
      "op": "PUSH1",
      "value": "0x18"
    },
    "2206": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "2208": {
      "op": "DUP3"
    },
    "2209": {
      "op": "ADD"
    },
    "2210": {
      "op": "MSTORE"
    },
    "2211": {
      "op": "PUSH24",
      "value": "0x92DCECC2D8D2C840E6D2CEDCC2E8EAE4CA40D8CADCCEE8D"
    },
    "2236": {
      "op": "PUSH1",
      "value": "0x43"
    },
    "2238": {
      "op": "SHL"
    },
    "2239": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "2241": {
      "op": "DUP3"
    },
    "2242": {
      "op": "ADD"
    },
    "2243": {
      "op": "MSTORE"
    },
    "2244": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "2246": {
      "op": "ADD"
    },
    "2247": {
      "fn": "SoulboundCore.revokeWithSignature",
      "offset": [
        4689,
        4742
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x6E4"
    },
    "2250": {
      "op": "JUMP"
    },
    "2251": {
      "fn": "SoulboundCore.revokeWithSignature",
      "offset": [
        4689,
        4742
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "2252": {
      "fn": "SoulboundCore.revokeWithSignature",
      "offset": [
        4869,
        4895
      ],
      "op": "PUSH2",
      "path": "4",
      "statement": 14,
      "value": "0x8D5"
    },
    "2255": {
      "fn": "SoulboundCore.revokeWithSignature",
      "offset": [
        4885,
        4889
      ],
      "op": "DUP4",
      "path": "4"
    },
    "2256": {
      "fn": "SoulboundCore.revokeWithSignature",
      "offset": [
        4891,
        4894
      ],
      "op": "DUP4",
      "path": "4"
    },
    "2257": {
      "fn": "SoulboundCore.revokeWithSignature",
      "offset": [
        4869,
        4884
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x1952"
    },
    "2260": {
      "fn": "SoulboundCore.revokeWithSignature",
      "jump": "i",
      "offset": [
        4869,
        4895
      ],
      "op": "JUMP",
      "path": "4"
    },
    "2261": {
      "branch": 186,
      "fn": "SoulboundCore.revokeWithSignature",
      "offset": [
        4869,
        4895
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "2262": {
      "fn": "SoulboundCore.revokeWithSignature",
      "offset": [
        4861,
        4925
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x91D"
    },
    "2265": {
      "branch": 186,
      "fn": "SoulboundCore.revokeWithSignature",
      "offset": [
        4861,
        4925
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "2266": {
      "fn": "SoulboundCore.revokeWithSignature",
      "offset": [
        4861,
        4925
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "2268": {
      "fn": "SoulboundCore.revokeWithSignature",
      "offset": [
        4861,
        4925
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "2269": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "2273": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "2275": {
      "op": "SHL"
    },
    "2276": {
      "fn": "SoulboundCore.revokeWithSignature",
      "offset": [
        4861,
        4925
      ],
      "op": "DUP2",
      "path": "4"
    },
    "2277": {
      "fn": "SoulboundCore.revokeWithSignature",
      "offset": [
        4861,
        4925
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "2278": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2280": {
      "fn": "SoulboundCore.revokeWithSignature",
      "offset": [
        4861,
        4925
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x4"
    },
    "2282": {
      "fn": "SoulboundCore.revokeWithSignature",
      "offset": [
        4861,
        4925
      ],
      "op": "DUP3",
      "path": "4"
    },
    "2283": {
      "fn": "SoulboundCore.revokeWithSignature",
      "offset": [
        4861,
        4925
      ],
      "op": "ADD",
      "path": "4"
    },
    "2284": {
      "op": "MSTORE"
    },
    "2285": {
      "op": "PUSH1",
      "value": "0x19"
    },
    "2287": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "2289": {
      "op": "DUP3"
    },
    "2290": {
      "op": "ADD"
    },
    "2291": {
      "op": "MSTORE"
    },
    "2292": {
      "op": "PUSH25",
      "value": "0x2430B9B4103737BA1039B4B3B732B210313C9037BBB732B917"
    },
    "2318": {
      "op": "PUSH1",
      "value": "0x39"
    },
    "2320": {
      "op": "SHL"
    },
    "2321": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "2323": {
      "op": "DUP3"
    },
    "2324": {
      "op": "ADD"
    },
    "2325": {
      "op": "MSTORE"
    },
    "2326": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "2328": {
      "op": "ADD"
    },
    "2329": {
      "fn": "SoulboundCore.revokeWithSignature",
      "offset": [
        4861,
        4925
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x6E4"
    },
    "2332": {
      "op": "JUMP"
    },
    "2333": {
      "fn": "SoulboundCore.revokeWithSignature",
      "offset": [
        4861,
        4925
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "2334": {
      "fn": "SoulboundCore.revokeWithSignature",
      "offset": [
        5024,
        5057
      ],
      "op": "PUSH2",
      "path": "4",
      "statement": 15,
      "value": "0x92F"
    },
    "2337": {
      "fn": "SoulboundCore.revokeWithSignature",
      "offset": [
        5031,
        5047
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x929"
    },
    "2340": {
      "fn": "SoulboundCore.revokeWithSignature",
      "offset": [
        5039,
        5046
      ],
      "op": "DUP3",
      "path": "4"
    },
    "2341": {
      "fn": "SoulboundCore.revokeWithSignature",
      "offset": [
        5031,
        5038
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x11CB"
    },
    "2344": {
      "fn": "SoulboundCore.revokeWithSignature",
      "jump": "i",
      "offset": [
        5031,
        5047
      ],
      "op": "JUMP",
      "path": "4"
    },
    "2345": {
      "fn": "SoulboundCore.revokeWithSignature",
      "offset": [
        5031,
        5047
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "2346": {
      "fn": "SoulboundCore.revokeWithSignature",
      "offset": [
        5049,
        5056
      ],
      "op": "DUP3",
      "path": "4"
    },
    "2347": {
      "fn": "SoulboundCore.revokeWithSignature",
      "offset": [
        5024,
        5030
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x1E1E"
    },
    "2350": {
      "fn": "SoulboundCore.revokeWithSignature",
      "jump": "i",
      "offset": [
        5024,
        5057
      ],
      "op": "JUMP",
      "path": "4"
    },
    "2351": {
      "fn": "SoulboundCore.revokeWithSignature",
      "offset": [
        5024,
        5057
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "2352": {
      "op": "POP"
    },
    "2353": {
      "fn": "SoulboundCore.revokeWithSignature",
      "offset": [
        5125,
        5153
      ],
      "op": "PUSH1",
      "path": "4",
      "statement": 16,
      "value": "0x40"
    },
    "2355": {
      "fn": "SoulboundCore.revokeWithSignature",
      "offset": [
        5125,
        5153
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "2356": {
      "fn": "SoulboundCore.revokeWithSignature",
      "offset": [
        5145,
        5152
      ],
      "op": "DUP2",
      "path": "4"
    },
    "2357": {
      "fn": "SoulboundCore.revokeWithSignature",
      "offset": [
        5145,
        5152
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "2358": {
      "fn": "SoulboundCore.revokeWithSignature",
      "offset": [
        5125,
        5153
      ],
      "op": "PUSH32",
      "path": "4",
      "value": "0xF947BF2266AFEDE98F27AD2312DB8B2A17921852307F979B6F14A2B41FA774BC"
    },
    "2391": {
      "fn": "SoulboundCore.revokeWithSignature",
      "offset": [
        5125,
        5153
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "2392": {
      "fn": "SoulboundCore.revokeWithSignature",
      "offset": [
        5125,
        5153
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "2394": {
      "fn": "SoulboundCore.revokeWithSignature",
      "offset": [
        5125,
        5153
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "2395": {
      "fn": "SoulboundCore.revokeWithSignature",
      "offset": [
        5125,
        5153
      ],
      "op": "LOG2",
      "path": "4"
    },
    "2396": {
      "fn": "SoulboundCore.revokeWithSignature",
      "offset": [
        4229,
        5160
      ],
      "op": "POP",
      "path": "4"
    },
    "2397": {
      "fn": "SoulboundCore.revokeWithSignature",
      "offset": [
        4229,
        5160
      ],
      "op": "POP",
      "path": "4"
    },
    "2398": {
      "fn": "SoulboundCore.revokeWithSignature",
      "offset": [
        4229,
        5160
      ],
      "op": "POP",
      "path": "4"
    },
    "2399": {
      "fn": "SoulboundCore.revokeWithSignature",
      "jump": "o",
      "offset": [
        4229,
        5160
      ],
      "op": "JUMP",
      "path": "4"
    },
    "2400": {
      "fn": "SoulboundWithSignature.ownerRevokeWithSignature",
      "offset": [
        2932,
        3697
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "2401": {
      "offset": [
        1401,
        1414
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x968"
    },
    "2404": {
      "offset": [
        1401,
        1412
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1DA7"
    },
    "2407": {
      "jump": "i",
      "offset": [
        1401,
        1414
      ],
      "op": "JUMP",
      "path": "2"
    },
    "2408": {
      "fn": "SoulboundWithSignature.ownerRevokeWithSignature",
      "offset": [
        1401,
        1414
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "2409": {
      "fn": "SoulboundWithSignature.ownerRevokeWithSignature",
      "offset": [
        3358,
        3364
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0xB"
    },
    "2411": {
      "fn": "SoulboundWithSignature.ownerRevokeWithSignature",
      "offset": [
        3358,
        3364
      ],
      "op": "SLOAD",
      "path": "6"
    },
    "2412": {
      "branch": 193,
      "fn": "SoulboundWithSignature.ownerRevokeWithSignature",
      "offset": [
        3358,
        3369
      ],
      "op": "ISZERO",
      "path": "6"
    },
    "2413": {
      "fn": "SoulboundWithSignature.ownerRevokeWithSignature",
      "offset": [
        3354,
        3555
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x98A"
    },
    "2416": {
      "branch": 193,
      "fn": "SoulboundWithSignature.ownerRevokeWithSignature",
      "offset": [
        3354,
        3555
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "2417": {
      "fn": "SoulboundWithSignature.ownerRevokeWithSignature",
      "offset": [
        3424,
        3430
      ],
      "op": "PUSH1",
      "path": "6",
      "statement": 17,
      "value": "0xB"
    },
    "2419": {
      "fn": "SoulboundWithSignature.ownerRevokeWithSignature",
      "offset": [
        3424,
        3432
      ],
      "op": "DUP1",
      "path": "6"
    },
    "2420": {
      "fn": "SoulboundWithSignature.ownerRevokeWithSignature",
      "offset": [
        3424,
        3432
      ],
      "op": "SLOAD",
      "path": "6"
    },
    "2421": {
      "fn": "SoulboundWithSignature.ownerRevokeWithSignature",
      "offset": [
        3424,
        3432
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "2422": {
      "fn": "SoulboundWithSignature.ownerRevokeWithSignature",
      "offset": [
        3424,
        3430
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x0"
    },
    "2424": {
      "fn": "SoulboundWithSignature.ownerRevokeWithSignature",
      "offset": [
        3424,
        3432
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x980"
    },
    "2427": {
      "fn": "SoulboundWithSignature.ownerRevokeWithSignature",
      "offset": [
        3424,
        3432
      ],
      "op": "DUP4",
      "path": "6"
    },
    "2428": {
      "fn": "SoulboundWithSignature.ownerRevokeWithSignature",
      "offset": [
        3424,
        3432
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x2A73"
    },
    "2431": {
      "fn": "SoulboundWithSignature.ownerRevokeWithSignature",
      "jump": "i",
      "offset": [
        3424,
        3432
      ],
      "op": "JUMP",
      "path": "6"
    },
    "2432": {
      "fn": "SoulboundWithSignature.ownerRevokeWithSignature",
      "offset": [
        3424,
        3432
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "2433": {
      "fn": "SoulboundWithSignature.ownerRevokeWithSignature",
      "offset": [
        3424,
        3432
      ],
      "op": "SWAP2",
      "path": "6"
    },
    "2434": {
      "fn": "SoulboundWithSignature.ownerRevokeWithSignature",
      "offset": [
        3424,
        3432
      ],
      "op": "SWAP1",
      "path": "6"
    },
    "2435": {
      "fn": "SoulboundWithSignature.ownerRevokeWithSignature",
      "offset": [
        3424,
        3432
      ],
      "op": "POP",
      "path": "6"
    },
    "2436": {
      "fn": "SoulboundWithSignature.ownerRevokeWithSignature",
      "offset": [
        3424,
        3432
      ],
      "op": "SSTORE",
      "path": "6"
    },
    "2437": {
      "fn": "SoulboundWithSignature.ownerRevokeWithSignature",
      "offset": [
        3424,
        3432
      ],
      "op": "POP",
      "path": "6"
    },
    "2438": {
      "fn": "SoulboundWithSignature.ownerRevokeWithSignature",
      "offset": [
        3354,
        3555
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x9CA"
    },
    "2441": {
      "fn": "SoulboundWithSignature.ownerRevokeWithSignature",
      "offset": [
        3354,
        3555
      ],
      "op": "JUMP",
      "path": "6"
    },
    "2442": {
      "fn": "SoulboundWithSignature.ownerRevokeWithSignature",
      "offset": [
        3354,
        3555
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "2443": {
      "fn": "SoulboundWithSignature.ownerRevokeWithSignature",
      "offset": [
        3513,
        3544
      ],
      "op": "PUSH1",
      "path": "6",
      "statement": 18,
      "value": "0x40"
    },
    "2445": {
      "fn": "SoulboundWithSignature.ownerRevokeWithSignature",
      "offset": [
        3513,
        3544
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "2446": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "2450": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "2452": {
      "op": "SHL"
    },
    "2453": {
      "fn": "SoulboundWithSignature.ownerRevokeWithSignature",
      "offset": [
        3513,
        3544
      ],
      "op": "DUP2",
      "path": "6"
    },
    "2454": {
      "fn": "SoulboundWithSignature.ownerRevokeWithSignature",
      "offset": [
        3513,
        3544
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "2455": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2457": {
      "fn": "SoulboundWithSignature.ownerRevokeWithSignature",
      "offset": [
        3513,
        3544
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x4"
    },
    "2459": {
      "fn": "SoulboundWithSignature.ownerRevokeWithSignature",
      "offset": [
        3513,
        3544
      ],
      "op": "DUP3",
      "path": "6"
    },
    "2460": {
      "fn": "SoulboundWithSignature.ownerRevokeWithSignature",
      "offset": [
        3513,
        3544
      ],
      "op": "ADD",
      "path": "6"
    },
    "2461": {
      "op": "MSTORE"
    },
    "2462": {
      "op": "PUSH1",
      "value": "0x15"
    },
    "2464": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "2466": {
      "op": "DUP3"
    },
    "2467": {
      "op": "ADD"
    },
    "2468": {
      "op": "MSTORE"
    },
    "2469": {
      "op": "PUSH21",
      "value": "0x2637BBB2B9BA103634B6B4BA103932B0B1B432B217"
    },
    "2491": {
      "op": "PUSH1",
      "value": "0x59"
    },
    "2493": {
      "op": "SHL"
    },
    "2494": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "2496": {
      "op": "DUP3"
    },
    "2497": {
      "op": "ADD"
    },
    "2498": {
      "op": "MSTORE"
    },
    "2499": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "2501": {
      "op": "ADD"
    },
    "2502": {
      "fn": "SoulboundWithSignature.ownerRevokeWithSignature",
      "offset": [
        3513,
        3544
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x6E4"
    },
    "2505": {
      "op": "JUMP"
    },
    "2506": {
      "fn": "SoulboundWithSignature.ownerRevokeWithSignature",
      "offset": [
        3354,
        3555
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "2507": {
      "fn": "SoulboundWithSignature.ownerRevokeWithSignature",
      "offset": [
        3605,
        3690
      ],
      "op": "PUSH2",
      "path": "6",
      "statement": 19,
      "value": "0x9D5"
    },
    "2510": {
      "fn": "SoulboundWithSignature.ownerRevokeWithSignature",
      "offset": [
        3638,
        3642
      ],
      "op": "DUP4",
      "path": "6"
    },
    "2511": {
      "fn": "SoulboundWithSignature.ownerRevokeWithSignature",
      "offset": [
        3656,
        3659
      ],
      "op": "DUP4",
      "path": "6"
    },
    "2512": {
      "fn": "SoulboundWithSignature.ownerRevokeWithSignature",
      "offset": [
        3673,
        3680
      ],
      "op": "DUP4",
      "path": "6"
    },
    "2513": {
      "fn": "SoulboundWithSignature.ownerRevokeWithSignature",
      "offset": [
        3605,
        3624
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x82A"
    },
    "2516": {
      "fn": "SoulboundWithSignature.ownerRevokeWithSignature",
      "jump": "i",
      "offset": [
        3605,
        3690
      ],
      "op": "JUMP",
      "path": "6"
    },
    "2517": {
      "fn": "SoulboundWithSignature.ownerRevokeWithSignature",
      "offset": [
        3605,
        3690
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "2518": {
      "fn": "SoulboundWithSignature.ownerRevokeWithSignature",
      "offset": [
        2932,
        3697
      ],
      "op": "POP",
      "path": "6"
    },
    "2519": {
      "fn": "SoulboundWithSignature.ownerRevokeWithSignature",
      "offset": [
        2932,
        3697
      ],
      "op": "POP",
      "path": "6"
    },
    "2520": {
      "fn": "SoulboundWithSignature.ownerRevokeWithSignature",
      "offset": [
        2932,
        3697
      ],
      "op": "POP",
      "path": "6"
    },
    "2521": {
      "fn": "SoulboundWithSignature.ownerRevokeWithSignature",
      "jump": "o",
      "offset": [
        2932,
        3697
      ],
      "op": "JUMP",
      "path": "6"
    },
    "2522": {
      "fn": "SoulboundCore.generateTokenURI",
      "offset": [
        6072,
        6477
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "2523": {
      "fn": "SoulboundCore.generateTokenURI",
      "offset": [
        6149,
        6172
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x60"
    },
    "2525": {
      "fn": "SoulboundCore.generateTokenURI",
      "offset": [
        6262,
        6275
      ],
      "op": "PUSH2",
      "path": "4",
      "statement": 20,
      "value": "0x9E4"
    },
    "2528": {
      "fn": "SoulboundCore.generateTokenURI",
      "offset": [
        6262,
        6273
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x17E8"
    },
    "2531": {
      "fn": "SoulboundCore.generateTokenURI",
      "jump": "i",
      "offset": [
        6262,
        6275
      ],
      "op": "JUMP",
      "path": "4"
    },
    "2532": {
      "fn": "SoulboundCore.generateTokenURI",
      "offset": [
        6262,
        6275
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "2533": {
      "fn": "SoulboundCore.generateTokenURI",
      "offset": [
        6256,
        6283
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "2534": {
      "fn": "SoulboundCore.generateTokenURI",
      "offset": [
        6287,
        6288
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "2536": {
      "branch": 187,
      "fn": "SoulboundCore.generateTokenURI",
      "offset": [
        6256,
        6288
      ],
      "op": "SUB",
      "path": "4"
    },
    "2537": {
      "fn": "SoulboundCore.generateTokenURI",
      "offset": [
        6248,
        6306
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0xA24"
    },
    "2540": {
      "branch": 187,
      "fn": "SoulboundCore.generateTokenURI",
      "offset": [
        6248,
        6306
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "2541": {
      "fn": "SoulboundCore.generateTokenURI",
      "offset": [
        6248,
        6306
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "2543": {
      "fn": "SoulboundCore.generateTokenURI",
      "offset": [
        6248,
        6306
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "2544": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "2548": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "2550": {
      "op": "SHL"
    },
    "2551": {
      "fn": "SoulboundCore.generateTokenURI",
      "offset": [
        6248,
        6306
      ],
      "op": "DUP2",
      "path": "4"
    },
    "2552": {
      "fn": "SoulboundCore.generateTokenURI",
      "offset": [
        6248,
        6306
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "2553": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2555": {
      "fn": "SoulboundCore.generateTokenURI",
      "offset": [
        6248,
        6306
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x4"
    },
    "2557": {
      "fn": "SoulboundCore.generateTokenURI",
      "offset": [
        6248,
        6306
      ],
      "op": "DUP3",
      "path": "4"
    },
    "2558": {
      "fn": "SoulboundCore.generateTokenURI",
      "offset": [
        6248,
        6306
      ],
      "op": "ADD",
      "path": "4"
    },
    "2559": {
      "op": "MSTORE"
    },
    "2560": {
      "op": "PUSH1",
      "value": "0xD"
    },
    "2562": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "2564": {
      "op": "DUP3"
    },
    "2565": {
      "op": "ADD"
    },
    "2566": {
      "op": "MSTORE"
    },
    "2567": {
      "op": "PUSH13",
      "value": "0x456D7074792062617365555249"
    },
    "2581": {
      "op": "PUSH1",
      "value": "0x98"
    },
    "2583": {
      "op": "SHL"
    },
    "2584": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "2586": {
      "op": "DUP3"
    },
    "2587": {
      "op": "ADD"
    },
    "2588": {
      "op": "MSTORE"
    },
    "2589": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "2591": {
      "op": "ADD"
    },
    "2592": {
      "fn": "SoulboundCore.generateTokenURI",
      "offset": [
        6248,
        6306
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x6E4"
    },
    "2595": {
      "op": "JUMP"
    },
    "2596": {
      "fn": "SoulboundCore.generateTokenURI",
      "offset": [
        6248,
        6306
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "2597": {
      "fn": "SoulboundCore.generateTokenURI",
      "offset": [
        6415,
        6428
      ],
      "op": "PUSH2",
      "path": "4",
      "statement": 21,
      "value": "0xA2C"
    },
    "2600": {
      "fn": "SoulboundCore.generateTokenURI",
      "offset": [
        6415,
        6426
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x17E8"
    },
    "2603": {
      "fn": "SoulboundCore.generateTokenURI",
      "jump": "i",
      "offset": [
        6415,
        6428
      ],
      "op": "JUMP",
      "path": "4"
    },
    "2604": {
      "fn": "SoulboundCore.generateTokenURI",
      "offset": [
        6415,
        6428
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "2605": {
      "fn": "SoulboundCore.generateTokenURI",
      "offset": [
        6442,
        6459
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0xA35"
    },
    "2608": {
      "fn": "SoulboundCore.generateTokenURI",
      "offset": [
        6451,
        6458
      ],
      "op": "DUP4",
      "path": "4"
    },
    "2609": {
      "fn": "SoulboundCore.generateTokenURI",
      "offset": [
        6442,
        6450
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x1EE6"
    },
    "2612": {
      "fn": "SoulboundCore.generateTokenURI",
      "jump": "i",
      "offset": [
        6442,
        6459
      ],
      "op": "JUMP",
      "path": "4"
    },
    "2613": {
      "fn": "SoulboundCore.generateTokenURI",
      "offset": [
        6442,
        6459
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "2614": {
      "fn": "SoulboundCore.generateTokenURI",
      "offset": [
        6385,
        6469
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "2616": {
      "fn": "SoulboundCore.generateTokenURI",
      "offset": [
        6385,
        6469
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "2617": {
      "fn": "SoulboundCore.generateTokenURI",
      "offset": [
        6385,
        6469
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x20"
    },
    "2619": {
      "fn": "SoulboundCore.generateTokenURI",
      "offset": [
        6385,
        6469
      ],
      "op": "ADD",
      "path": "4"
    },
    "2620": {
      "fn": "SoulboundCore.generateTokenURI",
      "offset": [
        6385,
        6469
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0xA46"
    },
    "2623": {
      "fn": "SoulboundCore.generateTokenURI",
      "offset": [
        6385,
        6469
      ],
      "op": "SWAP3",
      "path": "4"
    },
    "2624": {
      "fn": "SoulboundCore.generateTokenURI",
      "offset": [
        6385,
        6469
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "2625": {
      "fn": "SoulboundCore.generateTokenURI",
      "offset": [
        6385,
        6469
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "2626": {
      "fn": "SoulboundCore.generateTokenURI",
      "offset": [
        6385,
        6469
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x2A8A"
    },
    "2629": {
      "fn": "SoulboundCore.generateTokenURI",
      "jump": "i",
      "offset": [
        6385,
        6469
      ],
      "op": "JUMP",
      "path": "4"
    },
    "2630": {
      "fn": "SoulboundCore.generateTokenURI",
      "offset": [
        6385,
        6469
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "2631": {
      "fn": "SoulboundCore.generateTokenURI",
      "offset": [
        6385,
        6469
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "2633": {
      "fn": "SoulboundCore.generateTokenURI",
      "offset": [
        6385,
        6469
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "2634": {
      "fn": "SoulboundCore.generateTokenURI",
      "offset": [
        6385,
        6469
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x20"
    },
    "2636": {
      "fn": "SoulboundCore.generateTokenURI",
      "offset": [
        6385,
        6469
      ],
      "op": "DUP2",
      "path": "4"
    },
    "2637": {
      "fn": "SoulboundCore.generateTokenURI",
      "offset": [
        6385,
        6469
      ],
      "op": "DUP4",
      "path": "4"
    },
    "2638": {
      "fn": "SoulboundCore.generateTokenURI",
      "offset": [
        6385,
        6469
      ],
      "op": "SUB",
      "path": "4"
    },
    "2639": {
      "fn": "SoulboundCore.generateTokenURI",
      "offset": [
        6385,
        6469
      ],
      "op": "SUB",
      "path": "4"
    },
    "2640": {
      "fn": "SoulboundCore.generateTokenURI",
      "offset": [
        6385,
        6469
      ],
      "op": "DUP2",
      "path": "4"
    },
    "2641": {
      "fn": "SoulboundCore.generateTokenURI",
      "offset": [
        6385,
        6469
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "2642": {
      "fn": "SoulboundCore.generateTokenURI",
      "offset": [
        6385,
        6469
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "2643": {
      "fn": "SoulboundCore.generateTokenURI",
      "offset": [
        6385,
        6469
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "2645": {
      "fn": "SoulboundCore.generateTokenURI",
      "offset": [
        6385,
        6469
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "2646": {
      "fn": "SoulboundCore.generateTokenURI",
      "offset": [
        6366,
        6470
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "2647": {
      "fn": "SoulboundCore.generateTokenURI",
      "offset": [
        6366,
        6470
      ],
      "op": "POP",
      "path": "4"
    },
    "2648": {
      "fn": "SoulboundCore.generateTokenURI",
      "offset": [
        6072,
        6477
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "2649": {
      "fn": "SoulboundCore.generateTokenURI",
      "offset": [
        6072,
        6477
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "2650": {
      "fn": "SoulboundCore.generateTokenURI",
      "offset": [
        6072,
        6477
      ],
      "op": "POP",
      "path": "4"
    },
    "2651": {
      "fn": "SoulboundCore.generateTokenURI",
      "jump": "o",
      "offset": [
        6072,
        6477
      ],
      "op": "JUMP",
      "path": "4"
    },
    "2652": {
      "fn": "SoulboundRedeemable.payToReceiveToken",
      "offset": [
        5534,
        7506
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "2653": {
      "offset": [
        1401,
        1414
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xA64"
    },
    "2656": {
      "offset": [
        1401,
        1412
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1DA7"
    },
    "2659": {
      "jump": "i",
      "offset": [
        1401,
        1414
      ],
      "op": "JUMP",
      "path": "2"
    },
    "2660": {
      "fn": "SoulboundRedeemable.payToReceiveToken",
      "offset": [
        1401,
        1414
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "2661": {
      "offset": [
        2194,
        2200
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x13"
    },
    "2663": {
      "fn": "SoulboundRedeemable.payToReceiveToken",
      "offset": [
        2194,
        2200
      ],
      "op": "SLOAD",
      "path": "5"
    },
    "2664": {
      "fn": "SoulboundRedeemable.payToReceiveToken",
      "offset": [
        2194,
        2200
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0xFF"
    },
    "2666": {
      "fn": "SoulboundRedeemable.payToReceiveToken",
      "offset": [
        2194,
        2200
      ],
      "op": "AND",
      "path": "5"
    },
    "2667": {
      "offset": [
        2193,
        2200
      ],
      "op": "ISZERO",
      "path": "5"
    },
    "2668": {
      "offset": [
        2185,
        2201
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0xA74"
    },
    "2671": {
      "offset": [
        2185,
        2201
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "2672": {
      "fn": "SoulboundRedeemable.payToReceiveToken",
      "offset": [
        2185,
        2201
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "2674": {
      "fn": "SoulboundRedeemable.payToReceiveToken",
      "offset": [
        2185,
        2201
      ],
      "op": "DUP1",
      "path": "5"
    },
    "2675": {
      "fn": "SoulboundRedeemable.payToReceiveToken",
      "offset": [
        2185,
        2201
      ],
      "op": "REVERT",
      "path": "5"
    },
    "2676": {
      "fn": "SoulboundRedeemable.payToReceiveToken",
      "offset": [
        2185,
        2201
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "2677": {
      "offset": [
        2211,
        2217
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x13"
    },
    "2679": {
      "offset": [
        2211,
        2224
      ],
      "op": "DUP1",
      "path": "5"
    },
    "2680": {
      "fn": "SoulboundRedeemable.payToReceiveToken",
      "offset": [
        2211,
        2224
      ],
      "op": "SLOAD",
      "path": "5"
    },
    "2681": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "2683": {
      "op": "NOT"
    },
    "2684": {
      "offset": [
        2211,
        2224
      ],
      "op": "AND",
      "path": "5"
    },
    "2685": {
      "offset": [
        2220,
        2224
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x1"
    },
    "2687": {
      "offset": [
        2211,
        2224
      ],
      "op": "OR",
      "path": "5"
    },
    "2688": {
      "fn": "SoulboundRedeemable.payToReceiveToken",
      "offset": [
        2211,
        2224
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "2689": {
      "fn": "SoulboundRedeemable.payToReceiveToken",
      "offset": [
        2211,
        2224
      ],
      "op": "SSTORE",
      "path": "5"
    },
    "2690": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2692": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2694": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2696": {
      "op": "SHL"
    },
    "2697": {
      "op": "SUB"
    },
    "2698": {
      "fn": "SoulboundRedeemable.payToReceiveToken",
      "offset": [
        5739,
        5762
      ],
      "op": "DUP3",
      "path": "5",
      "statement": 22
    },
    "2699": {
      "branch": 140,
      "fn": "SoulboundRedeemable.payToReceiveToken",
      "offset": [
        5739,
        5762
      ],
      "op": "AND",
      "path": "5"
    },
    "2700": {
      "fn": "SoulboundRedeemable.payToReceiveToken",
      "offset": [
        5731,
        5788
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0xAA7"
    },
    "2703": {
      "branch": 140,
      "fn": "SoulboundRedeemable.payToReceiveToken",
      "offset": [
        5731,
        5788
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "2704": {
      "fn": "SoulboundRedeemable.payToReceiveToken",
      "offset": [
        5731,
        5788
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "2706": {
      "fn": "SoulboundRedeemable.payToReceiveToken",
      "offset": [
        5731,
        5788
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "2707": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "2711": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "2713": {
      "op": "SHL"
    },
    "2714": {
      "fn": "SoulboundRedeemable.payToReceiveToken",
      "offset": [
        5731,
        5788
      ],
      "op": "DUP2",
      "path": "5"
    },
    "2715": {
      "fn": "SoulboundRedeemable.payToReceiveToken",
      "offset": [
        5731,
        5788
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "2716": {
      "fn": "SoulboundRedeemable.payToReceiveToken",
      "offset": [
        5731,
        5788
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x4"
    },
    "2718": {
      "fn": "SoulboundRedeemable.payToReceiveToken",
      "offset": [
        5731,
        5788
      ],
      "op": "ADD",
      "path": "5"
    },
    "2719": {
      "fn": "SoulboundRedeemable.payToReceiveToken",
      "offset": [
        5731,
        5788
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x6E4"
    },
    "2722": {
      "fn": "SoulboundRedeemable.payToReceiveToken",
      "offset": [
        5731,
        5788
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "2723": {
      "fn": "SoulboundRedeemable.payToReceiveToken",
      "offset": [
        5731,
        5788
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x2AB9"
    },
    "2726": {
      "fn": "SoulboundRedeemable.payToReceiveToken",
      "jump": "i",
      "offset": [
        5731,
        5788
      ],
      "op": "JUMP",
      "path": "5"
    },
    "2727": {
      "fn": "SoulboundRedeemable.payToReceiveToken",
      "offset": [
        5731,
        5788
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "2728": {
      "fn": "SoulboundRedeemable.payToReceiveToken",
      "offset": [
        5867,
        5883
      ],
      "op": "PUSH2",
      "path": "5",
      "statement": 23,
      "value": "0xAB0"
    },
    "2731": {
      "fn": "SoulboundRedeemable.payToReceiveToken",
      "offset": [
        5875,
        5882
      ],
      "op": "DUP2",
      "path": "5"
    },
    "2732": {
      "fn": "SoulboundRedeemable.payToReceiveToken",
      "offset": [
        5867,
        5874
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x1E01"
    },
    "2735": {
      "fn": "SoulboundRedeemable.payToReceiveToken",
      "jump": "i",
      "offset": [
        5867,
        5883
      ],
      "op": "JUMP",
      "path": "5"
    },
    "2736": {
      "fn": "SoulboundRedeemable.payToReceiveToken",
      "offset": [
        5867,
        5883
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "2737": {
      "branch": 141,
      "fn": "SoulboundRedeemable.payToReceiveToken",
      "offset": [
        5866,
        5883
      ],
      "op": "ISZERO",
      "path": "5"
    },
    "2738": {
      "fn": "SoulboundRedeemable.payToReceiveToken",
      "offset": [
        5858,
        5919
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0xAFD"
    },
    "2741": {
      "branch": 141,
      "fn": "SoulboundRedeemable.payToReceiveToken",
      "offset": [
        5858,
        5919
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "2742": {
      "fn": "SoulboundRedeemable.payToReceiveToken",
      "offset": [
        5858,
        5919
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "2744": {
      "fn": "SoulboundRedeemable.payToReceiveToken",
      "offset": [
        5858,
        5919
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "2745": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "2749": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "2751": {
      "op": "SHL"
    },
    "2752": {
      "fn": "SoulboundRedeemable.payToReceiveToken",
      "offset": [
        5858,
        5919
      ],
      "op": "DUP2",
      "path": "5"
    },
    "2753": {
      "fn": "SoulboundRedeemable.payToReceiveToken",
      "offset": [
        5858,
        5919
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "2754": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2756": {
      "fn": "SoulboundRedeemable.payToReceiveToken",
      "offset": [
        5858,
        5919
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x4"
    },
    "2758": {
      "fn": "SoulboundRedeemable.payToReceiveToken",
      "offset": [
        5858,
        5919
      ],
      "op": "DUP3",
      "path": "5"
    },
    "2759": {
      "fn": "SoulboundRedeemable.payToReceiveToken",
      "offset": [
        5858,
        5919
      ],
      "op": "ADD",
      "path": "5"
    },
    "2760": {
      "op": "MSTORE"
    },
    "2761": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "2763": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "2765": {
      "op": "DUP3"
    },
    "2766": {
      "op": "ADD"
    },
    "2767": {
      "op": "MSTORE"
    },
    "2768": {
      "op": "PUSH32",
      "value": "0x4D696E74206F6620616C7265616479206578697374696E6720746F6B656E2E00"
    },
    "2801": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "2803": {
      "op": "DUP3"
    },
    "2804": {
      "op": "ADD"
    },
    "2805": {
      "op": "MSTORE"
    },
    "2806": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "2808": {
      "op": "ADD"
    },
    "2809": {
      "fn": "SoulboundRedeemable.payToReceiveToken",
      "offset": [
        5858,
        5919
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x6E4"
    },
    "2812": {
      "op": "JUMP"
    },
    "2813": {
      "fn": "SoulboundRedeemable.payToReceiveToken",
      "offset": [
        5858,
        5919
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "2814": {
      "fn": "SoulboundRedeemable.payToReceiveToken",
      "offset": [
        5996,
        6012
      ],
      "op": "PUSH1",
      "path": "5",
      "statement": 24,
      "value": "0x0"
    },
    "2816": {
      "fn": "SoulboundRedeemable.payToReceiveToken",
      "offset": [
        5996,
        6012
      ],
      "op": "DUP2",
      "path": "5"
    },
    "2817": {
      "fn": "SoulboundRedeemable.payToReceiveToken",
      "offset": [
        5996,
        6012
      ],
      "op": "DUP2",
      "path": "5"
    },
    "2818": {
      "fn": "SoulboundRedeemable.payToReceiveToken",
      "offset": [
        5996,
        6012
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "2819": {
      "fn": "SoulboundRedeemable.payToReceiveToken",
      "offset": [
        5996,
        6003
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x10"
    },
    "2821": {
      "fn": "SoulboundRedeemable.payToReceiveToken",
      "offset": [
        5996,
        6012
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "2823": {
      "fn": "SoulboundRedeemable.payToReceiveToken",
      "offset": [
        5996,
        6012
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "2824": {
      "fn": "SoulboundRedeemable.payToReceiveToken",
      "offset": [
        5996,
        6012
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "2826": {
      "fn": "SoulboundRedeemable.payToReceiveToken",
      "offset": [
        5996,
        6012
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "2827": {
      "fn": "SoulboundRedeemable.payToReceiveToken",
      "offset": [
        5996,
        6012
      ],
      "op": "KECCAK256",
      "path": "5"
    },
    "2828": {
      "fn": "SoulboundRedeemable.payToReceiveToken",
      "offset": [
        5996,
        6012
      ],
      "op": "SLOAD",
      "path": "5"
    },
    "2829": {
      "fn": "SoulboundRedeemable.payToReceiveToken",
      "offset": [
        5996,
        6012
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0xFF"
    },
    "2831": {
      "branch": 142,
      "fn": "SoulboundRedeemable.payToReceiveToken",
      "offset": [
        5996,
        6012
      ],
      "op": "AND",
      "path": "5"
    },
    "2832": {
      "fn": "SoulboundRedeemable.payToReceiveToken",
      "offset": [
        5988,
        6040
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0xB55"
    },
    "2835": {
      "branch": 142,
      "fn": "SoulboundRedeemable.payToReceiveToken",
      "offset": [
        5988,
        6040
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "2836": {
      "fn": "SoulboundRedeemable.payToReceiveToken",
      "offset": [
        5988,
        6040
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "2838": {
      "fn": "SoulboundRedeemable.payToReceiveToken",
      "offset": [
        5988,
        6040
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "2839": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "2843": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "2845": {
      "op": "SHL"
    },
    "2846": {
      "fn": "SoulboundRedeemable.payToReceiveToken",
      "offset": [
        5988,
        6040
      ],
      "op": "DUP2",
      "path": "5"
    },
    "2847": {
      "fn": "SoulboundRedeemable.payToReceiveToken",
      "offset": [
        5988,
        6040
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "2848": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2850": {
      "fn": "SoulboundRedeemable.payToReceiveToken",
      "offset": [
        5988,
        6040
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x4"
    },
    "2852": {
      "fn": "SoulboundRedeemable.payToReceiveToken",
      "offset": [
        5988,
        6040
      ],
      "op": "DUP3",
      "path": "5"
    },
    "2853": {
      "fn": "SoulboundRedeemable.payToReceiveToken",
      "offset": [
        5988,
        6040
      ],
      "op": "ADD",
      "path": "5"
    },
    "2854": {
      "op": "MSTORE"
    },
    "2855": {
      "op": "PUSH1",
      "value": "0x17"
    },
    "2857": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "2859": {
      "op": "DUP3"
    },
    "2860": {
      "op": "ADD"
    },
    "2861": {
      "op": "MSTORE"
    },
    "2862": {
      "op": "PUSH23",
      "value": "0x20B63932B0B23C903932B1B2B4BB32B2103A37B5B2B717"
    },
    "2886": {
      "op": "PUSH1",
      "value": "0x49"
    },
    "2888": {
      "op": "SHL"
    },
    "2889": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "2891": {
      "op": "DUP3"
    },
    "2892": {
      "op": "ADD"
    },
    "2893": {
      "op": "MSTORE"
    },
    "2894": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "2896": {
      "op": "ADD"
    },
    "2897": {
      "fn": "SoulboundRedeemable.payToReceiveToken",
      "offset": [
        5988,
        6040
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x6E4"
    },
    "2900": {
      "op": "JUMP"
    },
    "2901": {
      "fn": "SoulboundRedeemable.payToReceiveToken",
      "offset": [
        5988,
        6040
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "2902": {
      "fn": "SoulboundRedeemable.payToReceiveToken",
      "offset": [
        6171,
        6196
      ],
      "op": "PUSH1",
      "path": "5",
      "statement": 25,
      "value": "0x0"
    },
    "2904": {
      "fn": "SoulboundRedeemable.payToReceiveToken",
      "offset": [
        6171,
        6196
      ],
      "op": "DUP2",
      "path": "5"
    },
    "2905": {
      "fn": "SoulboundRedeemable.payToReceiveToken",
      "offset": [
        6171,
        6196
      ],
      "op": "DUP2",
      "path": "5"
    },
    "2906": {
      "fn": "SoulboundRedeemable.payToReceiveToken",
      "offset": [
        6171,
        6196
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "2907": {
      "fn": "SoulboundRedeemable.payToReceiveToken",
      "offset": [
        6171,
        6187
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x11"
    },
    "2909": {
      "fn": "SoulboundRedeemable.payToReceiveToken",
      "offset": [
        6171,
        6196
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "2911": {
      "fn": "SoulboundRedeemable.payToReceiveToken",
      "offset": [
        6171,
        6196
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "2912": {
      "fn": "SoulboundRedeemable.payToReceiveToken",
      "offset": [
        6171,
        6196
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "2914": {
      "fn": "SoulboundRedeemable.payToReceiveToken",
      "offset": [
        6171,
        6196
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "2915": {
      "fn": "SoulboundRedeemable.payToReceiveToken",
      "offset": [
        6171,
        6196
      ],
      "op": "KECCAK256",
      "path": "5"
    },
    "2916": {
      "fn": "SoulboundRedeemable.payToReceiveToken",
      "offset": [
        6171,
        6196
      ],
      "op": "SLOAD",
      "path": "5"
    },
    "2917": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2919": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2921": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2923": {
      "op": "SHL"
    },
    "2924": {
      "op": "SUB"
    },
    "2925": {
      "fn": "SoulboundRedeemable.payToReceiveToken",
      "offset": [
        6171,
        6209
      ],
      "op": "DUP4",
      "path": "5"
    },
    "2926": {
      "fn": "SoulboundRedeemable.payToReceiveToken",
      "offset": [
        6171,
        6209
      ],
      "op": "DUP2",
      "path": "5"
    },
    "2927": {
      "fn": "SoulboundRedeemable.payToReceiveToken",
      "offset": [
        6171,
        6209
      ],
      "op": "AND",
      "path": "5"
    },
    "2928": {
      "fn": "SoulboundRedeemable.payToReceiveToken",
      "offset": [
        6171,
        6196
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "2929": {
      "fn": "SoulboundRedeemable.payToReceiveToken",
      "offset": [
        6171,
        6196
      ],
      "op": "AND",
      "path": "5"
    },
    "2930": {
      "branch": 143,
      "fn": "SoulboundRedeemable.payToReceiveToken",
      "offset": [
        6171,
        6209
      ],
      "op": "EQ",
      "path": "5"
    },
    "2931": {
      "fn": "SoulboundRedeemable.payToReceiveToken",
      "offset": [
        6163,
        6235
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0xBB6"
    },
    "2934": {
      "branch": 143,
      "fn": "SoulboundRedeemable.payToReceiveToken",
      "offset": [
        6163,
        6235
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "2935": {
      "fn": "SoulboundRedeemable.payToReceiveToken",
      "offset": [
        6163,
        6235
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "2937": {
      "fn": "SoulboundRedeemable.payToReceiveToken",
      "offset": [
        6163,
        6235
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "2938": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "2942": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "2944": {
      "op": "SHL"
    },
    "2945": {
      "fn": "SoulboundRedeemable.payToReceiveToken",
      "offset": [
        6163,
        6235
      ],
      "op": "DUP2",
      "path": "5"
    },
    "2946": {
      "fn": "SoulboundRedeemable.payToReceiveToken",
      "offset": [
        6163,
        6235
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "2947": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2949": {
      "fn": "SoulboundRedeemable.payToReceiveToken",
      "offset": [
        6163,
        6235
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x4"
    },
    "2951": {
      "fn": "SoulboundRedeemable.payToReceiveToken",
      "offset": [
        6163,
        6235
      ],
      "op": "DUP3",
      "path": "5"
    },
    "2952": {
      "fn": "SoulboundRedeemable.payToReceiveToken",
      "offset": [
        6163,
        6235
      ],
      "op": "ADD",
      "path": "5"
    },
    "2953": {
      "op": "MSTORE"
    },
    "2954": {
      "op": "PUSH1",
      "value": "0x15"
    },
    "2956": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "2958": {
      "op": "DUP3"
    },
    "2959": {
      "op": "ADD"
    },
    "2960": {
      "op": "MSTORE"
    },
    "2961": {
      "op": "PUSH21",
      "value": "0x2737BA103832B73234B733903932B1B2B4BB32B917"
    },
    "2983": {
      "op": "PUSH1",
      "value": "0x59"
    },
    "2985": {
      "op": "SHL"
    },
    "2986": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "2988": {
      "op": "DUP3"
    },
    "2989": {
      "op": "ADD"
    },
    "2990": {
      "op": "MSTORE"
    },
    "2991": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "2993": {
      "op": "ADD"
    },
    "2994": {
      "fn": "SoulboundRedeemable.payToReceiveToken",
      "offset": [
        6163,
        6235
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x6E4"
    },
    "2997": {
      "op": "JUMP"
    },
    "2998": {
      "fn": "SoulboundRedeemable.payToReceiveToken",
      "offset": [
        6163,
        6235
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "2999": {
      "fn": "IsValidWithDate.isValid",
      "offset": [
        1754,
        1758
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "3001": {
      "fn": "IsValidWithDate.getExpiryDate",
      "offset": [
        1444,
        1468
      ],
      "op": "DUP2",
      "path": "1"
    },
    "3002": {
      "fn": "IsValidWithDate.getExpiryDate",
      "offset": [
        1444,
        1468
      ],
      "op": "DUP2",
      "path": "1"
    },
    "3003": {
      "fn": "IsValidWithDate.getExpiryDate",
      "offset": [
        1444,
        1468
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "3004": {
      "fn": "IsValidWithDate.getExpiryDate",
      "offset": [
        1444,
        1468
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "3006": {
      "fn": "IsValidWithDate.getExpiryDate",
      "offset": [
        1444,
        1468
      ],
      "op": "DUP2",
      "path": "1"
    },
    "3007": {
      "fn": "IsValidWithDate.getExpiryDate",
      "offset": [
        1444,
        1468
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "3008": {
      "fn": "IsValidWithDate.getExpiryDate",
      "offset": [
        1444,
        1468
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "3009": {
      "fn": "IsValidWithDate.getExpiryDate",
      "offset": [
        1444,
        1468
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "3011": {
      "fn": "IsValidWithDate.getExpiryDate",
      "offset": [
        1444,
        1468
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "3012": {
      "fn": "IsValidWithDate.getExpiryDate",
      "offset": [
        1444,
        1468
      ],
      "op": "KECCAK256",
      "path": "1"
    },
    "3013": {
      "fn": "IsValidWithDate.getExpiryDate",
      "offset": [
        1444,
        1468
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "3014": {
      "fn": "IsValidWithDate.isValid",
      "offset": [
        1777,
        1792
      ],
      "op": "TIMESTAMP",
      "path": "1"
    },
    "3015": {
      "fn": "IsValidWithDate.isValid",
      "offset": [
        1777,
        1818
      ],
      "op": "GT",
      "path": "1"
    },
    "3016": {
      "fn": "IsValidWithDate.isValid",
      "offset": [
        1777,
        1818
      ],
      "op": "ISZERO",
      "path": "1"
    },
    "3017": {
      "fn": "SoulboundRedeemable.payToReceiveToken",
      "offset": [
        6310,
        6379
      ],
      "op": "PUSH2",
      "path": "5",
      "statement": 26,
      "value": "0xC25"
    },
    "3020": {
      "fn": "SoulboundRedeemable.payToReceiveToken",
      "offset": [
        6310,
        6379
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "3021": {
      "fn": "SoulboundRedeemable.payToReceiveToken",
      "offset": [
        6310,
        6379
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "3023": {
      "fn": "SoulboundRedeemable.payToReceiveToken",
      "offset": [
        6310,
        6379
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "3024": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "3028": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "3030": {
      "op": "SHL"
    },
    "3031": {
      "fn": "SoulboundRedeemable.payToReceiveToken",
      "offset": [
        6310,
        6379
      ],
      "op": "DUP2",
      "path": "5"
    },
    "3032": {
      "fn": "SoulboundRedeemable.payToReceiveToken",
      "offset": [
        6310,
        6379
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "3033": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3035": {
      "fn": "SoulboundRedeemable.payToReceiveToken",
      "offset": [
        6310,
        6379
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x4"
    },
    "3037": {
      "fn": "SoulboundRedeemable.payToReceiveToken",
      "offset": [
        6310,
        6379
      ],
      "op": "DUP3",
      "path": "5"
    },
    "3038": {
      "fn": "SoulboundRedeemable.payToReceiveToken",
      "offset": [
        6310,
        6379
      ],
      "op": "ADD",
      "path": "5"
    },
    "3039": {
      "op": "MSTORE"
    },
    "3040": {
      "op": "PUSH1",
      "value": "0x28"
    },
    "3042": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "3044": {
      "op": "DUP3"
    },
    "3045": {
      "op": "ADD"
    },
    "3046": {
      "op": "MSTORE"
    },
    "3047": {
      "op": "PUSH32",
      "value": "0x526563656976616C206F66206578706972656420746F6B656E2C207265646565"
    },
    "3080": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "3082": {
      "op": "DUP3"
    },
    "3083": {
      "op": "ADD"
    },
    "3084": {
      "op": "MSTORE"
    },
    "3085": {
      "op": "PUSH8",
      "value": "0x36903A37B5B2B717"
    },
    "3094": {
      "op": "PUSH1",
      "value": "0xC1"
    },
    "3096": {
      "op": "SHL"
    },
    "3097": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "3099": {
      "op": "DUP3"
    },
    "3100": {
      "op": "ADD"
    },
    "3101": {
      "op": "MSTORE"
    },
    "3102": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "3104": {
      "op": "ADD"
    },
    "3105": {
      "fn": "SoulboundRedeemable.payToReceiveToken",
      "offset": [
        6310,
        6379
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x6E4"
    },
    "3108": {
      "op": "JUMP"
    },
    "3109": {
      "fn": "SoulboundRedeemable.payToReceiveToken",
      "offset": [
        6310,
        6379
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "3110": {
      "fn": "SoulboundRedeemable.payToReceiveToken",
      "offset": [
        6487,
        6497
      ],
      "op": "PUSH1",
      "path": "5",
      "statement": 27,
      "value": "0xF"
    },
    "3112": {
      "fn": "SoulboundRedeemable.payToReceiveToken",
      "offset": [
        6487,
        6497
      ],
      "op": "SLOAD",
      "path": "5"
    },
    "3113": {
      "fn": "SoulboundRedeemable.payToReceiveToken",
      "offset": [
        6474,
        6483
      ],
      "op": "CALLVALUE",
      "path": "5"
    },
    "3114": {
      "fn": "SoulboundRedeemable.payToReceiveToken",
      "offset": [
        6474,
        6497
      ],
      "op": "LT",
      "path": "5"
    },
    "3115": {
      "branch": 144,
      "fn": "SoulboundRedeemable.payToReceiveToken",
      "offset": [
        6474,
        6497
      ],
      "op": "ISZERO",
      "path": "5"
    },
    "3116": {
      "fn": "SoulboundRedeemable.payToReceiveToken",
      "offset": [
        6466,
        6530
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0xC77"
    },
    "3119": {
      "branch": 144,
      "fn": "SoulboundRedeemable.payToReceiveToken",
      "offset": [
        6466,
        6530
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "3120": {
      "fn": "SoulboundRedeemable.payToReceiveToken",
      "offset": [
        6466,
        6530
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "3122": {
      "fn": "SoulboundRedeemable.payToReceiveToken",
      "offset": [
        6466,
        6530
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "3123": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "3127": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "3129": {
      "op": "SHL"
    },
    "3130": {
      "fn": "SoulboundRedeemable.payToReceiveToken",
      "offset": [
        6466,
        6530
      ],
      "op": "DUP2",
      "path": "5"
    },
    "3131": {
      "fn": "SoulboundRedeemable.payToReceiveToken",
      "offset": [
        6466,
        6530
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "3132": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3134": {
      "fn": "SoulboundRedeemable.payToReceiveToken",
      "offset": [
        6466,
        6530
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x4"
    },
    "3136": {
      "fn": "SoulboundRedeemable.payToReceiveToken",
      "offset": [
        6466,
        6530
      ],
      "op": "DUP3",
      "path": "5"
    },
    "3137": {
      "fn": "SoulboundRedeemable.payToReceiveToken",
      "offset": [
        6466,
        6530
      ],
      "op": "ADD",
      "path": "5"
    },
    "3138": {
      "op": "MSTORE"
    },
    "3139": {
      "op": "PUSH1",
      "value": "0x1C"
    },
    "3141": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "3143": {
      "op": "DUP3"
    },
    "3144": {
      "op": "ADD"
    },
    "3145": {
      "op": "MSTORE"
    },
    "3146": {
      "op": "PUSH32",
      "value": "0x5072696365206C6F776572207468616E20746F6B656E20636F73742E00000000"
    },
    "3179": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "3181": {
      "op": "DUP3"
    },
    "3182": {
      "op": "ADD"
    },
    "3183": {
      "op": "MSTORE"
    },
    "3184": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "3186": {
      "op": "ADD"
    },
    "3187": {
      "fn": "SoulboundRedeemable.payToReceiveToken",
      "offset": [
        6466,
        6530
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x6E4"
    },
    "3190": {
      "op": "JUMP"
    },
    "3191": {
      "fn": "SoulboundRedeemable.payToReceiveToken",
      "offset": [
        6466,
        6530
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "3192": {
      "fn": "SoulboundRedeemable.payToReceiveToken",
      "offset": [
        6577,
        6592
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "3194": {
      "fn": "SoulboundRedeemable.payToReceiveToken",
      "offset": [
        6702,
        6712
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0xF"
    },
    "3196": {
      "fn": "SoulboundRedeemable.payToReceiveToken",
      "offset": [
        6702,
        6712
      ],
      "op": "SLOAD",
      "path": "5"
    },
    "3197": {
      "fn": "SoulboundRedeemable.payToReceiveToken",
      "offset": [
        6690,
        6699
      ],
      "op": "CALLVALUE",
      "path": "5"
    },
    "3198": {
      "branch": 145,
      "fn": "SoulboundRedeemable.payToReceiveToken",
      "offset": [
        6690,
        6712
      ],
      "op": "GT",
      "path": "5"
    },
    "3199": {
      "fn": "SoulboundRedeemable.payToReceiveToken",
      "offset": [
        6686,
        6938
      ],
      "op": "ISZERO",
      "path": "5"
    },
    "3200": {
      "fn": "SoulboundRedeemable.payToReceiveToken",
      "offset": [
        6686,
        6938
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0xCCB"
    },
    "3203": {
      "branch": 145,
      "fn": "SoulboundRedeemable.payToReceiveToken",
      "offset": [
        6686,
        6938
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "3204": {
      "fn": "SoulboundRedeemable.payToReceiveToken",
      "offset": [
        6813,
        6823
      ],
      "op": "PUSH1",
      "path": "5",
      "statement": 28,
      "value": "0xF"
    },
    "3206": {
      "fn": "SoulboundRedeemable.payToReceiveToken",
      "offset": [
        6813,
        6823
      ],
      "op": "SLOAD",
      "path": "5"
    },
    "3207": {
      "fn": "SoulboundRedeemable.payToReceiveToken",
      "offset": [
        6801,
        6823
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0xC90"
    },
    "3210": {
      "fn": "SoulboundRedeemable.payToReceiveToken",
      "offset": [
        6801,
        6823
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "3211": {
      "fn": "SoulboundRedeemable.payToReceiveToken",
      "offset": [
        6801,
        6810
      ],
      "op": "CALLVALUE",
      "path": "5"
    },
    "3212": {
      "fn": "SoulboundRedeemable.payToReceiveToken",
      "offset": [
        6801,
        6823
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x2AE8"
    },
    "3215": {
      "fn": "SoulboundRedeemable.payToReceiveToken",
      "jump": "i",
      "offset": [
        6801,
        6823
      ],
      "op": "JUMP",
      "path": "5"
    },
    "3216": {
      "fn": "SoulboundRedeemable.payToReceiveToken",
      "offset": [
        6801,
        6823
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "3217": {
      "fn": "SoulboundRedeemable.payToReceiveToken",
      "offset": [
        6891,
        6927
      ],
      "op": "PUSH1",
      "path": "5",
      "statement": 29,
      "value": "0x40"
    },
    "3219": {
      "fn": "SoulboundRedeemable.payToReceiveToken",
      "offset": [
        6891,
        6927
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "3220": {
      "fn": "SoulboundRedeemable.payToReceiveToken",
      "offset": [
        6791,
        6823
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "3221": {
      "fn": "SoulboundRedeemable.payToReceiveToken",
      "offset": [
        6791,
        6823
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "3222": {
      "op": "POP"
    },
    "3223": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3225": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3227": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3229": {
      "op": "SHL"
    },
    "3230": {
      "op": "SUB"
    },
    "3231": {
      "fn": "SoulboundRedeemable.payToReceiveToken",
      "offset": [
        6891,
        6918
      ],
      "op": "DUP5",
      "path": "5"
    },
    "3232": {
      "fn": "SoulboundRedeemable.payToReceiveToken",
      "offset": [
        6891,
        6918
      ],
      "op": "AND",
      "path": "5"
    },
    "3233": {
      "fn": "SoulboundRedeemable.payToReceiveToken",
      "offset": [
        6891,
        6918
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "3234": {
      "fn": "SoulboundRedeemable.payToReceiveToken",
      "offset": [
        6891,
        6927
      ],
      "op": "DUP3",
      "path": "5"
    },
    "3235": {
      "fn": "SoulboundRedeemable.payToReceiveToken",
      "offset": [
        6891,
        6927
      ],
      "op": "ISZERO",
      "path": "5"
    },
    "3236": {
      "fn": "SoulboundRedeemable.payToReceiveToken",
      "offset": [
        6891,
        6927
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x8FC"
    },
    "3239": {
      "fn": "SoulboundRedeemable.payToReceiveToken",
      "offset": [
        6891,
        6927
      ],
      "op": "MUL",
      "path": "5"
    },
    "3240": {
      "fn": "SoulboundRedeemable.payToReceiveToken",
      "offset": [
        6891,
        6927
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "3241": {
      "fn": "SoulboundRedeemable.payToReceiveToken",
      "offset": [
        6791,
        6823
      ],
      "op": "DUP4",
      "path": "5"
    },
    "3242": {
      "fn": "SoulboundRedeemable.payToReceiveToken",
      "offset": [
        6791,
        6823
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "3243": {
      "fn": "SoulboundRedeemable.payToReceiveToken",
      "offset": [
        6891,
        6927
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "3245": {
      "fn": "SoulboundRedeemable.payToReceiveToken",
      "offset": [
        6891,
        6927
      ],
      "op": "DUP2",
      "path": "5"
    },
    "3246": {
      "fn": "SoulboundRedeemable.payToReceiveToken",
      "offset": [
        6891,
        6927
      ],
      "op": "DUP2",
      "path": "5"
    },
    "3247": {
      "fn": "SoulboundRedeemable.payToReceiveToken",
      "offset": [
        6891,
        6927
      ],
      "op": "DUP2",
      "path": "5"
    },
    "3248": {
      "fn": "SoulboundRedeemable.payToReceiveToken",
      "offset": [
        6791,
        6823
      ],
      "op": "DUP6",
      "path": "5"
    },
    "3249": {
      "fn": "SoulboundRedeemable.payToReceiveToken",
      "offset": [
        6891,
        6918
      ],
      "op": "DUP9",
      "path": "5"
    },
    "3250": {
      "fn": "SoulboundRedeemable.payToReceiveToken",
      "offset": [
        6891,
        6927
      ],
      "op": "DUP9",
      "path": "5"
    },
    "3251": {
      "fn": "SoulboundRedeemable.payToReceiveToken",
      "offset": [
        6891,
        6927
      ],
      "op": "CALL",
      "path": "5"
    },
    "3252": {
      "fn": "SoulboundRedeemable.payToReceiveToken",
      "offset": [
        6891,
        6927
      ],
      "op": "SWAP4",
      "path": "5"
    },
    "3253": {
      "fn": "SoulboundRedeemable.payToReceiveToken",
      "offset": [
        6891,
        6927
      ],
      "op": "POP",
      "path": "5"
    },
    "3254": {
      "fn": "SoulboundRedeemable.payToReceiveToken",
      "offset": [
        6891,
        6927
      ],
      "op": "POP",
      "path": "5"
    },
    "3255": {
      "fn": "SoulboundRedeemable.payToReceiveToken",
      "offset": [
        6891,
        6927
      ],
      "op": "POP",
      "path": "5"
    },
    "3256": {
      "fn": "SoulboundRedeemable.payToReceiveToken",
      "offset": [
        6891,
        6927
      ],
      "op": "POP",
      "path": "5"
    },
    "3257": {
      "fn": "SoulboundRedeemable.payToReceiveToken",
      "offset": [
        6891,
        6927
      ],
      "op": "ISZERO",
      "path": "5"
    },
    "3258": {
      "fn": "SoulboundRedeemable.payToReceiveToken",
      "offset": [
        6891,
        6927
      ],
      "op": "DUP1",
      "path": "5"
    },
    "3259": {
      "fn": "SoulboundRedeemable.payToReceiveToken",
      "offset": [
        6891,
        6927
      ],
      "op": "ISZERO",
      "path": "5"
    },
    "3260": {
      "fn": "SoulboundRedeemable.payToReceiveToken",
      "offset": [
        6891,
        6927
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0xCC9"
    },
    "3263": {
      "fn": "SoulboundRedeemable.payToReceiveToken",
      "offset": [
        6891,
        6927
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "3264": {
      "fn": "SoulboundRedeemable.payToReceiveToken",
      "offset": [
        6891,
        6927
      ],
      "op": "RETURNDATASIZE",
      "path": "5"
    },
    "3265": {
      "fn": "SoulboundRedeemable.payToReceiveToken",
      "offset": [
        6891,
        6927
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "3267": {
      "fn": "SoulboundRedeemable.payToReceiveToken",
      "offset": [
        6891,
        6927
      ],
      "op": "DUP1",
      "path": "5"
    },
    "3268": {
      "fn": "SoulboundRedeemable.payToReceiveToken",
      "offset": [
        6891,
        6927
      ],
      "op": "RETURNDATACOPY",
      "path": "5"
    },
    "3269": {
      "fn": "SoulboundRedeemable.payToReceiveToken",
      "offset": [
        6891,
        6927
      ],
      "op": "RETURNDATASIZE",
      "path": "5"
    },
    "3270": {
      "fn": "SoulboundRedeemable.payToReceiveToken",
      "offset": [
        6891,
        6927
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "3272": {
      "fn": "SoulboundRedeemable.payToReceiveToken",
      "offset": [
        6891,
        6927
      ],
      "op": "REVERT",
      "path": "5"
    },
    "3273": {
      "fn": "SoulboundRedeemable.payToReceiveToken",
      "offset": [
        6891,
        6927
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "3274": {
      "fn": "SoulboundRedeemable.payToReceiveToken",
      "offset": [
        6891,
        6927
      ],
      "op": "POP",
      "path": "5"
    },
    "3275": {
      "fn": "SoulboundRedeemable.payToReceiveToken",
      "offset": [
        6686,
        6938
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "3276": {
      "fn": "SoulboundRedeemable.payToReceiveToken",
      "offset": [
        6984,
        7007
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "3278": {
      "fn": "SoulboundRedeemable.payToReceiveToken",
      "offset": [
        7010,
        7035
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0xCD6"
    },
    "3281": {
      "fn": "SoulboundRedeemable.payToReceiveToken",
      "offset": [
        7027,
        7034
      ],
      "op": "DUP4",
      "path": "5"
    },
    "3282": {
      "fn": "SoulboundRedeemable.payToReceiveToken",
      "offset": [
        7010,
        7026
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x9DA"
    },
    "3285": {
      "fn": "SoulboundRedeemable.payToReceiveToken",
      "jump": "i",
      "offset": [
        7010,
        7035
      ],
      "op": "JUMP",
      "path": "5"
    },
    "3286": {
      "fn": "SoulboundRedeemable.payToReceiveToken",
      "offset": [
        7010,
        7035
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "3287": {
      "fn": "SoulboundRedeemable.payToReceiveToken",
      "offset": [
        6984,
        7035
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "3288": {
      "fn": "SoulboundRedeemable.payToReceiveToken",
      "offset": [
        6984,
        7035
      ],
      "op": "POP",
      "path": "5"
    },
    "3289": {
      "fn": "SoulboundRedeemable.payToReceiveToken",
      "offset": [
        7106,
        7188
      ],
      "op": "PUSH2",
      "path": "5",
      "statement": 30,
      "value": "0xCE3"
    },
    "3292": {
      "fn": "SoulboundRedeemable.payToReceiveToken",
      "offset": [
        7125,
        7134
      ],
      "op": "DUP5",
      "path": "5"
    },
    "3293": {
      "fn": "SoulboundRedeemable.payToReceiveToken",
      "offset": [
        7148,
        7155
      ],
      "op": "DUP5",
      "path": "5"
    },
    "3294": {
      "fn": "SoulboundRedeemable.payToReceiveToken",
      "offset": [
        7169,
        7178
      ],
      "op": "DUP4",
      "path": "5"
    },
    "3295": {
      "fn": "SoulboundRedeemable.payToReceiveToken",
      "offset": [
        7106,
        7111
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x1FEF"
    },
    "3298": {
      "fn": "SoulboundRedeemable.payToReceiveToken",
      "jump": "i",
      "offset": [
        7106,
        7188
      ],
      "op": "JUMP",
      "path": "5"
    },
    "3299": {
      "fn": "SoulboundRedeemable.payToReceiveToken",
      "offset": [
        7106,
        7188
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "3300": {
      "op": "POP"
    },
    "3301": {
      "fn": "SoulboundRedeemable.payToReceiveToken",
      "offset": [
        7237,
        7247
      ],
      "op": "PUSH1",
      "path": "5",
      "statement": 31,
      "value": "0xC"
    },
    "3303": {
      "fn": "SoulboundRedeemable.payToReceiveToken",
      "offset": [
        7237,
        7249
      ],
      "op": "DUP1",
      "path": "5"
    },
    "3304": {
      "fn": "SoulboundRedeemable.payToReceiveToken",
      "offset": [
        7237,
        7249
      ],
      "op": "SLOAD",
      "path": "5"
    },
    "3305": {
      "fn": "SoulboundRedeemable.payToReceiveToken",
      "offset": [
        7237,
        7249
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "3306": {
      "fn": "SoulboundRedeemable.payToReceiveToken",
      "offset": [
        7237,
        7247
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "3308": {
      "fn": "SoulboundRedeemable.payToReceiveToken",
      "offset": [
        7237,
        7249
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0xCF4"
    },
    "3311": {
      "fn": "SoulboundRedeemable.payToReceiveToken",
      "offset": [
        7237,
        7249
      ],
      "op": "DUP4",
      "path": "5"
    },
    "3312": {
      "fn": "SoulboundRedeemable.payToReceiveToken",
      "offset": [
        7237,
        7249
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x2AFF"
    },
    "3315": {
      "fn": "SoulboundRedeemable.payToReceiveToken",
      "jump": "i",
      "offset": [
        7237,
        7249
      ],
      "op": "JUMP",
      "path": "5"
    },
    "3316": {
      "fn": "SoulboundRedeemable.payToReceiveToken",
      "offset": [
        7237,
        7249
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "3317": {
      "fn": "SoulboundRedeemable.payToReceiveToken",
      "offset": [
        7237,
        7249
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "3318": {
      "fn": "SoulboundRedeemable.payToReceiveToken",
      "offset": [
        7237,
        7249
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "3319": {
      "fn": "SoulboundRedeemable.payToReceiveToken",
      "offset": [
        7237,
        7249
      ],
      "op": "POP",
      "path": "5"
    },
    "3320": {
      "fn": "SoulboundRedeemable.payToReceiveToken",
      "offset": [
        7237,
        7249
      ],
      "op": "SSTORE",
      "path": "5"
    },
    "3321": {
      "fn": "SoulboundRedeemable.payToReceiveToken",
      "offset": [
        7237,
        7249
      ],
      "op": "POP",
      "path": "5"
    },
    "3322": {
      "fn": "SoulboundRedeemable.payToReceiveToken",
      "offset": [
        7318,
        7328
      ],
      "op": "PUSH1",
      "path": "5",
      "statement": 32,
      "value": "0xF"
    },
    "3324": {
      "fn": "SoulboundRedeemable.payToReceiveToken",
      "offset": [
        7318,
        7328
      ],
      "op": "SLOAD",
      "path": "5"
    },
    "3325": {
      "fn": "SoulboundRedeemable.payToReceiveToken",
      "offset": [
        7302,
        7314
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0xD"
    },
    "3327": {
      "fn": "SoulboundRedeemable.payToReceiveToken",
      "offset": [
        7302,
        7314
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "3329": {
      "fn": "SoulboundRedeemable.payToReceiveToken",
      "offset": [
        7302,
        7328
      ],
      "op": "DUP3",
      "path": "5"
    },
    "3330": {
      "fn": "SoulboundRedeemable.payToReceiveToken",
      "offset": [
        7302,
        7328
      ],
      "op": "DUP3",
      "path": "5"
    },
    "3331": {
      "fn": "SoulboundRedeemable.payToReceiveToken",
      "offset": [
        7302,
        7328
      ],
      "op": "SLOAD",
      "path": "5"
    },
    "3332": {
      "fn": "SoulboundRedeemable.payToReceiveToken",
      "offset": [
        7302,
        7328
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0xD0D"
    },
    "3335": {
      "fn": "SoulboundRedeemable.payToReceiveToken",
      "offset": [
        7302,
        7328
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "3336": {
      "fn": "SoulboundRedeemable.payToReceiveToken",
      "offset": [
        7302,
        7328
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "3337": {
      "fn": "SoulboundRedeemable.payToReceiveToken",
      "offset": [
        7302,
        7328
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x2B18"
    },
    "3340": {
      "fn": "SoulboundRedeemable.payToReceiveToken",
      "jump": "i",
      "offset": [
        7302,
        7328
      ],
      "op": "JUMP",
      "path": "5"
    },
    "3341": {
      "fn": "SoulboundRedeemable.payToReceiveToken",
      "offset": [
        7302,
        7328
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "3342": {
      "fn": "SoulboundRedeemable.payToReceiveToken",
      "offset": [
        7302,
        7328
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "3343": {
      "fn": "SoulboundRedeemable.payToReceiveToken",
      "offset": [
        7302,
        7328
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "3344": {
      "fn": "SoulboundRedeemable.payToReceiveToken",
      "offset": [
        7302,
        7328
      ],
      "op": "SSTORE",
      "path": "5"
    },
    "3345": {
      "op": "POP"
    },
    "3346": {
      "op": "POP"
    },
    "3347": {
      "op": "POP"
    },
    "3348": {
      "fn": "SoulboundRedeemable.payToReceiveToken",
      "offset": [
        7406,
        7411
      ],
      "op": "PUSH1",
      "path": "5",
      "statement": 33,
      "value": "0x0"
    },
    "3350": {
      "fn": "SoulboundRedeemable.payToReceiveToken",
      "offset": [
        7387,
        7403
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "3351": {
      "fn": "SoulboundRedeemable.payToReceiveToken",
      "offset": [
        7387,
        7403
      ],
      "op": "DUP3",
      "path": "5"
    },
    "3352": {
      "fn": "SoulboundRedeemable.payToReceiveToken",
      "offset": [
        7387,
        7403
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "3353": {
      "op": "POP"
    },
    "3354": {
      "fn": "SoulboundRedeemable.payToReceiveToken",
      "offset": [
        7387,
        7394
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x10"
    },
    "3356": {
      "fn": "SoulboundRedeemable.payToReceiveToken",
      "offset": [
        7387,
        7403
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "3358": {
      "fn": "SoulboundRedeemable.payToReceiveToken",
      "offset": [
        7387,
        7403
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "3359": {
      "fn": "SoulboundRedeemable.payToReceiveToken",
      "offset": [
        7387,
        7403
      ],
      "op": "DUP2",
      "path": "5"
    },
    "3360": {
      "fn": "SoulboundRedeemable.payToReceiveToken",
      "offset": [
        7387,
        7403
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "3361": {
      "fn": "SoulboundRedeemable.payToReceiveToken",
      "offset": [
        7387,
        7403
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "3363": {
      "fn": "SoulboundRedeemable.payToReceiveToken",
      "offset": [
        7387,
        7403
      ],
      "op": "DUP1",
      "path": "5"
    },
    "3364": {
      "fn": "SoulboundRedeemable.payToReceiveToken",
      "offset": [
        7387,
        7403
      ],
      "op": "DUP4",
      "path": "5"
    },
    "3365": {
      "fn": "SoulboundRedeemable.payToReceiveToken",
      "offset": [
        7387,
        7403
      ],
      "op": "KECCAK256",
      "path": "5"
    },
    "3366": {
      "fn": "SoulboundRedeemable.payToReceiveToken",
      "offset": [
        7387,
        7411
      ],
      "op": "DUP1",
      "path": "5"
    },
    "3367": {
      "fn": "SoulboundRedeemable.payToReceiveToken",
      "offset": [
        7387,
        7411
      ],
      "op": "SLOAD",
      "path": "5"
    },
    "3368": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "3370": {
      "op": "NOT"
    },
    "3371": {
      "fn": "SoulboundRedeemable.payToReceiveToken",
      "offset": [
        7387,
        7411
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "3372": {
      "fn": "SoulboundRedeemable.payToReceiveToken",
      "offset": [
        7387,
        7411
      ],
      "op": "DUP2",
      "path": "5"
    },
    "3373": {
      "fn": "SoulboundRedeemable.payToReceiveToken",
      "offset": [
        7387,
        7411
      ],
      "op": "AND",
      "path": "5"
    },
    "3374": {
      "fn": "SoulboundRedeemable.payToReceiveToken",
      "offset": [
        7387,
        7411
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "3375": {
      "fn": "SoulboundRedeemable.payToReceiveToken",
      "offset": [
        7387,
        7411
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "3376": {
      "fn": "SoulboundRedeemable.payToReceiveToken",
      "offset": [
        7387,
        7411
      ],
      "op": "SSTORE",
      "path": "5"
    },
    "3377": {
      "fn": "SoulboundRedeemable.payToReceiveToken",
      "offset": [
        7474,
        7490
      ],
      "op": "PUSH1",
      "path": "5",
      "statement": 34,
      "value": "0x11"
    },
    "3379": {
      "fn": "SoulboundRedeemable.payToReceiveToken",
      "offset": [
        7474,
        7499
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "3380": {
      "fn": "SoulboundRedeemable.payToReceiveToken",
      "offset": [
        7474,
        7499
      ],
      "op": "SWAP3",
      "path": "5"
    },
    "3381": {
      "fn": "SoulboundRedeemable.payToReceiveToken",
      "offset": [
        7474,
        7499
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "3382": {
      "fn": "SoulboundRedeemable.payToReceiveToken",
      "offset": [
        7474,
        7499
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "3383": {
      "fn": "SoulboundRedeemable.payToReceiveToken",
      "offset": [
        7474,
        7499
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "3384": {
      "fn": "SoulboundRedeemable.payToReceiveToken",
      "offset": [
        7474,
        7499
      ],
      "op": "KECCAK256",
      "path": "5"
    },
    "3385": {
      "fn": "SoulboundRedeemable.payToReceiveToken",
      "offset": [
        7467,
        7499
      ],
      "op": "DUP1",
      "path": "5"
    },
    "3386": {
      "fn": "SoulboundRedeemable.payToReceiveToken",
      "offset": [
        7467,
        7499
      ],
      "op": "SLOAD",
      "path": "5"
    },
    "3387": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3389": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3391": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3393": {
      "op": "SHL"
    },
    "3394": {
      "op": "SUB"
    },
    "3395": {
      "op": "NOT"
    },
    "3396": {
      "fn": "SoulboundRedeemable.payToReceiveToken",
      "offset": [
        7467,
        7499
      ],
      "op": "AND",
      "path": "5"
    },
    "3397": {
      "fn": "SoulboundRedeemable.payToReceiveToken",
      "offset": [
        7467,
        7499
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "3398": {
      "fn": "SoulboundRedeemable.payToReceiveToken",
      "offset": [
        7467,
        7499
      ],
      "op": "SSTORE",
      "path": "5"
    },
    "3399": {
      "offset": [
        2245,
        2251
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x13"
    },
    "3401": {
      "offset": [
        2245,
        2259
      ],
      "op": "DUP1",
      "path": "5"
    },
    "3402": {
      "fn": "SoulboundRedeemable.payToReceiveToken",
      "offset": [
        2245,
        2259
      ],
      "op": "SLOAD",
      "path": "5"
    },
    "3403": {
      "fn": "SoulboundRedeemable.payToReceiveToken",
      "offset": [
        2245,
        2259
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "3404": {
      "fn": "SoulboundRedeemable.payToReceiveToken",
      "offset": [
        2245,
        2259
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "3405": {
      "fn": "SoulboundRedeemable.payToReceiveToken",
      "offset": [
        2245,
        2259
      ],
      "op": "AND",
      "path": "5"
    },
    "3406": {
      "fn": "SoulboundRedeemable.payToReceiveToken",
      "offset": [
        2245,
        2259
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "3407": {
      "fn": "SoulboundRedeemable.payToReceiveToken",
      "offset": [
        2245,
        2259
      ],
      "op": "SSTORE",
      "path": "5"
    },
    "3408": {
      "op": "POP"
    },
    "3409": {
      "fn": "SoulboundRedeemable.payToReceiveToken",
      "jump": "o",
      "offset": [
        5534,
        7506
      ],
      "op": "JUMP",
      "path": "5"
    },
    "3410": {
      "fn": "SoulboundRedeemable.redeemMintedToken",
      "offset": [
        10045,
        11547
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "3411": {
      "offset": [
        1401,
        1414
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xD5A"
    },
    "3414": {
      "offset": [
        1401,
        1412
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1DA7"
    },
    "3417": {
      "jump": "i",
      "offset": [
        1401,
        1414
      ],
      "op": "JUMP",
      "path": "2"
    },
    "3418": {
      "fn": "SoulboundRedeemable.redeemMintedToken",
      "offset": [
        1401,
        1414
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "3419": {
      "offset": [
        2194,
        2200
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x13"
    },
    "3421": {
      "fn": "SoulboundRedeemable.redeemMintedToken",
      "offset": [
        2194,
        2200
      ],
      "op": "SLOAD",
      "path": "5"
    },
    "3422": {
      "fn": "SoulboundRedeemable.redeemMintedToken",
      "offset": [
        2194,
        2200
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0xFF"
    },
    "3424": {
      "fn": "SoulboundRedeemable.redeemMintedToken",
      "offset": [
        2194,
        2200
      ],
      "op": "AND",
      "path": "5"
    },
    "3425": {
      "offset": [
        2193,
        2200
      ],
      "op": "ISZERO",
      "path": "5"
    },
    "3426": {
      "offset": [
        2185,
        2201
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0xD6A"
    },
    "3429": {
      "offset": [
        2185,
        2201
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "3430": {
      "fn": "SoulboundRedeemable.redeemMintedToken",
      "offset": [
        2185,
        2201
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "3432": {
      "fn": "SoulboundRedeemable.redeemMintedToken",
      "offset": [
        2185,
        2201
      ],
      "op": "DUP1",
      "path": "5"
    },
    "3433": {
      "fn": "SoulboundRedeemable.redeemMintedToken",
      "offset": [
        2185,
        2201
      ],
      "op": "REVERT",
      "path": "5"
    },
    "3434": {
      "fn": "SoulboundRedeemable.redeemMintedToken",
      "offset": [
        2185,
        2201
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "3435": {
      "offset": [
        2211,
        2217
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x13"
    },
    "3437": {
      "offset": [
        2211,
        2224
      ],
      "op": "DUP1",
      "path": "5"
    },
    "3438": {
      "fn": "SoulboundRedeemable.redeemMintedToken",
      "offset": [
        2211,
        2224
      ],
      "op": "SLOAD",
      "path": "5"
    },
    "3439": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "3441": {
      "op": "NOT"
    },
    "3442": {
      "offset": [
        2211,
        2224
      ],
      "op": "AND",
      "path": "5"
    },
    "3443": {
      "offset": [
        2220,
        2224
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x1"
    },
    "3445": {
      "offset": [
        2211,
        2224
      ],
      "op": "OR",
      "path": "5"
    },
    "3446": {
      "fn": "SoulboundRedeemable.redeemMintedToken",
      "offset": [
        2211,
        2224
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "3447": {
      "fn": "SoulboundRedeemable.redeemMintedToken",
      "offset": [
        2211,
        2224
      ],
      "op": "SSTORE",
      "path": "5"
    },
    "3448": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3450": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3452": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3454": {
      "op": "SHL"
    },
    "3455": {
      "op": "SUB"
    },
    "3456": {
      "fn": "SoulboundRedeemable.redeemMintedToken",
      "offset": [
        10300,
        10323
      ],
      "op": "DUP4",
      "path": "5",
      "statement": 35
    },
    "3457": {
      "branch": 146,
      "fn": "SoulboundRedeemable.redeemMintedToken",
      "offset": [
        10300,
        10323
      ],
      "op": "AND",
      "path": "5"
    },
    "3458": {
      "fn": "SoulboundRedeemable.redeemMintedToken",
      "offset": [
        10292,
        10355
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0xDCD"
    },
    "3461": {
      "branch": 146,
      "fn": "SoulboundRedeemable.redeemMintedToken",
      "offset": [
        10292,
        10355
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "3462": {
      "fn": "SoulboundRedeemable.redeemMintedToken",
      "offset": [
        10292,
        10355
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "3464": {
      "fn": "SoulboundRedeemable.redeemMintedToken",
      "offset": [
        10292,
        10355
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "3465": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "3469": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "3471": {
      "op": "SHL"
    },
    "3472": {
      "fn": "SoulboundRedeemable.redeemMintedToken",
      "offset": [
        10292,
        10355
      ],
      "op": "DUP2",
      "path": "5"
    },
    "3473": {
      "fn": "SoulboundRedeemable.redeemMintedToken",
      "offset": [
        10292,
        10355
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "3474": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3476": {
      "fn": "SoulboundRedeemable.redeemMintedToken",
      "offset": [
        10292,
        10355
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x4"
    },
    "3478": {
      "fn": "SoulboundRedeemable.redeemMintedToken",
      "offset": [
        10292,
        10355
      ],
      "op": "DUP3",
      "path": "5"
    },
    "3479": {
      "fn": "SoulboundRedeemable.redeemMintedToken",
      "offset": [
        10292,
        10355
      ],
      "op": "ADD",
      "path": "5"
    },
    "3480": {
      "op": "MSTORE"
    },
    "3481": {
      "op": "PUSH1",
      "value": "0x1B"
    },
    "3483": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "3485": {
      "op": "DUP3"
    },
    "3486": {
      "op": "ADD"
    },
    "3487": {
      "op": "MSTORE"
    },
    "3488": {
      "op": "PUSH32",
      "value": "0x526564656D7074696F6E20746F207A65726F20616464726573732E0000000000"
    },
    "3521": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "3523": {
      "op": "DUP3"
    },
    "3524": {
      "op": "ADD"
    },
    "3525": {
      "op": "MSTORE"
    },
    "3526": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "3528": {
      "op": "ADD"
    },
    "3529": {
      "fn": "SoulboundRedeemable.redeemMintedToken",
      "offset": [
        10292,
        10355
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x6E4"
    },
    "3532": {
      "op": "JUMP"
    },
    "3533": {
      "fn": "SoulboundRedeemable.redeemMintedToken",
      "offset": [
        10292,
        10355
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "3534": {
      "fn": "SoulboundRedeemable.redeemMintedToken",
      "offset": [
        10419,
        10435
      ],
      "op": "PUSH2",
      "path": "5",
      "statement": 36,
      "value": "0xDD6"
    },
    "3537": {
      "fn": "SoulboundRedeemable.redeemMintedToken",
      "offset": [
        10427,
        10434
      ],
      "op": "DUP3",
      "path": "5"
    },
    "3538": {
      "fn": "SoulboundRedeemable.redeemMintedToken",
      "offset": [
        10419,
        10426
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x1E01"
    },
    "3541": {
      "fn": "SoulboundRedeemable.redeemMintedToken",
      "jump": "i",
      "offset": [
        10419,
        10435
      ],
      "op": "JUMP",
      "path": "5"
    },
    "3542": {
      "branch": 147,
      "fn": "SoulboundRedeemable.redeemMintedToken",
      "offset": [
        10419,
        10435
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "3543": {
      "fn": "SoulboundRedeemable.redeemMintedToken",
      "offset": [
        10411,
        10473
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0xE2C"
    },
    "3546": {
      "branch": 147,
      "fn": "SoulboundRedeemable.redeemMintedToken",
      "offset": [
        10411,
        10473
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "3547": {
      "fn": "SoulboundRedeemable.redeemMintedToken",
      "offset": [
        10411,
        10473
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "3549": {
      "fn": "SoulboundRedeemable.redeemMintedToken",
      "offset": [
        10411,
        10473
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "3550": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "3554": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "3556": {
      "op": "SHL"
    },
    "3557": {
      "fn": "SoulboundRedeemable.redeemMintedToken",
      "offset": [
        10411,
        10473
      ],
      "op": "DUP2",
      "path": "5"
    },
    "3558": {
      "fn": "SoulboundRedeemable.redeemMintedToken",
      "offset": [
        10411,
        10473
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "3559": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3561": {
      "fn": "SoulboundRedeemable.redeemMintedToken",
      "offset": [
        10411,
        10473
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x4"
    },
    "3563": {
      "fn": "SoulboundRedeemable.redeemMintedToken",
      "offset": [
        10411,
        10473
      ],
      "op": "DUP3",
      "path": "5"
    },
    "3564": {
      "fn": "SoulboundRedeemable.redeemMintedToken",
      "offset": [
        10411,
        10473
      ],
      "op": "ADD",
      "path": "5"
    },
    "3565": {
      "op": "MSTORE"
    },
    "3566": {
      "op": "PUSH1",
      "value": "0x21"
    },
    "3568": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "3570": {
      "op": "DUP3"
    },
    "3571": {
      "op": "ADD"
    },
    "3572": {
      "op": "MSTORE"
    },
    "3573": {
      "op": "PUSH32",
      "value": "0x526564656D7074696F6E206F66206E6F6E2D6578697374696E6720746F6B656E"
    },
    "3606": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "3608": {
      "op": "DUP3"
    },
    "3609": {
      "op": "ADD"
    },
    "3610": {
      "op": "MSTORE"
    },
    "3611": {
      "op": "PUSH1",
      "value": "0x17"
    },
    "3613": {
      "op": "PUSH1",
      "value": "0xF9"
    },
    "3615": {
      "op": "SHL"
    },
    "3616": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "3618": {
      "op": "DUP3"
    },
    "3619": {
      "op": "ADD"
    },
    "3620": {
      "op": "MSTORE"
    },
    "3621": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "3623": {
      "op": "ADD"
    },
    "3624": {
      "fn": "SoulboundRedeemable.redeemMintedToken",
      "offset": [
        10411,
        10473
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x6E4"
    },
    "3627": {
      "op": "JUMP"
    },
    "3628": {
      "fn": "SoulboundRedeemable.redeemMintedToken",
      "offset": [
        10411,
        10473
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "3629": {
      "fn": "SoulboundRedeemable.redeemMintedToken",
      "offset": [
        10550,
        10566
      ],
      "op": "PUSH1",
      "path": "5",
      "statement": 37,
      "value": "0x0"
    },
    "3631": {
      "fn": "SoulboundRedeemable.redeemMintedToken",
      "offset": [
        10550,
        10566
      ],
      "op": "DUP3",
      "path": "5"
    },
    "3632": {
      "fn": "SoulboundRedeemable.redeemMintedToken",
      "offset": [
        10550,
        10566
      ],
      "op": "DUP2",
      "path": "5"
    },
    "3633": {
      "fn": "SoulboundRedeemable.redeemMintedToken",
      "offset": [
        10550,
        10566
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "3634": {
      "fn": "SoulboundRedeemable.redeemMintedToken",
      "offset": [
        10550,
        10557
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x10"
    },
    "3636": {
      "fn": "SoulboundRedeemable.redeemMintedToken",
      "offset": [
        10550,
        10566
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "3638": {
      "fn": "SoulboundRedeemable.redeemMintedToken",
      "offset": [
        10550,
        10566
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "3639": {
      "fn": "SoulboundRedeemable.redeemMintedToken",
      "offset": [
        10550,
        10566
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "3641": {
      "fn": "SoulboundRedeemable.redeemMintedToken",
      "offset": [
        10550,
        10566
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "3642": {
      "fn": "SoulboundRedeemable.redeemMintedToken",
      "offset": [
        10550,
        10566
      ],
      "op": "KECCAK256",
      "path": "5"
    },
    "3643": {
      "fn": "SoulboundRedeemable.redeemMintedToken",
      "offset": [
        10550,
        10566
      ],
      "op": "SLOAD",
      "path": "5"
    },
    "3644": {
      "fn": "SoulboundRedeemable.redeemMintedToken",
      "offset": [
        10550,
        10566
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0xFF"
    },
    "3646": {
      "fn": "SoulboundRedeemable.redeemMintedToken",
      "offset": [
        10550,
        10566
      ],
      "op": "AND",
      "path": "5"
    },
    "3647": {
      "branch": 148,
      "fn": "SoulboundRedeemable.redeemMintedToken",
      "offset": [
        10549,
        10566
      ],
      "op": "ISZERO",
      "path": "5"
    },
    "3648": {
      "fn": "SoulboundRedeemable.redeemMintedToken",
      "offset": [
        10541,
        10591
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0xE82"
    },
    "3651": {
      "branch": 148,
      "fn": "SoulboundRedeemable.redeemMintedToken",
      "offset": [
        10541,
        10591
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "3652": {
      "fn": "SoulboundRedeemable.redeemMintedToken",
      "offset": [
        10541,
        10591
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "3654": {
      "fn": "SoulboundRedeemable.redeemMintedToken",
      "offset": [
        10541,
        10591
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "3655": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "3659": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "3661": {
      "op": "SHL"
    },
    "3662": {
      "fn": "SoulboundRedeemable.redeemMintedToken",
      "offset": [
        10541,
        10591
      ],
      "op": "DUP2",
      "path": "5"
    },
    "3663": {
      "fn": "SoulboundRedeemable.redeemMintedToken",
      "offset": [
        10541,
        10591
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "3664": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3666": {
      "fn": "SoulboundRedeemable.redeemMintedToken",
      "offset": [
        10541,
        10591
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x4"
    },
    "3668": {
      "fn": "SoulboundRedeemable.redeemMintedToken",
      "offset": [
        10541,
        10591
      ],
      "op": "DUP3",
      "path": "5"
    },
    "3669": {
      "fn": "SoulboundRedeemable.redeemMintedToken",
      "offset": [
        10541,
        10591
      ],
      "op": "ADD",
      "path": "5"
    },
    "3670": {
      "op": "MSTORE"
    },
    "3671": {
      "op": "PUSH1",
      "value": "0x14"
    },
    "3673": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "3675": {
      "op": "DUP3"
    },
    "3676": {
      "op": "ADD"
    },
    "3677": {
      "op": "MSTORE"
    },
    "3678": {
      "op": "PUSH20",
      "value": "0x2A37B5B2B71039BA34B636103832B73234B73397"
    },
    "3699": {
      "op": "PUSH1",
      "value": "0x61"
    },
    "3701": {
      "op": "SHL"
    },
    "3702": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "3704": {
      "op": "DUP3"
    },
    "3705": {
      "op": "ADD"
    },
    "3706": {
      "op": "MSTORE"
    },
    "3707": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "3709": {
      "op": "ADD"
    },
    "3710": {
      "fn": "SoulboundRedeemable.redeemMintedToken",
      "offset": [
        10541,
        10591
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x6E4"
    },
    "3713": {
      "op": "JUMP"
    },
    "3714": {
      "fn": "SoulboundRedeemable.redeemMintedToken",
      "offset": [
        10541,
        10591
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "3715": {
      "fn": "SoulboundRedeemable.redeemMintedToken",
      "offset": [
        10700,
        10709
      ],
      "op": "DUP3",
      "path": "5",
      "statement": 38
    },
    "3716": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3718": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3720": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3722": {
      "op": "SHL"
    },
    "3723": {
      "op": "SUB"
    },
    "3724": {
      "fn": "SoulboundRedeemable.redeemMintedToken",
      "offset": [
        10680,
        10709
      ],
      "op": "AND",
      "path": "5"
    },
    "3725": {
      "fn": "SoulboundRedeemable.redeemMintedToken",
      "offset": [
        10680,
        10696
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0xE95"
    },
    "3728": {
      "fn": "SoulboundRedeemable.redeemMintedToken",
      "offset": [
        10688,
        10695
      ],
      "op": "DUP4",
      "path": "5"
    },
    "3729": {
      "fn": "SoulboundRedeemable.redeemMintedToken",
      "offset": [
        10680,
        10687
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x11CB"
    },
    "3732": {
      "fn": "SoulboundRedeemable.redeemMintedToken",
      "jump": "i",
      "offset": [
        10680,
        10696
      ],
      "op": "JUMP",
      "path": "5"
    },
    "3733": {
      "fn": "SoulboundRedeemable.redeemMintedToken",
      "offset": [
        10680,
        10696
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "3734": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3736": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3738": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3740": {
      "op": "SHL"
    },
    "3741": {
      "op": "SUB"
    },
    "3742": {
      "fn": "SoulboundRedeemable.redeemMintedToken",
      "offset": [
        10680,
        10709
      ],
      "op": "AND",
      "path": "5"
    },
    "3743": {
      "branch": 149,
      "fn": "SoulboundRedeemable.redeemMintedToken",
      "offset": [
        10680,
        10709
      ],
      "op": "EQ",
      "path": "5"
    },
    "3744": {
      "fn": "SoulboundRedeemable.redeemMintedToken",
      "offset": [
        10672,
        10730
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0xEDE"
    },
    "3747": {
      "branch": 149,
      "fn": "SoulboundRedeemable.redeemMintedToken",
      "offset": [
        10672,
        10730
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "3748": {
      "fn": "SoulboundRedeemable.redeemMintedToken",
      "offset": [
        10672,
        10730
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "3750": {
      "fn": "SoulboundRedeemable.redeemMintedToken",
      "offset": [
        10672,
        10730
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "3751": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "3755": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "3757": {
      "op": "SHL"
    },
    "3758": {
      "fn": "SoulboundRedeemable.redeemMintedToken",
      "offset": [
        10672,
        10730
      ],
      "op": "DUP2",
      "path": "5"
    },
    "3759": {
      "fn": "SoulboundRedeemable.redeemMintedToken",
      "offset": [
        10672,
        10730
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "3760": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3762": {
      "fn": "SoulboundRedeemable.redeemMintedToken",
      "offset": [
        10672,
        10730
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x4"
    },
    "3764": {
      "fn": "SoulboundRedeemable.redeemMintedToken",
      "offset": [
        10672,
        10730
      ],
      "op": "DUP3",
      "path": "5"
    },
    "3765": {
      "fn": "SoulboundRedeemable.redeemMintedToken",
      "offset": [
        10672,
        10730
      ],
      "op": "ADD",
      "path": "5"
    },
    "3766": {
      "op": "MSTORE"
    },
    "3767": {
      "op": "PUSH1",
      "value": "0x10"
    },
    "3769": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "3771": {
      "op": "DUP3"
    },
    "3772": {
      "op": "ADD"
    },
    "3773": {
      "op": "MSTORE"
    },
    "3774": {
      "op": "PUSH16",
      "value": "0x2737BA103A37B5B2B71037BBB732B917"
    },
    "3791": {
      "op": "PUSH1",
      "value": "0x81"
    },
    "3793": {
      "op": "SHL"
    },
    "3794": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "3796": {
      "op": "DUP3"
    },
    "3797": {
      "op": "ADD"
    },
    "3798": {
      "op": "MSTORE"
    },
    "3799": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "3801": {
      "op": "ADD"
    },
    "3802": {
      "fn": "SoulboundRedeemable.redeemMintedToken",
      "offset": [
        10672,
        10730
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x6E4"
    },
    "3805": {
      "op": "JUMP"
    },
    "3806": {
      "fn": "SoulboundRedeemable.redeemMintedToken",
      "offset": [
        10672,
        10730
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "3807": {
      "fn": "IsValidWithDate.isValid",
      "offset": [
        1754,
        1758
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "3809": {
      "fn": "IsValidWithDate.getExpiryDate",
      "offset": [
        1444,
        1468
      ],
      "op": "DUP3",
      "path": "1"
    },
    "3810": {
      "fn": "IsValidWithDate.getExpiryDate",
      "offset": [
        1444,
        1468
      ],
      "op": "DUP2",
      "path": "1"
    },
    "3811": {
      "fn": "IsValidWithDate.getExpiryDate",
      "offset": [
        1444,
        1468
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "3812": {
      "fn": "IsValidWithDate.getExpiryDate",
      "offset": [
        1444,
        1468
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "3814": {
      "fn": "IsValidWithDate.getExpiryDate",
      "offset": [
        1444,
        1468
      ],
      "op": "DUP2",
      "path": "1"
    },
    "3815": {
      "fn": "IsValidWithDate.getExpiryDate",
      "offset": [
        1444,
        1468
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "3816": {
      "fn": "IsValidWithDate.getExpiryDate",
      "offset": [
        1444,
        1468
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "3817": {
      "fn": "IsValidWithDate.getExpiryDate",
      "offset": [
        1444,
        1468
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "3819": {
      "fn": "IsValidWithDate.getExpiryDate",
      "offset": [
        1444,
        1468
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "3820": {
      "fn": "IsValidWithDate.getExpiryDate",
      "offset": [
        1444,
        1468
      ],
      "op": "KECCAK256",
      "path": "1"
    },
    "3821": {
      "fn": "IsValidWithDate.getExpiryDate",
      "offset": [
        1444,
        1468
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "3822": {
      "fn": "IsValidWithDate.isValid",
      "offset": [
        1777,
        1792
      ],
      "op": "TIMESTAMP",
      "path": "1"
    },
    "3823": {
      "fn": "IsValidWithDate.isValid",
      "offset": [
        1777,
        1818
      ],
      "op": "GT",
      "path": "1"
    },
    "3824": {
      "fn": "SoulboundRedeemable.redeemMintedToken",
      "offset": [
        10788,
        10834
      ],
      "op": "PUSH2",
      "path": "5",
      "statement": 39,
      "value": "0xF2E"
    },
    "3827": {
      "fn": "SoulboundRedeemable.redeemMintedToken",
      "offset": [
        10788,
        10834
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "3828": {
      "fn": "SoulboundRedeemable.redeemMintedToken",
      "offset": [
        10788,
        10834
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "3830": {
      "fn": "SoulboundRedeemable.redeemMintedToken",
      "offset": [
        10788,
        10834
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "3831": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "3835": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "3837": {
      "op": "SHL"
    },
    "3838": {
      "fn": "SoulboundRedeemable.redeemMintedToken",
      "offset": [
        10788,
        10834
      ],
      "op": "DUP2",
      "path": "5"
    },
    "3839": {
      "fn": "SoulboundRedeemable.redeemMintedToken",
      "offset": [
        10788,
        10834
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "3840": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3842": {
      "fn": "SoulboundRedeemable.redeemMintedToken",
      "offset": [
        10788,
        10834
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x4"
    },
    "3844": {
      "fn": "SoulboundRedeemable.redeemMintedToken",
      "offset": [
        10788,
        10834
      ],
      "op": "DUP3",
      "path": "5"
    },
    "3845": {
      "fn": "SoulboundRedeemable.redeemMintedToken",
      "offset": [
        10788,
        10834
      ],
      "op": "ADD",
      "path": "5"
    },
    "3846": {
      "op": "MSTORE"
    },
    "3847": {
      "op": "PUSH1",
      "value": "0x10"
    },
    "3849": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "3851": {
      "op": "DUP3"
    },
    "3852": {
      "op": "ADD"
    },
    "3853": {
      "op": "MSTORE"
    },
    "3854": {
      "op": "PUSH16",
      "value": "0x2A37B5B2B7103AB732BC3834B932B217"
    },
    "3871": {
      "op": "PUSH1",
      "value": "0x81"
    },
    "3873": {
      "op": "SHL"
    },
    "3874": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "3876": {
      "op": "DUP3"
    },
    "3877": {
      "op": "ADD"
    },
    "3878": {
      "op": "MSTORE"
    },
    "3879": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "3881": {
      "op": "ADD"
    },
    "3882": {
      "fn": "SoulboundRedeemable.redeemMintedToken",
      "offset": [
        10788,
        10834
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x6E4"
    },
    "3885": {
      "op": "JUMP"
    },
    "3886": {
      "fn": "SoulboundRedeemable.redeemMintedToken",
      "offset": [
        10788,
        10834
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "3887": {
      "fn": "SoulboundRedeemable.redeemMintedToken",
      "offset": [
        10876,
        10888
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "3889": {
      "fn": "SoulboundRedeemable.redeemMintedToken",
      "offset": [
        10891,
        10908
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0xF3B"
    },
    "3892": {
      "fn": "SoulboundRedeemable.redeemMintedToken",
      "offset": [
        10904,
        10907
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x12"
    },
    "3894": {
      "fn": "SoulboundRedeemable.redeemMintedToken",
      "offset": [
        10904,
        10907
      ],
      "op": "SLOAD",
      "path": "5"
    },
    "3895": {
      "fn": "SoulboundRedeemable.redeemMintedToken",
      "offset": [
        10891,
        10903
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x2006"
    },
    "3898": {
      "fn": "SoulboundRedeemable.redeemMintedToken",
      "jump": "i",
      "offset": [
        10891,
        10908
      ],
      "op": "JUMP",
      "path": "5"
    },
    "3899": {
      "fn": "SoulboundRedeemable.redeemMintedToken",
      "offset": [
        10891,
        10908
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "3900": {
      "fn": "SoulboundRedeemable.redeemMintedToken",
      "offset": [
        10876,
        10908
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "3901": {
      "fn": "SoulboundRedeemable.redeemMintedToken",
      "offset": [
        10876,
        10908
      ],
      "op": "POP",
      "path": "5"
    },
    "3902": {
      "fn": "SoulboundRedeemable.redeemMintedToken",
      "offset": [
        11001,
        11005
      ],
      "op": "DUP1",
      "path": "5",
      "statement": 40
    },
    "3903": {
      "fn": "SoulboundRedeemable.redeemMintedToken",
      "offset": [
        10988,
        10997
      ],
      "op": "CALLVALUE",
      "path": "5"
    },
    "3904": {
      "fn": "SoulboundRedeemable.redeemMintedToken",
      "offset": [
        10988,
        11005
      ],
      "op": "LT",
      "path": "5"
    },
    "3905": {
      "branch": 150,
      "fn": "SoulboundRedeemable.redeemMintedToken",
      "offset": [
        10988,
        11005
      ],
      "op": "ISZERO",
      "path": "5"
    },
    "3906": {
      "fn": "SoulboundRedeemable.redeemMintedToken",
      "offset": [
        10980,
        11042
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0xF8D"
    },
    "3909": {
      "branch": 150,
      "fn": "SoulboundRedeemable.redeemMintedToken",
      "offset": [
        10980,
        11042
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "3910": {
      "fn": "SoulboundRedeemable.redeemMintedToken",
      "offset": [
        10980,
        11042
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "3912": {
      "fn": "SoulboundRedeemable.redeemMintedToken",
      "offset": [
        10980,
        11042
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "3913": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "3917": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "3919": {
      "op": "SHL"
    },
    "3920": {
      "fn": "SoulboundRedeemable.redeemMintedToken",
      "offset": [
        10980,
        11042
      ],
      "op": "DUP2",
      "path": "5"
    },
    "3921": {
      "fn": "SoulboundRedeemable.redeemMintedToken",
      "offset": [
        10980,
        11042
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "3922": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3924": {
      "fn": "SoulboundRedeemable.redeemMintedToken",
      "offset": [
        10980,
        11042
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x4"
    },
    "3926": {
      "fn": "SoulboundRedeemable.redeemMintedToken",
      "offset": [
        10980,
        11042
      ],
      "op": "DUP3",
      "path": "5"
    },
    "3927": {
      "fn": "SoulboundRedeemable.redeemMintedToken",
      "offset": [
        10980,
        11042
      ],
      "op": "ADD",
      "path": "5"
    },
    "3928": {
      "op": "DUP2"
    },
    "3929": {
      "op": "SWAP1"
    },
    "3930": {
      "op": "MSTORE"
    },
    "3931": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "3933": {
      "op": "DUP3"
    },
    "3934": {
      "op": "ADD"
    },
    "3935": {
      "op": "MSTORE"
    },
    "3936": {
      "op": "PUSH32",
      "value": "0x5072696365206C6F776572207468616E20726564656D7074696F6E207461782E"
    },
    "3969": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "3971": {
      "op": "DUP3"
    },
    "3972": {
      "op": "ADD"
    },
    "3973": {
      "op": "MSTORE"
    },
    "3974": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "3976": {
      "op": "ADD"
    },
    "3977": {
      "fn": "SoulboundRedeemable.redeemMintedToken",
      "offset": [
        10980,
        11042
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x6E4"
    },
    "3980": {
      "op": "JUMP"
    },
    "3981": {
      "fn": "SoulboundRedeemable.redeemMintedToken",
      "offset": [
        10980,
        11042
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "3982": {
      "fn": "SoulboundRedeemable.redeemMintedToken",
      "offset": [
        11087,
        11102
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "3984": {
      "fn": "SoulboundRedeemable.redeemMintedToken",
      "offset": [
        11155,
        11164
      ],
      "op": "DUP2",
      "path": "5"
    },
    "3985": {
      "branch": 151,
      "fn": "SoulboundRedeemable.redeemMintedToken",
      "offset": [
        11155,
        11164
      ],
      "op": "ISZERO",
      "path": "5"
    },
    "3986": {
      "fn": "SoulboundRedeemable.redeemMintedToken",
      "offset": [
        11151,
        11356
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0xFDA"
    },
    "3989": {
      "branch": 151,
      "fn": "SoulboundRedeemable.redeemMintedToken",
      "offset": [
        11151,
        11356
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "3990": {
      "fn": "SoulboundRedeemable.redeemMintedToken",
      "offset": [
        11241,
        11257
      ],
      "op": "PUSH2",
      "path": "5",
      "statement": 41,
      "value": "0xF9F"
    },
    "3993": {
      "fn": "SoulboundRedeemable.redeemMintedToken",
      "offset": [
        11253,
        11257
      ],
      "op": "DUP3",
      "path": "5"
    },
    "3994": {
      "fn": "SoulboundRedeemable.redeemMintedToken",
      "offset": [
        11241,
        11250
      ],
      "op": "CALLVALUE",
      "path": "5"
    },
    "3995": {
      "fn": "SoulboundRedeemable.redeemMintedToken",
      "offset": [
        11241,
        11257
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x2AE8"
    },
    "3998": {
      "fn": "SoulboundRedeemable.redeemMintedToken",
      "jump": "i",
      "offset": [
        11241,
        11257
      ],
      "op": "JUMP",
      "path": "5"
    },
    "3999": {
      "fn": "SoulboundRedeemable.redeemMintedToken",
      "offset": [
        11241,
        11257
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "4000": {
      "fn": "SoulboundRedeemable.redeemMintedToken",
      "offset": [
        11309,
        11345
      ],
      "op": "PUSH1",
      "path": "5",
      "statement": 42,
      "value": "0x40"
    },
    "4002": {
      "fn": "SoulboundRedeemable.redeemMintedToken",
      "offset": [
        11309,
        11345
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "4003": {
      "fn": "SoulboundRedeemable.redeemMintedToken",
      "offset": [
        11231,
        11257
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "4004": {
      "fn": "SoulboundRedeemable.redeemMintedToken",
      "offset": [
        11231,
        11257
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "4005": {
      "op": "POP"
    },
    "4006": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4008": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4010": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4012": {
      "op": "SHL"
    },
    "4013": {
      "op": "SUB"
    },
    "4014": {
      "fn": "SoulboundRedeemable.redeemMintedToken",
      "offset": [
        11309,
        11336
      ],
      "op": "DUP7",
      "path": "5"
    },
    "4015": {
      "fn": "SoulboundRedeemable.redeemMintedToken",
      "offset": [
        11309,
        11336
      ],
      "op": "AND",
      "path": "5"
    },
    "4016": {
      "fn": "SoulboundRedeemable.redeemMintedToken",
      "offset": [
        11309,
        11336
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "4017": {
      "fn": "SoulboundRedeemable.redeemMintedToken",
      "offset": [
        11309,
        11345
      ],
      "op": "DUP3",
      "path": "5"
    },
    "4018": {
      "fn": "SoulboundRedeemable.redeemMintedToken",
      "offset": [
        11309,
        11345
      ],
      "op": "ISZERO",
      "path": "5"
    },
    "4019": {
      "fn": "SoulboundRedeemable.redeemMintedToken",
      "offset": [
        11309,
        11345
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x8FC"
    },
    "4022": {
      "fn": "SoulboundRedeemable.redeemMintedToken",
      "offset": [
        11309,
        11345
      ],
      "op": "MUL",
      "path": "5"
    },
    "4023": {
      "fn": "SoulboundRedeemable.redeemMintedToken",
      "offset": [
        11309,
        11345
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "4024": {
      "fn": "SoulboundRedeemable.redeemMintedToken",
      "offset": [
        11231,
        11257
      ],
      "op": "DUP4",
      "path": "5"
    },
    "4025": {
      "fn": "SoulboundRedeemable.redeemMintedToken",
      "offset": [
        11231,
        11257
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "4026": {
      "fn": "SoulboundRedeemable.redeemMintedToken",
      "offset": [
        11309,
        11345
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "4028": {
      "fn": "SoulboundRedeemable.redeemMintedToken",
      "offset": [
        11309,
        11345
      ],
      "op": "DUP2",
      "path": "5"
    },
    "4029": {
      "fn": "SoulboundRedeemable.redeemMintedToken",
      "offset": [
        11309,
        11345
      ],
      "op": "DUP2",
      "path": "5"
    },
    "4030": {
      "fn": "SoulboundRedeemable.redeemMintedToken",
      "offset": [
        11309,
        11345
      ],
      "op": "DUP2",
      "path": "5"
    },
    "4031": {
      "fn": "SoulboundRedeemable.redeemMintedToken",
      "offset": [
        11231,
        11257
      ],
      "op": "DUP6",
      "path": "5"
    },
    "4032": {
      "fn": "SoulboundRedeemable.redeemMintedToken",
      "offset": [
        11309,
        11336
      ],
      "op": "DUP9",
      "path": "5"
    },
    "4033": {
      "fn": "SoulboundRedeemable.redeemMintedToken",
      "offset": [
        11309,
        11345
      ],
      "op": "DUP9",
      "path": "5"
    },
    "4034": {
      "fn": "SoulboundRedeemable.redeemMintedToken",
      "offset": [
        11309,
        11345
      ],
      "op": "CALL",
      "path": "5"
    },
    "4035": {
      "fn": "SoulboundRedeemable.redeemMintedToken",
      "offset": [
        11309,
        11345
      ],
      "op": "SWAP4",
      "path": "5"
    },
    "4036": {
      "fn": "SoulboundRedeemable.redeemMintedToken",
      "offset": [
        11309,
        11345
      ],
      "op": "POP",
      "path": "5"
    },
    "4037": {
      "fn": "SoulboundRedeemable.redeemMintedToken",
      "offset": [
        11309,
        11345
      ],
      "op": "POP",
      "path": "5"
    },
    "4038": {
      "fn": "SoulboundRedeemable.redeemMintedToken",
      "offset": [
        11309,
        11345
      ],
      "op": "POP",
      "path": "5"
    },
    "4039": {
      "fn": "SoulboundRedeemable.redeemMintedToken",
      "offset": [
        11309,
        11345
      ],
      "op": "POP",
      "path": "5"
    },
    "4040": {
      "fn": "SoulboundRedeemable.redeemMintedToken",
      "offset": [
        11309,
        11345
      ],
      "op": "ISZERO",
      "path": "5"
    },
    "4041": {
      "fn": "SoulboundRedeemable.redeemMintedToken",
      "offset": [
        11309,
        11345
      ],
      "op": "DUP1",
      "path": "5"
    },
    "4042": {
      "fn": "SoulboundRedeemable.redeemMintedToken",
      "offset": [
        11309,
        11345
      ],
      "op": "ISZERO",
      "path": "5"
    },
    "4043": {
      "fn": "SoulboundRedeemable.redeemMintedToken",
      "offset": [
        11309,
        11345
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0xFD8"
    },
    "4046": {
      "fn": "SoulboundRedeemable.redeemMintedToken",
      "offset": [
        11309,
        11345
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "4047": {
      "fn": "SoulboundRedeemable.redeemMintedToken",
      "offset": [
        11309,
        11345
      ],
      "op": "RETURNDATASIZE",
      "path": "5"
    },
    "4048": {
      "fn": "SoulboundRedeemable.redeemMintedToken",
      "offset": [
        11309,
        11345
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "4050": {
      "fn": "SoulboundRedeemable.redeemMintedToken",
      "offset": [
        11309,
        11345
      ],
      "op": "DUP1",
      "path": "5"
    },
    "4051": {
      "fn": "SoulboundRedeemable.redeemMintedToken",
      "offset": [
        11309,
        11345
      ],
      "op": "RETURNDATACOPY",
      "path": "5"
    },
    "4052": {
      "fn": "SoulboundRedeemable.redeemMintedToken",
      "offset": [
        11309,
        11345
      ],
      "op": "RETURNDATASIZE",
      "path": "5"
    },
    "4053": {
      "fn": "SoulboundRedeemable.redeemMintedToken",
      "offset": [
        11309,
        11345
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "4055": {
      "fn": "SoulboundRedeemable.redeemMintedToken",
      "offset": [
        11309,
        11345
      ],
      "op": "REVERT",
      "path": "5"
    },
    "4056": {
      "fn": "SoulboundRedeemable.redeemMintedToken",
      "offset": [
        11309,
        11345
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "4057": {
      "fn": "SoulboundRedeemable.redeemMintedToken",
      "offset": [
        11309,
        11345
      ],
      "op": "POP",
      "path": "5"
    },
    "4058": {
      "fn": "SoulboundRedeemable.redeemMintedToken",
      "offset": [
        11151,
        11356
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "4059": {
      "fn": "SoulboundRedeemable.redeemMintedToken",
      "offset": [
        11409,
        11448
      ],
      "op": "PUSH2",
      "path": "5",
      "statement": 43,
      "value": "0xFE4"
    },
    "4062": {
      "fn": "SoulboundRedeemable.redeemMintedToken",
      "offset": [
        11422,
        11429
      ],
      "op": "DUP5",
      "path": "5"
    },
    "4063": {
      "fn": "SoulboundRedeemable.redeemMintedToken",
      "offset": [
        11431,
        11447
      ],
      "op": "DUP5",
      "path": "5"
    },
    "4064": {
      "fn": "SoulboundRedeemable.redeemMintedToken",
      "offset": [
        11409,
        11421
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x169B"
    },
    "4067": {
      "fn": "SoulboundRedeemable.redeemMintedToken",
      "jump": "i",
      "offset": [
        11409,
        11448
      ],
      "op": "JUMP",
      "path": "5"
    },
    "4068": {
      "fn": "SoulboundRedeemable.redeemMintedToken",
      "offset": [
        11409,
        11448
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "4069": {
      "fn": "SoulboundRedeemable.redeemMintedToken",
      "offset": [
        11505,
        11540
      ],
      "op": "PUSH1",
      "path": "5",
      "statement": 44,
      "value": "0x40"
    },
    "4071": {
      "fn": "SoulboundRedeemable.redeemMintedToken",
      "offset": [
        11505,
        11540
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "4072": {
      "fn": "SoulboundRedeemable.redeemMintedToken",
      "offset": [
        11523,
        11539
      ],
      "op": "DUP4",
      "path": "5"
    },
    "4073": {
      "fn": "SoulboundRedeemable.redeemMintedToken",
      "offset": [
        11523,
        11539
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "4074": {
      "fn": "SoulboundRedeemable.redeemMintedToken",
      "offset": [
        11514,
        11521
      ],
      "op": "DUP6",
      "path": "5"
    },
    "4075": {
      "fn": "SoulboundRedeemable.redeemMintedToken",
      "offset": [
        11514,
        11521
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "4076": {
      "fn": "SoulboundRedeemable.redeemMintedToken",
      "offset": [
        11505,
        11540
      ],
      "op": "PUSH32",
      "path": "5",
      "value": "0x6F73B7B8D37DF32EA60A45EADC8FC3D2D716D705EE099BD506817482CE847316"
    },
    "4109": {
      "fn": "SoulboundRedeemable.redeemMintedToken",
      "offset": [
        11505,
        11540
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "4110": {
      "fn": "SoulboundRedeemable.redeemMintedToken",
      "offset": [
        11505,
        11540
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "4112": {
      "fn": "SoulboundRedeemable.redeemMintedToken",
      "offset": [
        11505,
        11540
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "4113": {
      "fn": "SoulboundRedeemable.redeemMintedToken",
      "offset": [
        11505,
        11540
      ],
      "op": "LOG3",
      "path": "5"
    },
    "4114": {
      "op": "POP"
    },
    "4115": {
      "op": "POP"
    },
    "4116": {
      "offset": [
        2245,
        2251
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x13"
    },
    "4118": {
      "offset": [
        2245,
        2259
      ],
      "op": "DUP1",
      "path": "5"
    },
    "4119": {
      "fn": "SoulboundRedeemable.redeemMintedToken",
      "offset": [
        2245,
        2259
      ],
      "op": "SLOAD",
      "path": "5"
    },
    "4120": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "4122": {
      "op": "NOT"
    },
    "4123": {
      "offset": [
        2245,
        2259
      ],
      "op": "AND",
      "path": "5"
    },
    "4124": {
      "fn": "SoulboundRedeemable.redeemMintedToken",
      "offset": [
        2245,
        2259
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "4125": {
      "fn": "SoulboundRedeemable.redeemMintedToken",
      "offset": [
        2245,
        2259
      ],
      "op": "SSTORE",
      "path": "5"
    },
    "4126": {
      "op": "POP"
    },
    "4127": {
      "op": "POP"
    },
    "4128": {
      "op": "POP"
    },
    "4129": {
      "fn": "SoulboundRedeemable.redeemMintedToken",
      "jump": "o",
      "offset": [
        10045,
        11547
      ],
      "op": "JUMP",
      "path": "5"
    },
    "4130": {
      "fn": "ERC4973.burn",
      "offset": [
        4946,
        5101
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "4131": {
      "fn": "ERC4973.burn",
      "offset": [
        5029,
        5045
      ],
      "op": "PUSH2",
      "path": "7",
      "statement": 45,
      "value": "0x102B"
    },
    "4134": {
      "fn": "ERC4973.burn",
      "offset": [
        5037,
        5044
      ],
      "op": "DUP2",
      "path": "7"
    },
    "4135": {
      "fn": "ERC4973.burn",
      "offset": [
        5029,
        5036
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x11CB"
    },
    "4138": {
      "fn": "ERC4973.burn",
      "jump": "i",
      "offset": [
        5029,
        5045
      ],
      "op": "JUMP",
      "path": "7"
    },
    "4139": {
      "fn": "ERC4973.burn",
      "offset": [
        5029,
        5045
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "4140": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4142": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4144": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4146": {
      "op": "SHL"
    },
    "4147": {
      "op": "SUB"
    },
    "4148": {
      "fn": "ERC4973.burn",
      "offset": [
        5015,
        5045
      ],
      "op": "AND",
      "path": "7"
    },
    "4149": {
      "fn": "ERC4973.burn",
      "offset": [
        5015,
        5025
      ],
      "op": "CALLER",
      "path": "7"
    },
    "4150": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4152": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4154": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4156": {
      "op": "SHL"
    },
    "4157": {
      "op": "SUB"
    },
    "4158": {
      "fn": "ERC4973.burn",
      "offset": [
        5015,
        5045
      ],
      "op": "AND",
      "path": "7"
    },
    "4159": {
      "branch": 167,
      "fn": "ERC4973.burn",
      "offset": [
        5015,
        5045
      ],
      "op": "EQ",
      "path": "7"
    },
    "4160": {
      "fn": "ERC4973.burn",
      "offset": [
        5007,
        5076
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x108B"
    },
    "4163": {
      "branch": 167,
      "fn": "ERC4973.burn",
      "offset": [
        5007,
        5076
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "4164": {
      "fn": "ERC4973.burn",
      "offset": [
        5007,
        5076
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x40"
    },
    "4166": {
      "fn": "ERC4973.burn",
      "offset": [
        5007,
        5076
      ],
      "op": "MLOAD",
      "path": "7"
    },
    "4167": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "4171": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "4173": {
      "op": "SHL"
    },
    "4174": {
      "fn": "ERC4973.burn",
      "offset": [
        5007,
        5076
      ],
      "op": "DUP2",
      "path": "7"
    },
    "4175": {
      "fn": "ERC4973.burn",
      "offset": [
        5007,
        5076
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "4176": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4178": {
      "fn": "ERC4973.burn",
      "offset": [
        5007,
        5076
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x4"
    },
    "4180": {
      "fn": "ERC4973.burn",
      "offset": [
        5007,
        5076
      ],
      "op": "DUP3",
      "path": "7"
    },
    "4181": {
      "fn": "ERC4973.burn",
      "offset": [
        5007,
        5076
      ],
      "op": "ADD",
      "path": "7"
    },
    "4182": {
      "op": "MSTORE"
    },
    "4183": {
      "op": "PUSH1",
      "value": "0x1A"
    },
    "4185": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "4187": {
      "op": "DUP3"
    },
    "4188": {
      "op": "ADD"
    },
    "4189": {
      "op": "MSTORE"
    },
    "4190": {
      "op": "PUSH32",
      "value": "0x6275726E3A2073656E646572206D757374206265206F776E6572000000000000"
    },
    "4223": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "4225": {
      "op": "DUP3"
    },
    "4226": {
      "op": "ADD"
    },
    "4227": {
      "op": "MSTORE"
    },
    "4228": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "4230": {
      "op": "ADD"
    },
    "4231": {
      "fn": "ERC4973.burn",
      "offset": [
        5007,
        5076
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x6E4"
    },
    "4234": {
      "op": "JUMP"
    },
    "4235": {
      "fn": "ERC4973.burn",
      "offset": [
        5007,
        5076
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "4236": {
      "fn": "ERC4973.burn",
      "offset": [
        5082,
        5096
      ],
      "op": "PUSH2",
      "path": "7",
      "statement": 46,
      "value": "0x1094"
    },
    "4239": {
      "fn": "ERC4973.burn",
      "offset": [
        5088,
        5095
      ],
      "op": "DUP2",
      "path": "7"
    },
    "4240": {
      "fn": "ERC4973.burn",
      "offset": [
        5082,
        5087
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x2042"
    },
    "4243": {
      "fn": "ERC4973.burn",
      "jump": "i",
      "offset": [
        5082,
        5096
      ],
      "op": "JUMP",
      "path": "7"
    },
    "4244": {
      "fn": "ERC4973.burn",
      "offset": [
        5082,
        5096
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "4245": {
      "fn": "ERC4973.burn",
      "offset": [
        4946,
        5101
      ],
      "op": "POP",
      "path": "7"
    },
    "4246": {
      "fn": "ERC4973.burn",
      "jump": "o",
      "offset": [
        4946,
        5101
      ],
      "op": "JUMP",
      "path": "7"
    },
    "4247": {
      "fn": "SoulboundRedeemable.withdraw",
      "offset": [
        14094,
        14689
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "4248": {
      "offset": [
        1401,
        1414
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x109F"
    },
    "4251": {
      "offset": [
        1401,
        1412
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1DA7"
    },
    "4254": {
      "jump": "i",
      "offset": [
        1401,
        1414
      ],
      "op": "JUMP",
      "path": "2"
    },
    "4255": {
      "fn": "SoulboundRedeemable.withdraw",
      "offset": [
        1401,
        1414
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "4256": {
      "fn": "SoulboundRedeemable.withdraw",
      "offset": [
        14177,
        14184
      ],
      "op": "DUP1",
      "path": "5"
    },
    "4257": {
      "offset": [
        1669,
        1688
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x10B2"
    },
    "4260": {
      "fn": "Allowlist.getAllowlistOwner",
      "offset": [
        2093,
        2107
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x9"
    },
    "4262": {
      "fn": "Allowlist.getAllowlistOwner",
      "offset": [
        2093,
        2107
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "4263": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4265": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4267": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4269": {
      "op": "SHL"
    },
    "4270": {
      "op": "SUB"
    },
    "4271": {
      "fn": "Allowlist.getAllowlistOwner",
      "offset": [
        2093,
        2107
      ],
      "op": "AND",
      "path": "0"
    },
    "4272": {
      "fn": "Allowlist.getAllowlistOwner",
      "offset": [
        2093,
        2107
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "4273": {
      "fn": "Allowlist.getAllowlistOwner",
      "offset": [
        2018,
        2114
      ],
      "op": "JUMP",
      "path": "0"
    },
    "4274": {
      "offset": [
        1669,
        1688
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "4275": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4277": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4279": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4281": {
      "op": "SHL"
    },
    "4282": {
      "op": "SUB"
    },
    "4283": {
      "offset": [
        1658,
        1688
      ],
      "op": "AND",
      "path": "4"
    },
    "4284": {
      "offset": [
        1658,
        1665
      ],
      "op": "DUP2",
      "path": "4"
    },
    "4285": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4287": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4289": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4291": {
      "op": "SHL"
    },
    "4292": {
      "op": "SUB"
    },
    "4293": {
      "offset": [
        1658,
        1688
      ],
      "op": "AND",
      "path": "4"
    },
    "4294": {
      "fn": "Allowlist.getAllowlistOwner",
      "offset": [
        1658,
        1688
      ],
      "op": "EQ",
      "path": "4"
    },
    "4295": {
      "offset": [
        1650,
        1713
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x10E2"
    },
    "4298": {
      "offset": [
        1650,
        1713
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "4299": {
      "fn": "Allowlist.getAllowlistOwner",
      "offset": [
        1650,
        1713
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "4301": {
      "fn": "Allowlist.getAllowlistOwner",
      "offset": [
        1650,
        1713
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "4302": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "4306": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "4308": {
      "op": "SHL"
    },
    "4309": {
      "offset": [
        1650,
        1713
      ],
      "op": "DUP2",
      "path": "4"
    },
    "4310": {
      "fn": "Allowlist.getAllowlistOwner",
      "offset": [
        1650,
        1713
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "4311": {
      "fn": "Allowlist.getAllowlistOwner",
      "offset": [
        1650,
        1713
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x4"
    },
    "4313": {
      "fn": "Allowlist.getAllowlistOwner",
      "offset": [
        1650,
        1713
      ],
      "op": "ADD",
      "path": "4"
    },
    "4314": {
      "fn": "Allowlist.getAllowlistOwner",
      "offset": [
        1650,
        1713
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x6E4"
    },
    "4317": {
      "fn": "Allowlist.getAllowlistOwner",
      "offset": [
        1650,
        1713
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "4318": {
      "fn": "Allowlist.getAllowlistOwner",
      "offset": [
        1650,
        1713
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x29F5"
    },
    "4321": {
      "fn": "Allowlist.getAllowlistOwner",
      "jump": "i",
      "offset": [
        1650,
        1713
      ],
      "op": "JUMP",
      "path": "4"
    },
    "4322": {
      "fn": "Allowlist.getAllowlistOwner",
      "offset": [
        1650,
        1713
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "4323": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4325": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4327": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4329": {
      "op": "SHL"
    },
    "4330": {
      "op": "SUB"
    },
    "4331": {
      "fn": "SoulboundRedeemable.withdraw",
      "offset": [
        14280,
        14301
      ],
      "op": "DUP3",
      "path": "5",
      "statement": 47
    },
    "4332": {
      "branch": 152,
      "fn": "SoulboundRedeemable.withdraw",
      "offset": [
        14280,
        14301
      ],
      "op": "AND",
      "path": "5"
    },
    "4333": {
      "fn": "SoulboundRedeemable.withdraw",
      "offset": [
        14272,
        14330
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x1138"
    },
    "4336": {
      "branch": 152,
      "fn": "SoulboundRedeemable.withdraw",
      "offset": [
        14272,
        14330
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "4337": {
      "fn": "SoulboundRedeemable.withdraw",
      "offset": [
        14272,
        14330
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "4339": {
      "fn": "SoulboundRedeemable.withdraw",
      "offset": [
        14272,
        14330
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "4340": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "4344": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "4346": {
      "op": "SHL"
    },
    "4347": {
      "fn": "SoulboundRedeemable.withdraw",
      "offset": [
        14272,
        14330
      ],
      "op": "DUP2",
      "path": "5"
    },
    "4348": {
      "fn": "SoulboundRedeemable.withdraw",
      "offset": [
        14272,
        14330
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "4349": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4351": {
      "fn": "SoulboundRedeemable.withdraw",
      "offset": [
        14272,
        14330
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x4"
    },
    "4353": {
      "fn": "SoulboundRedeemable.withdraw",
      "offset": [
        14272,
        14330
      ],
      "op": "DUP3",
      "path": "5"
    },
    "4354": {
      "fn": "SoulboundRedeemable.withdraw",
      "offset": [
        14272,
        14330
      ],
      "op": "ADD",
      "path": "5"
    },
    "4355": {
      "op": "MSTORE"
    },
    "4356": {
      "op": "PUSH1",
      "value": "0x18"
    },
    "4358": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "4360": {
      "op": "DUP3"
    },
    "4361": {
      "op": "ADD"
    },
    "4362": {
      "op": "MSTORE"
    },
    "4363": {
      "op": "PUSH32",
      "value": "0x53656E64696E6720746F207A65726F20616464726573732E0000000000000000"
    },
    "4396": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "4398": {
      "op": "DUP3"
    },
    "4399": {
      "op": "ADD"
    },
    "4400": {
      "op": "MSTORE"
    },
    "4401": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "4403": {
      "op": "ADD"
    },
    "4404": {
      "fn": "SoulboundRedeemable.withdraw",
      "offset": [
        14272,
        14330
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x6E4"
    },
    "4407": {
      "op": "JUMP"
    },
    "4408": {
      "fn": "SoulboundRedeemable.withdraw",
      "offset": [
        14272,
        14330
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "4409": {
      "fn": "SoulboundRedeemable.withdraw",
      "offset": [
        14457,
        14469
      ],
      "op": "PUSH1",
      "path": "5",
      "statement": 48,
      "value": "0xD"
    },
    "4411": {
      "fn": "SoulboundRedeemable.withdraw",
      "offset": [
        14457,
        14469
      ],
      "op": "SLOAD",
      "path": "5"
    },
    "4412": {
      "fn": "SoulboundRedeemable.withdraw",
      "offset": [
        14432,
        14453
      ],
      "op": "SELFBALANCE",
      "path": "5"
    },
    "4413": {
      "fn": "SoulboundRedeemable.withdraw",
      "offset": [
        14432,
        14469
      ],
      "op": "LT",
      "path": "5"
    },
    "4414": {
      "branch": 153,
      "fn": "SoulboundRedeemable.withdraw",
      "offset": [
        14432,
        14469
      ],
      "op": "ISZERO",
      "path": "5"
    },
    "4415": {
      "fn": "SoulboundRedeemable.withdraw",
      "offset": [
        14424,
        14502
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x118A"
    },
    "4418": {
      "branch": 153,
      "fn": "SoulboundRedeemable.withdraw",
      "offset": [
        14424,
        14502
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "4419": {
      "fn": "SoulboundRedeemable.withdraw",
      "offset": [
        14424,
        14502
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "4421": {
      "fn": "SoulboundRedeemable.withdraw",
      "offset": [
        14424,
        14502
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "4422": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "4426": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "4428": {
      "op": "SHL"
    },
    "4429": {
      "fn": "SoulboundRedeemable.withdraw",
      "offset": [
        14424,
        14502
      ],
      "op": "DUP2",
      "path": "5"
    },
    "4430": {
      "fn": "SoulboundRedeemable.withdraw",
      "offset": [
        14424,
        14502
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "4431": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4433": {
      "fn": "SoulboundRedeemable.withdraw",
      "offset": [
        14424,
        14502
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x4"
    },
    "4435": {
      "fn": "SoulboundRedeemable.withdraw",
      "offset": [
        14424,
        14502
      ],
      "op": "DUP3",
      "path": "5"
    },
    "4436": {
      "fn": "SoulboundRedeemable.withdraw",
      "offset": [
        14424,
        14502
      ],
      "op": "ADD",
      "path": "5"
    },
    "4437": {
      "op": "MSTORE"
    },
    "4438": {
      "op": "PUSH1",
      "value": "0x1C"
    },
    "4440": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "4442": {
      "op": "DUP3"
    },
    "4443": {
      "op": "ADD"
    },
    "4444": {
      "op": "MSTORE"
    },
    "4445": {
      "op": "PUSH32",
      "value": "0x526576656E756520213D20436F6E74726163742062616C616E63652E00000000"
    },
    "4478": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "4480": {
      "op": "DUP3"
    },
    "4481": {
      "op": "ADD"
    },
    "4482": {
      "op": "MSTORE"
    },
    "4483": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "4485": {
      "op": "ADD"
    },
    "4486": {
      "fn": "SoulboundRedeemable.withdraw",
      "offset": [
        14424,
        14502
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x6E4"
    },
    "4489": {
      "op": "JUMP"
    },
    "4490": {
      "fn": "SoulboundRedeemable.withdraw",
      "offset": [
        14424,
        14502
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "4491": {
      "fn": "SoulboundRedeemable.withdraw",
      "offset": [
        14599,
        14611
      ],
      "op": "PUSH1",
      "path": "5",
      "statement": 49,
      "value": "0xD"
    },
    "4493": {
      "fn": "SoulboundRedeemable.withdraw",
      "offset": [
        14599,
        14611
      ],
      "op": "SLOAD",
      "path": "5"
    },
    "4494": {
      "fn": "SoulboundRedeemable.withdraw",
      "offset": [
        14573,
        14612
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "4496": {
      "fn": "SoulboundRedeemable.withdraw",
      "offset": [
        14573,
        14612
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "4497": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4499": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4501": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4503": {
      "op": "SHL"
    },
    "4504": {
      "op": "SUB"
    },
    "4505": {
      "fn": "SoulboundRedeemable.withdraw",
      "offset": [
        14573,
        14598
      ],
      "op": "DUP5",
      "path": "5"
    },
    "4506": {
      "fn": "SoulboundRedeemable.withdraw",
      "offset": [
        14573,
        14598
      ],
      "op": "AND",
      "path": "5"
    },
    "4507": {
      "fn": "SoulboundRedeemable.withdraw",
      "offset": [
        14573,
        14598
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "4508": {
      "fn": "SoulboundRedeemable.withdraw",
      "offset": [
        14573,
        14612
      ],
      "op": "DUP1",
      "path": "5"
    },
    "4509": {
      "fn": "SoulboundRedeemable.withdraw",
      "offset": [
        14573,
        14612
      ],
      "op": "ISZERO",
      "path": "5"
    },
    "4510": {
      "fn": "SoulboundRedeemable.withdraw",
      "offset": [
        14573,
        14612
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x8FC"
    },
    "4513": {
      "fn": "SoulboundRedeemable.withdraw",
      "offset": [
        14573,
        14612
      ],
      "op": "MUL",
      "path": "5"
    },
    "4514": {
      "fn": "SoulboundRedeemable.withdraw",
      "offset": [
        14573,
        14612
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "4515": {
      "fn": "SoulboundRedeemable.withdraw",
      "offset": [
        14573,
        14612
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "4517": {
      "fn": "SoulboundRedeemable.withdraw",
      "offset": [
        14573,
        14612
      ],
      "op": "DUP2",
      "path": "5"
    },
    "4518": {
      "fn": "SoulboundRedeemable.withdraw",
      "offset": [
        14573,
        14612
      ],
      "op": "DUP2",
      "path": "5"
    },
    "4519": {
      "fn": "SoulboundRedeemable.withdraw",
      "offset": [
        14573,
        14612
      ],
      "op": "DUP2",
      "path": "5"
    },
    "4520": {
      "fn": "SoulboundRedeemable.withdraw",
      "offset": [
        14599,
        14611
      ],
      "op": "DUP6",
      "path": "5"
    },
    "4521": {
      "fn": "SoulboundRedeemable.withdraw",
      "offset": [
        14573,
        14598
      ],
      "op": "DUP9",
      "path": "5"
    },
    "4522": {
      "fn": "SoulboundRedeemable.withdraw",
      "offset": [
        14573,
        14612
      ],
      "op": "DUP9",
      "path": "5"
    },
    "4523": {
      "fn": "SoulboundRedeemable.withdraw",
      "offset": [
        14573,
        14612
      ],
      "op": "CALL",
      "path": "5"
    },
    "4524": {
      "fn": "SoulboundRedeemable.withdraw",
      "offset": [
        14573,
        14612
      ],
      "op": "SWAP4",
      "path": "5"
    },
    "4525": {
      "fn": "SoulboundRedeemable.withdraw",
      "offset": [
        14573,
        14612
      ],
      "op": "POP",
      "path": "5"
    },
    "4526": {
      "fn": "SoulboundRedeemable.withdraw",
      "offset": [
        14573,
        14612
      ],
      "op": "POP",
      "path": "5"
    },
    "4527": {
      "fn": "SoulboundRedeemable.withdraw",
      "offset": [
        14573,
        14612
      ],
      "op": "POP",
      "path": "5"
    },
    "4528": {
      "fn": "SoulboundRedeemable.withdraw",
      "offset": [
        14573,
        14612
      ],
      "op": "POP",
      "path": "5"
    },
    "4529": {
      "fn": "SoulboundRedeemable.withdraw",
      "offset": [
        14573,
        14612
      ],
      "op": "ISZERO",
      "path": "5"
    },
    "4530": {
      "fn": "SoulboundRedeemable.withdraw",
      "offset": [
        14573,
        14612
      ],
      "op": "DUP1",
      "path": "5"
    },
    "4531": {
      "fn": "SoulboundRedeemable.withdraw",
      "offset": [
        14573,
        14612
      ],
      "op": "ISZERO",
      "path": "5"
    },
    "4532": {
      "fn": "SoulboundRedeemable.withdraw",
      "offset": [
        14573,
        14612
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x11C1"
    },
    "4535": {
      "fn": "SoulboundRedeemable.withdraw",
      "offset": [
        14573,
        14612
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "4536": {
      "fn": "SoulboundRedeemable.withdraw",
      "offset": [
        14573,
        14612
      ],
      "op": "RETURNDATASIZE",
      "path": "5"
    },
    "4537": {
      "fn": "SoulboundRedeemable.withdraw",
      "offset": [
        14573,
        14612
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "4539": {
      "fn": "SoulboundRedeemable.withdraw",
      "offset": [
        14573,
        14612
      ],
      "op": "DUP1",
      "path": "5"
    },
    "4540": {
      "fn": "SoulboundRedeemable.withdraw",
      "offset": [
        14573,
        14612
      ],
      "op": "RETURNDATACOPY",
      "path": "5"
    },
    "4541": {
      "fn": "SoulboundRedeemable.withdraw",
      "offset": [
        14573,
        14612
      ],
      "op": "RETURNDATASIZE",
      "path": "5"
    },
    "4542": {
      "fn": "SoulboundRedeemable.withdraw",
      "offset": [
        14573,
        14612
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "4544": {
      "fn": "SoulboundRedeemable.withdraw",
      "offset": [
        14573,
        14612
      ],
      "op": "REVERT",
      "path": "5"
    },
    "4545": {
      "fn": "SoulboundRedeemable.withdraw",
      "offset": [
        14573,
        14612
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "4546": {
      "op": "POP"
    },
    "4547": {
      "op": "POP"
    },
    "4548": {
      "fn": "SoulboundRedeemable.withdraw",
      "offset": [
        14681,
        14682
      ],
      "op": "PUSH1",
      "path": "5",
      "statement": 50,
      "value": "0x0"
    },
    "4550": {
      "fn": "SoulboundRedeemable.withdraw",
      "offset": [
        14666,
        14678
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0xD"
    },
    "4552": {
      "fn": "SoulboundRedeemable.withdraw",
      "offset": [
        14666,
        14682
      ],
      "op": "SSTORE",
      "path": "5"
    },
    "4553": {
      "op": "POP"
    },
    "4554": {
      "fn": "SoulboundRedeemable.withdraw",
      "jump": "o",
      "offset": [
        14094,
        14689
      ],
      "op": "JUMP",
      "path": "5"
    },
    "4555": {
      "fn": "ERC4973.ownerOf",
      "offset": [
        5306,
        5505
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "4556": {
      "fn": "ERC4973.ownerOf",
      "offset": [
        5369,
        5376
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x0"
    },
    "4558": {
      "fn": "ERC4973.ownerOf",
      "offset": [
        5400,
        5416
      ],
      "op": "DUP2",
      "path": "7"
    },
    "4559": {
      "fn": "ERC4973.ownerOf",
      "offset": [
        5400,
        5416
      ],
      "op": "DUP2",
      "path": "7"
    },
    "4560": {
      "fn": "ERC4973.ownerOf",
      "offset": [
        5400,
        5416
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "4561": {
      "fn": "ERC4973.ownerOf",
      "offset": [
        5400,
        5407
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x3"
    },
    "4563": {
      "fn": "ERC4973.ownerOf",
      "offset": [
        5400,
        5416
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x20"
    },
    "4565": {
      "fn": "ERC4973.ownerOf",
      "offset": [
        5400,
        5416
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "4566": {
      "fn": "ERC4973.ownerOf",
      "offset": [
        5400,
        5416
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x40"
    },
    "4568": {
      "fn": "ERC4973.ownerOf",
      "offset": [
        5400,
        5416
      ],
      "op": "DUP2",
      "path": "7"
    },
    "4569": {
      "fn": "ERC4973.ownerOf",
      "offset": [
        5400,
        5416
      ],
      "op": "KECCAK256",
      "path": "7"
    },
    "4570": {
      "fn": "ERC4973.ownerOf",
      "offset": [
        5400,
        5416
      ],
      "op": "SLOAD",
      "path": "7"
    },
    "4571": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4573": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4575": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4577": {
      "op": "SHL"
    },
    "4578": {
      "op": "SUB"
    },
    "4579": {
      "fn": "ERC4973.ownerOf",
      "offset": [
        5400,
        5416
      ],
      "op": "AND",
      "path": "7"
    },
    "4580": {
      "fn": "ERC4973.ownerOf",
      "offset": [
        5400,
        5416
      ],
      "op": "DUP1",
      "path": "7"
    },
    "4581": {
      "fn": "ERC4973.ownerOf",
      "offset": [
        5422,
        5482
      ],
      "op": "PUSH2",
      "path": "7",
      "statement": 51,
      "value": "0x792"
    },
    "4584": {
      "fn": "ERC4973.ownerOf",
      "offset": [
        5422,
        5482
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "4585": {
      "fn": "ERC4973.ownerOf",
      "offset": [
        5422,
        5482
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x40"
    },
    "4587": {
      "fn": "ERC4973.ownerOf",
      "offset": [
        5422,
        5482
      ],
      "op": "MLOAD",
      "path": "7"
    },
    "4588": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "4592": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "4594": {
      "op": "SHL"
    },
    "4595": {
      "fn": "ERC4973.ownerOf",
      "offset": [
        5422,
        5482
      ],
      "op": "DUP2",
      "path": "7"
    },
    "4596": {
      "fn": "ERC4973.ownerOf",
      "offset": [
        5422,
        5482
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "4597": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4599": {
      "fn": "ERC4973.ownerOf",
      "offset": [
        5422,
        5482
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x4"
    },
    "4601": {
      "fn": "ERC4973.ownerOf",
      "offset": [
        5422,
        5482
      ],
      "op": "DUP3",
      "path": "7"
    },
    "4602": {
      "fn": "ERC4973.ownerOf",
      "offset": [
        5422,
        5482
      ],
      "op": "ADD",
      "path": "7"
    },
    "4603": {
      "op": "MSTORE"
    },
    "4604": {
      "op": "PUSH1",
      "value": "0x1C"
    },
    "4606": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "4608": {
      "op": "DUP3"
    },
    "4609": {
      "op": "ADD"
    },
    "4610": {
      "op": "MSTORE"
    },
    "4611": {
      "op": "PUSH32",
      "value": "0x6F776E65724F663A20746F6B656E20646F65736E277420657869737400000000"
    },
    "4644": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "4646": {
      "op": "DUP3"
    },
    "4647": {
      "op": "ADD"
    },
    "4648": {
      "op": "MSTORE"
    },
    "4649": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "4651": {
      "op": "ADD"
    },
    "4652": {
      "fn": "ERC4973.ownerOf",
      "offset": [
        5422,
        5482
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x6E4"
    },
    "4655": {
      "op": "JUMP"
    },
    "4656": {
      "fn": "ERC4973.balanceOf",
      "offset": [
        5105,
        5302
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "4657": {
      "fn": "ERC4973.balanceOf",
      "offset": [
        5177,
        5184
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x0"
    },
    "4659": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4661": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4663": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4665": {
      "op": "SHL"
    },
    "4666": {
      "op": "SUB"
    },
    "4667": {
      "fn": "ERC4973.balanceOf",
      "offset": [
        5200,
        5219
      ],
      "op": "DUP3",
      "path": "7",
      "statement": 52
    },
    "4668": {
      "branch": 168,
      "fn": "ERC4973.balanceOf",
      "offset": [
        5200,
        5219
      ],
      "op": "AND",
      "path": "7"
    },
    "4669": {
      "fn": "ERC4973.balanceOf",
      "offset": [
        5192,
        5268
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x129D"
    },
    "4672": {
      "branch": 168,
      "fn": "ERC4973.balanceOf",
      "offset": [
        5192,
        5268
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "4673": {
      "fn": "ERC4973.balanceOf",
      "offset": [
        5192,
        5268
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x40"
    },
    "4675": {
      "fn": "ERC4973.balanceOf",
      "offset": [
        5192,
        5268
      ],
      "op": "MLOAD",
      "path": "7"
    },
    "4676": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "4680": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "4682": {
      "op": "SHL"
    },
    "4683": {
      "fn": "ERC4973.balanceOf",
      "offset": [
        5192,
        5268
      ],
      "op": "DUP2",
      "path": "7"
    },
    "4684": {
      "fn": "ERC4973.balanceOf",
      "offset": [
        5192,
        5268
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "4685": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4687": {
      "fn": "ERC4973.balanceOf",
      "offset": [
        5192,
        5268
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x4"
    },
    "4689": {
      "fn": "ERC4973.balanceOf",
      "offset": [
        5192,
        5268
      ],
      "op": "DUP3",
      "path": "7"
    },
    "4690": {
      "fn": "ERC4973.balanceOf",
      "offset": [
        5192,
        5268
      ],
      "op": "ADD",
      "path": "7"
    },
    "4691": {
      "op": "MSTORE"
    },
    "4692": {
      "op": "PUSH1",
      "value": "0x2C"
    },
    "4694": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "4696": {
      "op": "DUP3"
    },
    "4697": {
      "op": "ADD"
    },
    "4698": {
      "op": "MSTORE"
    },
    "4699": {
      "op": "PUSH32",
      "value": "0x62616C616E63654F663A2061646472657373207A65726F206973206E6F742061"
    },
    "4732": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "4734": {
      "op": "DUP3"
    },
    "4735": {
      "op": "ADD"
    },
    "4736": {
      "op": "MSTORE"
    },
    "4737": {
      "op": "PUSH12",
      "value": "0x103B30B634B21037BBB732B9"
    },
    "4750": {
      "op": "PUSH1",
      "value": "0xA1"
    },
    "4752": {
      "op": "SHL"
    },
    "4753": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "4755": {
      "op": "DUP3"
    },
    "4756": {
      "op": "ADD"
    },
    "4757": {
      "op": "MSTORE"
    },
    "4758": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "4760": {
      "op": "ADD"
    },
    "4761": {
      "fn": "ERC4973.balanceOf",
      "offset": [
        5192,
        5268
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x6E4"
    },
    "4764": {
      "op": "JUMP"
    },
    "4765": {
      "fn": "ERC4973.balanceOf",
      "offset": [
        5192,
        5268
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "4766": {
      "op": "POP"
    },
    "4767": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4769": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4771": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4773": {
      "op": "SHL"
    },
    "4774": {
      "op": "SUB"
    },
    "4775": {
      "fn": "ERC4973.balanceOf",
      "offset": [
        5281,
        5297
      ],
      "op": "AND",
      "path": "7",
      "statement": 53
    },
    "4776": {
      "fn": "ERC4973.balanceOf",
      "offset": [
        5281,
        5297
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x0"
    },
    "4778": {
      "fn": "ERC4973.balanceOf",
      "offset": [
        5281,
        5297
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "4779": {
      "fn": "ERC4973.balanceOf",
      "offset": [
        5281,
        5297
      ],
      "op": "DUP2",
      "path": "7"
    },
    "4780": {
      "fn": "ERC4973.balanceOf",
      "offset": [
        5281,
        5297
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "4781": {
      "fn": "ERC4973.balanceOf",
      "offset": [
        5281,
        5290
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x5"
    },
    "4783": {
      "fn": "ERC4973.balanceOf",
      "offset": [
        5281,
        5297
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x20"
    },
    "4785": {
      "fn": "ERC4973.balanceOf",
      "offset": [
        5281,
        5297
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "4786": {
      "fn": "ERC4973.balanceOf",
      "offset": [
        5281,
        5297
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x40"
    },
    "4788": {
      "fn": "ERC4973.balanceOf",
      "offset": [
        5281,
        5297
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "4789": {
      "fn": "ERC4973.balanceOf",
      "offset": [
        5281,
        5297
      ],
      "op": "KECCAK256",
      "path": "7"
    },
    "4790": {
      "fn": "ERC4973.balanceOf",
      "offset": [
        5281,
        5297
      ],
      "op": "SLOAD",
      "path": "7"
    },
    "4791": {
      "fn": "ERC4973.balanceOf",
      "offset": [
        5281,
        5297
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "4792": {
      "fn": "ERC4973.balanceOf",
      "jump": "o",
      "offset": [
        5105,
        5302
      ],
      "op": "JUMP",
      "path": "7"
    },
    "4793": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        2147,
        2248
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "4794": {
      "offset": [
        1401,
        1414
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x12C1"
    },
    "4797": {
      "offset": [
        1401,
        1412
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1DA7"
    },
    "4800": {
      "jump": "i",
      "offset": [
        1401,
        1414
      ],
      "op": "JUMP",
      "path": "2"
    },
    "4801": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1401,
        1414
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "4802": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        2211,
        2241
      ],
      "op": "PUSH2",
      "path": "2",
      "statement": 54,
      "value": "0x12CB"
    },
    "4805": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        2238,
        2239
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "4807": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        2211,
        2229
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x20E9"
    },
    "4810": {
      "fn": "Ownable.renounceOwnership",
      "jump": "i",
      "offset": [
        2211,
        2241
      ],
      "op": "JUMP",
      "path": "2"
    },
    "4811": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        2211,
        2241
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "4812": {
      "fn": "Ownable.renounceOwnership",
      "jump": "o",
      "offset": [
        2147,
        2248
      ],
      "op": "JUMP",
      "path": "2"
    },
    "4813": {
      "fn": "SoulboundCore.setBaseURI",
      "offset": [
        5491,
        5682
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "4814": {
      "offset": [
        1401,
        1414
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x12D5"
    },
    "4817": {
      "offset": [
        1401,
        1412
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1DA7"
    },
    "4820": {
      "jump": "i",
      "offset": [
        1401,
        1414
      ],
      "op": "JUMP",
      "path": "2"
    },
    "4821": {
      "fn": "SoulboundCore.setBaseURI",
      "offset": [
        1401,
        1414
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "4822": {
      "fn": "SoulboundCore.setBaseURI",
      "offset": [
        5602,
        5608
      ],
      "op": "DUP2",
      "path": "4"
    },
    "4823": {
      "offset": [
        1669,
        1688
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x12E8"
    },
    "4826": {
      "fn": "Allowlist.getAllowlistOwner",
      "offset": [
        2093,
        2107
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x9"
    },
    "4828": {
      "fn": "Allowlist.getAllowlistOwner",
      "offset": [
        2093,
        2107
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "4829": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4831": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4833": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4835": {
      "op": "SHL"
    },
    "4836": {
      "op": "SUB"
    },
    "4837": {
      "fn": "Allowlist.getAllowlistOwner",
      "offset": [
        2093,
        2107
      ],
      "op": "AND",
      "path": "0"
    },
    "4838": {
      "fn": "Allowlist.getAllowlistOwner",
      "offset": [
        2093,
        2107
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "4839": {
      "fn": "Allowlist.getAllowlistOwner",
      "offset": [
        2018,
        2114
      ],
      "op": "JUMP",
      "path": "0"
    },
    "4840": {
      "offset": [
        1669,
        1688
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "4841": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4843": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4845": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4847": {
      "op": "SHL"
    },
    "4848": {
      "op": "SUB"
    },
    "4849": {
      "offset": [
        1658,
        1688
      ],
      "op": "AND",
      "path": "4"
    },
    "4850": {
      "offset": [
        1658,
        1665
      ],
      "op": "DUP2",
      "path": "4"
    },
    "4851": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4853": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4855": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4857": {
      "op": "SHL"
    },
    "4858": {
      "op": "SUB"
    },
    "4859": {
      "offset": [
        1658,
        1688
      ],
      "op": "AND",
      "path": "4"
    },
    "4860": {
      "fn": "Allowlist.getAllowlistOwner",
      "offset": [
        1658,
        1688
      ],
      "op": "EQ",
      "path": "4"
    },
    "4861": {
      "offset": [
        1650,
        1713
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x1318"
    },
    "4864": {
      "offset": [
        1650,
        1713
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "4865": {
      "fn": "Allowlist.getAllowlistOwner",
      "offset": [
        1650,
        1713
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "4867": {
      "fn": "Allowlist.getAllowlistOwner",
      "offset": [
        1650,
        1713
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "4868": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "4872": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "4874": {
      "op": "SHL"
    },
    "4875": {
      "offset": [
        1650,
        1713
      ],
      "op": "DUP2",
      "path": "4"
    },
    "4876": {
      "fn": "Allowlist.getAllowlistOwner",
      "offset": [
        1650,
        1713
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "4877": {
      "fn": "Allowlist.getAllowlistOwner",
      "offset": [
        1650,
        1713
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x4"
    },
    "4879": {
      "fn": "Allowlist.getAllowlistOwner",
      "offset": [
        1650,
        1713
      ],
      "op": "ADD",
      "path": "4"
    },
    "4880": {
      "fn": "Allowlist.getAllowlistOwner",
      "offset": [
        1650,
        1713
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x6E4"
    },
    "4883": {
      "fn": "Allowlist.getAllowlistOwner",
      "offset": [
        1650,
        1713
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "4884": {
      "fn": "Allowlist.getAllowlistOwner",
      "offset": [
        1650,
        1713
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x29F5"
    },
    "4887": {
      "fn": "Allowlist.getAllowlistOwner",
      "jump": "i",
      "offset": [
        1650,
        1713
      ],
      "op": "JUMP",
      "path": "4"
    },
    "4888": {
      "fn": "Allowlist.getAllowlistOwner",
      "offset": [
        1650,
        1713
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "4889": {
      "fn": "SoulboundCore.setBaseURI",
      "offset": [
        5654,
        5675
      ],
      "op": "PUSH2",
      "path": "4",
      "statement": 55,
      "value": "0x9D5"
    },
    "4892": {
      "fn": "SoulboundCore.setBaseURI",
      "offset": [
        5666,
        5674
      ],
      "op": "DUP3",
      "path": "4"
    },
    "4893": {
      "fn": "SoulboundCore.setBaseURI",
      "offset": [
        5654,
        5665
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x213B"
    },
    "4896": {
      "fn": "SoulboundCore.setBaseURI",
      "jump": "i",
      "offset": [
        5654,
        5675
      ],
      "op": "JUMP",
      "path": "4"
    },
    "4897": {
      "fn": "ERC4973.symbol",
      "offset": [
        4653,
        4749
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "4898": {
      "fn": "ERC4973.symbol",
      "offset": [
        4709,
        4722
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x60"
    },
    "4900": {
      "fn": "ERC4973.symbol",
      "offset": [
        4737,
        4744
      ],
      "op": "PUSH1",
      "path": "7",
      "statement": 56,
      "value": "0x2"
    },
    "4902": {
      "fn": "ERC4973.symbol",
      "offset": [
        4730,
        4744
      ],
      "op": "DUP1",
      "path": "7"
    },
    "4903": {
      "fn": "ERC4973.symbol",
      "offset": [
        4730,
        4744
      ],
      "op": "SLOAD",
      "path": "7"
    },
    "4904": {
      "fn": "ERC4973.symbol",
      "offset": [
        4730,
        4744
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x7A7"
    },
    "4907": {
      "fn": "ERC4973.symbol",
      "offset": [
        4730,
        4744
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "4908": {
      "fn": "ERC4973.symbol",
      "offset": [
        4730,
        4744
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x2A23"
    },
    "4911": {
      "fn": "ERC4973.symbol",
      "jump": "i",
      "offset": [
        4730,
        4744
      ],
      "op": "JUMP",
      "path": "7"
    },
    "4912": {
      "fn": "SoulboundRedeemable.redeemMintedTokenWithSignature",
      "offset": [
        13242,
        13822
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "4913": {
      "offset": [
        1401,
        1414
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1338"
    },
    "4916": {
      "offset": [
        1401,
        1412
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1DA7"
    },
    "4919": {
      "jump": "i",
      "offset": [
        1401,
        1414
      ],
      "op": "JUMP",
      "path": "2"
    },
    "4920": {
      "fn": "SoulboundRedeemable.redeemMintedTokenWithSignature",
      "offset": [
        1401,
        1414
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "4921": {
      "fn": "SoulboundRedeemable.redeemMintedTokenWithSignature",
      "offset": [
        13508,
        13515
      ],
      "op": "DUP6",
      "path": "5"
    },
    "4922": {
      "offset": [
        1669,
        1688
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x134B"
    },
    "4925": {
      "fn": "Allowlist.getAllowlistOwner",
      "offset": [
        2093,
        2107
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x9"
    },
    "4927": {
      "fn": "Allowlist.getAllowlistOwner",
      "offset": [
        2093,
        2107
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "4928": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4930": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4932": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4934": {
      "op": "SHL"
    },
    "4935": {
      "op": "SUB"
    },
    "4936": {
      "fn": "Allowlist.getAllowlistOwner",
      "offset": [
        2093,
        2107
      ],
      "op": "AND",
      "path": "0"
    },
    "4937": {
      "fn": "Allowlist.getAllowlistOwner",
      "offset": [
        2093,
        2107
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "4938": {
      "fn": "Allowlist.getAllowlistOwner",
      "offset": [
        2018,
        2114
      ],
      "op": "JUMP",
      "path": "0"
    },
    "4939": {
      "offset": [
        1669,
        1688
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "4940": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4942": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4944": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4946": {
      "op": "SHL"
    },
    "4947": {
      "op": "SUB"
    },
    "4948": {
      "offset": [
        1658,
        1688
      ],
      "op": "AND",
      "path": "4"
    },
    "4949": {
      "offset": [
        1658,
        1665
      ],
      "op": "DUP2",
      "path": "4"
    },
    "4950": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4952": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4954": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4956": {
      "op": "SHL"
    },
    "4957": {
      "op": "SUB"
    },
    "4958": {
      "offset": [
        1658,
        1688
      ],
      "op": "AND",
      "path": "4"
    },
    "4959": {
      "fn": "Allowlist.getAllowlistOwner",
      "offset": [
        1658,
        1688
      ],
      "op": "EQ",
      "path": "4"
    },
    "4960": {
      "offset": [
        1650,
        1713
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x137B"
    },
    "4963": {
      "offset": [
        1650,
        1713
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "4964": {
      "fn": "Allowlist.getAllowlistOwner",
      "offset": [
        1650,
        1713
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "4966": {
      "fn": "Allowlist.getAllowlistOwner",
      "offset": [
        1650,
        1713
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "4967": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "4971": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "4973": {
      "op": "SHL"
    },
    "4974": {
      "offset": [
        1650,
        1713
      ],
      "op": "DUP2",
      "path": "4"
    },
    "4975": {
      "fn": "Allowlist.getAllowlistOwner",
      "offset": [
        1650,
        1713
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "4976": {
      "fn": "Allowlist.getAllowlistOwner",
      "offset": [
        1650,
        1713
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x4"
    },
    "4978": {
      "fn": "Allowlist.getAllowlistOwner",
      "offset": [
        1650,
        1713
      ],
      "op": "ADD",
      "path": "4"
    },
    "4979": {
      "fn": "Allowlist.getAllowlistOwner",
      "offset": [
        1650,
        1713
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x6E4"
    },
    "4982": {
      "fn": "Allowlist.getAllowlistOwner",
      "offset": [
        1650,
        1713
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "4983": {
      "fn": "Allowlist.getAllowlistOwner",
      "offset": [
        1650,
        1713
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x29F5"
    },
    "4986": {
      "fn": "Allowlist.getAllowlistOwner",
      "jump": "i",
      "offset": [
        1650,
        1713
      ],
      "op": "JUMP",
      "path": "4"
    },
    "4987": {
      "fn": "Allowlist.getAllowlistOwner",
      "offset": [
        1650,
        1713
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "4988": {
      "offset": [
        2194,
        2200
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x13"
    },
    "4990": {
      "fn": "Allowlist.getAllowlistOwner",
      "offset": [
        2194,
        2200
      ],
      "op": "SLOAD",
      "path": "5"
    },
    "4991": {
      "fn": "Allowlist.getAllowlistOwner",
      "offset": [
        2194,
        2200
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0xFF"
    },
    "4993": {
      "fn": "Allowlist.getAllowlistOwner",
      "offset": [
        2194,
        2200
      ],
      "op": "AND",
      "path": "5"
    },
    "4994": {
      "offset": [
        2193,
        2200
      ],
      "op": "ISZERO",
      "path": "5"
    },
    "4995": {
      "offset": [
        2185,
        2201
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x138B"
    },
    "4998": {
      "offset": [
        2185,
        2201
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "4999": {
      "fn": "Allowlist.getAllowlistOwner",
      "offset": [
        2185,
        2201
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "5001": {
      "fn": "Allowlist.getAllowlistOwner",
      "offset": [
        2185,
        2201
      ],
      "op": "DUP1",
      "path": "5"
    },
    "5002": {
      "fn": "Allowlist.getAllowlistOwner",
      "offset": [
        2185,
        2201
      ],
      "op": "REVERT",
      "path": "5"
    },
    "5003": {
      "fn": "Allowlist.getAllowlistOwner",
      "offset": [
        2185,
        2201
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "5004": {
      "offset": [
        2211,
        2217
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x13"
    },
    "5006": {
      "offset": [
        2211,
        2224
      ],
      "op": "DUP1",
      "path": "5"
    },
    "5007": {
      "fn": "Allowlist.getAllowlistOwner",
      "offset": [
        2211,
        2224
      ],
      "op": "SLOAD",
      "path": "5"
    },
    "5008": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "5010": {
      "op": "NOT"
    },
    "5011": {
      "offset": [
        2211,
        2224
      ],
      "op": "AND",
      "path": "5"
    },
    "5012": {
      "offset": [
        2220,
        2224
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x1"
    },
    "5014": {
      "offset": [
        2211,
        2224
      ],
      "op": "OR",
      "path": "5"
    },
    "5015": {
      "fn": "Allowlist.getAllowlistOwner",
      "offset": [
        2211,
        2224
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "5016": {
      "fn": "Allowlist.getAllowlistOwner",
      "offset": [
        2211,
        2224
      ],
      "op": "SSTORE",
      "path": "5"
    },
    "5017": {
      "fn": "SoulboundRedeemable.redeemMintedTokenWithSignature",
      "offset": [
        13620,
        13646
      ],
      "op": "PUSH2",
      "path": "5",
      "statement": 57,
      "value": "0x13A2"
    },
    "5020": {
      "fn": "SoulboundRedeemable.redeemMintedTokenWithSignature",
      "offset": [
        13636,
        13640
      ],
      "op": "DUP4",
      "path": "5"
    },
    "5021": {
      "fn": "SoulboundRedeemable.redeemMintedTokenWithSignature",
      "offset": [
        13642,
        13645
      ],
      "op": "DUP4",
      "path": "5"
    },
    "5022": {
      "fn": "SoulboundRedeemable.redeemMintedTokenWithSignature",
      "offset": [
        13620,
        13635
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x1952"
    },
    "5025": {
      "fn": "SoulboundRedeemable.redeemMintedTokenWithSignature",
      "jump": "i",
      "offset": [
        13620,
        13646
      ],
      "op": "JUMP",
      "path": "5"
    },
    "5026": {
      "branch": 154,
      "fn": "SoulboundRedeemable.redeemMintedTokenWithSignature",
      "offset": [
        13620,
        13646
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "5027": {
      "fn": "SoulboundRedeemable.redeemMintedTokenWithSignature",
      "offset": [
        13612,
        13674
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x13E8"
    },
    "5030": {
      "branch": 154,
      "fn": "SoulboundRedeemable.redeemMintedTokenWithSignature",
      "offset": [
        13612,
        13674
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "5031": {
      "fn": "SoulboundRedeemable.redeemMintedTokenWithSignature",
      "offset": [
        13612,
        13674
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "5033": {
      "fn": "SoulboundRedeemable.redeemMintedTokenWithSignature",
      "offset": [
        13612,
        13674
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "5034": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "5038": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "5040": {
      "op": "SHL"
    },
    "5041": {
      "fn": "SoulboundRedeemable.redeemMintedTokenWithSignature",
      "offset": [
        13612,
        13674
      ],
      "op": "DUP2",
      "path": "5"
    },
    "5042": {
      "fn": "SoulboundRedeemable.redeemMintedTokenWithSignature",
      "offset": [
        13612,
        13674
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "5043": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5045": {
      "fn": "SoulboundRedeemable.redeemMintedTokenWithSignature",
      "offset": [
        13612,
        13674
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x4"
    },
    "5047": {
      "fn": "SoulboundRedeemable.redeemMintedTokenWithSignature",
      "offset": [
        13612,
        13674
      ],
      "op": "DUP3",
      "path": "5"
    },
    "5048": {
      "fn": "SoulboundRedeemable.redeemMintedTokenWithSignature",
      "offset": [
        13612,
        13674
      ],
      "op": "ADD",
      "path": "5"
    },
    "5049": {
      "op": "MSTORE"
    },
    "5050": {
      "op": "PUSH1",
      "value": "0x17"
    },
    "5052": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "5054": {
      "op": "DUP3"
    },
    "5055": {
      "op": "ADD"
    },
    "5056": {
      "op": "MSTORE"
    },
    "5057": {
      "op": "PUSH23",
      "value": "0x2430B9B4103737BA1039B4B3B732B210313C903CB7BA97"
    },
    "5081": {
      "op": "PUSH1",
      "value": "0x49"
    },
    "5083": {
      "op": "SHL"
    },
    "5084": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "5086": {
      "op": "DUP3"
    },
    "5087": {
      "op": "ADD"
    },
    "5088": {
      "op": "MSTORE"
    },
    "5089": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "5091": {
      "op": "ADD"
    },
    "5092": {
      "fn": "SoulboundRedeemable.redeemMintedTokenWithSignature",
      "offset": [
        13612,
        13674
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x6E4"
    },
    "5095": {
      "op": "JUMP"
    },
    "5096": {
      "fn": "SoulboundRedeemable.redeemMintedTokenWithSignature",
      "offset": [
        13612,
        13674
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "5097": {
      "fn": "SoulboundRedeemable.redeemMintedTokenWithSignature",
      "offset": [
        13714,
        13815
      ],
      "op": "PUSH2",
      "path": "5",
      "statement": 58,
      "value": "0x13F3"
    },
    "5100": {
      "fn": "SoulboundRedeemable.redeemMintedTokenWithSignature",
      "offset": [
        13745,
        13754
      ],
      "op": "DUP7",
      "path": "5"
    },
    "5101": {
      "fn": "SoulboundRedeemable.redeemMintedTokenWithSignature",
      "offset": [
        13768,
        13775
      ],
      "op": "DUP7",
      "path": "5"
    },
    "5102": {
      "fn": "SoulboundRedeemable.redeemMintedTokenWithSignature",
      "offset": [
        13789,
        13805
      ],
      "op": "DUP7",
      "path": "5"
    },
    "5103": {
      "fn": "SoulboundRedeemable.redeemMintedTokenWithSignature",
      "offset": [
        13714,
        13731
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0xD52"
    },
    "5106": {
      "fn": "SoulboundRedeemable.redeemMintedTokenWithSignature",
      "jump": "i",
      "offset": [
        13714,
        13815
      ],
      "op": "JUMP",
      "path": "5"
    },
    "5107": {
      "fn": "SoulboundRedeemable.redeemMintedTokenWithSignature",
      "offset": [
        13714,
        13815
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "5108": {
      "op": "POP"
    },
    "5109": {
      "op": "POP"
    },
    "5110": {
      "offset": [
        2245,
        2251
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x13"
    },
    "5112": {
      "offset": [
        2245,
        2259
      ],
      "op": "DUP1",
      "path": "5"
    },
    "5113": {
      "fn": "SoulboundRedeemable.redeemMintedTokenWithSignature",
      "offset": [
        2245,
        2259
      ],
      "op": "SLOAD",
      "path": "5"
    },
    "5114": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "5116": {
      "op": "NOT"
    },
    "5117": {
      "offset": [
        2245,
        2259
      ],
      "op": "AND",
      "path": "5"
    },
    "5118": {
      "fn": "SoulboundRedeemable.redeemMintedTokenWithSignature",
      "offset": [
        2245,
        2259
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "5119": {
      "fn": "SoulboundRedeemable.redeemMintedTokenWithSignature",
      "offset": [
        2245,
        2259
      ],
      "op": "SSTORE",
      "path": "5"
    },
    "5120": {
      "op": "POP"
    },
    "5121": {
      "op": "POP"
    },
    "5122": {
      "op": "POP"
    },
    "5123": {
      "op": "POP"
    },
    "5124": {
      "op": "POP"
    },
    "5125": {
      "fn": "SoulboundRedeemable.redeemMintedTokenWithSignature",
      "jump": "o",
      "offset": [
        13242,
        13822
      ],
      "op": "JUMP",
      "path": "5"
    },
    "5126": {
      "fn": "SoulboundRedeemable.redeemPendingTokenWithSignature",
      "offset": [
        12104,
        12686
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "5127": {
      "offset": [
        1401,
        1414
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x140E"
    },
    "5130": {
      "offset": [
        1401,
        1412
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1DA7"
    },
    "5133": {
      "jump": "i",
      "offset": [
        1401,
        1414
      ],
      "op": "JUMP",
      "path": "2"
    },
    "5134": {
      "fn": "SoulboundRedeemable.redeemPendingTokenWithSignature",
      "offset": [
        1401,
        1414
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "5135": {
      "fn": "SoulboundRedeemable.redeemPendingTokenWithSignature",
      "offset": [
        12371,
        12378
      ],
      "op": "DUP6",
      "path": "5"
    },
    "5136": {
      "offset": [
        1669,
        1688
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x1421"
    },
    "5139": {
      "fn": "Allowlist.getAllowlistOwner",
      "offset": [
        2093,
        2107
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x9"
    },
    "5141": {
      "fn": "Allowlist.getAllowlistOwner",
      "offset": [
        2093,
        2107
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "5142": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5144": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5146": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5148": {
      "op": "SHL"
    },
    "5149": {
      "op": "SUB"
    },
    "5150": {
      "fn": "Allowlist.getAllowlistOwner",
      "offset": [
        2093,
        2107
      ],
      "op": "AND",
      "path": "0"
    },
    "5151": {
      "fn": "Allowlist.getAllowlistOwner",
      "offset": [
        2093,
        2107
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "5152": {
      "fn": "Allowlist.getAllowlistOwner",
      "offset": [
        2018,
        2114
      ],
      "op": "JUMP",
      "path": "0"
    },
    "5153": {
      "offset": [
        1669,
        1688
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "5154": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5156": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5158": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5160": {
      "op": "SHL"
    },
    "5161": {
      "op": "SUB"
    },
    "5162": {
      "offset": [
        1658,
        1688
      ],
      "op": "AND",
      "path": "4"
    },
    "5163": {
      "offset": [
        1658,
        1665
      ],
      "op": "DUP2",
      "path": "4"
    },
    "5164": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5166": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5168": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5170": {
      "op": "SHL"
    },
    "5171": {
      "op": "SUB"
    },
    "5172": {
      "offset": [
        1658,
        1688
      ],
      "op": "AND",
      "path": "4"
    },
    "5173": {
      "fn": "Allowlist.getAllowlistOwner",
      "offset": [
        1658,
        1688
      ],
      "op": "EQ",
      "path": "4"
    },
    "5174": {
      "offset": [
        1650,
        1713
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x1451"
    },
    "5177": {
      "offset": [
        1650,
        1713
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "5178": {
      "fn": "Allowlist.getAllowlistOwner",
      "offset": [
        1650,
        1713
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "5180": {
      "fn": "Allowlist.getAllowlistOwner",
      "offset": [
        1650,
        1713
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "5181": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "5185": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "5187": {
      "op": "SHL"
    },
    "5188": {
      "offset": [
        1650,
        1713
      ],
      "op": "DUP2",
      "path": "4"
    },
    "5189": {
      "fn": "Allowlist.getAllowlistOwner",
      "offset": [
        1650,
        1713
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "5190": {
      "fn": "Allowlist.getAllowlistOwner",
      "offset": [
        1650,
        1713
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x4"
    },
    "5192": {
      "fn": "Allowlist.getAllowlistOwner",
      "offset": [
        1650,
        1713
      ],
      "op": "ADD",
      "path": "4"
    },
    "5193": {
      "fn": "Allowlist.getAllowlistOwner",
      "offset": [
        1650,
        1713
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x6E4"
    },
    "5196": {
      "fn": "Allowlist.getAllowlistOwner",
      "offset": [
        1650,
        1713
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "5197": {
      "fn": "Allowlist.getAllowlistOwner",
      "offset": [
        1650,
        1713
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x29F5"
    },
    "5200": {
      "fn": "Allowlist.getAllowlistOwner",
      "jump": "i",
      "offset": [
        1650,
        1713
      ],
      "op": "JUMP",
      "path": "4"
    },
    "5201": {
      "fn": "Allowlist.getAllowlistOwner",
      "offset": [
        1650,
        1713
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "5202": {
      "offset": [
        2194,
        2200
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x13"
    },
    "5204": {
      "fn": "Allowlist.getAllowlistOwner",
      "offset": [
        2194,
        2200
      ],
      "op": "SLOAD",
      "path": "5"
    },
    "5205": {
      "fn": "Allowlist.getAllowlistOwner",
      "offset": [
        2194,
        2200
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0xFF"
    },
    "5207": {
      "fn": "Allowlist.getAllowlistOwner",
      "offset": [
        2194,
        2200
      ],
      "op": "AND",
      "path": "5"
    },
    "5208": {
      "offset": [
        2193,
        2200
      ],
      "op": "ISZERO",
      "path": "5"
    },
    "5209": {
      "offset": [
        2185,
        2201
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x1461"
    },
    "5212": {
      "offset": [
        2185,
        2201
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "5213": {
      "fn": "Allowlist.getAllowlistOwner",
      "offset": [
        2185,
        2201
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "5215": {
      "fn": "Allowlist.getAllowlistOwner",
      "offset": [
        2185,
        2201
      ],
      "op": "DUP1",
      "path": "5"
    },
    "5216": {
      "fn": "Allowlist.getAllowlistOwner",
      "offset": [
        2185,
        2201
      ],
      "op": "REVERT",
      "path": "5"
    },
    "5217": {
      "fn": "Allowlist.getAllowlistOwner",
      "offset": [
        2185,
        2201
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "5218": {
      "offset": [
        2211,
        2217
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x13"
    },
    "5220": {
      "offset": [
        2211,
        2224
      ],
      "op": "DUP1",
      "path": "5"
    },
    "5221": {
      "fn": "Allowlist.getAllowlistOwner",
      "offset": [
        2211,
        2224
      ],
      "op": "SLOAD",
      "path": "5"
    },
    "5222": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "5224": {
      "op": "NOT"
    },
    "5225": {
      "offset": [
        2211,
        2224
      ],
      "op": "AND",
      "path": "5"
    },
    "5226": {
      "offset": [
        2220,
        2224
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x1"
    },
    "5228": {
      "offset": [
        2211,
        2224
      ],
      "op": "OR",
      "path": "5"
    },
    "5229": {
      "fn": "Allowlist.getAllowlistOwner",
      "offset": [
        2211,
        2224
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "5230": {
      "fn": "Allowlist.getAllowlistOwner",
      "offset": [
        2211,
        2224
      ],
      "op": "SSTORE",
      "path": "5"
    },
    "5231": {
      "fn": "SoulboundRedeemable.redeemPendingTokenWithSignature",
      "offset": [
        12483,
        12509
      ],
      "op": "PUSH2",
      "path": "5",
      "statement": 59,
      "value": "0x1478"
    },
    "5234": {
      "fn": "SoulboundRedeemable.redeemPendingTokenWithSignature",
      "offset": [
        12499,
        12503
      ],
      "op": "DUP4",
      "path": "5"
    },
    "5235": {
      "fn": "SoulboundRedeemable.redeemPendingTokenWithSignature",
      "offset": [
        12505,
        12508
      ],
      "op": "DUP4",
      "path": "5"
    },
    "5236": {
      "fn": "SoulboundRedeemable.redeemPendingTokenWithSignature",
      "offset": [
        12483,
        12498
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x1952"
    },
    "5239": {
      "fn": "SoulboundRedeemable.redeemPendingTokenWithSignature",
      "jump": "i",
      "offset": [
        12483,
        12509
      ],
      "op": "JUMP",
      "path": "5"
    },
    "5240": {
      "branch": 155,
      "fn": "SoulboundRedeemable.redeemPendingTokenWithSignature",
      "offset": [
        12483,
        12509
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "5241": {
      "fn": "SoulboundRedeemable.redeemPendingTokenWithSignature",
      "offset": [
        12475,
        12537
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x14BE"
    },
    "5244": {
      "branch": 155,
      "fn": "SoulboundRedeemable.redeemPendingTokenWithSignature",
      "offset": [
        12475,
        12537
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "5245": {
      "fn": "SoulboundRedeemable.redeemPendingTokenWithSignature",
      "offset": [
        12475,
        12537
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "5247": {
      "fn": "SoulboundRedeemable.redeemPendingTokenWithSignature",
      "offset": [
        12475,
        12537
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "5248": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "5252": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "5254": {
      "op": "SHL"
    },
    "5255": {
      "fn": "SoulboundRedeemable.redeemPendingTokenWithSignature",
      "offset": [
        12475,
        12537
      ],
      "op": "DUP2",
      "path": "5"
    },
    "5256": {
      "fn": "SoulboundRedeemable.redeemPendingTokenWithSignature",
      "offset": [
        12475,
        12537
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "5257": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5259": {
      "fn": "SoulboundRedeemable.redeemPendingTokenWithSignature",
      "offset": [
        12475,
        12537
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x4"
    },
    "5261": {
      "fn": "SoulboundRedeemable.redeemPendingTokenWithSignature",
      "offset": [
        12475,
        12537
      ],
      "op": "DUP3",
      "path": "5"
    },
    "5262": {
      "fn": "SoulboundRedeemable.redeemPendingTokenWithSignature",
      "offset": [
        12475,
        12537
      ],
      "op": "ADD",
      "path": "5"
    },
    "5263": {
      "op": "MSTORE"
    },
    "5264": {
      "op": "PUSH1",
      "value": "0x17"
    },
    "5266": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "5268": {
      "op": "DUP3"
    },
    "5269": {
      "op": "ADD"
    },
    "5270": {
      "op": "MSTORE"
    },
    "5271": {
      "op": "PUSH23",
      "value": "0x2430B9B4103737BA1039B4B3B732B210313C903CB7BA97"
    },
    "5295": {
      "op": "PUSH1",
      "value": "0x49"
    },
    "5297": {
      "op": "SHL"
    },
    "5298": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "5300": {
      "op": "DUP3"
    },
    "5301": {
      "op": "ADD"
    },
    "5302": {
      "op": "MSTORE"
    },
    "5303": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "5305": {
      "op": "ADD"
    },
    "5306": {
      "fn": "SoulboundRedeemable.redeemPendingTokenWithSignature",
      "offset": [
        12475,
        12537
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x6E4"
    },
    "5309": {
      "op": "JUMP"
    },
    "5310": {
      "fn": "SoulboundRedeemable.redeemPendingTokenWithSignature",
      "offset": [
        12475,
        12537
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "5311": {
      "fn": "SoulboundRedeemable.redeemPendingTokenWithSignature",
      "offset": [
        12577,
        12679
      ],
      "op": "PUSH2",
      "path": "5",
      "statement": 60,
      "value": "0x13F3"
    },
    "5314": {
      "fn": "SoulboundRedeemable.redeemPendingTokenWithSignature",
      "offset": [
        12609,
        12618
      ],
      "op": "DUP7",
      "path": "5"
    },
    "5315": {
      "fn": "SoulboundRedeemable.redeemPendingTokenWithSignature",
      "offset": [
        12632,
        12639
      ],
      "op": "DUP7",
      "path": "5"
    },
    "5316": {
      "fn": "SoulboundRedeemable.redeemPendingTokenWithSignature",
      "offset": [
        12653,
        12669
      ],
      "op": "DUP7",
      "path": "5"
    },
    "5317": {
      "fn": "SoulboundRedeemable.redeemPendingTokenWithSignature",
      "offset": [
        12577,
        12595
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x1A93"
    },
    "5320": {
      "fn": "SoulboundRedeemable.redeemPendingTokenWithSignature",
      "jump": "i",
      "offset": [
        12577,
        12679
      ],
      "op": "JUMP",
      "path": "5"
    },
    "5321": {
      "fn": "SoulboundRedeemable.mintPendingRedeemableToken",
      "offset": [
        3982,
        5208
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "5322": {
      "offset": [
        1401,
        1414
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x14D1"
    },
    "5325": {
      "offset": [
        1401,
        1412
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1DA7"
    },
    "5328": {
      "jump": "i",
      "offset": [
        1401,
        1414
      ],
      "op": "JUMP",
      "path": "2"
    },
    "5329": {
      "fn": "SoulboundRedeemable.mintPendingRedeemableToken",
      "offset": [
        1401,
        1414
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "5330": {
      "fn": "SoulboundRedeemable.mintPendingRedeemableToken",
      "offset": [
        4161,
        4165
      ],
      "op": "DUP4",
      "path": "5"
    },
    "5331": {
      "offset": [
        1669,
        1688
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x14E4"
    },
    "5334": {
      "fn": "Allowlist.getAllowlistOwner",
      "offset": [
        2093,
        2107
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x9"
    },
    "5336": {
      "fn": "Allowlist.getAllowlistOwner",
      "offset": [
        2093,
        2107
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "5337": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5339": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5341": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5343": {
      "op": "SHL"
    },
    "5344": {
      "op": "SUB"
    },
    "5345": {
      "fn": "Allowlist.getAllowlistOwner",
      "offset": [
        2093,
        2107
      ],
      "op": "AND",
      "path": "0"
    },
    "5346": {
      "fn": "Allowlist.getAllowlistOwner",
      "offset": [
        2093,
        2107
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "5347": {
      "fn": "Allowlist.getAllowlistOwner",
      "offset": [
        2018,
        2114
      ],
      "op": "JUMP",
      "path": "0"
    },
    "5348": {
      "offset": [
        1669,
        1688
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "5349": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5351": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5353": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5355": {
      "op": "SHL"
    },
    "5356": {
      "op": "SUB"
    },
    "5357": {
      "offset": [
        1658,
        1688
      ],
      "op": "AND",
      "path": "4"
    },
    "5358": {
      "offset": [
        1658,
        1665
      ],
      "op": "DUP2",
      "path": "4"
    },
    "5359": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5361": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5363": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5365": {
      "op": "SHL"
    },
    "5366": {
      "op": "SUB"
    },
    "5367": {
      "offset": [
        1658,
        1688
      ],
      "op": "AND",
      "path": "4"
    },
    "5368": {
      "branch": 188,
      "fn": "Allowlist.getAllowlistOwner",
      "offset": [
        1658,
        1688
      ],
      "op": "EQ",
      "path": "4"
    },
    "5369": {
      "offset": [
        1650,
        1713
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x1514"
    },
    "5372": {
      "branch": 188,
      "offset": [
        1650,
        1713
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "5373": {
      "fn": "Allowlist.getAllowlistOwner",
      "offset": [
        1650,
        1713
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "5375": {
      "fn": "Allowlist.getAllowlistOwner",
      "offset": [
        1650,
        1713
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "5376": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "5380": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "5382": {
      "op": "SHL"
    },
    "5383": {
      "offset": [
        1650,
        1713
      ],
      "op": "DUP2",
      "path": "4"
    },
    "5384": {
      "fn": "Allowlist.getAllowlistOwner",
      "offset": [
        1650,
        1713
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "5385": {
      "fn": "Allowlist.getAllowlistOwner",
      "offset": [
        1650,
        1713
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x4"
    },
    "5387": {
      "fn": "Allowlist.getAllowlistOwner",
      "offset": [
        1650,
        1713
      ],
      "op": "ADD",
      "path": "4"
    },
    "5388": {
      "fn": "Allowlist.getAllowlistOwner",
      "offset": [
        1650,
        1713
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x6E4"
    },
    "5391": {
      "fn": "Allowlist.getAllowlistOwner",
      "offset": [
        1650,
        1713
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "5392": {
      "fn": "Allowlist.getAllowlistOwner",
      "offset": [
        1650,
        1713
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x29F5"
    },
    "5395": {
      "fn": "Allowlist.getAllowlistOwner",
      "jump": "i",
      "offset": [
        1650,
        1713
      ],
      "op": "JUMP",
      "path": "4"
    },
    "5396": {
      "fn": "Allowlist.getAllowlistOwner",
      "offset": [
        1650,
        1713
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "5397": {
      "fn": "SoulboundRedeemable.mintPendingRedeemableToken",
      "offset": [
        4437,
        4448
      ],
      "op": "PUSH1",
      "path": "5",
      "statement": 61,
      "value": "0xA"
    },
    "5399": {
      "fn": "SoulboundRedeemable.mintPendingRedeemableToken",
      "offset": [
        4437,
        4448
      ],
      "op": "SLOAD",
      "path": "5"
    },
    "5400": {
      "fn": "SoulboundRedeemable.mintPendingRedeemableToken",
      "offset": [
        4428,
        4434
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0xB"
    },
    "5402": {
      "fn": "SoulboundRedeemable.mintPendingRedeemableToken",
      "offset": [
        4428,
        4434
      ],
      "op": "SLOAD",
      "path": "5"
    },
    "5403": {
      "branch": 156,
      "fn": "SoulboundRedeemable.mintPendingRedeemableToken",
      "offset": [
        4428,
        4448
      ],
      "op": "LT",
      "path": "5"
    },
    "5404": {
      "fn": "SoulboundRedeemable.mintPendingRedeemableToken",
      "offset": [
        4420,
        4471
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x155C"
    },
    "5407": {
      "branch": 156,
      "fn": "SoulboundRedeemable.mintPendingRedeemableToken",
      "offset": [
        4420,
        4471
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "5408": {
      "fn": "SoulboundRedeemable.mintPendingRedeemableToken",
      "offset": [
        4420,
        4471
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "5410": {
      "fn": "SoulboundRedeemable.mintPendingRedeemableToken",
      "offset": [
        4420,
        4471
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "5411": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "5415": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "5417": {
      "op": "SHL"
    },
    "5418": {
      "fn": "SoulboundRedeemable.mintPendingRedeemableToken",
      "offset": [
        4420,
        4471
      ],
      "op": "DUP2",
      "path": "5"
    },
    "5419": {
      "fn": "SoulboundRedeemable.mintPendingRedeemableToken",
      "offset": [
        4420,
        4471
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "5420": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5422": {
      "fn": "SoulboundRedeemable.mintPendingRedeemableToken",
      "offset": [
        4420,
        4471
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x4"
    },
    "5424": {
      "fn": "SoulboundRedeemable.mintPendingRedeemableToken",
      "offset": [
        4420,
        4471
      ],
      "op": "DUP3",
      "path": "5"
    },
    "5425": {
      "fn": "SoulboundRedeemable.mintPendingRedeemableToken",
      "offset": [
        4420,
        4471
      ],
      "op": "ADD",
      "path": "5"
    },
    "5426": {
      "op": "MSTORE"
    },
    "5427": {
      "op": "PUSH1",
      "value": "0x12"
    },
    "5429": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "5431": {
      "op": "DUP3"
    },
    "5432": {
      "op": "ADD"
    },
    "5433": {
      "op": "MSTORE"
    },
    "5434": {
      "op": "PUSH18",
      "value": "0x24B9B9BAB29021B0B8102932B0B1B432B217"
    },
    "5453": {
      "op": "PUSH1",
      "value": "0x71"
    },
    "5455": {
      "op": "SHL"
    },
    "5456": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "5458": {
      "op": "DUP3"
    },
    "5459": {
      "op": "ADD"
    },
    "5460": {
      "op": "MSTORE"
    },
    "5461": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "5463": {
      "op": "ADD"
    },
    "5464": {
      "fn": "SoulboundRedeemable.mintPendingRedeemableToken",
      "offset": [
        4420,
        4471
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x6E4"
    },
    "5467": {
      "op": "JUMP"
    },
    "5468": {
      "fn": "SoulboundRedeemable.mintPendingRedeemableToken",
      "offset": [
        4420,
        4471
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "5469": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5471": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5473": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5475": {
      "op": "SHL"
    },
    "5476": {
      "op": "SUB"
    },
    "5477": {
      "fn": "SoulboundRedeemable.mintPendingRedeemableToken",
      "offset": [
        4542,
        4558
      ],
      "op": "DUP5",
      "path": "5",
      "statement": 62
    },
    "5478": {
      "branch": 157,
      "fn": "SoulboundRedeemable.mintPendingRedeemableToken",
      "offset": [
        4542,
        4558
      ],
      "op": "AND",
      "path": "5"
    },
    "5479": {
      "fn": "SoulboundRedeemable.mintPendingRedeemableToken",
      "offset": [
        4534,
        4584
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x1582"
    },
    "5482": {
      "branch": 157,
      "fn": "SoulboundRedeemable.mintPendingRedeemableToken",
      "offset": [
        4534,
        4584
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "5483": {
      "fn": "SoulboundRedeemable.mintPendingRedeemableToken",
      "offset": [
        4534,
        4584
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "5485": {
      "fn": "SoulboundRedeemable.mintPendingRedeemableToken",
      "offset": [
        4534,
        4584
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "5486": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "5490": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "5492": {
      "op": "SHL"
    },
    "5493": {
      "fn": "SoulboundRedeemable.mintPendingRedeemableToken",
      "offset": [
        4534,
        4584
      ],
      "op": "DUP2",
      "path": "5"
    },
    "5494": {
      "fn": "SoulboundRedeemable.mintPendingRedeemableToken",
      "offset": [
        4534,
        4584
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "5495": {
      "fn": "SoulboundRedeemable.mintPendingRedeemableToken",
      "offset": [
        4534,
        4584
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x4"
    },
    "5497": {
      "fn": "SoulboundRedeemable.mintPendingRedeemableToken",
      "offset": [
        4534,
        4584
      ],
      "op": "ADD",
      "path": "5"
    },
    "5498": {
      "fn": "SoulboundRedeemable.mintPendingRedeemableToken",
      "offset": [
        4534,
        4584
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x6E4"
    },
    "5501": {
      "fn": "SoulboundRedeemable.mintPendingRedeemableToken",
      "offset": [
        4534,
        4584
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "5502": {
      "fn": "SoulboundRedeemable.mintPendingRedeemableToken",
      "offset": [
        4534,
        4584
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x2AB9"
    },
    "5505": {
      "fn": "SoulboundRedeemable.mintPendingRedeemableToken",
      "jump": "i",
      "offset": [
        4534,
        4584
      ],
      "op": "JUMP",
      "path": "5"
    },
    "5506": {
      "fn": "SoulboundRedeemable.mintPendingRedeemableToken",
      "offset": [
        4534,
        4584
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "5507": {
      "fn": "SoulboundRedeemable.mintPendingRedeemableToken",
      "offset": [
        4662,
        4678
      ],
      "op": "PUSH2",
      "path": "5",
      "statement": 63,
      "value": "0x158B"
    },
    "5510": {
      "fn": "SoulboundRedeemable.mintPendingRedeemableToken",
      "offset": [
        4670,
        4677
      ],
      "op": "DUP4",
      "path": "5"
    },
    "5511": {
      "fn": "SoulboundRedeemable.mintPendingRedeemableToken",
      "offset": [
        4662,
        4669
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x1E01"
    },
    "5514": {
      "fn": "SoulboundRedeemable.mintPendingRedeemableToken",
      "jump": "i",
      "offset": [
        4662,
        4678
      ],
      "op": "JUMP",
      "path": "5"
    },
    "5515": {
      "fn": "SoulboundRedeemable.mintPendingRedeemableToken",
      "offset": [
        4662,
        4678
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "5516": {
      "branch": 158,
      "fn": "SoulboundRedeemable.mintPendingRedeemableToken",
      "offset": [
        4661,
        4678
      ],
      "op": "ISZERO",
      "path": "5"
    },
    "5517": {
      "fn": "SoulboundRedeemable.mintPendingRedeemableToken",
      "offset": [
        4653,
        4714
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x15D8"
    },
    "5520": {
      "branch": 158,
      "fn": "SoulboundRedeemable.mintPendingRedeemableToken",
      "offset": [
        4653,
        4714
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "5521": {
      "fn": "SoulboundRedeemable.mintPendingRedeemableToken",
      "offset": [
        4653,
        4714
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "5523": {
      "fn": "SoulboundRedeemable.mintPendingRedeemableToken",
      "offset": [
        4653,
        4714
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "5524": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "5528": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "5530": {
      "op": "SHL"
    },
    "5531": {
      "fn": "SoulboundRedeemable.mintPendingRedeemableToken",
      "offset": [
        4653,
        4714
      ],
      "op": "DUP2",
      "path": "5"
    },
    "5532": {
      "fn": "SoulboundRedeemable.mintPendingRedeemableToken",
      "offset": [
        4653,
        4714
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "5533": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5535": {
      "fn": "SoulboundRedeemable.mintPendingRedeemableToken",
      "offset": [
        4653,
        4714
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x4"
    },
    "5537": {
      "fn": "SoulboundRedeemable.mintPendingRedeemableToken",
      "offset": [
        4653,
        4714
      ],
      "op": "DUP3",
      "path": "5"
    },
    "5538": {
      "fn": "SoulboundRedeemable.mintPendingRedeemableToken",
      "offset": [
        4653,
        4714
      ],
      "op": "ADD",
      "path": "5"
    },
    "5539": {
      "op": "MSTORE"
    },
    "5540": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "5542": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "5544": {
      "op": "DUP3"
    },
    "5545": {
      "op": "ADD"
    },
    "5546": {
      "op": "MSTORE"
    },
    "5547": {
      "op": "PUSH32",
      "value": "0x4D696E74206F6620616C7265616479206578697374696E6720746F6B656E2E00"
    },
    "5580": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "5582": {
      "op": "DUP3"
    },
    "5583": {
      "op": "ADD"
    },
    "5584": {
      "op": "MSTORE"
    },
    "5585": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "5587": {
      "op": "ADD"
    },
    "5588": {
      "fn": "SoulboundRedeemable.mintPendingRedeemableToken",
      "offset": [
        4653,
        4714
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x6E4"
    },
    "5591": {
      "op": "JUMP"
    },
    "5592": {
      "fn": "SoulboundRedeemable.mintPendingRedeemableToken",
      "offset": [
        4653,
        4714
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "5593": {
      "fn": "SoulboundRedeemable.mintPendingRedeemableToken",
      "offset": [
        4801,
        4817
      ],
      "op": "PUSH1",
      "path": "5",
      "statement": 64,
      "value": "0x0"
    },
    "5595": {
      "fn": "SoulboundRedeemable.mintPendingRedeemableToken",
      "offset": [
        4801,
        4817
      ],
      "op": "DUP4",
      "path": "5"
    },
    "5596": {
      "fn": "SoulboundRedeemable.mintPendingRedeemableToken",
      "offset": [
        4801,
        4817
      ],
      "op": "DUP2",
      "path": "5"
    },
    "5597": {
      "fn": "SoulboundRedeemable.mintPendingRedeemableToken",
      "offset": [
        4801,
        4817
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "5598": {
      "fn": "SoulboundRedeemable.mintPendingRedeemableToken",
      "offset": [
        4801,
        4808
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x10"
    },
    "5600": {
      "fn": "SoulboundRedeemable.mintPendingRedeemableToken",
      "offset": [
        4801,
        4817
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "5602": {
      "fn": "SoulboundRedeemable.mintPendingRedeemableToken",
      "offset": [
        4801,
        4817
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "5603": {
      "fn": "SoulboundRedeemable.mintPendingRedeemableToken",
      "offset": [
        4801,
        4817
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "5605": {
      "fn": "SoulboundRedeemable.mintPendingRedeemableToken",
      "offset": [
        4801,
        4817
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "5606": {
      "fn": "SoulboundRedeemable.mintPendingRedeemableToken",
      "offset": [
        4801,
        4817
      ],
      "op": "KECCAK256",
      "path": "5"
    },
    "5607": {
      "fn": "SoulboundRedeemable.mintPendingRedeemableToken",
      "offset": [
        4801,
        4817
      ],
      "op": "SLOAD",
      "path": "5"
    },
    "5608": {
      "fn": "SoulboundRedeemable.mintPendingRedeemableToken",
      "offset": [
        4801,
        4817
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0xFF"
    },
    "5610": {
      "fn": "SoulboundRedeemable.mintPendingRedeemableToken",
      "offset": [
        4801,
        4817
      ],
      "op": "AND",
      "path": "5"
    },
    "5611": {
      "branch": 159,
      "fn": "SoulboundRedeemable.mintPendingRedeemableToken",
      "offset": [
        4800,
        4817
      ],
      "op": "ISZERO",
      "path": "5"
    },
    "5612": {
      "fn": "SoulboundRedeemable.mintPendingRedeemableToken",
      "offset": [
        4792,
        4852
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x1637"
    },
    "5615": {
      "branch": 159,
      "fn": "SoulboundRedeemable.mintPendingRedeemableToken",
      "offset": [
        4792,
        4852
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "5616": {
      "fn": "SoulboundRedeemable.mintPendingRedeemableToken",
      "offset": [
        4792,
        4852
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "5618": {
      "fn": "SoulboundRedeemable.mintPendingRedeemableToken",
      "offset": [
        4792,
        4852
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "5619": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "5623": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "5625": {
      "op": "SHL"
    },
    "5626": {
      "fn": "SoulboundRedeemable.mintPendingRedeemableToken",
      "offset": [
        4792,
        4852
      ],
      "op": "DUP2",
      "path": "5"
    },
    "5627": {
      "fn": "SoulboundRedeemable.mintPendingRedeemableToken",
      "offset": [
        4792,
        4852
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "5628": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5630": {
      "fn": "SoulboundRedeemable.mintPendingRedeemableToken",
      "offset": [
        4792,
        4852
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x4"
    },
    "5632": {
      "fn": "SoulboundRedeemable.mintPendingRedeemableToken",
      "offset": [
        4792,
        4852
      ],
      "op": "DUP3",
      "path": "5"
    },
    "5633": {
      "fn": "SoulboundRedeemable.mintPendingRedeemableToken",
      "offset": [
        4792,
        4852
      ],
      "op": "ADD",
      "path": "5"
    },
    "5634": {
      "op": "MSTORE"
    },
    "5635": {
      "op": "PUSH1",
      "value": "0x1E"
    },
    "5637": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "5639": {
      "op": "DUP3"
    },
    "5640": {
      "op": "ADD"
    },
    "5641": {
      "op": "MSTORE"
    },
    "5642": {
      "op": "PUSH32",
      "value": "0x4D696E74206F6620616C72656164792070656E64696E6720746F6B656E2E0000"
    },
    "5675": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "5677": {
      "op": "DUP3"
    },
    "5678": {
      "op": "ADD"
    },
    "5679": {
      "op": "MSTORE"
    },
    "5680": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "5682": {
      "op": "ADD"
    },
    "5683": {
      "fn": "SoulboundRedeemable.mintPendingRedeemableToken",
      "offset": [
        4792,
        4852
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x6E4"
    },
    "5686": {
      "op": "JUMP"
    },
    "5687": {
      "fn": "SoulboundRedeemable.mintPendingRedeemableToken",
      "offset": [
        4792,
        4852
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "5688": {
      "fn": "SoulboundRedeemable.mintPendingRedeemableToken",
      "offset": [
        4918,
        4934
      ],
      "op": "PUSH1",
      "path": "5",
      "statement": 65,
      "value": "0x0"
    },
    "5690": {
      "fn": "SoulboundRedeemable.mintPendingRedeemableToken",
      "offset": [
        4918,
        4934
      ],
      "op": "DUP4",
      "path": "5"
    },
    "5691": {
      "fn": "SoulboundRedeemable.mintPendingRedeemableToken",
      "offset": [
        4918,
        4934
      ],
      "op": "DUP2",
      "path": "5"
    },
    "5692": {
      "fn": "SoulboundRedeemable.mintPendingRedeemableToken",
      "offset": [
        4918,
        4934
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "5693": {
      "fn": "SoulboundRedeemable.mintPendingRedeemableToken",
      "offset": [
        4918,
        4925
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x10"
    },
    "5695": {
      "fn": "SoulboundRedeemable.mintPendingRedeemableToken",
      "offset": [
        4918,
        4934
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "5697": {
      "fn": "SoulboundRedeemable.mintPendingRedeemableToken",
      "offset": [
        4918,
        4934
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "5698": {
      "fn": "SoulboundRedeemable.mintPendingRedeemableToken",
      "offset": [
        4918,
        4934
      ],
      "op": "DUP2",
      "path": "5"
    },
    "5699": {
      "fn": "SoulboundRedeemable.mintPendingRedeemableToken",
      "offset": [
        4918,
        4934
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "5700": {
      "fn": "SoulboundRedeemable.mintPendingRedeemableToken",
      "offset": [
        4918,
        4934
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "5702": {
      "fn": "SoulboundRedeemable.mintPendingRedeemableToken",
      "offset": [
        4918,
        4934
      ],
      "op": "DUP1",
      "path": "5"
    },
    "5703": {
      "fn": "SoulboundRedeemable.mintPendingRedeemableToken",
      "offset": [
        4918,
        4934
      ],
      "op": "DUP4",
      "path": "5"
    },
    "5704": {
      "fn": "SoulboundRedeemable.mintPendingRedeemableToken",
      "offset": [
        4918,
        4934
      ],
      "op": "KECCAK256",
      "path": "5"
    },
    "5705": {
      "fn": "SoulboundRedeemable.mintPendingRedeemableToken",
      "offset": [
        4918,
        4941
      ],
      "op": "DUP1",
      "path": "5"
    },
    "5706": {
      "fn": "SoulboundRedeemable.mintPendingRedeemableToken",
      "offset": [
        4918,
        4941
      ],
      "op": "SLOAD",
      "path": "5"
    },
    "5707": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "5709": {
      "op": "NOT"
    },
    "5710": {
      "fn": "SoulboundRedeemable.mintPendingRedeemableToken",
      "offset": [
        4918,
        4941
      ],
      "op": "AND",
      "path": "5"
    },
    "5711": {
      "fn": "SoulboundRedeemable.mintPendingRedeemableToken",
      "offset": [
        4937,
        4941
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x1"
    },
    "5713": {
      "fn": "SoulboundRedeemable.mintPendingRedeemableToken",
      "offset": [
        4918,
        4941
      ],
      "op": "OR",
      "path": "5"
    },
    "5714": {
      "fn": "SoulboundRedeemable.mintPendingRedeemableToken",
      "offset": [
        4918,
        4941
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "5715": {
      "fn": "SoulboundRedeemable.mintPendingRedeemableToken",
      "offset": [
        4918,
        4941
      ],
      "op": "SSTORE",
      "path": "5"
    },
    "5716": {
      "fn": "SoulboundRedeemable.mintPendingRedeemableToken",
      "offset": [
        5015,
        5031
      ],
      "op": "PUSH1",
      "path": "5",
      "statement": 66,
      "value": "0x11"
    },
    "5718": {
      "fn": "SoulboundRedeemable.mintPendingRedeemableToken",
      "offset": [
        5015,
        5040
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "5719": {
      "fn": "SoulboundRedeemable.mintPendingRedeemableToken",
      "offset": [
        5015,
        5040
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "5720": {
      "fn": "SoulboundRedeemable.mintPendingRedeemableToken",
      "offset": [
        5015,
        5040
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "5721": {
      "fn": "SoulboundRedeemable.mintPendingRedeemableToken",
      "offset": [
        5015,
        5040
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "5722": {
      "fn": "SoulboundRedeemable.mintPendingRedeemableToken",
      "offset": [
        5015,
        5040
      ],
      "op": "KECCAK256",
      "path": "5"
    },
    "5723": {
      "fn": "SoulboundRedeemable.mintPendingRedeemableToken",
      "offset": [
        5015,
        5045
      ],
      "op": "DUP1",
      "path": "5"
    },
    "5724": {
      "fn": "SoulboundRedeemable.mintPendingRedeemableToken",
      "offset": [
        5015,
        5045
      ],
      "op": "SLOAD",
      "path": "5"
    },
    "5725": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5727": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5729": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5731": {
      "op": "SHL"
    },
    "5732": {
      "op": "SUB"
    },
    "5733": {
      "fn": "SoulboundRedeemable.mintPendingRedeemableToken",
      "offset": [
        5015,
        5045
      ],
      "op": "DUP7",
      "path": "5"
    },
    "5734": {
      "fn": "SoulboundRedeemable.mintPendingRedeemableToken",
      "offset": [
        5015,
        5045
      ],
      "op": "AND",
      "path": "5"
    },
    "5735": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5737": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5739": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5741": {
      "op": "SHL"
    },
    "5742": {
      "op": "SUB"
    },
    "5743": {
      "op": "NOT"
    },
    "5744": {
      "fn": "SoulboundRedeemable.mintPendingRedeemableToken",
      "offset": [
        5015,
        5045
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "5745": {
      "fn": "SoulboundRedeemable.mintPendingRedeemableToken",
      "offset": [
        5015,
        5045
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "5746": {
      "fn": "SoulboundRedeemable.mintPendingRedeemableToken",
      "offset": [
        5015,
        5045
      ],
      "op": "AND",
      "path": "5"
    },
    "5747": {
      "fn": "SoulboundRedeemable.mintPendingRedeemableToken",
      "offset": [
        5015,
        5045
      ],
      "op": "OR",
      "path": "5"
    },
    "5748": {
      "fn": "SoulboundRedeemable.mintPendingRedeemableToken",
      "offset": [
        5015,
        5045
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "5749": {
      "fn": "SoulboundRedeemable.mintPendingRedeemableToken",
      "offset": [
        5015,
        5045
      ],
      "op": "SSTORE",
      "path": "5"
    },
    "5750": {
      "fn": "SoulboundRedeemable.mintPendingRedeemableToken",
      "offset": [
        5109,
        5148
      ],
      "op": "PUSH2",
      "path": "5",
      "statement": 67,
      "value": "0x167F"
    },
    "5753": {
      "fn": "SoulboundRedeemable.mintPendingRedeemableToken",
      "offset": [
        4926,
        4933
      ],
      "op": "DUP4",
      "path": "5"
    },
    "5754": {
      "fn": "SoulboundRedeemable.mintPendingRedeemableToken",
      "offset": [
        5131,
        5147
      ],
      "op": "DUP4",
      "path": "5"
    },
    "5755": {
      "fn": "SoulboundRedeemable.mintPendingRedeemableToken",
      "offset": [
        5109,
        5121
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x169B"
    },
    "5758": {
      "fn": "SoulboundRedeemable.mintPendingRedeemableToken",
      "jump": "i",
      "offset": [
        5109,
        5148
      ],
      "op": "JUMP",
      "path": "5"
    },
    "5759": {
      "fn": "SoulboundRedeemable.mintPendingRedeemableToken",
      "offset": [
        5109,
        5148
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "5760": {
      "fn": "SoulboundRedeemable.mintPendingRedeemableToken",
      "offset": [
        5193,
        5199
      ],
      "op": "PUSH1",
      "path": "5",
      "statement": 68,
      "value": "0xB"
    },
    "5762": {
      "fn": "SoulboundRedeemable.mintPendingRedeemableToken",
      "offset": [
        5193,
        5201
      ],
      "op": "DUP1",
      "path": "5"
    },
    "5763": {
      "fn": "SoulboundRedeemable.mintPendingRedeemableToken",
      "offset": [
        5193,
        5201
      ],
      "op": "SLOAD",
      "path": "5"
    },
    "5764": {
      "fn": "SoulboundRedeemable.mintPendingRedeemableToken",
      "offset": [
        5193,
        5201
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "5765": {
      "fn": "SoulboundRedeemable.mintPendingRedeemableToken",
      "offset": [
        5193,
        5199
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "5767": {
      "fn": "SoulboundRedeemable.mintPendingRedeemableToken",
      "offset": [
        5193,
        5201
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x168F"
    },
    "5770": {
      "fn": "SoulboundRedeemable.mintPendingRedeemableToken",
      "offset": [
        5193,
        5201
      ],
      "op": "DUP4",
      "path": "5"
    },
    "5771": {
      "fn": "SoulboundRedeemable.mintPendingRedeemableToken",
      "offset": [
        5193,
        5201
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x2AFF"
    },
    "5774": {
      "fn": "SoulboundRedeemable.mintPendingRedeemableToken",
      "jump": "i",
      "offset": [
        5193,
        5201
      ],
      "op": "JUMP",
      "path": "5"
    },
    "5775": {
      "fn": "SoulboundRedeemable.mintPendingRedeemableToken",
      "offset": [
        5193,
        5201
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "5776": {
      "fn": "SoulboundRedeemable.mintPendingRedeemableToken",
      "offset": [
        5193,
        5201
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "5777": {
      "fn": "SoulboundRedeemable.mintPendingRedeemableToken",
      "offset": [
        5193,
        5201
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "5778": {
      "fn": "SoulboundRedeemable.mintPendingRedeemableToken",
      "offset": [
        5193,
        5201
      ],
      "op": "POP",
      "path": "5"
    },
    "5779": {
      "fn": "SoulboundRedeemable.mintPendingRedeemableToken",
      "offset": [
        5193,
        5201
      ],
      "op": "SSTORE",
      "path": "5"
    },
    "5780": {
      "fn": "SoulboundRedeemable.mintPendingRedeemableToken",
      "offset": [
        5193,
        5201
      ],
      "op": "POP",
      "path": "5"
    },
    "5781": {
      "offset": [
        1424,
        1425
      ],
      "op": "POP",
      "path": "2"
    },
    "5782": {
      "fn": "SoulboundRedeemable.mintPendingRedeemableToken",
      "offset": [
        3982,
        5208
      ],
      "op": "POP",
      "path": "5"
    },
    "5783": {
      "fn": "SoulboundRedeemable.mintPendingRedeemableToken",
      "offset": [
        3982,
        5208
      ],
      "op": "POP",
      "path": "5"
    },
    "5784": {
      "fn": "SoulboundRedeemable.mintPendingRedeemableToken",
      "offset": [
        3982,
        5208
      ],
      "op": "POP",
      "path": "5"
    },
    "5785": {
      "fn": "SoulboundRedeemable.mintPendingRedeemableToken",
      "offset": [
        3982,
        5208
      ],
      "op": "POP",
      "path": "5"
    },
    "5786": {
      "fn": "SoulboundRedeemable.mintPendingRedeemableToken",
      "jump": "o",
      "offset": [
        3982,
        5208
      ],
      "op": "JUMP",
      "path": "5"
    },
    "5787": {
      "fn": "IsValidWithDate.extendExpiry",
      "offset": [
        902,
        1160
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "5788": {
      "fn": "IsValidWithDate.extendExpiry",
      "offset": [
        1049,
        1071
      ],
      "op": "PUSH2",
      "path": "1",
      "statement": 69,
      "value": "0x16A5"
    },
    "5791": {
      "fn": "IsValidWithDate.extendExpiry",
      "offset": [
        1067,
        1071
      ],
      "op": "DUP2",
      "path": "1"
    },
    "5792": {
      "fn": "IsValidWithDate.extendExpiry",
      "offset": [
        1049,
        1064
      ],
      "op": "TIMESTAMP",
      "path": "1"
    },
    "5793": {
      "fn": "IsValidWithDate.extendExpiry",
      "offset": [
        1049,
        1071
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x2B18"
    },
    "5796": {
      "fn": "IsValidWithDate.extendExpiry",
      "jump": "i",
      "offset": [
        1049,
        1071
      ],
      "op": "JUMP",
      "path": "1"
    },
    "5797": {
      "fn": "IsValidWithDate.extendExpiry",
      "offset": [
        1049,
        1071
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "5798": {
      "fn": "IsValidWithDate.extendExpiry",
      "offset": [
        1022,
        1037
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "5800": {
      "fn": "IsValidWithDate.extendExpiry",
      "offset": [
        1022,
        1046
      ],
      "op": "DUP4",
      "path": "1"
    },
    "5801": {
      "fn": "IsValidWithDate.extendExpiry",
      "offset": [
        1022,
        1046
      ],
      "op": "DUP2",
      "path": "1"
    },
    "5802": {
      "fn": "IsValidWithDate.extendExpiry",
      "offset": [
        1022,
        1046
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "5803": {
      "fn": "IsValidWithDate.extendExpiry",
      "offset": [
        1022,
        1046
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "5805": {
      "fn": "IsValidWithDate.extendExpiry",
      "offset": [
        1022,
        1046
      ],
      "op": "DUP2",
      "path": "1"
    },
    "5806": {
      "fn": "IsValidWithDate.extendExpiry",
      "offset": [
        1022,
        1046
      ],
      "op": "DUP2",
      "path": "1"
    },
    "5807": {
      "fn": "IsValidWithDate.extendExpiry",
      "offset": [
        1022,
        1046
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "5808": {
      "fn": "IsValidWithDate.extendExpiry",
      "offset": [
        1022,
        1046
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "5810": {
      "fn": "IsValidWithDate.extendExpiry",
      "offset": [
        1022,
        1046
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "5811": {
      "fn": "IsValidWithDate.extendExpiry",
      "offset": [
        1022,
        1046
      ],
      "op": "DUP3",
      "path": "1"
    },
    "5812": {
      "fn": "IsValidWithDate.extendExpiry",
      "offset": [
        1022,
        1046
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "5813": {
      "fn": "IsValidWithDate.extendExpiry",
      "offset": [
        1022,
        1046
      ],
      "op": "KECCAK256",
      "path": "1"
    },
    "5814": {
      "fn": "IsValidWithDate.extendExpiry",
      "offset": [
        1022,
        1071
      ],
      "op": "SWAP3",
      "path": "1"
    },
    "5815": {
      "fn": "IsValidWithDate.extendExpiry",
      "offset": [
        1022,
        1071
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "5816": {
      "fn": "IsValidWithDate.extendExpiry",
      "offset": [
        1022,
        1071
      ],
      "op": "SWAP3",
      "path": "1"
    },
    "5817": {
      "fn": "IsValidWithDate.extendExpiry",
      "offset": [
        1022,
        1071
      ],
      "op": "SSTORE",
      "path": "1"
    },
    "5818": {
      "fn": "IsValidWithDate.extendExpiry",
      "offset": [
        1130,
        1153
      ],
      "op": "DUP1",
      "path": "1",
      "statement": 70
    },
    "5819": {
      "fn": "IsValidWithDate.extendExpiry",
      "offset": [
        1130,
        1153
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "5820": {
      "op": "DUP5"
    },
    "5821": {
      "op": "DUP2"
    },
    "5822": {
      "op": "MSTORE"
    },
    "5823": {
      "op": "SWAP2"
    },
    "5824": {
      "op": "DUP3"
    },
    "5825": {
      "op": "ADD"
    },
    "5826": {
      "op": "DUP4"
    },
    "5827": {
      "op": "SWAP1"
    },
    "5828": {
      "op": "MSTORE"
    },
    "5829": {
      "fn": "IsValidWithDate.extendExpiry",
      "offset": [
        1130,
        1153
      ],
      "op": "PUSH32",
      "path": "1",
      "value": "0x41A73BEB1018A8B63E0F451A8A4F483806142CF14BE45B1A58A23776A1E9B4BC"
    },
    "5862": {
      "fn": "IsValidWithDate.extendExpiry",
      "offset": [
        1130,
        1153
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "5863": {
      "op": "ADD"
    },
    "5864": {
      "fn": "IsValidWithDate.extendExpiry",
      "offset": [
        1130,
        1153
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "5866": {
      "fn": "IsValidWithDate.extendExpiry",
      "offset": [
        1130,
        1153
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "5867": {
      "fn": "IsValidWithDate.extendExpiry",
      "offset": [
        1130,
        1153
      ],
      "op": "DUP1",
      "path": "1"
    },
    "5868": {
      "fn": "IsValidWithDate.extendExpiry",
      "offset": [
        1130,
        1153
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "5869": {
      "fn": "IsValidWithDate.extendExpiry",
      "offset": [
        1130,
        1153
      ],
      "op": "SUB",
      "path": "1"
    },
    "5870": {
      "fn": "IsValidWithDate.extendExpiry",
      "offset": [
        1130,
        1153
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "5871": {
      "fn": "IsValidWithDate.extendExpiry",
      "offset": [
        1130,
        1153
      ],
      "op": "LOG1",
      "path": "1"
    },
    "5872": {
      "fn": "IsValidWithDate.extendExpiry",
      "offset": [
        902,
        1160
      ],
      "op": "POP",
      "path": "1"
    },
    "5873": {
      "fn": "IsValidWithDate.extendExpiry",
      "offset": [
        902,
        1160
      ],
      "op": "POP",
      "path": "1"
    },
    "5874": {
      "fn": "IsValidWithDate.extendExpiry",
      "jump": "o",
      "offset": [
        902,
        1160
      ],
      "op": "JUMP",
      "path": "1"
    },
    "5875": {
      "fn": "ERC4973.tokenURI",
      "offset": [
        4753,
        4942
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "5876": {
      "fn": "ERC4973.tokenURI",
      "offset": [
        4826,
        4839
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x60"
    },
    "5878": {
      "fn": "ERC4973.tokenURI",
      "offset": [
        4855,
        4871
      ],
      "op": "PUSH2",
      "path": "7",
      "statement": 71,
      "value": "0x16FE"
    },
    "5881": {
      "fn": "ERC4973.tokenURI",
      "offset": [
        4863,
        4870
      ],
      "op": "DUP3",
      "path": "7"
    },
    "5882": {
      "fn": "ERC4973.tokenURI",
      "offset": [
        4855,
        4862
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x1E01"
    },
    "5885": {
      "fn": "ERC4973.tokenURI",
      "jump": "i",
      "offset": [
        4855,
        4871
      ],
      "op": "JUMP",
      "path": "7"
    },
    "5886": {
      "branch": 169,
      "fn": "ERC4973.tokenURI",
      "offset": [
        4855,
        4871
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "5887": {
      "fn": "ERC4973.tokenURI",
      "offset": [
        4847,
        4905
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x174A"
    },
    "5890": {
      "branch": 169,
      "fn": "ERC4973.tokenURI",
      "offset": [
        4847,
        4905
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "5891": {
      "fn": "ERC4973.tokenURI",
      "offset": [
        4847,
        4905
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x40"
    },
    "5893": {
      "fn": "ERC4973.tokenURI",
      "offset": [
        4847,
        4905
      ],
      "op": "MLOAD",
      "path": "7"
    },
    "5894": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "5898": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "5900": {
      "op": "SHL"
    },
    "5901": {
      "fn": "ERC4973.tokenURI",
      "offset": [
        4847,
        4905
      ],
      "op": "DUP2",
      "path": "7"
    },
    "5902": {
      "fn": "ERC4973.tokenURI",
      "offset": [
        4847,
        4905
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "5903": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5905": {
      "fn": "ERC4973.tokenURI",
      "offset": [
        4847,
        4905
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x4"
    },
    "5907": {
      "fn": "ERC4973.tokenURI",
      "offset": [
        4847,
        4905
      ],
      "op": "DUP3",
      "path": "7"
    },
    "5908": {
      "fn": "ERC4973.tokenURI",
      "offset": [
        4847,
        4905
      ],
      "op": "ADD",
      "path": "7"
    },
    "5909": {
      "op": "MSTORE"
    },
    "5910": {
      "op": "PUSH1",
      "value": "0x1D"
    },
    "5912": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "5914": {
      "op": "DUP3"
    },
    "5915": {
      "op": "ADD"
    },
    "5916": {
      "op": "MSTORE"
    },
    "5917": {
      "op": "PUSH32",
      "value": "0x746F6B656E5552493A20746F6B656E20646F65736E2774206578697374000000"
    },
    "5950": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "5952": {
      "op": "DUP3"
    },
    "5953": {
      "op": "ADD"
    },
    "5954": {
      "op": "MSTORE"
    },
    "5955": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "5957": {
      "op": "ADD"
    },
    "5958": {
      "fn": "ERC4973.tokenURI",
      "offset": [
        4847,
        4905
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x6E4"
    },
    "5961": {
      "op": "JUMP"
    },
    "5962": {
      "fn": "ERC4973.tokenURI",
      "offset": [
        4847,
        4905
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "5963": {
      "fn": "ERC4973.tokenURI",
      "offset": [
        4918,
        4937
      ],
      "op": "PUSH1",
      "path": "7",
      "statement": 72,
      "value": "0x0"
    },
    "5965": {
      "fn": "ERC4973.tokenURI",
      "offset": [
        4918,
        4937
      ],
      "op": "DUP3",
      "path": "7"
    },
    "5966": {
      "fn": "ERC4973.tokenURI",
      "offset": [
        4918,
        4937
      ],
      "op": "DUP2",
      "path": "7"
    },
    "5967": {
      "fn": "ERC4973.tokenURI",
      "offset": [
        4918,
        4937
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "5968": {
      "fn": "ERC4973.tokenURI",
      "offset": [
        4918,
        4928
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x4"
    },
    "5970": {
      "fn": "ERC4973.tokenURI",
      "offset": [
        4918,
        4937
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x20"
    },
    "5972": {
      "fn": "ERC4973.tokenURI",
      "offset": [
        4918,
        4937
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "5973": {
      "fn": "ERC4973.tokenURI",
      "offset": [
        4918,
        4937
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x40"
    },
    "5975": {
      "fn": "ERC4973.tokenURI",
      "offset": [
        4918,
        4937
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "5976": {
      "fn": "ERC4973.tokenURI",
      "offset": [
        4918,
        4937
      ],
      "op": "KECCAK256",
      "path": "7"
    },
    "5977": {
      "fn": "ERC4973.tokenURI",
      "offset": [
        4911,
        4937
      ],
      "op": "DUP1",
      "path": "7"
    },
    "5978": {
      "fn": "ERC4973.tokenURI",
      "offset": [
        4911,
        4937
      ],
      "op": "SLOAD",
      "path": "7"
    },
    "5979": {
      "fn": "ERC4973.tokenURI",
      "offset": [
        4911,
        4937
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x1763"
    },
    "5982": {
      "fn": "ERC4973.tokenURI",
      "offset": [
        4911,
        4937
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "5983": {
      "fn": "ERC4973.tokenURI",
      "offset": [
        4911,
        4937
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x2A23"
    },
    "5986": {
      "fn": "ERC4973.tokenURI",
      "jump": "i",
      "offset": [
        4911,
        4937
      ],
      "op": "JUMP",
      "path": "7"
    },
    "5987": {
      "fn": "ERC4973.tokenURI",
      "offset": [
        4911,
        4937
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "5988": {
      "fn": "ERC4973.tokenURI",
      "offset": [
        4911,
        4937
      ],
      "op": "DUP1",
      "path": "7"
    },
    "5989": {
      "fn": "ERC4973.tokenURI",
      "offset": [
        4911,
        4937
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x1F"
    },
    "5991": {
      "fn": "ERC4973.tokenURI",
      "offset": [
        4911,
        4937
      ],
      "op": "ADD",
      "path": "7"
    },
    "5992": {
      "fn": "ERC4973.tokenURI",
      "offset": [
        4911,
        4937
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x20"
    },
    "5994": {
      "fn": "ERC4973.tokenURI",
      "offset": [
        4911,
        4937
      ],
      "op": "DUP1",
      "path": "7"
    },
    "5995": {
      "fn": "ERC4973.tokenURI",
      "offset": [
        4911,
        4937
      ],
      "op": "SWAP2",
      "path": "7"
    },
    "5996": {
      "fn": "ERC4973.tokenURI",
      "offset": [
        4911,
        4937
      ],
      "op": "DIV",
      "path": "7"
    },
    "5997": {
      "fn": "ERC4973.tokenURI",
      "offset": [
        4911,
        4937
      ],
      "op": "MUL",
      "path": "7"
    },
    "5998": {
      "fn": "ERC4973.tokenURI",
      "offset": [
        4911,
        4937
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x20"
    },
    "6000": {
      "fn": "ERC4973.tokenURI",
      "offset": [
        4911,
        4937
      ],
      "op": "ADD",
      "path": "7"
    },
    "6001": {
      "fn": "ERC4973.tokenURI",
      "offset": [
        4911,
        4937
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x40"
    },
    "6003": {
      "fn": "ERC4973.tokenURI",
      "offset": [
        4911,
        4937
      ],
      "op": "MLOAD",
      "path": "7"
    },
    "6004": {
      "fn": "ERC4973.tokenURI",
      "offset": [
        4911,
        4937
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "6005": {
      "fn": "ERC4973.tokenURI",
      "offset": [
        4911,
        4937
      ],
      "op": "DUP2",
      "path": "7"
    },
    "6006": {
      "fn": "ERC4973.tokenURI",
      "offset": [
        4911,
        4937
      ],
      "op": "ADD",
      "path": "7"
    },
    "6007": {
      "fn": "ERC4973.tokenURI",
      "offset": [
        4911,
        4937
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x40"
    },
    "6009": {
      "fn": "ERC4973.tokenURI",
      "offset": [
        4911,
        4937
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "6010": {
      "fn": "ERC4973.tokenURI",
      "offset": [
        4911,
        4937
      ],
      "op": "DUP1",
      "path": "7"
    },
    "6011": {
      "fn": "ERC4973.tokenURI",
      "offset": [
        4911,
        4937
      ],
      "op": "SWAP3",
      "path": "7"
    },
    "6012": {
      "fn": "ERC4973.tokenURI",
      "offset": [
        4911,
        4937
      ],
      "op": "SWAP2",
      "path": "7"
    },
    "6013": {
      "fn": "ERC4973.tokenURI",
      "offset": [
        4911,
        4937
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "6014": {
      "fn": "ERC4973.tokenURI",
      "offset": [
        4911,
        4937
      ],
      "op": "DUP2",
      "path": "7"
    },
    "6015": {
      "fn": "ERC4973.tokenURI",
      "offset": [
        4911,
        4937
      ],
      "op": "DUP2",
      "path": "7"
    },
    "6016": {
      "fn": "ERC4973.tokenURI",
      "offset": [
        4911,
        4937
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "6017": {
      "fn": "ERC4973.tokenURI",
      "offset": [
        4911,
        4937
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x20"
    },
    "6019": {
      "fn": "ERC4973.tokenURI",
      "offset": [
        4911,
        4937
      ],
      "op": "ADD",
      "path": "7"
    },
    "6020": {
      "fn": "ERC4973.tokenURI",
      "offset": [
        4911,
        4937
      ],
      "op": "DUP3",
      "path": "7"
    },
    "6021": {
      "fn": "ERC4973.tokenURI",
      "offset": [
        4911,
        4937
      ],
      "op": "DUP1",
      "path": "7"
    },
    "6022": {
      "fn": "ERC4973.tokenURI",
      "offset": [
        4911,
        4937
      ],
      "op": "SLOAD",
      "path": "7"
    },
    "6023": {
      "fn": "ERC4973.tokenURI",
      "offset": [
        4911,
        4937
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x178F"
    },
    "6026": {
      "fn": "ERC4973.tokenURI",
      "offset": [
        4911,
        4937
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "6027": {
      "fn": "ERC4973.tokenURI",
      "offset": [
        4911,
        4937
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x2A23"
    },
    "6030": {
      "fn": "ERC4973.tokenURI",
      "jump": "i",
      "offset": [
        4911,
        4937
      ],
      "op": "JUMP",
      "path": "7"
    },
    "6031": {
      "fn": "ERC4973.tokenURI",
      "offset": [
        4911,
        4937
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "6032": {
      "fn": "ERC4973.tokenURI",
      "offset": [
        4911,
        4937
      ],
      "op": "DUP1",
      "path": "7"
    },
    "6033": {
      "fn": "ERC4973.tokenURI",
      "offset": [
        4911,
        4937
      ],
      "op": "ISZERO",
      "path": "7"
    },
    "6034": {
      "fn": "ERC4973.tokenURI",
      "offset": [
        4911,
        4937
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x17DC"
    },
    "6037": {
      "fn": "ERC4973.tokenURI",
      "offset": [
        4911,
        4937
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "6038": {
      "fn": "ERC4973.tokenURI",
      "offset": [
        4911,
        4937
      ],
      "op": "DUP1",
      "path": "7"
    },
    "6039": {
      "fn": "ERC4973.tokenURI",
      "offset": [
        4911,
        4937
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x1F"
    },
    "6041": {
      "fn": "ERC4973.tokenURI",
      "offset": [
        4911,
        4937
      ],
      "op": "LT",
      "path": "7"
    },
    "6042": {
      "fn": "ERC4973.tokenURI",
      "offset": [
        4911,
        4937
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x17B1"
    },
    "6045": {
      "fn": "ERC4973.tokenURI",
      "offset": [
        4911,
        4937
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "6046": {
      "fn": "ERC4973.tokenURI",
      "offset": [
        4911,
        4937
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x100"
    },
    "6049": {
      "fn": "ERC4973.tokenURI",
      "offset": [
        4911,
        4937
      ],
      "op": "DUP1",
      "path": "7"
    },
    "6050": {
      "fn": "ERC4973.tokenURI",
      "offset": [
        4911,
        4937
      ],
      "op": "DUP4",
      "path": "7"
    },
    "6051": {
      "fn": "ERC4973.tokenURI",
      "offset": [
        4911,
        4937
      ],
      "op": "SLOAD",
      "path": "7"
    },
    "6052": {
      "fn": "ERC4973.tokenURI",
      "offset": [
        4911,
        4937
      ],
      "op": "DIV",
      "path": "7"
    },
    "6053": {
      "fn": "ERC4973.tokenURI",
      "offset": [
        4911,
        4937
      ],
      "op": "MUL",
      "path": "7"
    },
    "6054": {
      "fn": "ERC4973.tokenURI",
      "offset": [
        4911,
        4937
      ],
      "op": "DUP4",
      "path": "7"
    },
    "6055": {
      "fn": "ERC4973.tokenURI",
      "offset": [
        4911,
        4937
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "6056": {
      "fn": "ERC4973.tokenURI",
      "offset": [
        4911,
        4937
      ],
      "op": "SWAP2",
      "path": "7"
    },
    "6057": {
      "fn": "ERC4973.tokenURI",
      "offset": [
        4911,
        4937
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x20"
    },
    "6059": {
      "fn": "ERC4973.tokenURI",
      "offset": [
        4911,
        4937
      ],
      "op": "ADD",
      "path": "7"
    },
    "6060": {
      "fn": "ERC4973.tokenURI",
      "offset": [
        4911,
        4937
      ],
      "op": "SWAP2",
      "path": "7"
    },
    "6061": {
      "fn": "ERC4973.tokenURI",
      "offset": [
        4911,
        4937
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x17DC"
    },
    "6064": {
      "fn": "ERC4973.tokenURI",
      "offset": [
        4911,
        4937
      ],
      "op": "JUMP",
      "path": "7"
    },
    "6065": {
      "fn": "ERC4973.tokenURI",
      "offset": [
        4911,
        4937
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "6066": {
      "fn": "ERC4973.tokenURI",
      "offset": [
        4911,
        4937
      ],
      "op": "DUP3",
      "path": "7"
    },
    "6067": {
      "fn": "ERC4973.tokenURI",
      "offset": [
        4911,
        4937
      ],
      "op": "ADD",
      "path": "7"
    },
    "6068": {
      "fn": "ERC4973.tokenURI",
      "offset": [
        4911,
        4937
      ],
      "op": "SWAP2",
      "path": "7"
    },
    "6069": {
      "fn": "ERC4973.tokenURI",
      "offset": [
        4911,
        4937
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "6070": {
      "fn": "ERC4973.tokenURI",
      "offset": [
        4911,
        4937
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x0"
    },
    "6072": {
      "fn": "ERC4973.tokenURI",
      "offset": [
        4911,
        4937
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "6073": {
      "fn": "ERC4973.tokenURI",
      "offset": [
        4911,
        4937
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x20"
    },
    "6075": {
      "fn": "ERC4973.tokenURI",
      "offset": [
        4911,
        4937
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x0"
    },
    "6077": {
      "fn": "ERC4973.tokenURI",
      "offset": [
        4911,
        4937
      ],
      "op": "KECCAK256",
      "path": "7"
    },
    "6078": {
      "fn": "ERC4973.tokenURI",
      "offset": [
        4911,
        4937
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "6079": {
      "fn": "ERC4973.tokenURI",
      "offset": [
        4911,
        4937
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "6080": {
      "fn": "ERC4973.tokenURI",
      "offset": [
        4911,
        4937
      ],
      "op": "DUP2",
      "path": "7"
    },
    "6081": {
      "fn": "ERC4973.tokenURI",
      "offset": [
        4911,
        4937
      ],
      "op": "SLOAD",
      "path": "7"
    },
    "6082": {
      "fn": "ERC4973.tokenURI",
      "offset": [
        4911,
        4937
      ],
      "op": "DUP2",
      "path": "7"
    },
    "6083": {
      "fn": "ERC4973.tokenURI",
      "offset": [
        4911,
        4937
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "6084": {
      "fn": "ERC4973.tokenURI",
      "offset": [
        4911,
        4937
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "6085": {
      "fn": "ERC4973.tokenURI",
      "offset": [
        4911,
        4937
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x1"
    },
    "6087": {
      "fn": "ERC4973.tokenURI",
      "offset": [
        4911,
        4937
      ],
      "op": "ADD",
      "path": "7"
    },
    "6088": {
      "fn": "ERC4973.tokenURI",
      "offset": [
        4911,
        4937
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "6089": {
      "fn": "ERC4973.tokenURI",
      "offset": [
        4911,
        4937
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x20"
    },
    "6091": {
      "fn": "ERC4973.tokenURI",
      "offset": [
        4911,
        4937
      ],
      "op": "ADD",
      "path": "7"
    },
    "6092": {
      "fn": "ERC4973.tokenURI",
      "offset": [
        4911,
        4937
      ],
      "op": "DUP1",
      "path": "7"
    },
    "6093": {
      "fn": "ERC4973.tokenURI",
      "offset": [
        4911,
        4937
      ],
      "op": "DUP4",
      "path": "7"
    },
    "6094": {
      "fn": "ERC4973.tokenURI",
      "offset": [
        4911,
        4937
      ],
      "op": "GT",
      "path": "7"
    },
    "6095": {
      "fn": "ERC4973.tokenURI",
      "offset": [
        4911,
        4937
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x17BF"
    },
    "6098": {
      "fn": "ERC4973.tokenURI",
      "offset": [
        4911,
        4937
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "6099": {
      "fn": "ERC4973.tokenURI",
      "offset": [
        4911,
        4937
      ],
      "op": "DUP3",
      "path": "7"
    },
    "6100": {
      "fn": "ERC4973.tokenURI",
      "offset": [
        4911,
        4937
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "6101": {
      "fn": "ERC4973.tokenURI",
      "offset": [
        4911,
        4937
      ],
      "op": "SUB",
      "path": "7"
    },
    "6102": {
      "fn": "ERC4973.tokenURI",
      "offset": [
        4911,
        4937
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x1F"
    },
    "6104": {
      "fn": "ERC4973.tokenURI",
      "offset": [
        4911,
        4937
      ],
      "op": "AND",
      "path": "7"
    },
    "6105": {
      "fn": "ERC4973.tokenURI",
      "offset": [
        4911,
        4937
      ],
      "op": "DUP3",
      "path": "7"
    },
    "6106": {
      "fn": "ERC4973.tokenURI",
      "offset": [
        4911,
        4937
      ],
      "op": "ADD",
      "path": "7"
    },
    "6107": {
      "fn": "ERC4973.tokenURI",
      "offset": [
        4911,
        4937
      ],
      "op": "SWAP2",
      "path": "7"
    },
    "6108": {
      "fn": "ERC4973.tokenURI",
      "offset": [
        4911,
        4937
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "6109": {
      "fn": "ERC4973.tokenURI",
      "offset": [
        4911,
        4937
      ],
      "op": "POP",
      "path": "7"
    },
    "6110": {
      "fn": "ERC4973.tokenURI",
      "offset": [
        4911,
        4937
      ],
      "op": "POP",
      "path": "7"
    },
    "6111": {
      "fn": "ERC4973.tokenURI",
      "offset": [
        4911,
        4937
      ],
      "op": "POP",
      "path": "7"
    },
    "6112": {
      "fn": "ERC4973.tokenURI",
      "offset": [
        4911,
        4937
      ],
      "op": "POP",
      "path": "7"
    },
    "6113": {
      "fn": "ERC4973.tokenURI",
      "offset": [
        4911,
        4937
      ],
      "op": "POP",
      "path": "7"
    },
    "6114": {
      "fn": "ERC4973.tokenURI",
      "offset": [
        4911,
        4937
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "6115": {
      "fn": "ERC4973.tokenURI",
      "offset": [
        4911,
        4937
      ],
      "op": "POP",
      "path": "7"
    },
    "6116": {
      "fn": "ERC4973.tokenURI",
      "offset": [
        4753,
        4942
      ],
      "op": "SWAP2",
      "path": "7"
    },
    "6117": {
      "fn": "ERC4973.tokenURI",
      "offset": [
        4753,
        4942
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "6118": {
      "fn": "ERC4973.tokenURI",
      "offset": [
        4753,
        4942
      ],
      "op": "POP",
      "path": "7"
    },
    "6119": {
      "fn": "ERC4973.tokenURI",
      "jump": "o",
      "offset": [
        4753,
        4942
      ],
      "op": "JUMP",
      "path": "7"
    },
    "6120": {
      "fn": "Soulbound._getBaseURI",
      "offset": [
        7338,
        7585
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "6121": {
      "fn": "Soulbound._getBaseURI",
      "offset": [
        7381,
        7403
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x60"
    },
    "6123": {
      "fn": "Soulbound._getBaseURI",
      "offset": [
        7479,
        7486
      ],
      "op": "PUSH1",
      "path": "3",
      "statement": 73,
      "value": "0x7"
    },
    "6125": {
      "fn": "Soulbound._getBaseURI",
      "offset": [
        7473,
        7494
      ],
      "op": "DUP1",
      "path": "3"
    },
    "6126": {
      "fn": "Soulbound._getBaseURI",
      "offset": [
        7473,
        7494
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "6127": {
      "fn": "Soulbound._getBaseURI",
      "offset": [
        7473,
        7494
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x17F7"
    },
    "6130": {
      "fn": "Soulbound._getBaseURI",
      "offset": [
        7473,
        7494
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "6131": {
      "fn": "Soulbound._getBaseURI",
      "offset": [
        7473,
        7494
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x2A23"
    },
    "6134": {
      "fn": "Soulbound._getBaseURI",
      "jump": "i",
      "offset": [
        7473,
        7494
      ],
      "op": "JUMP",
      "path": "3"
    },
    "6135": {
      "fn": "Soulbound._getBaseURI",
      "offset": [
        7473,
        7494
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "6136": {
      "fn": "Soulbound._getBaseURI",
      "offset": [
        7473,
        7494
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "6137": {
      "fn": "Soulbound._getBaseURI",
      "offset": [
        7473,
        7494
      ],
      "op": "POP",
      "path": "3"
    },
    "6138": {
      "fn": "Soulbound._getBaseURI",
      "offset": [
        7498,
        7499
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "6140": {
      "branch": 174,
      "fn": "Soulbound._getBaseURI",
      "offset": [
        7473,
        7499
      ],
      "op": "SUB",
      "path": "3"
    },
    "6141": {
      "fn": "Soulbound._getBaseURI",
      "offset": [
        7465,
        7517
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x1838"
    },
    "6144": {
      "branch": 174,
      "fn": "Soulbound._getBaseURI",
      "offset": [
        7465,
        7517
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "6145": {
      "fn": "Soulbound._getBaseURI",
      "offset": [
        7465,
        7517
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "6147": {
      "fn": "Soulbound._getBaseURI",
      "offset": [
        7465,
        7517
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "6148": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "6152": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "6154": {
      "op": "SHL"
    },
    "6155": {
      "fn": "Soulbound._getBaseURI",
      "offset": [
        7465,
        7517
      ],
      "op": "DUP2",
      "path": "3"
    },
    "6156": {
      "fn": "Soulbound._getBaseURI",
      "offset": [
        7465,
        7517
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "6157": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "6159": {
      "fn": "Soulbound._getBaseURI",
      "offset": [
        7465,
        7517
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x4"
    },
    "6161": {
      "fn": "Soulbound._getBaseURI",
      "offset": [
        7465,
        7517
      ],
      "op": "DUP3",
      "path": "3"
    },
    "6162": {
      "fn": "Soulbound._getBaseURI",
      "offset": [
        7465,
        7517
      ],
      "op": "ADD",
      "path": "3"
    },
    "6163": {
      "op": "MSTORE"
    },
    "6164": {
      "op": "PUSH1",
      "value": "0xD"
    },
    "6166": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "6168": {
      "op": "DUP3"
    },
    "6169": {
      "op": "ADD"
    },
    "6170": {
      "op": "MSTORE"
    },
    "6171": {
      "op": "PUSH13",
      "value": "0x456D7074792062617365555249"
    },
    "6185": {
      "op": "PUSH1",
      "value": "0x98"
    },
    "6187": {
      "op": "SHL"
    },
    "6188": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "6190": {
      "op": "DUP3"
    },
    "6191": {
      "op": "ADD"
    },
    "6192": {
      "op": "MSTORE"
    },
    "6193": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "6195": {
      "op": "ADD"
    },
    "6196": {
      "fn": "Soulbound._getBaseURI",
      "offset": [
        7465,
        7517
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x6E4"
    },
    "6199": {
      "op": "JUMP"
    },
    "6200": {
      "fn": "Soulbound._getBaseURI",
      "offset": [
        7465,
        7517
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "6201": {
      "fn": "Soulbound._getBaseURI",
      "offset": [
        7571,
        7578
      ],
      "op": "PUSH1",
      "path": "3",
      "statement": 74,
      "value": "0x7"
    },
    "6203": {
      "fn": "Soulbound._getBaseURI",
      "offset": [
        7560,
        7578
      ],
      "op": "DUP1",
      "path": "3"
    },
    "6204": {
      "fn": "Soulbound._getBaseURI",
      "offset": [
        7560,
        7578
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "6205": {
      "fn": "Soulbound._getBaseURI",
      "offset": [
        7560,
        7578
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x7A7"
    },
    "6208": {
      "fn": "Soulbound._getBaseURI",
      "offset": [
        7560,
        7578
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "6209": {
      "fn": "Soulbound._getBaseURI",
      "offset": [
        7560,
        7578
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x2A23"
    },
    "6212": {
      "fn": "Soulbound._getBaseURI",
      "jump": "i",
      "offset": [
        7560,
        7578
      ],
      "op": "JUMP",
      "path": "3"
    },
    "6213": {
      "fn": "SoulboundCore.issueWithSignature",
      "offset": [
        2769,
        3767
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "6214": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6216": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6218": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "6220": {
      "op": "SHL"
    },
    "6221": {
      "op": "SUB"
    },
    "6222": {
      "fn": "SoulboundCore.issueWithSignature",
      "offset": [
        3024,
        3042
      ],
      "op": "DUP6",
      "path": "4",
      "statement": 75
    },
    "6223": {
      "branch": 189,
      "fn": "SoulboundCore.issueWithSignature",
      "offset": [
        3024,
        3042
      ],
      "op": "AND",
      "path": "4"
    },
    "6224": {
      "fn": "SoulboundCore.issueWithSignature",
      "offset": [
        3016,
        3068
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x186B"
    },
    "6227": {
      "branch": 189,
      "fn": "SoulboundCore.issueWithSignature",
      "offset": [
        3016,
        3068
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "6228": {
      "fn": "SoulboundCore.issueWithSignature",
      "offset": [
        3016,
        3068
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "6230": {
      "fn": "SoulboundCore.issueWithSignature",
      "offset": [
        3016,
        3068
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "6231": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "6235": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "6237": {
      "op": "SHL"
    },
    "6238": {
      "fn": "SoulboundCore.issueWithSignature",
      "offset": [
        3016,
        3068
      ],
      "op": "DUP2",
      "path": "4"
    },
    "6239": {
      "fn": "SoulboundCore.issueWithSignature",
      "offset": [
        3016,
        3068
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "6240": {
      "fn": "SoulboundCore.issueWithSignature",
      "offset": [
        3016,
        3068
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x4"
    },
    "6242": {
      "fn": "SoulboundCore.issueWithSignature",
      "offset": [
        3016,
        3068
      ],
      "op": "ADD",
      "path": "4"
    },
    "6243": {
      "fn": "SoulboundCore.issueWithSignature",
      "offset": [
        3016,
        3068
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x6E4"
    },
    "6246": {
      "fn": "SoulboundCore.issueWithSignature",
      "offset": [
        3016,
        3068
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "6247": {
      "fn": "SoulboundCore.issueWithSignature",
      "offset": [
        3016,
        3068
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x2AB9"
    },
    "6250": {
      "fn": "SoulboundCore.issueWithSignature",
      "jump": "i",
      "offset": [
        3016,
        3068
      ],
      "op": "JUMP",
      "path": "4"
    },
    "6251": {
      "fn": "SoulboundCore.issueWithSignature",
      "offset": [
        3016,
        3068
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "6252": {
      "fn": "SoulboundCore.issueWithSignature",
      "offset": [
        3303,
        3306
      ],
      "op": "DUP3",
      "path": "4",
      "statement": 76
    },
    "6253": {
      "fn": "SoulboundCore.issueWithSignature",
      "offset": [
        3303,
        3313
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "6254": {
      "fn": "SoulboundCore.issueWithSignature",
      "offset": [
        3317,
        3319
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x41"
    },
    "6256": {
      "branch": 190,
      "fn": "SoulboundCore.issueWithSignature",
      "offset": [
        3303,
        3319
      ],
      "op": "EQ",
      "path": "4"
    },
    "6257": {
      "fn": "SoulboundCore.issueWithSignature",
      "offset": [
        3295,
        3348
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x18B7"
    },
    "6260": {
      "branch": 190,
      "fn": "SoulboundCore.issueWithSignature",
      "offset": [
        3295,
        3348
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "6261": {
      "fn": "SoulboundCore.issueWithSignature",
      "offset": [
        3295,
        3348
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "6263": {
      "fn": "SoulboundCore.issueWithSignature",
      "offset": [
        3295,
        3348
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "6264": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "6268": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "6270": {
      "op": "SHL"
    },
    "6271": {
      "fn": "SoulboundCore.issueWithSignature",
      "offset": [
        3295,
        3348
      ],
      "op": "DUP2",
      "path": "4"
    },
    "6272": {
      "fn": "SoulboundCore.issueWithSignature",
      "offset": [
        3295,
        3348
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "6273": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "6275": {
      "fn": "SoulboundCore.issueWithSignature",
      "offset": [
        3295,
        3348
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x4"
    },
    "6277": {
      "fn": "SoulboundCore.issueWithSignature",
      "offset": [
        3295,
        3348
      ],
      "op": "DUP3",
      "path": "4"
    },
    "6278": {
      "fn": "SoulboundCore.issueWithSignature",
      "offset": [
        3295,
        3348
      ],
      "op": "ADD",
      "path": "4"
    },
    "6279": {
      "op": "MSTORE"
    },
    "6280": {
      "op": "PUSH1",
      "value": "0x18"
    },
    "6282": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "6284": {
      "op": "DUP3"
    },
    "6285": {
      "op": "ADD"
    },
    "6286": {
      "op": "MSTORE"
    },
    "6287": {
      "op": "PUSH24",
      "value": "0x92DCECC2D8D2C840E6D2CEDCC2E8EAE4CA40D8CADCCEE8D"
    },
    "6312": {
      "op": "PUSH1",
      "value": "0x43"
    },
    "6314": {
      "op": "SHL"
    },
    "6315": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "6317": {
      "op": "DUP3"
    },
    "6318": {
      "op": "ADD"
    },
    "6319": {
      "op": "MSTORE"
    },
    "6320": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "6322": {
      "op": "ADD"
    },
    "6323": {
      "fn": "SoulboundCore.issueWithSignature",
      "offset": [
        3295,
        3348
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x6E4"
    },
    "6326": {
      "op": "JUMP"
    },
    "6327": {
      "fn": "SoulboundCore.issueWithSignature",
      "offset": [
        3295,
        3348
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "6328": {
      "fn": "SoulboundCore.issueWithSignature",
      "offset": [
        3475,
        3501
      ],
      "op": "PUSH2",
      "path": "4",
      "statement": 77,
      "value": "0x18C1"
    },
    "6331": {
      "fn": "SoulboundCore.issueWithSignature",
      "offset": [
        3491,
        3495
      ],
      "op": "DUP5",
      "path": "4"
    },
    "6332": {
      "fn": "SoulboundCore.issueWithSignature",
      "offset": [
        3497,
        3500
      ],
      "op": "DUP5",
      "path": "4"
    },
    "6333": {
      "fn": "SoulboundCore.issueWithSignature",
      "offset": [
        3475,
        3490
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x1952"
    },
    "6336": {
      "fn": "SoulboundCore.issueWithSignature",
      "jump": "i",
      "offset": [
        3475,
        3501
      ],
      "op": "JUMP",
      "path": "4"
    },
    "6337": {
      "branch": 191,
      "fn": "SoulboundCore.issueWithSignature",
      "offset": [
        3475,
        3501
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "6338": {
      "fn": "SoulboundCore.issueWithSignature",
      "offset": [
        3467,
        3531
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x1909"
    },
    "6341": {
      "branch": 191,
      "fn": "SoulboundCore.issueWithSignature",
      "offset": [
        3467,
        3531
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "6342": {
      "fn": "SoulboundCore.issueWithSignature",
      "offset": [
        3467,
        3531
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "6344": {
      "fn": "SoulboundCore.issueWithSignature",
      "offset": [
        3467,
        3531
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "6345": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "6349": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "6351": {
      "op": "SHL"
    },
    "6352": {
      "fn": "SoulboundCore.issueWithSignature",
      "offset": [
        3467,
        3531
      ],
      "op": "DUP2",
      "path": "4"
    },
    "6353": {
      "fn": "SoulboundCore.issueWithSignature",
      "offset": [
        3467,
        3531
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "6354": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "6356": {
      "fn": "SoulboundCore.issueWithSignature",
      "offset": [
        3467,
        3531
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x4"
    },
    "6358": {
      "fn": "SoulboundCore.issueWithSignature",
      "offset": [
        3467,
        3531
      ],
      "op": "DUP3",
      "path": "4"
    },
    "6359": {
      "fn": "SoulboundCore.issueWithSignature",
      "offset": [
        3467,
        3531
      ],
      "op": "ADD",
      "path": "4"
    },
    "6360": {
      "op": "MSTORE"
    },
    "6361": {
      "op": "PUSH1",
      "value": "0x19"
    },
    "6363": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "6365": {
      "op": "DUP3"
    },
    "6366": {
      "op": "ADD"
    },
    "6367": {
      "op": "MSTORE"
    },
    "6368": {
      "op": "PUSH25",
      "value": "0x2430B9B4103737BA1039B4B3B732B210313C9037BBB732B917"
    },
    "6394": {
      "op": "PUSH1",
      "value": "0x39"
    },
    "6396": {
      "op": "SHL"
    },
    "6397": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "6399": {
      "op": "DUP3"
    },
    "6400": {
      "op": "ADD"
    },
    "6401": {
      "op": "MSTORE"
    },
    "6402": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "6404": {
      "op": "ADD"
    },
    "6405": {
      "fn": "SoulboundCore.issueWithSignature",
      "offset": [
        3467,
        3531
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x6E4"
    },
    "6408": {
      "op": "JUMP"
    },
    "6409": {
      "fn": "SoulboundCore.issueWithSignature",
      "offset": [
        3467,
        3531
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "6410": {
      "fn": "SoulboundCore.issueWithSignature",
      "offset": [
        3630,
        3660
      ],
      "op": "PUSH2",
      "path": "4",
      "statement": 78,
      "value": "0x1914"
    },
    "6413": {
      "fn": "SoulboundCore.issueWithSignature",
      "offset": [
        3636,
        3640
      ],
      "op": "DUP6",
      "path": "4"
    },
    "6414": {
      "fn": "SoulboundCore.issueWithSignature",
      "offset": [
        3642,
        3649
      ],
      "op": "DUP4",
      "path": "4"
    },
    "6415": {
      "fn": "SoulboundCore.issueWithSignature",
      "offset": [
        3651,
        3659
      ],
      "op": "DUP4",
      "path": "4"
    },
    "6416": {
      "fn": "SoulboundCore.issueWithSignature",
      "offset": [
        3630,
        3635
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x1FEF"
    },
    "6419": {
      "fn": "SoulboundCore.issueWithSignature",
      "jump": "i",
      "offset": [
        3630,
        3660
      ],
      "op": "JUMP",
      "path": "4"
    },
    "6420": {
      "fn": "SoulboundCore.issueWithSignature",
      "offset": [
        3630,
        3660
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "6421": {
      "op": "POP"
    },
    "6422": {
      "fn": "SoulboundCore.issueWithSignature",
      "offset": [
        3727,
        3760
      ],
      "op": "PUSH1",
      "path": "4",
      "statement": 79,
      "value": "0x40"
    },
    "6424": {
      "fn": "SoulboundCore.issueWithSignature",
      "offset": [
        3727,
        3760
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "6425": {
      "fn": "SoulboundCore.issueWithSignature",
      "offset": [
        3752,
        3759
      ],
      "op": "DUP3",
      "path": "4"
    },
    "6426": {
      "fn": "SoulboundCore.issueWithSignature",
      "offset": [
        3752,
        3759
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "6427": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6429": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6431": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "6433": {
      "op": "SHL"
    },
    "6434": {
      "op": "SUB"
    },
    "6435": {
      "fn": "SoulboundCore.issueWithSignature",
      "offset": [
        3727,
        3760
      ],
      "op": "DUP8",
      "path": "4"
    },
    "6436": {
      "fn": "SoulboundCore.issueWithSignature",
      "offset": [
        3727,
        3760
      ],
      "op": "AND",
      "path": "4"
    },
    "6437": {
      "fn": "SoulboundCore.issueWithSignature",
      "offset": [
        3727,
        3760
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "6438": {
      "fn": "SoulboundCore.issueWithSignature",
      "offset": [
        3727,
        3760
      ],
      "op": "PUSH32",
      "path": "4",
      "value": "0x79AF0E59B31823DD289CEEBABC4D63D25F35926B8548E3A084A500C9D4E18556"
    },
    "6471": {
      "fn": "SoulboundCore.issueWithSignature",
      "offset": [
        3727,
        3760
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "6472": {
      "fn": "SoulboundCore.issueWithSignature",
      "offset": [
        3727,
        3760
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "6474": {
      "fn": "SoulboundCore.issueWithSignature",
      "offset": [
        3727,
        3760
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "6475": {
      "fn": "SoulboundCore.issueWithSignature",
      "offset": [
        3727,
        3760
      ],
      "op": "LOG3",
      "path": "4"
    },
    "6476": {
      "fn": "SoulboundCore.issueWithSignature",
      "offset": [
        2769,
        3767
      ],
      "op": "POP",
      "path": "4"
    },
    "6477": {
      "fn": "SoulboundCore.issueWithSignature",
      "offset": [
        2769,
        3767
      ],
      "op": "POP",
      "path": "4"
    },
    "6478": {
      "fn": "SoulboundCore.issueWithSignature",
      "offset": [
        2769,
        3767
      ],
      "op": "POP",
      "path": "4"
    },
    "6479": {
      "fn": "SoulboundCore.issueWithSignature",
      "offset": [
        2769,
        3767
      ],
      "op": "POP",
      "path": "4"
    },
    "6480": {
      "fn": "SoulboundCore.issueWithSignature",
      "offset": [
        2769,
        3767
      ],
      "op": "POP",
      "path": "4"
    },
    "6481": {
      "fn": "SoulboundCore.issueWithSignature",
      "jump": "o",
      "offset": [
        2769,
        3767
      ],
      "op": "JUMP",
      "path": "4"
    },
    "6482": {
      "fn": "Allowlist.verifySignature",
      "offset": [
        2334,
        2477
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "6483": {
      "fn": "Allowlist.verifySignature",
      "offset": [
        2416,
        2420
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "6485": {
      "fn": "Allowlist.verifySignature",
      "offset": [
        2443,
        2470
      ],
      "op": "PUSH2",
      "path": "0",
      "statement": 80,
      "value": "0x195E"
    },
    "6488": {
      "fn": "Allowlist.verifySignature",
      "offset": [
        2460,
        2464
      ],
      "op": "DUP4",
      "path": "0"
    },
    "6489": {
      "fn": "Allowlist.verifySignature",
      "offset": [
        2466,
        2469
      ],
      "op": "DUP4",
      "path": "0"
    },
    "6490": {
      "fn": "Allowlist.verifySignature",
      "offset": [
        2443,
        2459
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x218D"
    },
    "6493": {
      "fn": "Allowlist.verifySignature",
      "jump": "i",
      "offset": [
        2443,
        2470
      ],
      "op": "JUMP",
      "path": "0"
    },
    "6494": {
      "fn": "Allowlist.verifySignature",
      "offset": [
        2443,
        2470
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "6495": {
      "fn": "Allowlist.verifySignature",
      "offset": [
        2436,
        2470
      ],
      "op": "SWAP4",
      "path": "0"
    },
    "6496": {
      "fn": "Allowlist.verifySignature",
      "offset": [
        2334,
        2477
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "6497": {
      "op": "POP"
    },
    "6498": {
      "op": "POP"
    },
    "6499": {
      "op": "POP"
    },
    "6500": {
      "fn": "Allowlist.verifySignature",
      "jump": "o",
      "offset": [
        2334,
        2477
      ],
      "op": "JUMP",
      "path": "0"
    },
    "6501": {
      "fn": "IsValidWithDate.getTimeLeft",
      "offset": [
        2037,
        2485
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "6502": {
      "fn": "IsValidWithDate.getTimeLeft",
      "offset": [
        2095,
        2102
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "6504": {
      "fn": "IsValidWithDate.getExpiryDate",
      "offset": [
        1444,
        1468
      ],
      "op": "DUP2",
      "path": "1"
    },
    "6505": {
      "fn": "IsValidWithDate.getExpiryDate",
      "offset": [
        1444,
        1468
      ],
      "op": "DUP2",
      "path": "1"
    },
    "6506": {
      "fn": "IsValidWithDate.getExpiryDate",
      "offset": [
        1444,
        1468
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "6507": {
      "fn": "IsValidWithDate.getExpiryDate",
      "offset": [
        1444,
        1468
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "6509": {
      "fn": "IsValidWithDate.getExpiryDate",
      "offset": [
        1444,
        1468
      ],
      "op": "DUP2",
      "path": "1"
    },
    "6510": {
      "fn": "IsValidWithDate.getExpiryDate",
      "offset": [
        1444,
        1468
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "6511": {
      "fn": "IsValidWithDate.getExpiryDate",
      "offset": [
        1444,
        1468
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "6512": {
      "fn": "IsValidWithDate.getExpiryDate",
      "offset": [
        1444,
        1468
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "6514": {
      "fn": "IsValidWithDate.getExpiryDate",
      "offset": [
        1444,
        1468
      ],
      "op": "DUP2",
      "path": "1"
    },
    "6515": {
      "fn": "IsValidWithDate.getExpiryDate",
      "offset": [
        1444,
        1468
      ],
      "op": "KECCAK256",
      "path": "1"
    },
    "6516": {
      "fn": "IsValidWithDate.getExpiryDate",
      "offset": [
        1444,
        1468
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "6517": {
      "fn": "IsValidWithDate.getTimeLeft",
      "offset": [
        2223,
        2238
      ],
      "op": "TIMESTAMP",
      "path": "1"
    },
    "6518": {
      "branch": 171,
      "fn": "IsValidWithDate.getTimeLeft",
      "offset": [
        2223,
        2263
      ],
      "op": "GT",
      "path": "1"
    },
    "6519": {
      "fn": "IsValidWithDate.getTimeLeft",
      "offset": [
        2219,
        2479
      ],
      "op": "ISZERO",
      "path": "1"
    },
    "6520": {
      "fn": "IsValidWithDate.getTimeLeft",
      "offset": [
        2219,
        2479
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x1983"
    },
    "6523": {
      "branch": 171,
      "fn": "IsValidWithDate.getTimeLeft",
      "offset": [
        2219,
        2479
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "6524": {
      "op": "POP"
    },
    "6525": {
      "fn": "IsValidWithDate.getTimeLeft",
      "offset": [
        2317,
        2318
      ],
      "op": "PUSH1",
      "path": "1",
      "statement": 81,
      "value": "0x0"
    },
    "6527": {
      "fn": "IsValidWithDate.getTimeLeft",
      "offset": [
        2317,
        2318
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "6528": {
      "fn": "IsValidWithDate.getTimeLeft",
      "offset": [
        2037,
        2485
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "6529": {
      "op": "POP"
    },
    "6530": {
      "fn": "IsValidWithDate.getTimeLeft",
      "jump": "o",
      "offset": [
        2037,
        2485
      ],
      "op": "JUMP",
      "path": "1"
    },
    "6531": {
      "fn": "IsValidWithDate.getTimeLeft",
      "offset": [
        2219,
        2479
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "6532": {
      "fn": "IsValidWithDate.getExpiryDate",
      "offset": [
        1418,
        1425
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "6534": {
      "fn": "IsValidWithDate.getExpiryDate",
      "offset": [
        1444,
        1468
      ],
      "op": "DUP3",
      "path": "1"
    },
    "6535": {
      "fn": "IsValidWithDate.getExpiryDate",
      "offset": [
        1444,
        1468
      ],
      "op": "DUP2",
      "path": "1"
    },
    "6536": {
      "fn": "IsValidWithDate.getExpiryDate",
      "offset": [
        1444,
        1468
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "6537": {
      "fn": "IsValidWithDate.getExpiryDate",
      "offset": [
        1444,
        1468
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "6539": {
      "fn": "IsValidWithDate.getExpiryDate",
      "offset": [
        1444,
        1468
      ],
      "op": "DUP2",
      "path": "1"
    },
    "6540": {
      "fn": "IsValidWithDate.getExpiryDate",
      "offset": [
        1444,
        1468
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "6541": {
      "fn": "IsValidWithDate.getExpiryDate",
      "offset": [
        1444,
        1468
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "6542": {
      "fn": "IsValidWithDate.getExpiryDate",
      "offset": [
        1444,
        1468
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "6544": {
      "fn": "IsValidWithDate.getExpiryDate",
      "offset": [
        1444,
        1468
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "6545": {
      "fn": "IsValidWithDate.getExpiryDate",
      "offset": [
        1444,
        1468
      ],
      "op": "KECCAK256",
      "path": "1"
    },
    "6546": {
      "fn": "IsValidWithDate.getExpiryDate",
      "offset": [
        1444,
        1468
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "6547": {
      "fn": "IsValidWithDate.getTimeLeft",
      "offset": [
        2428,
        2468
      ],
      "op": "PUSH2",
      "path": "1",
      "statement": 82,
      "value": "0x792"
    },
    "6550": {
      "fn": "IsValidWithDate.getTimeLeft",
      "offset": [
        2428,
        2468
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "6551": {
      "fn": "IsValidWithDate.getTimeLeft",
      "offset": [
        2453,
        2468
      ],
      "op": "TIMESTAMP",
      "path": "1"
    },
    "6552": {
      "fn": "IsValidWithDate.getTimeLeft",
      "offset": [
        2453,
        2468
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "6553": {
      "fn": "IsValidWithDate.getTimeLeft",
      "offset": [
        2428,
        2468
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x2AE8"
    },
    "6556": {
      "fn": "IsValidWithDate.getTimeLeft",
      "jump": "i",
      "offset": [
        2428,
        2468
      ],
      "op": "JUMP",
      "path": "1"
    },
    "6557": {
      "fn": "IsValidWithDate.getTimeLeft",
      "offset": [
        2219,
        2479
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "6558": {
      "fn": "IsValidWithDate.getTimeLeft",
      "offset": [
        2037,
        2485
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "6559": {
      "fn": "IsValidWithDate.getTimeLeft",
      "offset": [
        2037,
        2485
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "6560": {
      "fn": "IsValidWithDate.getTimeLeft",
      "offset": [
        2037,
        2485
      ],
      "op": "POP",
      "path": "1"
    },
    "6561": {
      "fn": "IsValidWithDate.getTimeLeft",
      "jump": "o",
      "offset": [
        2037,
        2485
      ],
      "op": "JUMP",
      "path": "1"
    },
    "6562": {
      "fn": "Allowlist.verifySigner",
      "offset": [
        4649,
        4917
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "6563": {
      "fn": "Allowlist.splitSignature",
      "offset": [
        5808,
        5810
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "6565": {
      "fn": "Allowlist.splitSignature",
      "offset": [
        5799,
        5811
      ],
      "op": "DUP2",
      "path": "0"
    },
    "6566": {
      "fn": "Allowlist.splitSignature",
      "offset": [
        5799,
        5811
      ],
      "op": "DUP2",
      "path": "0"
    },
    "6567": {
      "fn": "Allowlist.splitSignature",
      "offset": [
        5799,
        5811
      ],
      "op": "ADD",
      "path": "0"
    },
    "6568": {
      "fn": "Allowlist.splitSignature",
      "offset": [
        5793,
        5812
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "6569": {
      "fn": "Allowlist.splitSignature",
      "offset": [
        5883,
        5885
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "6571": {
      "fn": "Allowlist.splitSignature",
      "offset": [
        5874,
        5886
      ],
      "op": "DUP1",
      "path": "0"
    },
    "6572": {
      "fn": "Allowlist.splitSignature",
      "offset": [
        5874,
        5886
      ],
      "op": "DUP5",
      "path": "0"
    },
    "6573": {
      "fn": "Allowlist.splitSignature",
      "offset": [
        5874,
        5886
      ],
      "op": "ADD",
      "path": "0"
    },
    "6574": {
      "fn": "Allowlist.splitSignature",
      "offset": [
        5868,
        5887
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "6575": {
      "fn": "Allowlist.splitSignature",
      "offset": [
        5995,
        5997
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x60"
    },
    "6577": {
      "fn": "Allowlist.splitSignature",
      "offset": [
        5986,
        5998
      ],
      "op": "DUP1",
      "path": "0"
    },
    "6578": {
      "fn": "Allowlist.splitSignature",
      "offset": [
        5986,
        5998
      ],
      "op": "DUP7",
      "path": "0"
    },
    "6579": {
      "fn": "Allowlist.splitSignature",
      "offset": [
        5986,
        5998
      ],
      "op": "ADD",
      "path": "0"
    },
    "6580": {
      "fn": "Allowlist.splitSignature",
      "offset": [
        5980,
        5999
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "6581": {
      "fn": "Allowlist.verifySigner",
      "offset": [
        4884,
        4909
      ],
      "op": "DUP4",
      "path": "0",
      "statement": 83
    },
    "6582": {
      "fn": "Allowlist.verifySigner",
      "offset": [
        4884,
        4909
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "6583": {
      "fn": "Allowlist.verifySigner",
      "offset": [
        4780,
        4784
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "6585": {
      "fn": "Allowlist.verifySigner",
      "offset": [
        4884,
        4909
      ],
      "op": "DUP1",
      "path": "0"
    },
    "6586": {
      "fn": "Allowlist.verifySigner",
      "offset": [
        4884,
        4909
      ],
      "op": "DUP3",
      "path": "0"
    },
    "6587": {
      "fn": "Allowlist.verifySigner",
      "offset": [
        4884,
        4909
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "6588": {
      "fn": "Allowlist.verifySigner",
      "offset": [
        4884,
        4909
      ],
      "op": "DUP2",
      "path": "0"
    },
    "6589": {
      "fn": "Allowlist.verifySigner",
      "offset": [
        4884,
        4909
      ],
      "op": "DUP9",
      "path": "0"
    },
    "6590": {
      "fn": "Allowlist.verifySigner",
      "offset": [
        4884,
        4909
      ],
      "op": "ADD",
      "path": "0"
    },
    "6591": {
      "fn": "Allowlist.verifySigner",
      "offset": [
        4884,
        4909
      ],
      "op": "DUP1",
      "path": "0"
    },
    "6592": {
      "fn": "Allowlist.verifySigner",
      "offset": [
        4884,
        4909
      ],
      "op": "DUP8",
      "path": "0"
    },
    "6593": {
      "fn": "Allowlist.verifySigner",
      "offset": [
        4884,
        4909
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "6594": {
      "op": "DUP11"
    },
    "6595": {
      "op": "SWAP1"
    },
    "6596": {
      "op": "MSTORE"
    },
    "6597": {
      "fn": "Allowlist.splitSignature",
      "offset": [
        5972,
        6000
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "6598": {
      "fn": "Allowlist.splitSignature",
      "offset": [
        5972,
        6000
      ],
      "op": "DUP3",
      "path": "0"
    },
    "6599": {
      "fn": "Allowlist.splitSignature",
      "offset": [
        5972,
        6000
      ],
      "op": "BYTE",
      "path": "0"
    },
    "6600": {
      "op": "DUP2"
    },
    "6601": {
      "op": "DUP7"
    },
    "6602": {
      "op": "ADD"
    },
    "6603": {
      "op": "DUP2"
    },
    "6604": {
      "op": "SWAP1"
    },
    "6605": {
      "op": "MSTORE"
    },
    "6606": {
      "op": "SWAP3"
    },
    "6607": {
      "op": "DUP2"
    },
    "6608": {
      "op": "ADD"
    },
    "6609": {
      "op": "DUP7"
    },
    "6610": {
      "op": "SWAP1"
    },
    "6611": {
      "op": "MSTORE"
    },
    "6612": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "6614": {
      "op": "DUP2"
    },
    "6615": {
      "op": "ADD"
    },
    "6616": {
      "op": "DUP5"
    },
    "6617": {
      "op": "SWAP1"
    },
    "6618": {
      "op": "MSTORE"
    },
    "6619": {
      "fn": "Allowlist.verifySigner",
      "offset": [
        4884,
        4909
      ],
      "op": "SWAP4",
      "path": "0"
    },
    "6620": {
      "fn": "Allowlist.verifySigner",
      "offset": [
        4884,
        4909
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "6621": {
      "fn": "Allowlist.verifySigner",
      "offset": [
        4780,
        4784
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "6622": {
      "fn": "Allowlist.verifySigner",
      "offset": [
        4780,
        4784
      ],
      "op": "SWAP6",
      "path": "0"
    },
    "6623": {
      "fn": "Allowlist.splitSignature",
      "offset": [
        5868,
        5887
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "6624": {
      "fn": "Allowlist.splitSignature",
      "offset": [
        5868,
        5887
      ],
      "op": "SWAP4",
      "path": "0"
    },
    "6625": {
      "fn": "Allowlist.splitSignature",
      "offset": [
        5972,
        6000
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "6626": {
      "fn": "Allowlist.splitSignature",
      "offset": [
        5972,
        6000
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "6627": {
      "fn": "Allowlist.verifySigner",
      "offset": [
        4884,
        4909
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1"
    },
    "6629": {
      "fn": "Allowlist.verifySigner",
      "offset": [
        4884,
        4909
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "6630": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "6632": {
      "op": "DUP1"
    },
    "6633": {
      "op": "DUP3"
    },
    "6634": {
      "op": "ADD"
    },
    "6635": {
      "op": "SWAP4"
    },
    "6636": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "6638": {
      "op": "NOT"
    },
    "6639": {
      "fn": "Allowlist.verifySigner",
      "offset": [
        4884,
        4909
      ],
      "op": "DUP2",
      "path": "0"
    },
    "6640": {
      "fn": "Allowlist.verifySigner",
      "offset": [
        4884,
        4909
      ],
      "op": "ADD",
      "path": "0"
    },
    "6641": {
      "fn": "Allowlist.verifySigner",
      "offset": [
        4884,
        4909
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "6642": {
      "fn": "Allowlist.verifySigner",
      "offset": [
        4884,
        4909
      ],
      "op": "DUP2",
      "path": "0"
    },
    "6643": {
      "fn": "Allowlist.verifySigner",
      "offset": [
        4884,
        4909
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "6644": {
      "fn": "Allowlist.verifySigner",
      "offset": [
        4884,
        4909
      ],
      "op": "SUB",
      "path": "0"
    },
    "6645": {
      "fn": "Allowlist.verifySigner",
      "offset": [
        4884,
        4909
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "6646": {
      "fn": "Allowlist.verifySigner",
      "offset": [
        4884,
        4909
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "6647": {
      "fn": "Allowlist.verifySigner",
      "offset": [
        4884,
        4909
      ],
      "op": "ADD",
      "path": "0"
    },
    "6648": {
      "fn": "Allowlist.verifySigner",
      "offset": [
        4884,
        4909
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "6649": {
      "fn": "Allowlist.verifySigner",
      "offset": [
        4884,
        4909
      ],
      "op": "DUP6",
      "path": "0"
    },
    "6650": {
      "fn": "Allowlist.verifySigner",
      "offset": [
        4884,
        4909
      ],
      "op": "GAS",
      "path": "0"
    },
    "6651": {
      "fn": "Allowlist.verifySigner",
      "offset": [
        4884,
        4909
      ],
      "op": "STATICCALL",
      "path": "0"
    },
    "6652": {
      "fn": "Allowlist.verifySigner",
      "offset": [
        4884,
        4909
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "6653": {
      "fn": "Allowlist.verifySigner",
      "offset": [
        4884,
        4909
      ],
      "op": "DUP1",
      "path": "0"
    },
    "6654": {
      "fn": "Allowlist.verifySigner",
      "offset": [
        4884,
        4909
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "6655": {
      "fn": "Allowlist.verifySigner",
      "offset": [
        4884,
        4909
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1A0C"
    },
    "6658": {
      "fn": "Allowlist.verifySigner",
      "offset": [
        4884,
        4909
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "6659": {
      "fn": "Allowlist.verifySigner",
      "offset": [
        4884,
        4909
      ],
      "op": "RETURNDATASIZE",
      "path": "0"
    },
    "6660": {
      "fn": "Allowlist.verifySigner",
      "offset": [
        4884,
        4909
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "6662": {
      "fn": "Allowlist.verifySigner",
      "offset": [
        4884,
        4909
      ],
      "op": "DUP1",
      "path": "0"
    },
    "6663": {
      "fn": "Allowlist.verifySigner",
      "offset": [
        4884,
        4909
      ],
      "op": "RETURNDATACOPY",
      "path": "0"
    },
    "6664": {
      "fn": "Allowlist.verifySigner",
      "offset": [
        4884,
        4909
      ],
      "op": "RETURNDATASIZE",
      "path": "0"
    },
    "6665": {
      "fn": "Allowlist.verifySigner",
      "offset": [
        4884,
        4909
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "6667": {
      "fn": "Allowlist.verifySigner",
      "offset": [
        4884,
        4909
      ],
      "op": "REVERT",
      "path": "0"
    },
    "6668": {
      "fn": "Allowlist.verifySigner",
      "offset": [
        4884,
        4909
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "6669": {
      "fn": "Allowlist.verifySigner",
      "offset": [
        4884,
        4909
      ],
      "op": "POP",
      "path": "0"
    },
    "6670": {
      "fn": "Allowlist.verifySigner",
      "offset": [
        4884,
        4909
      ],
      "op": "POP",
      "path": "0"
    },
    "6671": {
      "fn": "Allowlist.verifySigner",
      "offset": [
        4884,
        4909
      ],
      "op": "POP",
      "path": "0"
    },
    "6672": {
      "fn": "Allowlist.verifySigner",
      "offset": [
        4884,
        4909
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "6674": {
      "fn": "Allowlist.verifySigner",
      "offset": [
        4884,
        4909
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "6676": {
      "fn": "Allowlist.verifySigner",
      "offset": [
        4884,
        4909
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "6677": {
      "fn": "Allowlist.verifySigner",
      "offset": [
        4884,
        4909
      ],
      "op": "SUB",
      "path": "0"
    },
    "6678": {
      "fn": "Allowlist.verifySigner",
      "offset": [
        4884,
        4909
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "6679": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6681": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6683": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "6685": {
      "op": "SHL"
    },
    "6686": {
      "op": "SUB"
    },
    "6687": {
      "fn": "Allowlist.verifySigner",
      "offset": [
        4873,
        4909
      ],
      "op": "AND",
      "path": "0"
    },
    "6688": {
      "fn": "Allowlist.verifySigner",
      "offset": [
        4873,
        4880
      ],
      "op": "DUP8",
      "path": "0"
    },
    "6689": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6691": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6693": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "6695": {
      "op": "SHL"
    },
    "6696": {
      "op": "SUB"
    },
    "6697": {
      "fn": "Allowlist.verifySigner",
      "offset": [
        4873,
        4909
      ],
      "op": "AND",
      "path": "0"
    },
    "6698": {
      "fn": "Allowlist.verifySigner",
      "offset": [
        4873,
        4909
      ],
      "op": "EQ",
      "path": "0"
    },
    "6699": {
      "fn": "Allowlist.verifySigner",
      "offset": [
        4866,
        4910
      ],
      "op": "SWAP4",
      "path": "0"
    },
    "6700": {
      "fn": "Allowlist.verifySigner",
      "offset": [
        4866,
        4910
      ],
      "op": "POP",
      "path": "0"
    },
    "6701": {
      "fn": "Allowlist.verifySigner",
      "offset": [
        4866,
        4910
      ],
      "op": "POP",
      "path": "0"
    },
    "6702": {
      "fn": "Allowlist.verifySigner",
      "offset": [
        4866,
        4910
      ],
      "op": "POP",
      "path": "0"
    },
    "6703": {
      "fn": "Allowlist.verifySigner",
      "offset": [
        4866,
        4910
      ],
      "op": "POP",
      "path": "0"
    },
    "6704": {
      "fn": "Allowlist.verifySigner",
      "offset": [
        4649,
        4917
      ],
      "op": "SWAP4",
      "path": "0"
    },
    "6705": {
      "fn": "Allowlist.verifySigner",
      "offset": [
        4649,
        4917
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "6706": {
      "fn": "Allowlist.verifySigner",
      "offset": [
        4649,
        4917
      ],
      "op": "POP",
      "path": "0"
    },
    "6707": {
      "fn": "Allowlist.verifySigner",
      "offset": [
        4649,
        4917
      ],
      "op": "POP",
      "path": "0"
    },
    "6708": {
      "fn": "Allowlist.verifySigner",
      "offset": [
        4649,
        4917
      ],
      "op": "POP",
      "path": "0"
    },
    "6709": {
      "fn": "Allowlist.verifySigner",
      "jump": "o",
      "offset": [
        4649,
        4917
      ],
      "op": "JUMP",
      "path": "0"
    },
    "6710": {
      "fn": "SoulboundWithSignature.ownerIssueWithSignature",
      "offset": [
        1488,
        2228
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "6711": {
      "offset": [
        1401,
        1414
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1A3E"
    },
    "6714": {
      "offset": [
        1401,
        1412
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1DA7"
    },
    "6717": {
      "jump": "i",
      "offset": [
        1401,
        1414
      ],
      "op": "JUMP",
      "path": "2"
    },
    "6718": {
      "fn": "SoulboundWithSignature.ownerIssueWithSignature",
      "offset": [
        1401,
        1414
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "6719": {
      "fn": "SoulboundWithSignature.ownerIssueWithSignature",
      "offset": [
        1941,
        1952
      ],
      "op": "PUSH1",
      "path": "6",
      "statement": 84,
      "value": "0xA"
    },
    "6721": {
      "fn": "SoulboundWithSignature.ownerIssueWithSignature",
      "offset": [
        1941,
        1952
      ],
      "op": "SLOAD",
      "path": "6"
    },
    "6722": {
      "fn": "SoulboundWithSignature.ownerIssueWithSignature",
      "offset": [
        1932,
        1938
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0xB"
    },
    "6724": {
      "fn": "SoulboundWithSignature.ownerIssueWithSignature",
      "offset": [
        1932,
        1938
      ],
      "op": "SLOAD",
      "path": "6"
    },
    "6725": {
      "branch": 194,
      "fn": "SoulboundWithSignature.ownerIssueWithSignature",
      "offset": [
        1932,
        1952
      ],
      "op": "LT",
      "path": "6"
    },
    "6726": {
      "fn": "SoulboundWithSignature.ownerIssueWithSignature",
      "offset": [
        1924,
        1975
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x1A86"
    },
    "6729": {
      "branch": 194,
      "fn": "SoulboundWithSignature.ownerIssueWithSignature",
      "offset": [
        1924,
        1975
      ],
      "op": "JUMPI",
      "path": "6"
    },
    "6730": {
      "fn": "SoulboundWithSignature.ownerIssueWithSignature",
      "offset": [
        1924,
        1975
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x40"
    },
    "6732": {
      "fn": "SoulboundWithSignature.ownerIssueWithSignature",
      "offset": [
        1924,
        1975
      ],
      "op": "MLOAD",
      "path": "6"
    },
    "6733": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "6737": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "6739": {
      "op": "SHL"
    },
    "6740": {
      "fn": "SoulboundWithSignature.ownerIssueWithSignature",
      "offset": [
        1924,
        1975
      ],
      "op": "DUP2",
      "path": "6"
    },
    "6741": {
      "fn": "SoulboundWithSignature.ownerIssueWithSignature",
      "offset": [
        1924,
        1975
      ],
      "op": "MSTORE",
      "path": "6"
    },
    "6742": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "6744": {
      "fn": "SoulboundWithSignature.ownerIssueWithSignature",
      "offset": [
        1924,
        1975
      ],
      "op": "PUSH1",
      "path": "6",
      "value": "0x4"
    },
    "6746": {
      "fn": "SoulboundWithSignature.ownerIssueWithSignature",
      "offset": [
        1924,
        1975
      ],
      "op": "DUP3",
      "path": "6"
    },
    "6747": {
      "fn": "SoulboundWithSignature.ownerIssueWithSignature",
      "offset": [
        1924,
        1975
      ],
      "op": "ADD",
      "path": "6"
    },
    "6748": {
      "op": "MSTORE"
    },
    "6749": {
      "op": "PUSH1",
      "value": "0x12"
    },
    "6751": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "6753": {
      "op": "DUP3"
    },
    "6754": {
      "op": "ADD"
    },
    "6755": {
      "op": "MSTORE"
    },
    "6756": {
      "op": "PUSH18",
      "value": "0x24B9B9BAB29021B0B8102932B0B1B432B217"
    },
    "6775": {
      "op": "PUSH1",
      "value": "0x71"
    },
    "6777": {
      "op": "SHL"
    },
    "6778": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "6780": {
      "op": "DUP3"
    },
    "6781": {
      "op": "ADD"
    },
    "6782": {
      "op": "MSTORE"
    },
    "6783": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "6785": {
      "op": "ADD"
    },
    "6786": {
      "fn": "SoulboundWithSignature.ownerIssueWithSignature",
      "offset": [
        1924,
        1975
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x6E4"
    },
    "6789": {
      "op": "JUMP"
    },
    "6790": {
      "fn": "SoulboundWithSignature.ownerIssueWithSignature",
      "offset": [
        1924,
        1975
      ],
      "op": "JUMPDEST",
      "path": "6"
    },
    "6791": {
      "fn": "SoulboundWithSignature.ownerIssueWithSignature",
      "offset": [
        2024,
        2148
      ],
      "op": "PUSH2",
      "path": "6",
      "statement": 85,
      "value": "0x167F"
    },
    "6794": {
      "fn": "SoulboundWithSignature.ownerIssueWithSignature",
      "offset": [
        2056,
        2060
      ],
      "op": "DUP6",
      "path": "6"
    },
    "6795": {
      "fn": "SoulboundWithSignature.ownerIssueWithSignature",
      "offset": [
        2074,
        2078
      ],
      "op": "DUP6",
      "path": "6"
    },
    "6796": {
      "fn": "SoulboundWithSignature.ownerIssueWithSignature",
      "offset": [
        2092,
        2095
      ],
      "op": "DUP6",
      "path": "6"
    },
    "6797": {
      "fn": "SoulboundWithSignature.ownerIssueWithSignature",
      "offset": [
        2109,
        2116
      ],
      "op": "DUP6",
      "path": "6"
    },
    "6798": {
      "fn": "SoulboundWithSignature.ownerIssueWithSignature",
      "offset": [
        2130,
        2138
      ],
      "op": "DUP6",
      "path": "6"
    },
    "6799": {
      "fn": "SoulboundWithSignature.ownerIssueWithSignature",
      "offset": [
        2024,
        2042
      ],
      "op": "PUSH2",
      "path": "6",
      "value": "0x1845"
    },
    "6802": {
      "fn": "SoulboundWithSignature.ownerIssueWithSignature",
      "jump": "i",
      "offset": [
        2024,
        2148
      ],
      "op": "JUMP",
      "path": "6"
    },
    "6803": {
      "fn": "SoulboundRedeemable.redeemPendingToken",
      "offset": [
        8018,
        9534
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "6804": {
      "offset": [
        1401,
        1414
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1A9B"
    },
    "6807": {
      "offset": [
        1401,
        1412
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1DA7"
    },
    "6810": {
      "jump": "i",
      "offset": [
        1401,
        1414
      ],
      "op": "JUMP",
      "path": "2"
    },
    "6811": {
      "fn": "SoulboundRedeemable.redeemPendingToken",
      "offset": [
        1401,
        1414
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "6812": {
      "offset": [
        2194,
        2200
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x13"
    },
    "6814": {
      "fn": "SoulboundRedeemable.redeemPendingToken",
      "offset": [
        2194,
        2200
      ],
      "op": "SLOAD",
      "path": "5"
    },
    "6815": {
      "fn": "SoulboundRedeemable.redeemPendingToken",
      "offset": [
        2194,
        2200
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0xFF"
    },
    "6817": {
      "fn": "SoulboundRedeemable.redeemPendingToken",
      "offset": [
        2194,
        2200
      ],
      "op": "AND",
      "path": "5"
    },
    "6818": {
      "offset": [
        2193,
        2200
      ],
      "op": "ISZERO",
      "path": "5"
    },
    "6819": {
      "offset": [
        2185,
        2201
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x1AAB"
    },
    "6822": {
      "offset": [
        2185,
        2201
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "6823": {
      "fn": "SoulboundRedeemable.redeemPendingToken",
      "offset": [
        2185,
        2201
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "6825": {
      "fn": "SoulboundRedeemable.redeemPendingToken",
      "offset": [
        2185,
        2201
      ],
      "op": "DUP1",
      "path": "5"
    },
    "6826": {
      "fn": "SoulboundRedeemable.redeemPendingToken",
      "offset": [
        2185,
        2201
      ],
      "op": "REVERT",
      "path": "5"
    },
    "6827": {
      "fn": "SoulboundRedeemable.redeemPendingToken",
      "offset": [
        2185,
        2201
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "6828": {
      "offset": [
        2211,
        2217
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x13"
    },
    "6830": {
      "offset": [
        2211,
        2224
      ],
      "op": "DUP1",
      "path": "5"
    },
    "6831": {
      "fn": "SoulboundRedeemable.redeemPendingToken",
      "offset": [
        2211,
        2224
      ],
      "op": "SLOAD",
      "path": "5"
    },
    "6832": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "6834": {
      "op": "NOT"
    },
    "6835": {
      "offset": [
        2211,
        2224
      ],
      "op": "AND",
      "path": "5"
    },
    "6836": {
      "offset": [
        2220,
        2224
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x1"
    },
    "6838": {
      "offset": [
        2211,
        2224
      ],
      "op": "OR",
      "path": "5"
    },
    "6839": {
      "fn": "SoulboundRedeemable.redeemPendingToken",
      "offset": [
        2211,
        2224
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "6840": {
      "fn": "SoulboundRedeemable.redeemPendingToken",
      "offset": [
        2211,
        2224
      ],
      "op": "SSTORE",
      "path": "5"
    },
    "6841": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6843": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6845": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "6847": {
      "op": "SHL"
    },
    "6848": {
      "op": "SUB"
    },
    "6849": {
      "fn": "SoulboundRedeemable.redeemPendingToken",
      "offset": [
        8274,
        8297
      ],
      "op": "DUP4",
      "path": "5",
      "statement": 86
    },
    "6850": {
      "branch": 160,
      "fn": "SoulboundRedeemable.redeemPendingToken",
      "offset": [
        8274,
        8297
      ],
      "op": "AND",
      "path": "5"
    },
    "6851": {
      "fn": "SoulboundRedeemable.redeemPendingToken",
      "offset": [
        8266,
        8329
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x1B0E"
    },
    "6854": {
      "branch": 160,
      "fn": "SoulboundRedeemable.redeemPendingToken",
      "offset": [
        8266,
        8329
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "6855": {
      "fn": "SoulboundRedeemable.redeemPendingToken",
      "offset": [
        8266,
        8329
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "6857": {
      "fn": "SoulboundRedeemable.redeemPendingToken",
      "offset": [
        8266,
        8329
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "6858": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "6862": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "6864": {
      "op": "SHL"
    },
    "6865": {
      "fn": "SoulboundRedeemable.redeemPendingToken",
      "offset": [
        8266,
        8329
      ],
      "op": "DUP2",
      "path": "5"
    },
    "6866": {
      "fn": "SoulboundRedeemable.redeemPendingToken",
      "offset": [
        8266,
        8329
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "6867": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "6869": {
      "fn": "SoulboundRedeemable.redeemPendingToken",
      "offset": [
        8266,
        8329
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x4"
    },
    "6871": {
      "fn": "SoulboundRedeemable.redeemPendingToken",
      "offset": [
        8266,
        8329
      ],
      "op": "DUP3",
      "path": "5"
    },
    "6872": {
      "fn": "SoulboundRedeemable.redeemPendingToken",
      "offset": [
        8266,
        8329
      ],
      "op": "ADD",
      "path": "5"
    },
    "6873": {
      "op": "MSTORE"
    },
    "6874": {
      "op": "PUSH1",
      "value": "0x1B"
    },
    "6876": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "6878": {
      "op": "DUP3"
    },
    "6879": {
      "op": "ADD"
    },
    "6880": {
      "op": "MSTORE"
    },
    "6881": {
      "op": "PUSH32",
      "value": "0x526564656D7074696F6E20746F207A65726F20616464726573732E0000000000"
    },
    "6914": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "6916": {
      "op": "DUP3"
    },
    "6917": {
      "op": "ADD"
    },
    "6918": {
      "op": "MSTORE"
    },
    "6919": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "6921": {
      "op": "ADD"
    },
    "6922": {
      "fn": "SoulboundRedeemable.redeemPendingToken",
      "offset": [
        8266,
        8329
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x6E4"
    },
    "6925": {
      "op": "JUMP"
    },
    "6926": {
      "fn": "SoulboundRedeemable.redeemPendingToken",
      "offset": [
        8266,
        8329
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "6927": {
      "fn": "SoulboundRedeemable.redeemPendingToken",
      "offset": [
        8394,
        8410
      ],
      "op": "PUSH2",
      "path": "5",
      "statement": 87,
      "value": "0x1B17"
    },
    "6930": {
      "fn": "SoulboundRedeemable.redeemPendingToken",
      "offset": [
        8402,
        8409
      ],
      "op": "DUP3",
      "path": "5"
    },
    "6931": {
      "fn": "SoulboundRedeemable.redeemPendingToken",
      "offset": [
        8394,
        8401
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x1E01"
    },
    "6934": {
      "fn": "SoulboundRedeemable.redeemPendingToken",
      "jump": "i",
      "offset": [
        8394,
        8410
      ],
      "op": "JUMP",
      "path": "5"
    },
    "6935": {
      "fn": "SoulboundRedeemable.redeemPendingToken",
      "offset": [
        8394,
        8410
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "6936": {
      "branch": 161,
      "fn": "SoulboundRedeemable.redeemPendingToken",
      "offset": [
        8393,
        8410
      ],
      "op": "ISZERO",
      "path": "5"
    },
    "6937": {
      "fn": "SoulboundRedeemable.redeemPendingToken",
      "offset": [
        8385,
        8444
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x1B64"
    },
    "6940": {
      "branch": 161,
      "fn": "SoulboundRedeemable.redeemPendingToken",
      "offset": [
        8385,
        8444
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "6941": {
      "fn": "SoulboundRedeemable.redeemPendingToken",
      "offset": [
        8385,
        8444
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "6943": {
      "fn": "SoulboundRedeemable.redeemPendingToken",
      "offset": [
        8385,
        8444
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "6944": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "6948": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "6950": {
      "op": "SHL"
    },
    "6951": {
      "fn": "SoulboundRedeemable.redeemPendingToken",
      "offset": [
        8385,
        8444
      ],
      "op": "DUP2",
      "path": "5"
    },
    "6952": {
      "fn": "SoulboundRedeemable.redeemPendingToken",
      "offset": [
        8385,
        8444
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "6953": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "6955": {
      "fn": "SoulboundRedeemable.redeemPendingToken",
      "offset": [
        8385,
        8444
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x4"
    },
    "6957": {
      "fn": "SoulboundRedeemable.redeemPendingToken",
      "offset": [
        8385,
        8444
      ],
      "op": "DUP3",
      "path": "5"
    },
    "6958": {
      "fn": "SoulboundRedeemable.redeemPendingToken",
      "offset": [
        8385,
        8444
      ],
      "op": "ADD",
      "path": "5"
    },
    "6959": {
      "op": "MSTORE"
    },
    "6960": {
      "op": "PUSH1",
      "value": "0x1D"
    },
    "6962": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "6964": {
      "op": "DUP3"
    },
    "6965": {
      "op": "ADD"
    },
    "6966": {
      "op": "MSTORE"
    },
    "6967": {
      "op": "PUSH32",
      "value": "0x526564656D7074696F6E206F66206578697374696E6720746F6B656E2E000000"
    },
    "7000": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "7002": {
      "op": "DUP3"
    },
    "7003": {
      "op": "ADD"
    },
    "7004": {
      "op": "MSTORE"
    },
    "7005": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "7007": {
      "op": "ADD"
    },
    "7008": {
      "fn": "SoulboundRedeemable.redeemPendingToken",
      "offset": [
        8385,
        8444
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x6E4"
    },
    "7011": {
      "op": "JUMP"
    },
    "7012": {
      "fn": "SoulboundRedeemable.redeemPendingToken",
      "offset": [
        8385,
        8444
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "7013": {
      "fn": "SoulboundRedeemable.redeemPendingToken",
      "offset": [
        8520,
        8536
      ],
      "op": "PUSH1",
      "path": "5",
      "statement": 88,
      "value": "0x0"
    },
    "7015": {
      "fn": "SoulboundRedeemable.redeemPendingToken",
      "offset": [
        8520,
        8536
      ],
      "op": "DUP3",
      "path": "5"
    },
    "7016": {
      "fn": "SoulboundRedeemable.redeemPendingToken",
      "offset": [
        8520,
        8536
      ],
      "op": "DUP2",
      "path": "5"
    },
    "7017": {
      "fn": "SoulboundRedeemable.redeemPendingToken",
      "offset": [
        8520,
        8536
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "7018": {
      "fn": "SoulboundRedeemable.redeemPendingToken",
      "offset": [
        8520,
        8527
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x10"
    },
    "7020": {
      "fn": "SoulboundRedeemable.redeemPendingToken",
      "offset": [
        8520,
        8536
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "7022": {
      "fn": "SoulboundRedeemable.redeemPendingToken",
      "offset": [
        8520,
        8536
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "7023": {
      "fn": "SoulboundRedeemable.redeemPendingToken",
      "offset": [
        8520,
        8536
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "7025": {
      "fn": "SoulboundRedeemable.redeemPendingToken",
      "offset": [
        8520,
        8536
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "7026": {
      "fn": "SoulboundRedeemable.redeemPendingToken",
      "offset": [
        8520,
        8536
      ],
      "op": "KECCAK256",
      "path": "5"
    },
    "7027": {
      "fn": "SoulboundRedeemable.redeemPendingToken",
      "offset": [
        8520,
        8536
      ],
      "op": "SLOAD",
      "path": "5"
    },
    "7028": {
      "fn": "SoulboundRedeemable.redeemPendingToken",
      "offset": [
        8520,
        8536
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0xFF"
    },
    "7030": {
      "branch": 162,
      "fn": "SoulboundRedeemable.redeemPendingToken",
      "offset": [
        8520,
        8536
      ],
      "op": "AND",
      "path": "5"
    },
    "7031": {
      "fn": "SoulboundRedeemable.redeemPendingToken",
      "offset": [
        8512,
        8564
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x1BBC"
    },
    "7034": {
      "branch": 162,
      "fn": "SoulboundRedeemable.redeemPendingToken",
      "offset": [
        8512,
        8564
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "7035": {
      "fn": "SoulboundRedeemable.redeemPendingToken",
      "offset": [
        8512,
        8564
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "7037": {
      "fn": "SoulboundRedeemable.redeemPendingToken",
      "offset": [
        8512,
        8564
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "7038": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "7042": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "7044": {
      "op": "SHL"
    },
    "7045": {
      "fn": "SoulboundRedeemable.redeemPendingToken",
      "offset": [
        8512,
        8564
      ],
      "op": "DUP2",
      "path": "5"
    },
    "7046": {
      "fn": "SoulboundRedeemable.redeemPendingToken",
      "offset": [
        8512,
        8564
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "7047": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "7049": {
      "fn": "SoulboundRedeemable.redeemPendingToken",
      "offset": [
        8512,
        8564
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x4"
    },
    "7051": {
      "fn": "SoulboundRedeemable.redeemPendingToken",
      "offset": [
        8512,
        8564
      ],
      "op": "DUP3",
      "path": "5"
    },
    "7052": {
      "fn": "SoulboundRedeemable.redeemPendingToken",
      "offset": [
        8512,
        8564
      ],
      "op": "ADD",
      "path": "5"
    },
    "7053": {
      "op": "MSTORE"
    },
    "7054": {
      "op": "PUSH1",
      "value": "0x17"
    },
    "7056": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "7058": {
      "op": "DUP3"
    },
    "7059": {
      "op": "ADD"
    },
    "7060": {
      "op": "MSTORE"
    },
    "7061": {
      "op": "PUSH23",
      "value": "0x20B63932B0B23C903932B1B2B4BB32B2103A37B5B2B717"
    },
    "7085": {
      "op": "PUSH1",
      "value": "0x49"
    },
    "7087": {
      "op": "SHL"
    },
    "7088": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "7090": {
      "op": "DUP3"
    },
    "7091": {
      "op": "ADD"
    },
    "7092": {
      "op": "MSTORE"
    },
    "7093": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "7095": {
      "op": "ADD"
    },
    "7096": {
      "fn": "SoulboundRedeemable.redeemPendingToken",
      "offset": [
        8512,
        8564
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x6E4"
    },
    "7099": {
      "op": "JUMP"
    },
    "7100": {
      "fn": "SoulboundRedeemable.redeemPendingToken",
      "offset": [
        8512,
        8564
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "7101": {
      "fn": "SoulboundRedeemable.redeemPendingToken",
      "offset": [
        8653,
        8678
      ],
      "op": "PUSH1",
      "path": "5",
      "statement": 89,
      "value": "0x0"
    },
    "7103": {
      "fn": "SoulboundRedeemable.redeemPendingToken",
      "offset": [
        8653,
        8678
      ],
      "op": "DUP3",
      "path": "5"
    },
    "7104": {
      "fn": "SoulboundRedeemable.redeemPendingToken",
      "offset": [
        8653,
        8678
      ],
      "op": "DUP2",
      "path": "5"
    },
    "7105": {
      "fn": "SoulboundRedeemable.redeemPendingToken",
      "offset": [
        8653,
        8678
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "7106": {
      "fn": "SoulboundRedeemable.redeemPendingToken",
      "offset": [
        8653,
        8669
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x11"
    },
    "7108": {
      "fn": "SoulboundRedeemable.redeemPendingToken",
      "offset": [
        8653,
        8678
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x20"
    },
    "7110": {
      "fn": "SoulboundRedeemable.redeemPendingToken",
      "offset": [
        8653,
        8678
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "7111": {
      "fn": "SoulboundRedeemable.redeemPendingToken",
      "offset": [
        8653,
        8678
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "7113": {
      "fn": "SoulboundRedeemable.redeemPendingToken",
      "offset": [
        8653,
        8678
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "7114": {
      "fn": "SoulboundRedeemable.redeemPendingToken",
      "offset": [
        8653,
        8678
      ],
      "op": "KECCAK256",
      "path": "5"
    },
    "7115": {
      "fn": "SoulboundRedeemable.redeemPendingToken",
      "offset": [
        8653,
        8678
      ],
      "op": "SLOAD",
      "path": "5"
    },
    "7116": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7118": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7120": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "7122": {
      "op": "SHL"
    },
    "7123": {
      "op": "SUB"
    },
    "7124": {
      "fn": "SoulboundRedeemable.redeemPendingToken",
      "offset": [
        8653,
        8691
      ],
      "op": "DUP5",
      "path": "5"
    },
    "7125": {
      "fn": "SoulboundRedeemable.redeemPendingToken",
      "offset": [
        8653,
        8691
      ],
      "op": "DUP2",
      "path": "5"
    },
    "7126": {
      "fn": "SoulboundRedeemable.redeemPendingToken",
      "offset": [
        8653,
        8691
      ],
      "op": "AND",
      "path": "5"
    },
    "7127": {
      "fn": "SoulboundRedeemable.redeemPendingToken",
      "offset": [
        8653,
        8678
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "7128": {
      "fn": "SoulboundRedeemable.redeemPendingToken",
      "offset": [
        8653,
        8678
      ],
      "op": "AND",
      "path": "5"
    },
    "7129": {
      "branch": 163,
      "fn": "SoulboundRedeemable.redeemPendingToken",
      "offset": [
        8653,
        8691
      ],
      "op": "EQ",
      "path": "5"
    },
    "7130": {
      "fn": "SoulboundRedeemable.redeemPendingToken",
      "offset": [
        8645,
        8717
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0xEDE"
    },
    "7133": {
      "branch": 163,
      "fn": "SoulboundRedeemable.redeemPendingToken",
      "offset": [
        8645,
        8717
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "7134": {
      "fn": "SoulboundRedeemable.redeemPendingToken",
      "offset": [
        8645,
        8717
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x40"
    },
    "7136": {
      "fn": "SoulboundRedeemable.redeemPendingToken",
      "offset": [
        8645,
        8717
      ],
      "op": "MLOAD",
      "path": "5"
    },
    "7137": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "7141": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "7143": {
      "op": "SHL"
    },
    "7144": {
      "fn": "SoulboundRedeemable.redeemPendingToken",
      "offset": [
        8645,
        8717
      ],
      "op": "DUP2",
      "path": "5"
    },
    "7145": {
      "fn": "SoulboundRedeemable.redeemPendingToken",
      "offset": [
        8645,
        8717
      ],
      "op": "MSTORE",
      "path": "5"
    },
    "7146": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "7148": {
      "fn": "SoulboundRedeemable.redeemPendingToken",
      "offset": [
        8645,
        8717
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x4"
    },
    "7150": {
      "fn": "SoulboundRedeemable.redeemPendingToken",
      "offset": [
        8645,
        8717
      ],
      "op": "DUP3",
      "path": "5"
    },
    "7151": {
      "fn": "SoulboundRedeemable.redeemPendingToken",
      "offset": [
        8645,
        8717
      ],
      "op": "ADD",
      "path": "5"
    },
    "7152": {
      "op": "MSTORE"
    },
    "7153": {
      "op": "PUSH1",
      "value": "0x15"
    },
    "7155": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "7157": {
      "op": "DUP3"
    },
    "7158": {
      "op": "ADD"
    },
    "7159": {
      "op": "MSTORE"
    },
    "7160": {
      "op": "PUSH21",
      "value": "0x2737BA103832B73234B733903932B1B2B4BB32B917"
    },
    "7182": {
      "op": "PUSH1",
      "value": "0x59"
    },
    "7184": {
      "op": "SHL"
    },
    "7185": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "7187": {
      "op": "DUP3"
    },
    "7188": {
      "op": "ADD"
    },
    "7189": {
      "op": "MSTORE"
    },
    "7190": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "7192": {
      "op": "ADD"
    },
    "7193": {
      "fn": "SoulboundRedeemable.redeemPendingToken",
      "offset": [
        8645,
        8717
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x6E4"
    },
    "7196": {
      "op": "JUMP"
    },
    "7197": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2401,
        2599
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "7198": {
      "offset": [
        1401,
        1414
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1C25"
    },
    "7201": {
      "offset": [
        1401,
        1412
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1DA7"
    },
    "7204": {
      "jump": "i",
      "offset": [
        1401,
        1414
      ],
      "op": "JUMP",
      "path": "2"
    },
    "7205": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1401,
        1414
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "7206": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7208": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7210": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "7212": {
      "op": "SHL"
    },
    "7213": {
      "op": "SUB"
    },
    "7214": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2489,
        2511
      ],
      "op": "DUP2",
      "path": "2",
      "statement": 90
    },
    "7215": {
      "branch": 172,
      "fn": "Ownable.transferOwnership",
      "offset": [
        2489,
        2511
      ],
      "op": "AND",
      "path": "2"
    },
    "7216": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2481,
        2554
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1C8A"
    },
    "7219": {
      "branch": 172,
      "fn": "Ownable.transferOwnership",
      "offset": [
        2481,
        2554
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "7220": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2481,
        2554
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "7222": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2481,
        2554
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "7223": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "7227": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "7229": {
      "op": "SHL"
    },
    "7230": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2481,
        2554
      ],
      "op": "DUP2",
      "path": "2"
    },
    "7231": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2481,
        2554
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "7232": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "7234": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2481,
        2554
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "7236": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2481,
        2554
      ],
      "op": "DUP3",
      "path": "2"
    },
    "7237": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2481,
        2554
      ],
      "op": "ADD",
      "path": "2"
    },
    "7238": {
      "op": "MSTORE"
    },
    "7239": {
      "op": "PUSH1",
      "value": "0x26"
    },
    "7241": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "7243": {
      "op": "DUP3"
    },
    "7244": {
      "op": "ADD"
    },
    "7245": {
      "op": "MSTORE"
    },
    "7246": {
      "op": "PUSH32",
      "value": "0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061"
    },
    "7279": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "7281": {
      "op": "DUP3"
    },
    "7282": {
      "op": "ADD"
    },
    "7283": {
      "op": "MSTORE"
    },
    "7284": {
      "op": "PUSH6",
      "value": "0x646472657373"
    },
    "7291": {
      "op": "PUSH1",
      "value": "0xD0"
    },
    "7293": {
      "op": "SHL"
    },
    "7294": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "7296": {
      "op": "DUP3"
    },
    "7297": {
      "op": "ADD"
    },
    "7298": {
      "op": "MSTORE"
    },
    "7299": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "7301": {
      "op": "ADD"
    },
    "7302": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2481,
        2554
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x6E4"
    },
    "7305": {
      "op": "JUMP"
    },
    "7306": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2481,
        2554
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "7307": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2564,
        2592
      ],
      "op": "PUSH2",
      "path": "2",
      "statement": 91,
      "value": "0x1094"
    },
    "7310": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2583,
        2591
      ],
      "op": "DUP2",
      "path": "2"
    },
    "7311": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2564,
        2582
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x20E9"
    },
    "7314": {
      "fn": "Ownable.transferOwnership",
      "jump": "i",
      "offset": [
        2564,
        2592
      ],
      "op": "JUMP",
      "path": "2"
    },
    "7315": {
      "fn": "Soulbound.issuerOf",
      "offset": [
        4277,
        4768
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "7316": {
      "fn": "Soulbound.issuerOf",
      "offset": [
        4346,
        4353
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "7318": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7320": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7322": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "7324": {
      "op": "SHL"
    },
    "7325": {
      "op": "SUB"
    },
    "7326": {
      "fn": "Soulbound.issuerOf",
      "offset": [
        4425,
        4442
      ],
      "op": "DUP4",
      "path": "3",
      "statement": 92
    },
    "7327": {
      "branch": 175,
      "fn": "Soulbound.issuerOf",
      "offset": [
        4425,
        4442
      ],
      "op": "AND",
      "path": "3"
    },
    "7328": {
      "fn": "Soulbound.issuerOf",
      "offset": [
        4417,
        4470
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x1CEB"
    },
    "7331": {
      "branch": 175,
      "fn": "Soulbound.issuerOf",
      "offset": [
        4417,
        4470
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "7332": {
      "fn": "Soulbound.issuerOf",
      "offset": [
        4417,
        4470
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "7334": {
      "fn": "Soulbound.issuerOf",
      "offset": [
        4417,
        4470
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "7335": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "7339": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "7341": {
      "op": "SHL"
    },
    "7342": {
      "fn": "Soulbound.issuerOf",
      "offset": [
        4417,
        4470
      ],
      "op": "DUP2",
      "path": "3"
    },
    "7343": {
      "fn": "Soulbound.issuerOf",
      "offset": [
        4417,
        4470
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "7344": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "7346": {
      "fn": "Soulbound.issuerOf",
      "offset": [
        4417,
        4470
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x4"
    },
    "7348": {
      "fn": "Soulbound.issuerOf",
      "offset": [
        4417,
        4470
      ],
      "op": "DUP3",
      "path": "3"
    },
    "7349": {
      "fn": "Soulbound.issuerOf",
      "offset": [
        4417,
        4470
      ],
      "op": "ADD",
      "path": "3"
    },
    "7350": {
      "op": "MSTORE"
    },
    "7351": {
      "op": "PUSH1",
      "value": "0x17"
    },
    "7353": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "7355": {
      "op": "DUP3"
    },
    "7356": {
      "op": "ADD"
    },
    "7357": {
      "op": "MSTORE"
    },
    "7358": {
      "op": "PUSH32",
      "value": "0x517565727920666F72207A65726F20616464726573732E000000000000000000"
    },
    "7391": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "7393": {
      "op": "DUP3"
    },
    "7394": {
      "op": "ADD"
    },
    "7395": {
      "op": "MSTORE"
    },
    "7396": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "7398": {
      "op": "ADD"
    },
    "7399": {
      "fn": "Soulbound.issuerOf",
      "offset": [
        4417,
        4470
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x6E4"
    },
    "7402": {
      "op": "JUMP"
    },
    "7403": {
      "fn": "Soulbound.issuerOf",
      "offset": [
        4417,
        4470
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "7404": {
      "fn": "Soulbound.issuerOf",
      "offset": [
        4527,
        4544
      ],
      "op": "PUSH2",
      "path": "3",
      "statement": 93,
      "value": "0x1CF4"
    },
    "7407": {
      "fn": "Soulbound.issuerOf",
      "offset": [
        4535,
        4543
      ],
      "op": "DUP3",
      "path": "3"
    },
    "7408": {
      "fn": "Soulbound.issuerOf",
      "offset": [
        4527,
        4534
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x1E01"
    },
    "7411": {
      "fn": "Soulbound.issuerOf",
      "jump": "i",
      "offset": [
        4527,
        4544
      ],
      "op": "JUMP",
      "path": "3"
    },
    "7412": {
      "branch": 176,
      "fn": "Soulbound.issuerOf",
      "offset": [
        4527,
        4544
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "7413": {
      "fn": "Soulbound.issuerOf",
      "offset": [
        4519,
        4568
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x1D36"
    },
    "7416": {
      "branch": 176,
      "fn": "Soulbound.issuerOf",
      "offset": [
        4519,
        4568
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "7417": {
      "fn": "Soulbound.issuerOf",
      "offset": [
        4519,
        4568
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "7419": {
      "fn": "Soulbound.issuerOf",
      "offset": [
        4519,
        4568
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "7420": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "7424": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "7426": {
      "op": "SHL"
    },
    "7427": {
      "fn": "Soulbound.issuerOf",
      "offset": [
        4519,
        4568
      ],
      "op": "DUP2",
      "path": "3"
    },
    "7428": {
      "fn": "Soulbound.issuerOf",
      "offset": [
        4519,
        4568
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "7429": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "7431": {
      "fn": "Soulbound.issuerOf",
      "offset": [
        4519,
        4568
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x4"
    },
    "7433": {
      "fn": "Soulbound.issuerOf",
      "offset": [
        4519,
        4568
      ],
      "op": "DUP3",
      "path": "3"
    },
    "7434": {
      "fn": "Soulbound.issuerOf",
      "offset": [
        4519,
        4568
      ],
      "op": "ADD",
      "path": "3"
    },
    "7435": {
      "op": "MSTORE"
    },
    "7436": {
      "op": "PUSH1",
      "value": "0x13"
    },
    "7438": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "7440": {
      "op": "DUP3"
    },
    "7441": {
      "op": "ADD"
    },
    "7442": {
      "op": "MSTORE"
    },
    "7443": {
      "op": "PUSH19",
      "value": "0x2737B716B2BC34B9BA32B73A103A37B5B2B717"
    },
    "7463": {
      "op": "PUSH1",
      "value": "0x69"
    },
    "7465": {
      "op": "SHL"
    },
    "7466": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "7468": {
      "op": "DUP3"
    },
    "7469": {
      "op": "ADD"
    },
    "7470": {
      "op": "MSTORE"
    },
    "7471": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "7473": {
      "op": "ADD"
    },
    "7474": {
      "fn": "Soulbound.issuerOf",
      "offset": [
        4519,
        4568
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x6E4"
    },
    "7477": {
      "op": "JUMP"
    },
    "7478": {
      "fn": "Soulbound.issuerOf",
      "offset": [
        4519,
        4568
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "7479": {
      "fn": "Soulbound.issuerOf",
      "offset": [
        4658,
        4661
      ],
      "op": "DUP3",
      "path": "3",
      "statement": 94
    },
    "7480": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7482": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7484": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "7486": {
      "op": "SHL"
    },
    "7487": {
      "op": "SUB"
    },
    "7488": {
      "fn": "Soulbound.issuerOf",
      "offset": [
        4637,
        4661
      ],
      "op": "AND",
      "path": "3"
    },
    "7489": {
      "fn": "Soulbound.issuerOf",
      "offset": [
        4637,
        4654
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x1D49"
    },
    "7492": {
      "fn": "Soulbound.issuerOf",
      "offset": [
        4645,
        4653
      ],
      "op": "DUP4",
      "path": "3"
    },
    "7493": {
      "fn": "Soulbound.issuerOf",
      "offset": [
        4637,
        4644
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x11CB"
    },
    "7496": {
      "fn": "Soulbound.issuerOf",
      "jump": "i",
      "offset": [
        4637,
        4654
      ],
      "op": "JUMP",
      "path": "3"
    },
    "7497": {
      "fn": "Soulbound.issuerOf",
      "offset": [
        4637,
        4654
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "7498": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7500": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7502": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "7504": {
      "op": "SHL"
    },
    "7505": {
      "op": "SUB"
    },
    "7506": {
      "fn": "Soulbound.issuerOf",
      "offset": [
        4637,
        4661
      ],
      "op": "AND",
      "path": "3"
    },
    "7507": {
      "branch": 177,
      "fn": "Soulbound.issuerOf",
      "offset": [
        4637,
        4661
      ],
      "op": "EQ",
      "path": "3"
    },
    "7508": {
      "fn": "Soulbound.issuerOf",
      "offset": [
        4629,
        4692
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x1D9F"
    },
    "7511": {
      "branch": 177,
      "fn": "Soulbound.issuerOf",
      "offset": [
        4629,
        4692
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "7512": {
      "fn": "Soulbound.issuerOf",
      "offset": [
        4629,
        4692
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "7514": {
      "fn": "Soulbound.issuerOf",
      "offset": [
        4629,
        4692
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "7515": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "7519": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "7521": {
      "op": "SHL"
    },
    "7522": {
      "fn": "Soulbound.issuerOf",
      "offset": [
        4629,
        4692
      ],
      "op": "DUP2",
      "path": "3"
    },
    "7523": {
      "fn": "Soulbound.issuerOf",
      "offset": [
        4629,
        4692
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "7524": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "7526": {
      "fn": "Soulbound.issuerOf",
      "offset": [
        4629,
        4692
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x4"
    },
    "7528": {
      "fn": "Soulbound.issuerOf",
      "offset": [
        4629,
        4692
      ],
      "op": "DUP3",
      "path": "3"
    },
    "7529": {
      "fn": "Soulbound.issuerOf",
      "offset": [
        4629,
        4692
      ],
      "op": "ADD",
      "path": "3"
    },
    "7530": {
      "op": "MSTORE"
    },
    "7531": {
      "op": "PUSH1",
      "value": "0x1A"
    },
    "7533": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "7535": {
      "op": "DUP3"
    },
    "7536": {
      "op": "ADD"
    },
    "7537": {
      "op": "MSTORE"
    },
    "7538": {
      "op": "PUSH32",
      "value": "0x546F6B656E206E6F74206F776E65642062792061646472657373000000000000"
    },
    "7571": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "7573": {
      "op": "DUP3"
    },
    "7574": {
      "op": "ADD"
    },
    "7575": {
      "op": "MSTORE"
    },
    "7576": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "7578": {
      "op": "ADD"
    },
    "7579": {
      "fn": "Soulbound.issuerOf",
      "offset": [
        4629,
        4692
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x6E4"
    },
    "7582": {
      "op": "JUMP"
    },
    "7583": {
      "fn": "Soulbound.issuerOf",
      "offset": [
        4629,
        4692
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "7584": {
      "op": "POP"
    },
    "7585": {
      "fn": "Soulbound.issuerOf",
      "offset": [
        4756,
        4760
      ],
      "op": "ADDRESS",
      "path": "3",
      "statement": 95
    },
    "7586": {
      "fn": "Soulbound.issuerOf",
      "offset": [
        4277,
        4768
      ],
      "op": "SWAP3",
      "path": "3"
    },
    "7587": {
      "fn": "Soulbound.issuerOf",
      "offset": [
        4277,
        4768
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "7588": {
      "fn": "Soulbound.issuerOf",
      "offset": [
        4277,
        4768
      ],
      "op": "POP",
      "path": "3"
    },
    "7589": {
      "fn": "Soulbound.issuerOf",
      "offset": [
        4277,
        4768
      ],
      "op": "POP",
      "path": "3"
    },
    "7590": {
      "fn": "Soulbound.issuerOf",
      "jump": "o",
      "offset": [
        4277,
        4768
      ],
      "op": "JUMP",
      "path": "3"
    },
    "7591": {
      "fn": "Ownable._checkOwner",
      "offset": [
        1662,
        1792
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "7592": {
      "fn": "Ownable.owner",
      "offset": [
        1578,
        1584
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x6"
    },
    "7594": {
      "fn": "Ownable.owner",
      "offset": [
        1578,
        1584
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "7595": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7597": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7599": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "7601": {
      "op": "SHL"
    },
    "7602": {
      "op": "SUB"
    },
    "7603": {
      "fn": "Ownable.owner",
      "offset": [
        1578,
        1584
      ],
      "op": "AND",
      "path": "2"
    },
    "7604": {
      "fn": "Ownable._msgSender",
      "offset": [
        3057,
        3067
      ],
      "op": "CALLER",
      "path": "2",
      "statement": 96
    },
    "7605": {
      "branch": 173,
      "fn": "Ownable._checkOwner",
      "offset": [
        1725,
        1748
      ],
      "op": "EQ",
      "path": "2",
      "statement": 97
    },
    "7606": {
      "fn": "Ownable._checkOwner",
      "offset": [
        1717,
        1785
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x12CB"
    },
    "7609": {
      "branch": 173,
      "fn": "Ownable._checkOwner",
      "offset": [
        1717,
        1785
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "7610": {
      "fn": "Ownable._checkOwner",
      "offset": [
        1717,
        1785
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "7612": {
      "fn": "Ownable._checkOwner",
      "offset": [
        1717,
        1785
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "7613": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "7617": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "7619": {
      "op": "SHL"
    },
    "7620": {
      "fn": "Ownable._checkOwner",
      "offset": [
        1717,
        1785
      ],
      "op": "DUP2",
      "path": "2"
    },
    "7621": {
      "fn": "Ownable._checkOwner",
      "offset": [
        1717,
        1785
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "7622": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "7624": {
      "fn": "Ownable._checkOwner",
      "offset": [
        1717,
        1785
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "7626": {
      "fn": "Ownable._checkOwner",
      "offset": [
        1717,
        1785
      ],
      "op": "DUP3",
      "path": "2"
    },
    "7627": {
      "fn": "Ownable._checkOwner",
      "offset": [
        1717,
        1785
      ],
      "op": "ADD",
      "path": "2"
    },
    "7628": {
      "op": "DUP2"
    },
    "7629": {
      "op": "SWAP1"
    },
    "7630": {
      "op": "MSTORE"
    },
    "7631": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "7633": {
      "op": "DUP3"
    },
    "7634": {
      "op": "ADD"
    },
    "7635": {
      "op": "MSTORE"
    },
    "7636": {
      "op": "PUSH32",
      "value": "0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572"
    },
    "7669": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "7671": {
      "op": "DUP3"
    },
    "7672": {
      "op": "ADD"
    },
    "7673": {
      "op": "MSTORE"
    },
    "7674": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "7676": {
      "op": "ADD"
    },
    "7677": {
      "fn": "Ownable._checkOwner",
      "offset": [
        1717,
        1785
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x6E4"
    },
    "7680": {
      "op": "JUMP"
    },
    "7681": {
      "fn": "ERC4973._exists",
      "offset": [
        5509,
        5628
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "7682": {
      "fn": "ERC4973._exists",
      "offset": [
        5574,
        5578
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x0"
    },
    "7684": {
      "fn": "ERC4973._exists",
      "offset": [
        5593,
        5609
      ],
      "op": "SWAP1",
      "path": "7",
      "statement": 98
    },
    "7685": {
      "fn": "ERC4973._exists",
      "offset": [
        5593,
        5609
      ],
      "op": "DUP2",
      "path": "7"
    },
    "7686": {
      "fn": "ERC4973._exists",
      "offset": [
        5593,
        5609
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "7687": {
      "fn": "ERC4973._exists",
      "offset": [
        5593,
        5600
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x3"
    },
    "7689": {
      "fn": "ERC4973._exists",
      "offset": [
        5593,
        5609
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x20"
    },
    "7691": {
      "fn": "ERC4973._exists",
      "offset": [
        5593,
        5609
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "7692": {
      "fn": "ERC4973._exists",
      "offset": [
        5593,
        5609
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x40"
    },
    "7694": {
      "fn": "ERC4973._exists",
      "offset": [
        5593,
        5609
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "7695": {
      "fn": "ERC4973._exists",
      "offset": [
        5593,
        5609
      ],
      "op": "KECCAK256",
      "path": "7"
    },
    "7696": {
      "fn": "ERC4973._exists",
      "offset": [
        5593,
        5609
      ],
      "op": "SLOAD",
      "path": "7"
    },
    "7697": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7699": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7701": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "7703": {
      "op": "SHL"
    },
    "7704": {
      "op": "SUB"
    },
    "7705": {
      "fn": "ERC4973._exists",
      "offset": [
        5593,
        5609
      ],
      "op": "AND",
      "path": "7"
    },
    "7706": {
      "fn": "ERC4973._exists",
      "offset": [
        5593,
        5623
      ],
      "op": "ISZERO",
      "path": "7"
    },
    "7707": {
      "fn": "ERC4973._exists",
      "offset": [
        5593,
        5623
      ],
      "op": "ISZERO",
      "path": "7"
    },
    "7708": {
      "fn": "ERC4973._exists",
      "offset": [
        5593,
        5623
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "7709": {
      "fn": "ERC4973._exists",
      "jump": "o",
      "offset": [
        5509,
        5628
      ],
      "op": "JUMP",
      "path": "7"
    },
    "7710": {
      "fn": "Soulbound.revoke",
      "offset": [
        3328,
        3755
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "7711": {
      "fn": "Soulbound.revoke",
      "offset": [
        3394,
        3398
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "7713": {
      "fn": "Soulbound.revoke",
      "offset": [
        3457,
        3474
      ],
      "op": "PUSH2",
      "path": "3",
      "statement": 99,
      "value": "0x1E29"
    },
    "7716": {
      "fn": "Soulbound.revoke",
      "offset": [
        3465,
        3473
      ],
      "op": "DUP3",
      "path": "3"
    },
    "7717": {
      "fn": "Soulbound.revoke",
      "offset": [
        3457,
        3464
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x1E01"
    },
    "7720": {
      "fn": "Soulbound.revoke",
      "jump": "i",
      "offset": [
        3457,
        3474
      ],
      "op": "JUMP",
      "path": "3"
    },
    "7721": {
      "branch": 178,
      "fn": "Soulbound.revoke",
      "offset": [
        3457,
        3474
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "7722": {
      "fn": "Soulbound.revoke",
      "offset": [
        3449,
        3498
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x1E6B"
    },
    "7725": {
      "branch": 178,
      "fn": "Soulbound.revoke",
      "offset": [
        3449,
        3498
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "7726": {
      "fn": "Soulbound.revoke",
      "offset": [
        3449,
        3498
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "7728": {
      "fn": "Soulbound.revoke",
      "offset": [
        3449,
        3498
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "7729": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "7733": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "7735": {
      "op": "SHL"
    },
    "7736": {
      "fn": "Soulbound.revoke",
      "offset": [
        3449,
        3498
      ],
      "op": "DUP2",
      "path": "3"
    },
    "7737": {
      "fn": "Soulbound.revoke",
      "offset": [
        3449,
        3498
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "7738": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "7740": {
      "fn": "Soulbound.revoke",
      "offset": [
        3449,
        3498
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x4"
    },
    "7742": {
      "fn": "Soulbound.revoke",
      "offset": [
        3449,
        3498
      ],
      "op": "DUP3",
      "path": "3"
    },
    "7743": {
      "fn": "Soulbound.revoke",
      "offset": [
        3449,
        3498
      ],
      "op": "ADD",
      "path": "3"
    },
    "7744": {
      "op": "MSTORE"
    },
    "7745": {
      "op": "PUSH1",
      "value": "0x13"
    },
    "7747": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "7749": {
      "op": "DUP3"
    },
    "7750": {
      "op": "ADD"
    },
    "7751": {
      "op": "MSTORE"
    },
    "7752": {
      "op": "PUSH19",
      "value": "0x2737B716B2BC34B9BA32B73A103A37B5B2B717"
    },
    "7772": {
      "op": "PUSH1",
      "value": "0x69"
    },
    "7774": {
      "op": "SHL"
    },
    "7775": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "7777": {
      "op": "DUP3"
    },
    "7778": {
      "op": "ADD"
    },
    "7779": {
      "op": "MSTORE"
    },
    "7780": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "7782": {
      "op": "ADD"
    },
    "7783": {
      "fn": "Soulbound.revoke",
      "offset": [
        3449,
        3498
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x6E4"
    },
    "7786": {
      "op": "JUMP"
    },
    "7787": {
      "fn": "Soulbound.revoke",
      "offset": [
        3449,
        3498
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "7788": {
      "fn": "Soulbound.revoke",
      "offset": [
        3590,
        3595
      ],
      "op": "DUP3",
      "path": "3",
      "statement": 100
    },
    "7789": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7791": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7793": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "7795": {
      "op": "SHL"
    },
    "7796": {
      "op": "SUB"
    },
    "7797": {
      "fn": "Soulbound.revoke",
      "offset": [
        3569,
        3595
      ],
      "op": "AND",
      "path": "3"
    },
    "7798": {
      "fn": "Soulbound.revoke",
      "offset": [
        3569,
        3586
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x1E7E"
    },
    "7801": {
      "fn": "Soulbound.revoke",
      "offset": [
        3577,
        3585
      ],
      "op": "DUP4",
      "path": "3"
    },
    "7802": {
      "fn": "Soulbound.revoke",
      "offset": [
        3569,
        3576
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x11CB"
    },
    "7805": {
      "fn": "Soulbound.revoke",
      "jump": "i",
      "offset": [
        3569,
        3586
      ],
      "op": "JUMP",
      "path": "3"
    },
    "7806": {
      "fn": "Soulbound.revoke",
      "offset": [
        3569,
        3586
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "7807": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7809": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7811": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "7813": {
      "op": "SHL"
    },
    "7814": {
      "op": "SUB"
    },
    "7815": {
      "fn": "Soulbound.revoke",
      "offset": [
        3569,
        3595
      ],
      "op": "AND",
      "path": "3"
    },
    "7816": {
      "branch": 179,
      "fn": "Soulbound.revoke",
      "offset": [
        3569,
        3595
      ],
      "op": "EQ",
      "path": "3"
    },
    "7817": {
      "fn": "Soulbound.revoke",
      "offset": [
        3561,
        3626
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x1ED4"
    },
    "7820": {
      "branch": 179,
      "fn": "Soulbound.revoke",
      "offset": [
        3561,
        3626
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "7821": {
      "fn": "Soulbound.revoke",
      "offset": [
        3561,
        3626
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "7823": {
      "fn": "Soulbound.revoke",
      "offset": [
        3561,
        3626
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "7824": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "7828": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "7830": {
      "op": "SHL"
    },
    "7831": {
      "fn": "Soulbound.revoke",
      "offset": [
        3561,
        3626
      ],
      "op": "DUP2",
      "path": "3"
    },
    "7832": {
      "fn": "Soulbound.revoke",
      "offset": [
        3561,
        3626
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "7833": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "7835": {
      "fn": "Soulbound.revoke",
      "offset": [
        3561,
        3626
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x4"
    },
    "7837": {
      "fn": "Soulbound.revoke",
      "offset": [
        3561,
        3626
      ],
      "op": "DUP3",
      "path": "3"
    },
    "7838": {
      "fn": "Soulbound.revoke",
      "offset": [
        3561,
        3626
      ],
      "op": "ADD",
      "path": "3"
    },
    "7839": {
      "op": "MSTORE"
    },
    "7840": {
      "op": "PUSH1",
      "value": "0x1A"
    },
    "7842": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "7844": {
      "op": "DUP3"
    },
    "7845": {
      "op": "ADD"
    },
    "7846": {
      "op": "MSTORE"
    },
    "7847": {
      "op": "PUSH32",
      "value": "0x546F6B656E206E6F74206F776E65642062792061646472657373000000000000"
    },
    "7880": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "7882": {
      "op": "DUP3"
    },
    "7883": {
      "op": "ADD"
    },
    "7884": {
      "op": "MSTORE"
    },
    "7885": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "7887": {
      "op": "ADD"
    },
    "7888": {
      "fn": "Soulbound.revoke",
      "offset": [
        3561,
        3626
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x6E4"
    },
    "7891": {
      "op": "JUMP"
    },
    "7892": {
      "fn": "Soulbound.revoke",
      "offset": [
        3561,
        3626
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "7893": {
      "fn": "Soulbound.revoke",
      "offset": [
        3669,
        3697
      ],
      "op": "PUSH2",
      "path": "3",
      "statement": 101,
      "value": "0x1EDD"
    },
    "7896": {
      "fn": "Soulbound.revoke",
      "offset": [
        3688,
        3696
      ],
      "op": "DUP3",
      "path": "3"
    },
    "7897": {
      "fn": "Soulbound.revoke",
      "offset": [
        3669,
        3687
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x2310"
    },
    "7900": {
      "fn": "Soulbound.revoke",
      "jump": "i",
      "offset": [
        3669,
        3697
      ],
      "op": "JUMP",
      "path": "3"
    },
    "7901": {
      "fn": "Soulbound.revoke",
      "offset": [
        3669,
        3697
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "7902": {
      "op": "POP"
    },
    "7903": {
      "fn": "Soulbound.revoke",
      "offset": [
        3744,
        3748
      ],
      "op": "PUSH1",
      "path": "3",
      "statement": 102,
      "value": "0x1"
    },
    "7905": {
      "fn": "Soulbound.revoke",
      "offset": [
        3328,
        3755
      ],
      "op": "SWAP3",
      "path": "3"
    },
    "7906": {
      "fn": "Soulbound.revoke",
      "offset": [
        3328,
        3755
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "7907": {
      "fn": "Soulbound.revoke",
      "offset": [
        3328,
        3755
      ],
      "op": "POP",
      "path": "3"
    },
    "7908": {
      "fn": "Soulbound.revoke",
      "offset": [
        3328,
        3755
      ],
      "op": "POP",
      "path": "3"
    },
    "7909": {
      "fn": "Soulbound.revoke",
      "jump": "o",
      "offset": [
        3328,
        3755
      ],
      "op": "JUMP",
      "path": "3"
    },
    "7910": {
      "fn": "SoulboundCore.toString",
      "offset": [
        6613,
        7316
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "7911": {
      "fn": "SoulboundCore.toString",
      "offset": [
        6669,
        6682
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x60"
    },
    "7913": {
      "fn": "SoulboundCore.toString",
      "offset": [
        6886,
        6891
      ],
      "op": "DUP2",
      "path": "4"
    },
    "7914": {
      "fn": "SoulboundCore.toString",
      "offset": [
        6895,
        6896
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "7916": {
      "branch": 192,
      "fn": "SoulboundCore.toString",
      "offset": [
        6886,
        6896
      ],
      "op": "SUB",
      "path": "4"
    },
    "7917": {
      "fn": "SoulboundCore.toString",
      "offset": [
        6882,
        6933
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x1F0D"
    },
    "7920": {
      "branch": 192,
      "fn": "SoulboundCore.toString",
      "offset": [
        6882,
        6933
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "7921": {
      "op": "POP"
    },
    "7922": {
      "op": "POP"
    },
    "7923": {
      "fn": "SoulboundCore.toString",
      "offset": [
        6912,
        6922
      ],
      "op": "PUSH1",
      "path": "4",
      "statement": 103,
      "value": "0x40"
    },
    "7925": {
      "fn": "SoulboundCore.toString",
      "offset": [
        6912,
        6922
      ],
      "op": "DUP1",
      "path": "4"
    },
    "7926": {
      "fn": "SoulboundCore.toString",
      "offset": [
        6912,
        6922
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "7927": {
      "fn": "SoulboundCore.toString",
      "offset": [
        6912,
        6922
      ],
      "op": "DUP1",
      "path": "4"
    },
    "7928": {
      "fn": "SoulboundCore.toString",
      "offset": [
        6912,
        6922
      ],
      "op": "DUP3",
      "path": "4"
    },
    "7929": {
      "fn": "SoulboundCore.toString",
      "offset": [
        6912,
        6922
      ],
      "op": "ADD",
      "path": "4"
    },
    "7930": {
      "fn": "SoulboundCore.toString",
      "offset": [
        6912,
        6922
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "7931": {
      "fn": "SoulboundCore.toString",
      "offset": [
        6912,
        6922
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "7932": {
      "fn": "SoulboundCore.toString",
      "offset": [
        6912,
        6922
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "7933": {
      "fn": "SoulboundCore.toString",
      "offset": [
        6912,
        6922
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x1"
    },
    "7935": {
      "fn": "SoulboundCore.toString",
      "offset": [
        6912,
        6922
      ],
      "op": "DUP2",
      "path": "4"
    },
    "7936": {
      "fn": "SoulboundCore.toString",
      "offset": [
        6912,
        6922
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "7937": {
      "op": "PUSH1",
      "value": "0x3"
    },
    "7939": {
      "op": "PUSH1",
      "value": "0xFC"
    },
    "7941": {
      "op": "SHL"
    },
    "7942": {
      "fn": "SoulboundCore.toString",
      "offset": [
        6912,
        6922
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x20"
    },
    "7944": {
      "fn": "SoulboundCore.toString",
      "offset": [
        6912,
        6922
      ],
      "op": "DUP3",
      "path": "4"
    },
    "7945": {
      "fn": "SoulboundCore.toString",
      "offset": [
        6912,
        6922
      ],
      "op": "ADD",
      "path": "4"
    },
    "7946": {
      "fn": "SoulboundCore.toString",
      "offset": [
        6912,
        6922
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "7947": {
      "fn": "SoulboundCore.toString",
      "offset": [
        6912,
        6922
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "7948": {
      "fn": "SoulboundCore.toString",
      "jump": "o",
      "offset": [
        6613,
        7316
      ],
      "op": "JUMP",
      "path": "4"
    },
    "7949": {
      "fn": "SoulboundCore.toString",
      "offset": [
        6882,
        6933
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "7950": {
      "fn": "SoulboundCore.toString",
      "offset": [
        6957,
        6962
      ],
      "op": "DUP2",
      "path": "4"
    },
    "7951": {
      "fn": "SoulboundCore.toString",
      "offset": [
        6942,
        6954
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "7953": {
      "fn": "SoulboundCore.toString",
      "offset": [
        6996,
        7071
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "7954": {
      "fn": "SoulboundCore.toString",
      "offset": [
        7003,
        7012
      ],
      "op": "DUP2",
      "path": "4"
    },
    "7955": {
      "fn": "SoulboundCore.toString",
      "offset": [
        7003,
        7012
      ],
      "op": "ISZERO",
      "path": "4"
    },
    "7956": {
      "fn": "SoulboundCore.toString",
      "offset": [
        6996,
        7071
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x1F37"
    },
    "7959": {
      "fn": "SoulboundCore.toString",
      "offset": [
        6996,
        7071
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "7960": {
      "fn": "SoulboundCore.toString",
      "offset": [
        7028,
        7036
      ],
      "op": "DUP1",
      "path": "4",
      "statement": 104
    },
    "7961": {
      "fn": "SoulboundCore.toString",
      "offset": [
        7028,
        7036
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x1F21"
    },
    "7964": {
      "fn": "SoulboundCore.toString",
      "offset": [
        7028,
        7036
      ],
      "op": "DUP2",
      "path": "4"
    },
    "7965": {
      "fn": "SoulboundCore.toString",
      "offset": [
        7028,
        7036
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x2AFF"
    },
    "7968": {
      "fn": "SoulboundCore.toString",
      "jump": "i",
      "offset": [
        7028,
        7036
      ],
      "op": "JUMP",
      "path": "4"
    },
    "7969": {
      "fn": "SoulboundCore.toString",
      "offset": [
        7028,
        7036
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "7970": {
      "fn": "SoulboundCore.toString",
      "offset": [
        7028,
        7036
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "7971": {
      "op": "POP"
    },
    "7972": {
      "fn": "SoulboundCore.toString",
      "offset": [
        7050,
        7060
      ],
      "op": "PUSH2",
      "path": "4",
      "statement": 105,
      "value": "0x1F30"
    },
    "7975": {
      "fn": "SoulboundCore.toString",
      "offset": [
        7050,
        7060
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "7976": {
      "op": "POP"
    },
    "7977": {
      "fn": "SoulboundCore.toString",
      "offset": [
        7058,
        7060
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0xA"
    },
    "7979": {
      "fn": "SoulboundCore.toString",
      "offset": [
        7050,
        7060
      ],
      "op": "DUP4",
      "path": "4"
    },
    "7980": {
      "fn": "SoulboundCore.toString",
      "offset": [
        7050,
        7060
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x2B46"
    },
    "7983": {
      "fn": "SoulboundCore.toString",
      "jump": "i",
      "offset": [
        7050,
        7060
      ],
      "op": "JUMP",
      "path": "4"
    },
    "7984": {
      "fn": "SoulboundCore.toString",
      "offset": [
        7050,
        7060
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "7985": {
      "fn": "SoulboundCore.toString",
      "offset": [
        7050,
        7060
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "7986": {
      "fn": "SoulboundCore.toString",
      "offset": [
        7050,
        7060
      ],
      "op": "POP",
      "path": "4"
    },
    "7987": {
      "fn": "SoulboundCore.toString",
      "offset": [
        6996,
        7071
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x1F11"
    },
    "7990": {
      "fn": "SoulboundCore.toString",
      "offset": [
        6996,
        7071
      ],
      "op": "JUMP",
      "path": "4"
    },
    "7991": {
      "fn": "SoulboundCore.toString",
      "offset": [
        6996,
        7071
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "7992": {
      "fn": "SoulboundCore.toString",
      "offset": [
        7080,
        7099
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "7994": {
      "fn": "SoulboundCore.toString",
      "offset": [
        7112,
        7118
      ],
      "op": "DUP2",
      "path": "4"
    },
    "7995": {
      "fn": "SoulboundCore.toString",
      "offset": [
        7102,
        7119
      ],
      "op": "PUSH8",
      "path": "4",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "8004": {
      "fn": "SoulboundCore.toString",
      "offset": [
        7102,
        7119
      ],
      "op": "DUP2",
      "path": "4"
    },
    "8005": {
      "fn": "SoulboundCore.toString",
      "offset": [
        7102,
        7119
      ],
      "op": "GT",
      "path": "4"
    },
    "8006": {
      "fn": "SoulboundCore.toString",
      "offset": [
        7102,
        7119
      ],
      "op": "ISZERO",
      "path": "4"
    },
    "8007": {
      "fn": "SoulboundCore.toString",
      "offset": [
        7102,
        7119
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x1F52"
    },
    "8010": {
      "fn": "SoulboundCore.toString",
      "offset": [
        7102,
        7119
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "8011": {
      "fn": "SoulboundCore.toString",
      "offset": [
        7102,
        7119
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x1F52"
    },
    "8014": {
      "fn": "SoulboundCore.toString",
      "offset": [
        7102,
        7119
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x265F"
    },
    "8017": {
      "fn": "SoulboundCore.toString",
      "jump": "i",
      "offset": [
        7102,
        7119
      ],
      "op": "JUMP",
      "path": "4"
    },
    "8018": {
      "fn": "SoulboundCore.toString",
      "offset": [
        7102,
        7119
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "8019": {
      "fn": "SoulboundCore.toString",
      "offset": [
        7102,
        7119
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "8021": {
      "fn": "SoulboundCore.toString",
      "offset": [
        7102,
        7119
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "8022": {
      "fn": "SoulboundCore.toString",
      "offset": [
        7102,
        7119
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "8023": {
      "fn": "SoulboundCore.toString",
      "offset": [
        7102,
        7119
      ],
      "op": "DUP1",
      "path": "4"
    },
    "8024": {
      "fn": "SoulboundCore.toString",
      "offset": [
        7102,
        7119
      ],
      "op": "DUP3",
      "path": "4"
    },
    "8025": {
      "fn": "SoulboundCore.toString",
      "offset": [
        7102,
        7119
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "8026": {
      "fn": "SoulboundCore.toString",
      "offset": [
        7102,
        7119
      ],
      "op": "DUP1",
      "path": "4"
    },
    "8027": {
      "fn": "SoulboundCore.toString",
      "offset": [
        7102,
        7119
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x1F"
    },
    "8029": {
      "fn": "SoulboundCore.toString",
      "offset": [
        7102,
        7119
      ],
      "op": "ADD",
      "path": "4"
    },
    "8030": {
      "fn": "SoulboundCore.toString",
      "offset": [
        7102,
        7119
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x1F"
    },
    "8032": {
      "fn": "SoulboundCore.toString",
      "offset": [
        7102,
        7119
      ],
      "op": "NOT",
      "path": "4"
    },
    "8033": {
      "fn": "SoulboundCore.toString",
      "offset": [
        7102,
        7119
      ],
      "op": "AND",
      "path": "4"
    },
    "8034": {
      "fn": "SoulboundCore.toString",
      "offset": [
        7102,
        7119
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x20"
    },
    "8036": {
      "fn": "SoulboundCore.toString",
      "offset": [
        7102,
        7119
      ],
      "op": "ADD",
      "path": "4"
    },
    "8037": {
      "fn": "SoulboundCore.toString",
      "offset": [
        7102,
        7119
      ],
      "op": "DUP3",
      "path": "4"
    },
    "8038": {
      "fn": "SoulboundCore.toString",
      "offset": [
        7102,
        7119
      ],
      "op": "ADD",
      "path": "4"
    },
    "8039": {
      "fn": "SoulboundCore.toString",
      "offset": [
        7102,
        7119
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "8041": {
      "fn": "SoulboundCore.toString",
      "offset": [
        7102,
        7119
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "8042": {
      "fn": "SoulboundCore.toString",
      "offset": [
        7102,
        7119
      ],
      "op": "DUP1",
      "path": "4"
    },
    "8043": {
      "fn": "SoulboundCore.toString",
      "offset": [
        7102,
        7119
      ],
      "op": "ISZERO",
      "path": "4"
    },
    "8044": {
      "fn": "SoulboundCore.toString",
      "offset": [
        7102,
        7119
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x1F7C"
    },
    "8047": {
      "fn": "SoulboundCore.toString",
      "offset": [
        7102,
        7119
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "8048": {
      "fn": "SoulboundCore.toString",
      "offset": [
        7102,
        7119
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x20"
    },
    "8050": {
      "fn": "SoulboundCore.toString",
      "offset": [
        7102,
        7119
      ],
      "op": "DUP3",
      "path": "4"
    },
    "8051": {
      "fn": "SoulboundCore.toString",
      "offset": [
        7102,
        7119
      ],
      "op": "ADD",
      "path": "4"
    },
    "8052": {
      "fn": "SoulboundCore.toString",
      "offset": [
        7102,
        7119
      ],
      "op": "DUP2",
      "path": "4"
    },
    "8053": {
      "fn": "SoulboundCore.toString",
      "offset": [
        7102,
        7119
      ],
      "op": "DUP1",
      "path": "4"
    },
    "8054": {
      "fn": "SoulboundCore.toString",
      "offset": [
        7102,
        7119
      ],
      "op": "CALLDATASIZE",
      "path": "4"
    },
    "8055": {
      "fn": "SoulboundCore.toString",
      "offset": [
        7102,
        7119
      ],
      "op": "DUP4",
      "path": "4"
    },
    "8056": {
      "fn": "SoulboundCore.toString",
      "offset": [
        7102,
        7119
      ],
      "op": "CALLDATACOPY",
      "path": "4"
    },
    "8057": {
      "fn": "SoulboundCore.toString",
      "offset": [
        7102,
        7119
      ],
      "op": "ADD",
      "path": "4"
    },
    "8058": {
      "fn": "SoulboundCore.toString",
      "offset": [
        7102,
        7119
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "8059": {
      "op": "POP"
    },
    "8060": {
      "fn": "SoulboundCore.toString",
      "offset": [
        7102,
        7119
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "8061": {
      "fn": "SoulboundCore.toString",
      "offset": [
        7102,
        7119
      ],
      "op": "POP",
      "path": "4"
    },
    "8062": {
      "fn": "SoulboundCore.toString",
      "offset": [
        7080,
        7119
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "8063": {
      "fn": "SoulboundCore.toString",
      "offset": [
        7080,
        7119
      ],
      "op": "POP",
      "path": "4"
    },
    "8064": {
      "fn": "SoulboundCore.toString",
      "offset": [
        7129,
        7279
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "8065": {
      "fn": "SoulboundCore.toString",
      "offset": [
        7136,
        7146
      ],
      "op": "DUP5",
      "path": "4"
    },
    "8066": {
      "fn": "SoulboundCore.toString",
      "offset": [
        7136,
        7146
      ],
      "op": "ISZERO",
      "path": "4"
    },
    "8067": {
      "fn": "SoulboundCore.toString",
      "offset": [
        7129,
        7279
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x1FE7"
    },
    "8070": {
      "fn": "SoulboundCore.toString",
      "offset": [
        7129,
        7279
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "8071": {
      "fn": "SoulboundCore.toString",
      "offset": [
        7162,
        7173
      ],
      "op": "PUSH2",
      "path": "4",
      "statement": 106,
      "value": "0x1F91"
    },
    "8074": {
      "fn": "SoulboundCore.toString",
      "offset": [
        7172,
        7173
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x1"
    },
    "8076": {
      "fn": "SoulboundCore.toString",
      "offset": [
        7162,
        7173
      ],
      "op": "DUP4",
      "path": "4"
    },
    "8077": {
      "fn": "SoulboundCore.toString",
      "offset": [
        7162,
        7173
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x2AE8"
    },
    "8080": {
      "fn": "SoulboundCore.toString",
      "jump": "i",
      "offset": [
        7162,
        7173
      ],
      "op": "JUMP",
      "path": "4"
    },
    "8081": {
      "fn": "SoulboundCore.toString",
      "offset": [
        7162,
        7173
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "8082": {
      "fn": "SoulboundCore.toString",
      "offset": [
        7162,
        7173
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "8083": {
      "op": "POP"
    },
    "8084": {
      "fn": "SoulboundCore.toString",
      "offset": [
        7230,
        7240
      ],
      "op": "PUSH2",
      "path": "4",
      "statement": 107,
      "value": "0x1F9E"
    },
    "8087": {
      "fn": "SoulboundCore.toString",
      "offset": [
        7238,
        7240
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0xA"
    },
    "8089": {
      "fn": "SoulboundCore.toString",
      "offset": [
        7230,
        7235
      ],
      "op": "DUP7",
      "path": "4"
    },
    "8090": {
      "fn": "SoulboundCore.toString",
      "offset": [
        7230,
        7240
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x2B5A"
    },
    "8093": {
      "fn": "SoulboundCore.toString",
      "jump": "i",
      "offset": [
        7230,
        7240
      ],
      "op": "JUMP",
      "path": "4"
    },
    "8094": {
      "fn": "SoulboundCore.toString",
      "offset": [
        7230,
        7240
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "8095": {
      "fn": "SoulboundCore.toString",
      "offset": [
        7217,
        7241
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x1FA9"
    },
    "8098": {
      "fn": "SoulboundCore.toString",
      "offset": [
        7217,
        7241
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "8099": {
      "fn": "SoulboundCore.toString",
      "offset": [
        7217,
        7219
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x30"
    },
    "8101": {
      "fn": "SoulboundCore.toString",
      "offset": [
        7217,
        7241
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x2B18"
    },
    "8104": {
      "fn": "SoulboundCore.toString",
      "jump": "i",
      "offset": [
        7217,
        7241
      ],
      "op": "JUMP",
      "path": "4"
    },
    "8105": {
      "fn": "SoulboundCore.toString",
      "offset": [
        7217,
        7241
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "8106": {
      "fn": "SoulboundCore.toString",
      "offset": [
        7204,
        7243
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0xF8"
    },
    "8108": {
      "fn": "SoulboundCore.toString",
      "offset": [
        7204,
        7243
      ],
      "op": "SHL",
      "path": "4"
    },
    "8109": {
      "fn": "SoulboundCore.toString",
      "offset": [
        7187,
        7193
      ],
      "op": "DUP2",
      "path": "4"
    },
    "8110": {
      "fn": "SoulboundCore.toString",
      "offset": [
        7194,
        7200
      ],
      "op": "DUP4",
      "path": "4"
    },
    "8111": {
      "fn": "SoulboundCore.toString",
      "offset": [
        7187,
        7201
      ],
      "op": "DUP2",
      "path": "4"
    },
    "8112": {
      "fn": "SoulboundCore.toString",
      "offset": [
        7187,
        7201
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "8113": {
      "fn": "SoulboundCore.toString",
      "offset": [
        7187,
        7201
      ],
      "op": "DUP2",
      "path": "4"
    },
    "8114": {
      "fn": "SoulboundCore.toString",
      "offset": [
        7187,
        7201
      ],
      "op": "LT",
      "path": "4"
    },
    "8115": {
      "fn": "SoulboundCore.toString",
      "offset": [
        7187,
        7201
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x1FBE"
    },
    "8118": {
      "fn": "SoulboundCore.toString",
      "offset": [
        7187,
        7201
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "8119": {
      "fn": "SoulboundCore.toString",
      "offset": [
        7187,
        7201
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x1FBE"
    },
    "8122": {
      "fn": "SoulboundCore.toString",
      "offset": [
        7187,
        7201
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x2B6E"
    },
    "8125": {
      "fn": "SoulboundCore.toString",
      "jump": "i",
      "offset": [
        7187,
        7201
      ],
      "op": "JUMP",
      "path": "4"
    },
    "8126": {
      "fn": "SoulboundCore.toString",
      "offset": [
        7187,
        7201
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "8127": {
      "fn": "SoulboundCore.toString",
      "offset": [
        7187,
        7201
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x20"
    },
    "8129": {
      "fn": "SoulboundCore.toString",
      "offset": [
        7187,
        7201
      ],
      "op": "ADD",
      "path": "4"
    },
    "8130": {
      "fn": "SoulboundCore.toString",
      "offset": [
        7187,
        7201
      ],
      "op": "ADD",
      "path": "4"
    },
    "8131": {
      "fn": "SoulboundCore.toString",
      "offset": [
        7187,
        7243
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "8132": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8134": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8136": {
      "op": "PUSH1",
      "value": "0xF8"
    },
    "8138": {
      "op": "SHL"
    },
    "8139": {
      "op": "SUB"
    },
    "8140": {
      "fn": "SoulboundCore.toString",
      "offset": [
        7187,
        7243
      ],
      "op": "NOT",
      "path": "4"
    },
    "8141": {
      "fn": "SoulboundCore.toString",
      "offset": [
        7187,
        7243
      ],
      "op": "AND",
      "path": "4"
    },
    "8142": {
      "fn": "SoulboundCore.toString",
      "offset": [
        7187,
        7243
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "8143": {
      "fn": "SoulboundCore.toString",
      "offset": [
        7187,
        7243
      ],
      "op": "DUP2",
      "path": "4"
    },
    "8144": {
      "fn": "SoulboundCore.toString",
      "offset": [
        7187,
        7243
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "8146": {
      "fn": "SoulboundCore.toString",
      "offset": [
        7187,
        7243
      ],
      "op": "BYTE",
      "path": "4"
    },
    "8147": {
      "fn": "SoulboundCore.toString",
      "offset": [
        7187,
        7243
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "8148": {
      "fn": "SoulboundCore.toString",
      "offset": [
        7187,
        7243
      ],
      "op": "MSTORE8",
      "path": "4"
    },
    "8149": {
      "op": "POP"
    },
    "8150": {
      "fn": "SoulboundCore.toString",
      "offset": [
        7257,
        7268
      ],
      "op": "PUSH2",
      "path": "4",
      "statement": 108,
      "value": "0x1FE0"
    },
    "8153": {
      "fn": "SoulboundCore.toString",
      "offset": [
        7266,
        7268
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0xA"
    },
    "8155": {
      "fn": "SoulboundCore.toString",
      "offset": [
        7257,
        7268
      ],
      "op": "DUP7",
      "path": "4"
    },
    "8156": {
      "fn": "SoulboundCore.toString",
      "offset": [
        7257,
        7268
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x2B46"
    },
    "8159": {
      "fn": "SoulboundCore.toString",
      "jump": "i",
      "offset": [
        7257,
        7268
      ],
      "op": "JUMP",
      "path": "4"
    },
    "8160": {
      "fn": "SoulboundCore.toString",
      "offset": [
        7257,
        7268
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "8161": {
      "fn": "SoulboundCore.toString",
      "offset": [
        7257,
        7268
      ],
      "op": "SWAP5",
      "path": "4"
    },
    "8162": {
      "fn": "SoulboundCore.toString",
      "offset": [
        7257,
        7268
      ],
      "op": "POP",
      "path": "4"
    },
    "8163": {
      "fn": "SoulboundCore.toString",
      "offset": [
        7129,
        7279
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x1F80"
    },
    "8166": {
      "fn": "SoulboundCore.toString",
      "offset": [
        7129,
        7279
      ],
      "op": "JUMP",
      "path": "4"
    },
    "8167": {
      "fn": "SoulboundCore.toString",
      "offset": [
        7129,
        7279
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "8168": {
      "fn": "SoulboundCore.toString",
      "offset": [
        7302,
        7308
      ],
      "op": "SWAP5",
      "path": "4",
      "statement": 109
    },
    "8169": {
      "fn": "SoulboundCore.toString",
      "offset": [
        6613,
        7316
      ],
      "op": "SWAP4",
      "path": "4"
    },
    "8170": {
      "op": "POP"
    },
    "8171": {
      "op": "POP"
    },
    "8172": {
      "op": "POP"
    },
    "8173": {
      "op": "POP"
    },
    "8174": {
      "fn": "SoulboundCore.toString",
      "jump": "o",
      "offset": [
        6613,
        7316
      ],
      "op": "JUMP",
      "path": "4"
    },
    "8175": {
      "fn": "Soulbound.issue",
      "offset": [
        2151,
        2509
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "8176": {
      "fn": "Soulbound.issue",
      "offset": [
        2270,
        2274
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "8178": {
      "fn": "Soulbound.issue",
      "offset": [
        2360,
        2451
      ],
      "op": "PUSH2",
      "path": "3",
      "statement": 110,
      "value": "0x1FFC"
    },
    "8181": {
      "fn": "Soulbound.issue",
      "offset": [
        2392,
        2395
      ],
      "op": "DUP5",
      "path": "3"
    },
    "8182": {
      "fn": "Soulbound.issue",
      "offset": [
        2410,
        2418
      ],
      "op": "DUP5",
      "path": "3"
    },
    "8183": {
      "fn": "Soulbound.issue",
      "offset": [
        2433,
        2441
      ],
      "op": "DUP5",
      "path": "3"
    },
    "8184": {
      "fn": "Soulbound.issue",
      "offset": [
        2360,
        2378
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x23A6"
    },
    "8187": {
      "fn": "Soulbound.issue",
      "jump": "i",
      "offset": [
        2360,
        2451
      ],
      "op": "JUMP",
      "path": "3"
    },
    "8188": {
      "fn": "Soulbound.issue",
      "offset": [
        2360,
        2451
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "8189": {
      "op": "POP"
    },
    "8190": {
      "fn": "Soulbound.issue",
      "offset": [
        2498,
        2502
      ],
      "op": "PUSH1",
      "path": "3",
      "statement": 111,
      "value": "0x1"
    },
    "8192": {
      "fn": "Soulbound.issue",
      "offset": [
        2151,
        2509
      ],
      "op": "SWAP4",
      "path": "3"
    },
    "8193": {
      "fn": "Soulbound.issue",
      "offset": [
        2151,
        2509
      ],
      "op": "SWAP3",
      "path": "3"
    },
    "8194": {
      "fn": "Soulbound.issue",
      "offset": [
        2151,
        2509
      ],
      "op": "POP",
      "path": "3"
    },
    "8195": {
      "fn": "Soulbound.issue",
      "offset": [
        2151,
        2509
      ],
      "op": "POP",
      "path": "3"
    },
    "8196": {
      "fn": "Soulbound.issue",
      "offset": [
        2151,
        2509
      ],
      "op": "POP",
      "path": "3"
    },
    "8197": {
      "fn": "Soulbound.issue",
      "jump": "o",
      "offset": [
        2151,
        2509
      ],
      "op": "JUMP",
      "path": "3"
    },
    "8198": {
      "fn": "SoulboundRedeemable.calculateTax",
      "offset": [
        14842,
        15261
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "8199": {
      "fn": "SoulboundRedeemable.calculateTax",
      "offset": [
        14899,
        14912
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0x0"
    },
    "8201": {
      "fn": "SoulboundRedeemable.calculateTax",
      "offset": [
        15069,
        15077
      ],
      "op": "PUSH5",
      "path": "5",
      "value": "0x746A528800"
    },
    "8207": {
      "fn": "SoulboundRedeemable.calculateTax",
      "offset": [
        15054,
        15066
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0xD"
    },
    "8209": {
      "fn": "SoulboundRedeemable.calculateTax",
      "offset": [
        15054,
        15066
      ],
      "op": "SLOAD",
      "path": "5"
    },
    "8210": {
      "branch": 164,
      "fn": "SoulboundRedeemable.calculateTax",
      "offset": [
        15054,
        15077
      ],
      "op": "LT",
      "path": "5"
    },
    "8211": {
      "fn": "SoulboundRedeemable.calculateTax",
      "offset": [
        15029,
        15147
      ],
      "op": "ISZERO",
      "path": "5"
    },
    "8212": {
      "fn": "SoulboundRedeemable.calculateTax",
      "offset": [
        15029,
        15147
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x201C"
    },
    "8215": {
      "branch": 164,
      "fn": "SoulboundRedeemable.calculateTax",
      "offset": [
        15029,
        15147
      ],
      "op": "JUMPI",
      "path": "5"
    },
    "8216": {
      "fn": "SoulboundRedeemable.calculateTax",
      "offset": [
        15135,
        15136
      ],
      "op": "PUSH1",
      "path": "5",
      "statement": 112,
      "value": "0x0"
    },
    "8218": {
      "fn": "SoulboundRedeemable.calculateTax",
      "offset": [
        15128,
        15136
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "8219": {
      "fn": "SoulboundRedeemable.calculateTax",
      "offset": [
        15128,
        15136
      ],
      "op": "POP",
      "path": "5"
    },
    "8220": {
      "fn": "SoulboundRedeemable.calculateTax",
      "offset": [
        15029,
        15147
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "8221": {
      "fn": "SoulboundRedeemable.calculateTax",
      "offset": [
        15250,
        15254
      ],
      "op": "PUSH2",
      "path": "5",
      "statement": 113,
      "value": "0x3E8"
    },
    "8224": {
      "fn": "SoulboundRedeemable.calculateTax",
      "offset": [
        15229,
        15241
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0xD"
    },
    "8226": {
      "fn": "SoulboundRedeemable.calculateTax",
      "offset": [
        15229,
        15241
      ],
      "op": "SLOAD",
      "path": "5"
    },
    "8227": {
      "fn": "SoulboundRedeemable.calculateTax",
      "offset": [
        15222,
        15226
      ],
      "op": "DUP4",
      "path": "5"
    },
    "8228": {
      "fn": "SoulboundRedeemable.calculateTax",
      "offset": [
        15222,
        15241
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x202D"
    },
    "8231": {
      "fn": "SoulboundRedeemable.calculateTax",
      "offset": [
        15222,
        15241
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "8232": {
      "fn": "SoulboundRedeemable.calculateTax",
      "offset": [
        15222,
        15241
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "8233": {
      "fn": "SoulboundRedeemable.calculateTax",
      "offset": [
        15222,
        15241
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x2B84"
    },
    "8236": {
      "fn": "SoulboundRedeemable.calculateTax",
      "jump": "i",
      "offset": [
        15222,
        15241
      ],
      "op": "JUMP",
      "path": "5"
    },
    "8237": {
      "fn": "SoulboundRedeemable.calculateTax",
      "offset": [
        15222,
        15241
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "8238": {
      "fn": "SoulboundRedeemable.calculateTax",
      "offset": [
        15222,
        15246
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x2038"
    },
    "8241": {
      "fn": "SoulboundRedeemable.calculateTax",
      "offset": [
        15222,
        15246
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "8242": {
      "fn": "SoulboundRedeemable.calculateTax",
      "offset": [
        15244,
        15246
      ],
      "op": "PUSH1",
      "path": "5",
      "value": "0xA"
    },
    "8244": {
      "fn": "SoulboundRedeemable.calculateTax",
      "offset": [
        15222,
        15246
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x2B84"
    },
    "8247": {
      "fn": "SoulboundRedeemable.calculateTax",
      "jump": "i",
      "offset": [
        15222,
        15246
      ],
      "op": "JUMP",
      "path": "5"
    },
    "8248": {
      "fn": "SoulboundRedeemable.calculateTax",
      "offset": [
        15222,
        15246
      ],
      "op": "JUMPDEST",
      "path": "5"
    },
    "8249": {
      "fn": "SoulboundRedeemable.calculateTax",
      "offset": [
        15221,
        15254
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x792"
    },
    "8252": {
      "fn": "SoulboundRedeemable.calculateTax",
      "offset": [
        15221,
        15254
      ],
      "op": "SWAP2",
      "path": "5"
    },
    "8253": {
      "fn": "SoulboundRedeemable.calculateTax",
      "offset": [
        15221,
        15254
      ],
      "op": "SWAP1",
      "path": "5"
    },
    "8254": {
      "fn": "SoulboundRedeemable.calculateTax",
      "offset": [
        15221,
        15254
      ],
      "op": "PUSH2",
      "path": "5",
      "value": "0x2B46"
    },
    "8257": {
      "fn": "SoulboundRedeemable.calculateTax",
      "jump": "i",
      "offset": [
        15221,
        15254
      ],
      "op": "JUMP",
      "path": "5"
    },
    "8258": {
      "fn": "ERC4973._burn",
      "offset": [
        5943,
        6158
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "8259": {
      "fn": "ERC4973._burn",
      "offset": [
        5998,
        6011
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x0"
    },
    "8261": {
      "fn": "ERC4973._burn",
      "offset": [
        6014,
        6030
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x204D"
    },
    "8264": {
      "fn": "ERC4973._burn",
      "offset": [
        6022,
        6029
      ],
      "op": "DUP3",
      "path": "7"
    },
    "8265": {
      "fn": "ERC4973._burn",
      "offset": [
        6014,
        6021
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x11CB"
    },
    "8268": {
      "fn": "ERC4973._burn",
      "jump": "i",
      "offset": [
        6014,
        6030
      ],
      "op": "JUMP",
      "path": "7"
    },
    "8269": {
      "fn": "ERC4973._burn",
      "offset": [
        6014,
        6030
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "8270": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8272": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8274": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "8276": {
      "op": "SHL"
    },
    "8277": {
      "op": "SUB"
    },
    "8278": {
      "fn": "ERC4973._burn",
      "offset": [
        6037,
        6053
      ],
      "op": "DUP2",
      "path": "7",
      "statement": 114
    },
    "8279": {
      "fn": "ERC4973._burn",
      "offset": [
        6037,
        6053
      ],
      "op": "AND",
      "path": "7"
    },
    "8280": {
      "fn": "ERC4973._burn",
      "offset": [
        6037,
        6053
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x0"
    },
    "8282": {
      "fn": "ERC4973._burn",
      "offset": [
        6037,
        6053
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "8283": {
      "fn": "ERC4973._burn",
      "offset": [
        6037,
        6053
      ],
      "op": "DUP2",
      "path": "7"
    },
    "8284": {
      "fn": "ERC4973._burn",
      "offset": [
        6037,
        6053
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "8285": {
      "fn": "ERC4973._burn",
      "offset": [
        6037,
        6046
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x5"
    },
    "8287": {
      "fn": "ERC4973._burn",
      "offset": [
        6037,
        6053
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x20"
    },
    "8289": {
      "fn": "ERC4973._burn",
      "offset": [
        6037,
        6053
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "8290": {
      "fn": "ERC4973._burn",
      "offset": [
        6037,
        6053
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x40"
    },
    "8292": {
      "fn": "ERC4973._burn",
      "offset": [
        6037,
        6053
      ],
      "op": "DUP2",
      "path": "7"
    },
    "8293": {
      "fn": "ERC4973._burn",
      "offset": [
        6037,
        6053
      ],
      "op": "KECCAK256",
      "path": "7"
    },
    "8294": {
      "fn": "ERC4973._burn",
      "offset": [
        6037,
        6058
      ],
      "op": "DUP1",
      "path": "7"
    },
    "8295": {
      "fn": "ERC4973._burn",
      "offset": [
        6037,
        6058
      ],
      "op": "SLOAD",
      "path": "7"
    },
    "8296": {
      "fn": "ERC4973._burn",
      "offset": [
        5998,
        6030
      ],
      "op": "SWAP3",
      "path": "7"
    },
    "8297": {
      "fn": "ERC4973._burn",
      "offset": [
        5998,
        6030
      ],
      "op": "SWAP4",
      "path": "7"
    },
    "8298": {
      "op": "POP"
    },
    "8299": {
      "fn": "ERC4973._burn",
      "offset": [
        6057,
        6058
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x1"
    },
    "8301": {
      "fn": "ERC4973._burn",
      "offset": [
        6057,
        6058
      ],
      "op": "SWAP3",
      "path": "7"
    },
    "8302": {
      "fn": "ERC4973._burn",
      "offset": [
        6037,
        6053
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "8303": {
      "fn": "ERC4973._burn",
      "offset": [
        6037,
        6053
      ],
      "op": "SWAP2",
      "path": "7"
    },
    "8304": {
      "fn": "ERC4973._burn",
      "offset": [
        6037,
        6053
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "8305": {
      "fn": "ERC4973._burn",
      "offset": [
        6037,
        6058
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x207B"
    },
    "8308": {
      "fn": "ERC4973._burn",
      "offset": [
        6037,
        6058
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "8309": {
      "fn": "ERC4973._burn",
      "offset": [
        6057,
        6058
      ],
      "op": "DUP5",
      "path": "7"
    },
    "8310": {
      "fn": "ERC4973._burn",
      "offset": [
        6057,
        6058
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "8311": {
      "fn": "ERC4973._burn",
      "offset": [
        6037,
        6058
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x2AE8"
    },
    "8314": {
      "fn": "ERC4973._burn",
      "jump": "i",
      "offset": [
        6037,
        6058
      ],
      "op": "JUMP",
      "path": "7"
    },
    "8315": {
      "fn": "ERC4973._burn",
      "offset": [
        6037,
        6058
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "8316": {
      "fn": "ERC4973._burn",
      "offset": [
        6037,
        6058
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "8317": {
      "fn": "ERC4973._burn",
      "offset": [
        6037,
        6058
      ],
      "op": "SWAP2",
      "path": "7"
    },
    "8318": {
      "fn": "ERC4973._burn",
      "offset": [
        6037,
        6058
      ],
      "op": "SSTORE",
      "path": "7"
    },
    "8319": {
      "op": "POP"
    },
    "8320": {
      "op": "POP"
    },
    "8321": {
      "fn": "ERC4973._burn",
      "offset": [
        6071,
        6087
      ],
      "op": "PUSH1",
      "path": "7",
      "statement": 115,
      "value": "0x0"
    },
    "8323": {
      "fn": "ERC4973._burn",
      "offset": [
        6071,
        6087
      ],
      "op": "DUP3",
      "path": "7"
    },
    "8324": {
      "fn": "ERC4973._burn",
      "offset": [
        6071,
        6087
      ],
      "op": "DUP2",
      "path": "7"
    },
    "8325": {
      "fn": "ERC4973._burn",
      "offset": [
        6071,
        6087
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "8326": {
      "fn": "ERC4973._burn",
      "offset": [
        6071,
        6078
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x3"
    },
    "8328": {
      "fn": "ERC4973._burn",
      "offset": [
        6071,
        6087
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x20"
    },
    "8330": {
      "fn": "ERC4973._burn",
      "offset": [
        6071,
        6087
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "8331": {
      "fn": "ERC4973._burn",
      "offset": [
        6071,
        6087
      ],
      "op": "DUP2",
      "path": "7"
    },
    "8332": {
      "fn": "ERC4973._burn",
      "offset": [
        6071,
        6087
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "8333": {
      "fn": "ERC4973._burn",
      "offset": [
        6071,
        6087
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x40"
    },
    "8335": {
      "fn": "ERC4973._burn",
      "offset": [
        6071,
        6087
      ],
      "op": "DUP1",
      "path": "7"
    },
    "8336": {
      "fn": "ERC4973._burn",
      "offset": [
        6071,
        6087
      ],
      "op": "DUP4",
      "path": "7"
    },
    "8337": {
      "fn": "ERC4973._burn",
      "offset": [
        6071,
        6087
      ],
      "op": "KECCAK256",
      "path": "7"
    },
    "8338": {
      "fn": "ERC4973._burn",
      "offset": [
        6064,
        6087
      ],
      "op": "DUP1",
      "path": "7"
    },
    "8339": {
      "fn": "ERC4973._burn",
      "offset": [
        6064,
        6087
      ],
      "op": "SLOAD",
      "path": "7"
    },
    "8340": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8342": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8344": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "8346": {
      "op": "SHL"
    },
    "8347": {
      "op": "SUB"
    },
    "8348": {
      "op": "NOT"
    },
    "8349": {
      "fn": "ERC4973._burn",
      "offset": [
        6064,
        6087
      ],
      "op": "AND",
      "path": "7"
    },
    "8350": {
      "fn": "ERC4973._burn",
      "offset": [
        6064,
        6087
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "8351": {
      "fn": "ERC4973._burn",
      "offset": [
        6064,
        6087
      ],
      "op": "SSTORE",
      "path": "7"
    },
    "8352": {
      "fn": "ERC4973._burn",
      "offset": [
        6100,
        6110
      ],
      "op": "PUSH1",
      "path": "7",
      "statement": 116,
      "value": "0x4"
    },
    "8354": {
      "fn": "ERC4973._burn",
      "offset": [
        6100,
        6119
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "8355": {
      "fn": "ERC4973._burn",
      "offset": [
        6100,
        6119
      ],
      "op": "SWAP2",
      "path": "7"
    },
    "8356": {
      "fn": "ERC4973._burn",
      "offset": [
        6100,
        6119
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "8357": {
      "fn": "ERC4973._burn",
      "offset": [
        6100,
        6119
      ],
      "op": "DUP2",
      "path": "7"
    },
    "8358": {
      "fn": "ERC4973._burn",
      "offset": [
        6100,
        6119
      ],
      "op": "KECCAK256",
      "path": "7"
    },
    "8359": {
      "fn": "ERC4973._burn",
      "offset": [
        6093,
        6119
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x20AF"
    },
    "8362": {
      "fn": "ERC4973._burn",
      "offset": [
        6093,
        6119
      ],
      "op": "SWAP2",
      "path": "7"
    },
    "8363": {
      "fn": "ERC4973._burn",
      "offset": [
        6093,
        6119
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x2543"
    },
    "8366": {
      "fn": "ERC4973._burn",
      "jump": "i",
      "offset": [
        6093,
        6119
      ],
      "op": "JUMP",
      "path": "7"
    },
    "8367": {
      "fn": "ERC4973._burn",
      "offset": [
        6093,
        6119
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "8368": {
      "fn": "ERC4973._burn",
      "offset": [
        6131,
        6153
      ],
      "op": "PUSH1",
      "path": "7",
      "statement": 117,
      "value": "0x40"
    },
    "8370": {
      "fn": "ERC4973._burn",
      "offset": [
        6131,
        6153
      ],
      "op": "MLOAD",
      "path": "7"
    },
    "8371": {
      "fn": "ERC4973._burn",
      "offset": [
        6145,
        6152
      ],
      "op": "DUP3",
      "path": "7"
    },
    "8372": {
      "fn": "ERC4973._burn",
      "offset": [
        6145,
        6152
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "8373": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8375": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8377": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "8379": {
      "op": "SHL"
    },
    "8380": {
      "op": "SUB"
    },
    "8381": {
      "fn": "ERC4973._burn",
      "offset": [
        6131,
        6153
      ],
      "op": "DUP4",
      "path": "7"
    },
    "8382": {
      "fn": "ERC4973._burn",
      "offset": [
        6131,
        6153
      ],
      "op": "AND",
      "path": "7"
    },
    "8383": {
      "fn": "ERC4973._burn",
      "offset": [
        6131,
        6153
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "8384": {
      "fn": "ERC4973._burn",
      "offset": [
        6131,
        6153
      ],
      "op": "PUSH32",
      "path": "7",
      "value": "0xEC9AB91322523C899EDE7830EC9BFC992B5981CDCC27B91162FB23DE5791117B"
    },
    "8417": {
      "fn": "ERC4973._burn",
      "offset": [
        6131,
        6153
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "8418": {
      "fn": "ERC4973._burn",
      "offset": [
        6131,
        6153
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x0"
    },
    "8420": {
      "fn": "ERC4973._burn",
      "offset": [
        6131,
        6153
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "8421": {
      "fn": "ERC4973._burn",
      "offset": [
        6131,
        6153
      ],
      "op": "LOG3",
      "path": "7"
    },
    "8422": {
      "fn": "ERC4973._burn",
      "offset": [
        5992,
        6158
      ],
      "op": "POP",
      "path": "7"
    },
    "8423": {
      "fn": "ERC4973._burn",
      "offset": [
        5943,
        6158
      ],
      "op": "POP",
      "path": "7"
    },
    "8424": {
      "fn": "ERC4973._burn",
      "jump": "o",
      "offset": [
        5943,
        6158
      ],
      "op": "JUMP",
      "path": "7"
    },
    "8425": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2757,
        2944
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "8426": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2849,
        2855
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x6"
    },
    "8428": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2849,
        2855
      ],
      "op": "DUP1",
      "path": "2"
    },
    "8429": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2849,
        2855
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "8430": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8432": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8434": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "8436": {
      "op": "SHL"
    },
    "8437": {
      "op": "SUB"
    },
    "8438": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2865,
        2882
      ],
      "op": "DUP4",
      "path": "2",
      "statement": 118
    },
    "8439": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2865,
        2882
      ],
      "op": "DUP2",
      "path": "2"
    },
    "8440": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2865,
        2882
      ],
      "op": "AND",
      "path": "2"
    },
    "8441": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8443": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8445": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "8447": {
      "op": "SHL"
    },
    "8448": {
      "op": "SUB"
    },
    "8449": {
      "op": "NOT"
    },
    "8450": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2865,
        2882
      ],
      "op": "DUP4",
      "path": "2"
    },
    "8451": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2865,
        2882
      ],
      "op": "AND",
      "path": "2"
    },
    "8452": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2865,
        2882
      ],
      "op": "DUP2",
      "path": "2"
    },
    "8453": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2865,
        2882
      ],
      "op": "OR",
      "path": "2"
    },
    "8454": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2865,
        2882
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "8455": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2865,
        2882
      ],
      "op": "SWAP4",
      "path": "2"
    },
    "8456": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2865,
        2882
      ],
      "op": "SSTORE",
      "path": "2"
    },
    "8457": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2897,
        2937
      ],
      "op": "PUSH1",
      "path": "2",
      "statement": 119,
      "value": "0x40"
    },
    "8459": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2897,
        2937
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "8460": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2849,
        2855
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "8461": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2849,
        2855
      ],
      "op": "AND",
      "path": "2"
    },
    "8462": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2849,
        2855
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "8463": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2865,
        2882
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "8464": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2849,
        2855
      ],
      "op": "DUP3",
      "path": "2"
    },
    "8465": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2849,
        2855
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "8466": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2897,
        2937
      ],
      "op": "PUSH32",
      "path": "2",
      "value": "0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
    },
    "8499": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2897,
        2937
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "8500": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2830,
        2846
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "8502": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2830,
        2846
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "8503": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2897,
        2937
      ],
      "op": "LOG3",
      "path": "2"
    },
    "8504": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2820,
        2944
      ],
      "op": "POP",
      "path": "2"
    },
    "8505": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2757,
        2944
      ],
      "op": "POP",
      "path": "2"
    },
    "8506": {
      "fn": "Ownable._transferOwnership",
      "jump": "o",
      "offset": [
        2757,
        2944
      ],
      "op": "JUMP",
      "path": "2"
    },
    "8507": {
      "fn": "Soulbound._setBaseURI",
      "offset": [
        6948,
        7182
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "8508": {
      "fn": "Soulbound._setBaseURI",
      "offset": [
        7077,
        7085
      ],
      "op": "DUP1",
      "path": "3",
      "statement": 120
    },
    "8509": {
      "fn": "Soulbound._setBaseURI",
      "offset": [
        7071,
        7093
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "8510": {
      "fn": "Soulbound._setBaseURI",
      "offset": [
        7097,
        7098
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "8512": {
      "branch": 180,
      "fn": "Soulbound._setBaseURI",
      "offset": [
        7071,
        7098
      ],
      "op": "SUB",
      "path": "3"
    },
    "8513": {
      "fn": "Soulbound._setBaseURI",
      "offset": [
        7063,
        7117
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x217D"
    },
    "8516": {
      "branch": 180,
      "fn": "Soulbound._setBaseURI",
      "offset": [
        7063,
        7117
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "8517": {
      "fn": "Soulbound._setBaseURI",
      "offset": [
        7063,
        7117
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "8519": {
      "fn": "Soulbound._setBaseURI",
      "offset": [
        7063,
        7117
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "8520": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "8524": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "8526": {
      "op": "SHL"
    },
    "8527": {
      "fn": "Soulbound._setBaseURI",
      "offset": [
        7063,
        7117
      ],
      "op": "DUP2",
      "path": "3"
    },
    "8528": {
      "fn": "Soulbound._setBaseURI",
      "offset": [
        7063,
        7117
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "8529": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "8531": {
      "fn": "Soulbound._setBaseURI",
      "offset": [
        7063,
        7117
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x4"
    },
    "8533": {
      "fn": "Soulbound._setBaseURI",
      "offset": [
        7063,
        7117
      ],
      "op": "DUP3",
      "path": "3"
    },
    "8534": {
      "fn": "Soulbound._setBaseURI",
      "offset": [
        7063,
        7117
      ],
      "op": "ADD",
      "path": "3"
    },
    "8535": {
      "op": "MSTORE"
    },
    "8536": {
      "op": "PUSH1",
      "value": "0xE"
    },
    "8538": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "8540": {
      "op": "DUP3"
    },
    "8541": {
      "op": "ADD"
    },
    "8542": {
      "op": "MSTORE"
    },
    "8543": {
      "op": "PUSH14",
      "value": "0x92DCECC2D8D2C840D8CADCCEE8D"
    },
    "8558": {
      "op": "PUSH1",
      "value": "0x93"
    },
    "8560": {
      "op": "SHL"
    },
    "8561": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "8563": {
      "op": "DUP3"
    },
    "8564": {
      "op": "ADD"
    },
    "8565": {
      "op": "MSTORE"
    },
    "8566": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "8568": {
      "op": "ADD"
    },
    "8569": {
      "fn": "Soulbound._setBaseURI",
      "offset": [
        7063,
        7117
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x6E4"
    },
    "8572": {
      "op": "JUMP"
    },
    "8573": {
      "fn": "Soulbound._setBaseURI",
      "offset": [
        7063,
        7117
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "8574": {
      "fn": "Soulbound._setBaseURI",
      "offset": [
        7157,
        7164
      ],
      "op": "PUSH1",
      "path": "3",
      "statement": 121,
      "value": "0x7"
    },
    "8576": {
      "fn": "Soulbound._setBaseURI",
      "offset": [
        7157,
        7175
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x2189"
    },
    "8579": {
      "fn": "Soulbound._setBaseURI",
      "offset": [
        7167,
        7175
      ],
      "op": "DUP3",
      "path": "3"
    },
    "8580": {
      "fn": "Soulbound._setBaseURI",
      "offset": [
        7157,
        7164
      ],
      "op": "DUP3",
      "path": "3"
    },
    "8581": {
      "fn": "Soulbound._setBaseURI",
      "offset": [
        7157,
        7175
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x2BF1"
    },
    "8584": {
      "fn": "Soulbound._setBaseURI",
      "jump": "i",
      "offset": [
        7157,
        7175
      ],
      "op": "JUMP",
      "path": "3"
    },
    "8585": {
      "fn": "Soulbound._setBaseURI",
      "offset": [
        7157,
        7175
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "8586": {
      "fn": "Soulbound._setBaseURI",
      "offset": [
        7157,
        7175
      ],
      "op": "POP",
      "path": "3"
    },
    "8587": {
      "fn": "Soulbound._setBaseURI",
      "offset": [
        6948,
        7182
      ],
      "op": "POP",
      "path": "3"
    },
    "8588": {
      "fn": "Soulbound._setBaseURI",
      "jump": "o",
      "offset": [
        6948,
        7182
      ],
      "op": "JUMP",
      "path": "3"
    },
    "8589": {
      "fn": "Allowlist._verifySignature",
      "offset": [
        3437,
        4480
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "8590": {
      "fn": "Allowlist._verifySignature",
      "offset": [
        3534,
        3538
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "8592": {
      "offset": [
        1401,
        1414
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2197"
    },
    "8595": {
      "offset": [
        1401,
        1412
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1DA7"
    },
    "8598": {
      "jump": "i",
      "offset": [
        1401,
        1414
      ],
      "op": "JUMP",
      "path": "2"
    },
    "8599": {
      "fn": "Allowlist._verifySignature",
      "offset": [
        1401,
        1414
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "8600": {
      "fn": "Ownable.owner",
      "offset": [
        1578,
        1584
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x6"
    },
    "8602": {
      "fn": "Ownable.owner",
      "offset": [
        1578,
        1584
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "8603": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8605": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8607": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "8609": {
      "op": "SHL"
    },
    "8610": {
      "op": "SUB"
    },
    "8611": {
      "fn": "Ownable.owner",
      "offset": [
        1578,
        1584
      ],
      "op": "AND",
      "path": "2"
    },
    "8612": {
      "fn": "Ownable._msgSender",
      "offset": [
        3057,
        3067
      ],
      "op": "CALLER",
      "path": "2"
    },
    "8613": {
      "branch": 165,
      "fn": "Allowlist._verifySignature",
      "offset": [
        3699,
        3722
      ],
      "op": "EQ",
      "path": "0",
      "statement": 122
    },
    "8614": {
      "fn": "Allowlist._verifySignature",
      "offset": [
        3678,
        3792
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2205"
    },
    "8617": {
      "branch": 165,
      "fn": "Allowlist._verifySignature",
      "offset": [
        3678,
        3792
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "8618": {
      "fn": "Allowlist._verifySignature",
      "offset": [
        3678,
        3792
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "8620": {
      "fn": "Allowlist._verifySignature",
      "offset": [
        3678,
        3792
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "8621": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "8625": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "8627": {
      "op": "SHL"
    },
    "8628": {
      "fn": "Allowlist._verifySignature",
      "offset": [
        3678,
        3792
      ],
      "op": "DUP2",
      "path": "0"
    },
    "8629": {
      "fn": "Allowlist._verifySignature",
      "offset": [
        3678,
        3792
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "8630": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "8632": {
      "fn": "Allowlist._verifySignature",
      "offset": [
        3678,
        3792
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "8634": {
      "fn": "Allowlist._verifySignature",
      "offset": [
        3678,
        3792
      ],
      "op": "DUP3",
      "path": "0"
    },
    "8635": {
      "fn": "Allowlist._verifySignature",
      "offset": [
        3678,
        3792
      ],
      "op": "ADD",
      "path": "0"
    },
    "8636": {
      "op": "MSTORE"
    },
    "8637": {
      "op": "PUSH1",
      "value": "0x2B"
    },
    "8639": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "8641": {
      "op": "DUP3"
    },
    "8642": {
      "op": "ADD"
    },
    "8643": {
      "op": "MSTORE"
    },
    "8644": {
      "op": "PUSH32",
      "value": "0x4552433732313A3A2043616C6C20746F20636F6E7472616374206D6164652062"
    },
    "8677": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "8679": {
      "op": "DUP3"
    },
    "8680": {
      "op": "ADD"
    },
    "8681": {
      "op": "MSTORE"
    },
    "8682": {
      "op": "PUSH11",
      "value": "0x3C903737B716B7BBB732B9"
    },
    "8694": {
      "op": "PUSH1",
      "value": "0xA9"
    },
    "8696": {
      "op": "SHL"
    },
    "8697": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "8699": {
      "op": "DUP3"
    },
    "8700": {
      "op": "ADD"
    },
    "8701": {
      "op": "MSTORE"
    },
    "8702": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "8704": {
      "op": "ADD"
    },
    "8705": {
      "fn": "Allowlist._verifySignature",
      "offset": [
        3678,
        3792
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x6E4"
    },
    "8708": {
      "op": "JUMP"
    },
    "8709": {
      "fn": "Allowlist._verifySignature",
      "offset": [
        3678,
        3792
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "8710": {
      "fn": "Allowlist._verifySignature",
      "offset": [
        3870,
        3873
      ],
      "op": "DUP2",
      "path": "0",
      "statement": 123
    },
    "8711": {
      "fn": "Allowlist._verifySignature",
      "offset": [
        3870,
        3880
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "8712": {
      "fn": "Allowlist._verifySignature",
      "offset": [
        3884,
        3886
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x41"
    },
    "8714": {
      "branch": 166,
      "fn": "Allowlist._verifySignature",
      "offset": [
        3870,
        3886
      ],
      "op": "EQ",
      "path": "0"
    },
    "8715": {
      "fn": "Allowlist._verifySignature",
      "offset": [
        3862,
        3921
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2256"
    },
    "8718": {
      "branch": 166,
      "fn": "Allowlist._verifySignature",
      "offset": [
        3862,
        3921
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "8719": {
      "fn": "Allowlist._verifySignature",
      "offset": [
        3862,
        3921
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "8721": {
      "fn": "Allowlist._verifySignature",
      "offset": [
        3862,
        3921
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "8722": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "8726": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "8728": {
      "op": "SHL"
    },
    "8729": {
      "fn": "Allowlist._verifySignature",
      "offset": [
        3862,
        3921
      ],
      "op": "DUP2",
      "path": "0"
    },
    "8730": {
      "fn": "Allowlist._verifySignature",
      "offset": [
        3862,
        3921
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "8731": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "8733": {
      "fn": "Allowlist._verifySignature",
      "offset": [
        3862,
        3921
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "8735": {
      "fn": "Allowlist._verifySignature",
      "offset": [
        3862,
        3921
      ],
      "op": "DUP3",
      "path": "0"
    },
    "8736": {
      "fn": "Allowlist._verifySignature",
      "offset": [
        3862,
        3921
      ],
      "op": "ADD",
      "path": "0"
    },
    "8737": {
      "op": "MSTORE"
    },
    "8738": {
      "op": "PUSH1",
      "value": "0x1E"
    },
    "8740": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "8742": {
      "op": "DUP3"
    },
    "8743": {
      "op": "ADD"
    },
    "8744": {
      "op": "MSTORE"
    },
    "8745": {
      "op": "PUSH32",
      "value": "0x4572723A3A20496E76616C6964207369676E6174757265206C656E6774680000"
    },
    "8778": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "8780": {
      "op": "DUP3"
    },
    "8781": {
      "op": "ADD"
    },
    "8782": {
      "op": "MSTORE"
    },
    "8783": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "8785": {
      "op": "ADD"
    },
    "8786": {
      "fn": "Allowlist._verifySignature",
      "offset": [
        3862,
        3921
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x6E4"
    },
    "8789": {
      "op": "JUMP"
    },
    "8790": {
      "fn": "Allowlist._verifySignature",
      "offset": [
        3862,
        3921
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "8791": {
      "fn": "Allowlist.splitSignature",
      "offset": [
        5808,
        5810
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "8793": {
      "fn": "Allowlist.splitSignature",
      "offset": [
        5799,
        5811
      ],
      "op": "DUP3",
      "path": "0"
    },
    "8794": {
      "fn": "Allowlist.splitSignature",
      "offset": [
        5799,
        5811
      ],
      "op": "DUP2",
      "path": "0"
    },
    "8795": {
      "fn": "Allowlist.splitSignature",
      "offset": [
        5799,
        5811
      ],
      "op": "ADD",
      "path": "0"
    },
    "8796": {
      "fn": "Allowlist.splitSignature",
      "offset": [
        5793,
        5812
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "8797": {
      "fn": "Allowlist.splitSignature",
      "offset": [
        5883,
        5885
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "8799": {
      "fn": "Allowlist.splitSignature",
      "offset": [
        5874,
        5886
      ],
      "op": "DUP1",
      "path": "0"
    },
    "8800": {
      "fn": "Allowlist.splitSignature",
      "offset": [
        5874,
        5886
      ],
      "op": "DUP6",
      "path": "0"
    },
    "8801": {
      "fn": "Allowlist.splitSignature",
      "offset": [
        5874,
        5886
      ],
      "op": "ADD",
      "path": "0"
    },
    "8802": {
      "fn": "Allowlist.splitSignature",
      "offset": [
        5868,
        5887
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "8803": {
      "fn": "Allowlist.splitSignature",
      "offset": [
        5995,
        5997
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x60"
    },
    "8805": {
      "fn": "Allowlist.splitSignature",
      "offset": [
        5986,
        5998
      ],
      "op": "DUP1",
      "path": "0"
    },
    "8806": {
      "fn": "Allowlist.splitSignature",
      "offset": [
        5986,
        5998
      ],
      "op": "DUP8",
      "path": "0"
    },
    "8807": {
      "fn": "Allowlist.splitSignature",
      "offset": [
        5986,
        5998
      ],
      "op": "ADD",
      "path": "0"
    },
    "8808": {
      "fn": "Allowlist.splitSignature",
      "offset": [
        5980,
        5999
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "8809": {
      "fn": "Allowlist._verifySignature",
      "offset": [
        4134,
        4158
      ],
      "op": "DUP4",
      "path": "0"
    },
    "8810": {
      "fn": "Allowlist._verifySignature",
      "offset": [
        4134,
        4158
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "8811": {
      "fn": "Allowlist._verifySignature",
      "offset": [
        4000,
        4009
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "8813": {
      "fn": "Allowlist._verifySignature",
      "offset": [
        4134,
        4158
      ],
      "op": "DUP1",
      "path": "0"
    },
    "8814": {
      "fn": "Allowlist._verifySignature",
      "offset": [
        4134,
        4158
      ],
      "op": "DUP3",
      "path": "0"
    },
    "8815": {
      "fn": "Allowlist._verifySignature",
      "offset": [
        4134,
        4158
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "8816": {
      "fn": "Allowlist._verifySignature",
      "offset": [
        4134,
        4158
      ],
      "op": "SWAP7",
      "path": "0"
    },
    "8817": {
      "fn": "Allowlist._verifySignature",
      "offset": [
        4134,
        4158
      ],
      "op": "DUP2",
      "path": "0"
    },
    "8818": {
      "fn": "Allowlist._verifySignature",
      "offset": [
        4134,
        4158
      ],
      "op": "ADD",
      "path": "0"
    },
    "8819": {
      "fn": "Allowlist._verifySignature",
      "offset": [
        4134,
        4158
      ],
      "op": "DUP1",
      "path": "0"
    },
    "8820": {
      "fn": "Allowlist._verifySignature",
      "offset": [
        4134,
        4158
      ],
      "op": "DUP7",
      "path": "0"
    },
    "8821": {
      "fn": "Allowlist._verifySignature",
      "offset": [
        4134,
        4158
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "8822": {
      "op": "DUP11"
    },
    "8823": {
      "op": "SWAP1"
    },
    "8824": {
      "op": "MSTORE"
    },
    "8825": {
      "fn": "Allowlist.splitSignature",
      "offset": [
        5972,
        6000
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "8826": {
      "fn": "Allowlist.splitSignature",
      "offset": [
        5972,
        6000
      ],
      "op": "DUP7",
      "path": "0"
    },
    "8827": {
      "fn": "Allowlist.splitSignature",
      "offset": [
        5972,
        6000
      ],
      "op": "BYTE",
      "path": "0"
    },
    "8828": {
      "op": "SWAP4"
    },
    "8829": {
      "op": "DUP2"
    },
    "8830": {
      "op": "ADD"
    },
    "8831": {
      "op": "DUP5"
    },
    "8832": {
      "op": "SWAP1"
    },
    "8833": {
      "op": "MSTORE"
    },
    "8834": {
      "op": "SWAP1"
    },
    "8835": {
      "op": "DUP2"
    },
    "8836": {
      "op": "ADD"
    },
    "8837": {
      "op": "DUP5"
    },
    "8838": {
      "op": "SWAP1"
    },
    "8839": {
      "op": "MSTORE"
    },
    "8840": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "8842": {
      "op": "DUP2"
    },
    "8843": {
      "op": "ADD"
    },
    "8844": {
      "op": "DUP3"
    },
    "8845": {
      "op": "SWAP1"
    },
    "8846": {
      "op": "MSTORE"
    },
    "8847": {
      "fn": "Allowlist.splitSignature",
      "offset": [
        5793,
        5812
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "8848": {
      "fn": "Allowlist.splitSignature",
      "offset": [
        5793,
        5812
      ],
      "op": "SWAP4",
      "path": "0"
    },
    "8849": {
      "fn": "Allowlist.splitSignature",
      "offset": [
        5868,
        5887
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "8850": {
      "fn": "Allowlist.splitSignature",
      "offset": [
        5868,
        5887
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "8851": {
      "fn": "Allowlist._verifySignature",
      "offset": [
        4134,
        4158
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1"
    },
    "8853": {
      "fn": "Allowlist._verifySignature",
      "offset": [
        4134,
        4158
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "8854": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "8856": {
      "op": "ADD"
    },
    "8857": {
      "fn": "Allowlist._verifySignature",
      "offset": [
        4134,
        4158
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "8859": {
      "fn": "Allowlist._verifySignature",
      "offset": [
        4134,
        4158
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "8861": {
      "fn": "Allowlist._verifySignature",
      "offset": [
        4134,
        4158
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "8862": {
      "fn": "Allowlist._verifySignature",
      "offset": [
        4134,
        4158
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "8864": {
      "fn": "Allowlist._verifySignature",
      "offset": [
        4134,
        4158
      ],
      "op": "DUP2",
      "path": "0"
    },
    "8865": {
      "fn": "Allowlist._verifySignature",
      "offset": [
        4134,
        4158
      ],
      "op": "SUB",
      "path": "0"
    },
    "8866": {
      "fn": "Allowlist._verifySignature",
      "offset": [
        4134,
        4158
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "8867": {
      "fn": "Allowlist._verifySignature",
      "offset": [
        4134,
        4158
      ],
      "op": "DUP1",
      "path": "0"
    },
    "8868": {
      "fn": "Allowlist._verifySignature",
      "offset": [
        4134,
        4158
      ],
      "op": "DUP5",
      "path": "0"
    },
    "8869": {
      "fn": "Allowlist._verifySignature",
      "offset": [
        4134,
        4158
      ],
      "op": "SUB",
      "path": "0"
    },
    "8870": {
      "fn": "Allowlist._verifySignature",
      "offset": [
        4134,
        4158
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "8871": {
      "fn": "Allowlist._verifySignature",
      "offset": [
        4134,
        4158
      ],
      "op": "DUP6",
      "path": "0"
    },
    "8872": {
      "fn": "Allowlist._verifySignature",
      "offset": [
        4134,
        4158
      ],
      "op": "GAS",
      "path": "0"
    },
    "8873": {
      "fn": "Allowlist._verifySignature",
      "offset": [
        4134,
        4158
      ],
      "op": "STATICCALL",
      "path": "0"
    },
    "8874": {
      "fn": "Allowlist._verifySignature",
      "offset": [
        4134,
        4158
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "8875": {
      "fn": "Allowlist._verifySignature",
      "offset": [
        4134,
        4158
      ],
      "op": "DUP1",
      "path": "0"
    },
    "8876": {
      "fn": "Allowlist._verifySignature",
      "offset": [
        4134,
        4158
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "8877": {
      "fn": "Allowlist._verifySignature",
      "offset": [
        4134,
        4158
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x22BA"
    },
    "8880": {
      "fn": "Allowlist._verifySignature",
      "offset": [
        4134,
        4158
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "8881": {
      "fn": "Allowlist._verifySignature",
      "offset": [
        4134,
        4158
      ],
      "op": "RETURNDATASIZE",
      "path": "0"
    },
    "8882": {
      "fn": "Allowlist._verifySignature",
      "offset": [
        4134,
        4158
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "8884": {
      "fn": "Allowlist._verifySignature",
      "offset": [
        4134,
        4158
      ],
      "op": "DUP1",
      "path": "0"
    },
    "8885": {
      "fn": "Allowlist._verifySignature",
      "offset": [
        4134,
        4158
      ],
      "op": "RETURNDATACOPY",
      "path": "0"
    },
    "8886": {
      "fn": "Allowlist._verifySignature",
      "offset": [
        4134,
        4158
      ],
      "op": "RETURNDATASIZE",
      "path": "0"
    },
    "8887": {
      "fn": "Allowlist._verifySignature",
      "offset": [
        4134,
        4158
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "8889": {
      "fn": "Allowlist._verifySignature",
      "offset": [
        4134,
        4158
      ],
      "op": "REVERT",
      "path": "0"
    },
    "8890": {
      "fn": "Allowlist._verifySignature",
      "offset": [
        4134,
        4158
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "8891": {
      "op": "POP"
    },
    "8892": {
      "op": "POP"
    },
    "8893": {
      "fn": "Allowlist._verifySignature",
      "offset": [
        4134,
        4158
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "8895": {
      "fn": "Allowlist._verifySignature",
      "offset": [
        4134,
        4158
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "8896": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "8898": {
      "op": "NOT"
    },
    "8899": {
      "fn": "Allowlist._verifySignature",
      "offset": [
        4134,
        4158
      ],
      "op": "DUP2",
      "path": "0"
    },
    "8900": {
      "fn": "Allowlist._verifySignature",
      "offset": [
        4134,
        4158
      ],
      "op": "ADD",
      "path": "0"
    },
    "8901": {
      "fn": "Allowlist._verifySignature",
      "offset": [
        4134,
        4158
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "8902": {
      "fn": "Allowlist._verifySignature",
      "offset": [
        4272,
        4286
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x9"
    },
    "8904": {
      "fn": "Allowlist._verifySignature",
      "offset": [
        4272,
        4286
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "8905": {
      "fn": "Allowlist._verifySignature",
      "offset": [
        4134,
        4158
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "8906": {
      "fn": "Allowlist._verifySignature",
      "offset": [
        4134,
        4158
      ],
      "op": "SWAP4",
      "path": "0"
    },
    "8907": {
      "op": "POP"
    },
    "8908": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8910": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8912": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "8914": {
      "op": "SHL"
    },
    "8915": {
      "op": "SUB"
    },
    "8916": {
      "fn": "Allowlist._verifySignature",
      "offset": [
        4262,
        4286
      ],
      "op": "DUP1",
      "path": "0"
    },
    "8917": {
      "fn": "Allowlist._verifySignature",
      "offset": [
        4262,
        4286
      ],
      "op": "DUP6",
      "path": "0"
    },
    "8918": {
      "fn": "Allowlist._verifySignature",
      "offset": [
        4262,
        4286
      ],
      "op": "AND",
      "path": "0"
    },
    "8919": {
      "fn": "Allowlist._verifySignature",
      "offset": [
        4272,
        4286
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "8920": {
      "fn": "Allowlist._verifySignature",
      "offset": [
        4272,
        4286
      ],
      "op": "AND",
      "path": "0"
    },
    "8921": {
      "fn": "Allowlist._verifySignature",
      "offset": [
        4262,
        4286
      ],
      "op": "EQ",
      "path": "0"
    },
    "8922": {
      "fn": "Allowlist._verifySignature",
      "offset": [
        4262,
        4286
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "8923": {
      "op": "POP"
    },
    "8924": {
      "fn": "Allowlist._verifySignature",
      "offset": [
        4262,
        4286
      ],
      "op": "DUP2",
      "path": "0"
    },
    "8925": {
      "fn": "Allowlist._verifySignature",
      "offset": [
        4262,
        4286
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "8926": {
      "fn": "Allowlist._verifySignature",
      "offset": [
        4369,
        4373
      ],
      "op": "DUP10",
      "path": "0",
      "statement": 124
    },
    "8927": {
      "fn": "Allowlist._verifySignature",
      "offset": [
        4369,
        4373
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "8928": {
      "fn": "Allowlist._verifySignature",
      "offset": [
        4353,
        4398
      ],
      "op": "PUSH32",
      "path": "0",
      "value": "0x7E4FE2A2A805A357593FDBDDE58C02F6A53D8B4960744CD31A98697FC11C2E36"
    },
    "8961": {
      "fn": "Allowlist._verifySignature",
      "offset": [
        4353,
        4398
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "8962": {
      "fn": "Allowlist._verifySignature",
      "offset": [
        4231,
        4258
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "8964": {
      "fn": "Allowlist._verifySignature",
      "offset": [
        4231,
        4258
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "8965": {
      "fn": "Allowlist._verifySignature",
      "offset": [
        4353,
        4398
      ],
      "op": "LOG3",
      "path": "0"
    },
    "8966": {
      "fn": "Allowlist._verifySignature",
      "offset": [
        4451,
        4473
      ],
      "op": "SWAP8",
      "path": "0",
      "statement": 125
    },
    "8967": {
      "fn": "Allowlist._verifySignature",
      "offset": [
        3437,
        4480
      ],
      "op": "SWAP7",
      "path": "0"
    },
    "8968": {
      "op": "POP"
    },
    "8969": {
      "op": "POP"
    },
    "8970": {
      "op": "POP"
    },
    "8971": {
      "op": "POP"
    },
    "8972": {
      "op": "POP"
    },
    "8973": {
      "op": "POP"
    },
    "8974": {
      "op": "POP"
    },
    "8975": {
      "fn": "Allowlist._verifySignature",
      "jump": "o",
      "offset": [
        3437,
        4480
      ],
      "op": "JUMP",
      "path": "0"
    },
    "8976": {
      "fn": "Soulbound.burnSoulboundToken",
      "offset": [
        6362,
        6783
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "8977": {
      "fn": "Soulbound.burnSoulboundToken",
      "offset": [
        6489,
        6505
      ],
      "op": "PUSH2",
      "path": "3",
      "statement": 126,
      "value": "0x2319"
    },
    "8980": {
      "fn": "Soulbound.burnSoulboundToken",
      "offset": [
        6497,
        6504
      ],
      "op": "DUP2",
      "path": "3"
    },
    "8981": {
      "fn": "Soulbound.burnSoulboundToken",
      "offset": [
        6489,
        6496
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x1E01"
    },
    "8984": {
      "fn": "Soulbound.burnSoulboundToken",
      "jump": "i",
      "offset": [
        6489,
        6505
      ],
      "op": "JUMP",
      "path": "3"
    },
    "8985": {
      "branch": 181,
      "fn": "Soulbound.burnSoulboundToken",
      "offset": [
        6489,
        6505
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "8986": {
      "fn": "Soulbound.burnSoulboundToken",
      "offset": [
        6481,
        6534
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x2365"
    },
    "8989": {
      "branch": 181,
      "fn": "Soulbound.burnSoulboundToken",
      "offset": [
        6481,
        6534
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "8990": {
      "fn": "Soulbound.burnSoulboundToken",
      "offset": [
        6481,
        6534
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "8992": {
      "fn": "Soulbound.burnSoulboundToken",
      "offset": [
        6481,
        6534
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "8993": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "8997": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "8999": {
      "op": "SHL"
    },
    "9000": {
      "fn": "Soulbound.burnSoulboundToken",
      "offset": [
        6481,
        6534
      ],
      "op": "DUP2",
      "path": "3"
    },
    "9001": {
      "fn": "Soulbound.burnSoulboundToken",
      "offset": [
        6481,
        6534
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "9002": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "9004": {
      "fn": "Soulbound.burnSoulboundToken",
      "offset": [
        6481,
        6534
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x4"
    },
    "9006": {
      "fn": "Soulbound.burnSoulboundToken",
      "offset": [
        6481,
        6534
      ],
      "op": "DUP3",
      "path": "3"
    },
    "9007": {
      "fn": "Soulbound.burnSoulboundToken",
      "offset": [
        6481,
        6534
      ],
      "op": "ADD",
      "path": "3"
    },
    "9008": {
      "op": "MSTORE"
    },
    "9009": {
      "op": "PUSH1",
      "value": "0x18"
    },
    "9011": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "9013": {
      "op": "DUP3"
    },
    "9014": {
      "op": "ADD"
    },
    "9015": {
      "op": "MSTORE"
    },
    "9016": {
      "op": "PUSH32",
      "value": "0x4275726E206F6620696E6578697374656E7420746F6B656E0000000000000000"
    },
    "9049": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "9051": {
      "op": "DUP3"
    },
    "9052": {
      "op": "ADD"
    },
    "9053": {
      "op": "MSTORE"
    },
    "9054": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "9056": {
      "op": "ADD"
    },
    "9057": {
      "fn": "Soulbound.burnSoulboundToken",
      "offset": [
        6481,
        6534
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x6E4"
    },
    "9060": {
      "op": "JUMP"
    },
    "9061": {
      "fn": "Soulbound.burnSoulboundToken",
      "offset": [
        6481,
        6534
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "9062": {
      "fn": "Soulbound.burnSoulboundToken",
      "offset": [
        6589,
        6608
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "9064": {
      "fn": "Soulbound.burnSoulboundToken",
      "offset": [
        6611,
        6627
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x2370"
    },
    "9067": {
      "fn": "Soulbound.burnSoulboundToken",
      "offset": [
        6619,
        6626
      ],
      "op": "DUP3",
      "path": "3"
    },
    "9068": {
      "fn": "Soulbound.burnSoulboundToken",
      "offset": [
        6611,
        6618
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x11CB"
    },
    "9071": {
      "fn": "Soulbound.burnSoulboundToken",
      "jump": "i",
      "offset": [
        6611,
        6627
      ],
      "op": "JUMP",
      "path": "3"
    },
    "9072": {
      "fn": "Soulbound.burnSoulboundToken",
      "offset": [
        6611,
        6627
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "9073": {
      "fn": "Soulbound.burnSoulboundToken",
      "offset": [
        6589,
        6627
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "9074": {
      "fn": "Soulbound.burnSoulboundToken",
      "offset": [
        6589,
        6627
      ],
      "op": "POP",
      "path": "3"
    },
    "9075": {
      "fn": "Soulbound.burnSoulboundToken",
      "offset": [
        6670,
        6684
      ],
      "op": "PUSH2",
      "path": "3",
      "statement": 127,
      "value": "0x237B"
    },
    "9078": {
      "fn": "Soulbound.burnSoulboundToken",
      "offset": [
        6676,
        6683
      ],
      "op": "DUP3",
      "path": "3"
    },
    "9079": {
      "fn": "Soulbound.burnSoulboundToken",
      "offset": [
        6670,
        6675
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x2042"
    },
    "9082": {
      "fn": "Soulbound.burnSoulboundToken",
      "jump": "i",
      "offset": [
        6670,
        6684
      ],
      "op": "JUMP",
      "path": "3"
    },
    "9083": {
      "fn": "Soulbound.burnSoulboundToken",
      "offset": [
        6670,
        6684
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "9084": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9086": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9088": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "9090": {
      "op": "SHL"
    },
    "9091": {
      "op": "SUB"
    },
    "9092": {
      "fn": "Soulbound.burnSoulboundToken",
      "offset": [
        6741,
        6759
      ],
      "op": "AND",
      "path": "3",
      "statement": 128
    },
    "9093": {
      "fn": "Soulbound.burnSoulboundToken",
      "offset": [
        6771,
        6776
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "9095": {
      "fn": "Soulbound.burnSoulboundToken",
      "offset": [
        6741,
        6759
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "9096": {
      "fn": "Soulbound.burnSoulboundToken",
      "offset": [
        6741,
        6759
      ],
      "op": "DUP2",
      "path": "3"
    },
    "9097": {
      "fn": "Soulbound.burnSoulboundToken",
      "offset": [
        6741,
        6759
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "9098": {
      "fn": "Soulbound.burnSoulboundToken",
      "offset": [
        6741,
        6746
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x8"
    },
    "9100": {
      "fn": "Soulbound.burnSoulboundToken",
      "offset": [
        6741,
        6759
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "9102": {
      "fn": "Soulbound.burnSoulboundToken",
      "offset": [
        6741,
        6759
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "9103": {
      "fn": "Soulbound.burnSoulboundToken",
      "offset": [
        6741,
        6759
      ],
      "op": "DUP2",
      "path": "3"
    },
    "9104": {
      "fn": "Soulbound.burnSoulboundToken",
      "offset": [
        6741,
        6759
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "9105": {
      "fn": "Soulbound.burnSoulboundToken",
      "offset": [
        6741,
        6759
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "9107": {
      "fn": "Soulbound.burnSoulboundToken",
      "offset": [
        6741,
        6759
      ],
      "op": "DUP1",
      "path": "3"
    },
    "9108": {
      "fn": "Soulbound.burnSoulboundToken",
      "offset": [
        6741,
        6759
      ],
      "op": "DUP4",
      "path": "3"
    },
    "9109": {
      "fn": "Soulbound.burnSoulboundToken",
      "offset": [
        6741,
        6759
      ],
      "op": "KECCAK256",
      "path": "3"
    },
    "9110": {
      "fn": "Soulbound.burnSoulboundToken",
      "offset": [
        6741,
        6768
      ],
      "op": "SWAP4",
      "path": "3"
    },
    "9111": {
      "fn": "Soulbound.burnSoulboundToken",
      "offset": [
        6741,
        6768
      ],
      "op": "DUP4",
      "path": "3"
    },
    "9112": {
      "fn": "Soulbound.burnSoulboundToken",
      "offset": [
        6741,
        6768
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "9113": {
      "fn": "Soulbound.burnSoulboundToken",
      "offset": [
        6741,
        6768
      ],
      "op": "SWAP3",
      "path": "3"
    },
    "9114": {
      "fn": "Soulbound.burnSoulboundToken",
      "offset": [
        6741,
        6768
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "9115": {
      "fn": "Soulbound.burnSoulboundToken",
      "offset": [
        6741,
        6768
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "9116": {
      "fn": "Soulbound.burnSoulboundToken",
      "offset": [
        6741,
        6768
      ],
      "op": "KECCAK256",
      "path": "3"
    },
    "9117": {
      "fn": "Soulbound.burnSoulboundToken",
      "offset": [
        6741,
        6776
      ],
      "op": "DUP1",
      "path": "3"
    },
    "9118": {
      "fn": "Soulbound.burnSoulboundToken",
      "offset": [
        6741,
        6776
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "9119": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "9121": {
      "op": "NOT"
    },
    "9122": {
      "fn": "Soulbound.burnSoulboundToken",
      "offset": [
        6741,
        6776
      ],
      "op": "AND",
      "path": "3"
    },
    "9123": {
      "fn": "Soulbound.burnSoulboundToken",
      "offset": [
        6741,
        6776
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "9124": {
      "fn": "Soulbound.burnSoulboundToken",
      "offset": [
        6741,
        6776
      ],
      "op": "SSTORE",
      "path": "3"
    },
    "9125": {
      "fn": "Soulbound.burnSoulboundToken",
      "jump": "o",
      "offset": [
        6362,
        6783
      ],
      "op": "JUMP",
      "path": "3"
    },
    "9126": {
      "fn": "Soulbound.mintSoulboundToken",
      "offset": [
        5532,
        6206
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "9127": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9129": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9131": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "9133": {
      "op": "SHL"
    },
    "9134": {
      "op": "SUB"
    },
    "9135": {
      "fn": "Soulbound.mintSoulboundToken",
      "offset": [
        5746,
        5762
      ],
      "op": "DUP4",
      "path": "3",
      "statement": 129
    },
    "9136": {
      "branch": 182,
      "fn": "Soulbound.mintSoulboundToken",
      "offset": [
        5746,
        5762
      ],
      "op": "AND",
      "path": "3"
    },
    "9137": {
      "fn": "Soulbound.mintSoulboundToken",
      "offset": [
        5738,
        5788
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x23CC"
    },
    "9140": {
      "branch": 182,
      "fn": "Soulbound.mintSoulboundToken",
      "offset": [
        5738,
        5788
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "9141": {
      "fn": "Soulbound.mintSoulboundToken",
      "offset": [
        5738,
        5788
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "9143": {
      "fn": "Soulbound.mintSoulboundToken",
      "offset": [
        5738,
        5788
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "9144": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "9148": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "9150": {
      "op": "SHL"
    },
    "9151": {
      "fn": "Soulbound.mintSoulboundToken",
      "offset": [
        5738,
        5788
      ],
      "op": "DUP2",
      "path": "3"
    },
    "9152": {
      "fn": "Soulbound.mintSoulboundToken",
      "offset": [
        5738,
        5788
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "9153": {
      "fn": "Soulbound.mintSoulboundToken",
      "offset": [
        5738,
        5788
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x4"
    },
    "9155": {
      "fn": "Soulbound.mintSoulboundToken",
      "offset": [
        5738,
        5788
      ],
      "op": "ADD",
      "path": "3"
    },
    "9156": {
      "fn": "Soulbound.mintSoulboundToken",
      "offset": [
        5738,
        5788
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x6E4"
    },
    "9159": {
      "fn": "Soulbound.mintSoulboundToken",
      "offset": [
        5738,
        5788
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "9160": {
      "fn": "Soulbound.mintSoulboundToken",
      "offset": [
        5738,
        5788
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x2AB9"
    },
    "9163": {
      "fn": "Soulbound.mintSoulboundToken",
      "jump": "i",
      "offset": [
        5738,
        5788
      ],
      "op": "JUMP",
      "path": "3"
    },
    "9164": {
      "fn": "Soulbound.mintSoulboundToken",
      "offset": [
        5738,
        5788
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "9165": {
      "fn": "Soulbound.mintSoulboundToken",
      "offset": [
        5934,
        5942
      ],
      "op": "DUP1",
      "path": "3",
      "statement": 130
    },
    "9166": {
      "fn": "Soulbound.mintSoulboundToken",
      "offset": [
        5928,
        5950
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "9167": {
      "fn": "Soulbound.mintSoulboundToken",
      "offset": [
        5954,
        5955
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "9169": {
      "branch": 183,
      "fn": "Soulbound.mintSoulboundToken",
      "offset": [
        5928,
        5955
      ],
      "op": "SUB",
      "path": "3"
    },
    "9170": {
      "fn": "Soulbound.mintSoulboundToken",
      "offset": [
        5920,
        5975
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x240F"
    },
    "9173": {
      "branch": 183,
      "fn": "Soulbound.mintSoulboundToken",
      "offset": [
        5920,
        5975
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "9174": {
      "fn": "Soulbound.mintSoulboundToken",
      "offset": [
        5920,
        5975
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "9176": {
      "fn": "Soulbound.mintSoulboundToken",
      "offset": [
        5920,
        5975
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "9177": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "9181": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "9183": {
      "op": "SHL"
    },
    "9184": {
      "fn": "Soulbound.mintSoulboundToken",
      "offset": [
        5920,
        5975
      ],
      "op": "DUP2",
      "path": "3"
    },
    "9185": {
      "fn": "Soulbound.mintSoulboundToken",
      "offset": [
        5920,
        5975
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "9186": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "9188": {
      "fn": "Soulbound.mintSoulboundToken",
      "offset": [
        5920,
        5975
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x4"
    },
    "9190": {
      "fn": "Soulbound.mintSoulboundToken",
      "offset": [
        5920,
        5975
      ],
      "op": "DUP3",
      "path": "3"
    },
    "9191": {
      "fn": "Soulbound.mintSoulboundToken",
      "offset": [
        5920,
        5975
      ],
      "op": "ADD",
      "path": "3"
    },
    "9192": {
      "op": "MSTORE"
    },
    "9193": {
      "op": "PUSH1",
      "value": "0xF"
    },
    "9195": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "9197": {
      "op": "DUP3"
    },
    "9198": {
      "op": "ADD"
    },
    "9199": {
      "op": "MSTORE"
    },
    "9200": {
      "op": "PUSH15",
      "value": "0x22B6B83A3C903A37B5B2B72AA92497"
    },
    "9216": {
      "op": "PUSH1",
      "value": "0x89"
    },
    "9218": {
      "op": "SHL"
    },
    "9219": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "9221": {
      "op": "DUP3"
    },
    "9222": {
      "op": "ADD"
    },
    "9223": {
      "op": "MSTORE"
    },
    "9224": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "9226": {
      "op": "ADD"
    },
    "9227": {
      "fn": "Soulbound.mintSoulboundToken",
      "offset": [
        5920,
        5975
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x6E4"
    },
    "9230": {
      "op": "JUMP"
    },
    "9231": {
      "fn": "Soulbound.mintSoulboundToken",
      "offset": [
        5920,
        5975
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "9232": {
      "fn": "Soulbound.mintSoulboundToken",
      "offset": [
        6090,
        6118
      ],
      "op": "PUSH2",
      "path": "3",
      "statement": 131,
      "value": "0x241A"
    },
    "9235": {
      "fn": "Soulbound.mintSoulboundToken",
      "offset": [
        6096,
        6098
      ],
      "op": "DUP4",
      "path": "3"
    },
    "9236": {
      "fn": "Soulbound.mintSoulboundToken",
      "offset": [
        6100,
        6107
      ],
      "op": "DUP4",
      "path": "3"
    },
    "9237": {
      "fn": "Soulbound.mintSoulboundToken",
      "offset": [
        6109,
        6117
      ],
      "op": "DUP4",
      "path": "3"
    },
    "9238": {
      "fn": "Soulbound.mintSoulboundToken",
      "offset": [
        6090,
        6095
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x244C"
    },
    "9241": {
      "fn": "Soulbound.mintSoulboundToken",
      "jump": "i",
      "offset": [
        6090,
        6118
      ],
      "op": "JUMP",
      "path": "3"
    },
    "9242": {
      "fn": "Soulbound.mintSoulboundToken",
      "offset": [
        6090,
        6118
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "9243": {
      "op": "POP"
    },
    "9244": {
      "op": "POP"
    },
    "9245": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9247": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9249": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "9251": {
      "op": "SHL"
    },
    "9252": {
      "op": "SUB"
    },
    "9253": {
      "fn": "Soulbound.mintSoulboundToken",
      "offset": [
        6174,
        6183
      ],
      "op": "SWAP1",
      "path": "3",
      "statement": 132
    },
    "9254": {
      "fn": "Soulbound.mintSoulboundToken",
      "offset": [
        6174,
        6183
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "9255": {
      "fn": "Soulbound.mintSoulboundToken",
      "offset": [
        6174,
        6183
      ],
      "op": "AND",
      "path": "3"
    },
    "9256": {
      "fn": "Soulbound.mintSoulboundToken",
      "offset": [
        6174,
        6183
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "9258": {
      "fn": "Soulbound.mintSoulboundToken",
      "offset": [
        6174,
        6183
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "9259": {
      "fn": "Soulbound.mintSoulboundToken",
      "offset": [
        6174,
        6183
      ],
      "op": "DUP2",
      "path": "3"
    },
    "9260": {
      "fn": "Soulbound.mintSoulboundToken",
      "offset": [
        6174,
        6183
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "9261": {
      "fn": "Soulbound.mintSoulboundToken",
      "offset": [
        6174,
        6179
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x8"
    },
    "9263": {
      "fn": "Soulbound.mintSoulboundToken",
      "offset": [
        6174,
        6183
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "9265": {
      "fn": "Soulbound.mintSoulboundToken",
      "offset": [
        6174,
        6183
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "9266": {
      "fn": "Soulbound.mintSoulboundToken",
      "offset": [
        6174,
        6183
      ],
      "op": "DUP2",
      "path": "3"
    },
    "9267": {
      "fn": "Soulbound.mintSoulboundToken",
      "offset": [
        6174,
        6183
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "9268": {
      "fn": "Soulbound.mintSoulboundToken",
      "offset": [
        6174,
        6183
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "9270": {
      "fn": "Soulbound.mintSoulboundToken",
      "offset": [
        6174,
        6183
      ],
      "op": "DUP1",
      "path": "3"
    },
    "9271": {
      "fn": "Soulbound.mintSoulboundToken",
      "offset": [
        6174,
        6183
      ],
      "op": "DUP4",
      "path": "3"
    },
    "9272": {
      "fn": "Soulbound.mintSoulboundToken",
      "offset": [
        6174,
        6183
      ],
      "op": "KECCAK256",
      "path": "3"
    },
    "9273": {
      "fn": "Soulbound.mintSoulboundToken",
      "offset": [
        6174,
        6192
      ],
      "op": "SWAP4",
      "path": "3"
    },
    "9274": {
      "fn": "Soulbound.mintSoulboundToken",
      "offset": [
        6174,
        6192
      ],
      "op": "DUP4",
      "path": "3"
    },
    "9275": {
      "fn": "Soulbound.mintSoulboundToken",
      "offset": [
        6174,
        6192
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "9276": {
      "fn": "Soulbound.mintSoulboundToken",
      "offset": [
        6174,
        6192
      ],
      "op": "SWAP3",
      "path": "3"
    },
    "9277": {
      "fn": "Soulbound.mintSoulboundToken",
      "offset": [
        6174,
        6192
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "9278": {
      "fn": "Soulbound.mintSoulboundToken",
      "offset": [
        6174,
        6192
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "9279": {
      "fn": "Soulbound.mintSoulboundToken",
      "offset": [
        6174,
        6192
      ],
      "op": "KECCAK256",
      "path": "3"
    },
    "9280": {
      "fn": "Soulbound.mintSoulboundToken",
      "offset": [
        6174,
        6199
      ],
      "op": "DUP1",
      "path": "3"
    },
    "9281": {
      "fn": "Soulbound.mintSoulboundToken",
      "offset": [
        6174,
        6199
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "9282": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "9284": {
      "op": "NOT"
    },
    "9285": {
      "fn": "Soulbound.mintSoulboundToken",
      "offset": [
        6174,
        6199
      ],
      "op": "AND",
      "path": "3"
    },
    "9286": {
      "fn": "Soulbound.mintSoulboundToken",
      "offset": [
        6195,
        6199
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x1"
    },
    "9288": {
      "fn": "Soulbound.mintSoulboundToken",
      "offset": [
        6174,
        6199
      ],
      "op": "OR",
      "path": "3"
    },
    "9289": {
      "fn": "Soulbound.mintSoulboundToken",
      "offset": [
        6174,
        6199
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "9290": {
      "fn": "Soulbound.mintSoulboundToken",
      "offset": [
        6174,
        6199
      ],
      "op": "SSTORE",
      "path": "3"
    },
    "9291": {
      "fn": "Soulbound.mintSoulboundToken",
      "jump": "o",
      "offset": [
        5532,
        6206
      ],
      "op": "JUMP",
      "path": "3"
    },
    "9292": {
      "fn": "ERC4973._mint",
      "offset": [
        5632,
        5939
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "9293": {
      "fn": "ERC4973._mint",
      "offset": [
        5737,
        5744
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x0"
    },
    "9295": {
      "fn": "ERC4973._mint",
      "offset": [
        5761,
        5777
      ],
      "op": "PUSH2",
      "path": "7",
      "statement": 133,
      "value": "0x2457"
    },
    "9298": {
      "fn": "ERC4973._mint",
      "offset": [
        5769,
        5776
      ],
      "op": "DUP4",
      "path": "7"
    },
    "9299": {
      "fn": "ERC4973._mint",
      "offset": [
        5761,
        5768
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x1E01"
    },
    "9302": {
      "fn": "ERC4973._mint",
      "jump": "i",
      "offset": [
        5761,
        5777
      ],
      "op": "JUMP",
      "path": "7"
    },
    "9303": {
      "fn": "ERC4973._mint",
      "offset": [
        5761,
        5777
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "9304": {
      "branch": 170,
      "fn": "ERC4973._mint",
      "offset": [
        5760,
        5777
      ],
      "op": "ISZERO",
      "path": "7"
    },
    "9305": {
      "fn": "ERC4973._mint",
      "offset": [
        5752,
        5802
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x249B"
    },
    "9308": {
      "branch": 170,
      "fn": "ERC4973._mint",
      "offset": [
        5752,
        5802
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "9309": {
      "fn": "ERC4973._mint",
      "offset": [
        5752,
        5802
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x40"
    },
    "9311": {
      "fn": "ERC4973._mint",
      "offset": [
        5752,
        5802
      ],
      "op": "MLOAD",
      "path": "7"
    },
    "9312": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "9316": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "9318": {
      "op": "SHL"
    },
    "9319": {
      "fn": "ERC4973._mint",
      "offset": [
        5752,
        5802
      ],
      "op": "DUP2",
      "path": "7"
    },
    "9320": {
      "fn": "ERC4973._mint",
      "offset": [
        5752,
        5802
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "9321": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "9323": {
      "fn": "ERC4973._mint",
      "offset": [
        5752,
        5802
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x4"
    },
    "9325": {
      "fn": "ERC4973._mint",
      "offset": [
        5752,
        5802
      ],
      "op": "DUP3",
      "path": "7"
    },
    "9326": {
      "fn": "ERC4973._mint",
      "offset": [
        5752,
        5802
      ],
      "op": "ADD",
      "path": "7"
    },
    "9327": {
      "op": "MSTORE"
    },
    "9328": {
      "op": "PUSH1",
      "value": "0x14"
    },
    "9330": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "9332": {
      "op": "DUP3"
    },
    "9333": {
      "op": "ADD"
    },
    "9334": {
      "op": "MSTORE"
    },
    "9335": {
      "op": "PUSH20",
      "value": "0x6D696E743A20746F6B656E494420657869737473"
    },
    "9356": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "9358": {
      "op": "SHL"
    },
    "9359": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "9361": {
      "op": "DUP3"
    },
    "9362": {
      "op": "ADD"
    },
    "9363": {
      "op": "MSTORE"
    },
    "9364": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "9366": {
      "op": "ADD"
    },
    "9367": {
      "fn": "ERC4973._mint",
      "offset": [
        5752,
        5802
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x6E4"
    },
    "9370": {
      "op": "JUMP"
    },
    "9371": {
      "fn": "ERC4973._mint",
      "offset": [
        5752,
        5802
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "9372": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9374": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9376": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "9378": {
      "op": "SHL"
    },
    "9379": {
      "op": "SUB"
    },
    "9380": {
      "fn": "ERC4973._mint",
      "offset": [
        5808,
        5821
      ],
      "op": "DUP5",
      "path": "7",
      "statement": 134
    },
    "9381": {
      "fn": "ERC4973._mint",
      "offset": [
        5808,
        5821
      ],
      "op": "AND",
      "path": "7"
    },
    "9382": {
      "fn": "ERC4973._mint",
      "offset": [
        5808,
        5821
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x0"
    },
    "9384": {
      "fn": "ERC4973._mint",
      "offset": [
        5808,
        5821
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "9385": {
      "fn": "ERC4973._mint",
      "offset": [
        5808,
        5821
      ],
      "op": "DUP2",
      "path": "7"
    },
    "9386": {
      "fn": "ERC4973._mint",
      "offset": [
        5808,
        5821
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "9387": {
      "fn": "ERC4973._mint",
      "offset": [
        5808,
        5817
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x5"
    },
    "9389": {
      "fn": "ERC4973._mint",
      "offset": [
        5808,
        5821
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x20"
    },
    "9391": {
      "fn": "ERC4973._mint",
      "offset": [
        5808,
        5821
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "9392": {
      "fn": "ERC4973._mint",
      "offset": [
        5808,
        5821
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x40"
    },
    "9394": {
      "fn": "ERC4973._mint",
      "offset": [
        5808,
        5821
      ],
      "op": "DUP2",
      "path": "7"
    },
    "9395": {
      "fn": "ERC4973._mint",
      "offset": [
        5808,
        5821
      ],
      "op": "KECCAK256",
      "path": "7"
    },
    "9396": {
      "fn": "ERC4973._mint",
      "offset": [
        5808,
        5826
      ],
      "op": "DUP1",
      "path": "7"
    },
    "9397": {
      "fn": "ERC4973._mint",
      "offset": [
        5808,
        5826
      ],
      "op": "SLOAD",
      "path": "7"
    },
    "9398": {
      "fn": "ERC4973._mint",
      "offset": [
        5825,
        5826
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x1"
    },
    "9400": {
      "fn": "ERC4973._mint",
      "offset": [
        5825,
        5826
      ],
      "op": "SWAP3",
      "path": "7"
    },
    "9401": {
      "fn": "ERC4973._mint",
      "offset": [
        5808,
        5821
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "9402": {
      "fn": "ERC4973._mint",
      "offset": [
        5808,
        5826
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x24C4"
    },
    "9405": {
      "fn": "ERC4973._mint",
      "offset": [
        5808,
        5826
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "9406": {
      "fn": "ERC4973._mint",
      "offset": [
        5825,
        5826
      ],
      "op": "DUP5",
      "path": "7"
    },
    "9407": {
      "fn": "ERC4973._mint",
      "offset": [
        5825,
        5826
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "9408": {
      "fn": "ERC4973._mint",
      "offset": [
        5808,
        5826
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x2B18"
    },
    "9411": {
      "fn": "ERC4973._mint",
      "jump": "i",
      "offset": [
        5808,
        5826
      ],
      "op": "JUMP",
      "path": "7"
    },
    "9412": {
      "fn": "ERC4973._mint",
      "offset": [
        5808,
        5826
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "9413": {
      "fn": "ERC4973._mint",
      "offset": [
        5808,
        5826
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "9414": {
      "fn": "ERC4973._mint",
      "offset": [
        5808,
        5826
      ],
      "op": "SWAP2",
      "path": "7"
    },
    "9415": {
      "fn": "ERC4973._mint",
      "offset": [
        5808,
        5826
      ],
      "op": "SSTORE",
      "path": "7"
    },
    "9416": {
      "op": "POP"
    },
    "9417": {
      "op": "POP"
    },
    "9418": {
      "fn": "ERC4973._mint",
      "offset": [
        5832,
        5848
      ],
      "op": "PUSH1",
      "path": "7",
      "statement": 135,
      "value": "0x0"
    },
    "9420": {
      "fn": "ERC4973._mint",
      "offset": [
        5832,
        5848
      ],
      "op": "DUP4",
      "path": "7"
    },
    "9421": {
      "fn": "ERC4973._mint",
      "offset": [
        5832,
        5848
      ],
      "op": "DUP2",
      "path": "7"
    },
    "9422": {
      "fn": "ERC4973._mint",
      "offset": [
        5832,
        5848
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "9423": {
      "fn": "ERC4973._mint",
      "offset": [
        5832,
        5839
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x3"
    },
    "9425": {
      "fn": "ERC4973._mint",
      "offset": [
        5832,
        5848
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x20"
    },
    "9427": {
      "fn": "ERC4973._mint",
      "offset": [
        5832,
        5848
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "9428": {
      "fn": "ERC4973._mint",
      "offset": [
        5832,
        5848
      ],
      "op": "DUP2",
      "path": "7"
    },
    "9429": {
      "fn": "ERC4973._mint",
      "offset": [
        5832,
        5848
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "9430": {
      "fn": "ERC4973._mint",
      "offset": [
        5832,
        5848
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x40"
    },
    "9432": {
      "fn": "ERC4973._mint",
      "offset": [
        5832,
        5848
      ],
      "op": "DUP1",
      "path": "7"
    },
    "9433": {
      "fn": "ERC4973._mint",
      "offset": [
        5832,
        5848
      ],
      "op": "DUP4",
      "path": "7"
    },
    "9434": {
      "fn": "ERC4973._mint",
      "offset": [
        5832,
        5848
      ],
      "op": "KECCAK256",
      "path": "7"
    },
    "9435": {
      "fn": "ERC4973._mint",
      "offset": [
        5832,
        5853
      ],
      "op": "DUP1",
      "path": "7"
    },
    "9436": {
      "fn": "ERC4973._mint",
      "offset": [
        5832,
        5853
      ],
      "op": "SLOAD",
      "path": "7"
    },
    "9437": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9439": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9441": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "9443": {
      "op": "SHL"
    },
    "9444": {
      "op": "SUB"
    },
    "9445": {
      "op": "NOT"
    },
    "9446": {
      "fn": "ERC4973._mint",
      "offset": [
        5832,
        5853
      ],
      "op": "AND",
      "path": "7"
    },
    "9447": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9449": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9451": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "9453": {
      "op": "SHL"
    },
    "9454": {
      "op": "SUB"
    },
    "9455": {
      "fn": "ERC4973._mint",
      "offset": [
        5832,
        5853
      ],
      "op": "DUP10",
      "path": "7"
    },
    "9456": {
      "fn": "ERC4973._mint",
      "offset": [
        5832,
        5853
      ],
      "op": "AND",
      "path": "7"
    },
    "9457": {
      "fn": "ERC4973._mint",
      "offset": [
        5832,
        5853
      ],
      "op": "OR",
      "path": "7"
    },
    "9458": {
      "fn": "ERC4973._mint",
      "offset": [
        5832,
        5853
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "9459": {
      "fn": "ERC4973._mint",
      "offset": [
        5832,
        5853
      ],
      "op": "SSTORE",
      "path": "7"
    },
    "9460": {
      "fn": "ERC4973._mint",
      "offset": [
        5859,
        5869
      ],
      "op": "PUSH1",
      "path": "7",
      "statement": 136,
      "value": "0x4"
    },
    "9462": {
      "fn": "ERC4973._mint",
      "offset": [
        5859,
        5878
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "9463": {
      "fn": "ERC4973._mint",
      "offset": [
        5859,
        5878
      ],
      "op": "SWAP2",
      "path": "7"
    },
    "9464": {
      "fn": "ERC4973._mint",
      "offset": [
        5859,
        5878
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "9465": {
      "fn": "ERC4973._mint",
      "offset": [
        5859,
        5878
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "9466": {
      "fn": "ERC4973._mint",
      "offset": [
        5859,
        5878
      ],
      "op": "KECCAK256",
      "path": "7"
    },
    "9467": {
      "fn": "ERC4973._mint",
      "offset": [
        5859,
        5884
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x2504"
    },
    "9470": {
      "fn": "ERC4973._mint",
      "offset": [
        5881,
        5884
      ],
      "op": "DUP4",
      "path": "7"
    },
    "9471": {
      "fn": "ERC4973._mint",
      "offset": [
        5859,
        5878
      ],
      "op": "DUP3",
      "path": "7"
    },
    "9472": {
      "fn": "ERC4973._mint",
      "offset": [
        5859,
        5884
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x2BF1"
    },
    "9475": {
      "fn": "ERC4973._mint",
      "jump": "i",
      "offset": [
        5859,
        5884
      ],
      "op": "JUMP",
      "path": "7"
    },
    "9476": {
      "fn": "ERC4973._mint",
      "offset": [
        5859,
        5884
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "9477": {
      "op": "POP"
    },
    "9478": {
      "fn": "ERC4973._mint",
      "offset": [
        5895,
        5914
      ],
      "op": "PUSH1",
      "path": "7",
      "statement": 137,
      "value": "0x40"
    },
    "9480": {
      "fn": "ERC4973._mint",
      "offset": [
        5895,
        5914
      ],
      "op": "MLOAD",
      "path": "7"
    },
    "9481": {
      "fn": "ERC4973._mint",
      "offset": [
        5906,
        5913
      ],
      "op": "DUP4",
      "path": "7"
    },
    "9482": {
      "fn": "ERC4973._mint",
      "offset": [
        5906,
        5913
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "9483": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9485": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9487": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "9489": {
      "op": "SHL"
    },
    "9490": {
      "op": "SUB"
    },
    "9491": {
      "fn": "ERC4973._mint",
      "offset": [
        5895,
        5914
      ],
      "op": "DUP7",
      "path": "7"
    },
    "9492": {
      "fn": "ERC4973._mint",
      "offset": [
        5895,
        5914
      ],
      "op": "AND",
      "path": "7"
    },
    "9493": {
      "fn": "ERC4973._mint",
      "offset": [
        5895,
        5914
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "9494": {
      "fn": "ERC4973._mint",
      "offset": [
        5895,
        5914
      ],
      "op": "PUSH32",
      "path": "7",
      "value": "0xE9274A84B19E9428826DE6BAE8C48329354F8F0E73F771B97CAE2D9DCCD45A27"
    },
    "9527": {
      "fn": "ERC4973._mint",
      "offset": [
        5895,
        5914
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "9528": {
      "fn": "ERC4973._mint",
      "offset": [
        5895,
        5914
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x0"
    },
    "9530": {
      "fn": "ERC4973._mint",
      "offset": [
        5895,
        5914
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "9531": {
      "fn": "ERC4973._mint",
      "offset": [
        5895,
        5914
      ],
      "op": "LOG3",
      "path": "7"
    },
    "9532": {
      "op": "POP"
    },
    "9533": {
      "fn": "ERC4973._mint",
      "offset": [
        5927,
        5934
      ],
      "op": "SWAP1",
      "path": "7",
      "statement": 138
    },
    "9534": {
      "fn": "ERC4973._mint",
      "offset": [
        5927,
        5934
      ],
      "op": "SWAP3",
      "path": "7"
    },
    "9535": {
      "fn": "ERC4973._mint",
      "offset": [
        5632,
        5939
      ],
      "op": "SWAP2",
      "path": "7"
    },
    "9536": {
      "op": "POP"
    },
    "9537": {
      "op": "POP"
    },
    "9538": {
      "fn": "ERC4973._mint",
      "jump": "o",
      "offset": [
        5632,
        5939
      ],
      "op": "JUMP",
      "path": "7"
    },
    "9539": {
      "op": "JUMPDEST"
    },
    "9540": {
      "op": "POP"
    },
    "9541": {
      "op": "DUP1"
    },
    "9542": {
      "op": "SLOAD"
    },
    "9543": {
      "op": "PUSH2",
      "value": "0x254F"
    },
    "9546": {
      "op": "SWAP1"
    },
    "9547": {
      "op": "PUSH2",
      "value": "0x2A23"
    },
    "9550": {
      "jump": "i",
      "op": "JUMP"
    },
    "9551": {
      "op": "JUMPDEST"
    },
    "9552": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "9554": {
      "op": "DUP3"
    },
    "9555": {
      "op": "SSTORE"
    },
    "9556": {
      "op": "DUP1"
    },
    "9557": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "9559": {
      "op": "LT"
    },
    "9560": {
      "op": "PUSH2",
      "value": "0x255F"
    },
    "9563": {
      "op": "JUMPI"
    },
    "9564": {
      "op": "POP"
    },
    "9565": {
      "op": "POP"
    },
    "9566": {
      "jump": "o",
      "op": "JUMP"
    },
    "9567": {
      "op": "JUMPDEST"
    },
    "9568": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "9570": {
      "op": "ADD"
    },
    "9571": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "9573": {
      "op": "SWAP1"
    },
    "9574": {
      "op": "DIV"
    },
    "9575": {
      "op": "SWAP1"
    },
    "9576": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "9578": {
      "op": "MSTORE"
    },
    "9579": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "9581": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "9583": {
      "op": "KECCAK256"
    },
    "9584": {
      "op": "SWAP1"
    },
    "9585": {
      "op": "DUP2"
    },
    "9586": {
      "op": "ADD"
    },
    "9587": {
      "op": "SWAP1"
    },
    "9588": {
      "op": "PUSH2",
      "value": "0x1094"
    },
    "9591": {
      "op": "SWAP2"
    },
    "9592": {
      "op": "SWAP1"
    },
    "9593": {
      "op": "JUMPDEST"
    },
    "9594": {
      "op": "DUP1"
    },
    "9595": {
      "op": "DUP3"
    },
    "9596": {
      "op": "GT"
    },
    "9597": {
      "op": "ISZERO"
    },
    "9598": {
      "op": "PUSH2",
      "value": "0x258D"
    },
    "9601": {
      "op": "JUMPI"
    },
    "9602": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "9604": {
      "op": "DUP2"
    },
    "9605": {
      "op": "SSTORE"
    },
    "9606": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9608": {
      "op": "ADD"
    },
    "9609": {
      "op": "PUSH2",
      "value": "0x2579"
    },
    "9612": {
      "op": "JUMP"
    },
    "9613": {
      "op": "JUMPDEST"
    },
    "9614": {
      "op": "POP"
    },
    "9615": {
      "op": "SWAP1"
    },
    "9616": {
      "jump": "o",
      "op": "JUMP"
    },
    "9617": {
      "op": "JUMPDEST"
    },
    "9618": {
      "op": "DUP1"
    },
    "9619": {
      "op": "CALLDATALOAD"
    },
    "9620": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9622": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9624": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "9626": {
      "op": "SHL"
    },
    "9627": {
      "op": "SUB"
    },
    "9628": {
      "op": "DUP2"
    },
    "9629": {
      "op": "AND"
    },
    "9630": {
      "op": "DUP2"
    },
    "9631": {
      "op": "EQ"
    },
    "9632": {
      "op": "PUSH2",
      "value": "0x199D"
    },
    "9635": {
      "op": "JUMPI"
    },
    "9636": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "9638": {
      "op": "DUP1"
    },
    "9639": {
      "op": "REVERT"
    },
    "9640": {
      "op": "JUMPDEST"
    },
    "9641": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "9643": {
      "op": "DUP1"
    },
    "9644": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "9646": {
      "op": "DUP4"
    },
    "9647": {
      "op": "DUP6"
    },
    "9648": {
      "op": "SUB"
    },
    "9649": {
      "op": "SLT"
    },
    "9650": {
      "op": "ISZERO"
    },
    "9651": {
      "op": "PUSH2",
      "value": "0x25BB"
    },
    "9654": {
      "op": "JUMPI"
    },
    "9655": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "9657": {
      "op": "DUP1"
    },
    "9658": {
      "op": "REVERT"
    },
    "9659": {
      "op": "JUMPDEST"
    },
    "9660": {
      "op": "PUSH2",
      "value": "0x25C4"
    },
    "9663": {
      "op": "DUP4"
    },
    "9664": {
      "op": "PUSH2",
      "value": "0x2591"
    },
    "9667": {
      "jump": "i",
      "op": "JUMP"
    },
    "9668": {
      "op": "JUMPDEST"
    },
    "9669": {
      "op": "SWAP5"
    },
    "9670": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "9672": {
      "op": "SWAP4"
    },
    "9673": {
      "op": "SWAP1"
    },
    "9674": {
      "op": "SWAP4"
    },
    "9675": {
      "op": "ADD"
    },
    "9676": {
      "op": "CALLDATALOAD"
    },
    "9677": {
      "op": "SWAP4"
    },
    "9678": {
      "op": "POP"
    },
    "9679": {
      "op": "POP"
    },
    "9680": {
      "op": "POP"
    },
    "9681": {
      "jump": "o",
      "op": "JUMP"
    },
    "9682": {
      "op": "JUMPDEST"
    },
    "9683": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "9685": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "9687": {
      "op": "DUP3"
    },
    "9688": {
      "op": "DUP5"
    },
    "9689": {
      "op": "SUB"
    },
    "9690": {
      "op": "SLT"
    },
    "9691": {
      "op": "ISZERO"
    },
    "9692": {
      "op": "PUSH2",
      "value": "0x25E4"
    },
    "9695": {
      "op": "JUMPI"
    },
    "9696": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "9698": {
      "op": "DUP1"
    },
    "9699": {
      "op": "REVERT"
    },
    "9700": {
      "op": "JUMPDEST"
    },
    "9701": {
      "op": "DUP2"
    },
    "9702": {
      "op": "CALLDATALOAD"
    },
    "9703": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9705": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9707": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "9709": {
      "op": "SHL"
    },
    "9710": {
      "op": "SUB"
    },
    "9711": {
      "op": "NOT"
    },
    "9712": {
      "op": "DUP2"
    },
    "9713": {
      "op": "AND"
    },
    "9714": {
      "op": "DUP2"
    },
    "9715": {
      "op": "EQ"
    },
    "9716": {
      "op": "PUSH2",
      "value": "0x195E"
    },
    "9719": {
      "op": "JUMPI"
    },
    "9720": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "9722": {
      "op": "DUP1"
    },
    "9723": {
      "op": "REVERT"
    },
    "9724": {
      "op": "JUMPDEST"
    },
    "9725": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "9727": {
      "op": "JUMPDEST"
    },
    "9728": {
      "op": "DUP4"
    },
    "9729": {
      "op": "DUP2"
    },
    "9730": {
      "op": "LT"
    },
    "9731": {
      "op": "ISZERO"
    },
    "9732": {
      "op": "PUSH2",
      "value": "0x2617"
    },
    "9735": {
      "op": "JUMPI"
    },
    "9736": {
      "op": "DUP2"
    },
    "9737": {
      "op": "DUP2"
    },
    "9738": {
      "op": "ADD"
    },
    "9739": {
      "op": "MLOAD"
    },
    "9740": {
      "op": "DUP4"
    },
    "9741": {
      "op": "DUP3"
    },
    "9742": {
      "op": "ADD"
    },
    "9743": {
      "op": "MSTORE"
    },
    "9744": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "9746": {
      "op": "ADD"
    },
    "9747": {
      "op": "PUSH2",
      "value": "0x25FF"
    },
    "9750": {
      "op": "JUMP"
    },
    "9751": {
      "op": "JUMPDEST"
    },
    "9752": {
      "op": "DUP4"
    },
    "9753": {
      "op": "DUP2"
    },
    "9754": {
      "op": "GT"
    },
    "9755": {
      "op": "ISZERO"
    },
    "9756": {
      "op": "PUSH2",
      "value": "0x2626"
    },
    "9759": {
      "op": "JUMPI"
    },
    "9760": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "9762": {
      "op": "DUP5"
    },
    "9763": {
      "op": "DUP5"
    },
    "9764": {
      "op": "ADD"
    },
    "9765": {
      "op": "MSTORE"
    },
    "9766": {
      "op": "JUMPDEST"
    },
    "9767": {
      "op": "POP"
    },
    "9768": {
      "op": "POP"
    },
    "9769": {
      "op": "POP"
    },
    "9770": {
      "op": "POP"
    },
    "9771": {
      "jump": "o",
      "op": "JUMP"
    },
    "9772": {
      "op": "JUMPDEST"
    },
    "9773": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "9775": {
      "op": "DUP2"
    },
    "9776": {
      "op": "MSTORE"
    },
    "9777": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "9779": {
      "op": "DUP3"
    },
    "9780": {
      "op": "MLOAD"
    },
    "9781": {
      "op": "DUP1"
    },
    "9782": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "9784": {
      "op": "DUP5"
    },
    "9785": {
      "op": "ADD"
    },
    "9786": {
      "op": "MSTORE"
    },
    "9787": {
      "op": "PUSH2",
      "value": "0x264B"
    },
    "9790": {
      "op": "DUP2"
    },
    "9791": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "9793": {
      "op": "DUP6"
    },
    "9794": {
      "op": "ADD"
    },
    "9795": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "9797": {
      "op": "DUP8"
    },
    "9798": {
      "op": "ADD"
    },
    "9799": {
      "op": "PUSH2",
      "value": "0x25FC"
    },
    "9802": {
      "jump": "i",
      "op": "JUMP"
    },
    "9803": {
      "op": "JUMPDEST"
    },
    "9804": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "9806": {
      "op": "ADD"
    },
    "9807": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "9809": {
      "op": "NOT"
    },
    "9810": {
      "op": "AND"
    },
    "9811": {
      "op": "SWAP2"
    },
    "9812": {
      "op": "SWAP1"
    },
    "9813": {
      "op": "SWAP2"
    },
    "9814": {
      "op": "ADD"
    },
    "9815": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "9817": {
      "op": "ADD"
    },
    "9818": {
      "op": "SWAP3"
    },
    "9819": {
      "op": "SWAP2"
    },
    "9820": {
      "op": "POP"
    },
    "9821": {
      "op": "POP"
    },
    "9822": {
      "jump": "o",
      "op": "JUMP"
    },
    "9823": {
      "op": "JUMPDEST"
    },
    "9824": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "9829": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "9831": {
      "op": "SHL"
    },
    "9832": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "9834": {
      "op": "MSTORE"
    },
    "9835": {
      "op": "PUSH1",
      "value": "0x41"
    },
    "9837": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "9839": {
      "op": "MSTORE"
    },
    "9840": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "9842": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "9844": {
      "op": "REVERT"
    },
    "9845": {
      "op": "JUMPDEST"
    },
    "9846": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "9848": {
      "op": "DUP3"
    },
    "9849": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "9851": {
      "op": "DUP4"
    },
    "9852": {
      "op": "ADD"
    },
    "9853": {
      "op": "SLT"
    },
    "9854": {
      "op": "PUSH2",
      "value": "0x2686"
    },
    "9857": {
      "op": "JUMPI"
    },
    "9858": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "9860": {
      "op": "DUP1"
    },
    "9861": {
      "op": "REVERT"
    },
    "9862": {
      "op": "JUMPDEST"
    },
    "9863": {
      "op": "DUP2"
    },
    "9864": {
      "op": "CALLDATALOAD"
    },
    "9865": {
      "op": "PUSH8",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "9874": {
      "op": "DUP1"
    },
    "9875": {
      "op": "DUP3"
    },
    "9876": {
      "op": "GT"
    },
    "9877": {
      "op": "ISZERO"
    },
    "9878": {
      "op": "PUSH2",
      "value": "0x26A1"
    },
    "9881": {
      "op": "JUMPI"
    },
    "9882": {
      "op": "PUSH2",
      "value": "0x26A1"
    },
    "9885": {
      "op": "PUSH2",
      "value": "0x265F"
    },
    "9888": {
      "jump": "i",
      "op": "JUMP"
    },
    "9889": {
      "op": "JUMPDEST"
    },
    "9890": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "9892": {
      "op": "MLOAD"
    },
    "9893": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "9895": {
      "op": "DUP4"
    },
    "9896": {
      "op": "ADD"
    },
    "9897": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "9899": {
      "op": "NOT"
    },
    "9900": {
      "op": "SWAP1"
    },
    "9901": {
      "op": "DUP2"
    },
    "9902": {
      "op": "AND"
    },
    "9903": {
      "op": "PUSH1",
      "value": "0x3F"
    },
    "9905": {
      "op": "ADD"
    },
    "9906": {
      "op": "AND"
    },
    "9907": {
      "op": "DUP2"
    },
    "9908": {
      "op": "ADD"
    },
    "9909": {
      "op": "SWAP1"
    },
    "9910": {
      "op": "DUP3"
    },
    "9911": {
      "op": "DUP3"
    },
    "9912": {
      "op": "GT"
    },
    "9913": {
      "op": "DUP2"
    },
    "9914": {
      "op": "DUP4"
    },
    "9915": {
      "op": "LT"
    },
    "9916": {
      "op": "OR"
    },
    "9917": {
      "op": "ISZERO"
    },
    "9918": {
      "op": "PUSH2",
      "value": "0x26C9"
    },
    "9921": {
      "op": "JUMPI"
    },
    "9922": {
      "op": "PUSH2",
      "value": "0x26C9"
    },
    "9925": {
      "op": "PUSH2",
      "value": "0x265F"
    },
    "9928": {
      "jump": "i",
      "op": "JUMP"
    },
    "9929": {
      "op": "JUMPDEST"
    },
    "9930": {
      "op": "DUP2"
    },
    "9931": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "9933": {
      "op": "MSTORE"
    },
    "9934": {
      "op": "DUP4"
    },
    "9935": {
      "op": "DUP2"
    },
    "9936": {
      "op": "MSTORE"
    },
    "9937": {
      "op": "DUP7"
    },
    "9938": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "9940": {
      "op": "DUP6"
    },
    "9941": {
      "op": "DUP9"
    },
    "9942": {
      "op": "ADD"
    },
    "9943": {
      "op": "ADD"
    },
    "9944": {
      "op": "GT"
    },
    "9945": {
      "op": "ISZERO"
    },
    "9946": {
      "op": "PUSH2",
      "value": "0x26E2"
    },
    "9949": {
      "op": "JUMPI"
    },
    "9950": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "9952": {
      "op": "DUP1"
    },
    "9953": {
      "op": "REVERT"
    },
    "9954": {
      "op": "JUMPDEST"
    },
    "9955": {
      "op": "DUP4"
    },
    "9956": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "9958": {
      "op": "DUP8"
    },
    "9959": {
      "op": "ADD"
    },
    "9960": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "9962": {
      "op": "DUP4"
    },
    "9963": {
      "op": "ADD"
    },
    "9964": {
      "op": "CALLDATACOPY"
    },
    "9965": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "9967": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "9969": {
      "op": "DUP6"
    },
    "9970": {
      "op": "DUP4"
    },
    "9971": {
      "op": "ADD"
    },
    "9972": {
      "op": "ADD"
    },
    "9973": {
      "op": "MSTORE"
    },
    "9974": {
      "op": "DUP1"
    },
    "9975": {
      "op": "SWAP5"
    },
    "9976": {
      "op": "POP"
    },
    "9977": {
      "op": "POP"
    },
    "9978": {
      "op": "POP"
    },
    "9979": {
      "op": "POP"
    },
    "9980": {
      "op": "POP"
    },
    "9981": {
      "op": "SWAP3"
    },
    "9982": {
      "op": "SWAP2"
    },
    "9983": {
      "op": "POP"
    },
    "9984": {
      "op": "POP"
    },
    "9985": {
      "jump": "o",
      "op": "JUMP"
    },
    "9986": {
      "op": "JUMPDEST"
    },
    "9987": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "9989": {
      "op": "DUP1"
    },
    "9990": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "9992": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "9994": {
      "op": "DUP5"
    },
    "9995": {
      "op": "DUP7"
    },
    "9996": {
      "op": "SUB"
    },
    "9997": {
      "op": "SLT"
    },
    "9998": {
      "op": "ISZERO"
    },
    "9999": {
      "op": "PUSH2",
      "value": "0x2717"
    },
    "10002": {
      "op": "JUMPI"
    },
    "10003": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "10005": {
      "op": "DUP1"
    },
    "10006": {
      "op": "REVERT"
    },
    "10007": {
      "op": "JUMPDEST"
    },
    "10008": {
      "op": "DUP4"
    },
    "10009": {
      "op": "CALLDATALOAD"
    },
    "10010": {
      "op": "SWAP3"
    },
    "10011": {
      "op": "POP"
    },
    "10012": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "10014": {
      "op": "DUP5"
    },
    "10015": {
      "op": "ADD"
    },
    "10016": {
      "op": "CALLDATALOAD"
    },
    "10017": {
      "op": "PUSH8",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "10026": {
      "op": "DUP2"
    },
    "10027": {
      "op": "GT"
    },
    "10028": {
      "op": "ISZERO"
    },
    "10029": {
      "op": "PUSH2",
      "value": "0x2735"
    },
    "10032": {
      "op": "JUMPI"
    },
    "10033": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "10035": {
      "op": "DUP1"
    },
    "10036": {
      "op": "REVERT"
    },
    "10037": {
      "op": "JUMPDEST"
    },
    "10038": {
      "op": "PUSH2",
      "value": "0x2741"
    },
    "10041": {
      "op": "DUP7"
    },
    "10042": {
      "op": "DUP3"
    },
    "10043": {
      "op": "DUP8"
    },
    "10044": {
      "op": "ADD"
    },
    "10045": {
      "op": "PUSH2",
      "value": "0x2675"
    },
    "10048": {
      "jump": "i",
      "op": "JUMP"
    },
    "10049": {
      "op": "JUMPDEST"
    },
    "10050": {
      "op": "SWAP3"
    },
    "10051": {
      "op": "POP"
    },
    "10052": {
      "op": "POP"
    },
    "10053": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "10055": {
      "op": "DUP5"
    },
    "10056": {
      "op": "ADD"
    },
    "10057": {
      "op": "CALLDATALOAD"
    },
    "10058": {
      "op": "SWAP1"
    },
    "10059": {
      "op": "POP"
    },
    "10060": {
      "op": "SWAP3"
    },
    "10061": {
      "op": "POP"
    },
    "10062": {
      "op": "SWAP3"
    },
    "10063": {
      "op": "POP"
    },
    "10064": {
      "op": "SWAP3"
    },
    "10065": {
      "jump": "o",
      "op": "JUMP"
    },
    "10066": {
      "op": "JUMPDEST"
    },
    "10067": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "10069": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "10071": {
      "op": "DUP3"
    },
    "10072": {
      "op": "DUP5"
    },
    "10073": {
      "op": "SUB"
    },
    "10074": {
      "op": "SLT"
    },
    "10075": {
      "op": "ISZERO"
    },
    "10076": {
      "op": "PUSH2",
      "value": "0x2764"
    },
    "10079": {
      "op": "JUMPI"
    },
    "10080": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "10082": {
      "op": "DUP1"
    },
    "10083": {
      "op": "REVERT"
    },
    "10084": {
      "op": "JUMPDEST"
    },
    "10085": {
      "op": "POP"
    },
    "10086": {
      "op": "CALLDATALOAD"
    },
    "10087": {
      "op": "SWAP2"
    },
    "10088": {
      "op": "SWAP1"
    },
    "10089": {
      "op": "POP"
    },
    "10090": {
      "jump": "o",
      "op": "JUMP"
    },
    "10091": {
      "op": "JUMPDEST"
    },
    "10092": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "10094": {
      "op": "DUP1"
    },
    "10095": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "10097": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "10099": {
      "op": "DUP5"
    },
    "10100": {
      "op": "DUP7"
    },
    "10101": {
      "op": "SUB"
    },
    "10102": {
      "op": "SLT"
    },
    "10103": {
      "op": "ISZERO"
    },
    "10104": {
      "op": "PUSH2",
      "value": "0x2780"
    },
    "10107": {
      "op": "JUMPI"
    },
    "10108": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "10110": {
      "op": "DUP1"
    },
    "10111": {
      "op": "REVERT"
    },
    "10112": {
      "op": "JUMPDEST"
    },
    "10113": {
      "op": "PUSH2",
      "value": "0x2789"
    },
    "10116": {
      "op": "DUP5"
    },
    "10117": {
      "op": "PUSH2",
      "value": "0x2591"
    },
    "10120": {
      "jump": "i",
      "op": "JUMP"
    },
    "10121": {
      "op": "JUMPDEST"
    },
    "10122": {
      "op": "SWAP6"
    },
    "10123": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "10125": {
      "op": "DUP6"
    },
    "10126": {
      "op": "ADD"
    },
    "10127": {
      "op": "CALLDATALOAD"
    },
    "10128": {
      "op": "SWAP6"
    },
    "10129": {
      "op": "POP"
    },
    "10130": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "10132": {
      "op": "SWAP1"
    },
    "10133": {
      "op": "SWAP5"
    },
    "10134": {
      "op": "ADD"
    },
    "10135": {
      "op": "CALLDATALOAD"
    },
    "10136": {
      "op": "SWAP4"
    },
    "10137": {
      "op": "SWAP3"
    },
    "10138": {
      "op": "POP"
    },
    "10139": {
      "op": "POP"
    },
    "10140": {
      "op": "POP"
    },
    "10141": {
      "jump": "o",
      "op": "JUMP"
    },
    "10142": {
      "op": "JUMPDEST"
    },
    "10143": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "10145": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "10147": {
      "op": "DUP3"
    },
    "10148": {
      "op": "DUP5"
    },
    "10149": {
      "op": "SUB"
    },
    "10150": {
      "op": "SLT"
    },
    "10151": {
      "op": "ISZERO"
    },
    "10152": {
      "op": "PUSH2",
      "value": "0x27B0"
    },
    "10155": {
      "op": "JUMPI"
    },
    "10156": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "10158": {
      "op": "DUP1"
    },
    "10159": {
      "op": "REVERT"
    },
    "10160": {
      "op": "JUMPDEST"
    },
    "10161": {
      "op": "PUSH2",
      "value": "0x195E"
    },
    "10164": {
      "op": "DUP3"
    },
    "10165": {
      "op": "PUSH2",
      "value": "0x2591"
    },
    "10168": {
      "jump": "i",
      "op": "JUMP"
    },
    "10169": {
      "op": "JUMPDEST"
    },
    "10170": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "10172": {
      "op": "DUP1"
    },
    "10173": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "10175": {
      "op": "DUP4"
    },
    "10176": {
      "op": "DUP6"
    },
    "10177": {
      "op": "SUB"
    },
    "10178": {
      "op": "SLT"
    },
    "10179": {
      "op": "ISZERO"
    },
    "10180": {
      "op": "PUSH2",
      "value": "0x27CC"
    },
    "10183": {
      "op": "JUMPI"
    },
    "10184": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "10186": {
      "op": "DUP1"
    },
    "10187": {
      "op": "REVERT"
    },
    "10188": {
      "op": "JUMPDEST"
    },
    "10189": {
      "op": "PUSH2",
      "value": "0x27D5"
    },
    "10192": {
      "op": "DUP4"
    },
    "10193": {
      "op": "PUSH2",
      "value": "0x2591"
    },
    "10196": {
      "jump": "i",
      "op": "JUMP"
    },
    "10197": {
      "op": "JUMPDEST"
    },
    "10198": {
      "op": "SWAP2"
    },
    "10199": {
      "op": "POP"
    },
    "10200": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "10202": {
      "op": "DUP4"
    },
    "10203": {
      "op": "ADD"
    },
    "10204": {
      "op": "CALLDATALOAD"
    },
    "10205": {
      "op": "PUSH8",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "10214": {
      "op": "DUP2"
    },
    "10215": {
      "op": "GT"
    },
    "10216": {
      "op": "ISZERO"
    },
    "10217": {
      "op": "PUSH2",
      "value": "0x27F1"
    },
    "10220": {
      "op": "JUMPI"
    },
    "10221": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "10223": {
      "op": "DUP1"
    },
    "10224": {
      "op": "REVERT"
    },
    "10225": {
      "op": "JUMPDEST"
    },
    "10226": {
      "op": "PUSH2",
      "value": "0x27FD"
    },
    "10229": {
      "op": "DUP6"
    },
    "10230": {
      "op": "DUP3"
    },
    "10231": {
      "op": "DUP7"
    },
    "10232": {
      "op": "ADD"
    },
    "10233": {
      "op": "PUSH2",
      "value": "0x2675"
    },
    "10236": {
      "jump": "i",
      "op": "JUMP"
    },
    "10237": {
      "op": "JUMPDEST"
    },
    "10238": {
      "op": "SWAP2"
    },
    "10239": {
      "op": "POP"
    },
    "10240": {
      "op": "POP"
    },
    "10241": {
      "op": "SWAP3"
    },
    "10242": {
      "op": "POP"
    },
    "10243": {
      "op": "SWAP3"
    },
    "10244": {
      "op": "SWAP1"
    },
    "10245": {
      "op": "POP"
    },
    "10246": {
      "jump": "o",
      "op": "JUMP"
    },
    "10247": {
      "op": "JUMPDEST"
    },
    "10248": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "10250": {
      "op": "DUP1"
    },
    "10251": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "10253": {
      "op": "DUP1"
    },
    "10254": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "10256": {
      "op": "DUP1"
    },
    "10257": {
      "op": "PUSH1",
      "value": "0xC0"
    },
    "10259": {
      "op": "DUP8"
    },
    "10260": {
      "op": "DUP10"
    },
    "10261": {
      "op": "SUB"
    },
    "10262": {
      "op": "SLT"
    },
    "10263": {
      "op": "ISZERO"
    },
    "10264": {
      "op": "PUSH2",
      "value": "0x2820"
    },
    "10267": {
      "op": "JUMPI"
    },
    "10268": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "10270": {
      "op": "DUP1"
    },
    "10271": {
      "op": "REVERT"
    },
    "10272": {
      "op": "JUMPDEST"
    },
    "10273": {
      "op": "PUSH2",
      "value": "0x2829"
    },
    "10276": {
      "op": "DUP8"
    },
    "10277": {
      "op": "PUSH2",
      "value": "0x2591"
    },
    "10280": {
      "jump": "i",
      "op": "JUMP"
    },
    "10281": {
      "op": "JUMPDEST"
    },
    "10282": {
      "op": "SWAP6"
    },
    "10283": {
      "op": "POP"
    },
    "10284": {
      "op": "PUSH2",
      "value": "0x2837"
    },
    "10287": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "10289": {
      "op": "DUP9"
    },
    "10290": {
      "op": "ADD"
    },
    "10291": {
      "op": "PUSH2",
      "value": "0x2591"
    },
    "10294": {
      "jump": "i",
      "op": "JUMP"
    },
    "10295": {
      "op": "JUMPDEST"
    },
    "10296": {
      "op": "SWAP5"
    },
    "10297": {
      "op": "POP"
    },
    "10298": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "10300": {
      "op": "DUP8"
    },
    "10301": {
      "op": "ADD"
    },
    "10302": {
      "op": "CALLDATALOAD"
    },
    "10303": {
      "op": "SWAP4"
    },
    "10304": {
      "op": "POP"
    },
    "10305": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "10307": {
      "op": "DUP8"
    },
    "10308": {
      "op": "ADD"
    },
    "10309": {
      "op": "CALLDATALOAD"
    },
    "10310": {
      "op": "SWAP3"
    },
    "10311": {
      "op": "POP"
    },
    "10312": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "10314": {
      "op": "DUP8"
    },
    "10315": {
      "op": "ADD"
    },
    "10316": {
      "op": "CALLDATALOAD"
    },
    "10317": {
      "op": "SWAP2"
    },
    "10318": {
      "op": "POP"
    },
    "10319": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "10321": {
      "op": "DUP8"
    },
    "10322": {
      "op": "ADD"
    },
    "10323": {
      "op": "CALLDATALOAD"
    },
    "10324": {
      "op": "PUSH8",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "10333": {
      "op": "DUP2"
    },
    "10334": {
      "op": "GT"
    },
    "10335": {
      "op": "ISZERO"
    },
    "10336": {
      "op": "PUSH2",
      "value": "0x2868"
    },
    "10339": {
      "op": "JUMPI"
    },
    "10340": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "10342": {
      "op": "DUP1"
    },
    "10343": {
      "op": "REVERT"
    },
    "10344": {
      "op": "JUMPDEST"
    },
    "10345": {
      "op": "PUSH2",
      "value": "0x2874"
    },
    "10348": {
      "op": "DUP10"
    },
    "10349": {
      "op": "DUP3"
    },
    "10350": {
      "op": "DUP11"
    },
    "10351": {
      "op": "ADD"
    },
    "10352": {
      "op": "PUSH2",
      "value": "0x2675"
    },
    "10355": {
      "jump": "i",
      "op": "JUMP"
    },
    "10356": {
      "op": "JUMPDEST"
    },
    "10357": {
      "op": "SWAP2"
    },
    "10358": {
      "op": "POP"
    },
    "10359": {
      "op": "POP"
    },
    "10360": {
      "op": "SWAP3"
    },
    "10361": {
      "op": "SWAP6"
    },
    "10362": {
      "op": "POP"
    },
    "10363": {
      "op": "SWAP3"
    },
    "10364": {
      "op": "SWAP6"
    },
    "10365": {
      "op": "POP"
    },
    "10366": {
      "op": "SWAP3"
    },
    "10367": {
      "op": "SWAP6"
    },
    "10368": {
      "jump": "o",
      "op": "JUMP"
    },
    "10369": {
      "op": "JUMPDEST"
    },
    "10370": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "10372": {
      "op": "DUP1"
    },
    "10373": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "10375": {
      "op": "DUP1"
    },
    "10376": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "10378": {
      "op": "DUP6"
    },
    "10379": {
      "op": "DUP8"
    },
    "10380": {
      "op": "SUB"
    },
    "10381": {
      "op": "SLT"
    },
    "10382": {
      "op": "ISZERO"
    },
    "10383": {
      "op": "PUSH2",
      "value": "0x2897"
    },
    "10386": {
      "op": "JUMPI"
    },
    "10387": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "10389": {
      "op": "DUP1"
    },
    "10390": {
      "op": "REVERT"
    },
    "10391": {
      "op": "JUMPDEST"
    },
    "10392": {
      "op": "PUSH2",
      "value": "0x28A0"
    },
    "10395": {
      "op": "DUP6"
    },
    "10396": {
      "op": "PUSH2",
      "value": "0x2591"
    },
    "10399": {
      "jump": "i",
      "op": "JUMP"
    },
    "10400": {
      "op": "JUMPDEST"
    },
    "10401": {
      "op": "SWAP4"
    },
    "10402": {
      "op": "POP"
    },
    "10403": {
      "op": "PUSH2",
      "value": "0x28AE"
    },
    "10406": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "10408": {
      "op": "DUP7"
    },
    "10409": {
      "op": "ADD"
    },
    "10410": {
      "op": "PUSH2",
      "value": "0x2591"
    },
    "10413": {
      "jump": "i",
      "op": "JUMP"
    },
    "10414": {
      "op": "JUMPDEST"
    },
    "10415": {
      "op": "SWAP4"
    },
    "10416": {
      "op": "SWAP7"
    },
    "10417": {
      "op": "SWAP4"
    },
    "10418": {
      "op": "SWAP6"
    },
    "10419": {
      "op": "POP"
    },
    "10420": {
      "op": "POP"
    },
    "10421": {
      "op": "POP"
    },
    "10422": {
      "op": "POP"
    },
    "10423": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "10425": {
      "op": "DUP3"
    },
    "10426": {
      "op": "ADD"
    },
    "10427": {
      "op": "CALLDATALOAD"
    },
    "10428": {
      "op": "SWAP2"
    },
    "10429": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "10431": {
      "op": "ADD"
    },
    "10432": {
      "op": "CALLDATALOAD"
    },
    "10433": {
      "op": "SWAP1"
    },
    "10434": {
      "jump": "o",
      "op": "JUMP"
    },
    "10435": {
      "op": "JUMPDEST"
    },
    "10436": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "10438": {
      "op": "DUP1"
    },
    "10439": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "10441": {
      "op": "DUP4"
    },
    "10442": {
      "op": "DUP6"
    },
    "10443": {
      "op": "SUB"
    },
    "10444": {
      "op": "SLT"
    },
    "10445": {
      "op": "ISZERO"
    },
    "10446": {
      "op": "PUSH2",
      "value": "0x28D6"
    },
    "10449": {
      "op": "JUMPI"
    },
    "10450": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "10452": {
      "op": "DUP1"
    },
    "10453": {
      "op": "REVERT"
    },
    "10454": {
      "op": "JUMPDEST"
    },
    "10455": {
      "op": "POP"
    },
    "10456": {
      "op": "POP"
    },
    "10457": {
      "op": "DUP1"
    },
    "10458": {
      "op": "CALLDATALOAD"
    },
    "10459": {
      "op": "SWAP3"
    },
    "10460": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "10462": {
      "op": "SWAP1"
    },
    "10463": {
      "op": "SWAP2"
    },
    "10464": {
      "op": "ADD"
    },
    "10465": {
      "op": "CALLDATALOAD"
    },
    "10466": {
      "op": "SWAP2"
    },
    "10467": {
      "op": "POP"
    },
    "10468": {
      "jump": "o",
      "op": "JUMP"
    },
    "10469": {
      "op": "JUMPDEST"
    },
    "10470": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "10472": {
      "op": "DUP1"
    },
    "10473": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "10475": {
      "op": "DUP1"
    },
    "10476": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "10478": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "10480": {
      "op": "DUP7"
    },
    "10481": {
      "op": "DUP9"
    },
    "10482": {
      "op": "SUB"
    },
    "10483": {
      "op": "SLT"
    },
    "10484": {
      "op": "ISZERO"
    },
    "10485": {
      "op": "PUSH2",
      "value": "0x28FD"
    },
    "10488": {
      "op": "JUMPI"
    },
    "10489": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "10491": {
      "op": "DUP1"
    },
    "10492": {
      "op": "REVERT"
    },
    "10493": {
      "op": "JUMPDEST"
    },
    "10494": {
      "op": "PUSH2",
      "value": "0x2906"
    },
    "10497": {
      "op": "DUP7"
    },
    "10498": {
      "op": "PUSH2",
      "value": "0x2591"
    },
    "10501": {
      "jump": "i",
      "op": "JUMP"
    },
    "10502": {
      "op": "JUMPDEST"
    },
    "10503": {
      "op": "SWAP5"
    },
    "10504": {
      "op": "POP"
    },
    "10505": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "10507": {
      "op": "DUP7"
    },
    "10508": {
      "op": "ADD"
    },
    "10509": {
      "op": "CALLDATALOAD"
    },
    "10510": {
      "op": "SWAP4"
    },
    "10511": {
      "op": "POP"
    },
    "10512": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "10514": {
      "op": "DUP7"
    },
    "10515": {
      "op": "ADD"
    },
    "10516": {
      "op": "CALLDATALOAD"
    },
    "10517": {
      "op": "PUSH8",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "10526": {
      "op": "DUP1"
    },
    "10527": {
      "op": "DUP3"
    },
    "10528": {
      "op": "GT"
    },
    "10529": {
      "op": "ISZERO"
    },
    "10530": {
      "op": "PUSH2",
      "value": "0x292A"
    },
    "10533": {
      "op": "JUMPI"
    },
    "10534": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "10536": {
      "op": "DUP1"
    },
    "10537": {
      "op": "REVERT"
    },
    "10538": {
      "op": "JUMPDEST"
    },
    "10539": {
      "op": "PUSH2",
      "value": "0x2936"
    },
    "10542": {
      "op": "DUP10"
    },
    "10543": {
      "op": "DUP4"
    },
    "10544": {
      "op": "DUP11"
    },
    "10545": {
      "op": "ADD"
    },
    "10546": {
      "op": "PUSH2",
      "value": "0x2675"
    },
    "10549": {
      "jump": "i",
      "op": "JUMP"
    },
    "10550": {
      "op": "JUMPDEST"
    },
    "10551": {
      "op": "SWAP5"
    },
    "10552": {
      "op": "POP"
    },
    "10553": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "10555": {
      "op": "DUP9"
    },
    "10556": {
      "op": "ADD"
    },
    "10557": {
      "op": "CALLDATALOAD"
    },
    "10558": {
      "op": "SWAP4"
    },
    "10559": {
      "op": "POP"
    },
    "10560": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "10562": {
      "op": "DUP9"
    },
    "10563": {
      "op": "ADD"
    },
    "10564": {
      "op": "CALLDATALOAD"
    },
    "10565": {
      "op": "SWAP2"
    },
    "10566": {
      "op": "POP"
    },
    "10567": {
      "op": "DUP1"
    },
    "10568": {
      "op": "DUP3"
    },
    "10569": {
      "op": "GT"
    },
    "10570": {
      "op": "ISZERO"
    },
    "10571": {
      "op": "PUSH2",
      "value": "0x2953"
    },
    "10574": {
      "op": "JUMPI"
    },
    "10575": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "10577": {
      "op": "DUP1"
    },
    "10578": {
      "op": "REVERT"
    },
    "10579": {
      "op": "JUMPDEST"
    },
    "10580": {
      "op": "POP"
    },
    "10581": {
      "op": "PUSH2",
      "value": "0x2960"
    },
    "10584": {
      "op": "DUP9"
    },
    "10585": {
      "op": "DUP3"
    },
    "10586": {
      "op": "DUP10"
    },
    "10587": {
      "op": "ADD"
    },
    "10588": {
      "op": "PUSH2",
      "value": "0x2675"
    },
    "10591": {
      "jump": "i",
      "op": "JUMP"
    },
    "10592": {
      "op": "JUMPDEST"
    },
    "10593": {
      "op": "SWAP2"
    },
    "10594": {
      "op": "POP"
    },
    "10595": {
      "op": "POP"
    },
    "10596": {
      "op": "SWAP3"
    },
    "10597": {
      "op": "SWAP6"
    },
    "10598": {
      "op": "POP"
    },
    "10599": {
      "op": "SWAP3"
    },
    "10600": {
      "op": "SWAP6"
    },
    "10601": {
      "op": "SWAP1"
    },
    "10602": {
      "op": "SWAP4"
    },
    "10603": {
      "op": "POP"
    },
    "10604": {
      "jump": "o",
      "op": "JUMP"
    },
    "10605": {
      "op": "JUMPDEST"
    },
    "10606": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "10608": {
      "op": "DUP1"
    },
    "10609": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "10611": {
      "op": "DUP4"
    },
    "10612": {
      "op": "DUP6"
    },
    "10613": {
      "op": "SUB"
    },
    "10614": {
      "op": "SLT"
    },
    "10615": {
      "op": "ISZERO"
    },
    "10616": {
      "op": "PUSH2",
      "value": "0x2980"
    },
    "10619": {
      "op": "JUMPI"
    },
    "10620": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "10622": {
      "op": "DUP1"
    },
    "10623": {
      "op": "REVERT"
    },
    "10624": {
      "op": "JUMPDEST"
    },
    "10625": {
      "op": "DUP3"
    },
    "10626": {
      "op": "CALLDATALOAD"
    },
    "10627": {
      "op": "SWAP2"
    },
    "10628": {
      "op": "POP"
    },
    "10629": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "10631": {
      "op": "DUP4"
    },
    "10632": {
      "op": "ADD"
    },
    "10633": {
      "op": "CALLDATALOAD"
    },
    "10634": {
      "op": "PUSH8",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "10643": {
      "op": "DUP2"
    },
    "10644": {
      "op": "GT"
    },
    "10645": {
      "op": "ISZERO"
    },
    "10646": {
      "op": "PUSH2",
      "value": "0x27F1"
    },
    "10649": {
      "op": "JUMPI"
    },
    "10650": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "10652": {
      "op": "DUP1"
    },
    "10653": {
      "op": "REVERT"
    },
    "10654": {
      "op": "JUMPDEST"
    },
    "10655": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "10657": {
      "op": "DUP1"
    },
    "10658": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "10660": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "10662": {
      "op": "DUP5"
    },
    "10663": {
      "op": "DUP7"
    },
    "10664": {
      "op": "SUB"
    },
    "10665": {
      "op": "SLT"
    },
    "10666": {
      "op": "ISZERO"
    },
    "10667": {
      "op": "PUSH2",
      "value": "0x29B3"
    },
    "10670": {
      "op": "JUMPI"
    },
    "10671": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "10673": {
      "op": "DUP1"
    },
    "10674": {
      "op": "REVERT"
    },
    "10675": {
      "op": "JUMPDEST"
    },
    "10676": {
      "op": "PUSH2",
      "value": "0x29BC"
    },
    "10679": {
      "op": "DUP5"
    },
    "10680": {
      "op": "PUSH2",
      "value": "0x2591"
    },
    "10683": {
      "jump": "i",
      "op": "JUMP"
    },
    "10684": {
      "op": "JUMPDEST"
    },
    "10685": {
      "op": "SWAP3"
    },
    "10686": {
      "op": "POP"
    },
    "10687": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "10689": {
      "op": "DUP5"
    },
    "10690": {
      "op": "ADD"
    },
    "10691": {
      "op": "CALLDATALOAD"
    },
    "10692": {
      "op": "SWAP2"
    },
    "10693": {
      "op": "POP"
    },
    "10694": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "10696": {
      "op": "DUP5"
    },
    "10697": {
      "op": "ADD"
    },
    "10698": {
      "op": "CALLDATALOAD"
    },
    "10699": {
      "op": "PUSH8",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "10708": {
      "op": "DUP2"
    },
    "10709": {
      "op": "GT"
    },
    "10710": {
      "op": "ISZERO"
    },
    "10711": {
      "op": "PUSH2",
      "value": "0x29DF"
    },
    "10714": {
      "op": "JUMPI"
    },
    "10715": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "10717": {
      "op": "DUP1"
    },
    "10718": {
      "op": "REVERT"
    },
    "10719": {
      "op": "JUMPDEST"
    },
    "10720": {
      "op": "PUSH2",
      "value": "0x29EB"
    },
    "10723": {
      "op": "DUP7"
    },
    "10724": {
      "op": "DUP3"
    },
    "10725": {
      "op": "DUP8"
    },
    "10726": {
      "op": "ADD"
    },
    "10727": {
      "op": "PUSH2",
      "value": "0x2675"
    },
    "10730": {
      "jump": "i",
      "op": "JUMP"
    },
    "10731": {
      "op": "JUMPDEST"
    },
    "10732": {
      "op": "SWAP2"
    },
    "10733": {
      "op": "POP"
    },
    "10734": {
      "op": "POP"
    },
    "10735": {
      "op": "SWAP3"
    },
    "10736": {
      "op": "POP"
    },
    "10737": {
      "op": "SWAP3"
    },
    "10738": {
      "op": "POP"
    },
    "10739": {
      "op": "SWAP3"
    },
    "10740": {
      "jump": "o",
      "op": "JUMP"
    },
    "10741": {
      "op": "JUMPDEST"
    },
    "10742": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "10744": {
      "op": "DUP1"
    },
    "10745": {
      "op": "DUP3"
    },
    "10746": {
      "op": "MSTORE"
    },
    "10747": {
      "op": "PUSH1",
      "value": "0x14"
    },
    "10749": {
      "op": "SWAP1"
    },
    "10750": {
      "op": "DUP3"
    },
    "10751": {
      "op": "ADD"
    },
    "10752": {
      "op": "MSTORE"
    },
    "10753": {
      "op": "PUSH20",
      "value": "0x4E6F7420416C6C6F776C697374204F776E657221"
    },
    "10774": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "10776": {
      "op": "SHL"
    },
    "10777": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "10779": {
      "op": "DUP3"
    },
    "10780": {
      "op": "ADD"
    },
    "10781": {
      "op": "MSTORE"
    },
    "10782": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "10784": {
      "op": "ADD"
    },
    "10785": {
      "op": "SWAP1"
    },
    "10786": {
      "jump": "o",
      "op": "JUMP"
    },
    "10787": {
      "op": "JUMPDEST"
    },
    "10788": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10790": {
      "op": "DUP2"
    },
    "10791": {
      "op": "DUP2"
    },
    "10792": {
      "op": "SHR"
    },
    "10793": {
      "op": "SWAP1"
    },
    "10794": {
      "op": "DUP3"
    },
    "10795": {
      "op": "AND"
    },
    "10796": {
      "op": "DUP1"
    },
    "10797": {
      "op": "PUSH2",
      "value": "0x2A37"
    },
    "10800": {
      "op": "JUMPI"
    },
    "10801": {
      "op": "PUSH1",
      "value": "0x7F"
    },
    "10803": {
      "op": "DUP3"
    },
    "10804": {
      "op": "AND"
    },
    "10805": {
      "op": "SWAP2"
    },
    "10806": {
      "op": "POP"
    },
    "10807": {
      "op": "JUMPDEST"
    },
    "10808": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "10810": {
      "op": "DUP3"
    },
    "10811": {
      "op": "LT"
    },
    "10812": {
      "op": "DUP2"
    },
    "10813": {
      "op": "SUB"
    },
    "10814": {
      "op": "PUSH2",
      "value": "0x2A57"
    },
    "10817": {
      "op": "JUMPI"
    },
    "10818": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "10823": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "10825": {
      "op": "SHL"
    },
    "10826": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "10828": {
      "op": "MSTORE"
    },
    "10829": {
      "op": "PUSH1",
      "value": "0x22"
    },
    "10831": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "10833": {
      "op": "MSTORE"
    },
    "10834": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "10836": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "10838": {
      "op": "REVERT"
    },
    "10839": {
      "op": "JUMPDEST"
    },
    "10840": {
      "op": "POP"
    },
    "10841": {
      "op": "SWAP2"
    },
    "10842": {
      "op": "SWAP1"
    },
    "10843": {
      "op": "POP"
    },
    "10844": {
      "jump": "o",
      "op": "JUMP"
    },
    "10845": {
      "op": "JUMPDEST"
    },
    "10846": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "10851": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "10853": {
      "op": "SHL"
    },
    "10854": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "10856": {
      "op": "MSTORE"
    },
    "10857": {
      "op": "PUSH1",
      "value": "0x11"
    },
    "10859": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "10861": {
      "op": "MSTORE"
    },
    "10862": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "10864": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "10866": {
      "op": "REVERT"
    },
    "10867": {
      "op": "JUMPDEST"
    },
    "10868": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "10870": {
      "op": "DUP2"
    },
    "10871": {
      "op": "PUSH2",
      "value": "0x2A82"
    },
    "10874": {
      "op": "JUMPI"
    },
    "10875": {
      "op": "PUSH2",
      "value": "0x2A82"
    },
    "10878": {
      "op": "PUSH2",
      "value": "0x2A5D"
    },
    "10881": {
      "jump": "i",
      "op": "JUMP"
    },
    "10882": {
      "op": "JUMPDEST"
    },
    "10883": {
      "op": "POP"
    },
    "10884": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "10886": {
      "op": "NOT"
    },
    "10887": {
      "op": "ADD"
    },
    "10888": {
      "op": "SWAP1"
    },
    "10889": {
      "jump": "o",
      "op": "JUMP"
    },
    "10890": {
      "op": "JUMPDEST"
    },
    "10891": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "10893": {
      "op": "DUP4"
    },
    "10894": {
      "op": "MLOAD"
    },
    "10895": {
      "op": "PUSH2",
      "value": "0x2A9C"
    },
    "10898": {
      "op": "DUP2"
    },
    "10899": {
      "op": "DUP5"
    },
    "10900": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "10902": {
      "op": "DUP9"
    },
    "10903": {
      "op": "ADD"
    },
    "10904": {
      "op": "PUSH2",
      "value": "0x25FC"
    },
    "10907": {
      "jump": "i",
      "op": "JUMP"
    },
    "10908": {
      "op": "JUMPDEST"
    },
    "10909": {
      "op": "DUP4"
    },
    "10910": {
      "op": "MLOAD"
    },
    "10911": {
      "op": "SWAP1"
    },
    "10912": {
      "op": "DUP4"
    },
    "10913": {
      "op": "ADD"
    },
    "10914": {
      "op": "SWAP1"
    },
    "10915": {
      "op": "PUSH2",
      "value": "0x2AB0"
    },
    "10918": {
      "op": "DUP2"
    },
    "10919": {
      "op": "DUP4"
    },
    "10920": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "10922": {
      "op": "DUP9"
    },
    "10923": {
      "op": "ADD"
    },
    "10924": {
      "op": "PUSH2",
      "value": "0x25FC"
    },
    "10927": {
      "jump": "i",
      "op": "JUMP"
    },
    "10928": {
      "op": "JUMPDEST"
    },
    "10929": {
      "op": "ADD"
    },
    "10930": {
      "op": "SWAP5"
    },
    "10931": {
      "op": "SWAP4"
    },
    "10932": {
      "op": "POP"
    },
    "10933": {
      "op": "POP"
    },
    "10934": {
      "op": "POP"
    },
    "10935": {
      "op": "POP"
    },
    "10936": {
      "jump": "o",
      "op": "JUMP"
    },
    "10937": {
      "op": "JUMPDEST"
    },
    "10938": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "10940": {
      "op": "DUP1"
    },
    "10941": {
      "op": "DUP3"
    },
    "10942": {
      "op": "MSTORE"
    },
    "10943": {
      "op": "PUSH1",
      "value": "0x15"
    },
    "10945": {
      "op": "SWAP1"
    },
    "10946": {
      "op": "DUP3"
    },
    "10947": {
      "op": "ADD"
    },
    "10948": {
      "op": "MSTORE"
    },
    "10949": {
      "op": "PUSH21",
      "value": "0x26B4B73A103A37903D32B9379030B2323932B9B997"
    },
    "10971": {
      "op": "PUSH1",
      "value": "0x59"
    },
    "10973": {
      "op": "SHL"
    },
    "10974": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "10976": {
      "op": "DUP3"
    },
    "10977": {
      "op": "ADD"
    },
    "10978": {
      "op": "MSTORE"
    },
    "10979": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "10981": {
      "op": "ADD"
    },
    "10982": {
      "op": "SWAP1"
    },
    "10983": {
      "jump": "o",
      "op": "JUMP"
    },
    "10984": {
      "op": "JUMPDEST"
    },
    "10985": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "10987": {
      "op": "DUP3"
    },
    "10988": {
      "op": "DUP3"
    },
    "10989": {
      "op": "LT"
    },
    "10990": {
      "op": "ISZERO"
    },
    "10991": {
      "op": "PUSH2",
      "value": "0x2AFA"
    },
    "10994": {
      "op": "JUMPI"
    },
    "10995": {
      "op": "PUSH2",
      "value": "0x2AFA"
    },
    "10998": {
      "op": "PUSH2",
      "value": "0x2A5D"
    },
    "11001": {
      "jump": "i",
      "op": "JUMP"
    },
    "11002": {
      "op": "JUMPDEST"
    },
    "11003": {
      "op": "POP"
    },
    "11004": {
      "op": "SUB"
    },
    "11005": {
      "op": "SWAP1"
    },
    "11006": {
      "jump": "o",
      "op": "JUMP"
    },
    "11007": {
      "op": "JUMPDEST"
    },
    "11008": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "11010": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "11012": {
      "op": "DUP3"
    },
    "11013": {
      "op": "ADD"
    },
    "11014": {
      "op": "PUSH2",
      "value": "0x2B11"
    },
    "11017": {
      "op": "JUMPI"
    },
    "11018": {
      "op": "PUSH2",
      "value": "0x2B11"
    },
    "11021": {
      "op": "PUSH2",
      "value": "0x2A5D"
    },
    "11024": {
      "jump": "i",
      "op": "JUMP"
    },
    "11025": {
      "op": "JUMPDEST"
    },
    "11026": {
      "op": "POP"
    },
    "11027": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "11029": {
      "op": "ADD"
    },
    "11030": {
      "op": "SWAP1"
    },
    "11031": {
      "jump": "o",
      "op": "JUMP"
    },
    "11032": {
      "op": "JUMPDEST"
    },
    "11033": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "11035": {
      "op": "DUP3"
    },
    "11036": {
      "op": "NOT"
    },
    "11037": {
      "op": "DUP3"
    },
    "11038": {
      "op": "GT"
    },
    "11039": {
      "op": "ISZERO"
    },
    "11040": {
      "op": "PUSH2",
      "value": "0x2B2B"
    },
    "11043": {
      "op": "JUMPI"
    },
    "11044": {
      "op": "PUSH2",
      "value": "0x2B2B"
    },
    "11047": {
      "op": "PUSH2",
      "value": "0x2A5D"
    },
    "11050": {
      "jump": "i",
      "op": "JUMP"
    },
    "11051": {
      "op": "JUMPDEST"
    },
    "11052": {
      "op": "POP"
    },
    "11053": {
      "op": "ADD"
    },
    "11054": {
      "op": "SWAP1"
    },
    "11055": {
      "jump": "o",
      "op": "JUMP"
    },
    "11056": {
      "op": "JUMPDEST"
    },
    "11057": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "11062": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "11064": {
      "op": "SHL"
    },
    "11065": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "11067": {
      "op": "MSTORE"
    },
    "11068": {
      "op": "PUSH1",
      "value": "0x12"
    },
    "11070": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "11072": {
      "op": "MSTORE"
    },
    "11073": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "11075": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "11077": {
      "op": "REVERT"
    },
    "11078": {
      "op": "JUMPDEST"
    },
    "11079": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "11081": {
      "op": "DUP3"
    },
    "11082": {
      "op": "PUSH2",
      "value": "0x2B55"
    },
    "11085": {
      "op": "JUMPI"
    },
    "11086": {
      "op": "PUSH2",
      "value": "0x2B55"
    },
    "11089": {
      "op": "PUSH2",
      "value": "0x2B30"
    },
    "11092": {
      "jump": "i",
      "op": "JUMP"
    },
    "11093": {
      "op": "JUMPDEST"
    },
    "11094": {
      "op": "POP"
    },
    "11095": {
      "op": "DIV"
    },
    "11096": {
      "op": "SWAP1"
    },
    "11097": {
      "jump": "o",
      "op": "JUMP"
    },
    "11098": {
      "op": "JUMPDEST"
    },
    "11099": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "11101": {
      "op": "DUP3"
    },
    "11102": {
      "op": "PUSH2",
      "value": "0x2B69"
    },
    "11105": {
      "op": "JUMPI"
    },
    "11106": {
      "op": "PUSH2",
      "value": "0x2B69"
    },
    "11109": {
      "op": "PUSH2",
      "value": "0x2B30"
    },
    "11112": {
      "jump": "i",
      "op": "JUMP"
    },
    "11113": {
      "op": "JUMPDEST"
    },
    "11114": {
      "op": "POP"
    },
    "11115": {
      "op": "MOD"
    },
    "11116": {
      "op": "SWAP1"
    },
    "11117": {
      "jump": "o",
      "op": "JUMP"
    },
    "11118": {
      "op": "JUMPDEST"
    },
    "11119": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "11124": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "11126": {
      "op": "SHL"
    },
    "11127": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "11129": {
      "op": "MSTORE"
    },
    "11130": {
      "op": "PUSH1",
      "value": "0x32"
    },
    "11132": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "11134": {
      "op": "MSTORE"
    },
    "11135": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "11137": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "11139": {
      "op": "REVERT"
    },
    "11140": {
      "op": "JUMPDEST"
    },
    "11141": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "11143": {
      "op": "DUP2"
    },
    "11144": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "11146": {
      "op": "NOT"
    },
    "11147": {
      "op": "DIV"
    },
    "11148": {
      "op": "DUP4"
    },
    "11149": {
      "op": "GT"
    },
    "11150": {
      "op": "DUP3"
    },
    "11151": {
      "op": "ISZERO"
    },
    "11152": {
      "op": "ISZERO"
    },
    "11153": {
      "op": "AND"
    },
    "11154": {
      "op": "ISZERO"
    },
    "11155": {
      "op": "PUSH2",
      "value": "0x2B9E"
    },
    "11158": {
      "op": "JUMPI"
    },
    "11159": {
      "op": "PUSH2",
      "value": "0x2B9E"
    },
    "11162": {
      "op": "PUSH2",
      "value": "0x2A5D"
    },
    "11165": {
      "jump": "i",
      "op": "JUMP"
    },
    "11166": {
      "op": "JUMPDEST"
    },
    "11167": {
      "op": "POP"
    },
    "11168": {
      "op": "MUL"
    },
    "11169": {
      "op": "SWAP1"
    },
    "11170": {
      "jump": "o",
      "op": "JUMP"
    },
    "11171": {
      "op": "JUMPDEST"
    },
    "11172": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "11174": {
      "op": "DUP3"
    },
    "11175": {
      "op": "GT"
    },
    "11176": {
      "op": "ISZERO"
    },
    "11177": {
      "op": "PUSH2",
      "value": "0x9D5"
    },
    "11180": {
      "op": "JUMPI"
    },
    "11181": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "11183": {
      "op": "DUP2"
    },
    "11184": {
      "op": "DUP2"
    },
    "11185": {
      "op": "MSTORE"
    },
    "11186": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "11188": {
      "op": "DUP2"
    },
    "11189": {
      "op": "KECCAK256"
    },
    "11190": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "11192": {
      "op": "DUP6"
    },
    "11193": {
      "op": "ADD"
    },
    "11194": {
      "op": "PUSH1",
      "value": "0x5"
    },
    "11196": {
      "op": "SHR"
    },
    "11197": {
      "op": "DUP2"
    },
    "11198": {
      "op": "ADD"
    },
    "11199": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "11201": {
      "op": "DUP7"
    },
    "11202": {
      "op": "LT"
    },
    "11203": {
      "op": "ISZERO"
    },
    "11204": {
      "op": "PUSH2",
      "value": "0x2BCA"
    },
    "11207": {
      "op": "JUMPI"
    },
    "11208": {
      "op": "POP"
    },
    "11209": {
      "op": "DUP1"
    },
    "11210": {
      "op": "JUMPDEST"
    },
    "11211": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "11213": {
      "op": "DUP6"
    },
    "11214": {
      "op": "ADD"
    },
    "11215": {
      "op": "PUSH1",
      "value": "0x5"
    },
    "11217": {
      "op": "SHR"
    },
    "11218": {
      "op": "DUP3"
    },
    "11219": {
      "op": "ADD"
    },
    "11220": {
      "op": "SWAP2"
    },
    "11221": {
      "op": "POP"
    },
    "11222": {
      "op": "JUMPDEST"
    },
    "11223": {
      "op": "DUP2"
    },
    "11224": {
      "op": "DUP2"
    },
    "11225": {
      "op": "LT"
    },
    "11226": {
      "op": "ISZERO"
    },
    "11227": {
      "op": "PUSH2",
      "value": "0x2BE9"
    },
    "11230": {
      "op": "JUMPI"
    },
    "11231": {
      "op": "DUP3"
    },
    "11232": {
      "op": "DUP2"
    },
    "11233": {
      "op": "SSTORE"
    },
    "11234": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "11236": {
      "op": "ADD"
    },
    "11237": {
      "op": "PUSH2",
      "value": "0x2BD6"
    },
    "11240": {
      "op": "JUMP"
    },
    "11241": {
      "op": "JUMPDEST"
    },
    "11242": {
      "op": "POP"
    },
    "11243": {
      "op": "POP"
    },
    "11244": {
      "op": "POP"
    },
    "11245": {
      "op": "POP"
    },
    "11246": {
      "op": "POP"
    },
    "11247": {
      "op": "POP"
    },
    "11248": {
      "jump": "o",
      "op": "JUMP"
    },
    "11249": {
      "op": "JUMPDEST"
    },
    "11250": {
      "op": "DUP2"
    },
    "11251": {
      "op": "MLOAD"
    },
    "11252": {
      "op": "PUSH8",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "11261": {
      "op": "DUP2"
    },
    "11262": {
      "op": "GT"
    },
    "11263": {
      "op": "ISZERO"
    },
    "11264": {
      "op": "PUSH2",
      "value": "0x2C0B"
    },
    "11267": {
      "op": "JUMPI"
    },
    "11268": {
      "op": "PUSH2",
      "value": "0x2C0B"
    },
    "11271": {
      "op": "PUSH2",
      "value": "0x265F"
    },
    "11274": {
      "jump": "i",
      "op": "JUMP"
    },
    "11275": {
      "op": "JUMPDEST"
    },
    "11276": {
      "op": "PUSH2",
      "value": "0x2C1F"
    },
    "11279": {
      "op": "DUP2"
    },
    "11280": {
      "op": "PUSH2",
      "value": "0x2C19"
    },
    "11283": {
      "op": "DUP5"
    },
    "11284": {
      "op": "SLOAD"
    },
    "11285": {
      "op": "PUSH2",
      "value": "0x2A23"
    },
    "11288": {
      "jump": "i",
      "op": "JUMP"
    },
    "11289": {
      "op": "JUMPDEST"
    },
    "11290": {
      "op": "DUP5"
    },
    "11291": {
      "op": "PUSH2",
      "value": "0x2BA3"
    },
    "11294": {
      "jump": "i",
      "op": "JUMP"
    },
    "11295": {
      "op": "JUMPDEST"
    },
    "11296": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "11298": {
      "op": "DUP1"
    },
    "11299": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "11301": {
      "op": "DUP4"
    },
    "11302": {
      "op": "GT"
    },
    "11303": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "11305": {
      "op": "DUP2"
    },
    "11306": {
      "op": "EQ"
    },
    "11307": {
      "op": "PUSH2",
      "value": "0x2C54"
    },
    "11310": {
      "op": "JUMPI"
    },
    "11311": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "11313": {
      "op": "DUP5"
    },
    "11314": {
      "op": "ISZERO"
    },
    "11315": {
      "op": "PUSH2",
      "value": "0x2C3C"
    },
    "11318": {
      "op": "JUMPI"
    },
    "11319": {
      "op": "POP"
    },
    "11320": {
      "op": "DUP6"
    },
    "11321": {
      "op": "DUP4"
    },
    "11322": {
      "op": "ADD"
    },
    "11323": {
      "op": "MLOAD"
    },
    "11324": {
      "op": "JUMPDEST"
    },
    "11325": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "11327": {
      "op": "NOT"
    },
    "11328": {
      "op": "PUSH1",
      "value": "0x3"
    },
    "11330": {
      "op": "DUP7"
    },
    "11331": {
      "op": "SWAP1"
    },
    "11332": {
      "op": "SHL"
    },
    "11333": {
      "op": "SHR"
    },
    "11334": {
      "op": "NOT"
    },
    "11335": {
      "op": "AND"
    },
    "11336": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "11338": {
      "op": "DUP6"
    },
    "11339": {
      "op": "SWAP1"
    },
    "11340": {
      "op": "SHL"
    },
    "11341": {
      "op": "OR"
    },
    "11342": {
      "op": "DUP6"
    },
    "11343": {
      "op": "SSTORE"
    },
    "11344": {
      "op": "PUSH2",
      "value": "0x2BE9"
    },
    "11347": {
      "op": "JUMP"
    },
    "11348": {
      "op": "JUMPDEST"
    },
    "11349": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "11351": {
      "op": "DUP6"
    },
    "11352": {
      "op": "DUP2"
    },
    "11353": {
      "op": "MSTORE"
    },
    "11354": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "11356": {
      "op": "DUP2"
    },
    "11357": {
      "op": "KECCAK256"
    },
    "11358": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "11360": {
      "op": "NOT"
    },
    "11361": {
      "op": "DUP7"
    },
    "11362": {
      "op": "AND"
    },
    "11363": {
      "op": "SWAP2"
    },
    "11364": {
      "op": "JUMPDEST"
    },
    "11365": {
      "op": "DUP3"
    },
    "11366": {
      "op": "DUP2"
    },
    "11367": {
      "op": "LT"
    },
    "11368": {
      "op": "ISZERO"
    },
    "11369": {
      "op": "PUSH2",
      "value": "0x2C83"
    },
    "11372": {
      "op": "JUMPI"
    },
    "11373": {
      "op": "DUP9"
    },
    "11374": {
      "op": "DUP7"
    },
    "11375": {
      "op": "ADD"
    },
    "11376": {
      "op": "MLOAD"
    },
    "11377": {
      "op": "DUP3"
    },
    "11378": {
      "op": "SSTORE"
    },
    "11379": {
      "op": "SWAP5"
    },
    "11380": {
      "op": "DUP5"
    },
    "11381": {
      "op": "ADD"
    },
    "11382": {
      "op": "SWAP5"
    },
    "11383": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "11385": {
      "op": "SWAP1"
    },
    "11386": {
      "op": "SWAP2"
    },
    "11387": {
      "op": "ADD"
    },
    "11388": {
      "op": "SWAP1"
    },
    "11389": {
      "op": "DUP5"
    },
    "11390": {
      "op": "ADD"
    },
    "11391": {
      "op": "PUSH2",
      "value": "0x2C64"
    },
    "11394": {
      "op": "JUMP"
    },
    "11395": {
      "op": "JUMPDEST"
    },
    "11396": {
      "op": "POP"
    },
    "11397": {
      "op": "DUP6"
    },
    "11398": {
      "op": "DUP3"
    },
    "11399": {
      "op": "LT"
    },
    "11400": {
      "op": "ISZERO"
    },
    "11401": {
      "op": "PUSH2",
      "value": "0x2CA1"
    },
    "11404": {
      "op": "JUMPI"
    },
    "11405": {
      "op": "DUP8"
    },
    "11406": {
      "op": "DUP6"
    },
    "11407": {
      "op": "ADD"
    },
    "11408": {
      "op": "MLOAD"
    },
    "11409": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "11411": {
      "op": "NOT"
    },
    "11412": {
      "op": "PUSH1",
      "value": "0x3"
    },
    "11414": {
      "op": "DUP9"
    },
    "11415": {
      "op": "SWAP1"
    },
    "11416": {
      "op": "SHL"
    },
    "11417": {
      "op": "PUSH1",
      "value": "0xF8"
    },
    "11419": {
      "op": "AND"
    },
    "11420": {
      "op": "SHR"
    },
    "11421": {
      "op": "NOT"
    },
    "11422": {
      "op": "AND"
    },
    "11423": {
      "op": "DUP2"
    },
    "11424": {
      "op": "SSTORE"
    },
    "11425": {
      "op": "JUMPDEST"
    },
    "11426": {
      "op": "POP"
    },
    "11427": {
      "op": "POP"
    },
    "11428": {
      "op": "POP"
    },
    "11429": {
      "op": "POP"
    },
    "11430": {
      "op": "POP"
    },
    "11431": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "11433": {
      "op": "SWAP1"
    },
    "11434": {
      "op": "DUP2"
    },
    "11435": {
      "op": "SHL"
    },
    "11436": {
      "op": "ADD"
    },
    "11437": {
      "op": "SWAP1"
    },
    "11438": {
      "op": "SSTORE"
    },
    "11439": {
      "op": "POP"
    },
    "11440": {
      "jump": "o",
      "op": "JUMP"
    }
  },
  "sha1": "2293235835fa13e9e83bbb903725577d26069f43",
  "source": "// SPDX-License-Identifier: GPL-3.0\npragma solidity ^0.8.0;\n\nimport \"./SoulboundWithSignature.sol\";\nimport \"./IsValidWithDate.sol\";\n\n/**\n* @title Soulbound Redeemable.\n* @author Daccred.\n* @dev  An instance of the Soulbound token with capped supply\n*       and tokens having their own individual expiry date.\n*       Tokens are minted to and are pendng until receivers\n*       pay to receive their complete token.\n*/\ncontract SoulboundRedeemable is IsValidWithDate, SoulboundWithSignature {\n    /// @dev Total sales of tokens [Total tokens paid for].\n    uint256 private totalSales;\n    /// @dev Total revenue from sales.\n    uint256 private totalRevenue;\n    /// @dev Price Limit [in eth] set by deploying contract.\n    uint256 private priceLimit;\n    /// @dev Price of individual tokens, set by deployer.\n    uint256 private tokenPrice;\n    /// @dev Pending token receivals.\n    mapping(uint256 => bool) private pending;\n    /// @dev Pending address to receive tokens.\n    mapping(uint256 => address) private pendingReceivers;\n    /// @dev    Tax for token redemptions.\n    ///         15 represents 1.5% of total sales.\n    uint256 private tax = 15;\n    /// @dev ReEntrancy Lock.\n    bool private locked; \n\n    /// @dev Emitted when a token is redeemed.\n    event Redeemed(uint256 indexed tokenId, uint256 indexed extension);\n\n    /// @dev    Deploy the SoulboundWithSignature with set\n    ///         total supply, priceLimit and price of an individual token.\n    constructor(\n        string memory name, \n        string memory symbol,\n        address _allowlistOwner,\n        uint256 _totalSupply,\n        uint256 _priceLimit,\n        uint256 _tokenPrice\n    )\n    SoulboundWithSignature(\n        name, \n        symbol, \n        _allowlistOwner, \n        _totalSupply\n    )\n    {\n        /// @dev Ensure that limit is higher or equal to individual token price.\n        require(_tokenPrice <= _priceLimit, \"Price higher than limit.\");\n        /// @dev Set priceLimit.\n        priceLimit = _priceLimit;\n        /// @dev Set individual token price.\n        tokenPrice = _tokenPrice;\n    }\n\n    /**\n    * @dev Protect against Re-Entrancy.\n    */\n    modifier nonReentrant() {\n        require(!locked);\n        locked = true;\n        _;\n        locked = false;\n    }\n\n    /**\n    * @dev Return the price of one token, set by the deployer.\n    *\n    * @notice Callable by anyone.\n    *\n    * @return _tokenPrice Price of a single token.\n    */\n    function getIndividualTokenPrice() public view returns(uint256 _tokenPrice) {\n        _tokenPrice = tokenPrice;\n    }\n\n    /**\n    * @dev Return the highest possible price for a token.\n    *\n    * @notice Callable by anyone.\n    *\n    * @return _priceLimit Highest possible price.\n    */\n    function getPriceLimit() public view returns(uint256 _priceLimit) {\n        _priceLimit = priceLimit;\n    }\n\n    /**\n    * @dev Allows `caller` to set `_price` as price of one token.\n    *\n    * @notice   Callable by the deployer of this contract [DaccredDeployer]\n    *           and the allowlistOwner.\n    *\n    * @param caller AllowlistOwner.\n    * @param _price New price.\n    */\n    function setPrice(address caller, uint256 _price) \n    public \n    onlyOwner\n    onlyAllowlistOwner(caller)\n    {\n        /// @dev Ensure that the price passed isn't more than the price limit.\n        require(_price <= getPriceLimit(), \"Price higher than limit.\");\n        /// @dev Set price.\n        tokenPrice = _price;\n    }\n\n    /**\n    * @dev  Mints a pending soulbound token to `to`.\n    *       Pending tokens are minted and the receiver pays\n    *       to receive and completely mint them.\n    *\n    * @notice   Callable by the deployer of this contract [DaccredDeployer]\n    *           and the allowlistOwner.\n    *\n    * @param from               Allowlist owner.\n    * @param to                 Receiver.\n    * @param tokenId            Id of token to be minted.\n    * @param _tokenExpiryDate   Set expiry date from the deployer.\n    */\n    function mintPendingRedeemableToken(\n        address from,\n        address to,\n        uint256 tokenId,\n        uint256 _tokenExpiryDate\n    ) public onlyOwner onlyAllowlistOwner(from)\n    {\n        /// @dev Ensure that the supply is not crossed.\n        /// @dev    Should all soulbound tokens need to be limited,\n        ///         copy this code and paste in Soulboundcore.sol\n        ///         issueWithSignature function.\n        require(supply < totalSupply, \"Issue Cap Reached.\");\n        /// @dev Require `to` is not a zero address.\n        require(to != address(0), \"Mint to zero address.\");\n        /// @dev Require the token does not exist already.\n        require(!_exists(tokenId), \"Mint of already existing token.\");\n        /// @dev Require that the token is not on the pending list.\n        require(!pending[tokenId], \"Mint of already pending token.\");\n        /// @dev Set the token's pending state to true.\n        pending[tokenId] = true;\n        /// @dev Set the pending receiver of the token to `to`.\n        pendingReceivers[tokenId] = to;\n        /// @dev Set a new expiry date for the token.\n        extendExpiry(tokenId, _tokenExpiryDate);\n        /// @dev Increment supply.\n        supply++;\n    }\n\n    /**\n    * @dev  Allows the `_receiver` to pay the price of one token to \n    *       fully mint the pending token.\n    *\n    * @notice   Callable by the deployer of this contract [DaccredDeployer].\n    *\n    * @param _receiver  Receiver of the token.\n    * @param tokenId    Pending tokenId for the receiver.\n    */\n    function payToReceiveToken(address _receiver, uint256 tokenId)\n    public\n    payable\n    onlyOwner\n    nonReentrant\n    {\n        /// @dev Require that the receiver is not a zero address.\n        require(_receiver != address(0), \"Mint to zero address.\");\n        /// @dev Require that the token does not exist yet.\n        require(!_exists(tokenId), \"Mint of already existing token.\");\n        /// @dev Require that the token is indeed pending.\n        require(pending[tokenId], \"Already received token.\");\n        /// @dev    Require that the expected receiver of pending \n        ///         token is the `_receiver`.\n        require(pendingReceivers[tokenId] == _receiver, \"Not pending receiver.\");\n        /// @dev Require that the token has not expired already.\n        require(isValid(tokenId), \"Receival of expired token, redeem token.\");\n        /// @dev Require that the amount sent is GTE the price of one token.\n        require(msg.value >= tokenPrice, \"Price lower than token cost.\");\n        /// @dev Initialize balance.\n        uint256 balance;\n        \n        /// @dev If the amount sent is bigger than the price of one token.\n        if (msg.value > tokenPrice) {\n            /// @dev Calculate the balance of the `_receiver`.\n            balance = msg.value - tokenPrice;\n            /// @dev Pay the `_receiver` his balance.\n            payable(_receiver).transfer(balance);\n        }\n\n        /// @dev Generate tokenURI.\n        string memory _tokenURI = generateTokenURI(tokenId);\n        /// @dev Finally issue the token to the `_receiver`.\n        issue(\n            _receiver,\n            tokenId,\n            _tokenURI\n        );\n        /// @dev Increment totalSales.\n        totalSales++;\n        /// @dev Add to the total Revenue.\n        totalRevenue += tokenPrice;\n        /// @dev Set the pending token to false.\n        pending[tokenId] = false;\n        /// @dev Delete the pending receiver.\n        delete pendingReceivers[tokenId];\n    }\n\n    /**\n    * @dev  For expired pending tokens, this function redeems them and makes\n    *       valid for another period of time.\n    *       Tokens must be expired for it to be redeemed.\n    *       Emits the {Redeemed} event.\n    *\n    * @notice   Callable by the deployer of this contract [DaccredDeployer].\n    *\n    * @param _receiver          Receiver of the token.\n    * @param tokenId            Pending tokenId for the receiver.\n    * @param _tokenExpiryDate   New expiry date for tokens.\n    */\n    function redeemPendingToken(\n        address _receiver, \n        uint256 tokenId,\n        uint256 _tokenExpiryDate\n    ) \n    public\n    payable\n    onlyOwner\n    nonReentrant\n    {\n        /// @dev Require _receiver is not a zero address.\n        require(_receiver != address(0), \"Redemption to zero address.\");\n        /// @dev Require tokenId is existent.\n        require(!_exists(tokenId), \"Redemption of existing token.\");\n        /// @dev Require that the token is still pending.\n        require(pending[tokenId], \"Already received token.\");\n        /// @dev Require that the pending receiver is the `_receiver`.\n        require(pendingReceivers[tokenId] == _receiver, \"Not pending receiver.\");\n        /// @dev Require the token has expired.\n        require(!isValid(tokenId), \"Token unexpired.\");\n        /// @dev Calculate tax.\n        uint256 _tax = calculateTax(tax);\n        /// @dev Require that the amount sent is GTE the tax.\n        require(msg.value >= _tax, \"Price lower than redemption tax.\");\n        /// @dev Initiate balance.\n        uint256 balance;\n\n        /// @dev If the tax is not 0.\n        if (_tax != 0) {\n            /// @dev Calculate receiver's balance.\n            balance = msg.value - _tax;\n            /// @dev Pay to receiver.\n            payable(_receiver).transfer(balance);\n        }\n\n        /// @dev Extend expiry of tokenId.\n        extendExpiry(tokenId, _tokenExpiryDate);\n        /// @dev Emit the Redeemed event.\n        emit Redeemed(tokenId, _tokenExpiryDate);\n    }\n\n    /**\n    * @dev  For expired minted tokens, this function redeems them and makes\n    *       valid for another period of time.\n    *       Tokens must be expired for it to be redeemed.\n    *       Emits the {Redeemed} event.\n    *\n    * @notice   Callable by the deployer of this contract [DaccredDeployer].\n    *\n    * @param _receiver          Receiver of the token.\n    * @param tokenId            Pending tokenId for the receiver.\n    * @param _tokenExpiryDate   New expiry date for tokens.\n    */\n    function redeemMintedToken(\n        address _receiver, \n        uint256 tokenId,\n        uint256 _tokenExpiryDate\n    ) \n    public\n    payable\n    onlyOwner\n    nonReentrant\n    {\n        /// @dev Require _receiver is not a zero address.\n        require(_receiver != address(0), \"Redemption to zero address.\");\n        /// @dev Require tokenId is existent.\n        require(_exists(tokenId), \"Redemption of non-existing token.\");\n        /// @dev Require that the token is still pending.\n        require(!pending[tokenId], \"Token still pending.\");\n        /// @dev Require that the pending receiver is the `_receiver`.\n        require(ownerOf(tokenId) == _receiver, \"Not token owner.\");\n        /// @dev Require the token has expired.\n        require(!isValid(tokenId), \"Token unexpired.\");\n        /// @dev Calculate tax.\n        uint256 _tax = calculateTax(tax);\n        /// @dev Require that the amount sent is GTE the tax.\n        require(msg.value >= _tax, \"Price lower than redemption tax.\");\n        /// @dev Initiate balance.\n        uint256 balance;\n\n        /// @dev If the tax is not 0.\n        if (_tax != 0) {\n            /// @dev Calculate receiver's balance.\n            balance = msg.value - _tax;\n            /// @dev Pay to receiver.\n            payable(_receiver).transfer(balance);\n        }\n\n        /// @dev Extend expiry of tokenId.\n        extendExpiry(tokenId, _tokenExpiryDate);\n        /// @dev Emit the Redeemed event.\n        emit Redeemed(tokenId, _tokenExpiryDate);\n    }\n\n    /**\n    * @dev  Allows the allowlistOwner to redeem an expired pending \n    *       token on behalf of the tokenOwner.\n    *\n    * @notice   Callable by the deployer of this contract [DaccredDeployer]\n    *           and the allowlistOwner.\n    *\n    * @param _caller            Allowlist owner.\n    * @param _receiver          Address of receiver.\n    * @param tokenId            TokenId.\n    * @param _tokenExpiryDate   Days to extend the token.\n    * @param hash               Hash of message.\n    * @param sig                Signature.\n    */\n    function redeemPendingTokenWithSignature(\n        address _caller,\n        address _receiver, \n        uint256 tokenId,\n        uint256 _tokenExpiryDate,\n        bytes32 hash,\n        bytes memory sig\n    )\n    public\n    payable\n    onlyOwner\n    onlyAllowlistOwner(_caller)\n    nonReentrant\n    {\n        /// @dev Require that the signer is the allowlistowner.\n        require(verifySignature(hash, sig), \"Hash not signed by you.\");\n        /// @dev RedeemToken.\n        redeemPendingToken(\n            _receiver,\n            tokenId,\n            _tokenExpiryDate\n        );\n    }\n\n    /**\n    * @dev  Allows the allowlistOwner to redeem an expired minted \n    *       token on behalf of the tokenOwner.\n    *\n    * @notice   Callable by the deployer of this contract [DaccredDeployer]\n    *           and the allowlistOwner.\n    *\n    * @param _caller            Allowlist owner.\n    * @param _receiver          Address of receiver.\n    * @param tokenId            TokenId.\n    * @param _tokenExpiryDate   Days to extend the token.\n    * @param hash               Hash of message.\n    * @param sig                Signature.\n    */\n    function redeemMintedTokenWithSignature(\n        address _caller,\n        address _receiver, \n        uint256 tokenId,\n        uint256 _tokenExpiryDate,\n        bytes32 hash,\n        bytes memory sig\n    )\n    public\n    payable\n    onlyOwner\n    onlyAllowlistOwner(_caller)\n    nonReentrant\n    {\n        /// @dev Require that the signer is the allowlistowner.\n        require(verifySignature(hash, sig), \"Hash not signed by you.\");\n        /// @dev RedeemToken.\n        redeemMintedToken(\n            _receiver,\n            tokenId,\n            _tokenExpiryDate\n        );\n    }\n\n    /**\n    * @dev  Allows the allowlistowner to withdraw his funds to his wallet.\n    *\n    * @notice   Callable by the deployer of this contract [DaccredDeployer]\n    *           and the allowlistOwner.\n    *\n    * @param _caller Address of allowlistowner.\n    */\n    function withdraw(address _caller)\n    public\n    onlyOwner\n    onlyAllowlistOwner(_caller)\n    {\n        /// @dev Require that the allowlistowner is not a zero address.\n        require(_caller != address(0), \"Sending to zero address.\");\n        /// @dev Require that the balance of this contract is GTE the totalRevenue.\n        require(address(this).balance >= totalRevenue, \"Revenue != Contract balance.\");\n        /// @dev Pay the totalRevenue to the allowlistowner.\n        payable(_caller).transfer(totalRevenue);\n        /// @dev Set the totalRevenue to 0.\n        totalRevenue = 0;\n    }\n\n    /**\n    * @dev Calculates the tax off the totalSales.\n    *\n    * @param _tax Percentage tax.\n    *\n    * @return __tax Tax calculated.\n    */\n    function calculateTax(uint256 _tax) private view returns(uint256 __tax) {\n        /// Grant free tax if the total revenue of the contract is\n        /// in range of 0 - 500 gwei.\n        if (totalRevenue >= 0 && totalRevenue < 500 gwei) {\n            /// @dev Set tax to 0.\n            _tax = 0;\n        }\n\n        /// Else simply calculate tax on total revenue.\n        __tax = (_tax * totalRevenue * 10) / 1000;\n    }\n}\n",
  "sourceMap": "417:14846:5:-:0;;;1149:2;1127:24;;1468:622;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1702:4;1717:6;1734:15;1760:12;1702:4;1717:6;1734:15;1760:12;1734:15;1702:4;1717:6;1702:4;1717:6;4248:5:7;:13;1702:4:5;4248:5:7;:13;:::i;:::-;-1:-1:-1;4267:7:7;:17;4277:7;4267;:17;:::i;:::-;;4174:115;;1245:32:2;1264:12;:10;;;:12;;:::i;:::-;1245:18;:32::i;:::-;-1:-1:-1;;1663:14:0;:32;;-1:-1:-1;;;;;;1663:32:0;-1:-1:-1;;;;;1663:32:0;;;;;;;;;;-1:-1:-1;2019:17:4;;;2015:122:::2;;2066:3;2052:11;:17:::0;2015:122:::2;;;2100:11;:26:::0;;;2015:122:::2;1806:337:::0;;;;439:246:6;;;;1897:11:5::1;1882;:26;;1874:63;;;::::0;-1:-1:-1;;;1874:63:5;;4747:2:10;1874:63:5::1;::::0;::::1;4729:21:10::0;4786:2;4766:18;;;4759:30;4825:26;4805:18;;;4798:54;4869:18;;1874:63:5::1;;;;;;;;1980:10;:24:::0;;;;2059:10:::1;:24:::0;-1:-1:-1;417:14846:5;;-1:-1:-1;;;417:14846:5;2987:87:2;3057:10;;2987:87::o;2757:187::-;2849:6;;;-1:-1:-1;;;;;2865:17:2;;;-1:-1:-1;;;;;;2865:17:2;;;;;;;2897:40;;2849:6;;;2865:17;2849:6;;2897:40;;2830:16;;2897:40;2820:124;2757:187;:::o;14:127:10:-;75:10;70:3;66:20;63:1;56:31;106:4;103:1;96:15;130:4;127:1;120:15;146:885;200:5;253:3;246:4;238:6;234:17;230:27;220:55;;271:1;268;261:12;220:55;294:13;;-1:-1:-1;;;;;356:10:10;;;353:36;;;369:18;;:::i;:::-;444:2;438:9;412:2;498:13;;-1:-1:-1;;494:22:10;;;518:2;490:31;486:40;474:53;;;542:18;;;562:22;;;539:46;536:72;;;588:18;;:::i;:::-;628:10;624:2;617:22;663:2;655:6;648:18;685:4;675:14;;730:3;725:2;720;712:6;708:15;704:24;701:33;698:53;;;747:1;744;737:12;698:53;769:1;760:10;;779:133;793:2;790:1;787:9;779:133;;;881:14;;;877:23;;871:30;850:14;;;846:23;;839:63;804:10;;;;779:133;;;930:2;927:1;924:9;921:80;;;989:1;984:2;979;971:6;967:15;963:24;956:35;921:80;1019:6;146:885;-1:-1:-1;;;;;;146:885:10:o;1036:915::-;1171:6;1179;1187;1195;1203;1211;1264:3;1252:9;1243:7;1239:23;1235:33;1232:53;;;1281:1;1278;1271:12;1232:53;1308:16;;-1:-1:-1;;;;;1373:14:10;;;1370:34;;;1400:1;1397;1390:12;1370:34;1423:61;1476:7;1467:6;1456:9;1452:22;1423:61;:::i;:::-;1413:71;;1530:2;1519:9;1515:18;1509:25;1493:41;;1559:2;1549:8;1546:16;1543:36;;;1575:1;1572;1565:12;1543:36;;1598:63;1653:7;1642:8;1631:9;1627:24;1598:63;:::i;:::-;1704:2;1689:18;;1683:25;1588:73;;-1:-1:-1;1683:25:10;-1:-1:-1;;;;;;1737:31:10;;1727:42;;1717:70;;1783:1;1780;1773:12;1717:70;1806:5;1796:15;;;1851:2;1840:9;1836:18;1830:25;1820:35;;1895:3;1884:9;1880:19;1874:26;1864:36;;1940:3;1929:9;1925:19;1919:26;1909:36;;1036:915;;;;;;;;:::o;1956:380::-;2035:1;2031:12;;;;2078;;;2099:61;;2153:4;2145:6;2141:17;2131:27;;2099:61;2206:2;2198:6;2195:14;2175:18;2172:38;2169:161;;2252:10;2247:3;2243:20;2240:1;2233:31;2287:4;2284:1;2277:15;2315:4;2312:1;2305:15;2169:161;;1956:380;;;:::o;2467:545::-;2569:2;2564:3;2561:11;2558:448;;;2605:1;2630:5;2626:2;2619:17;2675:4;2671:2;2661:19;2745:2;2733:10;2729:19;2726:1;2722:27;2716:4;2712:38;2781:4;2769:10;2766:20;2763:47;;;-1:-1:-1;2804:4:10;2763:47;2859:2;2854:3;2850:12;2847:1;2843:20;2837:4;2833:31;2823:41;;2914:82;2932:2;2925:5;2922:13;2914:82;;;2977:17;;;2958:1;2947:13;2914:82;;;2918:3;;;2558:448;2467:545;;;:::o;3188:1352::-;3308:10;;-1:-1:-1;;;;;3330:30:10;;3327:56;;;3363:18;;:::i;:::-;3392:97;3482:6;3442:38;3474:4;3468:11;3442:38;:::i;:::-;3436:4;3392:97;:::i;:::-;3544:4;;3608:2;3597:14;;3625:1;3620:663;;;;4327:1;4344:6;4341:89;;;-1:-1:-1;4396:19:10;;;4390:26;4341:89;-1:-1:-1;;3145:1:10;3141:11;;;3137:24;3133:29;3123:40;3169:1;3165:11;;;3120:57;4443:81;;3590:944;;3620:663;2414:1;2407:14;;;2451:4;2438:18;;-1:-1:-1;;3656:20:10;;;3774:236;3788:7;3785:1;3782:14;3774:236;;;3877:19;;;3871:26;3856:42;;3969:27;;;;3937:1;3925:14;;;;3804:19;;3774:236;;;3778:3;4038:6;4029:7;4026:19;4023:201;;;4099:19;;;4093:26;-1:-1:-1;;4182:1:10;4178:14;;;4194:3;4174:24;4170:37;4166:42;4151:58;4136:74;;4023:201;-1:-1:-1;;;;;4270:1:10;4254:14;;;4250:22;4237:36;;-1:-1:-1;3188:1352:10:o;4545:348::-;417:14846:5;;;;;;",
  "sourcePath": "contracts/SoulboundRedeemable.sol",
  "type": "contract"
}