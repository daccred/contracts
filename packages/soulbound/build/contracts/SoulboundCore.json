{
  "abi": [
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "name",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "symbol",
          "type": "string"
        },
        {
          "internalType": "address",
          "name": "_allowlistOwner",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_totalSupply",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_address",
          "type": "address"
        }
      ],
      "name": "Unsigned",
      "type": "error"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "Attest",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "IssueWithSignature",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "Revoke",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "RevokeWithSignature",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "_address",
          "type": "address"
        }
      ],
      "name": "Signed",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "_address",
          "type": "address"
        }
      ],
      "name": "Verified",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "addressHash",
          "type": "bytes32"
        },
        {
          "indexed": true,
          "internalType": "bool",
          "name": "result",
          "type": "bool"
        }
      ],
      "name": "VerifySignature",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "_getBaseURI",
      "outputs": [
        {
          "internalType": "string",
          "name": "_baseURI",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        }
      ],
      "name": "balanceOf",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "burn",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "generateTokenURI",
      "outputs": [
        {
          "internalType": "string",
          "name": "_tokenURI",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getAllowlistOwner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_tokenId",
          "type": "uint256"
        }
      ],
      "name": "isMinted",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "addr",
          "type": "address"
        },
        {
          "internalType": "bytes32",
          "name": "hash",
          "type": "bytes32"
        },
        {
          "internalType": "bytes",
          "name": "sig",
          "type": "bytes"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        },
        {
          "internalType": "string",
          "name": "tokenURI",
          "type": "string"
        }
      ],
      "name": "issueWithSignature",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_tokenId",
          "type": "uint256"
        }
      ],
      "name": "issuerOf",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "name",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "ownerOf",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "hash",
          "type": "bytes32"
        },
        {
          "internalType": "bytes",
          "name": "sig",
          "type": "bytes"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "revokeWithSignature",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "caller",
          "type": "address"
        },
        {
          "internalType": "string",
          "name": "_baseURI",
          "type": "string"
        }
      ],
      "name": "setBaseURI",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes4",
          "name": "interfaceId",
          "type": "bytes4"
        }
      ],
      "name": "supportsInterface",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "symbol",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "tokenURI",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "hash",
          "type": "bytes32"
        },
        {
          "internalType": "bytes",
          "name": "sig",
          "type": "bytes"
        }
      ],
      "name": "verifySignature",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_signer",
          "type": "address"
        },
        {
          "internalType": "bytes32",
          "name": "_hash",
          "type": "bytes32"
        },
        {
          "internalType": "bytes",
          "name": "_signature",
          "type": "bytes"
        }
      ],
      "name": "verifySigner",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    }
  ],
  "allSourcePaths": {
    "0": "contracts/Allowlist.sol",
    "2": "contracts/Ownable.sol",
    "3": "contracts/Soulbound.sol",
    "4": "contracts/SoulboundCore.sol",
    "7": "contracts/eips/ERC-4973.sol",
    "8": "interfaces/IAllowlist.sol"
  },
  "ast": {
    "absolutePath": "contracts/SoulboundCore.sol",
    "exportedSymbols": {
      "Allowlist": [
        167
      ],
      "ERC165": [
        1805
      ],
      "ERC4973": [
        2132
      ],
      "IAllowlist": [
        2173
      ],
      "IERC165": [
        1784
      ],
      "IERC4973": [
        1861
      ],
      "IERC721Metadata": [
        1823
      ],
      "ISoulbond": [
        2267
      ],
      "Ownable": [
        382
      ],
      "Soulbound": [
        649
      ],
      "SoulboundCore": [
        974
      ]
    },
    "id": 975,
    "license": "GPL-3.0",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 651,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "438:23:4"
      },
      {
        "absolutePath": "contracts/Soulbound.sol",
        "file": "./Soulbound.sol",
        "id": 652,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 975,
        "sourceUnit": 650,
        "src": "463:25:4",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "contracts/Ownable.sol",
        "file": "./Ownable.sol",
        "id": 653,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 975,
        "sourceUnit": 383,
        "src": "489:23:4",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "contracts/Allowlist.sol",
        "file": "./Allowlist.sol",
        "id": 654,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 975,
        "sourceUnit": 168,
        "src": "513:25:4",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 656,
              "name": "Ownable",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 382,
              "src": "846:7:4"
            },
            "id": 657,
            "nodeType": "InheritanceSpecifier",
            "src": "846:7:4"
          },
          {
            "baseName": {
              "id": 658,
              "name": "Soulbound",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 649,
              "src": "855:9:4"
            },
            "id": 659,
            "nodeType": "InheritanceSpecifier",
            "src": "855:9:4"
          },
          {
            "baseName": {
              "id": 660,
              "name": "Allowlist",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 167,
              "src": "866:9:4"
            },
            "id": 661,
            "nodeType": "InheritanceSpecifier",
            "src": "866:9:4"
          }
        ],
        "canonicalName": "SoulboundCore",
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": {
          "id": 655,
          "nodeType": "StructuredDocumentation",
          "src": "540:279:4",
          "text": " @title Soulbound Core Contract.\n @author Daccred.\n @dev  Soulbound Core template. This contract aims at a soulbound token with\n       capped supply, set by the deployer or defaulted to 1000000.\n       Mints and burns affect the current supply of tokens respectively."
        },
        "fullyImplemented": true,
        "id": 974,
        "linearizedBaseContracts": [
          974,
          167,
          649,
          382,
          2173,
          2132,
          1861,
          1823,
          1805,
          1784
        ],
        "name": "SoulboundCore",
        "nameLocation": "829:13:4",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "documentation": {
              "id": 662,
              "nodeType": "StructuredDocumentation",
              "src": "882:68:4",
              "text": "@dev Total supply limit set by deployer or defaulted to 1000000."
            },
            "id": 664,
            "mutability": "mutable",
            "name": "totalSupply",
            "nameLocation": "972:11:4",
            "nodeType": "VariableDeclaration",
            "scope": 974,
            "src": "955:28:4",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 663,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "955:7:4",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "documentation": {
              "id": 665,
              "nodeType": "StructuredDocumentation",
              "src": "989:140:4",
              "text": "@dev    With every issue and revoke, this value\n         increases and reduces.\n         It cannot be GT the TOTAL_SUPPLY."
            },
            "id": 667,
            "mutability": "mutable",
            "name": "supply",
            "nameLocation": "1151:6:4",
            "nodeType": "VariableDeclaration",
            "scope": 974,
            "src": "1134:23:4",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 666,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "1134:7:4",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "internal"
          },
          {
            "anonymous": false,
            "documentation": {
              "id": 668,
              "nodeType": "StructuredDocumentation",
              "src": "1164:55:4",
              "text": "@dev Emitted when a token is minted from Signature."
            },
            "eventSelector": "79af0e59b31823dd289ceebabc4d63d25f35926b8548e3a084a500c9d4e18556",
            "id": 674,
            "name": "IssueWithSignature",
            "nameLocation": "1230:18:4",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 673,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 670,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "to",
                  "nameLocation": "1265:2:4",
                  "nodeType": "VariableDeclaration",
                  "scope": 674,
                  "src": "1249:18:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 669,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1249:7:4",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 672,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nameLocation": "1285:7:4",
                  "nodeType": "VariableDeclaration",
                  "scope": 674,
                  "src": "1269:23:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 671,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1269:7:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1248:45:4"
            },
            "src": "1224:70:4"
          },
          {
            "anonymous": false,
            "documentation": {
              "id": 675,
              "nodeType": "StructuredDocumentation",
              "src": "1299:56:4",
              "text": "@dev Emitted when a token is revoked with Signature."
            },
            "eventSelector": "f947bf2266afede98f27ad2312db8b2a17921852307f979b6f14a2b41fa774bc",
            "id": 679,
            "name": "RevokeWithSignature",
            "nameLocation": "1366:19:4",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 678,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 677,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nameLocation": "1402:7:4",
                  "nodeType": "VariableDeclaration",
                  "scope": 679,
                  "src": "1386:23:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 676,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1386:7:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1385:25:4"
            },
            "src": "1360:51:4"
          },
          {
            "body": {
              "id": 693,
              "nodeType": "Block",
              "src": "1640:91:4",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 688,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 685,
                          "name": "_caller",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 682,
                          "src": "1658:7:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 686,
                            "name": "getAllowlistOwner",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 38,
                            "src": "1669:17:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                              "typeString": "function () view returns (address)"
                            }
                          },
                          "id": 687,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1669:19:4",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "1658:30:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4e6f7420416c6c6f776c697374204f776e657221",
                        "id": 689,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1690:22:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_6141a88e89b79096d457df761d61ed151b2f288bac5b547a9b168f2a980ee39a",
                          "typeString": "literal_string \"Not Allowlist Owner!\""
                        },
                        "value": "Not Allowlist Owner!"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_6141a88e89b79096d457df761d61ed151b2f288bac5b547a9b168f2a980ee39a",
                          "typeString": "literal_string \"Not Allowlist Owner!\""
                        }
                      ],
                      "id": 684,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "1650:7:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 690,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1650:63:4",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 691,
                  "nodeType": "ExpressionStatement",
                  "src": "1650:63:4"
                },
                {
                  "id": 692,
                  "nodeType": "PlaceholderStatement",
                  "src": "1723:1:4"
                }
              ]
            },
            "documentation": {
              "id": 680,
              "nodeType": "StructuredDocumentation",
              "src": "1417:173:4",
              "text": " @dev  Security check to require that the address calling a particular\n       function is the allowlistOwner.\n       \n @param _caller Address."
            },
            "id": 694,
            "name": "onlyAllowlistOwner",
            "nameLocation": "1604:18:4",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 683,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 682,
                  "mutability": "mutable",
                  "name": "_caller",
                  "nameLocation": "1631:7:4",
                  "nodeType": "VariableDeclaration",
                  "scope": 694,
                  "src": "1623:15:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 681,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1623:7:4",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1622:17:4"
            },
            "src": "1595:136:4",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 727,
              "nodeType": "Block",
              "src": "2005:138:4",
              "statements": [
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 715,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 713,
                      "name": "_totalSupply",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 703,
                      "src": "2019:12:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "hexValue": "30",
                      "id": 714,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "2035:1:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "2019:17:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "id": 725,
                    "nodeType": "Block",
                    "src": "2086:51:4",
                    "statements": [
                      {
                        "expression": {
                          "id": 723,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 721,
                            "name": "totalSupply",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 664,
                            "src": "2100:11:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 722,
                            "name": "_totalSupply",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 703,
                            "src": "2114:12:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "2100:26:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 724,
                        "nodeType": "ExpressionStatement",
                        "src": "2100:26:4"
                      }
                    ]
                  },
                  "id": 726,
                  "nodeType": "IfStatement",
                  "src": "2015:122:4",
                  "trueBody": {
                    "id": 720,
                    "nodeType": "Block",
                    "src": "2038:42:4",
                    "statements": [
                      {
                        "expression": {
                          "id": 718,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 716,
                            "name": "totalSupply",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 664,
                            "src": "2052:11:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "hexValue": "316536",
                            "id": 717,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "2066:3:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_1000000_by_1",
                              "typeString": "int_const 1000000"
                            },
                            "value": "1e6"
                          },
                          "src": "2052:17:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 719,
                        "nodeType": "ExpressionStatement",
                        "src": "2052:17:4"
                      }
                    ]
                  }
                }
              ]
            },
            "documentation": {
              "id": 695,
              "nodeType": "StructuredDocumentation",
              "src": "1737:64:4",
              "text": "@dev Deploys the 3 contracts inherited by the SoulboundCore."
            },
            "id": 728,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [
              {
                "arguments": [
                  {
                    "id": 706,
                    "name": "name",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 697,
                    "src": "1960:4:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory_ptr",
                      "typeString": "string memory"
                    }
                  },
                  {
                    "id": 707,
                    "name": "symbol",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 699,
                    "src": "1966:6:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory_ptr",
                      "typeString": "string memory"
                    }
                  }
                ],
                "id": 708,
                "kind": "baseConstructorSpecifier",
                "modifierName": {
                  "id": 705,
                  "name": "Soulbound",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 649,
                  "src": "1950:9:4"
                },
                "nodeType": "ModifierInvocation",
                "src": "1950:23:4"
              },
              {
                "arguments": [
                  {
                    "id": 710,
                    "name": "_allowlistOwner",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 701,
                    "src": "1988:15:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  }
                ],
                "id": 711,
                "kind": "baseConstructorSpecifier",
                "modifierName": {
                  "id": 709,
                  "name": "Allowlist",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 167,
                  "src": "1978:9:4"
                },
                "nodeType": "ModifierInvocation",
                "src": "1978:26:4"
              }
            ],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 704,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 697,
                  "mutability": "mutable",
                  "name": "name",
                  "nameLocation": "1841:4:4",
                  "nodeType": "VariableDeclaration",
                  "scope": 728,
                  "src": "1827:18:4",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 696,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1827:6:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 699,
                  "mutability": "mutable",
                  "name": "symbol",
                  "nameLocation": "1870:6:4",
                  "nodeType": "VariableDeclaration",
                  "scope": 728,
                  "src": "1856:20:4",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 698,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1856:6:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 701,
                  "mutability": "mutable",
                  "name": "_allowlistOwner",
                  "nameLocation": "1894:15:4",
                  "nodeType": "VariableDeclaration",
                  "scope": 728,
                  "src": "1886:23:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 700,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1886:7:4",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 703,
                  "mutability": "mutable",
                  "name": "_totalSupply",
                  "nameLocation": "1927:12:4",
                  "nodeType": "VariableDeclaration",
                  "scope": 728,
                  "src": "1919:20:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 702,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1919:7:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1817:128:4"
            },
            "returnParameters": {
              "id": 712,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2005:0:4"
            },
            "scope": 974,
            "src": "1806:337:4",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 787,
              "nodeType": "Block",
              "src": "2941:826:4",
              "statements": [
                {
                  "documentation": "@dev Require that the address is not a zero address.",
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 748,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 743,
                          "name": "addr",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 731,
                          "src": "3024:4:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 746,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "3040:1:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 745,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "3032:7:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 744,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "3032:7:4",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 747,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3032:10:4",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "3024:18:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4d696e7420746f207a65726f20616464726573732e",
                        "id": 749,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3044:23:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_b3cd0cc0adee66fdd10c0f21fe5cb0de39672daa3845cfc9b86f6248c4187fe0",
                          "typeString": "literal_string \"Mint to zero address.\""
                        },
                        "value": "Mint to zero address."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_b3cd0cc0adee66fdd10c0f21fe5cb0de39672daa3845cfc9b86f6248c4187fe0",
                          "typeString": "literal_string \"Mint to zero address.\""
                        }
                      ],
                      "id": 742,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "3016:7:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 750,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3016:52:4",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 751,
                  "nodeType": "ExpressionStatement",
                  "src": "3016:52:4"
                },
                {
                  "documentation": "@dev    Require that the hash is actually 32 [64 characters]\n         in length.",
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        },
                        "id": 756,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 753,
                            "name": "hash",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 733,
                            "src": "3190:4:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          "id": 754,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "length",
                          "nodeType": "MemberAccess",
                          "src": "3190:11:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint8",
                            "typeString": "uint8"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "hexValue": "3332",
                          "id": 755,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "3205:2:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_32_by_1",
                            "typeString": "int_const 32"
                          },
                          "value": "32"
                        },
                        "src": "3190:17:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "496e76616c696420686173682e",
                        "id": 757,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3209:15:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_2a7fbb30cbfd2c1e85c73eb36daa5eb95b6ba858ce622fc97f840c43ac489678",
                          "typeString": "literal_string \"Invalid hash.\""
                        },
                        "value": "Invalid hash."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_2a7fbb30cbfd2c1e85c73eb36daa5eb95b6ba858ce622fc97f840c43ac489678",
                          "typeString": "literal_string \"Invalid hash.\""
                        }
                      ],
                      "id": 752,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "3182:7:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 758,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3182:43:4",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 759,
                  "nodeType": "ExpressionStatement",
                  "src": "3182:43:4"
                },
                {
                  "documentation": "@dev Require the length of the signature is 65.",
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 764,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 761,
                            "name": "sig",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 735,
                            "src": "3303:3:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            }
                          },
                          "id": 762,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "length",
                          "nodeType": "MemberAccess",
                          "src": "3303:10:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "hexValue": "3635",
                          "id": 763,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "3317:2:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_65_by_1",
                            "typeString": "int_const 65"
                          },
                          "value": "65"
                        },
                        "src": "3303:16:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "496e76616c6964207369676e6174757265206c656e677468",
                        "id": 765,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3321:26:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_d0e57016dfcfa997388e3f3d9ad75ea4d5a67a0f23b0489f2cdbaecf3ef0f78c",
                          "typeString": "literal_string \"Invalid signature length\""
                        },
                        "value": "Invalid signature length"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_d0e57016dfcfa997388e3f3d9ad75ea4d5a67a0f23b0489f2cdbaecf3ef0f78c",
                          "typeString": "literal_string \"Invalid signature length\""
                        }
                      ],
                      "id": 760,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "3295:7:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 766,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3295:53:4",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 767,
                  "nodeType": "ExpressionStatement",
                  "src": "3295:53:4"
                },
                {
                  "documentation": "@dev    Verifies that the address was actually signed by the\n         allowlistOwner.",
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 770,
                            "name": "hash",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 733,
                            "src": "3491:4:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          {
                            "id": 771,
                            "name": "sig",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 735,
                            "src": "3497:3:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            },
                            {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            }
                          ],
                          "id": 769,
                          "name": "verifySignature",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 54,
                          "src": "3475:15:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_bytes_memory_ptr_$returns$_t_bool_$",
                            "typeString": "function (bytes32,bytes memory) returns (bool)"
                          }
                        },
                        "id": 772,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3475:26:4",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "48617368206e6f74207369676e6564206279206f776e65722e",
                        "id": 773,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3503:27:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_8bd072bd5dbada9e898e97294da7d3166e68f47eb033c9c4ff00346bc371e6be",
                          "typeString": "literal_string \"Hash not signed by owner.\""
                        },
                        "value": "Hash not signed by owner."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_8bd072bd5dbada9e898e97294da7d3166e68f47eb033c9c4ff00346bc371e6be",
                          "typeString": "literal_string \"Hash not signed by owner.\""
                        }
                      ],
                      "id": 768,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "3467:7:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 774,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3467:64:4",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 775,
                  "nodeType": "ExpressionStatement",
                  "src": "3467:64:4"
                },
                {
                  "documentation": "@dev    Mint the tokens to address.\n         [Ref Soulbound.sol].",
                  "expression": {
                    "arguments": [
                      {
                        "id": 777,
                        "name": "addr",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 731,
                        "src": "3636:4:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 778,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 737,
                        "src": "3642:7:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 779,
                        "name": "tokenURI",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 739,
                        "src": "3651:8:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      ],
                      "id": 776,
                      "name": "issue",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 433,
                      "src": "3630:5:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_string_memory_ptr_$returns$_t_bool_$",
                        "typeString": "function (address,uint256,string memory) returns (bool)"
                      }
                    },
                    "id": 780,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3630:30:4",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 781,
                  "nodeType": "ExpressionStatement",
                  "src": "3630:30:4"
                },
                {
                  "documentation": "@dev Emit the IssueWithSignature event.",
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 783,
                        "name": "addr",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 731,
                        "src": "3746:4:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 784,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 737,
                        "src": "3752:7:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 782,
                      "name": "IssueWithSignature",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 674,
                      "src": "3727:18:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 785,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3727:33:4",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 786,
                  "nodeType": "EmitStatement",
                  "src": "3722:38:4"
                }
              ]
            },
            "documentation": {
              "id": 729,
              "nodeType": "StructuredDocumentation",
              "src": "2149:615:4",
              "text": " @dev  Mints a particular quantity of tokens to `to`, \n       on the condition that the address has been \n       signed by the allowlistOwner off-chain.\n       This will emit the {MintSoulboundToken} event\n       from the Soulbound.sol.\n @notice Callable by anyone.\n @param addr       Address to mint tokens to.\n @param hash       Hashed message by the allowlistOwner.\n @param sig        Signature, signed by the allowlistOwner.\n @param tokenId    Id of the tokens to mint to the `addr`.\n @param tokenURI   URI of the token to be minted."
            },
            "functionSelector": "c9e4c54d",
            "id": 788,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "issueWithSignature",
            "nameLocation": "2778:18:4",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 740,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 731,
                  "mutability": "mutable",
                  "name": "addr",
                  "nameLocation": "2814:4:4",
                  "nodeType": "VariableDeclaration",
                  "scope": 788,
                  "src": "2806:12:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 730,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2806:7:4",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 733,
                  "mutability": "mutable",
                  "name": "hash",
                  "nameLocation": "2836:4:4",
                  "nodeType": "VariableDeclaration",
                  "scope": 788,
                  "src": "2828:12:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 732,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "2828:7:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 735,
                  "mutability": "mutable",
                  "name": "sig",
                  "nameLocation": "2863:3:4",
                  "nodeType": "VariableDeclaration",
                  "scope": 788,
                  "src": "2850:16:4",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 734,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "2850:5:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 737,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nameLocation": "2884:7:4",
                  "nodeType": "VariableDeclaration",
                  "scope": 788,
                  "src": "2876:15:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 736,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2876:7:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 739,
                  "mutability": "mutable",
                  "name": "tokenURI",
                  "nameLocation": "2915:8:4",
                  "nodeType": "VariableDeclaration",
                  "scope": 788,
                  "src": "2901:22:4",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 738,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "2901:6:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2796:133:4"
            },
            "returnParameters": {
              "id": 741,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2941:0:4"
            },
            "scope": 974,
            "src": "2769:998:4",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 840,
              "nodeType": "Block",
              "src": "4348:812:4",
              "statements": [
                {
                  "documentation": "@dev Require that the token exists.",
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 800,
                            "name": "tokenId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 795,
                            "src": "4422:7:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "id": 799,
                          "name": "_exists",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2053,
                          "src": "4414:7:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_bool_$",
                            "typeString": "function (uint256) view returns (bool)"
                          }
                        },
                        "id": 801,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4414:16:4",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "5265766f6b65206f6620696e6578697374656e7420746f6b656e2e",
                        "id": 802,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4432:29:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_a3bfeacbcc0a1d035b2bef35f193769daeb6b660d60698cecf4c107d00719373",
                          "typeString": "literal_string \"Revoke of inexistent token.\""
                        },
                        "value": "Revoke of inexistent token."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_a3bfeacbcc0a1d035b2bef35f193769daeb6b660d60698cecf4c107d00719373",
                          "typeString": "literal_string \"Revoke of inexistent token.\""
                        }
                      ],
                      "id": 798,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "4406:7:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 803,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4406:56:4",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 804,
                  "nodeType": "ExpressionStatement",
                  "src": "4406:56:4"
                },
                {
                  "documentation": "@dev    Require that the hash is actually 32 [64 characters]\n         in length.",
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        },
                        "id": 809,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 806,
                            "name": "hash",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 791,
                            "src": "4584:4:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          "id": 807,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "length",
                          "nodeType": "MemberAccess",
                          "src": "4584:11:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint8",
                            "typeString": "uint8"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "hexValue": "3332",
                          "id": 808,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "4599:2:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_32_by_1",
                            "typeString": "int_const 32"
                          },
                          "value": "32"
                        },
                        "src": "4584:17:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "496e76616c696420686173682e",
                        "id": 810,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4603:15:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_2a7fbb30cbfd2c1e85c73eb36daa5eb95b6ba858ce622fc97f840c43ac489678",
                          "typeString": "literal_string \"Invalid hash.\""
                        },
                        "value": "Invalid hash."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_2a7fbb30cbfd2c1e85c73eb36daa5eb95b6ba858ce622fc97f840c43ac489678",
                          "typeString": "literal_string \"Invalid hash.\""
                        }
                      ],
                      "id": 805,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "4576:7:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 811,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4576:43:4",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 812,
                  "nodeType": "ExpressionStatement",
                  "src": "4576:43:4"
                },
                {
                  "documentation": "@dev Require the length of the signature is 65.",
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 817,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 814,
                            "name": "sig",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 793,
                            "src": "4697:3:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            }
                          },
                          "id": 815,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "length",
                          "nodeType": "MemberAccess",
                          "src": "4697:10:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "hexValue": "3635",
                          "id": 816,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "4711:2:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_65_by_1",
                            "typeString": "int_const 65"
                          },
                          "value": "65"
                        },
                        "src": "4697:16:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "496e76616c6964207369676e6174757265206c656e677468",
                        "id": 818,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4715:26:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_d0e57016dfcfa997388e3f3d9ad75ea4d5a67a0f23b0489f2cdbaecf3ef0f78c",
                          "typeString": "literal_string \"Invalid signature length\""
                        },
                        "value": "Invalid signature length"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_d0e57016dfcfa997388e3f3d9ad75ea4d5a67a0f23b0489f2cdbaecf3ef0f78c",
                          "typeString": "literal_string \"Invalid signature length\""
                        }
                      ],
                      "id": 813,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "4689:7:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 819,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4689:53:4",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 820,
                  "nodeType": "ExpressionStatement",
                  "src": "4689:53:4"
                },
                {
                  "documentation": "@dev    Verifies that the address was actually signed by the\n         allowlistOwner.",
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 823,
                            "name": "hash",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 791,
                            "src": "4885:4:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          {
                            "id": 824,
                            "name": "sig",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 793,
                            "src": "4891:3:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            },
                            {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            }
                          ],
                          "id": 822,
                          "name": "verifySignature",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 54,
                          "src": "4869:15:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_bytes_memory_ptr_$returns$_t_bool_$",
                            "typeString": "function (bytes32,bytes memory) returns (bool)"
                          }
                        },
                        "id": 825,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4869:26:4",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "48617368206e6f74207369676e6564206279206f776e65722e",
                        "id": 826,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4897:27:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_8bd072bd5dbada9e898e97294da7d3166e68f47eb033c9c4ff00346bc371e6be",
                          "typeString": "literal_string \"Hash not signed by owner.\""
                        },
                        "value": "Hash not signed by owner."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_8bd072bd5dbada9e898e97294da7d3166e68f47eb033c9c4ff00346bc371e6be",
                          "typeString": "literal_string \"Hash not signed by owner.\""
                        }
                      ],
                      "id": 821,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "4861:7:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 827,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4861:64:4",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 828,
                  "nodeType": "ExpressionStatement",
                  "src": "4861:64:4"
                },
                {
                  "documentation": "@dev    Mint the tokens to address.\n         [Ref Soulbound.sol].",
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 831,
                            "name": "tokenId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 795,
                            "src": "5039:7:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "id": 830,
                          "name": "ownerOf",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2036,
                          "src": "5031:7:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$",
                            "typeString": "function (uint256) view returns (address)"
                          }
                        },
                        "id": 832,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "5031:16:4",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 833,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 795,
                        "src": "5049:7:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 829,
                      "name": "revoke",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 466,
                      "src": "5024:6:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,uint256) returns (bool)"
                      }
                    },
                    "id": 834,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5024:33:4",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 835,
                  "nodeType": "ExpressionStatement",
                  "src": "5024:33:4"
                },
                {
                  "documentation": "@dev Emit the RevokeWithSignature event.",
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 837,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 795,
                        "src": "5145:7:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 836,
                      "name": "RevokeWithSignature",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 679,
                      "src": "5125:19:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 838,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5125:28:4",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 839,
                  "nodeType": "EmitStatement",
                  "src": "5120:33:4"
                }
              ]
            },
            "documentation": {
              "id": 789,
              "nodeType": "StructuredDocumentation",
              "src": "3773:451:4",
              "text": " @dev  Revokes the ownership of `tokenId` from the owner.\n       The token must exist and the signature must be signed the\n       allowlistOwner.\n       This emits the {RevokeWithSignature} event.\n @notice Callable by anyone.\n @param hash       Hashed message by the allowlistOwner.\n @param sig        Signature, signed by the allowlistOwner.\n @param tokenId    Id of the token to revoke."
            },
            "functionSelector": "08c92e57",
            "id": 841,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "revokeWithSignature",
            "nameLocation": "4238:19:4",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 796,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 791,
                  "mutability": "mutable",
                  "name": "hash",
                  "nameLocation": "4275:4:4",
                  "nodeType": "VariableDeclaration",
                  "scope": 841,
                  "src": "4267:12:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 790,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "4267:7:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 793,
                  "mutability": "mutable",
                  "name": "sig",
                  "nameLocation": "4302:3:4",
                  "nodeType": "VariableDeclaration",
                  "scope": 841,
                  "src": "4289:16:4",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 792,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "4289:5:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 795,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nameLocation": "4323:7:4",
                  "nodeType": "VariableDeclaration",
                  "scope": 841,
                  "src": "4315:15:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 794,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4315:7:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4257:79:4"
            },
            "returnParameters": {
              "id": 797,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4348:0:4"
            },
            "scope": 974,
            "src": "4229:931:4",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 858,
              "nodeType": "Block",
              "src": "5614:68:4",
              "statements": [
                {
                  "documentation": "@dev Set baseURI.",
                  "expression": {
                    "arguments": [
                      {
                        "id": 855,
                        "name": "_baseURI",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 846,
                        "src": "5666:8:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      ],
                      "id": 854,
                      "name": "_setBaseURI",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 626,
                      "src": "5654:11:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (string memory)"
                      }
                    },
                    "id": 856,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5654:21:4",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 857,
                  "nodeType": "ExpressionStatement",
                  "src": "5654:21:4"
                }
              ]
            },
            "documentation": {
              "id": 842,
              "nodeType": "StructuredDocumentation",
              "src": "5166:320:4",
              "text": " @dev  Allows the `caller` (allowlistOwner) to set the baseURI.\n       This is really important when the caller wants to mint\n       Multiple tokens with the same base URI.\n @notice   Callable by the deployer of this contract [DaccredDeployer]\n           and the allowlistOwner."
            },
            "functionSelector": "88433651",
            "id": 859,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 849,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 848,
                  "name": "onlyOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 291,
                  "src": "5568:9:4"
                },
                "nodeType": "ModifierInvocation",
                "src": "5568:9:4"
              },
              {
                "arguments": [
                  {
                    "id": 851,
                    "name": "caller",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 844,
                    "src": "5602:6:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  }
                ],
                "id": 852,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 850,
                  "name": "onlyAllowlistOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 694,
                  "src": "5583:18:4"
                },
                "nodeType": "ModifierInvocation",
                "src": "5583:26:4"
              }
            ],
            "name": "setBaseURI",
            "nameLocation": "5500:10:4",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 847,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 844,
                  "mutability": "mutable",
                  "name": "caller",
                  "nameLocation": "5519:6:4",
                  "nodeType": "VariableDeclaration",
                  "scope": 859,
                  "src": "5511:14:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 843,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "5511:7:4",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 846,
                  "mutability": "mutable",
                  "name": "_baseURI",
                  "nameLocation": "5541:8:4",
                  "nodeType": "VariableDeclaration",
                  "scope": 859,
                  "src": "5527:22:4",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 845,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "5527:6:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5510:40:4"
            },
            "returnParameters": {
              "id": 853,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5614:0:4"
            },
            "scope": 974,
            "src": "5491:191:4",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 893,
              "nodeType": "Block",
              "src": "6178:299:4",
              "statements": [
                {
                  "documentation": "@dev Require baseURI length is not currently 0.",
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 875,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "arguments": [
                              {
                                "arguments": [],
                                "expression": {
                                  "argumentTypes": [],
                                  "id": 870,
                                  "name": "_getBaseURI",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 648,
                                  "src": "6262:11:4",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_internal_view$__$returns$_t_string_memory_ptr_$",
                                    "typeString": "function () view returns (string memory)"
                                  }
                                },
                                "id": 871,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "6262:13:4",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_string_memory_ptr",
                                  "typeString": "string memory"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_string_memory_ptr",
                                  "typeString": "string memory"
                                }
                              ],
                              "id": 869,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "6256:5:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
                                "typeString": "type(bytes storage pointer)"
                              },
                              "typeName": {
                                "id": 868,
                                "name": "bytes",
                                "nodeType": "ElementaryTypeName",
                                "src": "6256:5:4",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 872,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "6256:20:4",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            }
                          },
                          "id": 873,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "length",
                          "nodeType": "MemberAccess",
                          "src": "6256:27:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 874,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "6287:1:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "6256:32:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "456d7074792062617365555249",
                        "id": 876,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "6290:15:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_3247d8bc89d36854791dbafe948ddc082d8cf6636c64b41fbbdf5761acfb1e22",
                          "typeString": "literal_string \"Empty baseURI\""
                        },
                        "value": "Empty baseURI"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_3247d8bc89d36854791dbafe948ddc082d8cf6636c64b41fbbdf5761acfb1e22",
                          "typeString": "literal_string \"Empty baseURI\""
                        }
                      ],
                      "id": 867,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "6248:7:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 877,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6248:58:4",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 878,
                  "nodeType": "ExpressionStatement",
                  "src": "6248:58:4"
                },
                {
                  "documentation": "@dev Return a packed tokenURI string.",
                  "expression": {
                    "id": 891,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 879,
                      "name": "_tokenURI",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 865,
                      "src": "6366:9:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string memory"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "arguments": [
                            {
                              "arguments": [],
                              "expression": {
                                "argumentTypes": [],
                                "id": 884,
                                "name": "_getBaseURI",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 648,
                                "src": "6415:11:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_view$__$returns$_t_string_memory_ptr_$",
                                  "typeString": "function () view returns (string memory)"
                                }
                              },
                              "id": 885,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "6415:13:4",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_string_memory_ptr",
                                "typeString": "string memory"
                              }
                            },
                            {
                              "arguments": [
                                {
                                  "id": 887,
                                  "name": "tokenId",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 862,
                                  "src": "6451:7:4",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                ],
                                "id": 886,
                                "name": "toString",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 973,
                                "src": "6442:8:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_string_memory_ptr_$",
                                  "typeString": "function (uint256) pure returns (string memory)"
                                }
                              },
                              "id": 888,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "6442:17:4",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_string_memory_ptr",
                                "typeString": "string memory"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_string_memory_ptr",
                                "typeString": "string memory"
                              },
                              {
                                "typeIdentifier": "t_string_memory_ptr",
                                "typeString": "string memory"
                              }
                            ],
                            "expression": {
                              "id": 882,
                              "name": "abi",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -1,
                              "src": "6385:3:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_abi",
                                "typeString": "abi"
                              }
                            },
                            "id": 883,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "memberName": "encodePacked",
                            "nodeType": "MemberAccess",
                            "src": "6385:16:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                              "typeString": "function () pure returns (bytes memory)"
                            }
                          },
                          "id": 889,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "6385:84:4",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_memory_ptr",
                            "typeString": "bytes memory"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_bytes_memory_ptr",
                            "typeString": "bytes memory"
                          }
                        ],
                        "id": 881,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "6378:6:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_string_storage_ptr_$",
                          "typeString": "type(string storage pointer)"
                        },
                        "typeName": {
                          "id": 880,
                          "name": "string",
                          "nodeType": "ElementaryTypeName",
                          "src": "6378:6:4",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 890,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "6378:92:4",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string memory"
                      }
                    },
                    "src": "6366:104:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory_ptr",
                      "typeString": "string memory"
                    }
                  },
                  "id": 892,
                  "nodeType": "ExpressionStatement",
                  "src": "6366:104:4"
                }
              ]
            },
            "documentation": {
              "id": 860,
              "nodeType": "StructuredDocumentation",
              "src": "5688:379:4",
              "text": " @dev  Using the `tokenId` passed, it generates a `stringified` tokenURI,\n       packing the baseURI and the current tokenId.\n       Makes use of OpenZeppelin's uint to string function.\n @notice Callable by anyone.\n @param tokenId ID of token whose tokenURI is desired.\n @return _tokenURI TokenURI of the passed tokenId."
            },
            "functionSelector": "210fa96b",
            "id": 894,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "generateTokenURI",
            "nameLocation": "6081:16:4",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 863,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 862,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nameLocation": "6106:7:4",
                  "nodeType": "VariableDeclaration",
                  "scope": 894,
                  "src": "6098:15:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 861,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "6098:7:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6097:17:4"
            },
            "returnParameters": {
              "id": 866,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 865,
                  "mutability": "mutable",
                  "name": "_tokenURI",
                  "nameLocation": "6163:9:4",
                  "nodeType": "VariableDeclaration",
                  "scope": 894,
                  "src": "6149:23:4",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 864,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "6149:6:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6148:25:4"
            },
            "scope": 974,
            "src": "6072:405:4",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 972,
              "nodeType": "Block",
              "src": "6684:632:4",
              "statements": [
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 904,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 902,
                      "name": "value",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 897,
                      "src": "6886:5:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "hexValue": "30",
                      "id": 903,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "6895:1:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "6886:10:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 908,
                  "nodeType": "IfStatement",
                  "src": "6882:51:4",
                  "trueBody": {
                    "id": 907,
                    "nodeType": "Block",
                    "src": "6898:35:4",
                    "statements": [
                      {
                        "expression": {
                          "hexValue": "30",
                          "id": 905,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "string",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "6919:3:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_stringliteral_044852b2a670ade5407e78fb2863c51de9fcb96542a07186fe3aeda6bb8a116d",
                            "typeString": "literal_string \"0\""
                          },
                          "value": "0"
                        },
                        "functionReturnParameters": 901,
                        "id": 906,
                        "nodeType": "Return",
                        "src": "6912:10:4"
                      }
                    ]
                  }
                },
                {
                  "assignments": [
                    910
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 910,
                      "mutability": "mutable",
                      "name": "temp",
                      "nameLocation": "6950:4:4",
                      "nodeType": "VariableDeclaration",
                      "scope": 972,
                      "src": "6942:12:4",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 909,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "6942:7:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 912,
                  "initialValue": {
                    "id": 911,
                    "name": "value",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 897,
                    "src": "6957:5:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "6942:20:4"
                },
                {
                  "assignments": [
                    914
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 914,
                      "mutability": "mutable",
                      "name": "digits",
                      "nameLocation": "6980:6:4",
                      "nodeType": "VariableDeclaration",
                      "scope": 972,
                      "src": "6972:14:4",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 913,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "6972:7:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 915,
                  "nodeType": "VariableDeclarationStatement",
                  "src": "6972:14:4"
                },
                {
                  "body": {
                    "id": 926,
                    "nodeType": "Block",
                    "src": "7014:57:4",
                    "statements": [
                      {
                        "expression": {
                          "id": 920,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "UnaryOperation",
                          "operator": "++",
                          "prefix": false,
                          "src": "7028:8:4",
                          "subExpression": {
                            "id": 919,
                            "name": "digits",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 914,
                            "src": "7028:6:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 921,
                        "nodeType": "ExpressionStatement",
                        "src": "7028:8:4"
                      },
                      {
                        "expression": {
                          "id": 924,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 922,
                            "name": "temp",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 910,
                            "src": "7050:4:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "/=",
                          "rightHandSide": {
                            "hexValue": "3130",
                            "id": 923,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "7058:2:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_10_by_1",
                              "typeString": "int_const 10"
                            },
                            "value": "10"
                          },
                          "src": "7050:10:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 925,
                        "nodeType": "ExpressionStatement",
                        "src": "7050:10:4"
                      }
                    ]
                  },
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 918,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 916,
                      "name": "temp",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 910,
                      "src": "7003:4:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "!=",
                    "rightExpression": {
                      "hexValue": "30",
                      "id": 917,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "7011:1:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "7003:9:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 927,
                  "nodeType": "WhileStatement",
                  "src": "6996:75:4"
                },
                {
                  "assignments": [
                    929
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 929,
                      "mutability": "mutable",
                      "name": "buffer",
                      "nameLocation": "7093:6:4",
                      "nodeType": "VariableDeclaration",
                      "scope": 972,
                      "src": "7080:19:4",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes_memory_ptr",
                        "typeString": "bytes"
                      },
                      "typeName": {
                        "id": 928,
                        "name": "bytes",
                        "nodeType": "ElementaryTypeName",
                        "src": "7080:5:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_storage_ptr",
                          "typeString": "bytes"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 934,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 932,
                        "name": "digits",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 914,
                        "src": "7112:6:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 931,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "NewExpression",
                      "src": "7102:9:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_bytes_memory_ptr_$",
                        "typeString": "function (uint256) pure returns (bytes memory)"
                      },
                      "typeName": {
                        "id": 930,
                        "name": "bytes",
                        "nodeType": "ElementaryTypeName",
                        "src": "7106:5:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_storage_ptr",
                          "typeString": "bytes"
                        }
                      }
                    },
                    "id": 933,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7102:17:4",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_memory_ptr",
                      "typeString": "bytes memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "7080:39:4"
                },
                {
                  "body": {
                    "id": 965,
                    "nodeType": "Block",
                    "src": "7148:131:4",
                    "statements": [
                      {
                        "expression": {
                          "id": 940,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 938,
                            "name": "digits",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 914,
                            "src": "7162:6:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "-=",
                          "rightHandSide": {
                            "hexValue": "31",
                            "id": 939,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "7172:1:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_1_by_1",
                              "typeString": "int_const 1"
                            },
                            "value": "1"
                          },
                          "src": "7162:11:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 941,
                        "nodeType": "ExpressionStatement",
                        "src": "7162:11:4"
                      },
                      {
                        "expression": {
                          "id": 959,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "baseExpression": {
                              "id": 942,
                              "name": "buffer",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 929,
                              "src": "7187:6:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            },
                            "id": 944,
                            "indexExpression": {
                              "id": 943,
                              "name": "digits",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 914,
                              "src": "7194:6:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "7187:14:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes1",
                              "typeString": "bytes1"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "commonType": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    },
                                    "id": 956,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "leftExpression": {
                                      "hexValue": "3438",
                                      "id": 949,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "kind": "number",
                                      "lValueRequested": false,
                                      "nodeType": "Literal",
                                      "src": "7217:2:4",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_rational_48_by_1",
                                        "typeString": "int_const 48"
                                      },
                                      "value": "48"
                                    },
                                    "nodeType": "BinaryOperation",
                                    "operator": "+",
                                    "rightExpression": {
                                      "arguments": [
                                        {
                                          "commonType": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          },
                                          "id": 954,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "leftExpression": {
                                            "id": 952,
                                            "name": "value",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 897,
                                            "src": "7230:5:4",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_uint256",
                                              "typeString": "uint256"
                                            }
                                          },
                                          "nodeType": "BinaryOperation",
                                          "operator": "%",
                                          "rightExpression": {
                                            "hexValue": "3130",
                                            "id": 953,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": true,
                                            "kind": "number",
                                            "lValueRequested": false,
                                            "nodeType": "Literal",
                                            "src": "7238:2:4",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_rational_10_by_1",
                                              "typeString": "int_const 10"
                                            },
                                            "value": "10"
                                          },
                                          "src": "7230:10:4",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        }
                                      ],
                                      "expression": {
                                        "argumentTypes": [
                                          {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        ],
                                        "id": 951,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "lValueRequested": false,
                                        "nodeType": "ElementaryTypeNameExpression",
                                        "src": "7222:7:4",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_type$_t_uint256_$",
                                          "typeString": "type(uint256)"
                                        },
                                        "typeName": {
                                          "id": 950,
                                          "name": "uint256",
                                          "nodeType": "ElementaryTypeName",
                                          "src": "7222:7:4",
                                          "typeDescriptions": {}
                                        }
                                      },
                                      "id": 955,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "kind": "typeConversion",
                                      "lValueRequested": false,
                                      "names": [],
                                      "nodeType": "FunctionCall",
                                      "src": "7222:19:4",
                                      "tryCall": false,
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "src": "7217:24:4",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  ],
                                  "id": 948,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "nodeType": "ElementaryTypeNameExpression",
                                  "src": "7211:5:4",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_uint8_$",
                                    "typeString": "type(uint8)"
                                  },
                                  "typeName": {
                                    "id": 947,
                                    "name": "uint8",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "7211:5:4",
                                    "typeDescriptions": {}
                                  }
                                },
                                "id": 957,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "typeConversion",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "7211:31:4",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint8",
                                  "typeString": "uint8"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_uint8",
                                  "typeString": "uint8"
                                }
                              ],
                              "id": 946,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "7204:6:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_bytes1_$",
                                "typeString": "type(bytes1)"
                              },
                              "typeName": {
                                "id": 945,
                                "name": "bytes1",
                                "nodeType": "ElementaryTypeName",
                                "src": "7204:6:4",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 958,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "7204:39:4",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes1",
                              "typeString": "bytes1"
                            }
                          },
                          "src": "7187:56:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes1",
                            "typeString": "bytes1"
                          }
                        },
                        "id": 960,
                        "nodeType": "ExpressionStatement",
                        "src": "7187:56:4"
                      },
                      {
                        "expression": {
                          "id": 963,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 961,
                            "name": "value",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 897,
                            "src": "7257:5:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "/=",
                          "rightHandSide": {
                            "hexValue": "3130",
                            "id": 962,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "7266:2:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_10_by_1",
                              "typeString": "int_const 10"
                            },
                            "value": "10"
                          },
                          "src": "7257:11:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 964,
                        "nodeType": "ExpressionStatement",
                        "src": "7257:11:4"
                      }
                    ]
                  },
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 937,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 935,
                      "name": "value",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 897,
                      "src": "7136:5:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "!=",
                    "rightExpression": {
                      "hexValue": "30",
                      "id": 936,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "7145:1:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "7136:10:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 966,
                  "nodeType": "WhileStatement",
                  "src": "7129:150:4"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 969,
                        "name": "buffer",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 929,
                        "src": "7302:6:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "id": 968,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "ElementaryTypeNameExpression",
                      "src": "7295:6:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_string_storage_ptr_$",
                        "typeString": "type(string storage pointer)"
                      },
                      "typeName": {
                        "id": 967,
                        "name": "string",
                        "nodeType": "ElementaryTypeName",
                        "src": "7295:6:4",
                        "typeDescriptions": {}
                      }
                    },
                    "id": 970,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7295:14:4",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory_ptr",
                      "typeString": "string memory"
                    }
                  },
                  "functionReturnParameters": 901,
                  "id": 971,
                  "nodeType": "Return",
                  "src": "7288:21:4"
                }
              ]
            },
            "documentation": {
              "id": 895,
              "nodeType": "StructuredDocumentation",
              "src": "6483:125:4",
              "text": " @dev Converts a `uint256` to its ASCII `string` decimal representation.\n      Copied from OpenZeppelin."
            },
            "id": 973,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "toString",
            "nameLocation": "6622:8:4",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 898,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 897,
                  "mutability": "mutable",
                  "name": "value",
                  "nameLocation": "6639:5:4",
                  "nodeType": "VariableDeclaration",
                  "scope": 973,
                  "src": "6631:13:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 896,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "6631:7:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6630:15:4"
            },
            "returnParameters": {
              "id": 901,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 900,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 973,
                  "src": "6669:13:4",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 899,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "6669:6:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6668:15:4"
            },
            "scope": 974,
            "src": "6613:703:4",
            "stateMutability": "pure",
            "virtual": false,
            "visibility": "internal"
          }
        ],
        "scope": 975,
        "src": "820:6499:4",
        "usedErrors": [
          2150
        ]
      }
    ],
    "src": "438:6882:4"
  },
  "bytecode": "60806040523480156200001157600080fd5b5060405162001db638038062001db68339810160408190526200003491620001df565b8184848181600062000047838262000301565b50600162000056828262000301565b505050620000736200006d620000bc60201b60201c565b620000c0565b5050600880546001600160a01b0319166001600160a01b03929092169190911790556000819003620000ac57620f4240600955620000b2565b60098190555b50505050620003cd565b3390565b600580546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b634e487b7160e01b600052604160045260246000fd5b600082601f8301126200013a57600080fd5b81516001600160401b038082111562000157576200015762000112565b604051601f8301601f19908116603f0116810190828211818310171562000182576200018262000112565b816040528381526020925086838588010111156200019f57600080fd5b600091505b83821015620001c35785820183015181830184015290820190620001a4565b83821115620001d55760008385830101525b9695505050505050565b60008060008060808587031215620001f657600080fd5b84516001600160401b03808211156200020e57600080fd5b6200021c8883890162000128565b955060208701519150808211156200023357600080fd5b50620002428782880162000128565b604087015190945090506001600160a01b03811681146200026257600080fd5b6060959095015193969295505050565b600181811c908216806200028757607f821691505b602082108103620002a857634e487b7160e01b600052602260045260246000fd5b50919050565b601f821115620002fc57600081815260208120601f850160051c81016020861015620002d75750805b601f850160051c820191505b81811015620002f857828155600101620002e3565b5050505b505050565b81516001600160401b038111156200031d576200031d62000112565b62000335816200032e845462000272565b84620002ae565b602080601f8311600181146200036d5760008415620003545750858301515b600019600386901b1c1916600185901b178555620002f8565b600085815260208120601f198616915b828110156200039e578886015182559484019460019091019084016200037d565b5085821015620003bd5787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b6119d980620003dd6000396000f3fe608060405234801561001057600080fd5b506004361061012c5760003560e01c806388433651116100ad578063c9e4c54d11610071578063c9e4c54d1461028e578063daca6f78146102a1578063e92b0842146102b4578063f2fde38b146102c7578063fb8f198d146102da57600080fd5b806388433651146102475780638da5cb5b1461025a57806395d89b411461026b578063c87b56dd14610273578063c9dd94c71461028657600080fd5b80635899e7b2116100f45780635899e7b2146101a95780636352211e146101e25780636e0a87461461020d57806370a082311461021e578063715018a61461023f57600080fd5b806301ffc9a71461013157806306fdde031461015957806308c92e571461016e578063210fa96b1461018357806342966c6814610196575b600080fd5b61014461013f366004611422565b6102ed565b60405190151581526020015b60405180910390f35b61016161033f565b604051610150919061147c565b61018161017c366004611552565b6103d1565b005b6101616101913660046115a2565b61050c565b6101816101a43660046115a2565b61058e565b6101446101b73660046115d7565b6001600160a01b03919091166000908152600760209081526040808320938352929052205460ff1690565b6101f56101f03660046115a2565b610603565b6040516001600160a01b039091168152602001610150565b6008546001600160a01b03166101f5565b61023161022c366004611601565b610668565b604051908152602001610150565b6101816106f1565b61018161025536600461161c565b610705565b6005546001600160a01b03166101f5565b610161610785565b6101616102813660046115a2565b610794565b610161610889565b61018161029c36600461166a565b6108e6565b6101446102af3660046116f2565b610a1b565b6101446102c2366004611723565b610a2e565b6101816102d5366004611601565b610ac2565b6101f56102e83660046115d7565b610b38565b60006001600160e01b03198216635b5e139f60e01b148061031e57506001600160e01b03198216635164cf4760e01b145b8061033957506301ffc9a760e01b6001600160e01b03198316145b92915050565b60606000805461034e9061177a565b80601f016020809104026020016040519081016040528092919081815260200182805461037a9061177a565b80156103c75780601f1061039c576101008083540402835291602001916103c7565b820191906000526020600020905b8154815290600101906020018083116103aa57829003601f168201915b5050505050905090565b6103da81610c4c565b61042b5760405162461bcd60e51b815260206004820152601b60248201527f5265766f6b65206f6620696e6578697374656e7420746f6b656e2e000000000060448201526064015b60405180910390fd5b81516041146104775760405162461bcd60e51b8152602060048201526018602482015277092dcecc2d8d2c840e6d2cedcc2e8eae4ca40d8cadccee8d60431b6044820152606401610422565b6104818383610a1b565b6104c95760405162461bcd60e51b81526020600482015260196024820152782430b9b4103737ba1039b4b3b732b210313c9037bbb732b91760391b6044820152606401610422565b6104db6104d582610603565b82610c69565b5060405181907ff947bf2266afede98f27ad2312db8b2a17921852307f979b6f14a2b41fa774bc90600090a2505050565b6060610516610889565b516000036105565760405162461bcd60e51b815260206004820152600d60248201526c456d707479206261736555524960981b6044820152606401610422565b61055e610889565b61056783610d31565b6040516020016105789291906117b4565b6040516020818303038152906040529050919050565b61059781610603565b6001600160a01b0316336001600160a01b0316146105f75760405162461bcd60e51b815260206004820152601a60248201527f6275726e3a2073656e646572206d757374206265206f776e65720000000000006044820152606401610422565b61060081610e3a565b50565b6000818152600260205260408120546001600160a01b0316806103395760405162461bcd60e51b815260206004820152601c60248201527f6f776e65724f663a20746f6b656e20646f65736e2774206578697374000000006044820152606401610422565b60006001600160a01b0382166106d55760405162461bcd60e51b815260206004820152602c60248201527f62616c616e63654f663a2061646472657373207a65726f206973206e6f74206160448201526b103b30b634b21037bbb732b960a11b6064820152608401610422565b506001600160a01b031660009081526004602052604090205490565b6106f9610ee1565b6107036000610f3b565b565b61070d610ee1565b816107206008546001600160a01b031690565b6001600160a01b0316816001600160a01b0316146107775760405162461bcd60e51b81526020600482015260146024820152734e6f7420416c6c6f776c697374204f776e65722160601b6044820152606401610422565b61078082610f8d565b505050565b60606001805461034e9061177a565b606061079f82610c4c565b6107eb5760405162461bcd60e51b815260206004820152601d60248201527f746f6b656e5552493a20746f6b656e20646f65736e27742065786973740000006044820152606401610422565b600082815260036020526040902080546108049061177a565b80601f01602080910402602001604051908101604052809291908181526020018280546108309061177a565b801561087d5780601f106108525761010080835404028352916020019161087d565b820191906000526020600020905b81548152906001019060200180831161086057829003601f168201915b50505050509050919050565b6060600680546108989061177a565b90506000036108d95760405162461bcd60e51b815260206004820152600d60248201526c456d707479206261736555524960981b6044820152606401610422565b6006805461034e9061177a565b6001600160a01b0385166109345760405162461bcd60e51b815260206004820152601560248201527426b4b73a103a37903d32b9379030b2323932b9b99760591b6044820152606401610422565b82516041146109805760405162461bcd60e51b8152602060048201526018602482015277092dcecc2d8d2c840e6d2cedcc2e8eae4ca40d8cadccee8d60431b6044820152606401610422565b61098a8484610a1b565b6109d25760405162461bcd60e51b81526020600482015260196024820152782430b9b4103737ba1039b4b3b732b210313c9037bbb732b91760391b6044820152606401610422565b6109dd858383610fdf565b5060405182906001600160a01b038716907f79af0e59b31823dd289ceebabc4d63d25f35926b8548e3a084a500c9d4e1855690600090a35050505050565b6000610a278383610ff6565b9392505050565b602081810151604080840151606080860151835160008082528188018087528a905291821a81860181905292810186905260808101849052935190959293919260019260a080820193601f1981019281900390910190855afa158015610a98573d6000803e3d6000fd5b505050602060405103516001600160a01b0316876001600160a01b03161493505050509392505050565b610aca610ee1565b6001600160a01b038116610b2f5760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b6064820152608401610422565b61060081610f3b565b60006001600160a01b038316610b905760405162461bcd60e51b815260206004820152601760248201527f517565727920666f72207a65726f20616464726573732e0000000000000000006044820152606401610422565b610b9982610c4c565b610bdb5760405162461bcd60e51b81526020600482015260136024820152722737b716b2bc34b9ba32b73a103a37b5b2b71760691b6044820152606401610422565b826001600160a01b0316610bee83610603565b6001600160a01b031614610c445760405162461bcd60e51b815260206004820152601a60248201527f546f6b656e206e6f74206f776e656420627920616464726573730000000000006044820152606401610422565b503092915050565b6000908152600260205260409020546001600160a01b0316151590565b6000610c7482610c4c565b610cb65760405162461bcd60e51b81526020600482015260136024820152722737b716b2bc34b9ba32b73a103a37b5b2b71760691b6044820152606401610422565b826001600160a01b0316610cc983610603565b6001600160a01b031614610d1f5760405162461bcd60e51b815260206004820152601a60248201527f546f6b656e206e6f74206f776e656420627920616464726573730000000000006044820152606401610422565b610d2882611179565b50600192915050565b606081600003610d585750506040805180820190915260018152600360fc1b602082015290565b8160005b8115610d825780610d6c816117f9565b9150610d7b9050600a83611828565b9150610d5c565b60008167ffffffffffffffff811115610d9d57610d9d6114af565b6040519080825280601f01601f191660200182016040528015610dc7576020820181803683370190505b5090505b8415610e3257610ddc60018361183c565b9150610de9600a86611853565b610df4906030611867565b60f81b818381518110610e0957610e0961187f565b60200101906001600160f81b031916908160001a905350610e2b600a86611828565b9450610dcb565b949350505050565b6000610e4582610603565b6001600160a01b03811660009081526004602052604081208054929350600192909190610e7390849061183c565b9091555050600082815260026020908152604080832080546001600160a01b031916905560039091528120610ea7916113d4565b60405182906001600160a01b038316907fec9ab91322523c899ede7830ec9bfc992b5981cdcc27b91162fb23de5791117b90600090a35050565b6005546001600160a01b031633146107035760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401610422565b600580546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b8051600003610fcf5760405162461bcd60e51b815260206004820152600e60248201526d092dcecc2d8d2c840d8cadccee8d60931b6044820152606401610422565b6006610fdb82826118e3565b5050565b6000610fec84848461120f565b5060019392505050565b6000611000610ee1565b6005546001600160a01b0316331461106e5760405162461bcd60e51b815260206004820152602b60248201527f4552433732313a3a2043616c6c20746f20636f6e7472616374206d616465206260448201526a3c903737b716b7bbb732b960a91b6064820152608401610422565b81516041146110bf5760405162461bcd60e51b815260206004820152601e60248201527f4572723a3a20496e76616c6964207369676e6174757265206c656e67746800006044820152606401610422565b602082810151604080850151606080870151835160008082529681018086528a905290861a938101849052908101849052608081018290529293909260019060a0016020604051602081039080840390855afa158015611123573d6000803e3d6000fd5b5050604051601f198101516008549093506001600160a01b038085169116149150819089907f7e4fe2a2a805a357593fdbdde58c02f6a53d8b4960744cd31a98697fc11c2e3690600090a3979650505050505050565b61118281610c4c565b6111ce5760405162461bcd60e51b815260206004820152601860248201527f4275726e206f6620696e6578697374656e7420746f6b656e00000000000000006044820152606401610422565b60006111d982610603565b90506111e482610e3a565b6001600160a01b0316600090815260076020908152604080832093835292905220805460ff19169055565b6001600160a01b03831661125d5760405162461bcd60e51b815260206004820152601560248201527426b4b73a103a37903d32b9379030b2323932b9b99760591b6044820152606401610422565b80516000036112a05760405162461bcd60e51b815260206004820152600f60248201526e22b6b83a3c903a37b5b2b72aa9249760891b6044820152606401610422565b6112ab8383836112dd565b50506001600160a01b03909116600090815260076020908152604080832093835292905220805460ff19166001179055565b60006112e883610c4c565b1561132c5760405162461bcd60e51b81526020600482015260146024820152736d696e743a20746f6b656e49442065786973747360601b6044820152606401610422565b6001600160a01b0384166000908152600460205260408120805460019290611355908490611867565b9091555050600083815260026020908152604080832080546001600160a01b0319166001600160a01b0389161790556003909152902061139583826118e3565b5060405183906001600160a01b038616907fe9274a84b19e9428826de6bae8c48329354f8f0e73f771b97cae2d9dccd45a2790600090a3509092915050565b5080546113e09061177a565b6000825580601f106113f0575050565b601f01602090049060005260206000209081019061060091905b8082111561141e576000815560010161140a565b5090565b60006020828403121561143457600080fd5b81356001600160e01b031981168114610a2757600080fd5b60005b8381101561146757818101518382015260200161144f565b83811115611476576000848401525b50505050565b602081526000825180602084015261149b81604085016020870161144c565b601f01601f19169190910160400192915050565b634e487b7160e01b600052604160045260246000fd5b600082601f8301126114d657600080fd5b813567ffffffffffffffff808211156114f1576114f16114af565b604051601f8301601f19908116603f01168101908282118183101715611519576115196114af565b8160405283815286602085880101111561153257600080fd5b836020870160208301376000602085830101528094505050505092915050565b60008060006060848603121561156757600080fd5b83359250602084013567ffffffffffffffff81111561158557600080fd5b611591868287016114c5565b925050604084013590509250925092565b6000602082840312156115b457600080fd5b5035919050565b80356001600160a01b03811681146115d257600080fd5b919050565b600080604083850312156115ea57600080fd5b6115f3836115bb565b946020939093013593505050565b60006020828403121561161357600080fd5b610a27826115bb565b6000806040838503121561162f57600080fd5b611638836115bb565b9150602083013567ffffffffffffffff81111561165457600080fd5b611660858286016114c5565b9150509250929050565b600080600080600060a0868803121561168257600080fd5b61168b866115bb565b945060208601359350604086013567ffffffffffffffff808211156116af57600080fd5b6116bb89838a016114c5565b94506060880135935060808801359150808211156116d857600080fd5b506116e5888289016114c5565b9150509295509295909350565b6000806040838503121561170557600080fd5b82359150602083013567ffffffffffffffff81111561165457600080fd5b60008060006060848603121561173857600080fd5b611741846115bb565b925060208401359150604084013567ffffffffffffffff81111561176457600080fd5b611770868287016114c5565b9150509250925092565b600181811c9082168061178e57607f821691505b6020821081036117ae57634e487b7160e01b600052602260045260246000fd5b50919050565b600083516117c681846020880161144c565b8351908301906117da81836020880161144c565b01949350505050565b634e487b7160e01b600052601160045260246000fd5b60006001820161180b5761180b6117e3565b5060010190565b634e487b7160e01b600052601260045260246000fd5b60008261183757611837611812565b500490565b60008282101561184e5761184e6117e3565b500390565b60008261186257611862611812565b500690565b6000821982111561187a5761187a6117e3565b500190565b634e487b7160e01b600052603260045260246000fd5b601f82111561078057600081815260208120601f850160051c810160208610156118bc5750805b601f850160051c820191505b818110156118db578281556001016118c8565b505050505050565b815167ffffffffffffffff8111156118fd576118fd6114af565b6119118161190b845461177a565b84611895565b602080601f831160018114611946576000841561192e5750858301515b600019600386901b1c1916600185901b1785556118db565b600085815260208120601f198616915b8281101561197557888601518255948401946001909101908401611956565b50858210156119935787850151600019600388901b60f8161c191681555b5050505050600190811b0190555056fea2646970667358221220257b2380ac3f8ad974e3deec02de18f24c1048b8e48504f6ec8b827cd34b0bb164736f6c634300080f0033",
  "bytecodeSha1": "bbc4abd773aec7a24680fe6164bca2126f681eec",
  "compiler": {
    "evm_version": "istanbul",
    "optimizer": {
      "enabled": true,
      "runs": 200
    },
    "version": "0.8.15+commit.e14f2714"
  },
  "contractName": "SoulboundCore",
  "coverageMap": {
    "branches": {
      "0": {
        "Allowlist._verifySignature": {
          "88": [
            3699,
            3722,
            true
          ],
          "89": [
            3870,
            3886,
            true
          ]
        }
      },
      "2": {
        "Ownable._checkOwner": {
          "95": [
            1725,
            1748,
            true
          ]
        },
        "Ownable.transferOwnership": {
          "94": [
            2489,
            2511,
            true
          ]
        }
      },
      "3": {
        "Soulbound._getBaseURI": {
          "96": [
            7473,
            7499,
            true
          ]
        },
        "Soulbound._setBaseURI": {
          "102": [
            7071,
            7098,
            true
          ]
        },
        "Soulbound.burnSoulboundToken": {
          "103": [
            6489,
            6505,
            true
          ]
        },
        "Soulbound.issuerOf": {
          "97": [
            4425,
            4442,
            true
          ],
          "98": [
            4527,
            4544,
            true
          ],
          "99": [
            4637,
            4661,
            true
          ]
        },
        "Soulbound.mintSoulboundToken": {
          "104": [
            5746,
            5762,
            true
          ],
          "105": [
            5928,
            5955,
            true
          ]
        },
        "Soulbound.revoke": {
          "100": [
            3457,
            3474,
            true
          ],
          "101": [
            3569,
            3595,
            true
          ]
        }
      },
      "4": {
        "Allowlist.getAllowlistOwner": {
          "83": [
            1658,
            1688,
            true
          ]
        },
        "SoulboundCore.generateTokenURI": {
          "82": [
            6256,
            6288,
            true
          ]
        },
        "SoulboundCore.issueWithSignature": {
          "84": [
            3024,
            3042,
            true
          ],
          "85": [
            3303,
            3319,
            true
          ],
          "86": [
            3475,
            3501,
            true
          ]
        },
        "SoulboundCore.revokeWithSignature": {
          "79": [
            4414,
            4430,
            true
          ],
          "80": [
            4697,
            4713,
            true
          ],
          "81": [
            4869,
            4895,
            true
          ]
        },
        "SoulboundCore.toString": {
          "87": [
            6886,
            6896,
            false
          ]
        }
      },
      "7": {
        "ERC4973._mint": {
          "93": [
            5760,
            5777,
            true
          ]
        },
        "ERC4973.balanceOf": {
          "91": [
            5200,
            5219,
            true
          ]
        },
        "ERC4973.burn": {
          "90": [
            5015,
            5045,
            true
          ]
        },
        "ERC4973.tokenURI": {
          "92": [
            4855,
            4871,
            true
          ]
        }
      },
      "8": {}
    },
    "statements": {
      "0": {
        "Allowlist._verifySignature": {
          "62": [
            3678,
            3792
          ],
          "63": [
            3862,
            3921
          ],
          "64": [
            4348,
            4398
          ],
          "65": [
            4444,
            4473
          ]
        },
        "Allowlist.getAllowlistOwner": {
          "1": [
            2086,
            2107
          ]
        },
        "Allowlist.verifySignature": {
          "30": [
            2436,
            2470
          ]
        },
        "Allowlist.verifySigner": {
          "31": [
            4866,
            4910
          ]
        }
      },
      "2": {
        "Ownable._checkOwner": {
          "55": [
            1717,
            1785
          ]
        },
        "Ownable._msgSender": {
          "54": [
            3050,
            3067
          ]
        },
        "Ownable._transferOwnership": {
          "56": [
            2865,
            2882
          ],
          "57": [
            2892,
            2937
          ]
        },
        "Ownable.owner": {
          "2": [
            1571,
            1584
          ]
        },
        "Ownable.renounceOwnership": {
          "18": [
            2211,
            2241
          ]
        },
        "Ownable.transferOwnership": {
          "32": [
            2481,
            2554
          ],
          "33": [
            2564,
            2592
          ]
        }
      },
      "3": {
        "Soulbound._getBaseURI": {
          "23": [
            7465,
            7517
          ],
          "24": [
            7560,
            7578
          ]
        },
        "Soulbound._setBaseURI": {
          "58": [
            7063,
            7117
          ],
          "59": [
            7157,
            7175
          ]
        },
        "Soulbound.burnSoulboundToken": {
          "66": [
            6481,
            6534
          ],
          "67": [
            6670,
            6684
          ],
          "68": [
            6741,
            6776
          ]
        },
        "Soulbound.isMinted": {
          "0": [
            5268,
            5295
          ]
        },
        "Soulbound.issue": {
          "60": [
            2360,
            2451
          ],
          "61": [
            2491,
            2502
          ]
        },
        "Soulbound.issuerOf": {
          "34": [
            4417,
            4470
          ],
          "35": [
            4519,
            4568
          ],
          "36": [
            4629,
            4692
          ],
          "37": [
            4741,
            4761
          ]
        },
        "Soulbound.mintSoulboundToken": {
          "69": [
            5738,
            5788
          ],
          "70": [
            5920,
            5975
          ],
          "71": [
            6090,
            6118
          ],
          "72": [
            6174,
            6199
          ]
        },
        "Soulbound.revoke": {
          "39": [
            3449,
            3498
          ],
          "40": [
            3561,
            3626
          ],
          "41": [
            3669,
            3697
          ],
          "42": [
            3737,
            3748
          ]
        }
      },
      "4": {
        "SoulboundCore.generateTokenURI": {
          "11": [
            6248,
            6306
          ],
          "12": [
            6366,
            6470
          ]
        },
        "SoulboundCore.issueWithSignature": {
          "25": [
            3016,
            3068
          ],
          "26": [
            3295,
            3348
          ],
          "27": [
            3467,
            3531
          ],
          "28": [
            3630,
            3660
          ],
          "29": [
            3722,
            3760
          ]
        },
        "SoulboundCore.revokeWithSignature": {
          "6": [
            4406,
            4462
          ],
          "7": [
            4689,
            4742
          ],
          "8": [
            4861,
            4925
          ],
          "9": [
            5024,
            5057
          ],
          "10": [
            5120,
            5153
          ]
        },
        "SoulboundCore.setBaseURI": {
          "19": [
            5654,
            5675
          ]
        },
        "SoulboundCore.toString": {
          "43": [
            6912,
            6922
          ],
          "44": [
            7028,
            7036
          ],
          "45": [
            7050,
            7060
          ],
          "46": [
            7162,
            7173
          ],
          "47": [
            7187,
            7243
          ],
          "48": [
            7257,
            7268
          ],
          "49": [
            7288,
            7309
          ]
        }
      },
      "7": {
        "ERC165.supportsInterface": {
          "4": [
            1678,
            1725
          ]
        },
        "ERC4973._burn": {
          "50": [
            6037,
            6058
          ],
          "51": [
            6064,
            6087
          ],
          "52": [
            6093,
            6119
          ],
          "53": [
            6126,
            6153
          ]
        },
        "ERC4973._exists": {
          "38": [
            5586,
            5623
          ]
        },
        "ERC4973._mint": {
          "73": [
            5752,
            5802
          ],
          "74": [
            5808,
            5826
          ],
          "75": [
            5832,
            5853
          ],
          "76": [
            5859,
            5884
          ],
          "77": [
            5890,
            5914
          ],
          "78": [
            5920,
            5934
          ]
        },
        "ERC4973.balanceOf": {
          "16": [
            5192,
            5268
          ],
          "17": [
            5274,
            5297
          ]
        },
        "ERC4973.burn": {
          "13": [
            5007,
            5076
          ],
          "14": [
            5082,
            5096
          ]
        },
        "ERC4973.name": {
          "5": [
            4632,
            4644
          ]
        },
        "ERC4973.ownerOf": {
          "15": [
            5422,
            5482
          ]
        },
        "ERC4973.supportsInterface": {
          "3": [
            4390,
            4548
          ]
        },
        "ERC4973.symbol": {
          "20": [
            4730,
            4744
          ]
        },
        "ERC4973.tokenURI": {
          "21": [
            4847,
            4905
          ],
          "22": [
            4911,
            4937
          ]
        }
      },
      "8": {}
    }
  },
  "dependencies": [
    "Allowlist",
    "ERC165",
    "ERC4973",
    "IAllowlist",
    "IERC165",
    "IERC4973",
    "IERC721Metadata",
    "Ownable",
    "Soulbound"
  ],
  "deployedBytecode": "608060405234801561001057600080fd5b506004361061012c5760003560e01c806388433651116100ad578063c9e4c54d11610071578063c9e4c54d1461028e578063daca6f78146102a1578063e92b0842146102b4578063f2fde38b146102c7578063fb8f198d146102da57600080fd5b806388433651146102475780638da5cb5b1461025a57806395d89b411461026b578063c87b56dd14610273578063c9dd94c71461028657600080fd5b80635899e7b2116100f45780635899e7b2146101a95780636352211e146101e25780636e0a87461461020d57806370a082311461021e578063715018a61461023f57600080fd5b806301ffc9a71461013157806306fdde031461015957806308c92e571461016e578063210fa96b1461018357806342966c6814610196575b600080fd5b61014461013f366004611422565b6102ed565b60405190151581526020015b60405180910390f35b61016161033f565b604051610150919061147c565b61018161017c366004611552565b6103d1565b005b6101616101913660046115a2565b61050c565b6101816101a43660046115a2565b61058e565b6101446101b73660046115d7565b6001600160a01b03919091166000908152600760209081526040808320938352929052205460ff1690565b6101f56101f03660046115a2565b610603565b6040516001600160a01b039091168152602001610150565b6008546001600160a01b03166101f5565b61023161022c366004611601565b610668565b604051908152602001610150565b6101816106f1565b61018161025536600461161c565b610705565b6005546001600160a01b03166101f5565b610161610785565b6101616102813660046115a2565b610794565b610161610889565b61018161029c36600461166a565b6108e6565b6101446102af3660046116f2565b610a1b565b6101446102c2366004611723565b610a2e565b6101816102d5366004611601565b610ac2565b6101f56102e83660046115d7565b610b38565b60006001600160e01b03198216635b5e139f60e01b148061031e57506001600160e01b03198216635164cf4760e01b145b8061033957506301ffc9a760e01b6001600160e01b03198316145b92915050565b60606000805461034e9061177a565b80601f016020809104026020016040519081016040528092919081815260200182805461037a9061177a565b80156103c75780601f1061039c576101008083540402835291602001916103c7565b820191906000526020600020905b8154815290600101906020018083116103aa57829003601f168201915b5050505050905090565b6103da81610c4c565b61042b5760405162461bcd60e51b815260206004820152601b60248201527f5265766f6b65206f6620696e6578697374656e7420746f6b656e2e000000000060448201526064015b60405180910390fd5b81516041146104775760405162461bcd60e51b8152602060048201526018602482015277092dcecc2d8d2c840e6d2cedcc2e8eae4ca40d8cadccee8d60431b6044820152606401610422565b6104818383610a1b565b6104c95760405162461bcd60e51b81526020600482015260196024820152782430b9b4103737ba1039b4b3b732b210313c9037bbb732b91760391b6044820152606401610422565b6104db6104d582610603565b82610c69565b5060405181907ff947bf2266afede98f27ad2312db8b2a17921852307f979b6f14a2b41fa774bc90600090a2505050565b6060610516610889565b516000036105565760405162461bcd60e51b815260206004820152600d60248201526c456d707479206261736555524960981b6044820152606401610422565b61055e610889565b61056783610d31565b6040516020016105789291906117b4565b6040516020818303038152906040529050919050565b61059781610603565b6001600160a01b0316336001600160a01b0316146105f75760405162461bcd60e51b815260206004820152601a60248201527f6275726e3a2073656e646572206d757374206265206f776e65720000000000006044820152606401610422565b61060081610e3a565b50565b6000818152600260205260408120546001600160a01b0316806103395760405162461bcd60e51b815260206004820152601c60248201527f6f776e65724f663a20746f6b656e20646f65736e2774206578697374000000006044820152606401610422565b60006001600160a01b0382166106d55760405162461bcd60e51b815260206004820152602c60248201527f62616c616e63654f663a2061646472657373207a65726f206973206e6f74206160448201526b103b30b634b21037bbb732b960a11b6064820152608401610422565b506001600160a01b031660009081526004602052604090205490565b6106f9610ee1565b6107036000610f3b565b565b61070d610ee1565b816107206008546001600160a01b031690565b6001600160a01b0316816001600160a01b0316146107775760405162461bcd60e51b81526020600482015260146024820152734e6f7420416c6c6f776c697374204f776e65722160601b6044820152606401610422565b61078082610f8d565b505050565b60606001805461034e9061177a565b606061079f82610c4c565b6107eb5760405162461bcd60e51b815260206004820152601d60248201527f746f6b656e5552493a20746f6b656e20646f65736e27742065786973740000006044820152606401610422565b600082815260036020526040902080546108049061177a565b80601f01602080910402602001604051908101604052809291908181526020018280546108309061177a565b801561087d5780601f106108525761010080835404028352916020019161087d565b820191906000526020600020905b81548152906001019060200180831161086057829003601f168201915b50505050509050919050565b6060600680546108989061177a565b90506000036108d95760405162461bcd60e51b815260206004820152600d60248201526c456d707479206261736555524960981b6044820152606401610422565b6006805461034e9061177a565b6001600160a01b0385166109345760405162461bcd60e51b815260206004820152601560248201527426b4b73a103a37903d32b9379030b2323932b9b99760591b6044820152606401610422565b82516041146109805760405162461bcd60e51b8152602060048201526018602482015277092dcecc2d8d2c840e6d2cedcc2e8eae4ca40d8cadccee8d60431b6044820152606401610422565b61098a8484610a1b565b6109d25760405162461bcd60e51b81526020600482015260196024820152782430b9b4103737ba1039b4b3b732b210313c9037bbb732b91760391b6044820152606401610422565b6109dd858383610fdf565b5060405182906001600160a01b038716907f79af0e59b31823dd289ceebabc4d63d25f35926b8548e3a084a500c9d4e1855690600090a35050505050565b6000610a278383610ff6565b9392505050565b602081810151604080840151606080860151835160008082528188018087528a905291821a81860181905292810186905260808101849052935190959293919260019260a080820193601f1981019281900390910190855afa158015610a98573d6000803e3d6000fd5b505050602060405103516001600160a01b0316876001600160a01b03161493505050509392505050565b610aca610ee1565b6001600160a01b038116610b2f5760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b6064820152608401610422565b61060081610f3b565b60006001600160a01b038316610b905760405162461bcd60e51b815260206004820152601760248201527f517565727920666f72207a65726f20616464726573732e0000000000000000006044820152606401610422565b610b9982610c4c565b610bdb5760405162461bcd60e51b81526020600482015260136024820152722737b716b2bc34b9ba32b73a103a37b5b2b71760691b6044820152606401610422565b826001600160a01b0316610bee83610603565b6001600160a01b031614610c445760405162461bcd60e51b815260206004820152601a60248201527f546f6b656e206e6f74206f776e656420627920616464726573730000000000006044820152606401610422565b503092915050565b6000908152600260205260409020546001600160a01b0316151590565b6000610c7482610c4c565b610cb65760405162461bcd60e51b81526020600482015260136024820152722737b716b2bc34b9ba32b73a103a37b5b2b71760691b6044820152606401610422565b826001600160a01b0316610cc983610603565b6001600160a01b031614610d1f5760405162461bcd60e51b815260206004820152601a60248201527f546f6b656e206e6f74206f776e656420627920616464726573730000000000006044820152606401610422565b610d2882611179565b50600192915050565b606081600003610d585750506040805180820190915260018152600360fc1b602082015290565b8160005b8115610d825780610d6c816117f9565b9150610d7b9050600a83611828565b9150610d5c565b60008167ffffffffffffffff811115610d9d57610d9d6114af565b6040519080825280601f01601f191660200182016040528015610dc7576020820181803683370190505b5090505b8415610e3257610ddc60018361183c565b9150610de9600a86611853565b610df4906030611867565b60f81b818381518110610e0957610e0961187f565b60200101906001600160f81b031916908160001a905350610e2b600a86611828565b9450610dcb565b949350505050565b6000610e4582610603565b6001600160a01b03811660009081526004602052604081208054929350600192909190610e7390849061183c565b9091555050600082815260026020908152604080832080546001600160a01b031916905560039091528120610ea7916113d4565b60405182906001600160a01b038316907fec9ab91322523c899ede7830ec9bfc992b5981cdcc27b91162fb23de5791117b90600090a35050565b6005546001600160a01b031633146107035760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401610422565b600580546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b8051600003610fcf5760405162461bcd60e51b815260206004820152600e60248201526d092dcecc2d8d2c840d8cadccee8d60931b6044820152606401610422565b6006610fdb82826118e3565b5050565b6000610fec84848461120f565b5060019392505050565b6000611000610ee1565b6005546001600160a01b0316331461106e5760405162461bcd60e51b815260206004820152602b60248201527f4552433732313a3a2043616c6c20746f20636f6e7472616374206d616465206260448201526a3c903737b716b7bbb732b960a91b6064820152608401610422565b81516041146110bf5760405162461bcd60e51b815260206004820152601e60248201527f4572723a3a20496e76616c6964207369676e6174757265206c656e67746800006044820152606401610422565b602082810151604080850151606080870151835160008082529681018086528a905290861a938101849052908101849052608081018290529293909260019060a0016020604051602081039080840390855afa158015611123573d6000803e3d6000fd5b5050604051601f198101516008549093506001600160a01b038085169116149150819089907f7e4fe2a2a805a357593fdbdde58c02f6a53d8b4960744cd31a98697fc11c2e3690600090a3979650505050505050565b61118281610c4c565b6111ce5760405162461bcd60e51b815260206004820152601860248201527f4275726e206f6620696e6578697374656e7420746f6b656e00000000000000006044820152606401610422565b60006111d982610603565b90506111e482610e3a565b6001600160a01b0316600090815260076020908152604080832093835292905220805460ff19169055565b6001600160a01b03831661125d5760405162461bcd60e51b815260206004820152601560248201527426b4b73a103a37903d32b9379030b2323932b9b99760591b6044820152606401610422565b80516000036112a05760405162461bcd60e51b815260206004820152600f60248201526e22b6b83a3c903a37b5b2b72aa9249760891b6044820152606401610422565b6112ab8383836112dd565b50506001600160a01b03909116600090815260076020908152604080832093835292905220805460ff19166001179055565b60006112e883610c4c565b1561132c5760405162461bcd60e51b81526020600482015260146024820152736d696e743a20746f6b656e49442065786973747360601b6044820152606401610422565b6001600160a01b0384166000908152600460205260408120805460019290611355908490611867565b9091555050600083815260026020908152604080832080546001600160a01b0319166001600160a01b0389161790556003909152902061139583826118e3565b5060405183906001600160a01b038616907fe9274a84b19e9428826de6bae8c48329354f8f0e73f771b97cae2d9dccd45a2790600090a3509092915050565b5080546113e09061177a565b6000825580601f106113f0575050565b601f01602090049060005260206000209081019061060091905b8082111561141e576000815560010161140a565b5090565b60006020828403121561143457600080fd5b81356001600160e01b031981168114610a2757600080fd5b60005b8381101561146757818101518382015260200161144f565b83811115611476576000848401525b50505050565b602081526000825180602084015261149b81604085016020870161144c565b601f01601f19169190910160400192915050565b634e487b7160e01b600052604160045260246000fd5b600082601f8301126114d657600080fd5b813567ffffffffffffffff808211156114f1576114f16114af565b604051601f8301601f19908116603f01168101908282118183101715611519576115196114af565b8160405283815286602085880101111561153257600080fd5b836020870160208301376000602085830101528094505050505092915050565b60008060006060848603121561156757600080fd5b83359250602084013567ffffffffffffffff81111561158557600080fd5b611591868287016114c5565b925050604084013590509250925092565b6000602082840312156115b457600080fd5b5035919050565b80356001600160a01b03811681146115d257600080fd5b919050565b600080604083850312156115ea57600080fd5b6115f3836115bb565b946020939093013593505050565b60006020828403121561161357600080fd5b610a27826115bb565b6000806040838503121561162f57600080fd5b611638836115bb565b9150602083013567ffffffffffffffff81111561165457600080fd5b611660858286016114c5565b9150509250929050565b600080600080600060a0868803121561168257600080fd5b61168b866115bb565b945060208601359350604086013567ffffffffffffffff808211156116af57600080fd5b6116bb89838a016114c5565b94506060880135935060808801359150808211156116d857600080fd5b506116e5888289016114c5565b9150509295509295909350565b6000806040838503121561170557600080fd5b82359150602083013567ffffffffffffffff81111561165457600080fd5b60008060006060848603121561173857600080fd5b611741846115bb565b925060208401359150604084013567ffffffffffffffff81111561176457600080fd5b611770868287016114c5565b9150509250925092565b600181811c9082168061178e57607f821691505b6020821081036117ae57634e487b7160e01b600052602260045260246000fd5b50919050565b600083516117c681846020880161144c565b8351908301906117da81836020880161144c565b01949350505050565b634e487b7160e01b600052601160045260246000fd5b60006001820161180b5761180b6117e3565b5060010190565b634e487b7160e01b600052601260045260246000fd5b60008261183757611837611812565b500490565b60008282101561184e5761184e6117e3565b500390565b60008261186257611862611812565b500690565b6000821982111561187a5761187a6117e3565b500190565b634e487b7160e01b600052603260045260246000fd5b601f82111561078057600081815260208120601f850160051c810160208610156118bc5750805b601f850160051c820191505b818110156118db578281556001016118c8565b505050505050565b815167ffffffffffffffff8111156118fd576118fd6114af565b6119118161190b845461177a565b84611895565b602080601f831160018114611946576000841561192e5750858301515b600019600386901b1c1916600185901b1785556118db565b600085815260208120601f198616915b8281101561197557888601518255948401946001909101908401611956565b50858210156119935787850151600019600388901b60f8161c191681555b5050505050600190811b0190555056fea2646970667358221220257b2380ac3f8ad974e3deec02de18f24c1048b8e48504f6ec8b827cd34b0bb164736f6c634300080f0033",
  "deployedSourceMap": "820:6499:4:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4293:260:7;;;;;;:::i;:::-;;:::i;:::-;;;470:14:10;;463:22;445:41;;433:2;418:18;4293:260:7;;;;;;;;4557:92;;;:::i;:::-;;;;;;;:::i;4229:931:4:-;;;;;;:::i;:::-;;:::i;:::-;;6072:405;;;;;;:::i;:::-;;:::i;4946:155:7:-;;;;;;:::i;:::-;;:::i;5160:142:3:-;;;;;;:::i;:::-;-1:-1:-1;;;;;5275:10:3;;;;5252:4;5275:10;;;:5;:10;;;;;;;;:20;;;;;;;;;;;5160:142;5306:199:7;;;;;;:::i;:::-;;:::i;:::-;;;-1:-1:-1;;;;;3250:32:10;;;3232:51;;3220:2;3205:18;5306:199:7;3086:203:10;2018:96:0;2093:14;;-1:-1:-1;;;;;2093:14:0;2018:96;;5105:197:7;;;;;;:::i;:::-;;:::i;:::-;;;3631:25:10;;;3619:2;3604:18;5105:197:7;3485:177:10;2147:101:2;;;:::i;5491:191:4:-;;;;;;:::i;:::-;;:::i;1506:85:2:-;1578:6;;-1:-1:-1;;;;;1578:6:2;1506:85;;4653:96:7;;;:::i;4753:189::-;;;;;;:::i;:::-;;:::i;7338:247:3:-;;;:::i;2769:998:4:-;;;;;;:::i;:::-;;:::i;2334:143:0:-;;;;;;:::i;:::-;;:::i;4649:268::-;;;;;;:::i;:::-;;:::i;2401:198:2:-;;;;;;:::i;:::-;;:::i;4277:491:3:-;;;;;;:::i;:::-;;:::i;4293:260:7:-;4378:4;-1:-1:-1;;;;;;4403:48:7;;-1:-1:-1;;;4403:48:7;;:99;;-1:-1:-1;;;;;;;4461:41:7;;-1:-1:-1;;;4461:41:7;4403:99;:145;;;-1:-1:-1;;;;;;;;;;1685:40:7;;;4512:36;4390:158;4293:260;-1:-1:-1;;4293:260:7:o;4557:92::-;4611:13;4639:5;4632:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4557:92;:::o;4229:931:4:-;4414:16;4422:7;4414;:16::i;:::-;4406:56;;;;-1:-1:-1;;;4406:56:4;;6271:2:10;4406:56:4;;;6253:21:10;6310:2;6290:18;;;6283:30;6349:29;6329:18;;;6322:57;6396:18;;4406:56:4;;;;;;;;;4697:3;:10;4711:2;4697:16;4689:53;;;;-1:-1:-1;;;4689:53:4;;6969:2:10;4689:53:4;;;6951:21:10;7008:2;6988:18;;;6981:30;-1:-1:-1;;;7027:18:10;;;7020:54;7091:18;;4689:53:4;6767:348:10;4689:53:4;4869:26;4885:4;4891:3;4869:15;:26::i;:::-;4861:64;;;;-1:-1:-1;;;4861:64:4;;7322:2:10;4861:64:4;;;7304:21:10;7361:2;7341:18;;;7334:30;-1:-1:-1;;;7380:18:10;;;7373:55;7445:18;;4861:64:4;7120:349:10;4861:64:4;5024:33;5031:16;5039:7;5031;:16::i;:::-;5049:7;5024:6;:33::i;:::-;-1:-1:-1;5125:28:4;;5145:7;;5125:28;;;;;4229:931;;;:::o;6072:405::-;6149:23;6262:13;:11;:13::i;:::-;6256:27;6287:1;6256:32;6248:58;;;;-1:-1:-1;;;6248:58:4;;7676:2:10;6248:58:4;;;7658:21:10;7715:2;7695:18;;;7688:30;-1:-1:-1;;;7734:18:10;;;7727:43;7787:18;;6248:58:4;7474:337:10;6248:58:4;6415:13;:11;:13::i;:::-;6442:17;6451:7;6442:8;:17::i;:::-;6385:84;;;;;;;;;:::i;:::-;;;;;;;;;;;;;6366:104;;6072:405;;;:::o;4946:155:7:-;5029:16;5037:7;5029;:16::i;:::-;-1:-1:-1;;;;;5015:30:7;:10;-1:-1:-1;;;;;5015:30:7;;5007:69;;;;-1:-1:-1;;;5007:69:7;;8493:2:10;5007:69:7;;;8475:21:10;8532:2;8512:18;;;8505:30;8571:28;8551:18;;;8544:56;8617:18;;5007:69:7;8291:350:10;5007:69:7;5082:14;5088:7;5082:5;:14::i;:::-;4946:155;:::o;5306:199::-;5369:7;5400:16;;;:7;:16;;;;;;-1:-1:-1;;;;;5400:16:7;;5422:60;;;;-1:-1:-1;;;5422:60:7;;8848:2:10;5422:60:7;;;8830:21:10;8887:2;8867:18;;;8860:30;8926;8906:18;;;8899:58;8974:18;;5422:60:7;8646:352:10;5105:197:7;5177:7;-1:-1:-1;;;;;5200:19:7;;5192:76;;;;-1:-1:-1;;;5192:76:7;;9205:2:10;5192:76:7;;;9187:21:10;9244:2;9224:18;;;9217:30;9283:34;9263:18;;;9256:62;-1:-1:-1;;;9334:18:10;;;9327:42;9386:19;;5192:76:7;9003:408:10;5192:76:7;-1:-1:-1;;;;;;5281:16:7;;;;;:9;:16;;;;;;;5105:197::o;2147:101:2:-;1401:13;:11;:13::i;:::-;2211:30:::1;2238:1;2211:18;:30::i;:::-;2147:101::o:0;5491:191:4:-;1401:13:2;:11;:13::i;:::-;5602:6:4::1;1669:19;2093:14:0::0;;-1:-1:-1;;;;;2093:14:0;;2018:96;1669:19:4::1;-1:-1:-1::0;;;;;1658:30:4::1;:7;-1:-1:-1::0;;;;;1658:30:4::1;;1650:63;;;::::0;-1:-1:-1;;;1650:63:4;;9618:2:10;1650:63:4::1;::::0;::::1;9600:21:10::0;9657:2;9637:18;;;9630:30;-1:-1:-1;;;9676:18:10;;;9669:50;9736:18;;1650:63:4::1;9416:344:10::0;1650:63:4::1;5654:21:::2;5666:8;5654:11;:21::i;:::-;1424:1:2::1;5491:191:4::0;;:::o;4653:96:7:-;4709:13;4737:7;4730:14;;;;;:::i;4753:189::-;4826:13;4855:16;4863:7;4855;:16::i;:::-;4847:58;;;;-1:-1:-1;;;4847:58:7;;9967:2:10;4847:58:7;;;9949:21:10;10006:2;9986:18;;;9979:30;10045:31;10025:18;;;10018:59;10094:18;;4847:58:7;9765:353:10;4847:58:7;4918:19;;;;:10;:19;;;;;4911:26;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4753:189;;;:::o;7338:247:3:-;7381:22;7479:7;7473:21;;;;;:::i;:::-;;;7498:1;7473:26;7465:52;;;;-1:-1:-1;;;7465:52:3;;7676:2:10;7465:52:3;;;7658:21:10;7715:2;7695:18;;;7688:30;-1:-1:-1;;;7734:18:10;;;7727:43;7787:18;;7465:52:3;7474:337:10;7465:52:3;7571:7;7560:18;;;;;:::i;2769:998:4:-;-1:-1:-1;;;;;3024:18:4;;3016:52;;;;-1:-1:-1;;;3016:52:4;;10325:2:10;3016:52:4;;;10307:21:10;10364:2;10344:18;;;10337:30;-1:-1:-1;;;10383:18:10;;;10376:51;10444:18;;3016:52:4;10123:345:10;3016:52:4;3303:3;:10;3317:2;3303:16;3295:53;;;;-1:-1:-1;;;3295:53:4;;6969:2:10;3295:53:4;;;6951:21:10;7008:2;6988:18;;;6981:30;-1:-1:-1;;;7027:18:10;;;7020:54;7091:18;;3295:53:4;6767:348:10;3295:53:4;3475:26;3491:4;3497:3;3475:15;:26::i;:::-;3467:64;;;;-1:-1:-1;;;3467:64:4;;7322:2:10;3467:64:4;;;7304:21:10;7361:2;7341:18;;;7334:30;-1:-1:-1;;;7380:18:10;;;7373:55;7445:18;;3467:64:4;7120:349:10;3467:64:4;3630:30;3636:4;3642:7;3651:8;3630:5;:30::i;:::-;-1:-1:-1;3727:33:4;;3752:7;;-1:-1:-1;;;;;3727:33:4;;;;;;;;2769:998;;;;;:::o;2334:143:0:-;2416:4;2443:27;2460:4;2466:3;2443:16;:27::i;:::-;2436:34;2334:143;-1:-1:-1;;;2334:143:0:o;4649:268::-;5808:2;5799:12;;;5793:19;5883:2;5874:12;;;5868:19;5995:2;5986:12;;;5980:19;4884:25;;4780:4;4884:25;;;;;;;;;10700::10;;;5972:28:0;;;10741:18:10;;;10734:45;;;10795:18;;;10788:34;;;10838:18;;;10831:34;;;4884:25:0;;4780:4;;5868:19;;5972:28;;4884:25;;10672:19:10;;;;;-1:-1:-1;;4884:25:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;4873:36:0;:7;-1:-1:-1;;;;;4873:36:0;;4866:44;;;;;4649:268;;;;;:::o;2401:198:2:-;1401:13;:11;:13::i;:::-;-1:-1:-1;;;;;2489:22:2;::::1;2481:73;;;::::0;-1:-1:-1;;;2481:73:2;;11078:2:10;2481:73:2::1;::::0;::::1;11060:21:10::0;11117:2;11097:18;;;11090:30;11156:34;11136:18;;;11129:62;-1:-1:-1;;;11207:18:10;;;11200:36;11253:19;;2481:73:2::1;10876:402:10::0;2481:73:2::1;2564:28;2583:8;2564:18;:28::i;4277:491:3:-:0;4346:7;-1:-1:-1;;;;;4425:17:3;;4417:53;;;;-1:-1:-1;;;4417:53:3;;11485:2:10;4417:53:3;;;11467:21:10;11524:2;11504:18;;;11497:30;11563:25;11543:18;;;11536:53;11606:18;;4417:53:3;11283:347:10;4417:53:3;4527:17;4535:8;4527:7;:17::i;:::-;4519:49;;;;-1:-1:-1;;;4519:49:3;;11837:2:10;4519:49:3;;;11819:21:10;11876:2;11856:18;;;11849:30;-1:-1:-1;;;11895:18:10;;;11888:49;11954:18;;4519:49:3;11635:343:10;4519:49:3;4658:3;-1:-1:-1;;;;;4637:24:3;:17;4645:8;4637:7;:17::i;:::-;-1:-1:-1;;;;;4637:24:3;;4629:63;;;;-1:-1:-1;;;4629:63:3;;12185:2:10;4629:63:3;;;12167:21:10;12224:2;12204:18;;;12197:30;12263:28;12243:18;;;12236:56;12309:18;;4629:63:3;11983:350:10;4629:63:3;-1:-1:-1;4756:4:3;4277:491;;;;:::o;5509:119:7:-;5574:4;5593:16;;;:7;:16;;;;;;-1:-1:-1;;;;;5593:16:7;:30;;;5509:119::o;3328:427:3:-;3394:4;3457:17;3465:8;3457:7;:17::i;:::-;3449:49;;;;-1:-1:-1;;;3449:49:3;;11837:2:10;3449:49:3;;;11819:21:10;11876:2;11856:18;;;11849:30;-1:-1:-1;;;11895:18:10;;;11888:49;11954:18;;3449:49:3;11635:343:10;3449:49:3;3590:5;-1:-1:-1;;;;;3569:26:3;:17;3577:8;3569:7;:17::i;:::-;-1:-1:-1;;;;;3569:26:3;;3561:65;;;;-1:-1:-1;;;3561:65:3;;12185:2:10;3561:65:3;;;12167:21:10;12224:2;12204:18;;;12197:30;12263:28;12243:18;;;12236:56;12309:18;;3561:65:3;11983:350:10;3561:65:3;3669:28;3688:8;3669:18;:28::i;:::-;-1:-1:-1;3744:4:3;3328:427;;;;:::o;6613:703:4:-;6669:13;6886:5;6895:1;6886:10;6882:51;;-1:-1:-1;;6912:10:4;;;;;;;;;;;;-1:-1:-1;;;6912:10:4;;;;;6613:703::o;6882:51::-;6957:5;6942:12;6996:75;7003:9;;6996:75;;7028:8;;;;:::i;:::-;;-1:-1:-1;7050:10:4;;-1:-1:-1;7058:2:4;7050:10;;:::i;:::-;;;6996:75;;;7080:19;7112:6;7102:17;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;7102:17:4;;7080:39;;7129:150;7136:10;;7129:150;;7162:11;7172:1;7162:11;;:::i;:::-;;-1:-1:-1;7230:10:4;7238:2;7230:5;:10;:::i;:::-;7217:24;;:2;:24;:::i;:::-;7204:39;;7187:6;7194;7187:14;;;;;;;;:::i;:::-;;;;:56;-1:-1:-1;;;;;7187:56:4;;;;;;;;-1:-1:-1;7257:11:4;7266:2;7257:11;;:::i;:::-;;;7129:150;;;7302:6;6613:703;-1:-1:-1;;;;6613:703:4:o;5943:215:7:-;5998:13;6014:16;6022:7;6014;:16::i;:::-;-1:-1:-1;;;;;6037:16:7;;;;;;:9;:16;;;;;:21;;5998:32;;-1:-1:-1;6057:1:7;;6037:16;;;:21;;6057:1;;6037:21;:::i;:::-;;;;-1:-1:-1;;6071:16:7;;;;:7;:16;;;;;;;;6064:23;;-1:-1:-1;;;;;;6064:23:7;;;6100:10;:19;;;;;6093:26;;;:::i;:::-;6131:22;;6145:7;;-1:-1:-1;;;;;6131:22:7;;;;;;;;5992:166;5943:215;:::o;1662:130:2:-;1578:6;;-1:-1:-1;;;;;1578:6:2;3057:10;1725:23;1717:68;;;;-1:-1:-1;;;1717:68:2;;13581:2:10;1717:68:2;;;13563:21:10;;;13600:18;;;13593:30;13659:34;13639:18;;;13632:62;13711:18;;1717:68:2;13379:356:10;2757:187:2;2849:6;;;-1:-1:-1;;;;;2865:17:2;;;-1:-1:-1;;;;;;2865:17:2;;;;;;;2897:40;;2849:6;;;2865:17;2849:6;;2897:40;;2830:16;;2897:40;2820:124;2757:187;:::o;6948:234:3:-;7077:8;7071:22;7097:1;7071:27;7063:54;;;;-1:-1:-1;;;7063:54:3;;13942:2:10;7063:54:3;;;13924:21:10;13981:2;13961:18;;;13954:30;-1:-1:-1;;;14000:18:10;;;13993:44;14054:18;;7063:54:3;13740:338:10;7063:54:3;7157:7;:18;7167:8;7157:7;:18;:::i;:::-;;6948:234;:::o;2151:358::-;2270:4;2360:91;2392:3;2410:8;2433;2360:18;:91::i;:::-;-1:-1:-1;2498:4:3;2151:358;;;;;:::o;3437:1043:0:-;3534:4;1401:13:2;:11;:13::i;:::-;1578:6;;-1:-1:-1;;;;;1578:6:2;3057:10;3699:23:0::1;3678:114;;;::::0;-1:-1:-1;;;3678:114:0;;16489:2:10;3678:114:0::1;::::0;::::1;16471:21:10::0;16528:2;16508:18;;;16501:30;16567:34;16547:18;;;16540:62;-1:-1:-1;;;16618:18:10;;;16611:41;16669:19;;3678:114:0::1;16287:407:10::0;3678:114:0::1;3870:3;:10;3884:2;3870:16;3862:59;;;::::0;-1:-1:-1;;;3862:59:0;;16901:2:10;3862:59:0::1;::::0;::::1;16883:21:10::0;16940:2;16920:18;;;16913:30;16979:32;16959:18;;;16952:60;17029:18;;3862:59:0::1;16699:354:10::0;3862:59:0::1;5808:2:::0;5799:12;;;5793:19;5883:2;5874:12;;;5868:19;5995:2;5986:12;;;5980:19;4134:24;;4000:9:::1;4134:24:::0;;;;;::::1;::::0;;;10700:25:10;;;5972:28:0;;;10741:18:10;;;10734:45;;;10795:18;;;10788:34;;;10838:18;;;10831:34;;;5793:19:0;;5868;;4134:24:::1;::::0;10672:19:10;;4134:24:0::1;;;;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;-1:-1:-1::0;;4134:24:0::1;::::0;-1:-1:-1;;4134:24:0;;;4272:14:::1;::::0;4134:24;;-1:-1:-1;;;;;;4262:24:0;;::::1;4272:14:::0;::::1;4262:24;::::0;-1:-1:-1;4262:24:0;;4369:4;;4353:45:::1;::::0;4231:27:::1;::::0;4353:45:::1;4451:22:::0;3437:1043;-1:-1:-1;;;;;;;3437:1043:0:o;6362:421:3:-;6489:16;6497:7;6489;:16::i;:::-;6481:53;;;;-1:-1:-1;;;6481:53:3;;17260:2:10;6481:53:3;;;17242:21:10;17299:2;17279:18;;;17272:30;17338:26;17318:18;;;17311:54;17382:18;;6481:53:3;17058:348:10;6481:53:3;6589:19;6611:16;6619:7;6611;:16::i;:::-;6589:38;;6670:14;6676:7;6670:5;:14::i;:::-;-1:-1:-1;;;;;6741:18:3;6771:5;6741:18;;;:5;:18;;;;;;;;:27;;;;;;;:35;;-1:-1:-1;;6741:35:3;;;6362:421::o;5532:674::-;-1:-1:-1;;;;;5746:16:3;;5738:50;;;;-1:-1:-1;;;5738:50:3;;10325:2:10;5738:50:3;;;10307:21:10;10364:2;10344:18;;;10337:30;-1:-1:-1;;;10383:18:10;;;10376:51;10444:18;;5738:50:3;10123:345:10;5738:50:3;5934:8;5928:22;5954:1;5928:27;5920:55;;;;-1:-1:-1;;;5920:55:3;;17613:2:10;5920:55:3;;;17595:21:10;17652:2;17632:18;;;17625:30;-1:-1:-1;;;17671:18:10;;;17664:45;17726:18;;5920:55:3;17411:339:10;5920:55:3;6090:28;6096:2;6100:7;6109:8;6090:5;:28::i;:::-;-1:-1:-1;;;;;;;6174:9:3;;;;;;;:5;:9;;;;;;;;:18;;;;;;;:25;;-1:-1:-1;;6174:25:3;6195:4;6174:25;;;5532:674::o;5632:307:7:-;5737:7;5761:16;5769:7;5761;:16::i;:::-;5760:17;5752:50;;;;-1:-1:-1;;;5752:50:7;;17957:2:10;5752:50:7;;;17939:21:10;17996:2;17976:18;;;17969:30;-1:-1:-1;;;18015:18:10;;;18008:50;18075:18;;5752:50:7;17755:344:10;5752:50:7;-1:-1:-1;;;;;5808:13:7;;;;;;:9;:13;;;;;:18;;5825:1;;5808:13;:18;;5825:1;;5808:18;:::i;:::-;;;;-1:-1:-1;;5832:16:7;;;;:7;:16;;;;;;;;:21;;-1:-1:-1;;;;;;5832:21:7;-1:-1:-1;;;;;5832:21:7;;;;;5859:10;:19;;;;;:25;5881:3;5859:19;:25;:::i;:::-;-1:-1:-1;5895:19:7;;5906:7;;-1:-1:-1;;;;;5895:19:7;;;;;;;;-1:-1:-1;5927:7:7;;5632:307;-1:-1:-1;;5632:307:7:o;-1:-1:-1:-;;;;;;;:::i;:::-;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;14:286:10:-;72:6;125:2;113:9;104:7;100:23;96:32;93:52;;;141:1;138;131:12;93:52;167:23;;-1:-1:-1;;;;;;219:32:10;;209:43;;199:71;;266:1;263;256:12;497:258;569:1;579:113;593:6;590:1;587:13;579:113;;;669:11;;;663:18;650:11;;;643:39;615:2;608:10;579:113;;;710:6;707:1;704:13;701:48;;;745:1;736:6;731:3;727:16;720:27;701:48;;497:258;;;:::o;760:383::-;909:2;898:9;891:21;872:4;941:6;935:13;984:6;979:2;968:9;964:18;957:34;1000:66;1059:6;1054:2;1043:9;1039:18;1034:2;1026:6;1022:15;1000:66;:::i;:::-;1127:2;1106:15;-1:-1:-1;;1102:29:10;1087:45;;;;1134:2;1083:54;;760:383;-1:-1:-1;;760:383:10:o;1148:127::-;1209:10;1204:3;1200:20;1197:1;1190:31;1240:4;1237:1;1230:15;1264:4;1261:1;1254:15;1280:718;1322:5;1375:3;1368:4;1360:6;1356:17;1352:27;1342:55;;1393:1;1390;1383:12;1342:55;1429:6;1416:20;1455:18;1492:2;1488;1485:10;1482:36;;;1498:18;;:::i;:::-;1573:2;1567:9;1541:2;1627:13;;-1:-1:-1;;1623:22:10;;;1647:2;1619:31;1615:40;1603:53;;;1671:18;;;1691:22;;;1668:46;1665:72;;;1717:18;;:::i;:::-;1757:10;1753:2;1746:22;1792:2;1784:6;1777:18;1838:3;1831:4;1826:2;1818:6;1814:15;1810:26;1807:35;1804:55;;;1855:1;1852;1845:12;1804:55;1919:2;1912:4;1904:6;1900:17;1893:4;1885:6;1881:17;1868:54;1966:1;1959:4;1954:2;1946:6;1942:15;1938:26;1931:37;1986:6;1977:15;;;;;;1280:718;;;;:::o;2003:456::-;2089:6;2097;2105;2158:2;2146:9;2137:7;2133:23;2129:32;2126:52;;;2174:1;2171;2164:12;2126:52;2210:9;2197:23;2187:33;;2271:2;2260:9;2256:18;2243:32;2298:18;2290:6;2287:30;2284:50;;;2330:1;2327;2320:12;2284:50;2353:49;2394:7;2385:6;2374:9;2370:22;2353:49;:::i;:::-;2343:59;;;2449:2;2438:9;2434:18;2421:32;2411:42;;2003:456;;;;;:::o;2464:180::-;2523:6;2576:2;2564:9;2555:7;2551:23;2547:32;2544:52;;;2592:1;2589;2582:12;2544:52;-1:-1:-1;2615:23:10;;2464:180;-1:-1:-1;2464:180:10:o;2649:173::-;2717:20;;-1:-1:-1;;;;;2766:31:10;;2756:42;;2746:70;;2812:1;2809;2802:12;2746:70;2649:173;;;:::o;2827:254::-;2895:6;2903;2956:2;2944:9;2935:7;2931:23;2927:32;2924:52;;;2972:1;2969;2962:12;2924:52;2995:29;3014:9;2995:29;:::i;:::-;2985:39;3071:2;3056:18;;;;3043:32;;-1:-1:-1;;;2827:254:10:o;3294:186::-;3353:6;3406:2;3394:9;3385:7;3381:23;3377:32;3374:52;;;3422:1;3419;3412:12;3374:52;3445:29;3464:9;3445:29;:::i;3667:395::-;3745:6;3753;3806:2;3794:9;3785:7;3781:23;3777:32;3774:52;;;3822:1;3819;3812:12;3774:52;3845:29;3864:9;3845:29;:::i;:::-;3835:39;;3925:2;3914:9;3910:18;3897:32;3952:18;3944:6;3941:30;3938:50;;;3984:1;3981;3974:12;3938:50;4007:49;4048:7;4039:6;4028:9;4024:22;4007:49;:::i;:::-;3997:59;;;3667:395;;;;;:::o;4067:752::-;4181:6;4189;4197;4205;4213;4266:3;4254:9;4245:7;4241:23;4237:33;4234:53;;;4283:1;4280;4273:12;4234:53;4306:29;4325:9;4306:29;:::i;:::-;4296:39;;4382:2;4371:9;4367:18;4354:32;4344:42;;4437:2;4426:9;4422:18;4409:32;4460:18;4501:2;4493:6;4490:14;4487:34;;;4517:1;4514;4507:12;4487:34;4540:49;4581:7;4572:6;4561:9;4557:22;4540:49;:::i;:::-;4530:59;;4636:2;4625:9;4621:18;4608:32;4598:42;;4693:3;4682:9;4678:19;4665:33;4649:49;;4723:2;4713:8;4710:16;4707:36;;;4739:1;4736;4729:12;4707:36;;4762:51;4805:7;4794:8;4783:9;4779:24;4762:51;:::i;:::-;4752:61;;;4067:752;;;;;;;;:::o;4824:388::-;4901:6;4909;4962:2;4950:9;4941:7;4937:23;4933:32;4930:52;;;4978:1;4975;4968:12;4930:52;5014:9;5001:23;4991:33;;5075:2;5064:9;5060:18;5047:32;5102:18;5094:6;5091:30;5088:50;;;5134:1;5131;5124:12;5217:462;5303:6;5311;5319;5372:2;5360:9;5351:7;5347:23;5343:32;5340:52;;;5388:1;5385;5378:12;5340:52;5411:29;5430:9;5411:29;:::i;:::-;5401:39;;5487:2;5476:9;5472:18;5459:32;5449:42;;5542:2;5531:9;5527:18;5514:32;5569:18;5561:6;5558:30;5555:50;;;5601:1;5598;5591:12;5555:50;5624:49;5665:7;5656:6;5645:9;5641:22;5624:49;:::i;:::-;5614:59;;;5217:462;;;;;:::o;5684:380::-;5763:1;5759:12;;;;5806;;;5827:61;;5881:4;5873:6;5869:17;5859:27;;5827:61;5934:2;5926:6;5923:14;5903:18;5900:38;5897:161;;5980:10;5975:3;5971:20;5968:1;5961:31;6015:4;6012:1;6005:15;6043:4;6040:1;6033:15;5897:161;;5684:380;;;:::o;7816:470::-;7995:3;8033:6;8027:13;8049:53;8095:6;8090:3;8083:4;8075:6;8071:17;8049:53;:::i;:::-;8165:13;;8124:16;;;;8187:57;8165:13;8124:16;8221:4;8209:17;;8187:57;:::i;:::-;8260:20;;7816:470;-1:-1:-1;;;;7816:470:10:o;12338:127::-;12399:10;12394:3;12390:20;12387:1;12380:31;12430:4;12427:1;12420:15;12454:4;12451:1;12444:15;12470:135;12509:3;12530:17;;;12527:43;;12550:18;;:::i;:::-;-1:-1:-1;12597:1:10;12586:13;;12470:135::o;12610:127::-;12671:10;12666:3;12662:20;12659:1;12652:31;12702:4;12699:1;12692:15;12726:4;12723:1;12716:15;12742:120;12782:1;12808;12798:35;;12813:18;;:::i;:::-;-1:-1:-1;12847:9:10;;12742:120::o;12867:125::-;12907:4;12935:1;12932;12929:8;12926:34;;;12940:18;;:::i;:::-;-1:-1:-1;12977:9:10;;12867:125::o;12997:112::-;13029:1;13055;13045:35;;13060:18;;:::i;:::-;-1:-1:-1;13094:9:10;;12997:112::o;13114:128::-;13154:3;13185:1;13181:6;13178:1;13175:13;13172:39;;;13191:18;;:::i;:::-;-1:-1:-1;13227:9:10;;13114:128::o;13247:127::-;13308:10;13303:3;13299:20;13296:1;13289:31;13339:4;13336:1;13329:15;13363:4;13360:1;13353:15;14209:545;14311:2;14306:3;14303:11;14300:448;;;14347:1;14372:5;14368:2;14361:17;14417:4;14413:2;14403:19;14487:2;14475:10;14471:19;14468:1;14464:27;14458:4;14454:38;14523:4;14511:10;14508:20;14505:47;;;-1:-1:-1;14546:4:10;14505:47;14601:2;14596:3;14592:12;14589:1;14585:20;14579:4;14575:31;14565:41;;14656:82;14674:2;14667:5;14664:13;14656:82;;;14719:17;;;14700:1;14689:13;14656:82;;;14660:3;;;14209:545;;;:::o;14930:1352::-;15056:3;15050:10;15083:18;15075:6;15072:30;15069:56;;;15105:18;;:::i;:::-;15134:97;15224:6;15184:38;15216:4;15210:11;15184:38;:::i;:::-;15178:4;15134:97;:::i;:::-;15286:4;;15350:2;15339:14;;15367:1;15362:663;;;;16069:1;16086:6;16083:89;;;-1:-1:-1;16138:19:10;;;16132:26;16083:89;-1:-1:-1;;14887:1:10;14883:11;;;14879:24;14875:29;14865:40;14911:1;14907:11;;;14862:57;16185:81;;15332:944;;15362:663;14156:1;14149:14;;;14193:4;14180:18;;-1:-1:-1;;15398:20:10;;;15516:236;15530:7;15527:1;15524:14;15516:236;;;15619:19;;;15613:26;15598:42;;15711:27;;;;15679:1;15667:14;;;;15546:19;;15516:236;;;15520:3;15780:6;15771:7;15768:19;15765:201;;;15841:19;;;15835:26;-1:-1:-1;;15924:1:10;15920:14;;;15936:3;15916:24;15912:37;15908:42;15893:58;15878:74;;15765:201;-1:-1:-1;;;;;16012:1:10;15996:14;;;15992:22;15979:36;;-1:-1:-1;14930:1352:10:o",
  "language": "Solidity",
  "natspec": {
    "author": "Daccred.",
    "details": "Soulbound Core template. This contract aims at a soulbound token with       capped supply, set by the deployer or defaulted to 1000000.       Mints and burns affect the current supply of tokens respectively.",
    "errors": {
      "Unsigned(address)": [
        {
          "details": "Thrown when the address passed to the verify function is not signed."
        }
      ]
    },
    "events": {
      "IssueWithSignature(address,uint256)": {
        "details": "Emitted when a token is minted from Signature."
      },
      "RevokeWithSignature(uint256)": {
        "details": "Emitted when a token is revoked with Signature."
      }
    },
    "kind": "dev",
    "methods": {
      "_getBaseURI()": {
        "details": "Returns already set baseURI if it exists.",
        "notice": "Callable by anyone.",
        "returns": {
          "_baseURI": "baseURI set."
        }
      },
      "balanceOf(address)": {
        "details": "ABTs assigned to the zero address are considered invalid, and this  function throws for queries about the zero address.",
        "notice": "Count all ABTs assigned to an owner",
        "params": {
          "owner": "An address for whom to query the balance"
        },
        "returns": {
          "_0": "The number of ABTs owned by `owner`, possibly zero"
        }
      },
      "burn(uint256)": {
        "details": "Must emit a `event Revoke` with the `address to` field pointing to  the zero address.",
        "notice": "Destroys `tokenId`. At any time, an ABT receiver must be able to  disassociate themselves from an ABT publicly through calling this  function.",
        "params": {
          "tokenId": "The identifier for an ABT"
        }
      },
      "constructor": {
        "details": "Deploys the 3 contracts inherited by the SoulboundCore."
      },
      "generateTokenURI(uint256)": {
        "details": "Using the `tokenId` passed, it generates a `stringified` tokenURI,       packing the baseURI and the current tokenId.       Makes use of OpenZeppelin's uint to string function.",
        "notice": "Callable by anyone.",
        "params": {
          "tokenId": "ID of token whose tokenURI is desired."
        },
        "returns": {
          "_tokenURI": "TokenURI of the passed tokenId."
        }
      },
      "getAllowlistOwner()": {
        "details": "Return the allowlistOwner.",
        "notice": "Callable by anyone.",
        "returns": {
          "_0": "address of allowlistOwner."
        }
      },
      "isMinted(address,uint256)": {
        "details": "Returns true if token `_tokenId` was minted from this contract to `_to`.       `_to` must not be a 0 address.       `_tokenId` must be an existent token.",
        "notice": "Callable by anyone.",
        "params": {
          "_to": "Address to which token `_tokenId` is minted.",
          "_tokenId": "Token minted."
        },
        "returns": {
          "_0": "bool true or false."
        }
      },
      "issueWithSignature(address,bytes32,bytes,uint256,string)": {
        "details": "Mints a particular quantity of tokens to `to`,        on the condition that the address has been        signed by the allowlistOwner off-chain.       This will emit the {MintSoulboundToken} event       from the Soulbound.sol.",
        "notice": "Callable by anyone.",
        "params": {
          "addr": "Address to mint tokens to.",
          "hash": "Hashed message by the allowlistOwner.",
          "sig": "Signature, signed by the allowlistOwner.",
          "tokenId": "Id of the tokens to mint to the `addr`.",
          "tokenURI": "URI of the token to be minted."
        }
      },
      "issuerOf(address,uint256)": {
        "details": "Since a token cannnot be minted twice.       This function returns the address that minted token `_tokenId` to `_to`,       otherwise this contract.       `_to` must not be a 0 address.       `_tokenId` must be an existent token.       Owner of _tokenId must be _to.",
        "notice": "Callable by anyone.",
        "params": {
          "_to": "Address to which token `_tokenId` is minted.",
          "_tokenId": "Token minted."
        },
        "returns": {
          "_0": "address of issuer."
        }
      },
      "owner()": {
        "details": "Returns the address of the current owner."
      },
      "ownerOf(uint256)": {
        "details": "ABTs assigned to zero address are considered invalid, and queries  about them do throw.",
        "notice": "Find the address bound to an ERC4973 account-bound token",
        "params": {
          "tokenId": "The identifier for an ABT"
        },
        "returns": {
          "_0": "The address of the owner bound to the ABT"
        }
      },
      "renounceOwnership()": {
        "details": "Leaves the contract without owner. It will not be possible to call       `onlyOwner` functions anymore. Can only be called by the current owner.       NOTE: Renouncing ownership will leave the contract without an owner,       thereby removing any functionality that is only available to the owner."
      },
      "revokeWithSignature(bytes32,bytes,uint256)": {
        "details": "Revokes the ownership of `tokenId` from the owner.       The token must exist and the signature must be signed the       allowlistOwner.       This emits the {RevokeWithSignature} event.",
        "notice": "Callable by anyone.",
        "params": {
          "hash": "Hashed message by the allowlistOwner.",
          "sig": "Signature, signed by the allowlistOwner.",
          "tokenId": "Id of the token to revoke."
        }
      },
      "setBaseURI(address,string)": {
        "details": "Allows the `caller` (allowlistOwner) to set the baseURI.       This is really important when the caller wants to mint       Multiple tokens with the same base URI.",
        "notice": "Callable by the deployer of this contract [DaccredDeployer]           and the allowlistOwner."
      },
      "supportsInterface(bytes4)": {
        "details": "See {IERC165-supportsInterface}."
      },
      "transferOwnership(address)": {
        "details": "Transfers ownership of the contract to a new account (`newOwner`).       Can only be called by the current owner."
      },
      "verifySignature(bytes32,bytes)": {
        "details": "Returns true if the signer of signature `sig` is the `allowlistOwner`.       And false if otherwise.",
        "notice": "Callable by anyone.",
        "returns": {
          "_0": "bool true or false."
        }
      },
      "verifySigner(address,bytes32,bytes)": {
        "details": "Returns true if the signer of `_signature` is `_signer`.",
        "notice": "Callable by anyone.",
        "returns": {
          "_0": "bool true or false."
        }
      }
    },
    "stateVariables": {
      "supply": {
        "details": "With every issue and revoke, this value         increases and reduces.         It cannot be GT the TOTAL_SUPPLY."
      },
      "totalSupply": {
        "details": "Total supply limit set by deployer or defaulted to 1000000."
      }
    },
    "title": "Soulbound Core Contract.",
    "version": 1
  },
  "offset": [
    820,
    7319
  ],
  "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x12C JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x88433651 GT PUSH2 0xAD JUMPI DUP1 PUSH4 0xC9E4C54D GT PUSH2 0x71 JUMPI DUP1 PUSH4 0xC9E4C54D EQ PUSH2 0x28E JUMPI DUP1 PUSH4 0xDACA6F78 EQ PUSH2 0x2A1 JUMPI DUP1 PUSH4 0xE92B0842 EQ PUSH2 0x2B4 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x2C7 JUMPI DUP1 PUSH4 0xFB8F198D EQ PUSH2 0x2DA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x88433651 EQ PUSH2 0x247 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x25A JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x26B JUMPI DUP1 PUSH4 0xC87B56DD EQ PUSH2 0x273 JUMPI DUP1 PUSH4 0xC9DD94C7 EQ PUSH2 0x286 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x5899E7B2 GT PUSH2 0xF4 JUMPI DUP1 PUSH4 0x5899E7B2 EQ PUSH2 0x1A9 JUMPI DUP1 PUSH4 0x6352211E EQ PUSH2 0x1E2 JUMPI DUP1 PUSH4 0x6E0A8746 EQ PUSH2 0x20D JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x21E JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x23F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0x131 JUMPI DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x159 JUMPI DUP1 PUSH4 0x8C92E57 EQ PUSH2 0x16E JUMPI DUP1 PUSH4 0x210FA96B EQ PUSH2 0x183 JUMPI DUP1 PUSH4 0x42966C68 EQ PUSH2 0x196 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x144 PUSH2 0x13F CALLDATASIZE PUSH1 0x4 PUSH2 0x1422 JUMP JUMPDEST PUSH2 0x2ED JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x161 PUSH2 0x33F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x150 SWAP2 SWAP1 PUSH2 0x147C JUMP JUMPDEST PUSH2 0x181 PUSH2 0x17C CALLDATASIZE PUSH1 0x4 PUSH2 0x1552 JUMP JUMPDEST PUSH2 0x3D1 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x161 PUSH2 0x191 CALLDATASIZE PUSH1 0x4 PUSH2 0x15A2 JUMP JUMPDEST PUSH2 0x50C JUMP JUMPDEST PUSH2 0x181 PUSH2 0x1A4 CALLDATASIZE PUSH1 0x4 PUSH2 0x15A2 JUMP JUMPDEST PUSH2 0x58E JUMP JUMPDEST PUSH2 0x144 PUSH2 0x1B7 CALLDATASIZE PUSH1 0x4 PUSH2 0x15D7 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 SWAP1 SWAP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 DUP4 MSTORE SWAP3 SWAP1 MSTORE KECCAK256 SLOAD PUSH1 0xFF AND SWAP1 JUMP JUMPDEST PUSH2 0x1F5 PUSH2 0x1F0 CALLDATASIZE PUSH1 0x4 PUSH2 0x15A2 JUMP JUMPDEST PUSH2 0x603 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x150 JUMP JUMPDEST PUSH1 0x8 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x1F5 JUMP JUMPDEST PUSH2 0x231 PUSH2 0x22C CALLDATASIZE PUSH1 0x4 PUSH2 0x1601 JUMP JUMPDEST PUSH2 0x668 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x150 JUMP JUMPDEST PUSH2 0x181 PUSH2 0x6F1 JUMP JUMPDEST PUSH2 0x181 PUSH2 0x255 CALLDATASIZE PUSH1 0x4 PUSH2 0x161C JUMP JUMPDEST PUSH2 0x705 JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x1F5 JUMP JUMPDEST PUSH2 0x161 PUSH2 0x785 JUMP JUMPDEST PUSH2 0x161 PUSH2 0x281 CALLDATASIZE PUSH1 0x4 PUSH2 0x15A2 JUMP JUMPDEST PUSH2 0x794 JUMP JUMPDEST PUSH2 0x161 PUSH2 0x889 JUMP JUMPDEST PUSH2 0x181 PUSH2 0x29C CALLDATASIZE PUSH1 0x4 PUSH2 0x166A JUMP JUMPDEST PUSH2 0x8E6 JUMP JUMPDEST PUSH2 0x144 PUSH2 0x2AF CALLDATASIZE PUSH1 0x4 PUSH2 0x16F2 JUMP JUMPDEST PUSH2 0xA1B JUMP JUMPDEST PUSH2 0x144 PUSH2 0x2C2 CALLDATASIZE PUSH1 0x4 PUSH2 0x1723 JUMP JUMPDEST PUSH2 0xA2E JUMP JUMPDEST PUSH2 0x181 PUSH2 0x2D5 CALLDATASIZE PUSH1 0x4 PUSH2 0x1601 JUMP JUMPDEST PUSH2 0xAC2 JUMP JUMPDEST PUSH2 0x1F5 PUSH2 0x2E8 CALLDATASIZE PUSH1 0x4 PUSH2 0x15D7 JUMP JUMPDEST PUSH2 0xB38 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND PUSH4 0x5B5E139F PUSH1 0xE0 SHL EQ DUP1 PUSH2 0x31E JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND PUSH4 0x5164CF47 PUSH1 0xE0 SHL EQ JUMPDEST DUP1 PUSH2 0x339 JUMPI POP PUSH4 0x1FFC9A7 PUSH1 0xE0 SHL PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP4 AND EQ JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 DUP1 SLOAD PUSH2 0x34E SWAP1 PUSH2 0x177A JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x37A SWAP1 PUSH2 0x177A JUMP JUMPDEST DUP1 ISZERO PUSH2 0x3C7 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x39C JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x3C7 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x3AA JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x3DA DUP2 PUSH2 0xC4C JUMP JUMPDEST PUSH2 0x42B JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5265766F6B65206F6620696E6578697374656E7420746F6B656E2E0000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 MLOAD PUSH1 0x41 EQ PUSH2 0x477 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x18 PUSH1 0x24 DUP3 ADD MSTORE PUSH24 0x92DCECC2D8D2C840E6D2CEDCC2E8EAE4CA40D8CADCCEE8D PUSH1 0x43 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x422 JUMP JUMPDEST PUSH2 0x481 DUP4 DUP4 PUSH2 0xA1B JUMP JUMPDEST PUSH2 0x4C9 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x19 PUSH1 0x24 DUP3 ADD MSTORE PUSH25 0x2430B9B4103737BA1039B4B3B732B210313C9037BBB732B917 PUSH1 0x39 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x422 JUMP JUMPDEST PUSH2 0x4DB PUSH2 0x4D5 DUP3 PUSH2 0x603 JUMP JUMPDEST DUP3 PUSH2 0xC69 JUMP JUMPDEST POP PUSH1 0x40 MLOAD DUP2 SWAP1 PUSH32 0xF947BF2266AFEDE98F27AD2312DB8B2A17921852307F979B6F14A2B41FA774BC SWAP1 PUSH1 0x0 SWAP1 LOG2 POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH2 0x516 PUSH2 0x889 JUMP JUMPDEST MLOAD PUSH1 0x0 SUB PUSH2 0x556 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xD PUSH1 0x24 DUP3 ADD MSTORE PUSH13 0x456D7074792062617365555249 PUSH1 0x98 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x422 JUMP JUMPDEST PUSH2 0x55E PUSH2 0x889 JUMP JUMPDEST PUSH2 0x567 DUP4 PUSH2 0xD31 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x578 SWAP3 SWAP2 SWAP1 PUSH2 0x17B4 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x597 DUP2 PUSH2 0x603 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0x5F7 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x6275726E3A2073656E646572206D757374206265206F776E6572000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x422 JUMP JUMPDEST PUSH2 0x600 DUP2 PUSH2 0xE3A JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP1 PUSH2 0x339 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1C PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x6F776E65724F663A20746F6B656E20646F65736E277420657869737400000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x422 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x6D5 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2C PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x62616C616E63654F663A2061646472657373207A65726F206973206E6F742061 PUSH1 0x44 DUP3 ADD MSTORE PUSH12 0x103B30B634B21037BBB732B9 PUSH1 0xA1 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x422 JUMP JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0x6F9 PUSH2 0xEE1 JUMP JUMPDEST PUSH2 0x703 PUSH1 0x0 PUSH2 0xF3B JUMP JUMPDEST JUMP JUMPDEST PUSH2 0x70D PUSH2 0xEE1 JUMP JUMPDEST DUP2 PUSH2 0x720 PUSH1 0x8 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0x777 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x14 PUSH1 0x24 DUP3 ADD MSTORE PUSH20 0x4E6F7420416C6C6F776C697374204F776E657221 PUSH1 0x60 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x422 JUMP JUMPDEST PUSH2 0x780 DUP3 PUSH2 0xF8D JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x1 DUP1 SLOAD PUSH2 0x34E SWAP1 PUSH2 0x177A JUMP JUMPDEST PUSH1 0x60 PUSH2 0x79F DUP3 PUSH2 0xC4C JUMP JUMPDEST PUSH2 0x7EB JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x746F6B656E5552493A20746F6B656E20646F65736E2774206578697374000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x422 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH2 0x804 SWAP1 PUSH2 0x177A JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x830 SWAP1 PUSH2 0x177A JUMP JUMPDEST DUP1 ISZERO PUSH2 0x87D JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x852 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x87D JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x860 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x6 DUP1 SLOAD PUSH2 0x898 SWAP1 PUSH2 0x177A JUMP JUMPDEST SWAP1 POP PUSH1 0x0 SUB PUSH2 0x8D9 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xD PUSH1 0x24 DUP3 ADD MSTORE PUSH13 0x456D7074792062617365555249 PUSH1 0x98 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x422 JUMP JUMPDEST PUSH1 0x6 DUP1 SLOAD PUSH2 0x34E SWAP1 PUSH2 0x177A JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH2 0x934 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x15 PUSH1 0x24 DUP3 ADD MSTORE PUSH21 0x26B4B73A103A37903D32B9379030B2323932B9B997 PUSH1 0x59 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x422 JUMP JUMPDEST DUP3 MLOAD PUSH1 0x41 EQ PUSH2 0x980 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x18 PUSH1 0x24 DUP3 ADD MSTORE PUSH24 0x92DCECC2D8D2C840E6D2CEDCC2E8EAE4CA40D8CADCCEE8D PUSH1 0x43 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x422 JUMP JUMPDEST PUSH2 0x98A DUP5 DUP5 PUSH2 0xA1B JUMP JUMPDEST PUSH2 0x9D2 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x19 PUSH1 0x24 DUP3 ADD MSTORE PUSH25 0x2430B9B4103737BA1039B4B3B732B210313C9037BBB732B917 PUSH1 0x39 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x422 JUMP JUMPDEST PUSH2 0x9DD DUP6 DUP4 DUP4 PUSH2 0xFDF JUMP JUMPDEST POP PUSH1 0x40 MLOAD DUP3 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 AND SWAP1 PUSH32 0x79AF0E59B31823DD289CEEBABC4D63D25F35926B8548E3A084A500C9D4E18556 SWAP1 PUSH1 0x0 SWAP1 LOG3 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xA27 DUP4 DUP4 PUSH2 0xFF6 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x20 DUP2 DUP2 ADD MLOAD PUSH1 0x40 DUP1 DUP5 ADD MLOAD PUSH1 0x60 DUP1 DUP7 ADD MLOAD DUP4 MLOAD PUSH1 0x0 DUP1 DUP3 MSTORE DUP2 DUP9 ADD DUP1 DUP8 MSTORE DUP11 SWAP1 MSTORE SWAP2 DUP3 BYTE DUP2 DUP7 ADD DUP2 SWAP1 MSTORE SWAP3 DUP2 ADD DUP7 SWAP1 MSTORE PUSH1 0x80 DUP2 ADD DUP5 SWAP1 MSTORE SWAP4 MLOAD SWAP1 SWAP6 SWAP3 SWAP4 SWAP2 SWAP3 PUSH1 0x1 SWAP3 PUSH1 0xA0 DUP1 DUP3 ADD SWAP4 PUSH1 0x1F NOT DUP2 ADD SWAP3 DUP2 SWAP1 SUB SWAP1 SWAP2 ADD SWAP1 DUP6 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xA98 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP PUSH1 0x20 PUSH1 0x40 MLOAD SUB MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP8 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ SWAP4 POP POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH2 0xACA PUSH2 0xEE1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0xB2F JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x646472657373 PUSH1 0xD0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x422 JUMP JUMPDEST PUSH2 0x600 DUP2 PUSH2 0xF3B JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0xB90 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x17 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x517565727920666F72207A65726F20616464726573732E000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x422 JUMP JUMPDEST PUSH2 0xB99 DUP3 PUSH2 0xC4C JUMP JUMPDEST PUSH2 0xBDB JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x13 PUSH1 0x24 DUP3 ADD MSTORE PUSH19 0x2737B716B2BC34B9BA32B73A103A37B5B2B717 PUSH1 0x69 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x422 JUMP JUMPDEST DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0xBEE DUP4 PUSH2 0x603 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0xC44 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x546F6B656E206E6F74206F776E65642062792061646472657373000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x422 JUMP JUMPDEST POP ADDRESS SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND ISZERO ISZERO SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0xC74 DUP3 PUSH2 0xC4C JUMP JUMPDEST PUSH2 0xCB6 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x13 PUSH1 0x24 DUP3 ADD MSTORE PUSH19 0x2737B716B2BC34B9BA32B73A103A37B5B2B717 PUSH1 0x69 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x422 JUMP JUMPDEST DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0xCC9 DUP4 PUSH2 0x603 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0xD1F JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x546F6B656E206E6F74206F776E65642062792061646472657373000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x422 JUMP JUMPDEST PUSH2 0xD28 DUP3 PUSH2 0x1179 JUMP JUMPDEST POP PUSH1 0x1 SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x60 DUP2 PUSH1 0x0 SUB PUSH2 0xD58 JUMPI POP POP PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD SWAP1 SWAP2 MSTORE PUSH1 0x1 DUP2 MSTORE PUSH1 0x3 PUSH1 0xFC SHL PUSH1 0x20 DUP3 ADD MSTORE SWAP1 JUMP JUMPDEST DUP2 PUSH1 0x0 JUMPDEST DUP2 ISZERO PUSH2 0xD82 JUMPI DUP1 PUSH2 0xD6C DUP2 PUSH2 0x17F9 JUMP JUMPDEST SWAP2 POP PUSH2 0xD7B SWAP1 POP PUSH1 0xA DUP4 PUSH2 0x1828 JUMP JUMPDEST SWAP2 POP PUSH2 0xD5C JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0xD9D JUMPI PUSH2 0xD9D PUSH2 0x14AF JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x1F ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0xDC7 JUMPI PUSH1 0x20 DUP3 ADD DUP2 DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP JUMPDEST POP SWAP1 POP JUMPDEST DUP5 ISZERO PUSH2 0xE32 JUMPI PUSH2 0xDDC PUSH1 0x1 DUP4 PUSH2 0x183C JUMP JUMPDEST SWAP2 POP PUSH2 0xDE9 PUSH1 0xA DUP7 PUSH2 0x1853 JUMP JUMPDEST PUSH2 0xDF4 SWAP1 PUSH1 0x30 PUSH2 0x1867 JUMP JUMPDEST PUSH1 0xF8 SHL DUP2 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0xE09 JUMPI PUSH2 0xE09 PUSH2 0x187F JUMP JUMPDEST PUSH1 0x20 ADD ADD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xF8 SHL SUB NOT AND SWAP1 DUP2 PUSH1 0x0 BYTE SWAP1 MSTORE8 POP PUSH2 0xE2B PUSH1 0xA DUP7 PUSH2 0x1828 JUMP JUMPDEST SWAP5 POP PUSH2 0xDCB JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xE45 DUP3 PUSH2 0x603 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD SWAP3 SWAP4 POP PUSH1 0x1 SWAP3 SWAP1 SWAP2 SWAP1 PUSH2 0xE73 SWAP1 DUP5 SWAP1 PUSH2 0x183C JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND SWAP1 SSTORE PUSH1 0x3 SWAP1 SWAP2 MSTORE DUP2 KECCAK256 PUSH2 0xEA7 SWAP2 PUSH2 0x13D4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP3 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND SWAP1 PUSH32 0xEC9AB91322523C899EDE7830EC9BFC992B5981CDCC27B91162FB23DE5791117B SWAP1 PUSH1 0x0 SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x703 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x422 JUMP JUMPDEST PUSH1 0x5 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR SWAP1 SWAP4 SSTORE PUSH1 0x40 MLOAD SWAP2 AND SWAP2 SWAP1 DUP3 SWAP1 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP1 PUSH1 0x0 SWAP1 LOG3 POP POP JUMP JUMPDEST DUP1 MLOAD PUSH1 0x0 SUB PUSH2 0xFCF JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xE PUSH1 0x24 DUP3 ADD MSTORE PUSH14 0x92DCECC2D8D2C840D8CADCCEE8D PUSH1 0x93 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x422 JUMP JUMPDEST PUSH1 0x6 PUSH2 0xFDB DUP3 DUP3 PUSH2 0x18E3 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xFEC DUP5 DUP5 DUP5 PUSH2 0x120F JUMP JUMPDEST POP PUSH1 0x1 SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1000 PUSH2 0xEE1 JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x106E JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433732313A3A2043616C6C20746F20636F6E7472616374206D6164652062 PUSH1 0x44 DUP3 ADD MSTORE PUSH11 0x3C903737B716B7BBB732B9 PUSH1 0xA9 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x422 JUMP JUMPDEST DUP2 MLOAD PUSH1 0x41 EQ PUSH2 0x10BF JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1E PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4572723A3A20496E76616C6964207369676E6174757265206C656E6774680000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x422 JUMP JUMPDEST PUSH1 0x20 DUP3 DUP2 ADD MLOAD PUSH1 0x40 DUP1 DUP6 ADD MLOAD PUSH1 0x60 DUP1 DUP8 ADD MLOAD DUP4 MLOAD PUSH1 0x0 DUP1 DUP3 MSTORE SWAP7 DUP2 ADD DUP1 DUP7 MSTORE DUP11 SWAP1 MSTORE SWAP1 DUP7 BYTE SWAP4 DUP2 ADD DUP5 SWAP1 MSTORE SWAP1 DUP2 ADD DUP5 SWAP1 MSTORE PUSH1 0x80 DUP2 ADD DUP3 SWAP1 MSTORE SWAP3 SWAP4 SWAP1 SWAP3 PUSH1 0x1 SWAP1 PUSH1 0xA0 ADD PUSH1 0x20 PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 SUB SWAP1 DUP1 DUP5 SUB SWAP1 DUP6 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1123 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP PUSH1 0x40 MLOAD PUSH1 0x1F NOT DUP2 ADD MLOAD PUSH1 0x8 SLOAD SWAP1 SWAP4 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP6 AND SWAP2 AND EQ SWAP2 POP DUP2 SWAP1 DUP10 SWAP1 PUSH32 0x7E4FE2A2A805A357593FDBDDE58C02F6A53D8B4960744CD31A98697FC11C2E36 SWAP1 PUSH1 0x0 SWAP1 LOG3 SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0x1182 DUP2 PUSH2 0xC4C JUMP JUMPDEST PUSH2 0x11CE JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x18 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4275726E206F6620696E6578697374656E7420746F6B656E0000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x422 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x11D9 DUP3 PUSH2 0x603 JUMP JUMPDEST SWAP1 POP PUSH2 0x11E4 DUP3 PUSH2 0xE3A JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 DUP4 MSTORE SWAP3 SWAP1 MSTORE KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x125D JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x15 PUSH1 0x24 DUP3 ADD MSTORE PUSH21 0x26B4B73A103A37903D32B9379030B2323932B9B997 PUSH1 0x59 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x422 JUMP JUMPDEST DUP1 MLOAD PUSH1 0x0 SUB PUSH2 0x12A0 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xF PUSH1 0x24 DUP3 ADD MSTORE PUSH15 0x22B6B83A3C903A37B5B2B72AA92497 PUSH1 0x89 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x422 JUMP JUMPDEST PUSH2 0x12AB DUP4 DUP4 DUP4 PUSH2 0x12DD JUMP JUMPDEST POP POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 DUP4 MSTORE SWAP3 SWAP1 MSTORE KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x0 PUSH2 0x12E8 DUP4 PUSH2 0xC4C JUMP JUMPDEST ISZERO PUSH2 0x132C JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x14 PUSH1 0x24 DUP3 ADD MSTORE PUSH20 0x6D696E743A20746F6B656E494420657869737473 PUSH1 0x60 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x422 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD PUSH1 0x1 SWAP3 SWAP1 PUSH2 0x1355 SWAP1 DUP5 SWAP1 PUSH2 0x1867 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP10 AND OR SWAP1 SSTORE PUSH1 0x3 SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 PUSH2 0x1395 DUP4 DUP3 PUSH2 0x18E3 JUMP JUMPDEST POP PUSH1 0x40 MLOAD DUP4 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND SWAP1 PUSH32 0xE9274A84B19E9428826DE6BAE8C48329354F8F0E73F771B97CAE2D9DCCD45A27 SWAP1 PUSH1 0x0 SWAP1 LOG3 POP SWAP1 SWAP3 SWAP2 POP POP JUMP JUMPDEST POP DUP1 SLOAD PUSH2 0x13E0 SWAP1 PUSH2 0x177A JUMP JUMPDEST PUSH1 0x0 DUP3 SSTORE DUP1 PUSH1 0x1F LT PUSH2 0x13F0 JUMPI POP POP JUMP JUMPDEST PUSH1 0x1F ADD PUSH1 0x20 SWAP1 DIV SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 DUP2 ADD SWAP1 PUSH2 0x600 SWAP2 SWAP1 JUMPDEST DUP1 DUP3 GT ISZERO PUSH2 0x141E JUMPI PUSH1 0x0 DUP2 SSTORE PUSH1 0x1 ADD PUSH2 0x140A JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1434 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP2 AND DUP2 EQ PUSH2 0xA27 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x1467 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x144F JUMP JUMPDEST DUP4 DUP2 GT ISZERO PUSH2 0x1476 JUMPI PUSH1 0x0 DUP5 DUP5 ADD MSTORE JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH1 0x0 DUP3 MLOAD DUP1 PUSH1 0x20 DUP5 ADD MSTORE PUSH2 0x149B DUP2 PUSH1 0x40 DUP6 ADD PUSH1 0x20 DUP8 ADD PUSH2 0x144C JUMP JUMPDEST PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP2 SWAP1 SWAP2 ADD PUSH1 0x40 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x14D6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x14F1 JUMPI PUSH2 0x14F1 PUSH2 0x14AF JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1F DUP4 ADD PUSH1 0x1F NOT SWAP1 DUP2 AND PUSH1 0x3F ADD AND DUP2 ADD SWAP1 DUP3 DUP3 GT DUP2 DUP4 LT OR ISZERO PUSH2 0x1519 JUMPI PUSH2 0x1519 PUSH2 0x14AF JUMP JUMPDEST DUP2 PUSH1 0x40 MSTORE DUP4 DUP2 MSTORE DUP7 PUSH1 0x20 DUP6 DUP9 ADD ADD GT ISZERO PUSH2 0x1532 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP4 PUSH1 0x20 DUP8 ADD PUSH1 0x20 DUP4 ADD CALLDATACOPY PUSH1 0x0 PUSH1 0x20 DUP6 DUP4 ADD ADD MSTORE DUP1 SWAP5 POP POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x1567 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP4 CALLDATALOAD SWAP3 POP PUSH1 0x20 DUP5 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1585 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1591 DUP7 DUP3 DUP8 ADD PUSH2 0x14C5 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 DUP5 ADD CALLDATALOAD SWAP1 POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x15B4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x15D2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x15EA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x15F3 DUP4 PUSH2 0x15BB JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1613 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xA27 DUP3 PUSH2 0x15BB JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x162F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1638 DUP4 PUSH2 0x15BB JUMP JUMPDEST SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1654 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1660 DUP6 DUP3 DUP7 ADD PUSH2 0x14C5 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xA0 DUP7 DUP9 SUB SLT ISZERO PUSH2 0x1682 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x168B DUP7 PUSH2 0x15BB JUMP JUMPDEST SWAP5 POP PUSH1 0x20 DUP7 ADD CALLDATALOAD SWAP4 POP PUSH1 0x40 DUP7 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x16AF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x16BB DUP10 DUP4 DUP11 ADD PUSH2 0x14C5 JUMP JUMPDEST SWAP5 POP PUSH1 0x60 DUP9 ADD CALLDATALOAD SWAP4 POP PUSH1 0x80 DUP9 ADD CALLDATALOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH2 0x16D8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x16E5 DUP9 DUP3 DUP10 ADD PUSH2 0x14C5 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 POP SWAP3 SWAP6 SWAP1 SWAP4 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1705 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1654 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x1738 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1741 DUP5 PUSH2 0x15BB JUMP JUMPDEST SWAP3 POP PUSH1 0x20 DUP5 ADD CALLDATALOAD SWAP2 POP PUSH1 0x40 DUP5 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1764 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1770 DUP7 DUP3 DUP8 ADD PUSH2 0x14C5 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0x178E JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x17AE JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP4 MLOAD PUSH2 0x17C6 DUP2 DUP5 PUSH1 0x20 DUP9 ADD PUSH2 0x144C JUMP JUMPDEST DUP4 MLOAD SWAP1 DUP4 ADD SWAP1 PUSH2 0x17DA DUP2 DUP4 PUSH1 0x20 DUP9 ADD PUSH2 0x144C JUMP JUMPDEST ADD SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1 DUP3 ADD PUSH2 0x180B JUMPI PUSH2 0x180B PUSH2 0x17E3 JUMP JUMPDEST POP PUSH1 0x1 ADD SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x1837 JUMPI PUSH2 0x1837 PUSH2 0x1812 JUMP JUMPDEST POP DIV SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 LT ISZERO PUSH2 0x184E JUMPI PUSH2 0x184E PUSH2 0x17E3 JUMP JUMPDEST POP SUB SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x1862 JUMPI PUSH2 0x1862 PUSH2 0x1812 JUMP JUMPDEST POP MOD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 NOT DUP3 GT ISZERO PUSH2 0x187A JUMPI PUSH2 0x187A PUSH2 0x17E3 JUMP JUMPDEST POP ADD SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH2 0x780 JUMPI PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x20 DUP2 KECCAK256 PUSH1 0x1F DUP6 ADD PUSH1 0x5 SHR DUP2 ADD PUSH1 0x20 DUP7 LT ISZERO PUSH2 0x18BC JUMPI POP DUP1 JUMPDEST PUSH1 0x1F DUP6 ADD PUSH1 0x5 SHR DUP3 ADD SWAP2 POP JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x18DB JUMPI DUP3 DUP2 SSTORE PUSH1 0x1 ADD PUSH2 0x18C8 JUMP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST DUP2 MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x18FD JUMPI PUSH2 0x18FD PUSH2 0x14AF JUMP JUMPDEST PUSH2 0x1911 DUP2 PUSH2 0x190B DUP5 SLOAD PUSH2 0x177A JUMP JUMPDEST DUP5 PUSH2 0x1895 JUMP JUMPDEST PUSH1 0x20 DUP1 PUSH1 0x1F DUP4 GT PUSH1 0x1 DUP2 EQ PUSH2 0x1946 JUMPI PUSH1 0x0 DUP5 ISZERO PUSH2 0x192E JUMPI POP DUP6 DUP4 ADD MLOAD JUMPDEST PUSH1 0x0 NOT PUSH1 0x3 DUP7 SWAP1 SHL SHR NOT AND PUSH1 0x1 DUP6 SWAP1 SHL OR DUP6 SSTORE PUSH2 0x18DB JUMP JUMPDEST PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 DUP2 KECCAK256 PUSH1 0x1F NOT DUP7 AND SWAP2 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x1975 JUMPI DUP9 DUP7 ADD MLOAD DUP3 SSTORE SWAP5 DUP5 ADD SWAP5 PUSH1 0x1 SWAP1 SWAP2 ADD SWAP1 DUP5 ADD PUSH2 0x1956 JUMP JUMPDEST POP DUP6 DUP3 LT ISZERO PUSH2 0x1993 JUMPI DUP8 DUP6 ADD MLOAD PUSH1 0x0 NOT PUSH1 0x3 DUP9 SWAP1 SHL PUSH1 0xF8 AND SHR NOT AND DUP2 SSTORE JUMPDEST POP POP POP POP POP PUSH1 0x1 SWAP1 DUP2 SHL ADD SWAP1 SSTORE POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x25 PUSH28 0x2380AC3F8AD974E3DEEC02DE18F24C1048B8E48504F6EC8B827CD34B SIGNEXTEND 0xB1 PUSH5 0x736F6C6343 STOP ADDMOD 0xF STOP CALLER ",
  "pcMap": {
    "0": {
      "offset": [
        820,
        7319
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x80"
    },
    "2": {
      "fn": null,
      "offset": [
        820,
        7319
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "4": {
      "fn": null,
      "offset": [
        820,
        7319
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "5": {
      "fn": null,
      "offset": [
        820,
        7319
      ],
      "op": "CALLVALUE",
      "path": "4"
    },
    "6": {
      "fn": null,
      "offset": [
        820,
        7319
      ],
      "op": "DUP1",
      "path": "4"
    },
    "7": {
      "fn": null,
      "offset": [
        820,
        7319
      ],
      "op": "ISZERO",
      "path": "4"
    },
    "8": {
      "fn": null,
      "offset": [
        820,
        7319
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x10"
    },
    "11": {
      "fn": null,
      "offset": [
        820,
        7319
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "12": {
      "fn": null,
      "offset": [
        820,
        7319
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "14": {
      "fn": null,
      "offset": [
        820,
        7319
      ],
      "op": "DUP1",
      "path": "4"
    },
    "15": {
      "dev": "Cannot send ether to nonpayable function",
      "fn": null,
      "offset": [
        820,
        7319
      ],
      "op": "REVERT",
      "path": "4"
    },
    "16": {
      "fn": null,
      "offset": [
        820,
        7319
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "17": {
      "fn": null,
      "offset": [
        820,
        7319
      ],
      "op": "POP",
      "path": "4"
    },
    "18": {
      "fn": null,
      "offset": [
        820,
        7319
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x4"
    },
    "20": {
      "fn": null,
      "offset": [
        820,
        7319
      ],
      "op": "CALLDATASIZE",
      "path": "4"
    },
    "21": {
      "fn": null,
      "offset": [
        820,
        7319
      ],
      "op": "LT",
      "path": "4"
    },
    "22": {
      "fn": null,
      "offset": [
        820,
        7319
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x12C"
    },
    "25": {
      "fn": null,
      "offset": [
        820,
        7319
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "26": {
      "fn": null,
      "offset": [
        820,
        7319
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "28": {
      "fn": null,
      "offset": [
        820,
        7319
      ],
      "op": "CALLDATALOAD",
      "path": "4"
    },
    "29": {
      "fn": null,
      "offset": [
        820,
        7319
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0xE0"
    },
    "31": {
      "fn": null,
      "offset": [
        820,
        7319
      ],
      "op": "SHR",
      "path": "4"
    },
    "32": {
      "fn": null,
      "offset": [
        820,
        7319
      ],
      "op": "DUP1",
      "path": "4"
    },
    "33": {
      "fn": null,
      "offset": [
        820,
        7319
      ],
      "op": "PUSH4",
      "path": "4",
      "value": "0x88433651"
    },
    "38": {
      "fn": null,
      "offset": [
        820,
        7319
      ],
      "op": "GT",
      "path": "4"
    },
    "39": {
      "fn": null,
      "offset": [
        820,
        7319
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0xAD"
    },
    "42": {
      "fn": null,
      "offset": [
        820,
        7319
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "43": {
      "fn": null,
      "offset": [
        820,
        7319
      ],
      "op": "DUP1",
      "path": "4"
    },
    "44": {
      "fn": null,
      "offset": [
        820,
        7319
      ],
      "op": "PUSH4",
      "path": "4",
      "value": "0xC9E4C54D"
    },
    "49": {
      "fn": null,
      "offset": [
        820,
        7319
      ],
      "op": "GT",
      "path": "4"
    },
    "50": {
      "fn": null,
      "offset": [
        820,
        7319
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x71"
    },
    "53": {
      "fn": null,
      "offset": [
        820,
        7319
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "54": {
      "fn": null,
      "offset": [
        820,
        7319
      ],
      "op": "DUP1",
      "path": "4"
    },
    "55": {
      "fn": null,
      "offset": [
        820,
        7319
      ],
      "op": "PUSH4",
      "path": "4",
      "value": "0xC9E4C54D"
    },
    "60": {
      "fn": null,
      "offset": [
        820,
        7319
      ],
      "op": "EQ",
      "path": "4"
    },
    "61": {
      "fn": null,
      "offset": [
        820,
        7319
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x28E"
    },
    "64": {
      "fn": null,
      "offset": [
        820,
        7319
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "65": {
      "fn": null,
      "offset": [
        820,
        7319
      ],
      "op": "DUP1",
      "path": "4"
    },
    "66": {
      "fn": null,
      "offset": [
        820,
        7319
      ],
      "op": "PUSH4",
      "path": "4",
      "value": "0xDACA6F78"
    },
    "71": {
      "fn": null,
      "offset": [
        820,
        7319
      ],
      "op": "EQ",
      "path": "4"
    },
    "72": {
      "fn": null,
      "offset": [
        820,
        7319
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x2A1"
    },
    "75": {
      "fn": null,
      "offset": [
        820,
        7319
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "76": {
      "fn": null,
      "offset": [
        820,
        7319
      ],
      "op": "DUP1",
      "path": "4"
    },
    "77": {
      "fn": null,
      "offset": [
        820,
        7319
      ],
      "op": "PUSH4",
      "path": "4",
      "value": "0xE92B0842"
    },
    "82": {
      "fn": null,
      "offset": [
        820,
        7319
      ],
      "op": "EQ",
      "path": "4"
    },
    "83": {
      "fn": null,
      "offset": [
        820,
        7319
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x2B4"
    },
    "86": {
      "fn": null,
      "offset": [
        820,
        7319
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "87": {
      "fn": null,
      "offset": [
        820,
        7319
      ],
      "op": "DUP1",
      "path": "4"
    },
    "88": {
      "fn": null,
      "offset": [
        820,
        7319
      ],
      "op": "PUSH4",
      "path": "4",
      "value": "0xF2FDE38B"
    },
    "93": {
      "fn": null,
      "offset": [
        820,
        7319
      ],
      "op": "EQ",
      "path": "4"
    },
    "94": {
      "fn": null,
      "offset": [
        820,
        7319
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x2C7"
    },
    "97": {
      "fn": null,
      "offset": [
        820,
        7319
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "98": {
      "fn": null,
      "offset": [
        820,
        7319
      ],
      "op": "DUP1",
      "path": "4"
    },
    "99": {
      "fn": null,
      "offset": [
        820,
        7319
      ],
      "op": "PUSH4",
      "path": "4",
      "value": "0xFB8F198D"
    },
    "104": {
      "fn": null,
      "offset": [
        820,
        7319
      ],
      "op": "EQ",
      "path": "4"
    },
    "105": {
      "fn": null,
      "offset": [
        820,
        7319
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x2DA"
    },
    "108": {
      "fn": null,
      "offset": [
        820,
        7319
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "109": {
      "fn": null,
      "offset": [
        820,
        7319
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "111": {
      "fn": null,
      "offset": [
        820,
        7319
      ],
      "op": "DUP1",
      "path": "4"
    },
    "112": {
      "fn": null,
      "offset": [
        820,
        7319
      ],
      "op": "REVERT",
      "path": "4"
    },
    "113": {
      "fn": null,
      "offset": [
        820,
        7319
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "114": {
      "fn": null,
      "offset": [
        820,
        7319
      ],
      "op": "DUP1",
      "path": "4"
    },
    "115": {
      "fn": null,
      "offset": [
        820,
        7319
      ],
      "op": "PUSH4",
      "path": "4",
      "value": "0x88433651"
    },
    "120": {
      "fn": null,
      "offset": [
        820,
        7319
      ],
      "op": "EQ",
      "path": "4"
    },
    "121": {
      "fn": null,
      "offset": [
        820,
        7319
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x247"
    },
    "124": {
      "fn": null,
      "offset": [
        820,
        7319
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "125": {
      "fn": null,
      "offset": [
        820,
        7319
      ],
      "op": "DUP1",
      "path": "4"
    },
    "126": {
      "fn": null,
      "offset": [
        820,
        7319
      ],
      "op": "PUSH4",
      "path": "4",
      "value": "0x8DA5CB5B"
    },
    "131": {
      "fn": null,
      "offset": [
        820,
        7319
      ],
      "op": "EQ",
      "path": "4"
    },
    "132": {
      "fn": null,
      "offset": [
        820,
        7319
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x25A"
    },
    "135": {
      "fn": null,
      "offset": [
        820,
        7319
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "136": {
      "fn": null,
      "offset": [
        820,
        7319
      ],
      "op": "DUP1",
      "path": "4"
    },
    "137": {
      "fn": null,
      "offset": [
        820,
        7319
      ],
      "op": "PUSH4",
      "path": "4",
      "value": "0x95D89B41"
    },
    "142": {
      "fn": null,
      "offset": [
        820,
        7319
      ],
      "op": "EQ",
      "path": "4"
    },
    "143": {
      "fn": null,
      "offset": [
        820,
        7319
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x26B"
    },
    "146": {
      "fn": null,
      "offset": [
        820,
        7319
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "147": {
      "fn": null,
      "offset": [
        820,
        7319
      ],
      "op": "DUP1",
      "path": "4"
    },
    "148": {
      "fn": null,
      "offset": [
        820,
        7319
      ],
      "op": "PUSH4",
      "path": "4",
      "value": "0xC87B56DD"
    },
    "153": {
      "fn": null,
      "offset": [
        820,
        7319
      ],
      "op": "EQ",
      "path": "4"
    },
    "154": {
      "fn": null,
      "offset": [
        820,
        7319
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x273"
    },
    "157": {
      "fn": null,
      "offset": [
        820,
        7319
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "158": {
      "fn": null,
      "offset": [
        820,
        7319
      ],
      "op": "DUP1",
      "path": "4"
    },
    "159": {
      "fn": null,
      "offset": [
        820,
        7319
      ],
      "op": "PUSH4",
      "path": "4",
      "value": "0xC9DD94C7"
    },
    "164": {
      "fn": null,
      "offset": [
        820,
        7319
      ],
      "op": "EQ",
      "path": "4"
    },
    "165": {
      "fn": null,
      "offset": [
        820,
        7319
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x286"
    },
    "168": {
      "fn": null,
      "offset": [
        820,
        7319
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "169": {
      "fn": null,
      "offset": [
        820,
        7319
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "171": {
      "fn": null,
      "offset": [
        820,
        7319
      ],
      "op": "DUP1",
      "path": "4"
    },
    "172": {
      "fn": null,
      "offset": [
        820,
        7319
      ],
      "op": "REVERT",
      "path": "4"
    },
    "173": {
      "fn": null,
      "offset": [
        820,
        7319
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "174": {
      "fn": null,
      "offset": [
        820,
        7319
      ],
      "op": "DUP1",
      "path": "4"
    },
    "175": {
      "fn": null,
      "offset": [
        820,
        7319
      ],
      "op": "PUSH4",
      "path": "4",
      "value": "0x5899E7B2"
    },
    "180": {
      "fn": null,
      "offset": [
        820,
        7319
      ],
      "op": "GT",
      "path": "4"
    },
    "181": {
      "fn": null,
      "offset": [
        820,
        7319
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0xF4"
    },
    "184": {
      "fn": null,
      "offset": [
        820,
        7319
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "185": {
      "fn": null,
      "offset": [
        820,
        7319
      ],
      "op": "DUP1",
      "path": "4"
    },
    "186": {
      "fn": null,
      "offset": [
        820,
        7319
      ],
      "op": "PUSH4",
      "path": "4",
      "value": "0x5899E7B2"
    },
    "191": {
      "fn": null,
      "offset": [
        820,
        7319
      ],
      "op": "EQ",
      "path": "4"
    },
    "192": {
      "fn": null,
      "offset": [
        820,
        7319
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x1A9"
    },
    "195": {
      "fn": null,
      "offset": [
        820,
        7319
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "196": {
      "fn": null,
      "offset": [
        820,
        7319
      ],
      "op": "DUP1",
      "path": "4"
    },
    "197": {
      "fn": null,
      "offset": [
        820,
        7319
      ],
      "op": "PUSH4",
      "path": "4",
      "value": "0x6352211E"
    },
    "202": {
      "fn": null,
      "offset": [
        820,
        7319
      ],
      "op": "EQ",
      "path": "4"
    },
    "203": {
      "fn": null,
      "offset": [
        820,
        7319
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x1E2"
    },
    "206": {
      "fn": null,
      "offset": [
        820,
        7319
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "207": {
      "fn": null,
      "offset": [
        820,
        7319
      ],
      "op": "DUP1",
      "path": "4"
    },
    "208": {
      "fn": null,
      "offset": [
        820,
        7319
      ],
      "op": "PUSH4",
      "path": "4",
      "value": "0x6E0A8746"
    },
    "213": {
      "fn": null,
      "offset": [
        820,
        7319
      ],
      "op": "EQ",
      "path": "4"
    },
    "214": {
      "fn": null,
      "offset": [
        820,
        7319
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x20D"
    },
    "217": {
      "fn": null,
      "offset": [
        820,
        7319
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "218": {
      "fn": null,
      "offset": [
        820,
        7319
      ],
      "op": "DUP1",
      "path": "4"
    },
    "219": {
      "fn": null,
      "offset": [
        820,
        7319
      ],
      "op": "PUSH4",
      "path": "4",
      "value": "0x70A08231"
    },
    "224": {
      "fn": null,
      "offset": [
        820,
        7319
      ],
      "op": "EQ",
      "path": "4"
    },
    "225": {
      "fn": null,
      "offset": [
        820,
        7319
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x21E"
    },
    "228": {
      "fn": null,
      "offset": [
        820,
        7319
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "229": {
      "fn": null,
      "offset": [
        820,
        7319
      ],
      "op": "DUP1",
      "path": "4"
    },
    "230": {
      "fn": null,
      "offset": [
        820,
        7319
      ],
      "op": "PUSH4",
      "path": "4",
      "value": "0x715018A6"
    },
    "235": {
      "fn": null,
      "offset": [
        820,
        7319
      ],
      "op": "EQ",
      "path": "4"
    },
    "236": {
      "fn": null,
      "offset": [
        820,
        7319
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x23F"
    },
    "239": {
      "fn": null,
      "offset": [
        820,
        7319
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "240": {
      "fn": null,
      "offset": [
        820,
        7319
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "242": {
      "fn": null,
      "offset": [
        820,
        7319
      ],
      "op": "DUP1",
      "path": "4"
    },
    "243": {
      "fn": null,
      "offset": [
        820,
        7319
      ],
      "op": "REVERT",
      "path": "4"
    },
    "244": {
      "fn": null,
      "offset": [
        820,
        7319
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "245": {
      "fn": null,
      "offset": [
        820,
        7319
      ],
      "op": "DUP1",
      "path": "4"
    },
    "246": {
      "fn": null,
      "offset": [
        820,
        7319
      ],
      "op": "PUSH4",
      "path": "4",
      "value": "0x1FFC9A7"
    },
    "251": {
      "fn": null,
      "offset": [
        820,
        7319
      ],
      "op": "EQ",
      "path": "4"
    },
    "252": {
      "fn": null,
      "offset": [
        820,
        7319
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x131"
    },
    "255": {
      "fn": null,
      "offset": [
        820,
        7319
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "256": {
      "fn": null,
      "offset": [
        820,
        7319
      ],
      "op": "DUP1",
      "path": "4"
    },
    "257": {
      "fn": null,
      "offset": [
        820,
        7319
      ],
      "op": "PUSH4",
      "path": "4",
      "value": "0x6FDDE03"
    },
    "262": {
      "fn": null,
      "offset": [
        820,
        7319
      ],
      "op": "EQ",
      "path": "4"
    },
    "263": {
      "fn": null,
      "offset": [
        820,
        7319
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x159"
    },
    "266": {
      "fn": null,
      "offset": [
        820,
        7319
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "267": {
      "fn": null,
      "offset": [
        820,
        7319
      ],
      "op": "DUP1",
      "path": "4"
    },
    "268": {
      "fn": null,
      "offset": [
        820,
        7319
      ],
      "op": "PUSH4",
      "path": "4",
      "value": "0x8C92E57"
    },
    "273": {
      "fn": null,
      "offset": [
        820,
        7319
      ],
      "op": "EQ",
      "path": "4"
    },
    "274": {
      "fn": null,
      "offset": [
        820,
        7319
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x16E"
    },
    "277": {
      "fn": null,
      "offset": [
        820,
        7319
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "278": {
      "fn": null,
      "offset": [
        820,
        7319
      ],
      "op": "DUP1",
      "path": "4"
    },
    "279": {
      "fn": null,
      "offset": [
        820,
        7319
      ],
      "op": "PUSH4",
      "path": "4",
      "value": "0x210FA96B"
    },
    "284": {
      "fn": null,
      "offset": [
        820,
        7319
      ],
      "op": "EQ",
      "path": "4"
    },
    "285": {
      "fn": null,
      "offset": [
        820,
        7319
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x183"
    },
    "288": {
      "fn": null,
      "offset": [
        820,
        7319
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "289": {
      "fn": null,
      "offset": [
        820,
        7319
      ],
      "op": "DUP1",
      "path": "4"
    },
    "290": {
      "fn": null,
      "offset": [
        820,
        7319
      ],
      "op": "PUSH4",
      "path": "4",
      "value": "0x42966C68"
    },
    "295": {
      "fn": null,
      "offset": [
        820,
        7319
      ],
      "op": "EQ",
      "path": "4"
    },
    "296": {
      "fn": null,
      "offset": [
        820,
        7319
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x196"
    },
    "299": {
      "fn": null,
      "offset": [
        820,
        7319
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "300": {
      "fn": null,
      "offset": [
        820,
        7319
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "301": {
      "fn": null,
      "offset": [
        820,
        7319
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "303": {
      "fn": null,
      "offset": [
        820,
        7319
      ],
      "op": "DUP1",
      "path": "4"
    },
    "304": {
      "first_revert": true,
      "fn": null,
      "offset": [
        820,
        7319
      ],
      "op": "REVERT",
      "path": "4"
    },
    "305": {
      "fn": "ERC4973.supportsInterface",
      "offset": [
        4293,
        4553
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "306": {
      "fn": "ERC4973.supportsInterface",
      "offset": [
        4293,
        4553
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x144"
    },
    "309": {
      "fn": "ERC4973.supportsInterface",
      "offset": [
        4293,
        4553
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x13F"
    },
    "312": {
      "fn": "ERC4973.supportsInterface",
      "offset": [
        4293,
        4553
      ],
      "op": "CALLDATASIZE",
      "path": "7"
    },
    "313": {
      "fn": "ERC4973.supportsInterface",
      "offset": [
        4293,
        4553
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x4"
    },
    "315": {
      "fn": "ERC4973.supportsInterface",
      "offset": [
        4293,
        4553
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x1422"
    },
    "318": {
      "fn": "ERC4973.supportsInterface",
      "jump": "i",
      "offset": [
        4293,
        4553
      ],
      "op": "JUMP",
      "path": "7"
    },
    "319": {
      "fn": "ERC4973.supportsInterface",
      "offset": [
        4293,
        4553
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "320": {
      "fn": "ERC4973.supportsInterface",
      "offset": [
        4293,
        4553
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x2ED"
    },
    "323": {
      "fn": "ERC4973.supportsInterface",
      "jump": "i",
      "offset": [
        4293,
        4553
      ],
      "op": "JUMP",
      "path": "7"
    },
    "324": {
      "fn": "ERC4973.supportsInterface",
      "offset": [
        4293,
        4553
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "325": {
      "fn": "ERC4973.supportsInterface",
      "offset": [
        4293,
        4553
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x40"
    },
    "327": {
      "fn": "ERC4973.supportsInterface",
      "offset": [
        4293,
        4553
      ],
      "op": "MLOAD",
      "path": "7"
    },
    "328": {
      "op": "SWAP1"
    },
    "329": {
      "op": "ISZERO"
    },
    "330": {
      "op": "ISZERO"
    },
    "331": {
      "op": "DUP2"
    },
    "332": {
      "op": "MSTORE"
    },
    "333": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "335": {
      "op": "ADD"
    },
    "336": {
      "fn": "ERC4973.supportsInterface",
      "offset": [
        4293,
        4553
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "337": {
      "fn": "ERC4973.supportsInterface",
      "offset": [
        4293,
        4553
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x40"
    },
    "339": {
      "fn": "ERC4973.supportsInterface",
      "offset": [
        4293,
        4553
      ],
      "op": "MLOAD",
      "path": "7"
    },
    "340": {
      "fn": "ERC4973.supportsInterface",
      "offset": [
        4293,
        4553
      ],
      "op": "DUP1",
      "path": "7"
    },
    "341": {
      "fn": "ERC4973.supportsInterface",
      "offset": [
        4293,
        4553
      ],
      "op": "SWAP2",
      "path": "7"
    },
    "342": {
      "fn": "ERC4973.supportsInterface",
      "offset": [
        4293,
        4553
      ],
      "op": "SUB",
      "path": "7"
    },
    "343": {
      "fn": "ERC4973.supportsInterface",
      "offset": [
        4293,
        4553
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "344": {
      "fn": "ERC4973.supportsInterface",
      "offset": [
        4293,
        4553
      ],
      "op": "RETURN",
      "path": "7"
    },
    "345": {
      "fn": "ERC4973.name",
      "offset": [
        4557,
        4649
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "346": {
      "fn": "ERC4973.name",
      "offset": [
        4557,
        4649
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x161"
    },
    "349": {
      "fn": "ERC4973.name",
      "offset": [
        4557,
        4649
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x33F"
    },
    "352": {
      "fn": "ERC4973.name",
      "jump": "i",
      "offset": [
        4557,
        4649
      ],
      "op": "JUMP",
      "path": "7"
    },
    "353": {
      "fn": "ERC4973.name",
      "offset": [
        4557,
        4649
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "354": {
      "fn": "ERC4973.name",
      "offset": [
        4557,
        4649
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x40"
    },
    "356": {
      "fn": "ERC4973.name",
      "offset": [
        4557,
        4649
      ],
      "op": "MLOAD",
      "path": "7"
    },
    "357": {
      "fn": "ERC4973.name",
      "offset": [
        4557,
        4649
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x150"
    },
    "360": {
      "fn": "ERC4973.name",
      "offset": [
        4557,
        4649
      ],
      "op": "SWAP2",
      "path": "7"
    },
    "361": {
      "fn": "ERC4973.name",
      "offset": [
        4557,
        4649
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "362": {
      "fn": "ERC4973.name",
      "offset": [
        4557,
        4649
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x147C"
    },
    "365": {
      "fn": "ERC4973.name",
      "jump": "i",
      "offset": [
        4557,
        4649
      ],
      "op": "JUMP",
      "path": "7"
    },
    "366": {
      "fn": "SoulboundCore.revokeWithSignature",
      "offset": [
        4229,
        5160
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "367": {
      "fn": "SoulboundCore.revokeWithSignature",
      "offset": [
        4229,
        5160
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x181"
    },
    "370": {
      "fn": "SoulboundCore.revokeWithSignature",
      "offset": [
        4229,
        5160
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x17C"
    },
    "373": {
      "fn": "SoulboundCore.revokeWithSignature",
      "offset": [
        4229,
        5160
      ],
      "op": "CALLDATASIZE",
      "path": "4"
    },
    "374": {
      "fn": "SoulboundCore.revokeWithSignature",
      "offset": [
        4229,
        5160
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x4"
    },
    "376": {
      "fn": "SoulboundCore.revokeWithSignature",
      "offset": [
        4229,
        5160
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x1552"
    },
    "379": {
      "fn": "SoulboundCore.revokeWithSignature",
      "jump": "i",
      "offset": [
        4229,
        5160
      ],
      "op": "JUMP",
      "path": "4"
    },
    "380": {
      "fn": "SoulboundCore.revokeWithSignature",
      "offset": [
        4229,
        5160
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "381": {
      "fn": "SoulboundCore.revokeWithSignature",
      "offset": [
        4229,
        5160
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x3D1"
    },
    "384": {
      "fn": "SoulboundCore.revokeWithSignature",
      "jump": "i",
      "offset": [
        4229,
        5160
      ],
      "op": "JUMP",
      "path": "4"
    },
    "385": {
      "fn": "SoulboundCore.revokeWithSignature",
      "offset": [
        4229,
        5160
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "386": {
      "fn": "SoulboundCore.revokeWithSignature",
      "offset": [
        4229,
        5160
      ],
      "op": "STOP",
      "path": "4"
    },
    "387": {
      "fn": "SoulboundCore.generateTokenURI",
      "offset": [
        6072,
        6477
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "388": {
      "fn": "SoulboundCore.generateTokenURI",
      "offset": [
        6072,
        6477
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x161"
    },
    "391": {
      "fn": "SoulboundCore.generateTokenURI",
      "offset": [
        6072,
        6477
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x191"
    },
    "394": {
      "fn": "SoulboundCore.generateTokenURI",
      "offset": [
        6072,
        6477
      ],
      "op": "CALLDATASIZE",
      "path": "4"
    },
    "395": {
      "fn": "SoulboundCore.generateTokenURI",
      "offset": [
        6072,
        6477
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x4"
    },
    "397": {
      "fn": "SoulboundCore.generateTokenURI",
      "offset": [
        6072,
        6477
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x15A2"
    },
    "400": {
      "fn": "SoulboundCore.generateTokenURI",
      "jump": "i",
      "offset": [
        6072,
        6477
      ],
      "op": "JUMP",
      "path": "4"
    },
    "401": {
      "fn": "SoulboundCore.generateTokenURI",
      "offset": [
        6072,
        6477
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "402": {
      "fn": "SoulboundCore.generateTokenURI",
      "offset": [
        6072,
        6477
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x50C"
    },
    "405": {
      "fn": "SoulboundCore.generateTokenURI",
      "jump": "i",
      "offset": [
        6072,
        6477
      ],
      "op": "JUMP",
      "path": "4"
    },
    "406": {
      "fn": "ERC4973.burn",
      "offset": [
        4946,
        5101
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "407": {
      "fn": "ERC4973.burn",
      "offset": [
        4946,
        5101
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x181"
    },
    "410": {
      "fn": "ERC4973.burn",
      "offset": [
        4946,
        5101
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x1A4"
    },
    "413": {
      "fn": "ERC4973.burn",
      "offset": [
        4946,
        5101
      ],
      "op": "CALLDATASIZE",
      "path": "7"
    },
    "414": {
      "fn": "ERC4973.burn",
      "offset": [
        4946,
        5101
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x4"
    },
    "416": {
      "fn": "ERC4973.burn",
      "offset": [
        4946,
        5101
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x15A2"
    },
    "419": {
      "fn": "ERC4973.burn",
      "jump": "i",
      "offset": [
        4946,
        5101
      ],
      "op": "JUMP",
      "path": "7"
    },
    "420": {
      "fn": "ERC4973.burn",
      "offset": [
        4946,
        5101
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "421": {
      "fn": "ERC4973.burn",
      "offset": [
        4946,
        5101
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x58E"
    },
    "424": {
      "fn": "ERC4973.burn",
      "jump": "i",
      "offset": [
        4946,
        5101
      ],
      "op": "JUMP",
      "path": "7"
    },
    "425": {
      "fn": "Soulbound.isMinted",
      "offset": [
        5160,
        5302
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "426": {
      "fn": "Soulbound.isMinted",
      "offset": [
        5160,
        5302
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x144"
    },
    "429": {
      "fn": "Soulbound.isMinted",
      "offset": [
        5160,
        5302
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x1B7"
    },
    "432": {
      "fn": "Soulbound.isMinted",
      "offset": [
        5160,
        5302
      ],
      "op": "CALLDATASIZE",
      "path": "3"
    },
    "433": {
      "fn": "Soulbound.isMinted",
      "offset": [
        5160,
        5302
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x4"
    },
    "435": {
      "fn": "Soulbound.isMinted",
      "offset": [
        5160,
        5302
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x15D7"
    },
    "438": {
      "fn": "Soulbound.isMinted",
      "jump": "i",
      "offset": [
        5160,
        5302
      ],
      "op": "JUMP",
      "path": "3"
    },
    "439": {
      "fn": "Soulbound.isMinted",
      "offset": [
        5160,
        5302
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "440": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "442": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "444": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "446": {
      "op": "SHL"
    },
    "447": {
      "op": "SUB"
    },
    "448": {
      "fn": "Soulbound.isMinted",
      "offset": [
        5275,
        5285
      ],
      "op": "SWAP2",
      "path": "3",
      "statement": 0
    },
    "449": {
      "fn": "Soulbound.isMinted",
      "offset": [
        5275,
        5285
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "450": {
      "fn": "Soulbound.isMinted",
      "offset": [
        5275,
        5285
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "451": {
      "fn": "Soulbound.isMinted",
      "offset": [
        5275,
        5285
      ],
      "op": "AND",
      "path": "3"
    },
    "452": {
      "fn": "Soulbound.isMinted",
      "offset": [
        5252,
        5256
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "454": {
      "fn": "Soulbound.isMinted",
      "offset": [
        5275,
        5285
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "455": {
      "fn": "Soulbound.isMinted",
      "offset": [
        5275,
        5285
      ],
      "op": "DUP2",
      "path": "3"
    },
    "456": {
      "fn": "Soulbound.isMinted",
      "offset": [
        5275,
        5285
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "457": {
      "fn": "Soulbound.isMinted",
      "offset": [
        5275,
        5280
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x7"
    },
    "459": {
      "fn": "Soulbound.isMinted",
      "offset": [
        5275,
        5285
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "461": {
      "fn": "Soulbound.isMinted",
      "offset": [
        5275,
        5285
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "462": {
      "fn": "Soulbound.isMinted",
      "offset": [
        5275,
        5285
      ],
      "op": "DUP2",
      "path": "3"
    },
    "463": {
      "fn": "Soulbound.isMinted",
      "offset": [
        5275,
        5285
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "464": {
      "fn": "Soulbound.isMinted",
      "offset": [
        5275,
        5285
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "466": {
      "fn": "Soulbound.isMinted",
      "offset": [
        5275,
        5285
      ],
      "op": "DUP1",
      "path": "3"
    },
    "467": {
      "fn": "Soulbound.isMinted",
      "offset": [
        5275,
        5285
      ],
      "op": "DUP4",
      "path": "3"
    },
    "468": {
      "fn": "Soulbound.isMinted",
      "offset": [
        5275,
        5285
      ],
      "op": "KECCAK256",
      "path": "3"
    },
    "469": {
      "fn": "Soulbound.isMinted",
      "offset": [
        5275,
        5295
      ],
      "op": "SWAP4",
      "path": "3"
    },
    "470": {
      "fn": "Soulbound.isMinted",
      "offset": [
        5275,
        5295
      ],
      "op": "DUP4",
      "path": "3"
    },
    "471": {
      "fn": "Soulbound.isMinted",
      "offset": [
        5275,
        5295
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "472": {
      "fn": "Soulbound.isMinted",
      "offset": [
        5275,
        5295
      ],
      "op": "SWAP3",
      "path": "3"
    },
    "473": {
      "fn": "Soulbound.isMinted",
      "offset": [
        5275,
        5295
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "474": {
      "fn": "Soulbound.isMinted",
      "offset": [
        5275,
        5295
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "475": {
      "fn": "Soulbound.isMinted",
      "offset": [
        5275,
        5295
      ],
      "op": "KECCAK256",
      "path": "3"
    },
    "476": {
      "fn": "Soulbound.isMinted",
      "offset": [
        5275,
        5295
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "477": {
      "fn": "Soulbound.isMinted",
      "offset": [
        5275,
        5295
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0xFF"
    },
    "479": {
      "fn": "Soulbound.isMinted",
      "offset": [
        5275,
        5295
      ],
      "op": "AND",
      "path": "3"
    },
    "480": {
      "fn": "Soulbound.isMinted",
      "offset": [
        5275,
        5295
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "481": {
      "fn": "Soulbound.isMinted",
      "offset": [
        5160,
        5302
      ],
      "op": "JUMP",
      "path": "3"
    },
    "482": {
      "fn": "ERC4973.ownerOf",
      "offset": [
        5306,
        5505
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "483": {
      "fn": "ERC4973.ownerOf",
      "offset": [
        5306,
        5505
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x1F5"
    },
    "486": {
      "fn": "ERC4973.ownerOf",
      "offset": [
        5306,
        5505
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x1F0"
    },
    "489": {
      "fn": "ERC4973.ownerOf",
      "offset": [
        5306,
        5505
      ],
      "op": "CALLDATASIZE",
      "path": "7"
    },
    "490": {
      "fn": "ERC4973.ownerOf",
      "offset": [
        5306,
        5505
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x4"
    },
    "492": {
      "fn": "ERC4973.ownerOf",
      "offset": [
        5306,
        5505
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x15A2"
    },
    "495": {
      "fn": "ERC4973.ownerOf",
      "jump": "i",
      "offset": [
        5306,
        5505
      ],
      "op": "JUMP",
      "path": "7"
    },
    "496": {
      "fn": "ERC4973.ownerOf",
      "offset": [
        5306,
        5505
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "497": {
      "fn": "ERC4973.ownerOf",
      "offset": [
        5306,
        5505
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x603"
    },
    "500": {
      "fn": "ERC4973.ownerOf",
      "jump": "i",
      "offset": [
        5306,
        5505
      ],
      "op": "JUMP",
      "path": "7"
    },
    "501": {
      "fn": "ERC4973.ownerOf",
      "offset": [
        5306,
        5505
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "502": {
      "fn": "ERC4973.ownerOf",
      "offset": [
        5306,
        5505
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x40"
    },
    "504": {
      "fn": "ERC4973.ownerOf",
      "offset": [
        5306,
        5505
      ],
      "op": "MLOAD",
      "path": "7"
    },
    "505": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "507": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "509": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "511": {
      "op": "SHL"
    },
    "512": {
      "op": "SUB"
    },
    "513": {
      "op": "SWAP1"
    },
    "514": {
      "op": "SWAP2"
    },
    "515": {
      "op": "AND"
    },
    "516": {
      "op": "DUP2"
    },
    "517": {
      "op": "MSTORE"
    },
    "518": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "520": {
      "op": "ADD"
    },
    "521": {
      "fn": "ERC4973.ownerOf",
      "offset": [
        5306,
        5505
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x150"
    },
    "524": {
      "op": "JUMP"
    },
    "525": {
      "fn": "Allowlist.getAllowlistOwner",
      "offset": [
        2018,
        2114
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "526": {
      "fn": "Allowlist.getAllowlistOwner",
      "offset": [
        2093,
        2107
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 1,
      "value": "0x8"
    },
    "528": {
      "fn": "Allowlist.getAllowlistOwner",
      "offset": [
        2093,
        2107
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "529": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "531": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "533": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "535": {
      "op": "SHL"
    },
    "536": {
      "op": "SUB"
    },
    "537": {
      "fn": "Allowlist.getAllowlistOwner",
      "offset": [
        2093,
        2107
      ],
      "op": "AND",
      "path": "0"
    },
    "538": {
      "fn": "Allowlist.getAllowlistOwner",
      "offset": [
        2018,
        2114
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1F5"
    },
    "541": {
      "fn": "Allowlist.getAllowlistOwner",
      "offset": [
        2018,
        2114
      ],
      "op": "JUMP",
      "path": "0"
    },
    "542": {
      "fn": "ERC4973.balanceOf",
      "offset": [
        5105,
        5302
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "543": {
      "fn": "ERC4973.balanceOf",
      "offset": [
        5105,
        5302
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x231"
    },
    "546": {
      "fn": "ERC4973.balanceOf",
      "offset": [
        5105,
        5302
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x22C"
    },
    "549": {
      "fn": "ERC4973.balanceOf",
      "offset": [
        5105,
        5302
      ],
      "op": "CALLDATASIZE",
      "path": "7"
    },
    "550": {
      "fn": "ERC4973.balanceOf",
      "offset": [
        5105,
        5302
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x4"
    },
    "552": {
      "fn": "ERC4973.balanceOf",
      "offset": [
        5105,
        5302
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x1601"
    },
    "555": {
      "fn": "ERC4973.balanceOf",
      "jump": "i",
      "offset": [
        5105,
        5302
      ],
      "op": "JUMP",
      "path": "7"
    },
    "556": {
      "fn": "ERC4973.balanceOf",
      "offset": [
        5105,
        5302
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "557": {
      "fn": "ERC4973.balanceOf",
      "offset": [
        5105,
        5302
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x668"
    },
    "560": {
      "fn": "ERC4973.balanceOf",
      "jump": "i",
      "offset": [
        5105,
        5302
      ],
      "op": "JUMP",
      "path": "7"
    },
    "561": {
      "fn": "ERC4973.balanceOf",
      "offset": [
        5105,
        5302
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "562": {
      "fn": "ERC4973.balanceOf",
      "offset": [
        5105,
        5302
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x40"
    },
    "564": {
      "fn": "ERC4973.balanceOf",
      "offset": [
        5105,
        5302
      ],
      "op": "MLOAD",
      "path": "7"
    },
    "565": {
      "op": "SWAP1"
    },
    "566": {
      "op": "DUP2"
    },
    "567": {
      "op": "MSTORE"
    },
    "568": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "570": {
      "op": "ADD"
    },
    "571": {
      "fn": "ERC4973.balanceOf",
      "offset": [
        5105,
        5302
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x150"
    },
    "574": {
      "op": "JUMP"
    },
    "575": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        2147,
        2248
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "576": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        2147,
        2248
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x181"
    },
    "579": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        2147,
        2248
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x6F1"
    },
    "582": {
      "fn": "Ownable.renounceOwnership",
      "jump": "i",
      "offset": [
        2147,
        2248
      ],
      "op": "JUMP",
      "path": "2"
    },
    "583": {
      "fn": "SoulboundCore.setBaseURI",
      "offset": [
        5491,
        5682
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "584": {
      "fn": "SoulboundCore.setBaseURI",
      "offset": [
        5491,
        5682
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x181"
    },
    "587": {
      "fn": "SoulboundCore.setBaseURI",
      "offset": [
        5491,
        5682
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x255"
    },
    "590": {
      "fn": "SoulboundCore.setBaseURI",
      "offset": [
        5491,
        5682
      ],
      "op": "CALLDATASIZE",
      "path": "4"
    },
    "591": {
      "fn": "SoulboundCore.setBaseURI",
      "offset": [
        5491,
        5682
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x4"
    },
    "593": {
      "fn": "SoulboundCore.setBaseURI",
      "offset": [
        5491,
        5682
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x161C"
    },
    "596": {
      "fn": "SoulboundCore.setBaseURI",
      "jump": "i",
      "offset": [
        5491,
        5682
      ],
      "op": "JUMP",
      "path": "4"
    },
    "597": {
      "fn": "SoulboundCore.setBaseURI",
      "offset": [
        5491,
        5682
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "598": {
      "fn": "SoulboundCore.setBaseURI",
      "offset": [
        5491,
        5682
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x705"
    },
    "601": {
      "fn": "SoulboundCore.setBaseURI",
      "jump": "i",
      "offset": [
        5491,
        5682
      ],
      "op": "JUMP",
      "path": "4"
    },
    "602": {
      "fn": "Ownable.owner",
      "offset": [
        1506,
        1591
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "603": {
      "fn": "Ownable.owner",
      "offset": [
        1578,
        1584
      ],
      "op": "PUSH1",
      "path": "2",
      "statement": 2,
      "value": "0x5"
    },
    "605": {
      "fn": "Ownable.owner",
      "offset": [
        1578,
        1584
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "606": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "608": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "610": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "612": {
      "op": "SHL"
    },
    "613": {
      "op": "SUB"
    },
    "614": {
      "fn": "Ownable.owner",
      "offset": [
        1578,
        1584
      ],
      "op": "AND",
      "path": "2"
    },
    "615": {
      "fn": "Ownable.owner",
      "offset": [
        1506,
        1591
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1F5"
    },
    "618": {
      "fn": "Ownable.owner",
      "offset": [
        1506,
        1591
      ],
      "op": "JUMP",
      "path": "2"
    },
    "619": {
      "fn": "ERC4973.symbol",
      "offset": [
        4653,
        4749
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "620": {
      "fn": "ERC4973.symbol",
      "offset": [
        4653,
        4749
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x161"
    },
    "623": {
      "fn": "ERC4973.symbol",
      "offset": [
        4653,
        4749
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x785"
    },
    "626": {
      "fn": "ERC4973.symbol",
      "jump": "i",
      "offset": [
        4653,
        4749
      ],
      "op": "JUMP",
      "path": "7"
    },
    "627": {
      "fn": "ERC4973.tokenURI",
      "offset": [
        4753,
        4942
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "628": {
      "fn": "ERC4973.tokenURI",
      "offset": [
        4753,
        4942
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x161"
    },
    "631": {
      "fn": "ERC4973.tokenURI",
      "offset": [
        4753,
        4942
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x281"
    },
    "634": {
      "fn": "ERC4973.tokenURI",
      "offset": [
        4753,
        4942
      ],
      "op": "CALLDATASIZE",
      "path": "7"
    },
    "635": {
      "fn": "ERC4973.tokenURI",
      "offset": [
        4753,
        4942
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x4"
    },
    "637": {
      "fn": "ERC4973.tokenURI",
      "offset": [
        4753,
        4942
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x15A2"
    },
    "640": {
      "fn": "ERC4973.tokenURI",
      "jump": "i",
      "offset": [
        4753,
        4942
      ],
      "op": "JUMP",
      "path": "7"
    },
    "641": {
      "fn": "ERC4973.tokenURI",
      "offset": [
        4753,
        4942
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "642": {
      "fn": "ERC4973.tokenURI",
      "offset": [
        4753,
        4942
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x794"
    },
    "645": {
      "fn": "ERC4973.tokenURI",
      "jump": "i",
      "offset": [
        4753,
        4942
      ],
      "op": "JUMP",
      "path": "7"
    },
    "646": {
      "fn": "Soulbound._getBaseURI",
      "offset": [
        7338,
        7585
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "647": {
      "fn": "Soulbound._getBaseURI",
      "offset": [
        7338,
        7585
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x161"
    },
    "650": {
      "fn": "Soulbound._getBaseURI",
      "offset": [
        7338,
        7585
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x889"
    },
    "653": {
      "fn": "Soulbound._getBaseURI",
      "jump": "i",
      "offset": [
        7338,
        7585
      ],
      "op": "JUMP",
      "path": "3"
    },
    "654": {
      "fn": "SoulboundCore.issueWithSignature",
      "offset": [
        2769,
        3767
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "655": {
      "fn": "SoulboundCore.issueWithSignature",
      "offset": [
        2769,
        3767
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x181"
    },
    "658": {
      "fn": "SoulboundCore.issueWithSignature",
      "offset": [
        2769,
        3767
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x29C"
    },
    "661": {
      "fn": "SoulboundCore.issueWithSignature",
      "offset": [
        2769,
        3767
      ],
      "op": "CALLDATASIZE",
      "path": "4"
    },
    "662": {
      "fn": "SoulboundCore.issueWithSignature",
      "offset": [
        2769,
        3767
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x4"
    },
    "664": {
      "fn": "SoulboundCore.issueWithSignature",
      "offset": [
        2769,
        3767
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x166A"
    },
    "667": {
      "fn": "SoulboundCore.issueWithSignature",
      "jump": "i",
      "offset": [
        2769,
        3767
      ],
      "op": "JUMP",
      "path": "4"
    },
    "668": {
      "fn": "SoulboundCore.issueWithSignature",
      "offset": [
        2769,
        3767
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "669": {
      "fn": "SoulboundCore.issueWithSignature",
      "offset": [
        2769,
        3767
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x8E6"
    },
    "672": {
      "fn": "SoulboundCore.issueWithSignature",
      "jump": "i",
      "offset": [
        2769,
        3767
      ],
      "op": "JUMP",
      "path": "4"
    },
    "673": {
      "fn": "Allowlist.verifySignature",
      "offset": [
        2334,
        2477
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "674": {
      "fn": "Allowlist.verifySignature",
      "offset": [
        2334,
        2477
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x144"
    },
    "677": {
      "fn": "Allowlist.verifySignature",
      "offset": [
        2334,
        2477
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2AF"
    },
    "680": {
      "fn": "Allowlist.verifySignature",
      "offset": [
        2334,
        2477
      ],
      "op": "CALLDATASIZE",
      "path": "0"
    },
    "681": {
      "fn": "Allowlist.verifySignature",
      "offset": [
        2334,
        2477
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "683": {
      "fn": "Allowlist.verifySignature",
      "offset": [
        2334,
        2477
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x16F2"
    },
    "686": {
      "fn": "Allowlist.verifySignature",
      "jump": "i",
      "offset": [
        2334,
        2477
      ],
      "op": "JUMP",
      "path": "0"
    },
    "687": {
      "fn": "Allowlist.verifySignature",
      "offset": [
        2334,
        2477
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "688": {
      "fn": "Allowlist.verifySignature",
      "offset": [
        2334,
        2477
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xA1B"
    },
    "691": {
      "fn": "Allowlist.verifySignature",
      "jump": "i",
      "offset": [
        2334,
        2477
      ],
      "op": "JUMP",
      "path": "0"
    },
    "692": {
      "fn": "Allowlist.verifySigner",
      "offset": [
        4649,
        4917
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "693": {
      "fn": "Allowlist.verifySigner",
      "offset": [
        4649,
        4917
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x144"
    },
    "696": {
      "fn": "Allowlist.verifySigner",
      "offset": [
        4649,
        4917
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2C2"
    },
    "699": {
      "fn": "Allowlist.verifySigner",
      "offset": [
        4649,
        4917
      ],
      "op": "CALLDATASIZE",
      "path": "0"
    },
    "700": {
      "fn": "Allowlist.verifySigner",
      "offset": [
        4649,
        4917
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "702": {
      "fn": "Allowlist.verifySigner",
      "offset": [
        4649,
        4917
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1723"
    },
    "705": {
      "fn": "Allowlist.verifySigner",
      "jump": "i",
      "offset": [
        4649,
        4917
      ],
      "op": "JUMP",
      "path": "0"
    },
    "706": {
      "fn": "Allowlist.verifySigner",
      "offset": [
        4649,
        4917
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "707": {
      "fn": "Allowlist.verifySigner",
      "offset": [
        4649,
        4917
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xA2E"
    },
    "710": {
      "fn": "Allowlist.verifySigner",
      "jump": "i",
      "offset": [
        4649,
        4917
      ],
      "op": "JUMP",
      "path": "0"
    },
    "711": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2401,
        2599
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "712": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2401,
        2599
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x181"
    },
    "715": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2401,
        2599
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2D5"
    },
    "718": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2401,
        2599
      ],
      "op": "CALLDATASIZE",
      "path": "2"
    },
    "719": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2401,
        2599
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "721": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2401,
        2599
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1601"
    },
    "724": {
      "fn": "Ownable.transferOwnership",
      "jump": "i",
      "offset": [
        2401,
        2599
      ],
      "op": "JUMP",
      "path": "2"
    },
    "725": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2401,
        2599
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "726": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2401,
        2599
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xAC2"
    },
    "729": {
      "fn": "Ownable.transferOwnership",
      "jump": "i",
      "offset": [
        2401,
        2599
      ],
      "op": "JUMP",
      "path": "2"
    },
    "730": {
      "fn": "Soulbound.issuerOf",
      "offset": [
        4277,
        4768
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "731": {
      "fn": "Soulbound.issuerOf",
      "offset": [
        4277,
        4768
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x1F5"
    },
    "734": {
      "fn": "Soulbound.issuerOf",
      "offset": [
        4277,
        4768
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x2E8"
    },
    "737": {
      "fn": "Soulbound.issuerOf",
      "offset": [
        4277,
        4768
      ],
      "op": "CALLDATASIZE",
      "path": "3"
    },
    "738": {
      "fn": "Soulbound.issuerOf",
      "offset": [
        4277,
        4768
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x4"
    },
    "740": {
      "fn": "Soulbound.issuerOf",
      "offset": [
        4277,
        4768
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x15D7"
    },
    "743": {
      "fn": "Soulbound.issuerOf",
      "jump": "i",
      "offset": [
        4277,
        4768
      ],
      "op": "JUMP",
      "path": "3"
    },
    "744": {
      "fn": "Soulbound.issuerOf",
      "offset": [
        4277,
        4768
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "745": {
      "fn": "Soulbound.issuerOf",
      "offset": [
        4277,
        4768
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xB38"
    },
    "748": {
      "fn": "Soulbound.issuerOf",
      "jump": "i",
      "offset": [
        4277,
        4768
      ],
      "op": "JUMP",
      "path": "3"
    },
    "749": {
      "fn": "ERC4973.supportsInterface",
      "offset": [
        4293,
        4553
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "750": {
      "fn": "ERC4973.supportsInterface",
      "offset": [
        4378,
        4382
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x0"
    },
    "752": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "754": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "756": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "758": {
      "op": "SHL"
    },
    "759": {
      "op": "SUB"
    },
    "760": {
      "op": "NOT"
    },
    "761": {
      "fn": "ERC4973.supportsInterface",
      "offset": [
        4403,
        4451
      ],
      "op": "DUP3",
      "path": "7",
      "statement": 3
    },
    "762": {
      "fn": "ERC4973.supportsInterface",
      "offset": [
        4403,
        4451
      ],
      "op": "AND",
      "path": "7"
    },
    "763": {
      "op": "PUSH4",
      "value": "0x5B5E139F"
    },
    "768": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "770": {
      "op": "SHL"
    },
    "771": {
      "fn": "ERC4973.supportsInterface",
      "offset": [
        4403,
        4451
      ],
      "op": "EQ",
      "path": "7"
    },
    "772": {
      "fn": "ERC4973.supportsInterface",
      "offset": [
        4403,
        4451
      ],
      "op": "DUP1",
      "path": "7"
    },
    "773": {
      "fn": "ERC4973.supportsInterface",
      "offset": [
        4403,
        4502
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x31E"
    },
    "776": {
      "fn": "ERC4973.supportsInterface",
      "offset": [
        4403,
        4502
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "777": {
      "op": "POP"
    },
    "778": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "780": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "782": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "784": {
      "op": "SHL"
    },
    "785": {
      "op": "SUB"
    },
    "786": {
      "op": "NOT"
    },
    "787": {
      "fn": "ERC4973.supportsInterface",
      "offset": [
        4461,
        4502
      ],
      "op": "DUP3",
      "path": "7"
    },
    "788": {
      "fn": "ERC4973.supportsInterface",
      "offset": [
        4461,
        4502
      ],
      "op": "AND",
      "path": "7"
    },
    "789": {
      "op": "PUSH4",
      "value": "0x5164CF47"
    },
    "794": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "796": {
      "op": "SHL"
    },
    "797": {
      "fn": "ERC4973.supportsInterface",
      "offset": [
        4461,
        4502
      ],
      "op": "EQ",
      "path": "7"
    },
    "798": {
      "fn": "ERC4973.supportsInterface",
      "offset": [
        4403,
        4502
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "799": {
      "fn": "ERC4973.supportsInterface",
      "offset": [
        4403,
        4548
      ],
      "op": "DUP1",
      "path": "7"
    },
    "800": {
      "fn": "ERC4973.supportsInterface",
      "offset": [
        4403,
        4548
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x339"
    },
    "803": {
      "fn": "ERC4973.supportsInterface",
      "offset": [
        4403,
        4548
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "804": {
      "op": "POP"
    },
    "805": {
      "op": "PUSH4",
      "value": "0x1FFC9A7"
    },
    "810": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "812": {
      "op": "SHL"
    },
    "813": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "815": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "817": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "819": {
      "op": "SHL"
    },
    "820": {
      "op": "SUB"
    },
    "821": {
      "op": "NOT"
    },
    "822": {
      "fn": "ERC165.supportsInterface",
      "offset": [
        1685,
        1725
      ],
      "op": "DUP4",
      "path": "7",
      "statement": 4
    },
    "823": {
      "fn": "ERC165.supportsInterface",
      "offset": [
        1685,
        1725
      ],
      "op": "AND",
      "path": "7"
    },
    "824": {
      "fn": "ERC165.supportsInterface",
      "offset": [
        1685,
        1725
      ],
      "op": "EQ",
      "path": "7"
    },
    "825": {
      "fn": "ERC4973.supportsInterface",
      "offset": [
        4512,
        4548
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "826": {
      "fn": "ERC4973.supportsInterface",
      "offset": [
        4390,
        4548
      ],
      "op": "SWAP3",
      "path": "7"
    },
    "827": {
      "fn": "ERC4973.supportsInterface",
      "offset": [
        4293,
        4553
      ],
      "op": "SWAP2",
      "path": "7"
    },
    "828": {
      "op": "POP"
    },
    "829": {
      "op": "POP"
    },
    "830": {
      "fn": "ERC4973.supportsInterface",
      "jump": "o",
      "offset": [
        4293,
        4553
      ],
      "op": "JUMP",
      "path": "7"
    },
    "831": {
      "fn": "ERC4973.name",
      "offset": [
        4557,
        4649
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "832": {
      "fn": "ERC4973.name",
      "offset": [
        4611,
        4624
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x60"
    },
    "834": {
      "fn": "ERC4973.name",
      "offset": [
        4639,
        4644
      ],
      "op": "PUSH1",
      "path": "7",
      "statement": 5,
      "value": "0x0"
    },
    "836": {
      "fn": "ERC4973.name",
      "offset": [
        4632,
        4644
      ],
      "op": "DUP1",
      "path": "7"
    },
    "837": {
      "fn": "ERC4973.name",
      "offset": [
        4632,
        4644
      ],
      "op": "SLOAD",
      "path": "7"
    },
    "838": {
      "fn": "ERC4973.name",
      "offset": [
        4632,
        4644
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x34E"
    },
    "841": {
      "fn": "ERC4973.name",
      "offset": [
        4632,
        4644
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "842": {
      "fn": "ERC4973.name",
      "offset": [
        4632,
        4644
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x177A"
    },
    "845": {
      "fn": "ERC4973.name",
      "jump": "i",
      "offset": [
        4632,
        4644
      ],
      "op": "JUMP",
      "path": "7"
    },
    "846": {
      "fn": "ERC4973.name",
      "offset": [
        4632,
        4644
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "847": {
      "fn": "ERC4973.name",
      "offset": [
        4632,
        4644
      ],
      "op": "DUP1",
      "path": "7"
    },
    "848": {
      "fn": "ERC4973.name",
      "offset": [
        4632,
        4644
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x1F"
    },
    "850": {
      "fn": "ERC4973.name",
      "offset": [
        4632,
        4644
      ],
      "op": "ADD",
      "path": "7"
    },
    "851": {
      "fn": "ERC4973.name",
      "offset": [
        4632,
        4644
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x20"
    },
    "853": {
      "fn": "ERC4973.name",
      "offset": [
        4632,
        4644
      ],
      "op": "DUP1",
      "path": "7"
    },
    "854": {
      "fn": "ERC4973.name",
      "offset": [
        4632,
        4644
      ],
      "op": "SWAP2",
      "path": "7"
    },
    "855": {
      "fn": "ERC4973.name",
      "offset": [
        4632,
        4644
      ],
      "op": "DIV",
      "path": "7"
    },
    "856": {
      "fn": "ERC4973.name",
      "offset": [
        4632,
        4644
      ],
      "op": "MUL",
      "path": "7"
    },
    "857": {
      "fn": "ERC4973.name",
      "offset": [
        4632,
        4644
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x20"
    },
    "859": {
      "fn": "ERC4973.name",
      "offset": [
        4632,
        4644
      ],
      "op": "ADD",
      "path": "7"
    },
    "860": {
      "fn": "ERC4973.name",
      "offset": [
        4632,
        4644
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x40"
    },
    "862": {
      "fn": "ERC4973.name",
      "offset": [
        4632,
        4644
      ],
      "op": "MLOAD",
      "path": "7"
    },
    "863": {
      "fn": "ERC4973.name",
      "offset": [
        4632,
        4644
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "864": {
      "fn": "ERC4973.name",
      "offset": [
        4632,
        4644
      ],
      "op": "DUP2",
      "path": "7"
    },
    "865": {
      "fn": "ERC4973.name",
      "offset": [
        4632,
        4644
      ],
      "op": "ADD",
      "path": "7"
    },
    "866": {
      "fn": "ERC4973.name",
      "offset": [
        4632,
        4644
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x40"
    },
    "868": {
      "fn": "ERC4973.name",
      "offset": [
        4632,
        4644
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "869": {
      "fn": "ERC4973.name",
      "offset": [
        4632,
        4644
      ],
      "op": "DUP1",
      "path": "7"
    },
    "870": {
      "fn": "ERC4973.name",
      "offset": [
        4632,
        4644
      ],
      "op": "SWAP3",
      "path": "7"
    },
    "871": {
      "fn": "ERC4973.name",
      "offset": [
        4632,
        4644
      ],
      "op": "SWAP2",
      "path": "7"
    },
    "872": {
      "fn": "ERC4973.name",
      "offset": [
        4632,
        4644
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "873": {
      "fn": "ERC4973.name",
      "offset": [
        4632,
        4644
      ],
      "op": "DUP2",
      "path": "7"
    },
    "874": {
      "fn": "ERC4973.name",
      "offset": [
        4632,
        4644
      ],
      "op": "DUP2",
      "path": "7"
    },
    "875": {
      "fn": "ERC4973.name",
      "offset": [
        4632,
        4644
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "876": {
      "fn": "ERC4973.name",
      "offset": [
        4632,
        4644
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x20"
    },
    "878": {
      "fn": "ERC4973.name",
      "offset": [
        4632,
        4644
      ],
      "op": "ADD",
      "path": "7"
    },
    "879": {
      "fn": "ERC4973.name",
      "offset": [
        4632,
        4644
      ],
      "op": "DUP3",
      "path": "7"
    },
    "880": {
      "fn": "ERC4973.name",
      "offset": [
        4632,
        4644
      ],
      "op": "DUP1",
      "path": "7"
    },
    "881": {
      "fn": "ERC4973.name",
      "offset": [
        4632,
        4644
      ],
      "op": "SLOAD",
      "path": "7"
    },
    "882": {
      "fn": "ERC4973.name",
      "offset": [
        4632,
        4644
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x37A"
    },
    "885": {
      "fn": "ERC4973.name",
      "offset": [
        4632,
        4644
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "886": {
      "fn": "ERC4973.name",
      "offset": [
        4632,
        4644
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x177A"
    },
    "889": {
      "fn": "ERC4973.name",
      "jump": "i",
      "offset": [
        4632,
        4644
      ],
      "op": "JUMP",
      "path": "7"
    },
    "890": {
      "fn": "ERC4973.name",
      "offset": [
        4632,
        4644
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "891": {
      "fn": "ERC4973.name",
      "offset": [
        4632,
        4644
      ],
      "op": "DUP1",
      "path": "7"
    },
    "892": {
      "fn": "ERC4973.name",
      "offset": [
        4632,
        4644
      ],
      "op": "ISZERO",
      "path": "7"
    },
    "893": {
      "fn": "ERC4973.name",
      "offset": [
        4632,
        4644
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x3C7"
    },
    "896": {
      "fn": "ERC4973.name",
      "offset": [
        4632,
        4644
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "897": {
      "fn": "ERC4973.name",
      "offset": [
        4632,
        4644
      ],
      "op": "DUP1",
      "path": "7"
    },
    "898": {
      "fn": "ERC4973.name",
      "offset": [
        4632,
        4644
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x1F"
    },
    "900": {
      "fn": "ERC4973.name",
      "offset": [
        4632,
        4644
      ],
      "op": "LT",
      "path": "7"
    },
    "901": {
      "fn": "ERC4973.name",
      "offset": [
        4632,
        4644
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x39C"
    },
    "904": {
      "fn": "ERC4973.name",
      "offset": [
        4632,
        4644
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "905": {
      "fn": "ERC4973.name",
      "offset": [
        4632,
        4644
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x100"
    },
    "908": {
      "fn": "ERC4973.name",
      "offset": [
        4632,
        4644
      ],
      "op": "DUP1",
      "path": "7"
    },
    "909": {
      "fn": "ERC4973.name",
      "offset": [
        4632,
        4644
      ],
      "op": "DUP4",
      "path": "7"
    },
    "910": {
      "fn": "ERC4973.name",
      "offset": [
        4632,
        4644
      ],
      "op": "SLOAD",
      "path": "7"
    },
    "911": {
      "fn": "ERC4973.name",
      "offset": [
        4632,
        4644
      ],
      "op": "DIV",
      "path": "7"
    },
    "912": {
      "fn": "ERC4973.name",
      "offset": [
        4632,
        4644
      ],
      "op": "MUL",
      "path": "7"
    },
    "913": {
      "fn": "ERC4973.name",
      "offset": [
        4632,
        4644
      ],
      "op": "DUP4",
      "path": "7"
    },
    "914": {
      "fn": "ERC4973.name",
      "offset": [
        4632,
        4644
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "915": {
      "fn": "ERC4973.name",
      "offset": [
        4632,
        4644
      ],
      "op": "SWAP2",
      "path": "7"
    },
    "916": {
      "fn": "ERC4973.name",
      "offset": [
        4632,
        4644
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x20"
    },
    "918": {
      "fn": "ERC4973.name",
      "offset": [
        4632,
        4644
      ],
      "op": "ADD",
      "path": "7"
    },
    "919": {
      "fn": "ERC4973.name",
      "offset": [
        4632,
        4644
      ],
      "op": "SWAP2",
      "path": "7"
    },
    "920": {
      "fn": "ERC4973.name",
      "offset": [
        4632,
        4644
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x3C7"
    },
    "923": {
      "fn": "ERC4973.name",
      "offset": [
        4632,
        4644
      ],
      "op": "JUMP",
      "path": "7"
    },
    "924": {
      "fn": "ERC4973.name",
      "offset": [
        4632,
        4644
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "925": {
      "fn": "ERC4973.name",
      "offset": [
        4632,
        4644
      ],
      "op": "DUP3",
      "path": "7"
    },
    "926": {
      "fn": "ERC4973.name",
      "offset": [
        4632,
        4644
      ],
      "op": "ADD",
      "path": "7"
    },
    "927": {
      "fn": "ERC4973.name",
      "offset": [
        4632,
        4644
      ],
      "op": "SWAP2",
      "path": "7"
    },
    "928": {
      "fn": "ERC4973.name",
      "offset": [
        4632,
        4644
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "929": {
      "fn": "ERC4973.name",
      "offset": [
        4632,
        4644
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x0"
    },
    "931": {
      "fn": "ERC4973.name",
      "offset": [
        4632,
        4644
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "932": {
      "fn": "ERC4973.name",
      "offset": [
        4632,
        4644
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x20"
    },
    "934": {
      "fn": "ERC4973.name",
      "offset": [
        4632,
        4644
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x0"
    },
    "936": {
      "fn": "ERC4973.name",
      "offset": [
        4632,
        4644
      ],
      "op": "KECCAK256",
      "path": "7"
    },
    "937": {
      "fn": "ERC4973.name",
      "offset": [
        4632,
        4644
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "938": {
      "fn": "ERC4973.name",
      "offset": [
        4632,
        4644
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "939": {
      "fn": "ERC4973.name",
      "offset": [
        4632,
        4644
      ],
      "op": "DUP2",
      "path": "7"
    },
    "940": {
      "fn": "ERC4973.name",
      "offset": [
        4632,
        4644
      ],
      "op": "SLOAD",
      "path": "7"
    },
    "941": {
      "fn": "ERC4973.name",
      "offset": [
        4632,
        4644
      ],
      "op": "DUP2",
      "path": "7"
    },
    "942": {
      "fn": "ERC4973.name",
      "offset": [
        4632,
        4644
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "943": {
      "fn": "ERC4973.name",
      "offset": [
        4632,
        4644
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "944": {
      "fn": "ERC4973.name",
      "offset": [
        4632,
        4644
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x1"
    },
    "946": {
      "fn": "ERC4973.name",
      "offset": [
        4632,
        4644
      ],
      "op": "ADD",
      "path": "7"
    },
    "947": {
      "fn": "ERC4973.name",
      "offset": [
        4632,
        4644
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "948": {
      "fn": "ERC4973.name",
      "offset": [
        4632,
        4644
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x20"
    },
    "950": {
      "fn": "ERC4973.name",
      "offset": [
        4632,
        4644
      ],
      "op": "ADD",
      "path": "7"
    },
    "951": {
      "fn": "ERC4973.name",
      "offset": [
        4632,
        4644
      ],
      "op": "DUP1",
      "path": "7"
    },
    "952": {
      "fn": "ERC4973.name",
      "offset": [
        4632,
        4644
      ],
      "op": "DUP4",
      "path": "7"
    },
    "953": {
      "fn": "ERC4973.name",
      "offset": [
        4632,
        4644
      ],
      "op": "GT",
      "path": "7"
    },
    "954": {
      "fn": "ERC4973.name",
      "offset": [
        4632,
        4644
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x3AA"
    },
    "957": {
      "fn": "ERC4973.name",
      "offset": [
        4632,
        4644
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "958": {
      "fn": "ERC4973.name",
      "offset": [
        4632,
        4644
      ],
      "op": "DUP3",
      "path": "7"
    },
    "959": {
      "fn": "ERC4973.name",
      "offset": [
        4632,
        4644
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "960": {
      "fn": "ERC4973.name",
      "offset": [
        4632,
        4644
      ],
      "op": "SUB",
      "path": "7"
    },
    "961": {
      "fn": "ERC4973.name",
      "offset": [
        4632,
        4644
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x1F"
    },
    "963": {
      "fn": "ERC4973.name",
      "offset": [
        4632,
        4644
      ],
      "op": "AND",
      "path": "7"
    },
    "964": {
      "fn": "ERC4973.name",
      "offset": [
        4632,
        4644
      ],
      "op": "DUP3",
      "path": "7"
    },
    "965": {
      "fn": "ERC4973.name",
      "offset": [
        4632,
        4644
      ],
      "op": "ADD",
      "path": "7"
    },
    "966": {
      "fn": "ERC4973.name",
      "offset": [
        4632,
        4644
      ],
      "op": "SWAP2",
      "path": "7"
    },
    "967": {
      "fn": "ERC4973.name",
      "offset": [
        4632,
        4644
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "968": {
      "fn": "ERC4973.name",
      "offset": [
        4632,
        4644
      ],
      "op": "POP",
      "path": "7"
    },
    "969": {
      "fn": "ERC4973.name",
      "offset": [
        4632,
        4644
      ],
      "op": "POP",
      "path": "7"
    },
    "970": {
      "fn": "ERC4973.name",
      "offset": [
        4632,
        4644
      ],
      "op": "POP",
      "path": "7"
    },
    "971": {
      "fn": "ERC4973.name",
      "offset": [
        4632,
        4644
      ],
      "op": "POP",
      "path": "7"
    },
    "972": {
      "fn": "ERC4973.name",
      "offset": [
        4632,
        4644
      ],
      "op": "POP",
      "path": "7"
    },
    "973": {
      "fn": "ERC4973.name",
      "offset": [
        4632,
        4644
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "974": {
      "fn": "ERC4973.name",
      "offset": [
        4632,
        4644
      ],
      "op": "POP",
      "path": "7"
    },
    "975": {
      "fn": "ERC4973.name",
      "offset": [
        4557,
        4649
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "976": {
      "fn": "ERC4973.name",
      "jump": "o",
      "offset": [
        4557,
        4649
      ],
      "op": "JUMP",
      "path": "7"
    },
    "977": {
      "fn": "SoulboundCore.revokeWithSignature",
      "offset": [
        4229,
        5160
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "978": {
      "fn": "SoulboundCore.revokeWithSignature",
      "offset": [
        4414,
        4430
      ],
      "op": "PUSH2",
      "path": "4",
      "statement": 6,
      "value": "0x3DA"
    },
    "981": {
      "fn": "SoulboundCore.revokeWithSignature",
      "offset": [
        4422,
        4429
      ],
      "op": "DUP2",
      "path": "4"
    },
    "982": {
      "fn": "SoulboundCore.revokeWithSignature",
      "offset": [
        4414,
        4421
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0xC4C"
    },
    "985": {
      "fn": "SoulboundCore.revokeWithSignature",
      "jump": "i",
      "offset": [
        4414,
        4430
      ],
      "op": "JUMP",
      "path": "4"
    },
    "986": {
      "branch": 79,
      "fn": "SoulboundCore.revokeWithSignature",
      "offset": [
        4414,
        4430
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "987": {
      "fn": "SoulboundCore.revokeWithSignature",
      "offset": [
        4406,
        4462
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x42B"
    },
    "990": {
      "branch": 79,
      "fn": "SoulboundCore.revokeWithSignature",
      "offset": [
        4406,
        4462
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "991": {
      "fn": "SoulboundCore.revokeWithSignature",
      "offset": [
        4406,
        4462
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "993": {
      "fn": "SoulboundCore.revokeWithSignature",
      "offset": [
        4406,
        4462
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "994": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "998": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1000": {
      "op": "SHL"
    },
    "1001": {
      "fn": "SoulboundCore.revokeWithSignature",
      "offset": [
        4406,
        4462
      ],
      "op": "DUP2",
      "path": "4"
    },
    "1002": {
      "fn": "SoulboundCore.revokeWithSignature",
      "offset": [
        4406,
        4462
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "1003": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1005": {
      "fn": "SoulboundCore.revokeWithSignature",
      "offset": [
        4406,
        4462
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x4"
    },
    "1007": {
      "fn": "SoulboundCore.revokeWithSignature",
      "offset": [
        4406,
        4462
      ],
      "op": "DUP3",
      "path": "4"
    },
    "1008": {
      "fn": "SoulboundCore.revokeWithSignature",
      "offset": [
        4406,
        4462
      ],
      "op": "ADD",
      "path": "4"
    },
    "1009": {
      "op": "MSTORE"
    },
    "1010": {
      "op": "PUSH1",
      "value": "0x1B"
    },
    "1012": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "1014": {
      "op": "DUP3"
    },
    "1015": {
      "op": "ADD"
    },
    "1016": {
      "op": "MSTORE"
    },
    "1017": {
      "op": "PUSH32",
      "value": "0x5265766F6B65206F6620696E6578697374656E7420746F6B656E2E0000000000"
    },
    "1050": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "1052": {
      "op": "DUP3"
    },
    "1053": {
      "op": "ADD"
    },
    "1054": {
      "op": "MSTORE"
    },
    "1055": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "1057": {
      "op": "ADD"
    },
    "1058": {
      "fn": "SoulboundCore.revokeWithSignature",
      "offset": [
        4406,
        4462
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "1059": {
      "fn": "SoulboundCore.revokeWithSignature",
      "offset": [
        4406,
        4462
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "1061": {
      "fn": "SoulboundCore.revokeWithSignature",
      "offset": [
        4406,
        4462
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "1062": {
      "fn": "SoulboundCore.revokeWithSignature",
      "offset": [
        4406,
        4462
      ],
      "op": "DUP1",
      "path": "4"
    },
    "1063": {
      "fn": "SoulboundCore.revokeWithSignature",
      "offset": [
        4406,
        4462
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "1064": {
      "fn": "SoulboundCore.revokeWithSignature",
      "offset": [
        4406,
        4462
      ],
      "op": "SUB",
      "path": "4"
    },
    "1065": {
      "fn": "SoulboundCore.revokeWithSignature",
      "offset": [
        4406,
        4462
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "1066": {
      "fn": "SoulboundCore.revokeWithSignature",
      "offset": [
        4406,
        4462
      ],
      "op": "REVERT",
      "optimizer_revert": true,
      "path": "4"
    },
    "1067": {
      "fn": "SoulboundCore.revokeWithSignature",
      "offset": [
        4406,
        4462
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "1068": {
      "fn": "SoulboundCore.revokeWithSignature",
      "offset": [
        4697,
        4700
      ],
      "op": "DUP2",
      "path": "4",
      "statement": 7
    },
    "1069": {
      "fn": "SoulboundCore.revokeWithSignature",
      "offset": [
        4697,
        4707
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "1070": {
      "fn": "SoulboundCore.revokeWithSignature",
      "offset": [
        4711,
        4713
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x41"
    },
    "1072": {
      "branch": 80,
      "fn": "SoulboundCore.revokeWithSignature",
      "offset": [
        4697,
        4713
      ],
      "op": "EQ",
      "path": "4"
    },
    "1073": {
      "fn": "SoulboundCore.revokeWithSignature",
      "offset": [
        4689,
        4742
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x477"
    },
    "1076": {
      "branch": 80,
      "fn": "SoulboundCore.revokeWithSignature",
      "offset": [
        4689,
        4742
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "1077": {
      "fn": "SoulboundCore.revokeWithSignature",
      "offset": [
        4689,
        4742
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "1079": {
      "fn": "SoulboundCore.revokeWithSignature",
      "offset": [
        4689,
        4742
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "1080": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1084": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1086": {
      "op": "SHL"
    },
    "1087": {
      "fn": "SoulboundCore.revokeWithSignature",
      "offset": [
        4689,
        4742
      ],
      "op": "DUP2",
      "path": "4"
    },
    "1088": {
      "fn": "SoulboundCore.revokeWithSignature",
      "offset": [
        4689,
        4742
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "1089": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1091": {
      "fn": "SoulboundCore.revokeWithSignature",
      "offset": [
        4689,
        4742
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x4"
    },
    "1093": {
      "fn": "SoulboundCore.revokeWithSignature",
      "offset": [
        4689,
        4742
      ],
      "op": "DUP3",
      "path": "4"
    },
    "1094": {
      "fn": "SoulboundCore.revokeWithSignature",
      "offset": [
        4689,
        4742
      ],
      "op": "ADD",
      "path": "4"
    },
    "1095": {
      "op": "MSTORE"
    },
    "1096": {
      "op": "PUSH1",
      "value": "0x18"
    },
    "1098": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "1100": {
      "op": "DUP3"
    },
    "1101": {
      "op": "ADD"
    },
    "1102": {
      "op": "MSTORE"
    },
    "1103": {
      "op": "PUSH24",
      "value": "0x92DCECC2D8D2C840E6D2CEDCC2E8EAE4CA40D8CADCCEE8D"
    },
    "1128": {
      "op": "PUSH1",
      "value": "0x43"
    },
    "1130": {
      "op": "SHL"
    },
    "1131": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "1133": {
      "op": "DUP3"
    },
    "1134": {
      "op": "ADD"
    },
    "1135": {
      "op": "MSTORE"
    },
    "1136": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "1138": {
      "op": "ADD"
    },
    "1139": {
      "fn": "SoulboundCore.revokeWithSignature",
      "offset": [
        4689,
        4742
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x422"
    },
    "1142": {
      "op": "JUMP"
    },
    "1143": {
      "fn": "SoulboundCore.revokeWithSignature",
      "offset": [
        4689,
        4742
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "1144": {
      "fn": "SoulboundCore.revokeWithSignature",
      "offset": [
        4869,
        4895
      ],
      "op": "PUSH2",
      "path": "4",
      "statement": 8,
      "value": "0x481"
    },
    "1147": {
      "fn": "SoulboundCore.revokeWithSignature",
      "offset": [
        4885,
        4889
      ],
      "op": "DUP4",
      "path": "4"
    },
    "1148": {
      "fn": "SoulboundCore.revokeWithSignature",
      "offset": [
        4891,
        4894
      ],
      "op": "DUP4",
      "path": "4"
    },
    "1149": {
      "fn": "SoulboundCore.revokeWithSignature",
      "offset": [
        4869,
        4884
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0xA1B"
    },
    "1152": {
      "fn": "SoulboundCore.revokeWithSignature",
      "jump": "i",
      "offset": [
        4869,
        4895
      ],
      "op": "JUMP",
      "path": "4"
    },
    "1153": {
      "branch": 81,
      "fn": "SoulboundCore.revokeWithSignature",
      "offset": [
        4869,
        4895
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "1154": {
      "fn": "SoulboundCore.revokeWithSignature",
      "offset": [
        4861,
        4925
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x4C9"
    },
    "1157": {
      "branch": 81,
      "fn": "SoulboundCore.revokeWithSignature",
      "offset": [
        4861,
        4925
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "1158": {
      "fn": "SoulboundCore.revokeWithSignature",
      "offset": [
        4861,
        4925
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "1160": {
      "fn": "SoulboundCore.revokeWithSignature",
      "offset": [
        4861,
        4925
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "1161": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1165": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1167": {
      "op": "SHL"
    },
    "1168": {
      "fn": "SoulboundCore.revokeWithSignature",
      "offset": [
        4861,
        4925
      ],
      "op": "DUP2",
      "path": "4"
    },
    "1169": {
      "fn": "SoulboundCore.revokeWithSignature",
      "offset": [
        4861,
        4925
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "1170": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1172": {
      "fn": "SoulboundCore.revokeWithSignature",
      "offset": [
        4861,
        4925
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x4"
    },
    "1174": {
      "fn": "SoulboundCore.revokeWithSignature",
      "offset": [
        4861,
        4925
      ],
      "op": "DUP3",
      "path": "4"
    },
    "1175": {
      "fn": "SoulboundCore.revokeWithSignature",
      "offset": [
        4861,
        4925
      ],
      "op": "ADD",
      "path": "4"
    },
    "1176": {
      "op": "MSTORE"
    },
    "1177": {
      "op": "PUSH1",
      "value": "0x19"
    },
    "1179": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "1181": {
      "op": "DUP3"
    },
    "1182": {
      "op": "ADD"
    },
    "1183": {
      "op": "MSTORE"
    },
    "1184": {
      "op": "PUSH25",
      "value": "0x2430B9B4103737BA1039B4B3B732B210313C9037BBB732B917"
    },
    "1210": {
      "op": "PUSH1",
      "value": "0x39"
    },
    "1212": {
      "op": "SHL"
    },
    "1213": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "1215": {
      "op": "DUP3"
    },
    "1216": {
      "op": "ADD"
    },
    "1217": {
      "op": "MSTORE"
    },
    "1218": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "1220": {
      "op": "ADD"
    },
    "1221": {
      "fn": "SoulboundCore.revokeWithSignature",
      "offset": [
        4861,
        4925
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x422"
    },
    "1224": {
      "op": "JUMP"
    },
    "1225": {
      "fn": "SoulboundCore.revokeWithSignature",
      "offset": [
        4861,
        4925
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "1226": {
      "fn": "SoulboundCore.revokeWithSignature",
      "offset": [
        5024,
        5057
      ],
      "op": "PUSH2",
      "path": "4",
      "statement": 9,
      "value": "0x4DB"
    },
    "1229": {
      "fn": "SoulboundCore.revokeWithSignature",
      "offset": [
        5031,
        5047
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x4D5"
    },
    "1232": {
      "fn": "SoulboundCore.revokeWithSignature",
      "offset": [
        5039,
        5046
      ],
      "op": "DUP3",
      "path": "4"
    },
    "1233": {
      "fn": "SoulboundCore.revokeWithSignature",
      "offset": [
        5031,
        5038
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x603"
    },
    "1236": {
      "fn": "SoulboundCore.revokeWithSignature",
      "jump": "i",
      "offset": [
        5031,
        5047
      ],
      "op": "JUMP",
      "path": "4"
    },
    "1237": {
      "fn": "SoulboundCore.revokeWithSignature",
      "offset": [
        5031,
        5047
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "1238": {
      "fn": "SoulboundCore.revokeWithSignature",
      "offset": [
        5049,
        5056
      ],
      "op": "DUP3",
      "path": "4"
    },
    "1239": {
      "fn": "SoulboundCore.revokeWithSignature",
      "offset": [
        5024,
        5030
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0xC69"
    },
    "1242": {
      "fn": "SoulboundCore.revokeWithSignature",
      "jump": "i",
      "offset": [
        5024,
        5057
      ],
      "op": "JUMP",
      "path": "4"
    },
    "1243": {
      "fn": "SoulboundCore.revokeWithSignature",
      "offset": [
        5024,
        5057
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "1244": {
      "op": "POP"
    },
    "1245": {
      "fn": "SoulboundCore.revokeWithSignature",
      "offset": [
        5125,
        5153
      ],
      "op": "PUSH1",
      "path": "4",
      "statement": 10,
      "value": "0x40"
    },
    "1247": {
      "fn": "SoulboundCore.revokeWithSignature",
      "offset": [
        5125,
        5153
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "1248": {
      "fn": "SoulboundCore.revokeWithSignature",
      "offset": [
        5145,
        5152
      ],
      "op": "DUP2",
      "path": "4"
    },
    "1249": {
      "fn": "SoulboundCore.revokeWithSignature",
      "offset": [
        5145,
        5152
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "1250": {
      "fn": "SoulboundCore.revokeWithSignature",
      "offset": [
        5125,
        5153
      ],
      "op": "PUSH32",
      "path": "4",
      "value": "0xF947BF2266AFEDE98F27AD2312DB8B2A17921852307F979B6F14A2B41FA774BC"
    },
    "1283": {
      "fn": "SoulboundCore.revokeWithSignature",
      "offset": [
        5125,
        5153
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "1284": {
      "fn": "SoulboundCore.revokeWithSignature",
      "offset": [
        5125,
        5153
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "1286": {
      "fn": "SoulboundCore.revokeWithSignature",
      "offset": [
        5125,
        5153
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "1287": {
      "fn": "SoulboundCore.revokeWithSignature",
      "offset": [
        5125,
        5153
      ],
      "op": "LOG2",
      "path": "4"
    },
    "1288": {
      "fn": "SoulboundCore.revokeWithSignature",
      "offset": [
        4229,
        5160
      ],
      "op": "POP",
      "path": "4"
    },
    "1289": {
      "fn": "SoulboundCore.revokeWithSignature",
      "offset": [
        4229,
        5160
      ],
      "op": "POP",
      "path": "4"
    },
    "1290": {
      "fn": "SoulboundCore.revokeWithSignature",
      "offset": [
        4229,
        5160
      ],
      "op": "POP",
      "path": "4"
    },
    "1291": {
      "fn": "SoulboundCore.revokeWithSignature",
      "jump": "o",
      "offset": [
        4229,
        5160
      ],
      "op": "JUMP",
      "path": "4"
    },
    "1292": {
      "fn": "SoulboundCore.generateTokenURI",
      "offset": [
        6072,
        6477
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "1293": {
      "fn": "SoulboundCore.generateTokenURI",
      "offset": [
        6149,
        6172
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x60"
    },
    "1295": {
      "fn": "SoulboundCore.generateTokenURI",
      "offset": [
        6262,
        6275
      ],
      "op": "PUSH2",
      "path": "4",
      "statement": 11,
      "value": "0x516"
    },
    "1298": {
      "fn": "SoulboundCore.generateTokenURI",
      "offset": [
        6262,
        6273
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x889"
    },
    "1301": {
      "fn": "SoulboundCore.generateTokenURI",
      "jump": "i",
      "offset": [
        6262,
        6275
      ],
      "op": "JUMP",
      "path": "4"
    },
    "1302": {
      "fn": "SoulboundCore.generateTokenURI",
      "offset": [
        6262,
        6275
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "1303": {
      "fn": "SoulboundCore.generateTokenURI",
      "offset": [
        6256,
        6283
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "1304": {
      "fn": "SoulboundCore.generateTokenURI",
      "offset": [
        6287,
        6288
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "1306": {
      "branch": 82,
      "fn": "SoulboundCore.generateTokenURI",
      "offset": [
        6256,
        6288
      ],
      "op": "SUB",
      "path": "4"
    },
    "1307": {
      "fn": "SoulboundCore.generateTokenURI",
      "offset": [
        6248,
        6306
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x556"
    },
    "1310": {
      "branch": 82,
      "fn": "SoulboundCore.generateTokenURI",
      "offset": [
        6248,
        6306
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "1311": {
      "fn": "SoulboundCore.generateTokenURI",
      "offset": [
        6248,
        6306
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "1313": {
      "fn": "SoulboundCore.generateTokenURI",
      "offset": [
        6248,
        6306
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "1314": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1318": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1320": {
      "op": "SHL"
    },
    "1321": {
      "fn": "SoulboundCore.generateTokenURI",
      "offset": [
        6248,
        6306
      ],
      "op": "DUP2",
      "path": "4"
    },
    "1322": {
      "fn": "SoulboundCore.generateTokenURI",
      "offset": [
        6248,
        6306
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "1323": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1325": {
      "fn": "SoulboundCore.generateTokenURI",
      "offset": [
        6248,
        6306
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x4"
    },
    "1327": {
      "fn": "SoulboundCore.generateTokenURI",
      "offset": [
        6248,
        6306
      ],
      "op": "DUP3",
      "path": "4"
    },
    "1328": {
      "fn": "SoulboundCore.generateTokenURI",
      "offset": [
        6248,
        6306
      ],
      "op": "ADD",
      "path": "4"
    },
    "1329": {
      "op": "MSTORE"
    },
    "1330": {
      "op": "PUSH1",
      "value": "0xD"
    },
    "1332": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "1334": {
      "op": "DUP3"
    },
    "1335": {
      "op": "ADD"
    },
    "1336": {
      "op": "MSTORE"
    },
    "1337": {
      "op": "PUSH13",
      "value": "0x456D7074792062617365555249"
    },
    "1351": {
      "op": "PUSH1",
      "value": "0x98"
    },
    "1353": {
      "op": "SHL"
    },
    "1354": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "1356": {
      "op": "DUP3"
    },
    "1357": {
      "op": "ADD"
    },
    "1358": {
      "op": "MSTORE"
    },
    "1359": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "1361": {
      "op": "ADD"
    },
    "1362": {
      "fn": "SoulboundCore.generateTokenURI",
      "offset": [
        6248,
        6306
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x422"
    },
    "1365": {
      "op": "JUMP"
    },
    "1366": {
      "fn": "SoulboundCore.generateTokenURI",
      "offset": [
        6248,
        6306
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "1367": {
      "fn": "SoulboundCore.generateTokenURI",
      "offset": [
        6415,
        6428
      ],
      "op": "PUSH2",
      "path": "4",
      "statement": 12,
      "value": "0x55E"
    },
    "1370": {
      "fn": "SoulboundCore.generateTokenURI",
      "offset": [
        6415,
        6426
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x889"
    },
    "1373": {
      "fn": "SoulboundCore.generateTokenURI",
      "jump": "i",
      "offset": [
        6415,
        6428
      ],
      "op": "JUMP",
      "path": "4"
    },
    "1374": {
      "fn": "SoulboundCore.generateTokenURI",
      "offset": [
        6415,
        6428
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "1375": {
      "fn": "SoulboundCore.generateTokenURI",
      "offset": [
        6442,
        6459
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x567"
    },
    "1378": {
      "fn": "SoulboundCore.generateTokenURI",
      "offset": [
        6451,
        6458
      ],
      "op": "DUP4",
      "path": "4"
    },
    "1379": {
      "fn": "SoulboundCore.generateTokenURI",
      "offset": [
        6442,
        6450
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0xD31"
    },
    "1382": {
      "fn": "SoulboundCore.generateTokenURI",
      "jump": "i",
      "offset": [
        6442,
        6459
      ],
      "op": "JUMP",
      "path": "4"
    },
    "1383": {
      "fn": "SoulboundCore.generateTokenURI",
      "offset": [
        6442,
        6459
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "1384": {
      "fn": "SoulboundCore.generateTokenURI",
      "offset": [
        6385,
        6469
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "1386": {
      "fn": "SoulboundCore.generateTokenURI",
      "offset": [
        6385,
        6469
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "1387": {
      "fn": "SoulboundCore.generateTokenURI",
      "offset": [
        6385,
        6469
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x20"
    },
    "1389": {
      "fn": "SoulboundCore.generateTokenURI",
      "offset": [
        6385,
        6469
      ],
      "op": "ADD",
      "path": "4"
    },
    "1390": {
      "fn": "SoulboundCore.generateTokenURI",
      "offset": [
        6385,
        6469
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x578"
    },
    "1393": {
      "fn": "SoulboundCore.generateTokenURI",
      "offset": [
        6385,
        6469
      ],
      "op": "SWAP3",
      "path": "4"
    },
    "1394": {
      "fn": "SoulboundCore.generateTokenURI",
      "offset": [
        6385,
        6469
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "1395": {
      "fn": "SoulboundCore.generateTokenURI",
      "offset": [
        6385,
        6469
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "1396": {
      "fn": "SoulboundCore.generateTokenURI",
      "offset": [
        6385,
        6469
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x17B4"
    },
    "1399": {
      "fn": "SoulboundCore.generateTokenURI",
      "jump": "i",
      "offset": [
        6385,
        6469
      ],
      "op": "JUMP",
      "path": "4"
    },
    "1400": {
      "fn": "SoulboundCore.generateTokenURI",
      "offset": [
        6385,
        6469
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "1401": {
      "fn": "SoulboundCore.generateTokenURI",
      "offset": [
        6385,
        6469
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "1403": {
      "fn": "SoulboundCore.generateTokenURI",
      "offset": [
        6385,
        6469
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "1404": {
      "fn": "SoulboundCore.generateTokenURI",
      "offset": [
        6385,
        6469
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x20"
    },
    "1406": {
      "fn": "SoulboundCore.generateTokenURI",
      "offset": [
        6385,
        6469
      ],
      "op": "DUP2",
      "path": "4"
    },
    "1407": {
      "fn": "SoulboundCore.generateTokenURI",
      "offset": [
        6385,
        6469
      ],
      "op": "DUP4",
      "path": "4"
    },
    "1408": {
      "fn": "SoulboundCore.generateTokenURI",
      "offset": [
        6385,
        6469
      ],
      "op": "SUB",
      "path": "4"
    },
    "1409": {
      "fn": "SoulboundCore.generateTokenURI",
      "offset": [
        6385,
        6469
      ],
      "op": "SUB",
      "path": "4"
    },
    "1410": {
      "fn": "SoulboundCore.generateTokenURI",
      "offset": [
        6385,
        6469
      ],
      "op": "DUP2",
      "path": "4"
    },
    "1411": {
      "fn": "SoulboundCore.generateTokenURI",
      "offset": [
        6385,
        6469
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "1412": {
      "fn": "SoulboundCore.generateTokenURI",
      "offset": [
        6385,
        6469
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "1413": {
      "fn": "SoulboundCore.generateTokenURI",
      "offset": [
        6385,
        6469
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "1415": {
      "fn": "SoulboundCore.generateTokenURI",
      "offset": [
        6385,
        6469
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "1416": {
      "fn": "SoulboundCore.generateTokenURI",
      "offset": [
        6366,
        6470
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "1417": {
      "fn": "SoulboundCore.generateTokenURI",
      "offset": [
        6366,
        6470
      ],
      "op": "POP",
      "path": "4"
    },
    "1418": {
      "fn": "SoulboundCore.generateTokenURI",
      "offset": [
        6072,
        6477
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "1419": {
      "fn": "SoulboundCore.generateTokenURI",
      "offset": [
        6072,
        6477
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "1420": {
      "fn": "SoulboundCore.generateTokenURI",
      "offset": [
        6072,
        6477
      ],
      "op": "POP",
      "path": "4"
    },
    "1421": {
      "fn": "SoulboundCore.generateTokenURI",
      "jump": "o",
      "offset": [
        6072,
        6477
      ],
      "op": "JUMP",
      "path": "4"
    },
    "1422": {
      "fn": "ERC4973.burn",
      "offset": [
        4946,
        5101
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "1423": {
      "fn": "ERC4973.burn",
      "offset": [
        5029,
        5045
      ],
      "op": "PUSH2",
      "path": "7",
      "statement": 13,
      "value": "0x597"
    },
    "1426": {
      "fn": "ERC4973.burn",
      "offset": [
        5037,
        5044
      ],
      "op": "DUP2",
      "path": "7"
    },
    "1427": {
      "fn": "ERC4973.burn",
      "offset": [
        5029,
        5036
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x603"
    },
    "1430": {
      "fn": "ERC4973.burn",
      "jump": "i",
      "offset": [
        5029,
        5045
      ],
      "op": "JUMP",
      "path": "7"
    },
    "1431": {
      "fn": "ERC4973.burn",
      "offset": [
        5029,
        5045
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "1432": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1434": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1436": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1438": {
      "op": "SHL"
    },
    "1439": {
      "op": "SUB"
    },
    "1440": {
      "fn": "ERC4973.burn",
      "offset": [
        5015,
        5045
      ],
      "op": "AND",
      "path": "7"
    },
    "1441": {
      "fn": "ERC4973.burn",
      "offset": [
        5015,
        5025
      ],
      "op": "CALLER",
      "path": "7"
    },
    "1442": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1444": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1446": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1448": {
      "op": "SHL"
    },
    "1449": {
      "op": "SUB"
    },
    "1450": {
      "fn": "ERC4973.burn",
      "offset": [
        5015,
        5045
      ],
      "op": "AND",
      "path": "7"
    },
    "1451": {
      "branch": 90,
      "fn": "ERC4973.burn",
      "offset": [
        5015,
        5045
      ],
      "op": "EQ",
      "path": "7"
    },
    "1452": {
      "fn": "ERC4973.burn",
      "offset": [
        5007,
        5076
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x5F7"
    },
    "1455": {
      "branch": 90,
      "fn": "ERC4973.burn",
      "offset": [
        5007,
        5076
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "1456": {
      "fn": "ERC4973.burn",
      "offset": [
        5007,
        5076
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x40"
    },
    "1458": {
      "fn": "ERC4973.burn",
      "offset": [
        5007,
        5076
      ],
      "op": "MLOAD",
      "path": "7"
    },
    "1459": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1463": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1465": {
      "op": "SHL"
    },
    "1466": {
      "fn": "ERC4973.burn",
      "offset": [
        5007,
        5076
      ],
      "op": "DUP2",
      "path": "7"
    },
    "1467": {
      "fn": "ERC4973.burn",
      "offset": [
        5007,
        5076
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "1468": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1470": {
      "fn": "ERC4973.burn",
      "offset": [
        5007,
        5076
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x4"
    },
    "1472": {
      "fn": "ERC4973.burn",
      "offset": [
        5007,
        5076
      ],
      "op": "DUP3",
      "path": "7"
    },
    "1473": {
      "fn": "ERC4973.burn",
      "offset": [
        5007,
        5076
      ],
      "op": "ADD",
      "path": "7"
    },
    "1474": {
      "op": "MSTORE"
    },
    "1475": {
      "op": "PUSH1",
      "value": "0x1A"
    },
    "1477": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "1479": {
      "op": "DUP3"
    },
    "1480": {
      "op": "ADD"
    },
    "1481": {
      "op": "MSTORE"
    },
    "1482": {
      "op": "PUSH32",
      "value": "0x6275726E3A2073656E646572206D757374206265206F776E6572000000000000"
    },
    "1515": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "1517": {
      "op": "DUP3"
    },
    "1518": {
      "op": "ADD"
    },
    "1519": {
      "op": "MSTORE"
    },
    "1520": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "1522": {
      "op": "ADD"
    },
    "1523": {
      "fn": "ERC4973.burn",
      "offset": [
        5007,
        5076
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x422"
    },
    "1526": {
      "op": "JUMP"
    },
    "1527": {
      "fn": "ERC4973.burn",
      "offset": [
        5007,
        5076
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "1528": {
      "fn": "ERC4973.burn",
      "offset": [
        5082,
        5096
      ],
      "op": "PUSH2",
      "path": "7",
      "statement": 14,
      "value": "0x600"
    },
    "1531": {
      "fn": "ERC4973.burn",
      "offset": [
        5088,
        5095
      ],
      "op": "DUP2",
      "path": "7"
    },
    "1532": {
      "fn": "ERC4973.burn",
      "offset": [
        5082,
        5087
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0xE3A"
    },
    "1535": {
      "fn": "ERC4973.burn",
      "jump": "i",
      "offset": [
        5082,
        5096
      ],
      "op": "JUMP",
      "path": "7"
    },
    "1536": {
      "fn": "ERC4973.burn",
      "offset": [
        5082,
        5096
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "1537": {
      "fn": "ERC4973.burn",
      "offset": [
        4946,
        5101
      ],
      "op": "POP",
      "path": "7"
    },
    "1538": {
      "fn": "ERC4973.burn",
      "jump": "o",
      "offset": [
        4946,
        5101
      ],
      "op": "JUMP",
      "path": "7"
    },
    "1539": {
      "fn": "ERC4973.ownerOf",
      "offset": [
        5306,
        5505
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "1540": {
      "fn": "ERC4973.ownerOf",
      "offset": [
        5369,
        5376
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x0"
    },
    "1542": {
      "fn": "ERC4973.ownerOf",
      "offset": [
        5400,
        5416
      ],
      "op": "DUP2",
      "path": "7"
    },
    "1543": {
      "fn": "ERC4973.ownerOf",
      "offset": [
        5400,
        5416
      ],
      "op": "DUP2",
      "path": "7"
    },
    "1544": {
      "fn": "ERC4973.ownerOf",
      "offset": [
        5400,
        5416
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "1545": {
      "fn": "ERC4973.ownerOf",
      "offset": [
        5400,
        5407
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x2"
    },
    "1547": {
      "fn": "ERC4973.ownerOf",
      "offset": [
        5400,
        5416
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x20"
    },
    "1549": {
      "fn": "ERC4973.ownerOf",
      "offset": [
        5400,
        5416
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "1550": {
      "fn": "ERC4973.ownerOf",
      "offset": [
        5400,
        5416
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x40"
    },
    "1552": {
      "fn": "ERC4973.ownerOf",
      "offset": [
        5400,
        5416
      ],
      "op": "DUP2",
      "path": "7"
    },
    "1553": {
      "fn": "ERC4973.ownerOf",
      "offset": [
        5400,
        5416
      ],
      "op": "KECCAK256",
      "path": "7"
    },
    "1554": {
      "fn": "ERC4973.ownerOf",
      "offset": [
        5400,
        5416
      ],
      "op": "SLOAD",
      "path": "7"
    },
    "1555": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1557": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1559": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1561": {
      "op": "SHL"
    },
    "1562": {
      "op": "SUB"
    },
    "1563": {
      "fn": "ERC4973.ownerOf",
      "offset": [
        5400,
        5416
      ],
      "op": "AND",
      "path": "7"
    },
    "1564": {
      "fn": "ERC4973.ownerOf",
      "offset": [
        5400,
        5416
      ],
      "op": "DUP1",
      "path": "7"
    },
    "1565": {
      "fn": "ERC4973.ownerOf",
      "offset": [
        5422,
        5482
      ],
      "op": "PUSH2",
      "path": "7",
      "statement": 15,
      "value": "0x339"
    },
    "1568": {
      "fn": "ERC4973.ownerOf",
      "offset": [
        5422,
        5482
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "1569": {
      "fn": "ERC4973.ownerOf",
      "offset": [
        5422,
        5482
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x40"
    },
    "1571": {
      "fn": "ERC4973.ownerOf",
      "offset": [
        5422,
        5482
      ],
      "op": "MLOAD",
      "path": "7"
    },
    "1572": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1576": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1578": {
      "op": "SHL"
    },
    "1579": {
      "fn": "ERC4973.ownerOf",
      "offset": [
        5422,
        5482
      ],
      "op": "DUP2",
      "path": "7"
    },
    "1580": {
      "fn": "ERC4973.ownerOf",
      "offset": [
        5422,
        5482
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "1581": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1583": {
      "fn": "ERC4973.ownerOf",
      "offset": [
        5422,
        5482
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x4"
    },
    "1585": {
      "fn": "ERC4973.ownerOf",
      "offset": [
        5422,
        5482
      ],
      "op": "DUP3",
      "path": "7"
    },
    "1586": {
      "fn": "ERC4973.ownerOf",
      "offset": [
        5422,
        5482
      ],
      "op": "ADD",
      "path": "7"
    },
    "1587": {
      "op": "MSTORE"
    },
    "1588": {
      "op": "PUSH1",
      "value": "0x1C"
    },
    "1590": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "1592": {
      "op": "DUP3"
    },
    "1593": {
      "op": "ADD"
    },
    "1594": {
      "op": "MSTORE"
    },
    "1595": {
      "op": "PUSH32",
      "value": "0x6F776E65724F663A20746F6B656E20646F65736E277420657869737400000000"
    },
    "1628": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "1630": {
      "op": "DUP3"
    },
    "1631": {
      "op": "ADD"
    },
    "1632": {
      "op": "MSTORE"
    },
    "1633": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "1635": {
      "op": "ADD"
    },
    "1636": {
      "fn": "ERC4973.ownerOf",
      "offset": [
        5422,
        5482
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x422"
    },
    "1639": {
      "op": "JUMP"
    },
    "1640": {
      "fn": "ERC4973.balanceOf",
      "offset": [
        5105,
        5302
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "1641": {
      "fn": "ERC4973.balanceOf",
      "offset": [
        5177,
        5184
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x0"
    },
    "1643": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1645": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1647": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1649": {
      "op": "SHL"
    },
    "1650": {
      "op": "SUB"
    },
    "1651": {
      "fn": "ERC4973.balanceOf",
      "offset": [
        5200,
        5219
      ],
      "op": "DUP3",
      "path": "7",
      "statement": 16
    },
    "1652": {
      "branch": 91,
      "fn": "ERC4973.balanceOf",
      "offset": [
        5200,
        5219
      ],
      "op": "AND",
      "path": "7"
    },
    "1653": {
      "fn": "ERC4973.balanceOf",
      "offset": [
        5192,
        5268
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x6D5"
    },
    "1656": {
      "branch": 91,
      "fn": "ERC4973.balanceOf",
      "offset": [
        5192,
        5268
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "1657": {
      "fn": "ERC4973.balanceOf",
      "offset": [
        5192,
        5268
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x40"
    },
    "1659": {
      "fn": "ERC4973.balanceOf",
      "offset": [
        5192,
        5268
      ],
      "op": "MLOAD",
      "path": "7"
    },
    "1660": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1664": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1666": {
      "op": "SHL"
    },
    "1667": {
      "fn": "ERC4973.balanceOf",
      "offset": [
        5192,
        5268
      ],
      "op": "DUP2",
      "path": "7"
    },
    "1668": {
      "fn": "ERC4973.balanceOf",
      "offset": [
        5192,
        5268
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "1669": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1671": {
      "fn": "ERC4973.balanceOf",
      "offset": [
        5192,
        5268
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x4"
    },
    "1673": {
      "fn": "ERC4973.balanceOf",
      "offset": [
        5192,
        5268
      ],
      "op": "DUP3",
      "path": "7"
    },
    "1674": {
      "fn": "ERC4973.balanceOf",
      "offset": [
        5192,
        5268
      ],
      "op": "ADD",
      "path": "7"
    },
    "1675": {
      "op": "MSTORE"
    },
    "1676": {
      "op": "PUSH1",
      "value": "0x2C"
    },
    "1678": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "1680": {
      "op": "DUP3"
    },
    "1681": {
      "op": "ADD"
    },
    "1682": {
      "op": "MSTORE"
    },
    "1683": {
      "op": "PUSH32",
      "value": "0x62616C616E63654F663A2061646472657373207A65726F206973206E6F742061"
    },
    "1716": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "1718": {
      "op": "DUP3"
    },
    "1719": {
      "op": "ADD"
    },
    "1720": {
      "op": "MSTORE"
    },
    "1721": {
      "op": "PUSH12",
      "value": "0x103B30B634B21037BBB732B9"
    },
    "1734": {
      "op": "PUSH1",
      "value": "0xA1"
    },
    "1736": {
      "op": "SHL"
    },
    "1737": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "1739": {
      "op": "DUP3"
    },
    "1740": {
      "op": "ADD"
    },
    "1741": {
      "op": "MSTORE"
    },
    "1742": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "1744": {
      "op": "ADD"
    },
    "1745": {
      "fn": "ERC4973.balanceOf",
      "offset": [
        5192,
        5268
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x422"
    },
    "1748": {
      "op": "JUMP"
    },
    "1749": {
      "fn": "ERC4973.balanceOf",
      "offset": [
        5192,
        5268
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "1750": {
      "op": "POP"
    },
    "1751": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1753": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1755": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1757": {
      "op": "SHL"
    },
    "1758": {
      "op": "SUB"
    },
    "1759": {
      "fn": "ERC4973.balanceOf",
      "offset": [
        5281,
        5297
      ],
      "op": "AND",
      "path": "7",
      "statement": 17
    },
    "1760": {
      "fn": "ERC4973.balanceOf",
      "offset": [
        5281,
        5297
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x0"
    },
    "1762": {
      "fn": "ERC4973.balanceOf",
      "offset": [
        5281,
        5297
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "1763": {
      "fn": "ERC4973.balanceOf",
      "offset": [
        5281,
        5297
      ],
      "op": "DUP2",
      "path": "7"
    },
    "1764": {
      "fn": "ERC4973.balanceOf",
      "offset": [
        5281,
        5297
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "1765": {
      "fn": "ERC4973.balanceOf",
      "offset": [
        5281,
        5290
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x4"
    },
    "1767": {
      "fn": "ERC4973.balanceOf",
      "offset": [
        5281,
        5297
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x20"
    },
    "1769": {
      "fn": "ERC4973.balanceOf",
      "offset": [
        5281,
        5297
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "1770": {
      "fn": "ERC4973.balanceOf",
      "offset": [
        5281,
        5297
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x40"
    },
    "1772": {
      "fn": "ERC4973.balanceOf",
      "offset": [
        5281,
        5297
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "1773": {
      "fn": "ERC4973.balanceOf",
      "offset": [
        5281,
        5297
      ],
      "op": "KECCAK256",
      "path": "7"
    },
    "1774": {
      "fn": "ERC4973.balanceOf",
      "offset": [
        5281,
        5297
      ],
      "op": "SLOAD",
      "path": "7"
    },
    "1775": {
      "fn": "ERC4973.balanceOf",
      "offset": [
        5281,
        5297
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "1776": {
      "fn": "ERC4973.balanceOf",
      "jump": "o",
      "offset": [
        5105,
        5302
      ],
      "op": "JUMP",
      "path": "7"
    },
    "1777": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        2147,
        2248
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1778": {
      "offset": [
        1401,
        1414
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x6F9"
    },
    "1781": {
      "offset": [
        1401,
        1412
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xEE1"
    },
    "1784": {
      "jump": "i",
      "offset": [
        1401,
        1414
      ],
      "op": "JUMP",
      "path": "2"
    },
    "1785": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1401,
        1414
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1786": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        2211,
        2241
      ],
      "op": "PUSH2",
      "path": "2",
      "statement": 18,
      "value": "0x703"
    },
    "1789": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        2238,
        2239
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "1791": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        2211,
        2229
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xF3B"
    },
    "1794": {
      "fn": "Ownable.renounceOwnership",
      "jump": "i",
      "offset": [
        2211,
        2241
      ],
      "op": "JUMP",
      "path": "2"
    },
    "1795": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        2211,
        2241
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1796": {
      "fn": "Ownable.renounceOwnership",
      "jump": "o",
      "offset": [
        2147,
        2248
      ],
      "op": "JUMP",
      "path": "2"
    },
    "1797": {
      "fn": "SoulboundCore.setBaseURI",
      "offset": [
        5491,
        5682
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "1798": {
      "offset": [
        1401,
        1414
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x70D"
    },
    "1801": {
      "offset": [
        1401,
        1412
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xEE1"
    },
    "1804": {
      "jump": "i",
      "offset": [
        1401,
        1414
      ],
      "op": "JUMP",
      "path": "2"
    },
    "1805": {
      "fn": "SoulboundCore.setBaseURI",
      "offset": [
        1401,
        1414
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1806": {
      "fn": "SoulboundCore.setBaseURI",
      "offset": [
        5602,
        5608
      ],
      "op": "DUP2",
      "path": "4"
    },
    "1807": {
      "offset": [
        1669,
        1688
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x720"
    },
    "1810": {
      "fn": "Allowlist.getAllowlistOwner",
      "offset": [
        2093,
        2107
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x8"
    },
    "1812": {
      "fn": "Allowlist.getAllowlistOwner",
      "offset": [
        2093,
        2107
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "1813": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1815": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1817": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1819": {
      "op": "SHL"
    },
    "1820": {
      "op": "SUB"
    },
    "1821": {
      "fn": "Allowlist.getAllowlistOwner",
      "offset": [
        2093,
        2107
      ],
      "op": "AND",
      "path": "0"
    },
    "1822": {
      "fn": "Allowlist.getAllowlistOwner",
      "offset": [
        2093,
        2107
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1823": {
      "fn": "Allowlist.getAllowlistOwner",
      "offset": [
        2018,
        2114
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1824": {
      "offset": [
        1669,
        1688
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "1825": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1827": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1829": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1831": {
      "op": "SHL"
    },
    "1832": {
      "op": "SUB"
    },
    "1833": {
      "offset": [
        1658,
        1688
      ],
      "op": "AND",
      "path": "4"
    },
    "1834": {
      "offset": [
        1658,
        1665
      ],
      "op": "DUP2",
      "path": "4"
    },
    "1835": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1837": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1839": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1841": {
      "op": "SHL"
    },
    "1842": {
      "op": "SUB"
    },
    "1843": {
      "offset": [
        1658,
        1688
      ],
      "op": "AND",
      "path": "4"
    },
    "1844": {
      "branch": 83,
      "fn": "Allowlist.getAllowlistOwner",
      "offset": [
        1658,
        1688
      ],
      "op": "EQ",
      "path": "4"
    },
    "1845": {
      "offset": [
        1650,
        1713
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x777"
    },
    "1848": {
      "branch": 83,
      "offset": [
        1650,
        1713
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "1849": {
      "fn": "Allowlist.getAllowlistOwner",
      "offset": [
        1650,
        1713
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "1851": {
      "fn": "Allowlist.getAllowlistOwner",
      "offset": [
        1650,
        1713
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "1852": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1856": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1858": {
      "op": "SHL"
    },
    "1859": {
      "offset": [
        1650,
        1713
      ],
      "op": "DUP2",
      "path": "4"
    },
    "1860": {
      "fn": "Allowlist.getAllowlistOwner",
      "offset": [
        1650,
        1713
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "1861": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1863": {
      "offset": [
        1650,
        1713
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x4"
    },
    "1865": {
      "fn": "Allowlist.getAllowlistOwner",
      "offset": [
        1650,
        1713
      ],
      "op": "DUP3",
      "path": "4"
    },
    "1866": {
      "fn": "Allowlist.getAllowlistOwner",
      "offset": [
        1650,
        1713
      ],
      "op": "ADD",
      "path": "4"
    },
    "1867": {
      "op": "MSTORE"
    },
    "1868": {
      "op": "PUSH1",
      "value": "0x14"
    },
    "1870": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "1872": {
      "op": "DUP3"
    },
    "1873": {
      "op": "ADD"
    },
    "1874": {
      "op": "MSTORE"
    },
    "1875": {
      "op": "PUSH20",
      "value": "0x4E6F7420416C6C6F776C697374204F776E657221"
    },
    "1896": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "1898": {
      "op": "SHL"
    },
    "1899": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "1901": {
      "op": "DUP3"
    },
    "1902": {
      "op": "ADD"
    },
    "1903": {
      "op": "MSTORE"
    },
    "1904": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "1906": {
      "op": "ADD"
    },
    "1907": {
      "offset": [
        1650,
        1713
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x422"
    },
    "1910": {
      "op": "JUMP"
    },
    "1911": {
      "offset": [
        1650,
        1713
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "1912": {
      "fn": "SoulboundCore.setBaseURI",
      "offset": [
        5654,
        5675
      ],
      "op": "PUSH2",
      "path": "4",
      "statement": 19,
      "value": "0x780"
    },
    "1915": {
      "fn": "SoulboundCore.setBaseURI",
      "offset": [
        5666,
        5674
      ],
      "op": "DUP3",
      "path": "4"
    },
    "1916": {
      "fn": "SoulboundCore.setBaseURI",
      "offset": [
        5654,
        5665
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0xF8D"
    },
    "1919": {
      "fn": "SoulboundCore.setBaseURI",
      "jump": "i",
      "offset": [
        5654,
        5675
      ],
      "op": "JUMP",
      "path": "4"
    },
    "1920": {
      "fn": "SoulboundCore.setBaseURI",
      "offset": [
        5654,
        5675
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "1921": {
      "offset": [
        1424,
        1425
      ],
      "op": "POP",
      "path": "2"
    },
    "1922": {
      "fn": "SoulboundCore.setBaseURI",
      "offset": [
        5491,
        5682
      ],
      "op": "POP",
      "path": "4"
    },
    "1923": {
      "fn": "SoulboundCore.setBaseURI",
      "offset": [
        5491,
        5682
      ],
      "op": "POP",
      "path": "4"
    },
    "1924": {
      "fn": "SoulboundCore.setBaseURI",
      "jump": "o",
      "offset": [
        5491,
        5682
      ],
      "op": "JUMP",
      "path": "4"
    },
    "1925": {
      "fn": "ERC4973.symbol",
      "offset": [
        4653,
        4749
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "1926": {
      "fn": "ERC4973.symbol",
      "offset": [
        4709,
        4722
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x60"
    },
    "1928": {
      "fn": "ERC4973.symbol",
      "offset": [
        4737,
        4744
      ],
      "op": "PUSH1",
      "path": "7",
      "statement": 20,
      "value": "0x1"
    },
    "1930": {
      "fn": "ERC4973.symbol",
      "offset": [
        4730,
        4744
      ],
      "op": "DUP1",
      "path": "7"
    },
    "1931": {
      "fn": "ERC4973.symbol",
      "offset": [
        4730,
        4744
      ],
      "op": "SLOAD",
      "path": "7"
    },
    "1932": {
      "fn": "ERC4973.symbol",
      "offset": [
        4730,
        4744
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x34E"
    },
    "1935": {
      "fn": "ERC4973.symbol",
      "offset": [
        4730,
        4744
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "1936": {
      "fn": "ERC4973.symbol",
      "offset": [
        4730,
        4744
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x177A"
    },
    "1939": {
      "fn": "ERC4973.symbol",
      "jump": "i",
      "offset": [
        4730,
        4744
      ],
      "op": "JUMP",
      "path": "7"
    },
    "1940": {
      "fn": "ERC4973.tokenURI",
      "offset": [
        4753,
        4942
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "1941": {
      "fn": "ERC4973.tokenURI",
      "offset": [
        4826,
        4839
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x60"
    },
    "1943": {
      "fn": "ERC4973.tokenURI",
      "offset": [
        4855,
        4871
      ],
      "op": "PUSH2",
      "path": "7",
      "statement": 21,
      "value": "0x79F"
    },
    "1946": {
      "fn": "ERC4973.tokenURI",
      "offset": [
        4863,
        4870
      ],
      "op": "DUP3",
      "path": "7"
    },
    "1947": {
      "fn": "ERC4973.tokenURI",
      "offset": [
        4855,
        4862
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0xC4C"
    },
    "1950": {
      "fn": "ERC4973.tokenURI",
      "jump": "i",
      "offset": [
        4855,
        4871
      ],
      "op": "JUMP",
      "path": "7"
    },
    "1951": {
      "branch": 92,
      "fn": "ERC4973.tokenURI",
      "offset": [
        4855,
        4871
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "1952": {
      "fn": "ERC4973.tokenURI",
      "offset": [
        4847,
        4905
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x7EB"
    },
    "1955": {
      "branch": 92,
      "fn": "ERC4973.tokenURI",
      "offset": [
        4847,
        4905
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "1956": {
      "fn": "ERC4973.tokenURI",
      "offset": [
        4847,
        4905
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x40"
    },
    "1958": {
      "fn": "ERC4973.tokenURI",
      "offset": [
        4847,
        4905
      ],
      "op": "MLOAD",
      "path": "7"
    },
    "1959": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1963": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1965": {
      "op": "SHL"
    },
    "1966": {
      "fn": "ERC4973.tokenURI",
      "offset": [
        4847,
        4905
      ],
      "op": "DUP2",
      "path": "7"
    },
    "1967": {
      "fn": "ERC4973.tokenURI",
      "offset": [
        4847,
        4905
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "1968": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1970": {
      "fn": "ERC4973.tokenURI",
      "offset": [
        4847,
        4905
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x4"
    },
    "1972": {
      "fn": "ERC4973.tokenURI",
      "offset": [
        4847,
        4905
      ],
      "op": "DUP3",
      "path": "7"
    },
    "1973": {
      "fn": "ERC4973.tokenURI",
      "offset": [
        4847,
        4905
      ],
      "op": "ADD",
      "path": "7"
    },
    "1974": {
      "op": "MSTORE"
    },
    "1975": {
      "op": "PUSH1",
      "value": "0x1D"
    },
    "1977": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "1979": {
      "op": "DUP3"
    },
    "1980": {
      "op": "ADD"
    },
    "1981": {
      "op": "MSTORE"
    },
    "1982": {
      "op": "PUSH32",
      "value": "0x746F6B656E5552493A20746F6B656E20646F65736E2774206578697374000000"
    },
    "2015": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "2017": {
      "op": "DUP3"
    },
    "2018": {
      "op": "ADD"
    },
    "2019": {
      "op": "MSTORE"
    },
    "2020": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "2022": {
      "op": "ADD"
    },
    "2023": {
      "fn": "ERC4973.tokenURI",
      "offset": [
        4847,
        4905
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x422"
    },
    "2026": {
      "op": "JUMP"
    },
    "2027": {
      "fn": "ERC4973.tokenURI",
      "offset": [
        4847,
        4905
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "2028": {
      "fn": "ERC4973.tokenURI",
      "offset": [
        4918,
        4937
      ],
      "op": "PUSH1",
      "path": "7",
      "statement": 22,
      "value": "0x0"
    },
    "2030": {
      "fn": "ERC4973.tokenURI",
      "offset": [
        4918,
        4937
      ],
      "op": "DUP3",
      "path": "7"
    },
    "2031": {
      "fn": "ERC4973.tokenURI",
      "offset": [
        4918,
        4937
      ],
      "op": "DUP2",
      "path": "7"
    },
    "2032": {
      "fn": "ERC4973.tokenURI",
      "offset": [
        4918,
        4937
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "2033": {
      "fn": "ERC4973.tokenURI",
      "offset": [
        4918,
        4928
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x3"
    },
    "2035": {
      "fn": "ERC4973.tokenURI",
      "offset": [
        4918,
        4937
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x20"
    },
    "2037": {
      "fn": "ERC4973.tokenURI",
      "offset": [
        4918,
        4937
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "2038": {
      "fn": "ERC4973.tokenURI",
      "offset": [
        4918,
        4937
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x40"
    },
    "2040": {
      "fn": "ERC4973.tokenURI",
      "offset": [
        4918,
        4937
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "2041": {
      "fn": "ERC4973.tokenURI",
      "offset": [
        4918,
        4937
      ],
      "op": "KECCAK256",
      "path": "7"
    },
    "2042": {
      "fn": "ERC4973.tokenURI",
      "offset": [
        4911,
        4937
      ],
      "op": "DUP1",
      "path": "7"
    },
    "2043": {
      "fn": "ERC4973.tokenURI",
      "offset": [
        4911,
        4937
      ],
      "op": "SLOAD",
      "path": "7"
    },
    "2044": {
      "fn": "ERC4973.tokenURI",
      "offset": [
        4911,
        4937
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x804"
    },
    "2047": {
      "fn": "ERC4973.tokenURI",
      "offset": [
        4911,
        4937
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "2048": {
      "fn": "ERC4973.tokenURI",
      "offset": [
        4911,
        4937
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x177A"
    },
    "2051": {
      "fn": "ERC4973.tokenURI",
      "jump": "i",
      "offset": [
        4911,
        4937
      ],
      "op": "JUMP",
      "path": "7"
    },
    "2052": {
      "fn": "ERC4973.tokenURI",
      "offset": [
        4911,
        4937
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "2053": {
      "fn": "ERC4973.tokenURI",
      "offset": [
        4911,
        4937
      ],
      "op": "DUP1",
      "path": "7"
    },
    "2054": {
      "fn": "ERC4973.tokenURI",
      "offset": [
        4911,
        4937
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x1F"
    },
    "2056": {
      "fn": "ERC4973.tokenURI",
      "offset": [
        4911,
        4937
      ],
      "op": "ADD",
      "path": "7"
    },
    "2057": {
      "fn": "ERC4973.tokenURI",
      "offset": [
        4911,
        4937
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x20"
    },
    "2059": {
      "fn": "ERC4973.tokenURI",
      "offset": [
        4911,
        4937
      ],
      "op": "DUP1",
      "path": "7"
    },
    "2060": {
      "fn": "ERC4973.tokenURI",
      "offset": [
        4911,
        4937
      ],
      "op": "SWAP2",
      "path": "7"
    },
    "2061": {
      "fn": "ERC4973.tokenURI",
      "offset": [
        4911,
        4937
      ],
      "op": "DIV",
      "path": "7"
    },
    "2062": {
      "fn": "ERC4973.tokenURI",
      "offset": [
        4911,
        4937
      ],
      "op": "MUL",
      "path": "7"
    },
    "2063": {
      "fn": "ERC4973.tokenURI",
      "offset": [
        4911,
        4937
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x20"
    },
    "2065": {
      "fn": "ERC4973.tokenURI",
      "offset": [
        4911,
        4937
      ],
      "op": "ADD",
      "path": "7"
    },
    "2066": {
      "fn": "ERC4973.tokenURI",
      "offset": [
        4911,
        4937
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x40"
    },
    "2068": {
      "fn": "ERC4973.tokenURI",
      "offset": [
        4911,
        4937
      ],
      "op": "MLOAD",
      "path": "7"
    },
    "2069": {
      "fn": "ERC4973.tokenURI",
      "offset": [
        4911,
        4937
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "2070": {
      "fn": "ERC4973.tokenURI",
      "offset": [
        4911,
        4937
      ],
      "op": "DUP2",
      "path": "7"
    },
    "2071": {
      "fn": "ERC4973.tokenURI",
      "offset": [
        4911,
        4937
      ],
      "op": "ADD",
      "path": "7"
    },
    "2072": {
      "fn": "ERC4973.tokenURI",
      "offset": [
        4911,
        4937
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x40"
    },
    "2074": {
      "fn": "ERC4973.tokenURI",
      "offset": [
        4911,
        4937
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "2075": {
      "fn": "ERC4973.tokenURI",
      "offset": [
        4911,
        4937
      ],
      "op": "DUP1",
      "path": "7"
    },
    "2076": {
      "fn": "ERC4973.tokenURI",
      "offset": [
        4911,
        4937
      ],
      "op": "SWAP3",
      "path": "7"
    },
    "2077": {
      "fn": "ERC4973.tokenURI",
      "offset": [
        4911,
        4937
      ],
      "op": "SWAP2",
      "path": "7"
    },
    "2078": {
      "fn": "ERC4973.tokenURI",
      "offset": [
        4911,
        4937
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "2079": {
      "fn": "ERC4973.tokenURI",
      "offset": [
        4911,
        4937
      ],
      "op": "DUP2",
      "path": "7"
    },
    "2080": {
      "fn": "ERC4973.tokenURI",
      "offset": [
        4911,
        4937
      ],
      "op": "DUP2",
      "path": "7"
    },
    "2081": {
      "fn": "ERC4973.tokenURI",
      "offset": [
        4911,
        4937
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "2082": {
      "fn": "ERC4973.tokenURI",
      "offset": [
        4911,
        4937
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x20"
    },
    "2084": {
      "fn": "ERC4973.tokenURI",
      "offset": [
        4911,
        4937
      ],
      "op": "ADD",
      "path": "7"
    },
    "2085": {
      "fn": "ERC4973.tokenURI",
      "offset": [
        4911,
        4937
      ],
      "op": "DUP3",
      "path": "7"
    },
    "2086": {
      "fn": "ERC4973.tokenURI",
      "offset": [
        4911,
        4937
      ],
      "op": "DUP1",
      "path": "7"
    },
    "2087": {
      "fn": "ERC4973.tokenURI",
      "offset": [
        4911,
        4937
      ],
      "op": "SLOAD",
      "path": "7"
    },
    "2088": {
      "fn": "ERC4973.tokenURI",
      "offset": [
        4911,
        4937
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x830"
    },
    "2091": {
      "fn": "ERC4973.tokenURI",
      "offset": [
        4911,
        4937
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "2092": {
      "fn": "ERC4973.tokenURI",
      "offset": [
        4911,
        4937
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x177A"
    },
    "2095": {
      "fn": "ERC4973.tokenURI",
      "jump": "i",
      "offset": [
        4911,
        4937
      ],
      "op": "JUMP",
      "path": "7"
    },
    "2096": {
      "fn": "ERC4973.tokenURI",
      "offset": [
        4911,
        4937
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "2097": {
      "fn": "ERC4973.tokenURI",
      "offset": [
        4911,
        4937
      ],
      "op": "DUP1",
      "path": "7"
    },
    "2098": {
      "fn": "ERC4973.tokenURI",
      "offset": [
        4911,
        4937
      ],
      "op": "ISZERO",
      "path": "7"
    },
    "2099": {
      "fn": "ERC4973.tokenURI",
      "offset": [
        4911,
        4937
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x87D"
    },
    "2102": {
      "fn": "ERC4973.tokenURI",
      "offset": [
        4911,
        4937
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "2103": {
      "fn": "ERC4973.tokenURI",
      "offset": [
        4911,
        4937
      ],
      "op": "DUP1",
      "path": "7"
    },
    "2104": {
      "fn": "ERC4973.tokenURI",
      "offset": [
        4911,
        4937
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x1F"
    },
    "2106": {
      "fn": "ERC4973.tokenURI",
      "offset": [
        4911,
        4937
      ],
      "op": "LT",
      "path": "7"
    },
    "2107": {
      "fn": "ERC4973.tokenURI",
      "offset": [
        4911,
        4937
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x852"
    },
    "2110": {
      "fn": "ERC4973.tokenURI",
      "offset": [
        4911,
        4937
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "2111": {
      "fn": "ERC4973.tokenURI",
      "offset": [
        4911,
        4937
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x100"
    },
    "2114": {
      "fn": "ERC4973.tokenURI",
      "offset": [
        4911,
        4937
      ],
      "op": "DUP1",
      "path": "7"
    },
    "2115": {
      "fn": "ERC4973.tokenURI",
      "offset": [
        4911,
        4937
      ],
      "op": "DUP4",
      "path": "7"
    },
    "2116": {
      "fn": "ERC4973.tokenURI",
      "offset": [
        4911,
        4937
      ],
      "op": "SLOAD",
      "path": "7"
    },
    "2117": {
      "fn": "ERC4973.tokenURI",
      "offset": [
        4911,
        4937
      ],
      "op": "DIV",
      "path": "7"
    },
    "2118": {
      "fn": "ERC4973.tokenURI",
      "offset": [
        4911,
        4937
      ],
      "op": "MUL",
      "path": "7"
    },
    "2119": {
      "fn": "ERC4973.tokenURI",
      "offset": [
        4911,
        4937
      ],
      "op": "DUP4",
      "path": "7"
    },
    "2120": {
      "fn": "ERC4973.tokenURI",
      "offset": [
        4911,
        4937
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "2121": {
      "fn": "ERC4973.tokenURI",
      "offset": [
        4911,
        4937
      ],
      "op": "SWAP2",
      "path": "7"
    },
    "2122": {
      "fn": "ERC4973.tokenURI",
      "offset": [
        4911,
        4937
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x20"
    },
    "2124": {
      "fn": "ERC4973.tokenURI",
      "offset": [
        4911,
        4937
      ],
      "op": "ADD",
      "path": "7"
    },
    "2125": {
      "fn": "ERC4973.tokenURI",
      "offset": [
        4911,
        4937
      ],
      "op": "SWAP2",
      "path": "7"
    },
    "2126": {
      "fn": "ERC4973.tokenURI",
      "offset": [
        4911,
        4937
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x87D"
    },
    "2129": {
      "fn": "ERC4973.tokenURI",
      "offset": [
        4911,
        4937
      ],
      "op": "JUMP",
      "path": "7"
    },
    "2130": {
      "fn": "ERC4973.tokenURI",
      "offset": [
        4911,
        4937
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "2131": {
      "fn": "ERC4973.tokenURI",
      "offset": [
        4911,
        4937
      ],
      "op": "DUP3",
      "path": "7"
    },
    "2132": {
      "fn": "ERC4973.tokenURI",
      "offset": [
        4911,
        4937
      ],
      "op": "ADD",
      "path": "7"
    },
    "2133": {
      "fn": "ERC4973.tokenURI",
      "offset": [
        4911,
        4937
      ],
      "op": "SWAP2",
      "path": "7"
    },
    "2134": {
      "fn": "ERC4973.tokenURI",
      "offset": [
        4911,
        4937
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "2135": {
      "fn": "ERC4973.tokenURI",
      "offset": [
        4911,
        4937
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x0"
    },
    "2137": {
      "fn": "ERC4973.tokenURI",
      "offset": [
        4911,
        4937
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "2138": {
      "fn": "ERC4973.tokenURI",
      "offset": [
        4911,
        4937
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x20"
    },
    "2140": {
      "fn": "ERC4973.tokenURI",
      "offset": [
        4911,
        4937
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x0"
    },
    "2142": {
      "fn": "ERC4973.tokenURI",
      "offset": [
        4911,
        4937
      ],
      "op": "KECCAK256",
      "path": "7"
    },
    "2143": {
      "fn": "ERC4973.tokenURI",
      "offset": [
        4911,
        4937
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "2144": {
      "fn": "ERC4973.tokenURI",
      "offset": [
        4911,
        4937
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "2145": {
      "fn": "ERC4973.tokenURI",
      "offset": [
        4911,
        4937
      ],
      "op": "DUP2",
      "path": "7"
    },
    "2146": {
      "fn": "ERC4973.tokenURI",
      "offset": [
        4911,
        4937
      ],
      "op": "SLOAD",
      "path": "7"
    },
    "2147": {
      "fn": "ERC4973.tokenURI",
      "offset": [
        4911,
        4937
      ],
      "op": "DUP2",
      "path": "7"
    },
    "2148": {
      "fn": "ERC4973.tokenURI",
      "offset": [
        4911,
        4937
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "2149": {
      "fn": "ERC4973.tokenURI",
      "offset": [
        4911,
        4937
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "2150": {
      "fn": "ERC4973.tokenURI",
      "offset": [
        4911,
        4937
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x1"
    },
    "2152": {
      "fn": "ERC4973.tokenURI",
      "offset": [
        4911,
        4937
      ],
      "op": "ADD",
      "path": "7"
    },
    "2153": {
      "fn": "ERC4973.tokenURI",
      "offset": [
        4911,
        4937
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "2154": {
      "fn": "ERC4973.tokenURI",
      "offset": [
        4911,
        4937
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x20"
    },
    "2156": {
      "fn": "ERC4973.tokenURI",
      "offset": [
        4911,
        4937
      ],
      "op": "ADD",
      "path": "7"
    },
    "2157": {
      "fn": "ERC4973.tokenURI",
      "offset": [
        4911,
        4937
      ],
      "op": "DUP1",
      "path": "7"
    },
    "2158": {
      "fn": "ERC4973.tokenURI",
      "offset": [
        4911,
        4937
      ],
      "op": "DUP4",
      "path": "7"
    },
    "2159": {
      "fn": "ERC4973.tokenURI",
      "offset": [
        4911,
        4937
      ],
      "op": "GT",
      "path": "7"
    },
    "2160": {
      "fn": "ERC4973.tokenURI",
      "offset": [
        4911,
        4937
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x860"
    },
    "2163": {
      "fn": "ERC4973.tokenURI",
      "offset": [
        4911,
        4937
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "2164": {
      "fn": "ERC4973.tokenURI",
      "offset": [
        4911,
        4937
      ],
      "op": "DUP3",
      "path": "7"
    },
    "2165": {
      "fn": "ERC4973.tokenURI",
      "offset": [
        4911,
        4937
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "2166": {
      "fn": "ERC4973.tokenURI",
      "offset": [
        4911,
        4937
      ],
      "op": "SUB",
      "path": "7"
    },
    "2167": {
      "fn": "ERC4973.tokenURI",
      "offset": [
        4911,
        4937
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x1F"
    },
    "2169": {
      "fn": "ERC4973.tokenURI",
      "offset": [
        4911,
        4937
      ],
      "op": "AND",
      "path": "7"
    },
    "2170": {
      "fn": "ERC4973.tokenURI",
      "offset": [
        4911,
        4937
      ],
      "op": "DUP3",
      "path": "7"
    },
    "2171": {
      "fn": "ERC4973.tokenURI",
      "offset": [
        4911,
        4937
      ],
      "op": "ADD",
      "path": "7"
    },
    "2172": {
      "fn": "ERC4973.tokenURI",
      "offset": [
        4911,
        4937
      ],
      "op": "SWAP2",
      "path": "7"
    },
    "2173": {
      "fn": "ERC4973.tokenURI",
      "offset": [
        4911,
        4937
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "2174": {
      "fn": "ERC4973.tokenURI",
      "offset": [
        4911,
        4937
      ],
      "op": "POP",
      "path": "7"
    },
    "2175": {
      "fn": "ERC4973.tokenURI",
      "offset": [
        4911,
        4937
      ],
      "op": "POP",
      "path": "7"
    },
    "2176": {
      "fn": "ERC4973.tokenURI",
      "offset": [
        4911,
        4937
      ],
      "op": "POP",
      "path": "7"
    },
    "2177": {
      "fn": "ERC4973.tokenURI",
      "offset": [
        4911,
        4937
      ],
      "op": "POP",
      "path": "7"
    },
    "2178": {
      "fn": "ERC4973.tokenURI",
      "offset": [
        4911,
        4937
      ],
      "op": "POP",
      "path": "7"
    },
    "2179": {
      "fn": "ERC4973.tokenURI",
      "offset": [
        4911,
        4937
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "2180": {
      "fn": "ERC4973.tokenURI",
      "offset": [
        4911,
        4937
      ],
      "op": "POP",
      "path": "7"
    },
    "2181": {
      "fn": "ERC4973.tokenURI",
      "offset": [
        4753,
        4942
      ],
      "op": "SWAP2",
      "path": "7"
    },
    "2182": {
      "fn": "ERC4973.tokenURI",
      "offset": [
        4753,
        4942
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "2183": {
      "fn": "ERC4973.tokenURI",
      "offset": [
        4753,
        4942
      ],
      "op": "POP",
      "path": "7"
    },
    "2184": {
      "fn": "ERC4973.tokenURI",
      "jump": "o",
      "offset": [
        4753,
        4942
      ],
      "op": "JUMP",
      "path": "7"
    },
    "2185": {
      "fn": "Soulbound._getBaseURI",
      "offset": [
        7338,
        7585
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "2186": {
      "fn": "Soulbound._getBaseURI",
      "offset": [
        7381,
        7403
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x60"
    },
    "2188": {
      "fn": "Soulbound._getBaseURI",
      "offset": [
        7479,
        7486
      ],
      "op": "PUSH1",
      "path": "3",
      "statement": 23,
      "value": "0x6"
    },
    "2190": {
      "fn": "Soulbound._getBaseURI",
      "offset": [
        7473,
        7494
      ],
      "op": "DUP1",
      "path": "3"
    },
    "2191": {
      "fn": "Soulbound._getBaseURI",
      "offset": [
        7473,
        7494
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "2192": {
      "fn": "Soulbound._getBaseURI",
      "offset": [
        7473,
        7494
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x898"
    },
    "2195": {
      "fn": "Soulbound._getBaseURI",
      "offset": [
        7473,
        7494
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "2196": {
      "fn": "Soulbound._getBaseURI",
      "offset": [
        7473,
        7494
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x177A"
    },
    "2199": {
      "fn": "Soulbound._getBaseURI",
      "jump": "i",
      "offset": [
        7473,
        7494
      ],
      "op": "JUMP",
      "path": "3"
    },
    "2200": {
      "fn": "Soulbound._getBaseURI",
      "offset": [
        7473,
        7494
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "2201": {
      "fn": "Soulbound._getBaseURI",
      "offset": [
        7473,
        7494
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "2202": {
      "fn": "Soulbound._getBaseURI",
      "offset": [
        7473,
        7494
      ],
      "op": "POP",
      "path": "3"
    },
    "2203": {
      "fn": "Soulbound._getBaseURI",
      "offset": [
        7498,
        7499
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "2205": {
      "branch": 96,
      "fn": "Soulbound._getBaseURI",
      "offset": [
        7473,
        7499
      ],
      "op": "SUB",
      "path": "3"
    },
    "2206": {
      "fn": "Soulbound._getBaseURI",
      "offset": [
        7465,
        7517
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x8D9"
    },
    "2209": {
      "branch": 96,
      "fn": "Soulbound._getBaseURI",
      "offset": [
        7465,
        7517
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "2210": {
      "fn": "Soulbound._getBaseURI",
      "offset": [
        7465,
        7517
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "2212": {
      "fn": "Soulbound._getBaseURI",
      "offset": [
        7465,
        7517
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "2213": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "2217": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "2219": {
      "op": "SHL"
    },
    "2220": {
      "fn": "Soulbound._getBaseURI",
      "offset": [
        7465,
        7517
      ],
      "op": "DUP2",
      "path": "3"
    },
    "2221": {
      "fn": "Soulbound._getBaseURI",
      "offset": [
        7465,
        7517
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "2222": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2224": {
      "fn": "Soulbound._getBaseURI",
      "offset": [
        7465,
        7517
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x4"
    },
    "2226": {
      "fn": "Soulbound._getBaseURI",
      "offset": [
        7465,
        7517
      ],
      "op": "DUP3",
      "path": "3"
    },
    "2227": {
      "fn": "Soulbound._getBaseURI",
      "offset": [
        7465,
        7517
      ],
      "op": "ADD",
      "path": "3"
    },
    "2228": {
      "op": "MSTORE"
    },
    "2229": {
      "op": "PUSH1",
      "value": "0xD"
    },
    "2231": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "2233": {
      "op": "DUP3"
    },
    "2234": {
      "op": "ADD"
    },
    "2235": {
      "op": "MSTORE"
    },
    "2236": {
      "op": "PUSH13",
      "value": "0x456D7074792062617365555249"
    },
    "2250": {
      "op": "PUSH1",
      "value": "0x98"
    },
    "2252": {
      "op": "SHL"
    },
    "2253": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "2255": {
      "op": "DUP3"
    },
    "2256": {
      "op": "ADD"
    },
    "2257": {
      "op": "MSTORE"
    },
    "2258": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "2260": {
      "op": "ADD"
    },
    "2261": {
      "fn": "Soulbound._getBaseURI",
      "offset": [
        7465,
        7517
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x422"
    },
    "2264": {
      "op": "JUMP"
    },
    "2265": {
      "fn": "Soulbound._getBaseURI",
      "offset": [
        7465,
        7517
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "2266": {
      "fn": "Soulbound._getBaseURI",
      "offset": [
        7571,
        7578
      ],
      "op": "PUSH1",
      "path": "3",
      "statement": 24,
      "value": "0x6"
    },
    "2268": {
      "fn": "Soulbound._getBaseURI",
      "offset": [
        7560,
        7578
      ],
      "op": "DUP1",
      "path": "3"
    },
    "2269": {
      "fn": "Soulbound._getBaseURI",
      "offset": [
        7560,
        7578
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "2270": {
      "fn": "Soulbound._getBaseURI",
      "offset": [
        7560,
        7578
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x34E"
    },
    "2273": {
      "fn": "Soulbound._getBaseURI",
      "offset": [
        7560,
        7578
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "2274": {
      "fn": "Soulbound._getBaseURI",
      "offset": [
        7560,
        7578
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x177A"
    },
    "2277": {
      "fn": "Soulbound._getBaseURI",
      "jump": "i",
      "offset": [
        7560,
        7578
      ],
      "op": "JUMP",
      "path": "3"
    },
    "2278": {
      "fn": "SoulboundCore.issueWithSignature",
      "offset": [
        2769,
        3767
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "2279": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2281": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2283": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2285": {
      "op": "SHL"
    },
    "2286": {
      "op": "SUB"
    },
    "2287": {
      "fn": "SoulboundCore.issueWithSignature",
      "offset": [
        3024,
        3042
      ],
      "op": "DUP6",
      "path": "4",
      "statement": 25
    },
    "2288": {
      "branch": 84,
      "fn": "SoulboundCore.issueWithSignature",
      "offset": [
        3024,
        3042
      ],
      "op": "AND",
      "path": "4"
    },
    "2289": {
      "fn": "SoulboundCore.issueWithSignature",
      "offset": [
        3016,
        3068
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x934"
    },
    "2292": {
      "branch": 84,
      "fn": "SoulboundCore.issueWithSignature",
      "offset": [
        3016,
        3068
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "2293": {
      "fn": "SoulboundCore.issueWithSignature",
      "offset": [
        3016,
        3068
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "2295": {
      "fn": "SoulboundCore.issueWithSignature",
      "offset": [
        3016,
        3068
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "2296": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "2300": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "2302": {
      "op": "SHL"
    },
    "2303": {
      "fn": "SoulboundCore.issueWithSignature",
      "offset": [
        3016,
        3068
      ],
      "op": "DUP2",
      "path": "4"
    },
    "2304": {
      "fn": "SoulboundCore.issueWithSignature",
      "offset": [
        3016,
        3068
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "2305": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2307": {
      "fn": "SoulboundCore.issueWithSignature",
      "offset": [
        3016,
        3068
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x4"
    },
    "2309": {
      "fn": "SoulboundCore.issueWithSignature",
      "offset": [
        3016,
        3068
      ],
      "op": "DUP3",
      "path": "4"
    },
    "2310": {
      "fn": "SoulboundCore.issueWithSignature",
      "offset": [
        3016,
        3068
      ],
      "op": "ADD",
      "path": "4"
    },
    "2311": {
      "op": "MSTORE"
    },
    "2312": {
      "op": "PUSH1",
      "value": "0x15"
    },
    "2314": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "2316": {
      "op": "DUP3"
    },
    "2317": {
      "op": "ADD"
    },
    "2318": {
      "op": "MSTORE"
    },
    "2319": {
      "op": "PUSH21",
      "value": "0x26B4B73A103A37903D32B9379030B2323932B9B997"
    },
    "2341": {
      "op": "PUSH1",
      "value": "0x59"
    },
    "2343": {
      "op": "SHL"
    },
    "2344": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "2346": {
      "op": "DUP3"
    },
    "2347": {
      "op": "ADD"
    },
    "2348": {
      "op": "MSTORE"
    },
    "2349": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "2351": {
      "op": "ADD"
    },
    "2352": {
      "fn": "SoulboundCore.issueWithSignature",
      "offset": [
        3016,
        3068
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x422"
    },
    "2355": {
      "op": "JUMP"
    },
    "2356": {
      "fn": "SoulboundCore.issueWithSignature",
      "offset": [
        3016,
        3068
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "2357": {
      "fn": "SoulboundCore.issueWithSignature",
      "offset": [
        3303,
        3306
      ],
      "op": "DUP3",
      "path": "4",
      "statement": 26
    },
    "2358": {
      "fn": "SoulboundCore.issueWithSignature",
      "offset": [
        3303,
        3313
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "2359": {
      "fn": "SoulboundCore.issueWithSignature",
      "offset": [
        3317,
        3319
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x41"
    },
    "2361": {
      "branch": 85,
      "fn": "SoulboundCore.issueWithSignature",
      "offset": [
        3303,
        3319
      ],
      "op": "EQ",
      "path": "4"
    },
    "2362": {
      "fn": "SoulboundCore.issueWithSignature",
      "offset": [
        3295,
        3348
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x980"
    },
    "2365": {
      "branch": 85,
      "fn": "SoulboundCore.issueWithSignature",
      "offset": [
        3295,
        3348
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "2366": {
      "fn": "SoulboundCore.issueWithSignature",
      "offset": [
        3295,
        3348
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "2368": {
      "fn": "SoulboundCore.issueWithSignature",
      "offset": [
        3295,
        3348
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "2369": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "2373": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "2375": {
      "op": "SHL"
    },
    "2376": {
      "fn": "SoulboundCore.issueWithSignature",
      "offset": [
        3295,
        3348
      ],
      "op": "DUP2",
      "path": "4"
    },
    "2377": {
      "fn": "SoulboundCore.issueWithSignature",
      "offset": [
        3295,
        3348
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "2378": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2380": {
      "fn": "SoulboundCore.issueWithSignature",
      "offset": [
        3295,
        3348
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x4"
    },
    "2382": {
      "fn": "SoulboundCore.issueWithSignature",
      "offset": [
        3295,
        3348
      ],
      "op": "DUP3",
      "path": "4"
    },
    "2383": {
      "fn": "SoulboundCore.issueWithSignature",
      "offset": [
        3295,
        3348
      ],
      "op": "ADD",
      "path": "4"
    },
    "2384": {
      "op": "MSTORE"
    },
    "2385": {
      "op": "PUSH1",
      "value": "0x18"
    },
    "2387": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "2389": {
      "op": "DUP3"
    },
    "2390": {
      "op": "ADD"
    },
    "2391": {
      "op": "MSTORE"
    },
    "2392": {
      "op": "PUSH24",
      "value": "0x92DCECC2D8D2C840E6D2CEDCC2E8EAE4CA40D8CADCCEE8D"
    },
    "2417": {
      "op": "PUSH1",
      "value": "0x43"
    },
    "2419": {
      "op": "SHL"
    },
    "2420": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "2422": {
      "op": "DUP3"
    },
    "2423": {
      "op": "ADD"
    },
    "2424": {
      "op": "MSTORE"
    },
    "2425": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "2427": {
      "op": "ADD"
    },
    "2428": {
      "fn": "SoulboundCore.issueWithSignature",
      "offset": [
        3295,
        3348
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x422"
    },
    "2431": {
      "op": "JUMP"
    },
    "2432": {
      "fn": "SoulboundCore.issueWithSignature",
      "offset": [
        3295,
        3348
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "2433": {
      "fn": "SoulboundCore.issueWithSignature",
      "offset": [
        3475,
        3501
      ],
      "op": "PUSH2",
      "path": "4",
      "statement": 27,
      "value": "0x98A"
    },
    "2436": {
      "fn": "SoulboundCore.issueWithSignature",
      "offset": [
        3491,
        3495
      ],
      "op": "DUP5",
      "path": "4"
    },
    "2437": {
      "fn": "SoulboundCore.issueWithSignature",
      "offset": [
        3497,
        3500
      ],
      "op": "DUP5",
      "path": "4"
    },
    "2438": {
      "fn": "SoulboundCore.issueWithSignature",
      "offset": [
        3475,
        3490
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0xA1B"
    },
    "2441": {
      "fn": "SoulboundCore.issueWithSignature",
      "jump": "i",
      "offset": [
        3475,
        3501
      ],
      "op": "JUMP",
      "path": "4"
    },
    "2442": {
      "branch": 86,
      "fn": "SoulboundCore.issueWithSignature",
      "offset": [
        3475,
        3501
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "2443": {
      "fn": "SoulboundCore.issueWithSignature",
      "offset": [
        3467,
        3531
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x9D2"
    },
    "2446": {
      "branch": 86,
      "fn": "SoulboundCore.issueWithSignature",
      "offset": [
        3467,
        3531
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "2447": {
      "fn": "SoulboundCore.issueWithSignature",
      "offset": [
        3467,
        3531
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "2449": {
      "fn": "SoulboundCore.issueWithSignature",
      "offset": [
        3467,
        3531
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "2450": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "2454": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "2456": {
      "op": "SHL"
    },
    "2457": {
      "fn": "SoulboundCore.issueWithSignature",
      "offset": [
        3467,
        3531
      ],
      "op": "DUP2",
      "path": "4"
    },
    "2458": {
      "fn": "SoulboundCore.issueWithSignature",
      "offset": [
        3467,
        3531
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "2459": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2461": {
      "fn": "SoulboundCore.issueWithSignature",
      "offset": [
        3467,
        3531
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x4"
    },
    "2463": {
      "fn": "SoulboundCore.issueWithSignature",
      "offset": [
        3467,
        3531
      ],
      "op": "DUP3",
      "path": "4"
    },
    "2464": {
      "fn": "SoulboundCore.issueWithSignature",
      "offset": [
        3467,
        3531
      ],
      "op": "ADD",
      "path": "4"
    },
    "2465": {
      "op": "MSTORE"
    },
    "2466": {
      "op": "PUSH1",
      "value": "0x19"
    },
    "2468": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "2470": {
      "op": "DUP3"
    },
    "2471": {
      "op": "ADD"
    },
    "2472": {
      "op": "MSTORE"
    },
    "2473": {
      "op": "PUSH25",
      "value": "0x2430B9B4103737BA1039B4B3B732B210313C9037BBB732B917"
    },
    "2499": {
      "op": "PUSH1",
      "value": "0x39"
    },
    "2501": {
      "op": "SHL"
    },
    "2502": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "2504": {
      "op": "DUP3"
    },
    "2505": {
      "op": "ADD"
    },
    "2506": {
      "op": "MSTORE"
    },
    "2507": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "2509": {
      "op": "ADD"
    },
    "2510": {
      "fn": "SoulboundCore.issueWithSignature",
      "offset": [
        3467,
        3531
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x422"
    },
    "2513": {
      "op": "JUMP"
    },
    "2514": {
      "fn": "SoulboundCore.issueWithSignature",
      "offset": [
        3467,
        3531
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "2515": {
      "fn": "SoulboundCore.issueWithSignature",
      "offset": [
        3630,
        3660
      ],
      "op": "PUSH2",
      "path": "4",
      "statement": 28,
      "value": "0x9DD"
    },
    "2518": {
      "fn": "SoulboundCore.issueWithSignature",
      "offset": [
        3636,
        3640
      ],
      "op": "DUP6",
      "path": "4"
    },
    "2519": {
      "fn": "SoulboundCore.issueWithSignature",
      "offset": [
        3642,
        3649
      ],
      "op": "DUP4",
      "path": "4"
    },
    "2520": {
      "fn": "SoulboundCore.issueWithSignature",
      "offset": [
        3651,
        3659
      ],
      "op": "DUP4",
      "path": "4"
    },
    "2521": {
      "fn": "SoulboundCore.issueWithSignature",
      "offset": [
        3630,
        3635
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0xFDF"
    },
    "2524": {
      "fn": "SoulboundCore.issueWithSignature",
      "jump": "i",
      "offset": [
        3630,
        3660
      ],
      "op": "JUMP",
      "path": "4"
    },
    "2525": {
      "fn": "SoulboundCore.issueWithSignature",
      "offset": [
        3630,
        3660
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "2526": {
      "op": "POP"
    },
    "2527": {
      "fn": "SoulboundCore.issueWithSignature",
      "offset": [
        3727,
        3760
      ],
      "op": "PUSH1",
      "path": "4",
      "statement": 29,
      "value": "0x40"
    },
    "2529": {
      "fn": "SoulboundCore.issueWithSignature",
      "offset": [
        3727,
        3760
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "2530": {
      "fn": "SoulboundCore.issueWithSignature",
      "offset": [
        3752,
        3759
      ],
      "op": "DUP3",
      "path": "4"
    },
    "2531": {
      "fn": "SoulboundCore.issueWithSignature",
      "offset": [
        3752,
        3759
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "2532": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2534": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2536": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2538": {
      "op": "SHL"
    },
    "2539": {
      "op": "SUB"
    },
    "2540": {
      "fn": "SoulboundCore.issueWithSignature",
      "offset": [
        3727,
        3760
      ],
      "op": "DUP8",
      "path": "4"
    },
    "2541": {
      "fn": "SoulboundCore.issueWithSignature",
      "offset": [
        3727,
        3760
      ],
      "op": "AND",
      "path": "4"
    },
    "2542": {
      "fn": "SoulboundCore.issueWithSignature",
      "offset": [
        3727,
        3760
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "2543": {
      "fn": "SoulboundCore.issueWithSignature",
      "offset": [
        3727,
        3760
      ],
      "op": "PUSH32",
      "path": "4",
      "value": "0x79AF0E59B31823DD289CEEBABC4D63D25F35926B8548E3A084A500C9D4E18556"
    },
    "2576": {
      "fn": "SoulboundCore.issueWithSignature",
      "offset": [
        3727,
        3760
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "2577": {
      "fn": "SoulboundCore.issueWithSignature",
      "offset": [
        3727,
        3760
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "2579": {
      "fn": "SoulboundCore.issueWithSignature",
      "offset": [
        3727,
        3760
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "2580": {
      "fn": "SoulboundCore.issueWithSignature",
      "offset": [
        3727,
        3760
      ],
      "op": "LOG3",
      "path": "4"
    },
    "2581": {
      "fn": "SoulboundCore.issueWithSignature",
      "offset": [
        2769,
        3767
      ],
      "op": "POP",
      "path": "4"
    },
    "2582": {
      "fn": "SoulboundCore.issueWithSignature",
      "offset": [
        2769,
        3767
      ],
      "op": "POP",
      "path": "4"
    },
    "2583": {
      "fn": "SoulboundCore.issueWithSignature",
      "offset": [
        2769,
        3767
      ],
      "op": "POP",
      "path": "4"
    },
    "2584": {
      "fn": "SoulboundCore.issueWithSignature",
      "offset": [
        2769,
        3767
      ],
      "op": "POP",
      "path": "4"
    },
    "2585": {
      "fn": "SoulboundCore.issueWithSignature",
      "offset": [
        2769,
        3767
      ],
      "op": "POP",
      "path": "4"
    },
    "2586": {
      "fn": "SoulboundCore.issueWithSignature",
      "jump": "o",
      "offset": [
        2769,
        3767
      ],
      "op": "JUMP",
      "path": "4"
    },
    "2587": {
      "fn": "Allowlist.verifySignature",
      "offset": [
        2334,
        2477
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2588": {
      "fn": "Allowlist.verifySignature",
      "offset": [
        2416,
        2420
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "2590": {
      "fn": "Allowlist.verifySignature",
      "offset": [
        2443,
        2470
      ],
      "op": "PUSH2",
      "path": "0",
      "statement": 30,
      "value": "0xA27"
    },
    "2593": {
      "fn": "Allowlist.verifySignature",
      "offset": [
        2460,
        2464
      ],
      "op": "DUP4",
      "path": "0"
    },
    "2594": {
      "fn": "Allowlist.verifySignature",
      "offset": [
        2466,
        2469
      ],
      "op": "DUP4",
      "path": "0"
    },
    "2595": {
      "fn": "Allowlist.verifySignature",
      "offset": [
        2443,
        2459
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xFF6"
    },
    "2598": {
      "fn": "Allowlist.verifySignature",
      "jump": "i",
      "offset": [
        2443,
        2470
      ],
      "op": "JUMP",
      "path": "0"
    },
    "2599": {
      "fn": "Allowlist.verifySignature",
      "offset": [
        2443,
        2470
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2600": {
      "fn": "Allowlist.verifySignature",
      "offset": [
        2436,
        2470
      ],
      "op": "SWAP4",
      "path": "0"
    },
    "2601": {
      "fn": "Allowlist.verifySignature",
      "offset": [
        2334,
        2477
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "2602": {
      "op": "POP"
    },
    "2603": {
      "op": "POP"
    },
    "2604": {
      "op": "POP"
    },
    "2605": {
      "fn": "Allowlist.verifySignature",
      "jump": "o",
      "offset": [
        2334,
        2477
      ],
      "op": "JUMP",
      "path": "0"
    },
    "2606": {
      "fn": "Allowlist.verifySigner",
      "offset": [
        4649,
        4917
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2607": {
      "fn": "Allowlist.splitSignature",
      "offset": [
        5808,
        5810
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "2609": {
      "fn": "Allowlist.splitSignature",
      "offset": [
        5799,
        5811
      ],
      "op": "DUP2",
      "path": "0"
    },
    "2610": {
      "fn": "Allowlist.splitSignature",
      "offset": [
        5799,
        5811
      ],
      "op": "DUP2",
      "path": "0"
    },
    "2611": {
      "fn": "Allowlist.splitSignature",
      "offset": [
        5799,
        5811
      ],
      "op": "ADD",
      "path": "0"
    },
    "2612": {
      "fn": "Allowlist.splitSignature",
      "offset": [
        5793,
        5812
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "2613": {
      "fn": "Allowlist.splitSignature",
      "offset": [
        5883,
        5885
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "2615": {
      "fn": "Allowlist.splitSignature",
      "offset": [
        5874,
        5886
      ],
      "op": "DUP1",
      "path": "0"
    },
    "2616": {
      "fn": "Allowlist.splitSignature",
      "offset": [
        5874,
        5886
      ],
      "op": "DUP5",
      "path": "0"
    },
    "2617": {
      "fn": "Allowlist.splitSignature",
      "offset": [
        5874,
        5886
      ],
      "op": "ADD",
      "path": "0"
    },
    "2618": {
      "fn": "Allowlist.splitSignature",
      "offset": [
        5868,
        5887
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "2619": {
      "fn": "Allowlist.splitSignature",
      "offset": [
        5995,
        5997
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x60"
    },
    "2621": {
      "fn": "Allowlist.splitSignature",
      "offset": [
        5986,
        5998
      ],
      "op": "DUP1",
      "path": "0"
    },
    "2622": {
      "fn": "Allowlist.splitSignature",
      "offset": [
        5986,
        5998
      ],
      "op": "DUP7",
      "path": "0"
    },
    "2623": {
      "fn": "Allowlist.splitSignature",
      "offset": [
        5986,
        5998
      ],
      "op": "ADD",
      "path": "0"
    },
    "2624": {
      "fn": "Allowlist.splitSignature",
      "offset": [
        5980,
        5999
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "2625": {
      "fn": "Allowlist.verifySigner",
      "offset": [
        4884,
        4909
      ],
      "op": "DUP4",
      "path": "0",
      "statement": 31
    },
    "2626": {
      "fn": "Allowlist.verifySigner",
      "offset": [
        4884,
        4909
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "2627": {
      "fn": "Allowlist.verifySigner",
      "offset": [
        4780,
        4784
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "2629": {
      "fn": "Allowlist.verifySigner",
      "offset": [
        4884,
        4909
      ],
      "op": "DUP1",
      "path": "0"
    },
    "2630": {
      "fn": "Allowlist.verifySigner",
      "offset": [
        4884,
        4909
      ],
      "op": "DUP3",
      "path": "0"
    },
    "2631": {
      "fn": "Allowlist.verifySigner",
      "offset": [
        4884,
        4909
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "2632": {
      "fn": "Allowlist.verifySigner",
      "offset": [
        4884,
        4909
      ],
      "op": "DUP2",
      "path": "0"
    },
    "2633": {
      "fn": "Allowlist.verifySigner",
      "offset": [
        4884,
        4909
      ],
      "op": "DUP9",
      "path": "0"
    },
    "2634": {
      "fn": "Allowlist.verifySigner",
      "offset": [
        4884,
        4909
      ],
      "op": "ADD",
      "path": "0"
    },
    "2635": {
      "fn": "Allowlist.verifySigner",
      "offset": [
        4884,
        4909
      ],
      "op": "DUP1",
      "path": "0"
    },
    "2636": {
      "fn": "Allowlist.verifySigner",
      "offset": [
        4884,
        4909
      ],
      "op": "DUP8",
      "path": "0"
    },
    "2637": {
      "fn": "Allowlist.verifySigner",
      "offset": [
        4884,
        4909
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "2638": {
      "op": "DUP11"
    },
    "2639": {
      "op": "SWAP1"
    },
    "2640": {
      "op": "MSTORE"
    },
    "2641": {
      "fn": "Allowlist.splitSignature",
      "offset": [
        5972,
        6000
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "2642": {
      "fn": "Allowlist.splitSignature",
      "offset": [
        5972,
        6000
      ],
      "op": "DUP3",
      "path": "0"
    },
    "2643": {
      "fn": "Allowlist.splitSignature",
      "offset": [
        5972,
        6000
      ],
      "op": "BYTE",
      "path": "0"
    },
    "2644": {
      "op": "DUP2"
    },
    "2645": {
      "op": "DUP7"
    },
    "2646": {
      "op": "ADD"
    },
    "2647": {
      "op": "DUP2"
    },
    "2648": {
      "op": "SWAP1"
    },
    "2649": {
      "op": "MSTORE"
    },
    "2650": {
      "op": "SWAP3"
    },
    "2651": {
      "op": "DUP2"
    },
    "2652": {
      "op": "ADD"
    },
    "2653": {
      "op": "DUP7"
    },
    "2654": {
      "op": "SWAP1"
    },
    "2655": {
      "op": "MSTORE"
    },
    "2656": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "2658": {
      "op": "DUP2"
    },
    "2659": {
      "op": "ADD"
    },
    "2660": {
      "op": "DUP5"
    },
    "2661": {
      "op": "SWAP1"
    },
    "2662": {
      "op": "MSTORE"
    },
    "2663": {
      "fn": "Allowlist.verifySigner",
      "offset": [
        4884,
        4909
      ],
      "op": "SWAP4",
      "path": "0"
    },
    "2664": {
      "fn": "Allowlist.verifySigner",
      "offset": [
        4884,
        4909
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "2665": {
      "fn": "Allowlist.verifySigner",
      "offset": [
        4780,
        4784
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2666": {
      "fn": "Allowlist.verifySigner",
      "offset": [
        4780,
        4784
      ],
      "op": "SWAP6",
      "path": "0"
    },
    "2667": {
      "fn": "Allowlist.splitSignature",
      "offset": [
        5868,
        5887
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "2668": {
      "fn": "Allowlist.splitSignature",
      "offset": [
        5868,
        5887
      ],
      "op": "SWAP4",
      "path": "0"
    },
    "2669": {
      "fn": "Allowlist.splitSignature",
      "offset": [
        5972,
        6000
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "2670": {
      "fn": "Allowlist.splitSignature",
      "offset": [
        5972,
        6000
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "2671": {
      "fn": "Allowlist.verifySigner",
      "offset": [
        4884,
        4909
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1"
    },
    "2673": {
      "fn": "Allowlist.verifySigner",
      "offset": [
        4884,
        4909
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "2674": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2676": {
      "op": "DUP1"
    },
    "2677": {
      "op": "DUP3"
    },
    "2678": {
      "op": "ADD"
    },
    "2679": {
      "op": "SWAP4"
    },
    "2680": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "2682": {
      "op": "NOT"
    },
    "2683": {
      "fn": "Allowlist.verifySigner",
      "offset": [
        4884,
        4909
      ],
      "op": "DUP2",
      "path": "0"
    },
    "2684": {
      "fn": "Allowlist.verifySigner",
      "offset": [
        4884,
        4909
      ],
      "op": "ADD",
      "path": "0"
    },
    "2685": {
      "fn": "Allowlist.verifySigner",
      "offset": [
        4884,
        4909
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "2686": {
      "fn": "Allowlist.verifySigner",
      "offset": [
        4884,
        4909
      ],
      "op": "DUP2",
      "path": "0"
    },
    "2687": {
      "fn": "Allowlist.verifySigner",
      "offset": [
        4884,
        4909
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2688": {
      "fn": "Allowlist.verifySigner",
      "offset": [
        4884,
        4909
      ],
      "op": "SUB",
      "path": "0"
    },
    "2689": {
      "fn": "Allowlist.verifySigner",
      "offset": [
        4884,
        4909
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2690": {
      "fn": "Allowlist.verifySigner",
      "offset": [
        4884,
        4909
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "2691": {
      "fn": "Allowlist.verifySigner",
      "offset": [
        4884,
        4909
      ],
      "op": "ADD",
      "path": "0"
    },
    "2692": {
      "fn": "Allowlist.verifySigner",
      "offset": [
        4884,
        4909
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2693": {
      "fn": "Allowlist.verifySigner",
      "offset": [
        4884,
        4909
      ],
      "op": "DUP6",
      "path": "0"
    },
    "2694": {
      "fn": "Allowlist.verifySigner",
      "offset": [
        4884,
        4909
      ],
      "op": "GAS",
      "path": "0"
    },
    "2695": {
      "fn": "Allowlist.verifySigner",
      "offset": [
        4884,
        4909
      ],
      "op": "STATICCALL",
      "path": "0"
    },
    "2696": {
      "fn": "Allowlist.verifySigner",
      "offset": [
        4884,
        4909
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "2697": {
      "fn": "Allowlist.verifySigner",
      "offset": [
        4884,
        4909
      ],
      "op": "DUP1",
      "path": "0"
    },
    "2698": {
      "fn": "Allowlist.verifySigner",
      "offset": [
        4884,
        4909
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "2699": {
      "fn": "Allowlist.verifySigner",
      "offset": [
        4884,
        4909
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xA98"
    },
    "2702": {
      "fn": "Allowlist.verifySigner",
      "offset": [
        4884,
        4909
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "2703": {
      "fn": "Allowlist.verifySigner",
      "offset": [
        4884,
        4909
      ],
      "op": "RETURNDATASIZE",
      "path": "0"
    },
    "2704": {
      "fn": "Allowlist.verifySigner",
      "offset": [
        4884,
        4909
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "2706": {
      "fn": "Allowlist.verifySigner",
      "offset": [
        4884,
        4909
      ],
      "op": "DUP1",
      "path": "0"
    },
    "2707": {
      "fn": "Allowlist.verifySigner",
      "offset": [
        4884,
        4909
      ],
      "op": "RETURNDATACOPY",
      "path": "0"
    },
    "2708": {
      "fn": "Allowlist.verifySigner",
      "offset": [
        4884,
        4909
      ],
      "op": "RETURNDATASIZE",
      "path": "0"
    },
    "2709": {
      "fn": "Allowlist.verifySigner",
      "offset": [
        4884,
        4909
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "2711": {
      "fn": "Allowlist.verifySigner",
      "offset": [
        4884,
        4909
      ],
      "op": "REVERT",
      "path": "0"
    },
    "2712": {
      "fn": "Allowlist.verifySigner",
      "offset": [
        4884,
        4909
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2713": {
      "fn": "Allowlist.verifySigner",
      "offset": [
        4884,
        4909
      ],
      "op": "POP",
      "path": "0"
    },
    "2714": {
      "fn": "Allowlist.verifySigner",
      "offset": [
        4884,
        4909
      ],
      "op": "POP",
      "path": "0"
    },
    "2715": {
      "fn": "Allowlist.verifySigner",
      "offset": [
        4884,
        4909
      ],
      "op": "POP",
      "path": "0"
    },
    "2716": {
      "fn": "Allowlist.verifySigner",
      "offset": [
        4884,
        4909
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "2718": {
      "fn": "Allowlist.verifySigner",
      "offset": [
        4884,
        4909
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "2720": {
      "fn": "Allowlist.verifySigner",
      "offset": [
        4884,
        4909
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "2721": {
      "fn": "Allowlist.verifySigner",
      "offset": [
        4884,
        4909
      ],
      "op": "SUB",
      "path": "0"
    },
    "2722": {
      "fn": "Allowlist.verifySigner",
      "offset": [
        4884,
        4909
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "2723": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2725": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2727": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2729": {
      "op": "SHL"
    },
    "2730": {
      "op": "SUB"
    },
    "2731": {
      "fn": "Allowlist.verifySigner",
      "offset": [
        4873,
        4909
      ],
      "op": "AND",
      "path": "0"
    },
    "2732": {
      "fn": "Allowlist.verifySigner",
      "offset": [
        4873,
        4880
      ],
      "op": "DUP8",
      "path": "0"
    },
    "2733": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2735": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2737": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2739": {
      "op": "SHL"
    },
    "2740": {
      "op": "SUB"
    },
    "2741": {
      "fn": "Allowlist.verifySigner",
      "offset": [
        4873,
        4909
      ],
      "op": "AND",
      "path": "0"
    },
    "2742": {
      "fn": "Allowlist.verifySigner",
      "offset": [
        4873,
        4909
      ],
      "op": "EQ",
      "path": "0"
    },
    "2743": {
      "fn": "Allowlist.verifySigner",
      "offset": [
        4866,
        4910
      ],
      "op": "SWAP4",
      "path": "0"
    },
    "2744": {
      "fn": "Allowlist.verifySigner",
      "offset": [
        4866,
        4910
      ],
      "op": "POP",
      "path": "0"
    },
    "2745": {
      "fn": "Allowlist.verifySigner",
      "offset": [
        4866,
        4910
      ],
      "op": "POP",
      "path": "0"
    },
    "2746": {
      "fn": "Allowlist.verifySigner",
      "offset": [
        4866,
        4910
      ],
      "op": "POP",
      "path": "0"
    },
    "2747": {
      "fn": "Allowlist.verifySigner",
      "offset": [
        4866,
        4910
      ],
      "op": "POP",
      "path": "0"
    },
    "2748": {
      "fn": "Allowlist.verifySigner",
      "offset": [
        4649,
        4917
      ],
      "op": "SWAP4",
      "path": "0"
    },
    "2749": {
      "fn": "Allowlist.verifySigner",
      "offset": [
        4649,
        4917
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "2750": {
      "fn": "Allowlist.verifySigner",
      "offset": [
        4649,
        4917
      ],
      "op": "POP",
      "path": "0"
    },
    "2751": {
      "fn": "Allowlist.verifySigner",
      "offset": [
        4649,
        4917
      ],
      "op": "POP",
      "path": "0"
    },
    "2752": {
      "fn": "Allowlist.verifySigner",
      "offset": [
        4649,
        4917
      ],
      "op": "POP",
      "path": "0"
    },
    "2753": {
      "fn": "Allowlist.verifySigner",
      "jump": "o",
      "offset": [
        4649,
        4917
      ],
      "op": "JUMP",
      "path": "0"
    },
    "2754": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2401,
        2599
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "2755": {
      "offset": [
        1401,
        1414
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xACA"
    },
    "2758": {
      "offset": [
        1401,
        1412
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xEE1"
    },
    "2761": {
      "jump": "i",
      "offset": [
        1401,
        1414
      ],
      "op": "JUMP",
      "path": "2"
    },
    "2762": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1401,
        1414
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "2763": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2765": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2767": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2769": {
      "op": "SHL"
    },
    "2770": {
      "op": "SUB"
    },
    "2771": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2489,
        2511
      ],
      "op": "DUP2",
      "path": "2",
      "statement": 32
    },
    "2772": {
      "branch": 94,
      "fn": "Ownable.transferOwnership",
      "offset": [
        2489,
        2511
      ],
      "op": "AND",
      "path": "2"
    },
    "2773": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2481,
        2554
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xB2F"
    },
    "2776": {
      "branch": 94,
      "fn": "Ownable.transferOwnership",
      "offset": [
        2481,
        2554
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "2777": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2481,
        2554
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "2779": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2481,
        2554
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "2780": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "2784": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "2786": {
      "op": "SHL"
    },
    "2787": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2481,
        2554
      ],
      "op": "DUP2",
      "path": "2"
    },
    "2788": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2481,
        2554
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "2789": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2791": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2481,
        2554
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "2793": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2481,
        2554
      ],
      "op": "DUP3",
      "path": "2"
    },
    "2794": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2481,
        2554
      ],
      "op": "ADD",
      "path": "2"
    },
    "2795": {
      "op": "MSTORE"
    },
    "2796": {
      "op": "PUSH1",
      "value": "0x26"
    },
    "2798": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "2800": {
      "op": "DUP3"
    },
    "2801": {
      "op": "ADD"
    },
    "2802": {
      "op": "MSTORE"
    },
    "2803": {
      "op": "PUSH32",
      "value": "0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061"
    },
    "2836": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "2838": {
      "op": "DUP3"
    },
    "2839": {
      "op": "ADD"
    },
    "2840": {
      "op": "MSTORE"
    },
    "2841": {
      "op": "PUSH6",
      "value": "0x646472657373"
    },
    "2848": {
      "op": "PUSH1",
      "value": "0xD0"
    },
    "2850": {
      "op": "SHL"
    },
    "2851": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "2853": {
      "op": "DUP3"
    },
    "2854": {
      "op": "ADD"
    },
    "2855": {
      "op": "MSTORE"
    },
    "2856": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "2858": {
      "op": "ADD"
    },
    "2859": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2481,
        2554
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x422"
    },
    "2862": {
      "op": "JUMP"
    },
    "2863": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2481,
        2554
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "2864": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2564,
        2592
      ],
      "op": "PUSH2",
      "path": "2",
      "statement": 33,
      "value": "0x600"
    },
    "2867": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2583,
        2591
      ],
      "op": "DUP2",
      "path": "2"
    },
    "2868": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2564,
        2582
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xF3B"
    },
    "2871": {
      "fn": "Ownable.transferOwnership",
      "jump": "i",
      "offset": [
        2564,
        2592
      ],
      "op": "JUMP",
      "path": "2"
    },
    "2872": {
      "fn": "Soulbound.issuerOf",
      "offset": [
        4277,
        4768
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "2873": {
      "fn": "Soulbound.issuerOf",
      "offset": [
        4346,
        4353
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "2875": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2877": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2879": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2881": {
      "op": "SHL"
    },
    "2882": {
      "op": "SUB"
    },
    "2883": {
      "fn": "Soulbound.issuerOf",
      "offset": [
        4425,
        4442
      ],
      "op": "DUP4",
      "path": "3",
      "statement": 34
    },
    "2884": {
      "branch": 97,
      "fn": "Soulbound.issuerOf",
      "offset": [
        4425,
        4442
      ],
      "op": "AND",
      "path": "3"
    },
    "2885": {
      "fn": "Soulbound.issuerOf",
      "offset": [
        4417,
        4470
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xB90"
    },
    "2888": {
      "branch": 97,
      "fn": "Soulbound.issuerOf",
      "offset": [
        4417,
        4470
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "2889": {
      "fn": "Soulbound.issuerOf",
      "offset": [
        4417,
        4470
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "2891": {
      "fn": "Soulbound.issuerOf",
      "offset": [
        4417,
        4470
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "2892": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "2896": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "2898": {
      "op": "SHL"
    },
    "2899": {
      "fn": "Soulbound.issuerOf",
      "offset": [
        4417,
        4470
      ],
      "op": "DUP2",
      "path": "3"
    },
    "2900": {
      "fn": "Soulbound.issuerOf",
      "offset": [
        4417,
        4470
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "2901": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2903": {
      "fn": "Soulbound.issuerOf",
      "offset": [
        4417,
        4470
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x4"
    },
    "2905": {
      "fn": "Soulbound.issuerOf",
      "offset": [
        4417,
        4470
      ],
      "op": "DUP3",
      "path": "3"
    },
    "2906": {
      "fn": "Soulbound.issuerOf",
      "offset": [
        4417,
        4470
      ],
      "op": "ADD",
      "path": "3"
    },
    "2907": {
      "op": "MSTORE"
    },
    "2908": {
      "op": "PUSH1",
      "value": "0x17"
    },
    "2910": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "2912": {
      "op": "DUP3"
    },
    "2913": {
      "op": "ADD"
    },
    "2914": {
      "op": "MSTORE"
    },
    "2915": {
      "op": "PUSH32",
      "value": "0x517565727920666F72207A65726F20616464726573732E000000000000000000"
    },
    "2948": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "2950": {
      "op": "DUP3"
    },
    "2951": {
      "op": "ADD"
    },
    "2952": {
      "op": "MSTORE"
    },
    "2953": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "2955": {
      "op": "ADD"
    },
    "2956": {
      "fn": "Soulbound.issuerOf",
      "offset": [
        4417,
        4470
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x422"
    },
    "2959": {
      "op": "JUMP"
    },
    "2960": {
      "fn": "Soulbound.issuerOf",
      "offset": [
        4417,
        4470
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "2961": {
      "fn": "Soulbound.issuerOf",
      "offset": [
        4527,
        4544
      ],
      "op": "PUSH2",
      "path": "3",
      "statement": 35,
      "value": "0xB99"
    },
    "2964": {
      "fn": "Soulbound.issuerOf",
      "offset": [
        4535,
        4543
      ],
      "op": "DUP3",
      "path": "3"
    },
    "2965": {
      "fn": "Soulbound.issuerOf",
      "offset": [
        4527,
        4534
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xC4C"
    },
    "2968": {
      "fn": "Soulbound.issuerOf",
      "jump": "i",
      "offset": [
        4527,
        4544
      ],
      "op": "JUMP",
      "path": "3"
    },
    "2969": {
      "branch": 98,
      "fn": "Soulbound.issuerOf",
      "offset": [
        4527,
        4544
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "2970": {
      "fn": "Soulbound.issuerOf",
      "offset": [
        4519,
        4568
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xBDB"
    },
    "2973": {
      "branch": 98,
      "fn": "Soulbound.issuerOf",
      "offset": [
        4519,
        4568
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "2974": {
      "fn": "Soulbound.issuerOf",
      "offset": [
        4519,
        4568
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "2976": {
      "fn": "Soulbound.issuerOf",
      "offset": [
        4519,
        4568
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "2977": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "2981": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "2983": {
      "op": "SHL"
    },
    "2984": {
      "fn": "Soulbound.issuerOf",
      "offset": [
        4519,
        4568
      ],
      "op": "DUP2",
      "path": "3"
    },
    "2985": {
      "fn": "Soulbound.issuerOf",
      "offset": [
        4519,
        4568
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "2986": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2988": {
      "fn": "Soulbound.issuerOf",
      "offset": [
        4519,
        4568
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x4"
    },
    "2990": {
      "fn": "Soulbound.issuerOf",
      "offset": [
        4519,
        4568
      ],
      "op": "DUP3",
      "path": "3"
    },
    "2991": {
      "fn": "Soulbound.issuerOf",
      "offset": [
        4519,
        4568
      ],
      "op": "ADD",
      "path": "3"
    },
    "2992": {
      "op": "MSTORE"
    },
    "2993": {
      "op": "PUSH1",
      "value": "0x13"
    },
    "2995": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "2997": {
      "op": "DUP3"
    },
    "2998": {
      "op": "ADD"
    },
    "2999": {
      "op": "MSTORE"
    },
    "3000": {
      "op": "PUSH19",
      "value": "0x2737B716B2BC34B9BA32B73A103A37B5B2B717"
    },
    "3020": {
      "op": "PUSH1",
      "value": "0x69"
    },
    "3022": {
      "op": "SHL"
    },
    "3023": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "3025": {
      "op": "DUP3"
    },
    "3026": {
      "op": "ADD"
    },
    "3027": {
      "op": "MSTORE"
    },
    "3028": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "3030": {
      "op": "ADD"
    },
    "3031": {
      "fn": "Soulbound.issuerOf",
      "offset": [
        4519,
        4568
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x422"
    },
    "3034": {
      "op": "JUMP"
    },
    "3035": {
      "fn": "Soulbound.issuerOf",
      "offset": [
        4519,
        4568
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "3036": {
      "fn": "Soulbound.issuerOf",
      "offset": [
        4658,
        4661
      ],
      "op": "DUP3",
      "path": "3",
      "statement": 36
    },
    "3037": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3039": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3041": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3043": {
      "op": "SHL"
    },
    "3044": {
      "op": "SUB"
    },
    "3045": {
      "fn": "Soulbound.issuerOf",
      "offset": [
        4637,
        4661
      ],
      "op": "AND",
      "path": "3"
    },
    "3046": {
      "fn": "Soulbound.issuerOf",
      "offset": [
        4637,
        4654
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xBEE"
    },
    "3049": {
      "fn": "Soulbound.issuerOf",
      "offset": [
        4645,
        4653
      ],
      "op": "DUP4",
      "path": "3"
    },
    "3050": {
      "fn": "Soulbound.issuerOf",
      "offset": [
        4637,
        4644
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x603"
    },
    "3053": {
      "fn": "Soulbound.issuerOf",
      "jump": "i",
      "offset": [
        4637,
        4654
      ],
      "op": "JUMP",
      "path": "3"
    },
    "3054": {
      "fn": "Soulbound.issuerOf",
      "offset": [
        4637,
        4654
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "3055": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3057": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3059": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3061": {
      "op": "SHL"
    },
    "3062": {
      "op": "SUB"
    },
    "3063": {
      "fn": "Soulbound.issuerOf",
      "offset": [
        4637,
        4661
      ],
      "op": "AND",
      "path": "3"
    },
    "3064": {
      "branch": 99,
      "fn": "Soulbound.issuerOf",
      "offset": [
        4637,
        4661
      ],
      "op": "EQ",
      "path": "3"
    },
    "3065": {
      "fn": "Soulbound.issuerOf",
      "offset": [
        4629,
        4692
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xC44"
    },
    "3068": {
      "branch": 99,
      "fn": "Soulbound.issuerOf",
      "offset": [
        4629,
        4692
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "3069": {
      "fn": "Soulbound.issuerOf",
      "offset": [
        4629,
        4692
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "3071": {
      "fn": "Soulbound.issuerOf",
      "offset": [
        4629,
        4692
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "3072": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "3076": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "3078": {
      "op": "SHL"
    },
    "3079": {
      "fn": "Soulbound.issuerOf",
      "offset": [
        4629,
        4692
      ],
      "op": "DUP2",
      "path": "3"
    },
    "3080": {
      "fn": "Soulbound.issuerOf",
      "offset": [
        4629,
        4692
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "3081": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3083": {
      "fn": "Soulbound.issuerOf",
      "offset": [
        4629,
        4692
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x4"
    },
    "3085": {
      "fn": "Soulbound.issuerOf",
      "offset": [
        4629,
        4692
      ],
      "op": "DUP3",
      "path": "3"
    },
    "3086": {
      "fn": "Soulbound.issuerOf",
      "offset": [
        4629,
        4692
      ],
      "op": "ADD",
      "path": "3"
    },
    "3087": {
      "op": "MSTORE"
    },
    "3088": {
      "op": "PUSH1",
      "value": "0x1A"
    },
    "3090": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "3092": {
      "op": "DUP3"
    },
    "3093": {
      "op": "ADD"
    },
    "3094": {
      "op": "MSTORE"
    },
    "3095": {
      "op": "PUSH32",
      "value": "0x546F6B656E206E6F74206F776E65642062792061646472657373000000000000"
    },
    "3128": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "3130": {
      "op": "DUP3"
    },
    "3131": {
      "op": "ADD"
    },
    "3132": {
      "op": "MSTORE"
    },
    "3133": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "3135": {
      "op": "ADD"
    },
    "3136": {
      "fn": "Soulbound.issuerOf",
      "offset": [
        4629,
        4692
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x422"
    },
    "3139": {
      "op": "JUMP"
    },
    "3140": {
      "fn": "Soulbound.issuerOf",
      "offset": [
        4629,
        4692
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "3141": {
      "op": "POP"
    },
    "3142": {
      "fn": "Soulbound.issuerOf",
      "offset": [
        4756,
        4760
      ],
      "op": "ADDRESS",
      "path": "3",
      "statement": 37
    },
    "3143": {
      "fn": "Soulbound.issuerOf",
      "offset": [
        4277,
        4768
      ],
      "op": "SWAP3",
      "path": "3"
    },
    "3144": {
      "fn": "Soulbound.issuerOf",
      "offset": [
        4277,
        4768
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "3145": {
      "fn": "Soulbound.issuerOf",
      "offset": [
        4277,
        4768
      ],
      "op": "POP",
      "path": "3"
    },
    "3146": {
      "fn": "Soulbound.issuerOf",
      "offset": [
        4277,
        4768
      ],
      "op": "POP",
      "path": "3"
    },
    "3147": {
      "fn": "Soulbound.issuerOf",
      "jump": "o",
      "offset": [
        4277,
        4768
      ],
      "op": "JUMP",
      "path": "3"
    },
    "3148": {
      "fn": "ERC4973._exists",
      "offset": [
        5509,
        5628
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "3149": {
      "fn": "ERC4973._exists",
      "offset": [
        5574,
        5578
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x0"
    },
    "3151": {
      "fn": "ERC4973._exists",
      "offset": [
        5593,
        5609
      ],
      "op": "SWAP1",
      "path": "7",
      "statement": 38
    },
    "3152": {
      "fn": "ERC4973._exists",
      "offset": [
        5593,
        5609
      ],
      "op": "DUP2",
      "path": "7"
    },
    "3153": {
      "fn": "ERC4973._exists",
      "offset": [
        5593,
        5609
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "3154": {
      "fn": "ERC4973._exists",
      "offset": [
        5593,
        5600
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x2"
    },
    "3156": {
      "fn": "ERC4973._exists",
      "offset": [
        5593,
        5609
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x20"
    },
    "3158": {
      "fn": "ERC4973._exists",
      "offset": [
        5593,
        5609
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "3159": {
      "fn": "ERC4973._exists",
      "offset": [
        5593,
        5609
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x40"
    },
    "3161": {
      "fn": "ERC4973._exists",
      "offset": [
        5593,
        5609
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "3162": {
      "fn": "ERC4973._exists",
      "offset": [
        5593,
        5609
      ],
      "op": "KECCAK256",
      "path": "7"
    },
    "3163": {
      "fn": "ERC4973._exists",
      "offset": [
        5593,
        5609
      ],
      "op": "SLOAD",
      "path": "7"
    },
    "3164": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3166": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3168": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3170": {
      "op": "SHL"
    },
    "3171": {
      "op": "SUB"
    },
    "3172": {
      "fn": "ERC4973._exists",
      "offset": [
        5593,
        5609
      ],
      "op": "AND",
      "path": "7"
    },
    "3173": {
      "fn": "ERC4973._exists",
      "offset": [
        5593,
        5623
      ],
      "op": "ISZERO",
      "path": "7"
    },
    "3174": {
      "fn": "ERC4973._exists",
      "offset": [
        5593,
        5623
      ],
      "op": "ISZERO",
      "path": "7"
    },
    "3175": {
      "fn": "ERC4973._exists",
      "offset": [
        5593,
        5623
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "3176": {
      "fn": "ERC4973._exists",
      "jump": "o",
      "offset": [
        5509,
        5628
      ],
      "op": "JUMP",
      "path": "7"
    },
    "3177": {
      "fn": "Soulbound.revoke",
      "offset": [
        3328,
        3755
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "3178": {
      "fn": "Soulbound.revoke",
      "offset": [
        3394,
        3398
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "3180": {
      "fn": "Soulbound.revoke",
      "offset": [
        3457,
        3474
      ],
      "op": "PUSH2",
      "path": "3",
      "statement": 39,
      "value": "0xC74"
    },
    "3183": {
      "fn": "Soulbound.revoke",
      "offset": [
        3465,
        3473
      ],
      "op": "DUP3",
      "path": "3"
    },
    "3184": {
      "fn": "Soulbound.revoke",
      "offset": [
        3457,
        3464
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xC4C"
    },
    "3187": {
      "fn": "Soulbound.revoke",
      "jump": "i",
      "offset": [
        3457,
        3474
      ],
      "op": "JUMP",
      "path": "3"
    },
    "3188": {
      "branch": 100,
      "fn": "Soulbound.revoke",
      "offset": [
        3457,
        3474
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "3189": {
      "fn": "Soulbound.revoke",
      "offset": [
        3449,
        3498
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xCB6"
    },
    "3192": {
      "branch": 100,
      "fn": "Soulbound.revoke",
      "offset": [
        3449,
        3498
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "3193": {
      "fn": "Soulbound.revoke",
      "offset": [
        3449,
        3498
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "3195": {
      "fn": "Soulbound.revoke",
      "offset": [
        3449,
        3498
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "3196": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "3200": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "3202": {
      "op": "SHL"
    },
    "3203": {
      "fn": "Soulbound.revoke",
      "offset": [
        3449,
        3498
      ],
      "op": "DUP2",
      "path": "3"
    },
    "3204": {
      "fn": "Soulbound.revoke",
      "offset": [
        3449,
        3498
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "3205": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3207": {
      "fn": "Soulbound.revoke",
      "offset": [
        3449,
        3498
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x4"
    },
    "3209": {
      "fn": "Soulbound.revoke",
      "offset": [
        3449,
        3498
      ],
      "op": "DUP3",
      "path": "3"
    },
    "3210": {
      "fn": "Soulbound.revoke",
      "offset": [
        3449,
        3498
      ],
      "op": "ADD",
      "path": "3"
    },
    "3211": {
      "op": "MSTORE"
    },
    "3212": {
      "op": "PUSH1",
      "value": "0x13"
    },
    "3214": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "3216": {
      "op": "DUP3"
    },
    "3217": {
      "op": "ADD"
    },
    "3218": {
      "op": "MSTORE"
    },
    "3219": {
      "op": "PUSH19",
      "value": "0x2737B716B2BC34B9BA32B73A103A37B5B2B717"
    },
    "3239": {
      "op": "PUSH1",
      "value": "0x69"
    },
    "3241": {
      "op": "SHL"
    },
    "3242": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "3244": {
      "op": "DUP3"
    },
    "3245": {
      "op": "ADD"
    },
    "3246": {
      "op": "MSTORE"
    },
    "3247": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "3249": {
      "op": "ADD"
    },
    "3250": {
      "fn": "Soulbound.revoke",
      "offset": [
        3449,
        3498
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x422"
    },
    "3253": {
      "op": "JUMP"
    },
    "3254": {
      "fn": "Soulbound.revoke",
      "offset": [
        3449,
        3498
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "3255": {
      "fn": "Soulbound.revoke",
      "offset": [
        3590,
        3595
      ],
      "op": "DUP3",
      "path": "3",
      "statement": 40
    },
    "3256": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3258": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3260": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3262": {
      "op": "SHL"
    },
    "3263": {
      "op": "SUB"
    },
    "3264": {
      "fn": "Soulbound.revoke",
      "offset": [
        3569,
        3595
      ],
      "op": "AND",
      "path": "3"
    },
    "3265": {
      "fn": "Soulbound.revoke",
      "offset": [
        3569,
        3586
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xCC9"
    },
    "3268": {
      "fn": "Soulbound.revoke",
      "offset": [
        3577,
        3585
      ],
      "op": "DUP4",
      "path": "3"
    },
    "3269": {
      "fn": "Soulbound.revoke",
      "offset": [
        3569,
        3576
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x603"
    },
    "3272": {
      "fn": "Soulbound.revoke",
      "jump": "i",
      "offset": [
        3569,
        3586
      ],
      "op": "JUMP",
      "path": "3"
    },
    "3273": {
      "fn": "Soulbound.revoke",
      "offset": [
        3569,
        3586
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "3274": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3276": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3278": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3280": {
      "op": "SHL"
    },
    "3281": {
      "op": "SUB"
    },
    "3282": {
      "fn": "Soulbound.revoke",
      "offset": [
        3569,
        3595
      ],
      "op": "AND",
      "path": "3"
    },
    "3283": {
      "branch": 101,
      "fn": "Soulbound.revoke",
      "offset": [
        3569,
        3595
      ],
      "op": "EQ",
      "path": "3"
    },
    "3284": {
      "fn": "Soulbound.revoke",
      "offset": [
        3561,
        3626
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xD1F"
    },
    "3287": {
      "branch": 101,
      "fn": "Soulbound.revoke",
      "offset": [
        3561,
        3626
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "3288": {
      "fn": "Soulbound.revoke",
      "offset": [
        3561,
        3626
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "3290": {
      "fn": "Soulbound.revoke",
      "offset": [
        3561,
        3626
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "3291": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "3295": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "3297": {
      "op": "SHL"
    },
    "3298": {
      "fn": "Soulbound.revoke",
      "offset": [
        3561,
        3626
      ],
      "op": "DUP2",
      "path": "3"
    },
    "3299": {
      "fn": "Soulbound.revoke",
      "offset": [
        3561,
        3626
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "3300": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3302": {
      "fn": "Soulbound.revoke",
      "offset": [
        3561,
        3626
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x4"
    },
    "3304": {
      "fn": "Soulbound.revoke",
      "offset": [
        3561,
        3626
      ],
      "op": "DUP3",
      "path": "3"
    },
    "3305": {
      "fn": "Soulbound.revoke",
      "offset": [
        3561,
        3626
      ],
      "op": "ADD",
      "path": "3"
    },
    "3306": {
      "op": "MSTORE"
    },
    "3307": {
      "op": "PUSH1",
      "value": "0x1A"
    },
    "3309": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "3311": {
      "op": "DUP3"
    },
    "3312": {
      "op": "ADD"
    },
    "3313": {
      "op": "MSTORE"
    },
    "3314": {
      "op": "PUSH32",
      "value": "0x546F6B656E206E6F74206F776E65642062792061646472657373000000000000"
    },
    "3347": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "3349": {
      "op": "DUP3"
    },
    "3350": {
      "op": "ADD"
    },
    "3351": {
      "op": "MSTORE"
    },
    "3352": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "3354": {
      "op": "ADD"
    },
    "3355": {
      "fn": "Soulbound.revoke",
      "offset": [
        3561,
        3626
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x422"
    },
    "3358": {
      "op": "JUMP"
    },
    "3359": {
      "fn": "Soulbound.revoke",
      "offset": [
        3561,
        3626
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "3360": {
      "fn": "Soulbound.revoke",
      "offset": [
        3669,
        3697
      ],
      "op": "PUSH2",
      "path": "3",
      "statement": 41,
      "value": "0xD28"
    },
    "3363": {
      "fn": "Soulbound.revoke",
      "offset": [
        3688,
        3696
      ],
      "op": "DUP3",
      "path": "3"
    },
    "3364": {
      "fn": "Soulbound.revoke",
      "offset": [
        3669,
        3687
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x1179"
    },
    "3367": {
      "fn": "Soulbound.revoke",
      "jump": "i",
      "offset": [
        3669,
        3697
      ],
      "op": "JUMP",
      "path": "3"
    },
    "3368": {
      "fn": "Soulbound.revoke",
      "offset": [
        3669,
        3697
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "3369": {
      "op": "POP"
    },
    "3370": {
      "fn": "Soulbound.revoke",
      "offset": [
        3744,
        3748
      ],
      "op": "PUSH1",
      "path": "3",
      "statement": 42,
      "value": "0x1"
    },
    "3372": {
      "fn": "Soulbound.revoke",
      "offset": [
        3328,
        3755
      ],
      "op": "SWAP3",
      "path": "3"
    },
    "3373": {
      "fn": "Soulbound.revoke",
      "offset": [
        3328,
        3755
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "3374": {
      "fn": "Soulbound.revoke",
      "offset": [
        3328,
        3755
      ],
      "op": "POP",
      "path": "3"
    },
    "3375": {
      "fn": "Soulbound.revoke",
      "offset": [
        3328,
        3755
      ],
      "op": "POP",
      "path": "3"
    },
    "3376": {
      "fn": "Soulbound.revoke",
      "jump": "o",
      "offset": [
        3328,
        3755
      ],
      "op": "JUMP",
      "path": "3"
    },
    "3377": {
      "fn": "SoulboundCore.toString",
      "offset": [
        6613,
        7316
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "3378": {
      "fn": "SoulboundCore.toString",
      "offset": [
        6669,
        6682
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x60"
    },
    "3380": {
      "fn": "SoulboundCore.toString",
      "offset": [
        6886,
        6891
      ],
      "op": "DUP2",
      "path": "4"
    },
    "3381": {
      "fn": "SoulboundCore.toString",
      "offset": [
        6895,
        6896
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "3383": {
      "branch": 87,
      "fn": "SoulboundCore.toString",
      "offset": [
        6886,
        6896
      ],
      "op": "SUB",
      "path": "4"
    },
    "3384": {
      "fn": "SoulboundCore.toString",
      "offset": [
        6882,
        6933
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0xD58"
    },
    "3387": {
      "branch": 87,
      "fn": "SoulboundCore.toString",
      "offset": [
        6882,
        6933
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "3388": {
      "op": "POP"
    },
    "3389": {
      "op": "POP"
    },
    "3390": {
      "fn": "SoulboundCore.toString",
      "offset": [
        6912,
        6922
      ],
      "op": "PUSH1",
      "path": "4",
      "statement": 43,
      "value": "0x40"
    },
    "3392": {
      "fn": "SoulboundCore.toString",
      "offset": [
        6912,
        6922
      ],
      "op": "DUP1",
      "path": "4"
    },
    "3393": {
      "fn": "SoulboundCore.toString",
      "offset": [
        6912,
        6922
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "3394": {
      "fn": "SoulboundCore.toString",
      "offset": [
        6912,
        6922
      ],
      "op": "DUP1",
      "path": "4"
    },
    "3395": {
      "fn": "SoulboundCore.toString",
      "offset": [
        6912,
        6922
      ],
      "op": "DUP3",
      "path": "4"
    },
    "3396": {
      "fn": "SoulboundCore.toString",
      "offset": [
        6912,
        6922
      ],
      "op": "ADD",
      "path": "4"
    },
    "3397": {
      "fn": "SoulboundCore.toString",
      "offset": [
        6912,
        6922
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "3398": {
      "fn": "SoulboundCore.toString",
      "offset": [
        6912,
        6922
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "3399": {
      "fn": "SoulboundCore.toString",
      "offset": [
        6912,
        6922
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "3400": {
      "fn": "SoulboundCore.toString",
      "offset": [
        6912,
        6922
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x1"
    },
    "3402": {
      "fn": "SoulboundCore.toString",
      "offset": [
        6912,
        6922
      ],
      "op": "DUP2",
      "path": "4"
    },
    "3403": {
      "fn": "SoulboundCore.toString",
      "offset": [
        6912,
        6922
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "3404": {
      "op": "PUSH1",
      "value": "0x3"
    },
    "3406": {
      "op": "PUSH1",
      "value": "0xFC"
    },
    "3408": {
      "op": "SHL"
    },
    "3409": {
      "fn": "SoulboundCore.toString",
      "offset": [
        6912,
        6922
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x20"
    },
    "3411": {
      "fn": "SoulboundCore.toString",
      "offset": [
        6912,
        6922
      ],
      "op": "DUP3",
      "path": "4"
    },
    "3412": {
      "fn": "SoulboundCore.toString",
      "offset": [
        6912,
        6922
      ],
      "op": "ADD",
      "path": "4"
    },
    "3413": {
      "fn": "SoulboundCore.toString",
      "offset": [
        6912,
        6922
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "3414": {
      "fn": "SoulboundCore.toString",
      "offset": [
        6912,
        6922
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "3415": {
      "fn": "SoulboundCore.toString",
      "jump": "o",
      "offset": [
        6613,
        7316
      ],
      "op": "JUMP",
      "path": "4"
    },
    "3416": {
      "fn": "SoulboundCore.toString",
      "offset": [
        6882,
        6933
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "3417": {
      "fn": "SoulboundCore.toString",
      "offset": [
        6957,
        6962
      ],
      "op": "DUP2",
      "path": "4"
    },
    "3418": {
      "fn": "SoulboundCore.toString",
      "offset": [
        6942,
        6954
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "3420": {
      "fn": "SoulboundCore.toString",
      "offset": [
        6996,
        7071
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "3421": {
      "fn": "SoulboundCore.toString",
      "offset": [
        7003,
        7012
      ],
      "op": "DUP2",
      "path": "4"
    },
    "3422": {
      "fn": "SoulboundCore.toString",
      "offset": [
        7003,
        7012
      ],
      "op": "ISZERO",
      "path": "4"
    },
    "3423": {
      "fn": "SoulboundCore.toString",
      "offset": [
        6996,
        7071
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0xD82"
    },
    "3426": {
      "fn": "SoulboundCore.toString",
      "offset": [
        6996,
        7071
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "3427": {
      "fn": "SoulboundCore.toString",
      "offset": [
        7028,
        7036
      ],
      "op": "DUP1",
      "path": "4",
      "statement": 44
    },
    "3428": {
      "fn": "SoulboundCore.toString",
      "offset": [
        7028,
        7036
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0xD6C"
    },
    "3431": {
      "fn": "SoulboundCore.toString",
      "offset": [
        7028,
        7036
      ],
      "op": "DUP2",
      "path": "4"
    },
    "3432": {
      "fn": "SoulboundCore.toString",
      "offset": [
        7028,
        7036
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x17F9"
    },
    "3435": {
      "fn": "SoulboundCore.toString",
      "jump": "i",
      "offset": [
        7028,
        7036
      ],
      "op": "JUMP",
      "path": "4"
    },
    "3436": {
      "fn": "SoulboundCore.toString",
      "offset": [
        7028,
        7036
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "3437": {
      "fn": "SoulboundCore.toString",
      "offset": [
        7028,
        7036
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "3438": {
      "op": "POP"
    },
    "3439": {
      "fn": "SoulboundCore.toString",
      "offset": [
        7050,
        7060
      ],
      "op": "PUSH2",
      "path": "4",
      "statement": 45,
      "value": "0xD7B"
    },
    "3442": {
      "fn": "SoulboundCore.toString",
      "offset": [
        7050,
        7060
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "3443": {
      "op": "POP"
    },
    "3444": {
      "fn": "SoulboundCore.toString",
      "offset": [
        7058,
        7060
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0xA"
    },
    "3446": {
      "fn": "SoulboundCore.toString",
      "offset": [
        7050,
        7060
      ],
      "op": "DUP4",
      "path": "4"
    },
    "3447": {
      "fn": "SoulboundCore.toString",
      "offset": [
        7050,
        7060
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x1828"
    },
    "3450": {
      "fn": "SoulboundCore.toString",
      "jump": "i",
      "offset": [
        7050,
        7060
      ],
      "op": "JUMP",
      "path": "4"
    },
    "3451": {
      "fn": "SoulboundCore.toString",
      "offset": [
        7050,
        7060
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "3452": {
      "fn": "SoulboundCore.toString",
      "offset": [
        7050,
        7060
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "3453": {
      "fn": "SoulboundCore.toString",
      "offset": [
        7050,
        7060
      ],
      "op": "POP",
      "path": "4"
    },
    "3454": {
      "fn": "SoulboundCore.toString",
      "offset": [
        6996,
        7071
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0xD5C"
    },
    "3457": {
      "fn": "SoulboundCore.toString",
      "offset": [
        6996,
        7071
      ],
      "op": "JUMP",
      "path": "4"
    },
    "3458": {
      "fn": "SoulboundCore.toString",
      "offset": [
        6996,
        7071
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "3459": {
      "fn": "SoulboundCore.toString",
      "offset": [
        7080,
        7099
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "3461": {
      "fn": "SoulboundCore.toString",
      "offset": [
        7112,
        7118
      ],
      "op": "DUP2",
      "path": "4"
    },
    "3462": {
      "fn": "SoulboundCore.toString",
      "offset": [
        7102,
        7119
      ],
      "op": "PUSH8",
      "path": "4",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "3471": {
      "fn": "SoulboundCore.toString",
      "offset": [
        7102,
        7119
      ],
      "op": "DUP2",
      "path": "4"
    },
    "3472": {
      "fn": "SoulboundCore.toString",
      "offset": [
        7102,
        7119
      ],
      "op": "GT",
      "path": "4"
    },
    "3473": {
      "fn": "SoulboundCore.toString",
      "offset": [
        7102,
        7119
      ],
      "op": "ISZERO",
      "path": "4"
    },
    "3474": {
      "fn": "SoulboundCore.toString",
      "offset": [
        7102,
        7119
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0xD9D"
    },
    "3477": {
      "fn": "SoulboundCore.toString",
      "offset": [
        7102,
        7119
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "3478": {
      "fn": "SoulboundCore.toString",
      "offset": [
        7102,
        7119
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0xD9D"
    },
    "3481": {
      "fn": "SoulboundCore.toString",
      "offset": [
        7102,
        7119
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x14AF"
    },
    "3484": {
      "fn": "SoulboundCore.toString",
      "jump": "i",
      "offset": [
        7102,
        7119
      ],
      "op": "JUMP",
      "path": "4"
    },
    "3485": {
      "fn": "SoulboundCore.toString",
      "offset": [
        7102,
        7119
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "3486": {
      "fn": "SoulboundCore.toString",
      "offset": [
        7102,
        7119
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "3488": {
      "fn": "SoulboundCore.toString",
      "offset": [
        7102,
        7119
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "3489": {
      "fn": "SoulboundCore.toString",
      "offset": [
        7102,
        7119
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "3490": {
      "fn": "SoulboundCore.toString",
      "offset": [
        7102,
        7119
      ],
      "op": "DUP1",
      "path": "4"
    },
    "3491": {
      "fn": "SoulboundCore.toString",
      "offset": [
        7102,
        7119
      ],
      "op": "DUP3",
      "path": "4"
    },
    "3492": {
      "fn": "SoulboundCore.toString",
      "offset": [
        7102,
        7119
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "3493": {
      "fn": "SoulboundCore.toString",
      "offset": [
        7102,
        7119
      ],
      "op": "DUP1",
      "path": "4"
    },
    "3494": {
      "fn": "SoulboundCore.toString",
      "offset": [
        7102,
        7119
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x1F"
    },
    "3496": {
      "fn": "SoulboundCore.toString",
      "offset": [
        7102,
        7119
      ],
      "op": "ADD",
      "path": "4"
    },
    "3497": {
      "fn": "SoulboundCore.toString",
      "offset": [
        7102,
        7119
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x1F"
    },
    "3499": {
      "fn": "SoulboundCore.toString",
      "offset": [
        7102,
        7119
      ],
      "op": "NOT",
      "path": "4"
    },
    "3500": {
      "fn": "SoulboundCore.toString",
      "offset": [
        7102,
        7119
      ],
      "op": "AND",
      "path": "4"
    },
    "3501": {
      "fn": "SoulboundCore.toString",
      "offset": [
        7102,
        7119
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x20"
    },
    "3503": {
      "fn": "SoulboundCore.toString",
      "offset": [
        7102,
        7119
      ],
      "op": "ADD",
      "path": "4"
    },
    "3504": {
      "fn": "SoulboundCore.toString",
      "offset": [
        7102,
        7119
      ],
      "op": "DUP3",
      "path": "4"
    },
    "3505": {
      "fn": "SoulboundCore.toString",
      "offset": [
        7102,
        7119
      ],
      "op": "ADD",
      "path": "4"
    },
    "3506": {
      "fn": "SoulboundCore.toString",
      "offset": [
        7102,
        7119
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "3508": {
      "fn": "SoulboundCore.toString",
      "offset": [
        7102,
        7119
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "3509": {
      "fn": "SoulboundCore.toString",
      "offset": [
        7102,
        7119
      ],
      "op": "DUP1",
      "path": "4"
    },
    "3510": {
      "fn": "SoulboundCore.toString",
      "offset": [
        7102,
        7119
      ],
      "op": "ISZERO",
      "path": "4"
    },
    "3511": {
      "fn": "SoulboundCore.toString",
      "offset": [
        7102,
        7119
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0xDC7"
    },
    "3514": {
      "fn": "SoulboundCore.toString",
      "offset": [
        7102,
        7119
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "3515": {
      "fn": "SoulboundCore.toString",
      "offset": [
        7102,
        7119
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x20"
    },
    "3517": {
      "fn": "SoulboundCore.toString",
      "offset": [
        7102,
        7119
      ],
      "op": "DUP3",
      "path": "4"
    },
    "3518": {
      "fn": "SoulboundCore.toString",
      "offset": [
        7102,
        7119
      ],
      "op": "ADD",
      "path": "4"
    },
    "3519": {
      "fn": "SoulboundCore.toString",
      "offset": [
        7102,
        7119
      ],
      "op": "DUP2",
      "path": "4"
    },
    "3520": {
      "fn": "SoulboundCore.toString",
      "offset": [
        7102,
        7119
      ],
      "op": "DUP1",
      "path": "4"
    },
    "3521": {
      "fn": "SoulboundCore.toString",
      "offset": [
        7102,
        7119
      ],
      "op": "CALLDATASIZE",
      "path": "4"
    },
    "3522": {
      "fn": "SoulboundCore.toString",
      "offset": [
        7102,
        7119
      ],
      "op": "DUP4",
      "path": "4"
    },
    "3523": {
      "fn": "SoulboundCore.toString",
      "offset": [
        7102,
        7119
      ],
      "op": "CALLDATACOPY",
      "path": "4"
    },
    "3524": {
      "fn": "SoulboundCore.toString",
      "offset": [
        7102,
        7119
      ],
      "op": "ADD",
      "path": "4"
    },
    "3525": {
      "fn": "SoulboundCore.toString",
      "offset": [
        7102,
        7119
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "3526": {
      "op": "POP"
    },
    "3527": {
      "fn": "SoulboundCore.toString",
      "offset": [
        7102,
        7119
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "3528": {
      "fn": "SoulboundCore.toString",
      "offset": [
        7102,
        7119
      ],
      "op": "POP",
      "path": "4"
    },
    "3529": {
      "fn": "SoulboundCore.toString",
      "offset": [
        7080,
        7119
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "3530": {
      "fn": "SoulboundCore.toString",
      "offset": [
        7080,
        7119
      ],
      "op": "POP",
      "path": "4"
    },
    "3531": {
      "fn": "SoulboundCore.toString",
      "offset": [
        7129,
        7279
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "3532": {
      "fn": "SoulboundCore.toString",
      "offset": [
        7136,
        7146
      ],
      "op": "DUP5",
      "path": "4"
    },
    "3533": {
      "fn": "SoulboundCore.toString",
      "offset": [
        7136,
        7146
      ],
      "op": "ISZERO",
      "path": "4"
    },
    "3534": {
      "fn": "SoulboundCore.toString",
      "offset": [
        7129,
        7279
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0xE32"
    },
    "3537": {
      "fn": "SoulboundCore.toString",
      "offset": [
        7129,
        7279
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "3538": {
      "fn": "SoulboundCore.toString",
      "offset": [
        7162,
        7173
      ],
      "op": "PUSH2",
      "path": "4",
      "statement": 46,
      "value": "0xDDC"
    },
    "3541": {
      "fn": "SoulboundCore.toString",
      "offset": [
        7172,
        7173
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x1"
    },
    "3543": {
      "fn": "SoulboundCore.toString",
      "offset": [
        7162,
        7173
      ],
      "op": "DUP4",
      "path": "4"
    },
    "3544": {
      "fn": "SoulboundCore.toString",
      "offset": [
        7162,
        7173
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x183C"
    },
    "3547": {
      "fn": "SoulboundCore.toString",
      "jump": "i",
      "offset": [
        7162,
        7173
      ],
      "op": "JUMP",
      "path": "4"
    },
    "3548": {
      "fn": "SoulboundCore.toString",
      "offset": [
        7162,
        7173
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "3549": {
      "fn": "SoulboundCore.toString",
      "offset": [
        7162,
        7173
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "3550": {
      "op": "POP"
    },
    "3551": {
      "fn": "SoulboundCore.toString",
      "offset": [
        7230,
        7240
      ],
      "op": "PUSH2",
      "path": "4",
      "statement": 47,
      "value": "0xDE9"
    },
    "3554": {
      "fn": "SoulboundCore.toString",
      "offset": [
        7238,
        7240
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0xA"
    },
    "3556": {
      "fn": "SoulboundCore.toString",
      "offset": [
        7230,
        7235
      ],
      "op": "DUP7",
      "path": "4"
    },
    "3557": {
      "fn": "SoulboundCore.toString",
      "offset": [
        7230,
        7240
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x1853"
    },
    "3560": {
      "fn": "SoulboundCore.toString",
      "jump": "i",
      "offset": [
        7230,
        7240
      ],
      "op": "JUMP",
      "path": "4"
    },
    "3561": {
      "fn": "SoulboundCore.toString",
      "offset": [
        7230,
        7240
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "3562": {
      "fn": "SoulboundCore.toString",
      "offset": [
        7217,
        7241
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0xDF4"
    },
    "3565": {
      "fn": "SoulboundCore.toString",
      "offset": [
        7217,
        7241
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "3566": {
      "fn": "SoulboundCore.toString",
      "offset": [
        7217,
        7219
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x30"
    },
    "3568": {
      "fn": "SoulboundCore.toString",
      "offset": [
        7217,
        7241
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x1867"
    },
    "3571": {
      "fn": "SoulboundCore.toString",
      "jump": "i",
      "offset": [
        7217,
        7241
      ],
      "op": "JUMP",
      "path": "4"
    },
    "3572": {
      "fn": "SoulboundCore.toString",
      "offset": [
        7217,
        7241
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "3573": {
      "fn": "SoulboundCore.toString",
      "offset": [
        7204,
        7243
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0xF8"
    },
    "3575": {
      "fn": "SoulboundCore.toString",
      "offset": [
        7204,
        7243
      ],
      "op": "SHL",
      "path": "4"
    },
    "3576": {
      "fn": "SoulboundCore.toString",
      "offset": [
        7187,
        7193
      ],
      "op": "DUP2",
      "path": "4"
    },
    "3577": {
      "fn": "SoulboundCore.toString",
      "offset": [
        7194,
        7200
      ],
      "op": "DUP4",
      "path": "4"
    },
    "3578": {
      "fn": "SoulboundCore.toString",
      "offset": [
        7187,
        7201
      ],
      "op": "DUP2",
      "path": "4"
    },
    "3579": {
      "fn": "SoulboundCore.toString",
      "offset": [
        7187,
        7201
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "3580": {
      "fn": "SoulboundCore.toString",
      "offset": [
        7187,
        7201
      ],
      "op": "DUP2",
      "path": "4"
    },
    "3581": {
      "fn": "SoulboundCore.toString",
      "offset": [
        7187,
        7201
      ],
      "op": "LT",
      "path": "4"
    },
    "3582": {
      "fn": "SoulboundCore.toString",
      "offset": [
        7187,
        7201
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0xE09"
    },
    "3585": {
      "fn": "SoulboundCore.toString",
      "offset": [
        7187,
        7201
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "3586": {
      "fn": "SoulboundCore.toString",
      "offset": [
        7187,
        7201
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0xE09"
    },
    "3589": {
      "fn": "SoulboundCore.toString",
      "offset": [
        7187,
        7201
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x187F"
    },
    "3592": {
      "fn": "SoulboundCore.toString",
      "jump": "i",
      "offset": [
        7187,
        7201
      ],
      "op": "JUMP",
      "path": "4"
    },
    "3593": {
      "fn": "SoulboundCore.toString",
      "offset": [
        7187,
        7201
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "3594": {
      "fn": "SoulboundCore.toString",
      "offset": [
        7187,
        7201
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x20"
    },
    "3596": {
      "fn": "SoulboundCore.toString",
      "offset": [
        7187,
        7201
      ],
      "op": "ADD",
      "path": "4"
    },
    "3597": {
      "fn": "SoulboundCore.toString",
      "offset": [
        7187,
        7201
      ],
      "op": "ADD",
      "path": "4"
    },
    "3598": {
      "fn": "SoulboundCore.toString",
      "offset": [
        7187,
        7243
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "3599": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3601": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3603": {
      "op": "PUSH1",
      "value": "0xF8"
    },
    "3605": {
      "op": "SHL"
    },
    "3606": {
      "op": "SUB"
    },
    "3607": {
      "fn": "SoulboundCore.toString",
      "offset": [
        7187,
        7243
      ],
      "op": "NOT",
      "path": "4"
    },
    "3608": {
      "fn": "SoulboundCore.toString",
      "offset": [
        7187,
        7243
      ],
      "op": "AND",
      "path": "4"
    },
    "3609": {
      "fn": "SoulboundCore.toString",
      "offset": [
        7187,
        7243
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "3610": {
      "fn": "SoulboundCore.toString",
      "offset": [
        7187,
        7243
      ],
      "op": "DUP2",
      "path": "4"
    },
    "3611": {
      "fn": "SoulboundCore.toString",
      "offset": [
        7187,
        7243
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "3613": {
      "fn": "SoulboundCore.toString",
      "offset": [
        7187,
        7243
      ],
      "op": "BYTE",
      "path": "4"
    },
    "3614": {
      "fn": "SoulboundCore.toString",
      "offset": [
        7187,
        7243
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "3615": {
      "fn": "SoulboundCore.toString",
      "offset": [
        7187,
        7243
      ],
      "op": "MSTORE8",
      "path": "4"
    },
    "3616": {
      "op": "POP"
    },
    "3617": {
      "fn": "SoulboundCore.toString",
      "offset": [
        7257,
        7268
      ],
      "op": "PUSH2",
      "path": "4",
      "statement": 48,
      "value": "0xE2B"
    },
    "3620": {
      "fn": "SoulboundCore.toString",
      "offset": [
        7266,
        7268
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0xA"
    },
    "3622": {
      "fn": "SoulboundCore.toString",
      "offset": [
        7257,
        7268
      ],
      "op": "DUP7",
      "path": "4"
    },
    "3623": {
      "fn": "SoulboundCore.toString",
      "offset": [
        7257,
        7268
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x1828"
    },
    "3626": {
      "fn": "SoulboundCore.toString",
      "jump": "i",
      "offset": [
        7257,
        7268
      ],
      "op": "JUMP",
      "path": "4"
    },
    "3627": {
      "fn": "SoulboundCore.toString",
      "offset": [
        7257,
        7268
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "3628": {
      "fn": "SoulboundCore.toString",
      "offset": [
        7257,
        7268
      ],
      "op": "SWAP5",
      "path": "4"
    },
    "3629": {
      "fn": "SoulboundCore.toString",
      "offset": [
        7257,
        7268
      ],
      "op": "POP",
      "path": "4"
    },
    "3630": {
      "fn": "SoulboundCore.toString",
      "offset": [
        7129,
        7279
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0xDCB"
    },
    "3633": {
      "fn": "SoulboundCore.toString",
      "offset": [
        7129,
        7279
      ],
      "op": "JUMP",
      "path": "4"
    },
    "3634": {
      "fn": "SoulboundCore.toString",
      "offset": [
        7129,
        7279
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "3635": {
      "fn": "SoulboundCore.toString",
      "offset": [
        7302,
        7308
      ],
      "op": "SWAP5",
      "path": "4",
      "statement": 49
    },
    "3636": {
      "fn": "SoulboundCore.toString",
      "offset": [
        6613,
        7316
      ],
      "op": "SWAP4",
      "path": "4"
    },
    "3637": {
      "op": "POP"
    },
    "3638": {
      "op": "POP"
    },
    "3639": {
      "op": "POP"
    },
    "3640": {
      "op": "POP"
    },
    "3641": {
      "fn": "SoulboundCore.toString",
      "jump": "o",
      "offset": [
        6613,
        7316
      ],
      "op": "JUMP",
      "path": "4"
    },
    "3642": {
      "fn": "ERC4973._burn",
      "offset": [
        5943,
        6158
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "3643": {
      "fn": "ERC4973._burn",
      "offset": [
        5998,
        6011
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x0"
    },
    "3645": {
      "fn": "ERC4973._burn",
      "offset": [
        6014,
        6030
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0xE45"
    },
    "3648": {
      "fn": "ERC4973._burn",
      "offset": [
        6022,
        6029
      ],
      "op": "DUP3",
      "path": "7"
    },
    "3649": {
      "fn": "ERC4973._burn",
      "offset": [
        6014,
        6021
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x603"
    },
    "3652": {
      "fn": "ERC4973._burn",
      "jump": "i",
      "offset": [
        6014,
        6030
      ],
      "op": "JUMP",
      "path": "7"
    },
    "3653": {
      "fn": "ERC4973._burn",
      "offset": [
        6014,
        6030
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "3654": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3656": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3658": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3660": {
      "op": "SHL"
    },
    "3661": {
      "op": "SUB"
    },
    "3662": {
      "fn": "ERC4973._burn",
      "offset": [
        6037,
        6053
      ],
      "op": "DUP2",
      "path": "7",
      "statement": 50
    },
    "3663": {
      "fn": "ERC4973._burn",
      "offset": [
        6037,
        6053
      ],
      "op": "AND",
      "path": "7"
    },
    "3664": {
      "fn": "ERC4973._burn",
      "offset": [
        6037,
        6053
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x0"
    },
    "3666": {
      "fn": "ERC4973._burn",
      "offset": [
        6037,
        6053
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "3667": {
      "fn": "ERC4973._burn",
      "offset": [
        6037,
        6053
      ],
      "op": "DUP2",
      "path": "7"
    },
    "3668": {
      "fn": "ERC4973._burn",
      "offset": [
        6037,
        6053
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "3669": {
      "fn": "ERC4973._burn",
      "offset": [
        6037,
        6046
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x4"
    },
    "3671": {
      "fn": "ERC4973._burn",
      "offset": [
        6037,
        6053
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x20"
    },
    "3673": {
      "fn": "ERC4973._burn",
      "offset": [
        6037,
        6053
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "3674": {
      "fn": "ERC4973._burn",
      "offset": [
        6037,
        6053
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x40"
    },
    "3676": {
      "fn": "ERC4973._burn",
      "offset": [
        6037,
        6053
      ],
      "op": "DUP2",
      "path": "7"
    },
    "3677": {
      "fn": "ERC4973._burn",
      "offset": [
        6037,
        6053
      ],
      "op": "KECCAK256",
      "path": "7"
    },
    "3678": {
      "fn": "ERC4973._burn",
      "offset": [
        6037,
        6058
      ],
      "op": "DUP1",
      "path": "7"
    },
    "3679": {
      "fn": "ERC4973._burn",
      "offset": [
        6037,
        6058
      ],
      "op": "SLOAD",
      "path": "7"
    },
    "3680": {
      "fn": "ERC4973._burn",
      "offset": [
        5998,
        6030
      ],
      "op": "SWAP3",
      "path": "7"
    },
    "3681": {
      "fn": "ERC4973._burn",
      "offset": [
        5998,
        6030
      ],
      "op": "SWAP4",
      "path": "7"
    },
    "3682": {
      "op": "POP"
    },
    "3683": {
      "fn": "ERC4973._burn",
      "offset": [
        6057,
        6058
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x1"
    },
    "3685": {
      "fn": "ERC4973._burn",
      "offset": [
        6057,
        6058
      ],
      "op": "SWAP3",
      "path": "7"
    },
    "3686": {
      "fn": "ERC4973._burn",
      "offset": [
        6037,
        6053
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "3687": {
      "fn": "ERC4973._burn",
      "offset": [
        6037,
        6053
      ],
      "op": "SWAP2",
      "path": "7"
    },
    "3688": {
      "fn": "ERC4973._burn",
      "offset": [
        6037,
        6053
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "3689": {
      "fn": "ERC4973._burn",
      "offset": [
        6037,
        6058
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0xE73"
    },
    "3692": {
      "fn": "ERC4973._burn",
      "offset": [
        6037,
        6058
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "3693": {
      "fn": "ERC4973._burn",
      "offset": [
        6057,
        6058
      ],
      "op": "DUP5",
      "path": "7"
    },
    "3694": {
      "fn": "ERC4973._burn",
      "offset": [
        6057,
        6058
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "3695": {
      "fn": "ERC4973._burn",
      "offset": [
        6037,
        6058
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x183C"
    },
    "3698": {
      "fn": "ERC4973._burn",
      "jump": "i",
      "offset": [
        6037,
        6058
      ],
      "op": "JUMP",
      "path": "7"
    },
    "3699": {
      "fn": "ERC4973._burn",
      "offset": [
        6037,
        6058
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "3700": {
      "fn": "ERC4973._burn",
      "offset": [
        6037,
        6058
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "3701": {
      "fn": "ERC4973._burn",
      "offset": [
        6037,
        6058
      ],
      "op": "SWAP2",
      "path": "7"
    },
    "3702": {
      "fn": "ERC4973._burn",
      "offset": [
        6037,
        6058
      ],
      "op": "SSTORE",
      "path": "7"
    },
    "3703": {
      "op": "POP"
    },
    "3704": {
      "op": "POP"
    },
    "3705": {
      "fn": "ERC4973._burn",
      "offset": [
        6071,
        6087
      ],
      "op": "PUSH1",
      "path": "7",
      "statement": 51,
      "value": "0x0"
    },
    "3707": {
      "fn": "ERC4973._burn",
      "offset": [
        6071,
        6087
      ],
      "op": "DUP3",
      "path": "7"
    },
    "3708": {
      "fn": "ERC4973._burn",
      "offset": [
        6071,
        6087
      ],
      "op": "DUP2",
      "path": "7"
    },
    "3709": {
      "fn": "ERC4973._burn",
      "offset": [
        6071,
        6087
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "3710": {
      "fn": "ERC4973._burn",
      "offset": [
        6071,
        6078
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x2"
    },
    "3712": {
      "fn": "ERC4973._burn",
      "offset": [
        6071,
        6087
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x20"
    },
    "3714": {
      "fn": "ERC4973._burn",
      "offset": [
        6071,
        6087
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "3715": {
      "fn": "ERC4973._burn",
      "offset": [
        6071,
        6087
      ],
      "op": "DUP2",
      "path": "7"
    },
    "3716": {
      "fn": "ERC4973._burn",
      "offset": [
        6071,
        6087
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "3717": {
      "fn": "ERC4973._burn",
      "offset": [
        6071,
        6087
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x40"
    },
    "3719": {
      "fn": "ERC4973._burn",
      "offset": [
        6071,
        6087
      ],
      "op": "DUP1",
      "path": "7"
    },
    "3720": {
      "fn": "ERC4973._burn",
      "offset": [
        6071,
        6087
      ],
      "op": "DUP4",
      "path": "7"
    },
    "3721": {
      "fn": "ERC4973._burn",
      "offset": [
        6071,
        6087
      ],
      "op": "KECCAK256",
      "path": "7"
    },
    "3722": {
      "fn": "ERC4973._burn",
      "offset": [
        6064,
        6087
      ],
      "op": "DUP1",
      "path": "7"
    },
    "3723": {
      "fn": "ERC4973._burn",
      "offset": [
        6064,
        6087
      ],
      "op": "SLOAD",
      "path": "7"
    },
    "3724": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3726": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3728": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3730": {
      "op": "SHL"
    },
    "3731": {
      "op": "SUB"
    },
    "3732": {
      "op": "NOT"
    },
    "3733": {
      "fn": "ERC4973._burn",
      "offset": [
        6064,
        6087
      ],
      "op": "AND",
      "path": "7"
    },
    "3734": {
      "fn": "ERC4973._burn",
      "offset": [
        6064,
        6087
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "3735": {
      "fn": "ERC4973._burn",
      "offset": [
        6064,
        6087
      ],
      "op": "SSTORE",
      "path": "7"
    },
    "3736": {
      "fn": "ERC4973._burn",
      "offset": [
        6100,
        6110
      ],
      "op": "PUSH1",
      "path": "7",
      "statement": 52,
      "value": "0x3"
    },
    "3738": {
      "fn": "ERC4973._burn",
      "offset": [
        6100,
        6119
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "3739": {
      "fn": "ERC4973._burn",
      "offset": [
        6100,
        6119
      ],
      "op": "SWAP2",
      "path": "7"
    },
    "3740": {
      "fn": "ERC4973._burn",
      "offset": [
        6100,
        6119
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "3741": {
      "fn": "ERC4973._burn",
      "offset": [
        6100,
        6119
      ],
      "op": "DUP2",
      "path": "7"
    },
    "3742": {
      "fn": "ERC4973._burn",
      "offset": [
        6100,
        6119
      ],
      "op": "KECCAK256",
      "path": "7"
    },
    "3743": {
      "fn": "ERC4973._burn",
      "offset": [
        6093,
        6119
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0xEA7"
    },
    "3746": {
      "fn": "ERC4973._burn",
      "offset": [
        6093,
        6119
      ],
      "op": "SWAP2",
      "path": "7"
    },
    "3747": {
      "fn": "ERC4973._burn",
      "offset": [
        6093,
        6119
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x13D4"
    },
    "3750": {
      "fn": "ERC4973._burn",
      "jump": "i",
      "offset": [
        6093,
        6119
      ],
      "op": "JUMP",
      "path": "7"
    },
    "3751": {
      "fn": "ERC4973._burn",
      "offset": [
        6093,
        6119
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "3752": {
      "fn": "ERC4973._burn",
      "offset": [
        6131,
        6153
      ],
      "op": "PUSH1",
      "path": "7",
      "statement": 53,
      "value": "0x40"
    },
    "3754": {
      "fn": "ERC4973._burn",
      "offset": [
        6131,
        6153
      ],
      "op": "MLOAD",
      "path": "7"
    },
    "3755": {
      "fn": "ERC4973._burn",
      "offset": [
        6145,
        6152
      ],
      "op": "DUP3",
      "path": "7"
    },
    "3756": {
      "fn": "ERC4973._burn",
      "offset": [
        6145,
        6152
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "3757": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3759": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3761": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3763": {
      "op": "SHL"
    },
    "3764": {
      "op": "SUB"
    },
    "3765": {
      "fn": "ERC4973._burn",
      "offset": [
        6131,
        6153
      ],
      "op": "DUP4",
      "path": "7"
    },
    "3766": {
      "fn": "ERC4973._burn",
      "offset": [
        6131,
        6153
      ],
      "op": "AND",
      "path": "7"
    },
    "3767": {
      "fn": "ERC4973._burn",
      "offset": [
        6131,
        6153
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "3768": {
      "fn": "ERC4973._burn",
      "offset": [
        6131,
        6153
      ],
      "op": "PUSH32",
      "path": "7",
      "value": "0xEC9AB91322523C899EDE7830EC9BFC992B5981CDCC27B91162FB23DE5791117B"
    },
    "3801": {
      "fn": "ERC4973._burn",
      "offset": [
        6131,
        6153
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "3802": {
      "fn": "ERC4973._burn",
      "offset": [
        6131,
        6153
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x0"
    },
    "3804": {
      "fn": "ERC4973._burn",
      "offset": [
        6131,
        6153
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "3805": {
      "fn": "ERC4973._burn",
      "offset": [
        6131,
        6153
      ],
      "op": "LOG3",
      "path": "7"
    },
    "3806": {
      "fn": "ERC4973._burn",
      "offset": [
        5992,
        6158
      ],
      "op": "POP",
      "path": "7"
    },
    "3807": {
      "fn": "ERC4973._burn",
      "offset": [
        5943,
        6158
      ],
      "op": "POP",
      "path": "7"
    },
    "3808": {
      "fn": "ERC4973._burn",
      "jump": "o",
      "offset": [
        5943,
        6158
      ],
      "op": "JUMP",
      "path": "7"
    },
    "3809": {
      "fn": "Ownable._checkOwner",
      "offset": [
        1662,
        1792
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "3810": {
      "fn": "Ownable.owner",
      "offset": [
        1578,
        1584
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x5"
    },
    "3812": {
      "fn": "Ownable.owner",
      "offset": [
        1578,
        1584
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "3813": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3815": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3817": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3819": {
      "op": "SHL"
    },
    "3820": {
      "op": "SUB"
    },
    "3821": {
      "fn": "Ownable.owner",
      "offset": [
        1578,
        1584
      ],
      "op": "AND",
      "path": "2"
    },
    "3822": {
      "fn": "Ownable._msgSender",
      "offset": [
        3057,
        3067
      ],
      "op": "CALLER",
      "path": "2",
      "statement": 54
    },
    "3823": {
      "branch": 95,
      "fn": "Ownable._checkOwner",
      "offset": [
        1725,
        1748
      ],
      "op": "EQ",
      "path": "2",
      "statement": 55
    },
    "3824": {
      "fn": "Ownable._checkOwner",
      "offset": [
        1717,
        1785
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x703"
    },
    "3827": {
      "branch": 95,
      "fn": "Ownable._checkOwner",
      "offset": [
        1717,
        1785
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "3828": {
      "fn": "Ownable._checkOwner",
      "offset": [
        1717,
        1785
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "3830": {
      "fn": "Ownable._checkOwner",
      "offset": [
        1717,
        1785
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "3831": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "3835": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "3837": {
      "op": "SHL"
    },
    "3838": {
      "fn": "Ownable._checkOwner",
      "offset": [
        1717,
        1785
      ],
      "op": "DUP2",
      "path": "2"
    },
    "3839": {
      "fn": "Ownable._checkOwner",
      "offset": [
        1717,
        1785
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "3840": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3842": {
      "fn": "Ownable._checkOwner",
      "offset": [
        1717,
        1785
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "3844": {
      "fn": "Ownable._checkOwner",
      "offset": [
        1717,
        1785
      ],
      "op": "DUP3",
      "path": "2"
    },
    "3845": {
      "fn": "Ownable._checkOwner",
      "offset": [
        1717,
        1785
      ],
      "op": "ADD",
      "path": "2"
    },
    "3846": {
      "op": "DUP2"
    },
    "3847": {
      "op": "SWAP1"
    },
    "3848": {
      "op": "MSTORE"
    },
    "3849": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "3851": {
      "op": "DUP3"
    },
    "3852": {
      "op": "ADD"
    },
    "3853": {
      "op": "MSTORE"
    },
    "3854": {
      "op": "PUSH32",
      "value": "0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572"
    },
    "3887": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "3889": {
      "op": "DUP3"
    },
    "3890": {
      "op": "ADD"
    },
    "3891": {
      "op": "MSTORE"
    },
    "3892": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "3894": {
      "op": "ADD"
    },
    "3895": {
      "fn": "Ownable._checkOwner",
      "offset": [
        1717,
        1785
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x422"
    },
    "3898": {
      "op": "JUMP"
    },
    "3899": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2757,
        2944
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "3900": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2849,
        2855
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x5"
    },
    "3902": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2849,
        2855
      ],
      "op": "DUP1",
      "path": "2"
    },
    "3903": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2849,
        2855
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "3904": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3906": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3908": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3910": {
      "op": "SHL"
    },
    "3911": {
      "op": "SUB"
    },
    "3912": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2865,
        2882
      ],
      "op": "DUP4",
      "path": "2",
      "statement": 56
    },
    "3913": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2865,
        2882
      ],
      "op": "DUP2",
      "path": "2"
    },
    "3914": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2865,
        2882
      ],
      "op": "AND",
      "path": "2"
    },
    "3915": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3917": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3919": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3921": {
      "op": "SHL"
    },
    "3922": {
      "op": "SUB"
    },
    "3923": {
      "op": "NOT"
    },
    "3924": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2865,
        2882
      ],
      "op": "DUP4",
      "path": "2"
    },
    "3925": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2865,
        2882
      ],
      "op": "AND",
      "path": "2"
    },
    "3926": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2865,
        2882
      ],
      "op": "DUP2",
      "path": "2"
    },
    "3927": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2865,
        2882
      ],
      "op": "OR",
      "path": "2"
    },
    "3928": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2865,
        2882
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "3929": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2865,
        2882
      ],
      "op": "SWAP4",
      "path": "2"
    },
    "3930": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2865,
        2882
      ],
      "op": "SSTORE",
      "path": "2"
    },
    "3931": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2897,
        2937
      ],
      "op": "PUSH1",
      "path": "2",
      "statement": 57,
      "value": "0x40"
    },
    "3933": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2897,
        2937
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "3934": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2849,
        2855
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "3935": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2849,
        2855
      ],
      "op": "AND",
      "path": "2"
    },
    "3936": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2849,
        2855
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "3937": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2865,
        2882
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "3938": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2849,
        2855
      ],
      "op": "DUP3",
      "path": "2"
    },
    "3939": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2849,
        2855
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "3940": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2897,
        2937
      ],
      "op": "PUSH32",
      "path": "2",
      "value": "0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
    },
    "3973": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2897,
        2937
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "3974": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2830,
        2846
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "3976": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2830,
        2846
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "3977": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2897,
        2937
      ],
      "op": "LOG3",
      "path": "2"
    },
    "3978": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2820,
        2944
      ],
      "op": "POP",
      "path": "2"
    },
    "3979": {
      "fn": "Ownable._transferOwnership",
      "offset": [
        2757,
        2944
      ],
      "op": "POP",
      "path": "2"
    },
    "3980": {
      "fn": "Ownable._transferOwnership",
      "jump": "o",
      "offset": [
        2757,
        2944
      ],
      "op": "JUMP",
      "path": "2"
    },
    "3981": {
      "fn": "Soulbound._setBaseURI",
      "offset": [
        6948,
        7182
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "3982": {
      "fn": "Soulbound._setBaseURI",
      "offset": [
        7077,
        7085
      ],
      "op": "DUP1",
      "path": "3",
      "statement": 58
    },
    "3983": {
      "fn": "Soulbound._setBaseURI",
      "offset": [
        7071,
        7093
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "3984": {
      "fn": "Soulbound._setBaseURI",
      "offset": [
        7097,
        7098
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "3986": {
      "branch": 102,
      "fn": "Soulbound._setBaseURI",
      "offset": [
        7071,
        7098
      ],
      "op": "SUB",
      "path": "3"
    },
    "3987": {
      "fn": "Soulbound._setBaseURI",
      "offset": [
        7063,
        7117
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xFCF"
    },
    "3990": {
      "branch": 102,
      "fn": "Soulbound._setBaseURI",
      "offset": [
        7063,
        7117
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "3991": {
      "fn": "Soulbound._setBaseURI",
      "offset": [
        7063,
        7117
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "3993": {
      "fn": "Soulbound._setBaseURI",
      "offset": [
        7063,
        7117
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "3994": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "3998": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "4000": {
      "op": "SHL"
    },
    "4001": {
      "fn": "Soulbound._setBaseURI",
      "offset": [
        7063,
        7117
      ],
      "op": "DUP2",
      "path": "3"
    },
    "4002": {
      "fn": "Soulbound._setBaseURI",
      "offset": [
        7063,
        7117
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "4003": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4005": {
      "fn": "Soulbound._setBaseURI",
      "offset": [
        7063,
        7117
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x4"
    },
    "4007": {
      "fn": "Soulbound._setBaseURI",
      "offset": [
        7063,
        7117
      ],
      "op": "DUP3",
      "path": "3"
    },
    "4008": {
      "fn": "Soulbound._setBaseURI",
      "offset": [
        7063,
        7117
      ],
      "op": "ADD",
      "path": "3"
    },
    "4009": {
      "op": "MSTORE"
    },
    "4010": {
      "op": "PUSH1",
      "value": "0xE"
    },
    "4012": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "4014": {
      "op": "DUP3"
    },
    "4015": {
      "op": "ADD"
    },
    "4016": {
      "op": "MSTORE"
    },
    "4017": {
      "op": "PUSH14",
      "value": "0x92DCECC2D8D2C840D8CADCCEE8D"
    },
    "4032": {
      "op": "PUSH1",
      "value": "0x93"
    },
    "4034": {
      "op": "SHL"
    },
    "4035": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "4037": {
      "op": "DUP3"
    },
    "4038": {
      "op": "ADD"
    },
    "4039": {
      "op": "MSTORE"
    },
    "4040": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "4042": {
      "op": "ADD"
    },
    "4043": {
      "fn": "Soulbound._setBaseURI",
      "offset": [
        7063,
        7117
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x422"
    },
    "4046": {
      "op": "JUMP"
    },
    "4047": {
      "fn": "Soulbound._setBaseURI",
      "offset": [
        7063,
        7117
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "4048": {
      "fn": "Soulbound._setBaseURI",
      "offset": [
        7157,
        7164
      ],
      "op": "PUSH1",
      "path": "3",
      "statement": 59,
      "value": "0x6"
    },
    "4050": {
      "fn": "Soulbound._setBaseURI",
      "offset": [
        7157,
        7175
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xFDB"
    },
    "4053": {
      "fn": "Soulbound._setBaseURI",
      "offset": [
        7167,
        7175
      ],
      "op": "DUP3",
      "path": "3"
    },
    "4054": {
      "fn": "Soulbound._setBaseURI",
      "offset": [
        7157,
        7164
      ],
      "op": "DUP3",
      "path": "3"
    },
    "4055": {
      "fn": "Soulbound._setBaseURI",
      "offset": [
        7157,
        7175
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x18E3"
    },
    "4058": {
      "fn": "Soulbound._setBaseURI",
      "jump": "i",
      "offset": [
        7157,
        7175
      ],
      "op": "JUMP",
      "path": "3"
    },
    "4059": {
      "fn": "Soulbound._setBaseURI",
      "offset": [
        7157,
        7175
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "4060": {
      "fn": "Soulbound._setBaseURI",
      "offset": [
        7157,
        7175
      ],
      "op": "POP",
      "path": "3"
    },
    "4061": {
      "fn": "Soulbound._setBaseURI",
      "offset": [
        6948,
        7182
      ],
      "op": "POP",
      "path": "3"
    },
    "4062": {
      "fn": "Soulbound._setBaseURI",
      "jump": "o",
      "offset": [
        6948,
        7182
      ],
      "op": "JUMP",
      "path": "3"
    },
    "4063": {
      "fn": "Soulbound.issue",
      "offset": [
        2151,
        2509
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "4064": {
      "fn": "Soulbound.issue",
      "offset": [
        2270,
        2274
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "4066": {
      "fn": "Soulbound.issue",
      "offset": [
        2360,
        2451
      ],
      "op": "PUSH2",
      "path": "3",
      "statement": 60,
      "value": "0xFEC"
    },
    "4069": {
      "fn": "Soulbound.issue",
      "offset": [
        2392,
        2395
      ],
      "op": "DUP5",
      "path": "3"
    },
    "4070": {
      "fn": "Soulbound.issue",
      "offset": [
        2410,
        2418
      ],
      "op": "DUP5",
      "path": "3"
    },
    "4071": {
      "fn": "Soulbound.issue",
      "offset": [
        2433,
        2441
      ],
      "op": "DUP5",
      "path": "3"
    },
    "4072": {
      "fn": "Soulbound.issue",
      "offset": [
        2360,
        2378
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x120F"
    },
    "4075": {
      "fn": "Soulbound.issue",
      "jump": "i",
      "offset": [
        2360,
        2451
      ],
      "op": "JUMP",
      "path": "3"
    },
    "4076": {
      "fn": "Soulbound.issue",
      "offset": [
        2360,
        2451
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "4077": {
      "op": "POP"
    },
    "4078": {
      "fn": "Soulbound.issue",
      "offset": [
        2498,
        2502
      ],
      "op": "PUSH1",
      "path": "3",
      "statement": 61,
      "value": "0x1"
    },
    "4080": {
      "fn": "Soulbound.issue",
      "offset": [
        2151,
        2509
      ],
      "op": "SWAP4",
      "path": "3"
    },
    "4081": {
      "fn": "Soulbound.issue",
      "offset": [
        2151,
        2509
      ],
      "op": "SWAP3",
      "path": "3"
    },
    "4082": {
      "fn": "Soulbound.issue",
      "offset": [
        2151,
        2509
      ],
      "op": "POP",
      "path": "3"
    },
    "4083": {
      "fn": "Soulbound.issue",
      "offset": [
        2151,
        2509
      ],
      "op": "POP",
      "path": "3"
    },
    "4084": {
      "fn": "Soulbound.issue",
      "offset": [
        2151,
        2509
      ],
      "op": "POP",
      "path": "3"
    },
    "4085": {
      "fn": "Soulbound.issue",
      "jump": "o",
      "offset": [
        2151,
        2509
      ],
      "op": "JUMP",
      "path": "3"
    },
    "4086": {
      "fn": "Allowlist._verifySignature",
      "offset": [
        3437,
        4480
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "4087": {
      "fn": "Allowlist._verifySignature",
      "offset": [
        3534,
        3538
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "4089": {
      "offset": [
        1401,
        1414
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1000"
    },
    "4092": {
      "offset": [
        1401,
        1412
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xEE1"
    },
    "4095": {
      "jump": "i",
      "offset": [
        1401,
        1414
      ],
      "op": "JUMP",
      "path": "2"
    },
    "4096": {
      "fn": "Allowlist._verifySignature",
      "offset": [
        1401,
        1414
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "4097": {
      "fn": "Ownable.owner",
      "offset": [
        1578,
        1584
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x5"
    },
    "4099": {
      "fn": "Ownable.owner",
      "offset": [
        1578,
        1584
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "4100": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4102": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4104": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4106": {
      "op": "SHL"
    },
    "4107": {
      "op": "SUB"
    },
    "4108": {
      "fn": "Ownable.owner",
      "offset": [
        1578,
        1584
      ],
      "op": "AND",
      "path": "2"
    },
    "4109": {
      "fn": "Ownable._msgSender",
      "offset": [
        3057,
        3067
      ],
      "op": "CALLER",
      "path": "2"
    },
    "4110": {
      "branch": 88,
      "fn": "Allowlist._verifySignature",
      "offset": [
        3699,
        3722
      ],
      "op": "EQ",
      "path": "0",
      "statement": 62
    },
    "4111": {
      "fn": "Allowlist._verifySignature",
      "offset": [
        3678,
        3792
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x106E"
    },
    "4114": {
      "branch": 88,
      "fn": "Allowlist._verifySignature",
      "offset": [
        3678,
        3792
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "4115": {
      "fn": "Allowlist._verifySignature",
      "offset": [
        3678,
        3792
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "4117": {
      "fn": "Allowlist._verifySignature",
      "offset": [
        3678,
        3792
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "4118": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "4122": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "4124": {
      "op": "SHL"
    },
    "4125": {
      "fn": "Allowlist._verifySignature",
      "offset": [
        3678,
        3792
      ],
      "op": "DUP2",
      "path": "0"
    },
    "4126": {
      "fn": "Allowlist._verifySignature",
      "offset": [
        3678,
        3792
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "4127": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4129": {
      "fn": "Allowlist._verifySignature",
      "offset": [
        3678,
        3792
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "4131": {
      "fn": "Allowlist._verifySignature",
      "offset": [
        3678,
        3792
      ],
      "op": "DUP3",
      "path": "0"
    },
    "4132": {
      "fn": "Allowlist._verifySignature",
      "offset": [
        3678,
        3792
      ],
      "op": "ADD",
      "path": "0"
    },
    "4133": {
      "op": "MSTORE"
    },
    "4134": {
      "op": "PUSH1",
      "value": "0x2B"
    },
    "4136": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "4138": {
      "op": "DUP3"
    },
    "4139": {
      "op": "ADD"
    },
    "4140": {
      "op": "MSTORE"
    },
    "4141": {
      "op": "PUSH32",
      "value": "0x4552433732313A3A2043616C6C20746F20636F6E7472616374206D6164652062"
    },
    "4174": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "4176": {
      "op": "DUP3"
    },
    "4177": {
      "op": "ADD"
    },
    "4178": {
      "op": "MSTORE"
    },
    "4179": {
      "op": "PUSH11",
      "value": "0x3C903737B716B7BBB732B9"
    },
    "4191": {
      "op": "PUSH1",
      "value": "0xA9"
    },
    "4193": {
      "op": "SHL"
    },
    "4194": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "4196": {
      "op": "DUP3"
    },
    "4197": {
      "op": "ADD"
    },
    "4198": {
      "op": "MSTORE"
    },
    "4199": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "4201": {
      "op": "ADD"
    },
    "4202": {
      "fn": "Allowlist._verifySignature",
      "offset": [
        3678,
        3792
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x422"
    },
    "4205": {
      "op": "JUMP"
    },
    "4206": {
      "fn": "Allowlist._verifySignature",
      "offset": [
        3678,
        3792
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "4207": {
      "fn": "Allowlist._verifySignature",
      "offset": [
        3870,
        3873
      ],
      "op": "DUP2",
      "path": "0",
      "statement": 63
    },
    "4208": {
      "fn": "Allowlist._verifySignature",
      "offset": [
        3870,
        3880
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "4209": {
      "fn": "Allowlist._verifySignature",
      "offset": [
        3884,
        3886
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x41"
    },
    "4211": {
      "branch": 89,
      "fn": "Allowlist._verifySignature",
      "offset": [
        3870,
        3886
      ],
      "op": "EQ",
      "path": "0"
    },
    "4212": {
      "fn": "Allowlist._verifySignature",
      "offset": [
        3862,
        3921
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x10BF"
    },
    "4215": {
      "branch": 89,
      "fn": "Allowlist._verifySignature",
      "offset": [
        3862,
        3921
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "4216": {
      "fn": "Allowlist._verifySignature",
      "offset": [
        3862,
        3921
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "4218": {
      "fn": "Allowlist._verifySignature",
      "offset": [
        3862,
        3921
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "4219": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "4223": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "4225": {
      "op": "SHL"
    },
    "4226": {
      "fn": "Allowlist._verifySignature",
      "offset": [
        3862,
        3921
      ],
      "op": "DUP2",
      "path": "0"
    },
    "4227": {
      "fn": "Allowlist._verifySignature",
      "offset": [
        3862,
        3921
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "4228": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4230": {
      "fn": "Allowlist._verifySignature",
      "offset": [
        3862,
        3921
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "4232": {
      "fn": "Allowlist._verifySignature",
      "offset": [
        3862,
        3921
      ],
      "op": "DUP3",
      "path": "0"
    },
    "4233": {
      "fn": "Allowlist._verifySignature",
      "offset": [
        3862,
        3921
      ],
      "op": "ADD",
      "path": "0"
    },
    "4234": {
      "op": "MSTORE"
    },
    "4235": {
      "op": "PUSH1",
      "value": "0x1E"
    },
    "4237": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "4239": {
      "op": "DUP3"
    },
    "4240": {
      "op": "ADD"
    },
    "4241": {
      "op": "MSTORE"
    },
    "4242": {
      "op": "PUSH32",
      "value": "0x4572723A3A20496E76616C6964207369676E6174757265206C656E6774680000"
    },
    "4275": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "4277": {
      "op": "DUP3"
    },
    "4278": {
      "op": "ADD"
    },
    "4279": {
      "op": "MSTORE"
    },
    "4280": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "4282": {
      "op": "ADD"
    },
    "4283": {
      "fn": "Allowlist._verifySignature",
      "offset": [
        3862,
        3921
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x422"
    },
    "4286": {
      "op": "JUMP"
    },
    "4287": {
      "fn": "Allowlist._verifySignature",
      "offset": [
        3862,
        3921
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "4288": {
      "fn": "Allowlist.splitSignature",
      "offset": [
        5808,
        5810
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "4290": {
      "fn": "Allowlist.splitSignature",
      "offset": [
        5799,
        5811
      ],
      "op": "DUP3",
      "path": "0"
    },
    "4291": {
      "fn": "Allowlist.splitSignature",
      "offset": [
        5799,
        5811
      ],
      "op": "DUP2",
      "path": "0"
    },
    "4292": {
      "fn": "Allowlist.splitSignature",
      "offset": [
        5799,
        5811
      ],
      "op": "ADD",
      "path": "0"
    },
    "4293": {
      "fn": "Allowlist.splitSignature",
      "offset": [
        5793,
        5812
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "4294": {
      "fn": "Allowlist.splitSignature",
      "offset": [
        5883,
        5885
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "4296": {
      "fn": "Allowlist.splitSignature",
      "offset": [
        5874,
        5886
      ],
      "op": "DUP1",
      "path": "0"
    },
    "4297": {
      "fn": "Allowlist.splitSignature",
      "offset": [
        5874,
        5886
      ],
      "op": "DUP6",
      "path": "0"
    },
    "4298": {
      "fn": "Allowlist.splitSignature",
      "offset": [
        5874,
        5886
      ],
      "op": "ADD",
      "path": "0"
    },
    "4299": {
      "fn": "Allowlist.splitSignature",
      "offset": [
        5868,
        5887
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "4300": {
      "fn": "Allowlist.splitSignature",
      "offset": [
        5995,
        5997
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x60"
    },
    "4302": {
      "fn": "Allowlist.splitSignature",
      "offset": [
        5986,
        5998
      ],
      "op": "DUP1",
      "path": "0"
    },
    "4303": {
      "fn": "Allowlist.splitSignature",
      "offset": [
        5986,
        5998
      ],
      "op": "DUP8",
      "path": "0"
    },
    "4304": {
      "fn": "Allowlist.splitSignature",
      "offset": [
        5986,
        5998
      ],
      "op": "ADD",
      "path": "0"
    },
    "4305": {
      "fn": "Allowlist.splitSignature",
      "offset": [
        5980,
        5999
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "4306": {
      "fn": "Allowlist._verifySignature",
      "offset": [
        4134,
        4158
      ],
      "op": "DUP4",
      "path": "0"
    },
    "4307": {
      "fn": "Allowlist._verifySignature",
      "offset": [
        4134,
        4158
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "4308": {
      "fn": "Allowlist._verifySignature",
      "offset": [
        4000,
        4009
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "4310": {
      "fn": "Allowlist._verifySignature",
      "offset": [
        4134,
        4158
      ],
      "op": "DUP1",
      "path": "0"
    },
    "4311": {
      "fn": "Allowlist._verifySignature",
      "offset": [
        4134,
        4158
      ],
      "op": "DUP3",
      "path": "0"
    },
    "4312": {
      "fn": "Allowlist._verifySignature",
      "offset": [
        4134,
        4158
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "4313": {
      "fn": "Allowlist._verifySignature",
      "offset": [
        4134,
        4158
      ],
      "op": "SWAP7",
      "path": "0"
    },
    "4314": {
      "fn": "Allowlist._verifySignature",
      "offset": [
        4134,
        4158
      ],
      "op": "DUP2",
      "path": "0"
    },
    "4315": {
      "fn": "Allowlist._verifySignature",
      "offset": [
        4134,
        4158
      ],
      "op": "ADD",
      "path": "0"
    },
    "4316": {
      "fn": "Allowlist._verifySignature",
      "offset": [
        4134,
        4158
      ],
      "op": "DUP1",
      "path": "0"
    },
    "4317": {
      "fn": "Allowlist._verifySignature",
      "offset": [
        4134,
        4158
      ],
      "op": "DUP7",
      "path": "0"
    },
    "4318": {
      "fn": "Allowlist._verifySignature",
      "offset": [
        4134,
        4158
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "4319": {
      "op": "DUP11"
    },
    "4320": {
      "op": "SWAP1"
    },
    "4321": {
      "op": "MSTORE"
    },
    "4322": {
      "fn": "Allowlist.splitSignature",
      "offset": [
        5972,
        6000
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "4323": {
      "fn": "Allowlist.splitSignature",
      "offset": [
        5972,
        6000
      ],
      "op": "DUP7",
      "path": "0"
    },
    "4324": {
      "fn": "Allowlist.splitSignature",
      "offset": [
        5972,
        6000
      ],
      "op": "BYTE",
      "path": "0"
    },
    "4325": {
      "op": "SWAP4"
    },
    "4326": {
      "op": "DUP2"
    },
    "4327": {
      "op": "ADD"
    },
    "4328": {
      "op": "DUP5"
    },
    "4329": {
      "op": "SWAP1"
    },
    "4330": {
      "op": "MSTORE"
    },
    "4331": {
      "op": "SWAP1"
    },
    "4332": {
      "op": "DUP2"
    },
    "4333": {
      "op": "ADD"
    },
    "4334": {
      "op": "DUP5"
    },
    "4335": {
      "op": "SWAP1"
    },
    "4336": {
      "op": "MSTORE"
    },
    "4337": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "4339": {
      "op": "DUP2"
    },
    "4340": {
      "op": "ADD"
    },
    "4341": {
      "op": "DUP3"
    },
    "4342": {
      "op": "SWAP1"
    },
    "4343": {
      "op": "MSTORE"
    },
    "4344": {
      "fn": "Allowlist.splitSignature",
      "offset": [
        5793,
        5812
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "4345": {
      "fn": "Allowlist.splitSignature",
      "offset": [
        5793,
        5812
      ],
      "op": "SWAP4",
      "path": "0"
    },
    "4346": {
      "fn": "Allowlist.splitSignature",
      "offset": [
        5868,
        5887
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "4347": {
      "fn": "Allowlist.splitSignature",
      "offset": [
        5868,
        5887
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "4348": {
      "fn": "Allowlist._verifySignature",
      "offset": [
        4134,
        4158
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1"
    },
    "4350": {
      "fn": "Allowlist._verifySignature",
      "offset": [
        4134,
        4158
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "4351": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4353": {
      "op": "ADD"
    },
    "4354": {
      "fn": "Allowlist._verifySignature",
      "offset": [
        4134,
        4158
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "4356": {
      "fn": "Allowlist._verifySignature",
      "offset": [
        4134,
        4158
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "4358": {
      "fn": "Allowlist._verifySignature",
      "offset": [
        4134,
        4158
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "4359": {
      "fn": "Allowlist._verifySignature",
      "offset": [
        4134,
        4158
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "4361": {
      "fn": "Allowlist._verifySignature",
      "offset": [
        4134,
        4158
      ],
      "op": "DUP2",
      "path": "0"
    },
    "4362": {
      "fn": "Allowlist._verifySignature",
      "offset": [
        4134,
        4158
      ],
      "op": "SUB",
      "path": "0"
    },
    "4363": {
      "fn": "Allowlist._verifySignature",
      "offset": [
        4134,
        4158
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "4364": {
      "fn": "Allowlist._verifySignature",
      "offset": [
        4134,
        4158
      ],
      "op": "DUP1",
      "path": "0"
    },
    "4365": {
      "fn": "Allowlist._verifySignature",
      "offset": [
        4134,
        4158
      ],
      "op": "DUP5",
      "path": "0"
    },
    "4366": {
      "fn": "Allowlist._verifySignature",
      "offset": [
        4134,
        4158
      ],
      "op": "SUB",
      "path": "0"
    },
    "4367": {
      "fn": "Allowlist._verifySignature",
      "offset": [
        4134,
        4158
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "4368": {
      "fn": "Allowlist._verifySignature",
      "offset": [
        4134,
        4158
      ],
      "op": "DUP6",
      "path": "0"
    },
    "4369": {
      "fn": "Allowlist._verifySignature",
      "offset": [
        4134,
        4158
      ],
      "op": "GAS",
      "path": "0"
    },
    "4370": {
      "fn": "Allowlist._verifySignature",
      "offset": [
        4134,
        4158
      ],
      "op": "STATICCALL",
      "path": "0"
    },
    "4371": {
      "fn": "Allowlist._verifySignature",
      "offset": [
        4134,
        4158
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "4372": {
      "fn": "Allowlist._verifySignature",
      "offset": [
        4134,
        4158
      ],
      "op": "DUP1",
      "path": "0"
    },
    "4373": {
      "fn": "Allowlist._verifySignature",
      "offset": [
        4134,
        4158
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "4374": {
      "fn": "Allowlist._verifySignature",
      "offset": [
        4134,
        4158
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1123"
    },
    "4377": {
      "fn": "Allowlist._verifySignature",
      "offset": [
        4134,
        4158
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "4378": {
      "fn": "Allowlist._verifySignature",
      "offset": [
        4134,
        4158
      ],
      "op": "RETURNDATASIZE",
      "path": "0"
    },
    "4379": {
      "fn": "Allowlist._verifySignature",
      "offset": [
        4134,
        4158
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "4381": {
      "fn": "Allowlist._verifySignature",
      "offset": [
        4134,
        4158
      ],
      "op": "DUP1",
      "path": "0"
    },
    "4382": {
      "fn": "Allowlist._verifySignature",
      "offset": [
        4134,
        4158
      ],
      "op": "RETURNDATACOPY",
      "path": "0"
    },
    "4383": {
      "fn": "Allowlist._verifySignature",
      "offset": [
        4134,
        4158
      ],
      "op": "RETURNDATASIZE",
      "path": "0"
    },
    "4384": {
      "fn": "Allowlist._verifySignature",
      "offset": [
        4134,
        4158
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "4386": {
      "fn": "Allowlist._verifySignature",
      "offset": [
        4134,
        4158
      ],
      "op": "REVERT",
      "path": "0"
    },
    "4387": {
      "fn": "Allowlist._verifySignature",
      "offset": [
        4134,
        4158
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "4388": {
      "op": "POP"
    },
    "4389": {
      "op": "POP"
    },
    "4390": {
      "fn": "Allowlist._verifySignature",
      "offset": [
        4134,
        4158
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "4392": {
      "fn": "Allowlist._verifySignature",
      "offset": [
        4134,
        4158
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "4393": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "4395": {
      "op": "NOT"
    },
    "4396": {
      "fn": "Allowlist._verifySignature",
      "offset": [
        4134,
        4158
      ],
      "op": "DUP2",
      "path": "0"
    },
    "4397": {
      "fn": "Allowlist._verifySignature",
      "offset": [
        4134,
        4158
      ],
      "op": "ADD",
      "path": "0"
    },
    "4398": {
      "fn": "Allowlist._verifySignature",
      "offset": [
        4134,
        4158
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "4399": {
      "fn": "Allowlist._verifySignature",
      "offset": [
        4272,
        4286
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x8"
    },
    "4401": {
      "fn": "Allowlist._verifySignature",
      "offset": [
        4272,
        4286
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "4402": {
      "fn": "Allowlist._verifySignature",
      "offset": [
        4134,
        4158
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "4403": {
      "fn": "Allowlist._verifySignature",
      "offset": [
        4134,
        4158
      ],
      "op": "SWAP4",
      "path": "0"
    },
    "4404": {
      "op": "POP"
    },
    "4405": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4407": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4409": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4411": {
      "op": "SHL"
    },
    "4412": {
      "op": "SUB"
    },
    "4413": {
      "fn": "Allowlist._verifySignature",
      "offset": [
        4262,
        4286
      ],
      "op": "DUP1",
      "path": "0"
    },
    "4414": {
      "fn": "Allowlist._verifySignature",
      "offset": [
        4262,
        4286
      ],
      "op": "DUP6",
      "path": "0"
    },
    "4415": {
      "fn": "Allowlist._verifySignature",
      "offset": [
        4262,
        4286
      ],
      "op": "AND",
      "path": "0"
    },
    "4416": {
      "fn": "Allowlist._verifySignature",
      "offset": [
        4272,
        4286
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "4417": {
      "fn": "Allowlist._verifySignature",
      "offset": [
        4272,
        4286
      ],
      "op": "AND",
      "path": "0"
    },
    "4418": {
      "fn": "Allowlist._verifySignature",
      "offset": [
        4262,
        4286
      ],
      "op": "EQ",
      "path": "0"
    },
    "4419": {
      "fn": "Allowlist._verifySignature",
      "offset": [
        4262,
        4286
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "4420": {
      "op": "POP"
    },
    "4421": {
      "fn": "Allowlist._verifySignature",
      "offset": [
        4262,
        4286
      ],
      "op": "DUP2",
      "path": "0"
    },
    "4422": {
      "fn": "Allowlist._verifySignature",
      "offset": [
        4262,
        4286
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "4423": {
      "fn": "Allowlist._verifySignature",
      "offset": [
        4369,
        4373
      ],
      "op": "DUP10",
      "path": "0",
      "statement": 64
    },
    "4424": {
      "fn": "Allowlist._verifySignature",
      "offset": [
        4369,
        4373
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "4425": {
      "fn": "Allowlist._verifySignature",
      "offset": [
        4353,
        4398
      ],
      "op": "PUSH32",
      "path": "0",
      "value": "0x7E4FE2A2A805A357593FDBDDE58C02F6A53D8B4960744CD31A98697FC11C2E36"
    },
    "4458": {
      "fn": "Allowlist._verifySignature",
      "offset": [
        4353,
        4398
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "4459": {
      "fn": "Allowlist._verifySignature",
      "offset": [
        4231,
        4258
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "4461": {
      "fn": "Allowlist._verifySignature",
      "offset": [
        4231,
        4258
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "4462": {
      "fn": "Allowlist._verifySignature",
      "offset": [
        4353,
        4398
      ],
      "op": "LOG3",
      "path": "0"
    },
    "4463": {
      "fn": "Allowlist._verifySignature",
      "offset": [
        4451,
        4473
      ],
      "op": "SWAP8",
      "path": "0",
      "statement": 65
    },
    "4464": {
      "fn": "Allowlist._verifySignature",
      "offset": [
        3437,
        4480
      ],
      "op": "SWAP7",
      "path": "0"
    },
    "4465": {
      "op": "POP"
    },
    "4466": {
      "op": "POP"
    },
    "4467": {
      "op": "POP"
    },
    "4468": {
      "op": "POP"
    },
    "4469": {
      "op": "POP"
    },
    "4470": {
      "op": "POP"
    },
    "4471": {
      "op": "POP"
    },
    "4472": {
      "fn": "Allowlist._verifySignature",
      "jump": "o",
      "offset": [
        3437,
        4480
      ],
      "op": "JUMP",
      "path": "0"
    },
    "4473": {
      "fn": "Soulbound.burnSoulboundToken",
      "offset": [
        6362,
        6783
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "4474": {
      "fn": "Soulbound.burnSoulboundToken",
      "offset": [
        6489,
        6505
      ],
      "op": "PUSH2",
      "path": "3",
      "statement": 66,
      "value": "0x1182"
    },
    "4477": {
      "fn": "Soulbound.burnSoulboundToken",
      "offset": [
        6497,
        6504
      ],
      "op": "DUP2",
      "path": "3"
    },
    "4478": {
      "fn": "Soulbound.burnSoulboundToken",
      "offset": [
        6489,
        6496
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xC4C"
    },
    "4481": {
      "fn": "Soulbound.burnSoulboundToken",
      "jump": "i",
      "offset": [
        6489,
        6505
      ],
      "op": "JUMP",
      "path": "3"
    },
    "4482": {
      "branch": 103,
      "fn": "Soulbound.burnSoulboundToken",
      "offset": [
        6489,
        6505
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "4483": {
      "fn": "Soulbound.burnSoulboundToken",
      "offset": [
        6481,
        6534
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x11CE"
    },
    "4486": {
      "branch": 103,
      "fn": "Soulbound.burnSoulboundToken",
      "offset": [
        6481,
        6534
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "4487": {
      "fn": "Soulbound.burnSoulboundToken",
      "offset": [
        6481,
        6534
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "4489": {
      "fn": "Soulbound.burnSoulboundToken",
      "offset": [
        6481,
        6534
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "4490": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "4494": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "4496": {
      "op": "SHL"
    },
    "4497": {
      "fn": "Soulbound.burnSoulboundToken",
      "offset": [
        6481,
        6534
      ],
      "op": "DUP2",
      "path": "3"
    },
    "4498": {
      "fn": "Soulbound.burnSoulboundToken",
      "offset": [
        6481,
        6534
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "4499": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4501": {
      "fn": "Soulbound.burnSoulboundToken",
      "offset": [
        6481,
        6534
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x4"
    },
    "4503": {
      "fn": "Soulbound.burnSoulboundToken",
      "offset": [
        6481,
        6534
      ],
      "op": "DUP3",
      "path": "3"
    },
    "4504": {
      "fn": "Soulbound.burnSoulboundToken",
      "offset": [
        6481,
        6534
      ],
      "op": "ADD",
      "path": "3"
    },
    "4505": {
      "op": "MSTORE"
    },
    "4506": {
      "op": "PUSH1",
      "value": "0x18"
    },
    "4508": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "4510": {
      "op": "DUP3"
    },
    "4511": {
      "op": "ADD"
    },
    "4512": {
      "op": "MSTORE"
    },
    "4513": {
      "op": "PUSH32",
      "value": "0x4275726E206F6620696E6578697374656E7420746F6B656E0000000000000000"
    },
    "4546": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "4548": {
      "op": "DUP3"
    },
    "4549": {
      "op": "ADD"
    },
    "4550": {
      "op": "MSTORE"
    },
    "4551": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "4553": {
      "op": "ADD"
    },
    "4554": {
      "fn": "Soulbound.burnSoulboundToken",
      "offset": [
        6481,
        6534
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x422"
    },
    "4557": {
      "op": "JUMP"
    },
    "4558": {
      "fn": "Soulbound.burnSoulboundToken",
      "offset": [
        6481,
        6534
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "4559": {
      "fn": "Soulbound.burnSoulboundToken",
      "offset": [
        6589,
        6608
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "4561": {
      "fn": "Soulbound.burnSoulboundToken",
      "offset": [
        6611,
        6627
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x11D9"
    },
    "4564": {
      "fn": "Soulbound.burnSoulboundToken",
      "offset": [
        6619,
        6626
      ],
      "op": "DUP3",
      "path": "3"
    },
    "4565": {
      "fn": "Soulbound.burnSoulboundToken",
      "offset": [
        6611,
        6618
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x603"
    },
    "4568": {
      "fn": "Soulbound.burnSoulboundToken",
      "jump": "i",
      "offset": [
        6611,
        6627
      ],
      "op": "JUMP",
      "path": "3"
    },
    "4569": {
      "fn": "Soulbound.burnSoulboundToken",
      "offset": [
        6611,
        6627
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "4570": {
      "fn": "Soulbound.burnSoulboundToken",
      "offset": [
        6589,
        6627
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "4571": {
      "fn": "Soulbound.burnSoulboundToken",
      "offset": [
        6589,
        6627
      ],
      "op": "POP",
      "path": "3"
    },
    "4572": {
      "fn": "Soulbound.burnSoulboundToken",
      "offset": [
        6670,
        6684
      ],
      "op": "PUSH2",
      "path": "3",
      "statement": 67,
      "value": "0x11E4"
    },
    "4575": {
      "fn": "Soulbound.burnSoulboundToken",
      "offset": [
        6676,
        6683
      ],
      "op": "DUP3",
      "path": "3"
    },
    "4576": {
      "fn": "Soulbound.burnSoulboundToken",
      "offset": [
        6670,
        6675
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0xE3A"
    },
    "4579": {
      "fn": "Soulbound.burnSoulboundToken",
      "jump": "i",
      "offset": [
        6670,
        6684
      ],
      "op": "JUMP",
      "path": "3"
    },
    "4580": {
      "fn": "Soulbound.burnSoulboundToken",
      "offset": [
        6670,
        6684
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "4581": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4583": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4585": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4587": {
      "op": "SHL"
    },
    "4588": {
      "op": "SUB"
    },
    "4589": {
      "fn": "Soulbound.burnSoulboundToken",
      "offset": [
        6741,
        6759
      ],
      "op": "AND",
      "path": "3",
      "statement": 68
    },
    "4590": {
      "fn": "Soulbound.burnSoulboundToken",
      "offset": [
        6771,
        6776
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "4592": {
      "fn": "Soulbound.burnSoulboundToken",
      "offset": [
        6741,
        6759
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "4593": {
      "fn": "Soulbound.burnSoulboundToken",
      "offset": [
        6741,
        6759
      ],
      "op": "DUP2",
      "path": "3"
    },
    "4594": {
      "fn": "Soulbound.burnSoulboundToken",
      "offset": [
        6741,
        6759
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "4595": {
      "fn": "Soulbound.burnSoulboundToken",
      "offset": [
        6741,
        6746
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x7"
    },
    "4597": {
      "fn": "Soulbound.burnSoulboundToken",
      "offset": [
        6741,
        6759
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "4599": {
      "fn": "Soulbound.burnSoulboundToken",
      "offset": [
        6741,
        6759
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "4600": {
      "fn": "Soulbound.burnSoulboundToken",
      "offset": [
        6741,
        6759
      ],
      "op": "DUP2",
      "path": "3"
    },
    "4601": {
      "fn": "Soulbound.burnSoulboundToken",
      "offset": [
        6741,
        6759
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "4602": {
      "fn": "Soulbound.burnSoulboundToken",
      "offset": [
        6741,
        6759
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "4604": {
      "fn": "Soulbound.burnSoulboundToken",
      "offset": [
        6741,
        6759
      ],
      "op": "DUP1",
      "path": "3"
    },
    "4605": {
      "fn": "Soulbound.burnSoulboundToken",
      "offset": [
        6741,
        6759
      ],
      "op": "DUP4",
      "path": "3"
    },
    "4606": {
      "fn": "Soulbound.burnSoulboundToken",
      "offset": [
        6741,
        6759
      ],
      "op": "KECCAK256",
      "path": "3"
    },
    "4607": {
      "fn": "Soulbound.burnSoulboundToken",
      "offset": [
        6741,
        6768
      ],
      "op": "SWAP4",
      "path": "3"
    },
    "4608": {
      "fn": "Soulbound.burnSoulboundToken",
      "offset": [
        6741,
        6768
      ],
      "op": "DUP4",
      "path": "3"
    },
    "4609": {
      "fn": "Soulbound.burnSoulboundToken",
      "offset": [
        6741,
        6768
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "4610": {
      "fn": "Soulbound.burnSoulboundToken",
      "offset": [
        6741,
        6768
      ],
      "op": "SWAP3",
      "path": "3"
    },
    "4611": {
      "fn": "Soulbound.burnSoulboundToken",
      "offset": [
        6741,
        6768
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "4612": {
      "fn": "Soulbound.burnSoulboundToken",
      "offset": [
        6741,
        6768
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "4613": {
      "fn": "Soulbound.burnSoulboundToken",
      "offset": [
        6741,
        6768
      ],
      "op": "KECCAK256",
      "path": "3"
    },
    "4614": {
      "fn": "Soulbound.burnSoulboundToken",
      "offset": [
        6741,
        6776
      ],
      "op": "DUP1",
      "path": "3"
    },
    "4615": {
      "fn": "Soulbound.burnSoulboundToken",
      "offset": [
        6741,
        6776
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "4616": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "4618": {
      "op": "NOT"
    },
    "4619": {
      "fn": "Soulbound.burnSoulboundToken",
      "offset": [
        6741,
        6776
      ],
      "op": "AND",
      "path": "3"
    },
    "4620": {
      "fn": "Soulbound.burnSoulboundToken",
      "offset": [
        6741,
        6776
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "4621": {
      "fn": "Soulbound.burnSoulboundToken",
      "offset": [
        6741,
        6776
      ],
      "op": "SSTORE",
      "path": "3"
    },
    "4622": {
      "fn": "Soulbound.burnSoulboundToken",
      "jump": "o",
      "offset": [
        6362,
        6783
      ],
      "op": "JUMP",
      "path": "3"
    },
    "4623": {
      "fn": "Soulbound.mintSoulboundToken",
      "offset": [
        5532,
        6206
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "4624": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4626": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4628": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4630": {
      "op": "SHL"
    },
    "4631": {
      "op": "SUB"
    },
    "4632": {
      "fn": "Soulbound.mintSoulboundToken",
      "offset": [
        5746,
        5762
      ],
      "op": "DUP4",
      "path": "3",
      "statement": 69
    },
    "4633": {
      "branch": 104,
      "fn": "Soulbound.mintSoulboundToken",
      "offset": [
        5746,
        5762
      ],
      "op": "AND",
      "path": "3"
    },
    "4634": {
      "fn": "Soulbound.mintSoulboundToken",
      "offset": [
        5738,
        5788
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x125D"
    },
    "4637": {
      "branch": 104,
      "fn": "Soulbound.mintSoulboundToken",
      "offset": [
        5738,
        5788
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "4638": {
      "fn": "Soulbound.mintSoulboundToken",
      "offset": [
        5738,
        5788
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "4640": {
      "fn": "Soulbound.mintSoulboundToken",
      "offset": [
        5738,
        5788
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "4641": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "4645": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "4647": {
      "op": "SHL"
    },
    "4648": {
      "fn": "Soulbound.mintSoulboundToken",
      "offset": [
        5738,
        5788
      ],
      "op": "DUP2",
      "path": "3"
    },
    "4649": {
      "fn": "Soulbound.mintSoulboundToken",
      "offset": [
        5738,
        5788
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "4650": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4652": {
      "fn": "Soulbound.mintSoulboundToken",
      "offset": [
        5738,
        5788
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x4"
    },
    "4654": {
      "fn": "Soulbound.mintSoulboundToken",
      "offset": [
        5738,
        5788
      ],
      "op": "DUP3",
      "path": "3"
    },
    "4655": {
      "fn": "Soulbound.mintSoulboundToken",
      "offset": [
        5738,
        5788
      ],
      "op": "ADD",
      "path": "3"
    },
    "4656": {
      "op": "MSTORE"
    },
    "4657": {
      "op": "PUSH1",
      "value": "0x15"
    },
    "4659": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "4661": {
      "op": "DUP3"
    },
    "4662": {
      "op": "ADD"
    },
    "4663": {
      "op": "MSTORE"
    },
    "4664": {
      "op": "PUSH21",
      "value": "0x26B4B73A103A37903D32B9379030B2323932B9B997"
    },
    "4686": {
      "op": "PUSH1",
      "value": "0x59"
    },
    "4688": {
      "op": "SHL"
    },
    "4689": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "4691": {
      "op": "DUP3"
    },
    "4692": {
      "op": "ADD"
    },
    "4693": {
      "op": "MSTORE"
    },
    "4694": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "4696": {
      "op": "ADD"
    },
    "4697": {
      "fn": "Soulbound.mintSoulboundToken",
      "offset": [
        5738,
        5788
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x422"
    },
    "4700": {
      "op": "JUMP"
    },
    "4701": {
      "fn": "Soulbound.mintSoulboundToken",
      "offset": [
        5738,
        5788
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "4702": {
      "fn": "Soulbound.mintSoulboundToken",
      "offset": [
        5934,
        5942
      ],
      "op": "DUP1",
      "path": "3",
      "statement": 70
    },
    "4703": {
      "fn": "Soulbound.mintSoulboundToken",
      "offset": [
        5928,
        5950
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "4704": {
      "fn": "Soulbound.mintSoulboundToken",
      "offset": [
        5954,
        5955
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "4706": {
      "branch": 105,
      "fn": "Soulbound.mintSoulboundToken",
      "offset": [
        5928,
        5955
      ],
      "op": "SUB",
      "path": "3"
    },
    "4707": {
      "fn": "Soulbound.mintSoulboundToken",
      "offset": [
        5920,
        5975
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x12A0"
    },
    "4710": {
      "branch": 105,
      "fn": "Soulbound.mintSoulboundToken",
      "offset": [
        5920,
        5975
      ],
      "op": "JUMPI",
      "path": "3"
    },
    "4711": {
      "fn": "Soulbound.mintSoulboundToken",
      "offset": [
        5920,
        5975
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "4713": {
      "fn": "Soulbound.mintSoulboundToken",
      "offset": [
        5920,
        5975
      ],
      "op": "MLOAD",
      "path": "3"
    },
    "4714": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "4718": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "4720": {
      "op": "SHL"
    },
    "4721": {
      "fn": "Soulbound.mintSoulboundToken",
      "offset": [
        5920,
        5975
      ],
      "op": "DUP2",
      "path": "3"
    },
    "4722": {
      "fn": "Soulbound.mintSoulboundToken",
      "offset": [
        5920,
        5975
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "4723": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4725": {
      "fn": "Soulbound.mintSoulboundToken",
      "offset": [
        5920,
        5975
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x4"
    },
    "4727": {
      "fn": "Soulbound.mintSoulboundToken",
      "offset": [
        5920,
        5975
      ],
      "op": "DUP3",
      "path": "3"
    },
    "4728": {
      "fn": "Soulbound.mintSoulboundToken",
      "offset": [
        5920,
        5975
      ],
      "op": "ADD",
      "path": "3"
    },
    "4729": {
      "op": "MSTORE"
    },
    "4730": {
      "op": "PUSH1",
      "value": "0xF"
    },
    "4732": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "4734": {
      "op": "DUP3"
    },
    "4735": {
      "op": "ADD"
    },
    "4736": {
      "op": "MSTORE"
    },
    "4737": {
      "op": "PUSH15",
      "value": "0x22B6B83A3C903A37B5B2B72AA92497"
    },
    "4753": {
      "op": "PUSH1",
      "value": "0x89"
    },
    "4755": {
      "op": "SHL"
    },
    "4756": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "4758": {
      "op": "DUP3"
    },
    "4759": {
      "op": "ADD"
    },
    "4760": {
      "op": "MSTORE"
    },
    "4761": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "4763": {
      "op": "ADD"
    },
    "4764": {
      "fn": "Soulbound.mintSoulboundToken",
      "offset": [
        5920,
        5975
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x422"
    },
    "4767": {
      "op": "JUMP"
    },
    "4768": {
      "fn": "Soulbound.mintSoulboundToken",
      "offset": [
        5920,
        5975
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "4769": {
      "fn": "Soulbound.mintSoulboundToken",
      "offset": [
        6090,
        6118
      ],
      "op": "PUSH2",
      "path": "3",
      "statement": 71,
      "value": "0x12AB"
    },
    "4772": {
      "fn": "Soulbound.mintSoulboundToken",
      "offset": [
        6096,
        6098
      ],
      "op": "DUP4",
      "path": "3"
    },
    "4773": {
      "fn": "Soulbound.mintSoulboundToken",
      "offset": [
        6100,
        6107
      ],
      "op": "DUP4",
      "path": "3"
    },
    "4774": {
      "fn": "Soulbound.mintSoulboundToken",
      "offset": [
        6109,
        6117
      ],
      "op": "DUP4",
      "path": "3"
    },
    "4775": {
      "fn": "Soulbound.mintSoulboundToken",
      "offset": [
        6090,
        6095
      ],
      "op": "PUSH2",
      "path": "3",
      "value": "0x12DD"
    },
    "4778": {
      "fn": "Soulbound.mintSoulboundToken",
      "jump": "i",
      "offset": [
        6090,
        6118
      ],
      "op": "JUMP",
      "path": "3"
    },
    "4779": {
      "fn": "Soulbound.mintSoulboundToken",
      "offset": [
        6090,
        6118
      ],
      "op": "JUMPDEST",
      "path": "3"
    },
    "4780": {
      "op": "POP"
    },
    "4781": {
      "op": "POP"
    },
    "4782": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4784": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4786": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4788": {
      "op": "SHL"
    },
    "4789": {
      "op": "SUB"
    },
    "4790": {
      "fn": "Soulbound.mintSoulboundToken",
      "offset": [
        6174,
        6183
      ],
      "op": "SWAP1",
      "path": "3",
      "statement": 72
    },
    "4791": {
      "fn": "Soulbound.mintSoulboundToken",
      "offset": [
        6174,
        6183
      ],
      "op": "SWAP2",
      "path": "3"
    },
    "4792": {
      "fn": "Soulbound.mintSoulboundToken",
      "offset": [
        6174,
        6183
      ],
      "op": "AND",
      "path": "3"
    },
    "4793": {
      "fn": "Soulbound.mintSoulboundToken",
      "offset": [
        6174,
        6183
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x0"
    },
    "4795": {
      "fn": "Soulbound.mintSoulboundToken",
      "offset": [
        6174,
        6183
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "4796": {
      "fn": "Soulbound.mintSoulboundToken",
      "offset": [
        6174,
        6183
      ],
      "op": "DUP2",
      "path": "3"
    },
    "4797": {
      "fn": "Soulbound.mintSoulboundToken",
      "offset": [
        6174,
        6183
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "4798": {
      "fn": "Soulbound.mintSoulboundToken",
      "offset": [
        6174,
        6179
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x7"
    },
    "4800": {
      "fn": "Soulbound.mintSoulboundToken",
      "offset": [
        6174,
        6183
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x20"
    },
    "4802": {
      "fn": "Soulbound.mintSoulboundToken",
      "offset": [
        6174,
        6183
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "4803": {
      "fn": "Soulbound.mintSoulboundToken",
      "offset": [
        6174,
        6183
      ],
      "op": "DUP2",
      "path": "3"
    },
    "4804": {
      "fn": "Soulbound.mintSoulboundToken",
      "offset": [
        6174,
        6183
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "4805": {
      "fn": "Soulbound.mintSoulboundToken",
      "offset": [
        6174,
        6183
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x40"
    },
    "4807": {
      "fn": "Soulbound.mintSoulboundToken",
      "offset": [
        6174,
        6183
      ],
      "op": "DUP1",
      "path": "3"
    },
    "4808": {
      "fn": "Soulbound.mintSoulboundToken",
      "offset": [
        6174,
        6183
      ],
      "op": "DUP4",
      "path": "3"
    },
    "4809": {
      "fn": "Soulbound.mintSoulboundToken",
      "offset": [
        6174,
        6183
      ],
      "op": "KECCAK256",
      "path": "3"
    },
    "4810": {
      "fn": "Soulbound.mintSoulboundToken",
      "offset": [
        6174,
        6192
      ],
      "op": "SWAP4",
      "path": "3"
    },
    "4811": {
      "fn": "Soulbound.mintSoulboundToken",
      "offset": [
        6174,
        6192
      ],
      "op": "DUP4",
      "path": "3"
    },
    "4812": {
      "fn": "Soulbound.mintSoulboundToken",
      "offset": [
        6174,
        6192
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "4813": {
      "fn": "Soulbound.mintSoulboundToken",
      "offset": [
        6174,
        6192
      ],
      "op": "SWAP3",
      "path": "3"
    },
    "4814": {
      "fn": "Soulbound.mintSoulboundToken",
      "offset": [
        6174,
        6192
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "4815": {
      "fn": "Soulbound.mintSoulboundToken",
      "offset": [
        6174,
        6192
      ],
      "op": "MSTORE",
      "path": "3"
    },
    "4816": {
      "fn": "Soulbound.mintSoulboundToken",
      "offset": [
        6174,
        6192
      ],
      "op": "KECCAK256",
      "path": "3"
    },
    "4817": {
      "fn": "Soulbound.mintSoulboundToken",
      "offset": [
        6174,
        6199
      ],
      "op": "DUP1",
      "path": "3"
    },
    "4818": {
      "fn": "Soulbound.mintSoulboundToken",
      "offset": [
        6174,
        6199
      ],
      "op": "SLOAD",
      "path": "3"
    },
    "4819": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "4821": {
      "op": "NOT"
    },
    "4822": {
      "fn": "Soulbound.mintSoulboundToken",
      "offset": [
        6174,
        6199
      ],
      "op": "AND",
      "path": "3"
    },
    "4823": {
      "fn": "Soulbound.mintSoulboundToken",
      "offset": [
        6195,
        6199
      ],
      "op": "PUSH1",
      "path": "3",
      "value": "0x1"
    },
    "4825": {
      "fn": "Soulbound.mintSoulboundToken",
      "offset": [
        6174,
        6199
      ],
      "op": "OR",
      "path": "3"
    },
    "4826": {
      "fn": "Soulbound.mintSoulboundToken",
      "offset": [
        6174,
        6199
      ],
      "op": "SWAP1",
      "path": "3"
    },
    "4827": {
      "fn": "Soulbound.mintSoulboundToken",
      "offset": [
        6174,
        6199
      ],
      "op": "SSTORE",
      "path": "3"
    },
    "4828": {
      "fn": "Soulbound.mintSoulboundToken",
      "jump": "o",
      "offset": [
        5532,
        6206
      ],
      "op": "JUMP",
      "path": "3"
    },
    "4829": {
      "fn": "ERC4973._mint",
      "offset": [
        5632,
        5939
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "4830": {
      "fn": "ERC4973._mint",
      "offset": [
        5737,
        5744
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x0"
    },
    "4832": {
      "fn": "ERC4973._mint",
      "offset": [
        5761,
        5777
      ],
      "op": "PUSH2",
      "path": "7",
      "statement": 73,
      "value": "0x12E8"
    },
    "4835": {
      "fn": "ERC4973._mint",
      "offset": [
        5769,
        5776
      ],
      "op": "DUP4",
      "path": "7"
    },
    "4836": {
      "fn": "ERC4973._mint",
      "offset": [
        5761,
        5768
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0xC4C"
    },
    "4839": {
      "fn": "ERC4973._mint",
      "jump": "i",
      "offset": [
        5761,
        5777
      ],
      "op": "JUMP",
      "path": "7"
    },
    "4840": {
      "fn": "ERC4973._mint",
      "offset": [
        5761,
        5777
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "4841": {
      "branch": 93,
      "fn": "ERC4973._mint",
      "offset": [
        5760,
        5777
      ],
      "op": "ISZERO",
      "path": "7"
    },
    "4842": {
      "fn": "ERC4973._mint",
      "offset": [
        5752,
        5802
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x132C"
    },
    "4845": {
      "branch": 93,
      "fn": "ERC4973._mint",
      "offset": [
        5752,
        5802
      ],
      "op": "JUMPI",
      "path": "7"
    },
    "4846": {
      "fn": "ERC4973._mint",
      "offset": [
        5752,
        5802
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x40"
    },
    "4848": {
      "fn": "ERC4973._mint",
      "offset": [
        5752,
        5802
      ],
      "op": "MLOAD",
      "path": "7"
    },
    "4849": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "4853": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "4855": {
      "op": "SHL"
    },
    "4856": {
      "fn": "ERC4973._mint",
      "offset": [
        5752,
        5802
      ],
      "op": "DUP2",
      "path": "7"
    },
    "4857": {
      "fn": "ERC4973._mint",
      "offset": [
        5752,
        5802
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "4858": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4860": {
      "fn": "ERC4973._mint",
      "offset": [
        5752,
        5802
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x4"
    },
    "4862": {
      "fn": "ERC4973._mint",
      "offset": [
        5752,
        5802
      ],
      "op": "DUP3",
      "path": "7"
    },
    "4863": {
      "fn": "ERC4973._mint",
      "offset": [
        5752,
        5802
      ],
      "op": "ADD",
      "path": "7"
    },
    "4864": {
      "op": "MSTORE"
    },
    "4865": {
      "op": "PUSH1",
      "value": "0x14"
    },
    "4867": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "4869": {
      "op": "DUP3"
    },
    "4870": {
      "op": "ADD"
    },
    "4871": {
      "op": "MSTORE"
    },
    "4872": {
      "op": "PUSH20",
      "value": "0x6D696E743A20746F6B656E494420657869737473"
    },
    "4893": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "4895": {
      "op": "SHL"
    },
    "4896": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "4898": {
      "op": "DUP3"
    },
    "4899": {
      "op": "ADD"
    },
    "4900": {
      "op": "MSTORE"
    },
    "4901": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "4903": {
      "op": "ADD"
    },
    "4904": {
      "fn": "ERC4973._mint",
      "offset": [
        5752,
        5802
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x422"
    },
    "4907": {
      "op": "JUMP"
    },
    "4908": {
      "fn": "ERC4973._mint",
      "offset": [
        5752,
        5802
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "4909": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4911": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4913": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4915": {
      "op": "SHL"
    },
    "4916": {
      "op": "SUB"
    },
    "4917": {
      "fn": "ERC4973._mint",
      "offset": [
        5808,
        5821
      ],
      "op": "DUP5",
      "path": "7",
      "statement": 74
    },
    "4918": {
      "fn": "ERC4973._mint",
      "offset": [
        5808,
        5821
      ],
      "op": "AND",
      "path": "7"
    },
    "4919": {
      "fn": "ERC4973._mint",
      "offset": [
        5808,
        5821
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x0"
    },
    "4921": {
      "fn": "ERC4973._mint",
      "offset": [
        5808,
        5821
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "4922": {
      "fn": "ERC4973._mint",
      "offset": [
        5808,
        5821
      ],
      "op": "DUP2",
      "path": "7"
    },
    "4923": {
      "fn": "ERC4973._mint",
      "offset": [
        5808,
        5821
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "4924": {
      "fn": "ERC4973._mint",
      "offset": [
        5808,
        5817
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x4"
    },
    "4926": {
      "fn": "ERC4973._mint",
      "offset": [
        5808,
        5821
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x20"
    },
    "4928": {
      "fn": "ERC4973._mint",
      "offset": [
        5808,
        5821
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "4929": {
      "fn": "ERC4973._mint",
      "offset": [
        5808,
        5821
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x40"
    },
    "4931": {
      "fn": "ERC4973._mint",
      "offset": [
        5808,
        5821
      ],
      "op": "DUP2",
      "path": "7"
    },
    "4932": {
      "fn": "ERC4973._mint",
      "offset": [
        5808,
        5821
      ],
      "op": "KECCAK256",
      "path": "7"
    },
    "4933": {
      "fn": "ERC4973._mint",
      "offset": [
        5808,
        5826
      ],
      "op": "DUP1",
      "path": "7"
    },
    "4934": {
      "fn": "ERC4973._mint",
      "offset": [
        5808,
        5826
      ],
      "op": "SLOAD",
      "path": "7"
    },
    "4935": {
      "fn": "ERC4973._mint",
      "offset": [
        5825,
        5826
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x1"
    },
    "4937": {
      "fn": "ERC4973._mint",
      "offset": [
        5825,
        5826
      ],
      "op": "SWAP3",
      "path": "7"
    },
    "4938": {
      "fn": "ERC4973._mint",
      "offset": [
        5808,
        5821
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "4939": {
      "fn": "ERC4973._mint",
      "offset": [
        5808,
        5826
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x1355"
    },
    "4942": {
      "fn": "ERC4973._mint",
      "offset": [
        5808,
        5826
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "4943": {
      "fn": "ERC4973._mint",
      "offset": [
        5825,
        5826
      ],
      "op": "DUP5",
      "path": "7"
    },
    "4944": {
      "fn": "ERC4973._mint",
      "offset": [
        5825,
        5826
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "4945": {
      "fn": "ERC4973._mint",
      "offset": [
        5808,
        5826
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x1867"
    },
    "4948": {
      "fn": "ERC4973._mint",
      "jump": "i",
      "offset": [
        5808,
        5826
      ],
      "op": "JUMP",
      "path": "7"
    },
    "4949": {
      "fn": "ERC4973._mint",
      "offset": [
        5808,
        5826
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "4950": {
      "fn": "ERC4973._mint",
      "offset": [
        5808,
        5826
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "4951": {
      "fn": "ERC4973._mint",
      "offset": [
        5808,
        5826
      ],
      "op": "SWAP2",
      "path": "7"
    },
    "4952": {
      "fn": "ERC4973._mint",
      "offset": [
        5808,
        5826
      ],
      "op": "SSTORE",
      "path": "7"
    },
    "4953": {
      "op": "POP"
    },
    "4954": {
      "op": "POP"
    },
    "4955": {
      "fn": "ERC4973._mint",
      "offset": [
        5832,
        5848
      ],
      "op": "PUSH1",
      "path": "7",
      "statement": 75,
      "value": "0x0"
    },
    "4957": {
      "fn": "ERC4973._mint",
      "offset": [
        5832,
        5848
      ],
      "op": "DUP4",
      "path": "7"
    },
    "4958": {
      "fn": "ERC4973._mint",
      "offset": [
        5832,
        5848
      ],
      "op": "DUP2",
      "path": "7"
    },
    "4959": {
      "fn": "ERC4973._mint",
      "offset": [
        5832,
        5848
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "4960": {
      "fn": "ERC4973._mint",
      "offset": [
        5832,
        5839
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x2"
    },
    "4962": {
      "fn": "ERC4973._mint",
      "offset": [
        5832,
        5848
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x20"
    },
    "4964": {
      "fn": "ERC4973._mint",
      "offset": [
        5832,
        5848
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "4965": {
      "fn": "ERC4973._mint",
      "offset": [
        5832,
        5848
      ],
      "op": "DUP2",
      "path": "7"
    },
    "4966": {
      "fn": "ERC4973._mint",
      "offset": [
        5832,
        5848
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "4967": {
      "fn": "ERC4973._mint",
      "offset": [
        5832,
        5848
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x40"
    },
    "4969": {
      "fn": "ERC4973._mint",
      "offset": [
        5832,
        5848
      ],
      "op": "DUP1",
      "path": "7"
    },
    "4970": {
      "fn": "ERC4973._mint",
      "offset": [
        5832,
        5848
      ],
      "op": "DUP4",
      "path": "7"
    },
    "4971": {
      "fn": "ERC4973._mint",
      "offset": [
        5832,
        5848
      ],
      "op": "KECCAK256",
      "path": "7"
    },
    "4972": {
      "fn": "ERC4973._mint",
      "offset": [
        5832,
        5853
      ],
      "op": "DUP1",
      "path": "7"
    },
    "4973": {
      "fn": "ERC4973._mint",
      "offset": [
        5832,
        5853
      ],
      "op": "SLOAD",
      "path": "7"
    },
    "4974": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4976": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4978": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4980": {
      "op": "SHL"
    },
    "4981": {
      "op": "SUB"
    },
    "4982": {
      "op": "NOT"
    },
    "4983": {
      "fn": "ERC4973._mint",
      "offset": [
        5832,
        5853
      ],
      "op": "AND",
      "path": "7"
    },
    "4984": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4986": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4988": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4990": {
      "op": "SHL"
    },
    "4991": {
      "op": "SUB"
    },
    "4992": {
      "fn": "ERC4973._mint",
      "offset": [
        5832,
        5853
      ],
      "op": "DUP10",
      "path": "7"
    },
    "4993": {
      "fn": "ERC4973._mint",
      "offset": [
        5832,
        5853
      ],
      "op": "AND",
      "path": "7"
    },
    "4994": {
      "fn": "ERC4973._mint",
      "offset": [
        5832,
        5853
      ],
      "op": "OR",
      "path": "7"
    },
    "4995": {
      "fn": "ERC4973._mint",
      "offset": [
        5832,
        5853
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "4996": {
      "fn": "ERC4973._mint",
      "offset": [
        5832,
        5853
      ],
      "op": "SSTORE",
      "path": "7"
    },
    "4997": {
      "fn": "ERC4973._mint",
      "offset": [
        5859,
        5869
      ],
      "op": "PUSH1",
      "path": "7",
      "statement": 76,
      "value": "0x3"
    },
    "4999": {
      "fn": "ERC4973._mint",
      "offset": [
        5859,
        5878
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "5000": {
      "fn": "ERC4973._mint",
      "offset": [
        5859,
        5878
      ],
      "op": "SWAP2",
      "path": "7"
    },
    "5001": {
      "fn": "ERC4973._mint",
      "offset": [
        5859,
        5878
      ],
      "op": "MSTORE",
      "path": "7"
    },
    "5002": {
      "fn": "ERC4973._mint",
      "offset": [
        5859,
        5878
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "5003": {
      "fn": "ERC4973._mint",
      "offset": [
        5859,
        5878
      ],
      "op": "KECCAK256",
      "path": "7"
    },
    "5004": {
      "fn": "ERC4973._mint",
      "offset": [
        5859,
        5884
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x1395"
    },
    "5007": {
      "fn": "ERC4973._mint",
      "offset": [
        5881,
        5884
      ],
      "op": "DUP4",
      "path": "7"
    },
    "5008": {
      "fn": "ERC4973._mint",
      "offset": [
        5859,
        5878
      ],
      "op": "DUP3",
      "path": "7"
    },
    "5009": {
      "fn": "ERC4973._mint",
      "offset": [
        5859,
        5884
      ],
      "op": "PUSH2",
      "path": "7",
      "value": "0x18E3"
    },
    "5012": {
      "fn": "ERC4973._mint",
      "jump": "i",
      "offset": [
        5859,
        5884
      ],
      "op": "JUMP",
      "path": "7"
    },
    "5013": {
      "fn": "ERC4973._mint",
      "offset": [
        5859,
        5884
      ],
      "op": "JUMPDEST",
      "path": "7"
    },
    "5014": {
      "op": "POP"
    },
    "5015": {
      "fn": "ERC4973._mint",
      "offset": [
        5895,
        5914
      ],
      "op": "PUSH1",
      "path": "7",
      "statement": 77,
      "value": "0x40"
    },
    "5017": {
      "fn": "ERC4973._mint",
      "offset": [
        5895,
        5914
      ],
      "op": "MLOAD",
      "path": "7"
    },
    "5018": {
      "fn": "ERC4973._mint",
      "offset": [
        5906,
        5913
      ],
      "op": "DUP4",
      "path": "7"
    },
    "5019": {
      "fn": "ERC4973._mint",
      "offset": [
        5906,
        5913
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "5020": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5022": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5024": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5026": {
      "op": "SHL"
    },
    "5027": {
      "op": "SUB"
    },
    "5028": {
      "fn": "ERC4973._mint",
      "offset": [
        5895,
        5914
      ],
      "op": "DUP7",
      "path": "7"
    },
    "5029": {
      "fn": "ERC4973._mint",
      "offset": [
        5895,
        5914
      ],
      "op": "AND",
      "path": "7"
    },
    "5030": {
      "fn": "ERC4973._mint",
      "offset": [
        5895,
        5914
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "5031": {
      "fn": "ERC4973._mint",
      "offset": [
        5895,
        5914
      ],
      "op": "PUSH32",
      "path": "7",
      "value": "0xE9274A84B19E9428826DE6BAE8C48329354F8F0E73F771B97CAE2D9DCCD45A27"
    },
    "5064": {
      "fn": "ERC4973._mint",
      "offset": [
        5895,
        5914
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "5065": {
      "fn": "ERC4973._mint",
      "offset": [
        5895,
        5914
      ],
      "op": "PUSH1",
      "path": "7",
      "value": "0x0"
    },
    "5067": {
      "fn": "ERC4973._mint",
      "offset": [
        5895,
        5914
      ],
      "op": "SWAP1",
      "path": "7"
    },
    "5068": {
      "fn": "ERC4973._mint",
      "offset": [
        5895,
        5914
      ],
      "op": "LOG3",
      "path": "7"
    },
    "5069": {
      "op": "POP"
    },
    "5070": {
      "fn": "ERC4973._mint",
      "offset": [
        5927,
        5934
      ],
      "op": "SWAP1",
      "path": "7",
      "statement": 78
    },
    "5071": {
      "fn": "ERC4973._mint",
      "offset": [
        5927,
        5934
      ],
      "op": "SWAP3",
      "path": "7"
    },
    "5072": {
      "fn": "ERC4973._mint",
      "offset": [
        5632,
        5939
      ],
      "op": "SWAP2",
      "path": "7"
    },
    "5073": {
      "op": "POP"
    },
    "5074": {
      "op": "POP"
    },
    "5075": {
      "fn": "ERC4973._mint",
      "jump": "o",
      "offset": [
        5632,
        5939
      ],
      "op": "JUMP",
      "path": "7"
    },
    "5076": {
      "op": "JUMPDEST"
    },
    "5077": {
      "op": "POP"
    },
    "5078": {
      "op": "DUP1"
    },
    "5079": {
      "op": "SLOAD"
    },
    "5080": {
      "op": "PUSH2",
      "value": "0x13E0"
    },
    "5083": {
      "op": "SWAP1"
    },
    "5084": {
      "op": "PUSH2",
      "value": "0x177A"
    },
    "5087": {
      "jump": "i",
      "op": "JUMP"
    },
    "5088": {
      "op": "JUMPDEST"
    },
    "5089": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5091": {
      "op": "DUP3"
    },
    "5092": {
      "op": "SSTORE"
    },
    "5093": {
      "op": "DUP1"
    },
    "5094": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "5096": {
      "op": "LT"
    },
    "5097": {
      "op": "PUSH2",
      "value": "0x13F0"
    },
    "5100": {
      "op": "JUMPI"
    },
    "5101": {
      "op": "POP"
    },
    "5102": {
      "op": "POP"
    },
    "5103": {
      "jump": "o",
      "op": "JUMP"
    },
    "5104": {
      "op": "JUMPDEST"
    },
    "5105": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "5107": {
      "op": "ADD"
    },
    "5108": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5110": {
      "op": "SWAP1"
    },
    "5111": {
      "op": "DIV"
    },
    "5112": {
      "op": "SWAP1"
    },
    "5113": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5115": {
      "op": "MSTORE"
    },
    "5116": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5118": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5120": {
      "op": "KECCAK256"
    },
    "5121": {
      "op": "SWAP1"
    },
    "5122": {
      "op": "DUP2"
    },
    "5123": {
      "op": "ADD"
    },
    "5124": {
      "op": "SWAP1"
    },
    "5125": {
      "op": "PUSH2",
      "value": "0x600"
    },
    "5128": {
      "op": "SWAP2"
    },
    "5129": {
      "op": "SWAP1"
    },
    "5130": {
      "op": "JUMPDEST"
    },
    "5131": {
      "op": "DUP1"
    },
    "5132": {
      "op": "DUP3"
    },
    "5133": {
      "op": "GT"
    },
    "5134": {
      "op": "ISZERO"
    },
    "5135": {
      "op": "PUSH2",
      "value": "0x141E"
    },
    "5138": {
      "op": "JUMPI"
    },
    "5139": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5141": {
      "op": "DUP2"
    },
    "5142": {
      "op": "SSTORE"
    },
    "5143": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5145": {
      "op": "ADD"
    },
    "5146": {
      "op": "PUSH2",
      "value": "0x140A"
    },
    "5149": {
      "op": "JUMP"
    },
    "5150": {
      "op": "JUMPDEST"
    },
    "5151": {
      "op": "POP"
    },
    "5152": {
      "op": "SWAP1"
    },
    "5153": {
      "jump": "o",
      "op": "JUMP"
    },
    "5154": {
      "op": "JUMPDEST"
    },
    "5155": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5157": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5159": {
      "op": "DUP3"
    },
    "5160": {
      "op": "DUP5"
    },
    "5161": {
      "op": "SUB"
    },
    "5162": {
      "op": "SLT"
    },
    "5163": {
      "op": "ISZERO"
    },
    "5164": {
      "op": "PUSH2",
      "value": "0x1434"
    },
    "5167": {
      "op": "JUMPI"
    },
    "5168": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5170": {
      "op": "DUP1"
    },
    "5171": {
      "op": "REVERT"
    },
    "5172": {
      "op": "JUMPDEST"
    },
    "5173": {
      "op": "DUP2"
    },
    "5174": {
      "op": "CALLDATALOAD"
    },
    "5175": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5177": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5179": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "5181": {
      "op": "SHL"
    },
    "5182": {
      "op": "SUB"
    },
    "5183": {
      "op": "NOT"
    },
    "5184": {
      "op": "DUP2"
    },
    "5185": {
      "op": "AND"
    },
    "5186": {
      "op": "DUP2"
    },
    "5187": {
      "op": "EQ"
    },
    "5188": {
      "op": "PUSH2",
      "value": "0xA27"
    },
    "5191": {
      "op": "JUMPI"
    },
    "5192": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5194": {
      "op": "DUP1"
    },
    "5195": {
      "op": "REVERT"
    },
    "5196": {
      "op": "JUMPDEST"
    },
    "5197": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5199": {
      "op": "JUMPDEST"
    },
    "5200": {
      "op": "DUP4"
    },
    "5201": {
      "op": "DUP2"
    },
    "5202": {
      "op": "LT"
    },
    "5203": {
      "op": "ISZERO"
    },
    "5204": {
      "op": "PUSH2",
      "value": "0x1467"
    },
    "5207": {
      "op": "JUMPI"
    },
    "5208": {
      "op": "DUP2"
    },
    "5209": {
      "op": "DUP2"
    },
    "5210": {
      "op": "ADD"
    },
    "5211": {
      "op": "MLOAD"
    },
    "5212": {
      "op": "DUP4"
    },
    "5213": {
      "op": "DUP3"
    },
    "5214": {
      "op": "ADD"
    },
    "5215": {
      "op": "MSTORE"
    },
    "5216": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5218": {
      "op": "ADD"
    },
    "5219": {
      "op": "PUSH2",
      "value": "0x144F"
    },
    "5222": {
      "op": "JUMP"
    },
    "5223": {
      "op": "JUMPDEST"
    },
    "5224": {
      "op": "DUP4"
    },
    "5225": {
      "op": "DUP2"
    },
    "5226": {
      "op": "GT"
    },
    "5227": {
      "op": "ISZERO"
    },
    "5228": {
      "op": "PUSH2",
      "value": "0x1476"
    },
    "5231": {
      "op": "JUMPI"
    },
    "5232": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5234": {
      "op": "DUP5"
    },
    "5235": {
      "op": "DUP5"
    },
    "5236": {
      "op": "ADD"
    },
    "5237": {
      "op": "MSTORE"
    },
    "5238": {
      "op": "JUMPDEST"
    },
    "5239": {
      "op": "POP"
    },
    "5240": {
      "op": "POP"
    },
    "5241": {
      "op": "POP"
    },
    "5242": {
      "op": "POP"
    },
    "5243": {
      "jump": "o",
      "op": "JUMP"
    },
    "5244": {
      "op": "JUMPDEST"
    },
    "5245": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5247": {
      "op": "DUP2"
    },
    "5248": {
      "op": "MSTORE"
    },
    "5249": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5251": {
      "op": "DUP3"
    },
    "5252": {
      "op": "MLOAD"
    },
    "5253": {
      "op": "DUP1"
    },
    "5254": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5256": {
      "op": "DUP5"
    },
    "5257": {
      "op": "ADD"
    },
    "5258": {
      "op": "MSTORE"
    },
    "5259": {
      "op": "PUSH2",
      "value": "0x149B"
    },
    "5262": {
      "op": "DUP2"
    },
    "5263": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "5265": {
      "op": "DUP6"
    },
    "5266": {
      "op": "ADD"
    },
    "5267": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5269": {
      "op": "DUP8"
    },
    "5270": {
      "op": "ADD"
    },
    "5271": {
      "op": "PUSH2",
      "value": "0x144C"
    },
    "5274": {
      "jump": "i",
      "op": "JUMP"
    },
    "5275": {
      "op": "JUMPDEST"
    },
    "5276": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "5278": {
      "op": "ADD"
    },
    "5279": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "5281": {
      "op": "NOT"
    },
    "5282": {
      "op": "AND"
    },
    "5283": {
      "op": "SWAP2"
    },
    "5284": {
      "op": "SWAP1"
    },
    "5285": {
      "op": "SWAP2"
    },
    "5286": {
      "op": "ADD"
    },
    "5287": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "5289": {
      "op": "ADD"
    },
    "5290": {
      "op": "SWAP3"
    },
    "5291": {
      "op": "SWAP2"
    },
    "5292": {
      "op": "POP"
    },
    "5293": {
      "op": "POP"
    },
    "5294": {
      "jump": "o",
      "op": "JUMP"
    },
    "5295": {
      "op": "JUMPDEST"
    },
    "5296": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "5301": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "5303": {
      "op": "SHL"
    },
    "5304": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5306": {
      "op": "MSTORE"
    },
    "5307": {
      "op": "PUSH1",
      "value": "0x41"
    },
    "5309": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "5311": {
      "op": "MSTORE"
    },
    "5312": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "5314": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5316": {
      "op": "REVERT"
    },
    "5317": {
      "op": "JUMPDEST"
    },
    "5318": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5320": {
      "op": "DUP3"
    },
    "5321": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "5323": {
      "op": "DUP4"
    },
    "5324": {
      "op": "ADD"
    },
    "5325": {
      "op": "SLT"
    },
    "5326": {
      "op": "PUSH2",
      "value": "0x14D6"
    },
    "5329": {
      "op": "JUMPI"
    },
    "5330": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5332": {
      "op": "DUP1"
    },
    "5333": {
      "op": "REVERT"
    },
    "5334": {
      "op": "JUMPDEST"
    },
    "5335": {
      "op": "DUP2"
    },
    "5336": {
      "op": "CALLDATALOAD"
    },
    "5337": {
      "op": "PUSH8",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "5346": {
      "op": "DUP1"
    },
    "5347": {
      "op": "DUP3"
    },
    "5348": {
      "op": "GT"
    },
    "5349": {
      "op": "ISZERO"
    },
    "5350": {
      "op": "PUSH2",
      "value": "0x14F1"
    },
    "5353": {
      "op": "JUMPI"
    },
    "5354": {
      "op": "PUSH2",
      "value": "0x14F1"
    },
    "5357": {
      "op": "PUSH2",
      "value": "0x14AF"
    },
    "5360": {
      "jump": "i",
      "op": "JUMP"
    },
    "5361": {
      "op": "JUMPDEST"
    },
    "5362": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "5364": {
      "op": "MLOAD"
    },
    "5365": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "5367": {
      "op": "DUP4"
    },
    "5368": {
      "op": "ADD"
    },
    "5369": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "5371": {
      "op": "NOT"
    },
    "5372": {
      "op": "SWAP1"
    },
    "5373": {
      "op": "DUP2"
    },
    "5374": {
      "op": "AND"
    },
    "5375": {
      "op": "PUSH1",
      "value": "0x3F"
    },
    "5377": {
      "op": "ADD"
    },
    "5378": {
      "op": "AND"
    },
    "5379": {
      "op": "DUP2"
    },
    "5380": {
      "op": "ADD"
    },
    "5381": {
      "op": "SWAP1"
    },
    "5382": {
      "op": "DUP3"
    },
    "5383": {
      "op": "DUP3"
    },
    "5384": {
      "op": "GT"
    },
    "5385": {
      "op": "DUP2"
    },
    "5386": {
      "op": "DUP4"
    },
    "5387": {
      "op": "LT"
    },
    "5388": {
      "op": "OR"
    },
    "5389": {
      "op": "ISZERO"
    },
    "5390": {
      "op": "PUSH2",
      "value": "0x1519"
    },
    "5393": {
      "op": "JUMPI"
    },
    "5394": {
      "op": "PUSH2",
      "value": "0x1519"
    },
    "5397": {
      "op": "PUSH2",
      "value": "0x14AF"
    },
    "5400": {
      "jump": "i",
      "op": "JUMP"
    },
    "5401": {
      "op": "JUMPDEST"
    },
    "5402": {
      "op": "DUP2"
    },
    "5403": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "5405": {
      "op": "MSTORE"
    },
    "5406": {
      "op": "DUP4"
    },
    "5407": {
      "op": "DUP2"
    },
    "5408": {
      "op": "MSTORE"
    },
    "5409": {
      "op": "DUP7"
    },
    "5410": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5412": {
      "op": "DUP6"
    },
    "5413": {
      "op": "DUP9"
    },
    "5414": {
      "op": "ADD"
    },
    "5415": {
      "op": "ADD"
    },
    "5416": {
      "op": "GT"
    },
    "5417": {
      "op": "ISZERO"
    },
    "5418": {
      "op": "PUSH2",
      "value": "0x1532"
    },
    "5421": {
      "op": "JUMPI"
    },
    "5422": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5424": {
      "op": "DUP1"
    },
    "5425": {
      "op": "REVERT"
    },
    "5426": {
      "op": "JUMPDEST"
    },
    "5427": {
      "op": "DUP4"
    },
    "5428": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5430": {
      "op": "DUP8"
    },
    "5431": {
      "op": "ADD"
    },
    "5432": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5434": {
      "op": "DUP4"
    },
    "5435": {
      "op": "ADD"
    },
    "5436": {
      "op": "CALLDATACOPY"
    },
    "5437": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5439": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5441": {
      "op": "DUP6"
    },
    "5442": {
      "op": "DUP4"
    },
    "5443": {
      "op": "ADD"
    },
    "5444": {
      "op": "ADD"
    },
    "5445": {
      "op": "MSTORE"
    },
    "5446": {
      "op": "DUP1"
    },
    "5447": {
      "op": "SWAP5"
    },
    "5448": {
      "op": "POP"
    },
    "5449": {
      "op": "POP"
    },
    "5450": {
      "op": "POP"
    },
    "5451": {
      "op": "POP"
    },
    "5452": {
      "op": "POP"
    },
    "5453": {
      "op": "SWAP3"
    },
    "5454": {
      "op": "SWAP2"
    },
    "5455": {
      "op": "POP"
    },
    "5456": {
      "op": "POP"
    },
    "5457": {
      "jump": "o",
      "op": "JUMP"
    },
    "5458": {
      "op": "JUMPDEST"
    },
    "5459": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5461": {
      "op": "DUP1"
    },
    "5462": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5464": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "5466": {
      "op": "DUP5"
    },
    "5467": {
      "op": "DUP7"
    },
    "5468": {
      "op": "SUB"
    },
    "5469": {
      "op": "SLT"
    },
    "5470": {
      "op": "ISZERO"
    },
    "5471": {
      "op": "PUSH2",
      "value": "0x1567"
    },
    "5474": {
      "op": "JUMPI"
    },
    "5475": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5477": {
      "op": "DUP1"
    },
    "5478": {
      "op": "REVERT"
    },
    "5479": {
      "op": "JUMPDEST"
    },
    "5480": {
      "op": "DUP4"
    },
    "5481": {
      "op": "CALLDATALOAD"
    },
    "5482": {
      "op": "SWAP3"
    },
    "5483": {
      "op": "POP"
    },
    "5484": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5486": {
      "op": "DUP5"
    },
    "5487": {
      "op": "ADD"
    },
    "5488": {
      "op": "CALLDATALOAD"
    },
    "5489": {
      "op": "PUSH8",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "5498": {
      "op": "DUP2"
    },
    "5499": {
      "op": "GT"
    },
    "5500": {
      "op": "ISZERO"
    },
    "5501": {
      "op": "PUSH2",
      "value": "0x1585"
    },
    "5504": {
      "op": "JUMPI"
    },
    "5505": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5507": {
      "op": "DUP1"
    },
    "5508": {
      "op": "REVERT"
    },
    "5509": {
      "op": "JUMPDEST"
    },
    "5510": {
      "op": "PUSH2",
      "value": "0x1591"
    },
    "5513": {
      "op": "DUP7"
    },
    "5514": {
      "op": "DUP3"
    },
    "5515": {
      "op": "DUP8"
    },
    "5516": {
      "op": "ADD"
    },
    "5517": {
      "op": "PUSH2",
      "value": "0x14C5"
    },
    "5520": {
      "jump": "i",
      "op": "JUMP"
    },
    "5521": {
      "op": "JUMPDEST"
    },
    "5522": {
      "op": "SWAP3"
    },
    "5523": {
      "op": "POP"
    },
    "5524": {
      "op": "POP"
    },
    "5525": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "5527": {
      "op": "DUP5"
    },
    "5528": {
      "op": "ADD"
    },
    "5529": {
      "op": "CALLDATALOAD"
    },
    "5530": {
      "op": "SWAP1"
    },
    "5531": {
      "op": "POP"
    },
    "5532": {
      "op": "SWAP3"
    },
    "5533": {
      "op": "POP"
    },
    "5534": {
      "op": "SWAP3"
    },
    "5535": {
      "op": "POP"
    },
    "5536": {
      "op": "SWAP3"
    },
    "5537": {
      "jump": "o",
      "op": "JUMP"
    },
    "5538": {
      "op": "JUMPDEST"
    },
    "5539": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5541": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5543": {
      "op": "DUP3"
    },
    "5544": {
      "op": "DUP5"
    },
    "5545": {
      "op": "SUB"
    },
    "5546": {
      "op": "SLT"
    },
    "5547": {
      "op": "ISZERO"
    },
    "5548": {
      "op": "PUSH2",
      "value": "0x15B4"
    },
    "5551": {
      "op": "JUMPI"
    },
    "5552": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5554": {
      "op": "DUP1"
    },
    "5555": {
      "op": "REVERT"
    },
    "5556": {
      "op": "JUMPDEST"
    },
    "5557": {
      "op": "POP"
    },
    "5558": {
      "op": "CALLDATALOAD"
    },
    "5559": {
      "op": "SWAP2"
    },
    "5560": {
      "op": "SWAP1"
    },
    "5561": {
      "op": "POP"
    },
    "5562": {
      "jump": "o",
      "op": "JUMP"
    },
    "5563": {
      "op": "JUMPDEST"
    },
    "5564": {
      "op": "DUP1"
    },
    "5565": {
      "op": "CALLDATALOAD"
    },
    "5566": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5568": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5570": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5572": {
      "op": "SHL"
    },
    "5573": {
      "op": "SUB"
    },
    "5574": {
      "op": "DUP2"
    },
    "5575": {
      "op": "AND"
    },
    "5576": {
      "op": "DUP2"
    },
    "5577": {
      "op": "EQ"
    },
    "5578": {
      "op": "PUSH2",
      "value": "0x15D2"
    },
    "5581": {
      "op": "JUMPI"
    },
    "5582": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5584": {
      "op": "DUP1"
    },
    "5585": {
      "op": "REVERT"
    },
    "5586": {
      "op": "JUMPDEST"
    },
    "5587": {
      "op": "SWAP2"
    },
    "5588": {
      "op": "SWAP1"
    },
    "5589": {
      "op": "POP"
    },
    "5590": {
      "jump": "o",
      "op": "JUMP"
    },
    "5591": {
      "op": "JUMPDEST"
    },
    "5592": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5594": {
      "op": "DUP1"
    },
    "5595": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "5597": {
      "op": "DUP4"
    },
    "5598": {
      "op": "DUP6"
    },
    "5599": {
      "op": "SUB"
    },
    "5600": {
      "op": "SLT"
    },
    "5601": {
      "op": "ISZERO"
    },
    "5602": {
      "op": "PUSH2",
      "value": "0x15EA"
    },
    "5605": {
      "op": "JUMPI"
    },
    "5606": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5608": {
      "op": "DUP1"
    },
    "5609": {
      "op": "REVERT"
    },
    "5610": {
      "op": "JUMPDEST"
    },
    "5611": {
      "op": "PUSH2",
      "value": "0x15F3"
    },
    "5614": {
      "op": "DUP4"
    },
    "5615": {
      "op": "PUSH2",
      "value": "0x15BB"
    },
    "5618": {
      "jump": "i",
      "op": "JUMP"
    },
    "5619": {
      "op": "JUMPDEST"
    },
    "5620": {
      "op": "SWAP5"
    },
    "5621": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5623": {
      "op": "SWAP4"
    },
    "5624": {
      "op": "SWAP1"
    },
    "5625": {
      "op": "SWAP4"
    },
    "5626": {
      "op": "ADD"
    },
    "5627": {
      "op": "CALLDATALOAD"
    },
    "5628": {
      "op": "SWAP4"
    },
    "5629": {
      "op": "POP"
    },
    "5630": {
      "op": "POP"
    },
    "5631": {
      "op": "POP"
    },
    "5632": {
      "jump": "o",
      "op": "JUMP"
    },
    "5633": {
      "op": "JUMPDEST"
    },
    "5634": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5636": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5638": {
      "op": "DUP3"
    },
    "5639": {
      "op": "DUP5"
    },
    "5640": {
      "op": "SUB"
    },
    "5641": {
      "op": "SLT"
    },
    "5642": {
      "op": "ISZERO"
    },
    "5643": {
      "op": "PUSH2",
      "value": "0x1613"
    },
    "5646": {
      "op": "JUMPI"
    },
    "5647": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5649": {
      "op": "DUP1"
    },
    "5650": {
      "op": "REVERT"
    },
    "5651": {
      "op": "JUMPDEST"
    },
    "5652": {
      "op": "PUSH2",
      "value": "0xA27"
    },
    "5655": {
      "op": "DUP3"
    },
    "5656": {
      "op": "PUSH2",
      "value": "0x15BB"
    },
    "5659": {
      "jump": "i",
      "op": "JUMP"
    },
    "5660": {
      "op": "JUMPDEST"
    },
    "5661": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5663": {
      "op": "DUP1"
    },
    "5664": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "5666": {
      "op": "DUP4"
    },
    "5667": {
      "op": "DUP6"
    },
    "5668": {
      "op": "SUB"
    },
    "5669": {
      "op": "SLT"
    },
    "5670": {
      "op": "ISZERO"
    },
    "5671": {
      "op": "PUSH2",
      "value": "0x162F"
    },
    "5674": {
      "op": "JUMPI"
    },
    "5675": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5677": {
      "op": "DUP1"
    },
    "5678": {
      "op": "REVERT"
    },
    "5679": {
      "op": "JUMPDEST"
    },
    "5680": {
      "op": "PUSH2",
      "value": "0x1638"
    },
    "5683": {
      "op": "DUP4"
    },
    "5684": {
      "op": "PUSH2",
      "value": "0x15BB"
    },
    "5687": {
      "jump": "i",
      "op": "JUMP"
    },
    "5688": {
      "op": "JUMPDEST"
    },
    "5689": {
      "op": "SWAP2"
    },
    "5690": {
      "op": "POP"
    },
    "5691": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5693": {
      "op": "DUP4"
    },
    "5694": {
      "op": "ADD"
    },
    "5695": {
      "op": "CALLDATALOAD"
    },
    "5696": {
      "op": "PUSH8",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "5705": {
      "op": "DUP2"
    },
    "5706": {
      "op": "GT"
    },
    "5707": {
      "op": "ISZERO"
    },
    "5708": {
      "op": "PUSH2",
      "value": "0x1654"
    },
    "5711": {
      "op": "JUMPI"
    },
    "5712": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5714": {
      "op": "DUP1"
    },
    "5715": {
      "op": "REVERT"
    },
    "5716": {
      "op": "JUMPDEST"
    },
    "5717": {
      "op": "PUSH2",
      "value": "0x1660"
    },
    "5720": {
      "op": "DUP6"
    },
    "5721": {
      "op": "DUP3"
    },
    "5722": {
      "op": "DUP7"
    },
    "5723": {
      "op": "ADD"
    },
    "5724": {
      "op": "PUSH2",
      "value": "0x14C5"
    },
    "5727": {
      "jump": "i",
      "op": "JUMP"
    },
    "5728": {
      "op": "JUMPDEST"
    },
    "5729": {
      "op": "SWAP2"
    },
    "5730": {
      "op": "POP"
    },
    "5731": {
      "op": "POP"
    },
    "5732": {
      "op": "SWAP3"
    },
    "5733": {
      "op": "POP"
    },
    "5734": {
      "op": "SWAP3"
    },
    "5735": {
      "op": "SWAP1"
    },
    "5736": {
      "op": "POP"
    },
    "5737": {
      "jump": "o",
      "op": "JUMP"
    },
    "5738": {
      "op": "JUMPDEST"
    },
    "5739": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5741": {
      "op": "DUP1"
    },
    "5742": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5744": {
      "op": "DUP1"
    },
    "5745": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5747": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5749": {
      "op": "DUP7"
    },
    "5750": {
      "op": "DUP9"
    },
    "5751": {
      "op": "SUB"
    },
    "5752": {
      "op": "SLT"
    },
    "5753": {
      "op": "ISZERO"
    },
    "5754": {
      "op": "PUSH2",
      "value": "0x1682"
    },
    "5757": {
      "op": "JUMPI"
    },
    "5758": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5760": {
      "op": "DUP1"
    },
    "5761": {
      "op": "REVERT"
    },
    "5762": {
      "op": "JUMPDEST"
    },
    "5763": {
      "op": "PUSH2",
      "value": "0x168B"
    },
    "5766": {
      "op": "DUP7"
    },
    "5767": {
      "op": "PUSH2",
      "value": "0x15BB"
    },
    "5770": {
      "jump": "i",
      "op": "JUMP"
    },
    "5771": {
      "op": "JUMPDEST"
    },
    "5772": {
      "op": "SWAP5"
    },
    "5773": {
      "op": "POP"
    },
    "5774": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5776": {
      "op": "DUP7"
    },
    "5777": {
      "op": "ADD"
    },
    "5778": {
      "op": "CALLDATALOAD"
    },
    "5779": {
      "op": "SWAP4"
    },
    "5780": {
      "op": "POP"
    },
    "5781": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "5783": {
      "op": "DUP7"
    },
    "5784": {
      "op": "ADD"
    },
    "5785": {
      "op": "CALLDATALOAD"
    },
    "5786": {
      "op": "PUSH8",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "5795": {
      "op": "DUP1"
    },
    "5796": {
      "op": "DUP3"
    },
    "5797": {
      "op": "GT"
    },
    "5798": {
      "op": "ISZERO"
    },
    "5799": {
      "op": "PUSH2",
      "value": "0x16AF"
    },
    "5802": {
      "op": "JUMPI"
    },
    "5803": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5805": {
      "op": "DUP1"
    },
    "5806": {
      "op": "REVERT"
    },
    "5807": {
      "op": "JUMPDEST"
    },
    "5808": {
      "op": "PUSH2",
      "value": "0x16BB"
    },
    "5811": {
      "op": "DUP10"
    },
    "5812": {
      "op": "DUP4"
    },
    "5813": {
      "op": "DUP11"
    },
    "5814": {
      "op": "ADD"
    },
    "5815": {
      "op": "PUSH2",
      "value": "0x14C5"
    },
    "5818": {
      "jump": "i",
      "op": "JUMP"
    },
    "5819": {
      "op": "JUMPDEST"
    },
    "5820": {
      "op": "SWAP5"
    },
    "5821": {
      "op": "POP"
    },
    "5822": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "5824": {
      "op": "DUP9"
    },
    "5825": {
      "op": "ADD"
    },
    "5826": {
      "op": "CALLDATALOAD"
    },
    "5827": {
      "op": "SWAP4"
    },
    "5828": {
      "op": "POP"
    },
    "5829": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "5831": {
      "op": "DUP9"
    },
    "5832": {
      "op": "ADD"
    },
    "5833": {
      "op": "CALLDATALOAD"
    },
    "5834": {
      "op": "SWAP2"
    },
    "5835": {
      "op": "POP"
    },
    "5836": {
      "op": "DUP1"
    },
    "5837": {
      "op": "DUP3"
    },
    "5838": {
      "op": "GT"
    },
    "5839": {
      "op": "ISZERO"
    },
    "5840": {
      "op": "PUSH2",
      "value": "0x16D8"
    },
    "5843": {
      "op": "JUMPI"
    },
    "5844": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5846": {
      "op": "DUP1"
    },
    "5847": {
      "op": "REVERT"
    },
    "5848": {
      "op": "JUMPDEST"
    },
    "5849": {
      "op": "POP"
    },
    "5850": {
      "op": "PUSH2",
      "value": "0x16E5"
    },
    "5853": {
      "op": "DUP9"
    },
    "5854": {
      "op": "DUP3"
    },
    "5855": {
      "op": "DUP10"
    },
    "5856": {
      "op": "ADD"
    },
    "5857": {
      "op": "PUSH2",
      "value": "0x14C5"
    },
    "5860": {
      "jump": "i",
      "op": "JUMP"
    },
    "5861": {
      "op": "JUMPDEST"
    },
    "5862": {
      "op": "SWAP2"
    },
    "5863": {
      "op": "POP"
    },
    "5864": {
      "op": "POP"
    },
    "5865": {
      "op": "SWAP3"
    },
    "5866": {
      "op": "SWAP6"
    },
    "5867": {
      "op": "POP"
    },
    "5868": {
      "op": "SWAP3"
    },
    "5869": {
      "op": "SWAP6"
    },
    "5870": {
      "op": "SWAP1"
    },
    "5871": {
      "op": "SWAP4"
    },
    "5872": {
      "op": "POP"
    },
    "5873": {
      "jump": "o",
      "op": "JUMP"
    },
    "5874": {
      "op": "JUMPDEST"
    },
    "5875": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5877": {
      "op": "DUP1"
    },
    "5878": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "5880": {
      "op": "DUP4"
    },
    "5881": {
      "op": "DUP6"
    },
    "5882": {
      "op": "SUB"
    },
    "5883": {
      "op": "SLT"
    },
    "5884": {
      "op": "ISZERO"
    },
    "5885": {
      "op": "PUSH2",
      "value": "0x1705"
    },
    "5888": {
      "op": "JUMPI"
    },
    "5889": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5891": {
      "op": "DUP1"
    },
    "5892": {
      "op": "REVERT"
    },
    "5893": {
      "op": "JUMPDEST"
    },
    "5894": {
      "op": "DUP3"
    },
    "5895": {
      "op": "CALLDATALOAD"
    },
    "5896": {
      "op": "SWAP2"
    },
    "5897": {
      "op": "POP"
    },
    "5898": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5900": {
      "op": "DUP4"
    },
    "5901": {
      "op": "ADD"
    },
    "5902": {
      "op": "CALLDATALOAD"
    },
    "5903": {
      "op": "PUSH8",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "5912": {
      "op": "DUP2"
    },
    "5913": {
      "op": "GT"
    },
    "5914": {
      "op": "ISZERO"
    },
    "5915": {
      "op": "PUSH2",
      "value": "0x1654"
    },
    "5918": {
      "op": "JUMPI"
    },
    "5919": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5921": {
      "op": "DUP1"
    },
    "5922": {
      "op": "REVERT"
    },
    "5923": {
      "op": "JUMPDEST"
    },
    "5924": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5926": {
      "op": "DUP1"
    },
    "5927": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5929": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "5931": {
      "op": "DUP5"
    },
    "5932": {
      "op": "DUP7"
    },
    "5933": {
      "op": "SUB"
    },
    "5934": {
      "op": "SLT"
    },
    "5935": {
      "op": "ISZERO"
    },
    "5936": {
      "op": "PUSH2",
      "value": "0x1738"
    },
    "5939": {
      "op": "JUMPI"
    },
    "5940": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5942": {
      "op": "DUP1"
    },
    "5943": {
      "op": "REVERT"
    },
    "5944": {
      "op": "JUMPDEST"
    },
    "5945": {
      "op": "PUSH2",
      "value": "0x1741"
    },
    "5948": {
      "op": "DUP5"
    },
    "5949": {
      "op": "PUSH2",
      "value": "0x15BB"
    },
    "5952": {
      "jump": "i",
      "op": "JUMP"
    },
    "5953": {
      "op": "JUMPDEST"
    },
    "5954": {
      "op": "SWAP3"
    },
    "5955": {
      "op": "POP"
    },
    "5956": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5958": {
      "op": "DUP5"
    },
    "5959": {
      "op": "ADD"
    },
    "5960": {
      "op": "CALLDATALOAD"
    },
    "5961": {
      "op": "SWAP2"
    },
    "5962": {
      "op": "POP"
    },
    "5963": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "5965": {
      "op": "DUP5"
    },
    "5966": {
      "op": "ADD"
    },
    "5967": {
      "op": "CALLDATALOAD"
    },
    "5968": {
      "op": "PUSH8",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "5977": {
      "op": "DUP2"
    },
    "5978": {
      "op": "GT"
    },
    "5979": {
      "op": "ISZERO"
    },
    "5980": {
      "op": "PUSH2",
      "value": "0x1764"
    },
    "5983": {
      "op": "JUMPI"
    },
    "5984": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5986": {
      "op": "DUP1"
    },
    "5987": {
      "op": "REVERT"
    },
    "5988": {
      "op": "JUMPDEST"
    },
    "5989": {
      "op": "PUSH2",
      "value": "0x1770"
    },
    "5992": {
      "op": "DUP7"
    },
    "5993": {
      "op": "DUP3"
    },
    "5994": {
      "op": "DUP8"
    },
    "5995": {
      "op": "ADD"
    },
    "5996": {
      "op": "PUSH2",
      "value": "0x14C5"
    },
    "5999": {
      "jump": "i",
      "op": "JUMP"
    },
    "6000": {
      "op": "JUMPDEST"
    },
    "6001": {
      "op": "SWAP2"
    },
    "6002": {
      "op": "POP"
    },
    "6003": {
      "op": "POP"
    },
    "6004": {
      "op": "SWAP3"
    },
    "6005": {
      "op": "POP"
    },
    "6006": {
      "op": "SWAP3"
    },
    "6007": {
      "op": "POP"
    },
    "6008": {
      "op": "SWAP3"
    },
    "6009": {
      "jump": "o",
      "op": "JUMP"
    },
    "6010": {
      "op": "JUMPDEST"
    },
    "6011": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6013": {
      "op": "DUP2"
    },
    "6014": {
      "op": "DUP2"
    },
    "6015": {
      "op": "SHR"
    },
    "6016": {
      "op": "SWAP1"
    },
    "6017": {
      "op": "DUP3"
    },
    "6018": {
      "op": "AND"
    },
    "6019": {
      "op": "DUP1"
    },
    "6020": {
      "op": "PUSH2",
      "value": "0x178E"
    },
    "6023": {
      "op": "JUMPI"
    },
    "6024": {
      "op": "PUSH1",
      "value": "0x7F"
    },
    "6026": {
      "op": "DUP3"
    },
    "6027": {
      "op": "AND"
    },
    "6028": {
      "op": "SWAP2"
    },
    "6029": {
      "op": "POP"
    },
    "6030": {
      "op": "JUMPDEST"
    },
    "6031": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "6033": {
      "op": "DUP3"
    },
    "6034": {
      "op": "LT"
    },
    "6035": {
      "op": "DUP2"
    },
    "6036": {
      "op": "SUB"
    },
    "6037": {
      "op": "PUSH2",
      "value": "0x17AE"
    },
    "6040": {
      "op": "JUMPI"
    },
    "6041": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "6046": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "6048": {
      "op": "SHL"
    },
    "6049": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "6051": {
      "op": "MSTORE"
    },
    "6052": {
      "op": "PUSH1",
      "value": "0x22"
    },
    "6054": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "6056": {
      "op": "MSTORE"
    },
    "6057": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "6059": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "6061": {
      "op": "REVERT"
    },
    "6062": {
      "op": "JUMPDEST"
    },
    "6063": {
      "op": "POP"
    },
    "6064": {
      "op": "SWAP2"
    },
    "6065": {
      "op": "SWAP1"
    },
    "6066": {
      "op": "POP"
    },
    "6067": {
      "jump": "o",
      "op": "JUMP"
    },
    "6068": {
      "op": "JUMPDEST"
    },
    "6069": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "6071": {
      "op": "DUP4"
    },
    "6072": {
      "op": "MLOAD"
    },
    "6073": {
      "op": "PUSH2",
      "value": "0x17C6"
    },
    "6076": {
      "op": "DUP2"
    },
    "6077": {
      "op": "DUP5"
    },
    "6078": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "6080": {
      "op": "DUP9"
    },
    "6081": {
      "op": "ADD"
    },
    "6082": {
      "op": "PUSH2",
      "value": "0x144C"
    },
    "6085": {
      "jump": "i",
      "op": "JUMP"
    },
    "6086": {
      "op": "JUMPDEST"
    },
    "6087": {
      "op": "DUP4"
    },
    "6088": {
      "op": "MLOAD"
    },
    "6089": {
      "op": "SWAP1"
    },
    "6090": {
      "op": "DUP4"
    },
    "6091": {
      "op": "ADD"
    },
    "6092": {
      "op": "SWAP1"
    },
    "6093": {
      "op": "PUSH2",
      "value": "0x17DA"
    },
    "6096": {
      "op": "DUP2"
    },
    "6097": {
      "op": "DUP4"
    },
    "6098": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "6100": {
      "op": "DUP9"
    },
    "6101": {
      "op": "ADD"
    },
    "6102": {
      "op": "PUSH2",
      "value": "0x144C"
    },
    "6105": {
      "jump": "i",
      "op": "JUMP"
    },
    "6106": {
      "op": "JUMPDEST"
    },
    "6107": {
      "op": "ADD"
    },
    "6108": {
      "op": "SWAP5"
    },
    "6109": {
      "op": "SWAP4"
    },
    "6110": {
      "op": "POP"
    },
    "6111": {
      "op": "POP"
    },
    "6112": {
      "op": "POP"
    },
    "6113": {
      "op": "POP"
    },
    "6114": {
      "jump": "o",
      "op": "JUMP"
    },
    "6115": {
      "op": "JUMPDEST"
    },
    "6116": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "6121": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "6123": {
      "op": "SHL"
    },
    "6124": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "6126": {
      "op": "MSTORE"
    },
    "6127": {
      "op": "PUSH1",
      "value": "0x11"
    },
    "6129": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "6131": {
      "op": "MSTORE"
    },
    "6132": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "6134": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "6136": {
      "op": "REVERT"
    },
    "6137": {
      "op": "JUMPDEST"
    },
    "6138": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "6140": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6142": {
      "op": "DUP3"
    },
    "6143": {
      "op": "ADD"
    },
    "6144": {
      "op": "PUSH2",
      "value": "0x180B"
    },
    "6147": {
      "op": "JUMPI"
    },
    "6148": {
      "op": "PUSH2",
      "value": "0x180B"
    },
    "6151": {
      "op": "PUSH2",
      "value": "0x17E3"
    },
    "6154": {
      "jump": "i",
      "op": "JUMP"
    },
    "6155": {
      "op": "JUMPDEST"
    },
    "6156": {
      "op": "POP"
    },
    "6157": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6159": {
      "op": "ADD"
    },
    "6160": {
      "op": "SWAP1"
    },
    "6161": {
      "jump": "o",
      "op": "JUMP"
    },
    "6162": {
      "op": "JUMPDEST"
    },
    "6163": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "6168": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "6170": {
      "op": "SHL"
    },
    "6171": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "6173": {
      "op": "MSTORE"
    },
    "6174": {
      "op": "PUSH1",
      "value": "0x12"
    },
    "6176": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "6178": {
      "op": "MSTORE"
    },
    "6179": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "6181": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "6183": {
      "op": "REVERT"
    },
    "6184": {
      "op": "JUMPDEST"
    },
    "6185": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "6187": {
      "op": "DUP3"
    },
    "6188": {
      "op": "PUSH2",
      "value": "0x1837"
    },
    "6191": {
      "op": "JUMPI"
    },
    "6192": {
      "op": "PUSH2",
      "value": "0x1837"
    },
    "6195": {
      "op": "PUSH2",
      "value": "0x1812"
    },
    "6198": {
      "jump": "i",
      "op": "JUMP"
    },
    "6199": {
      "op": "JUMPDEST"
    },
    "6200": {
      "op": "POP"
    },
    "6201": {
      "op": "DIV"
    },
    "6202": {
      "op": "SWAP1"
    },
    "6203": {
      "jump": "o",
      "op": "JUMP"
    },
    "6204": {
      "op": "JUMPDEST"
    },
    "6205": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "6207": {
      "op": "DUP3"
    },
    "6208": {
      "op": "DUP3"
    },
    "6209": {
      "op": "LT"
    },
    "6210": {
      "op": "ISZERO"
    },
    "6211": {
      "op": "PUSH2",
      "value": "0x184E"
    },
    "6214": {
      "op": "JUMPI"
    },
    "6215": {
      "op": "PUSH2",
      "value": "0x184E"
    },
    "6218": {
      "op": "PUSH2",
      "value": "0x17E3"
    },
    "6221": {
      "jump": "i",
      "op": "JUMP"
    },
    "6222": {
      "op": "JUMPDEST"
    },
    "6223": {
      "op": "POP"
    },
    "6224": {
      "op": "SUB"
    },
    "6225": {
      "op": "SWAP1"
    },
    "6226": {
      "jump": "o",
      "op": "JUMP"
    },
    "6227": {
      "op": "JUMPDEST"
    },
    "6228": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "6230": {
      "op": "DUP3"
    },
    "6231": {
      "op": "PUSH2",
      "value": "0x1862"
    },
    "6234": {
      "op": "JUMPI"
    },
    "6235": {
      "op": "PUSH2",
      "value": "0x1862"
    },
    "6238": {
      "op": "PUSH2",
      "value": "0x1812"
    },
    "6241": {
      "jump": "i",
      "op": "JUMP"
    },
    "6242": {
      "op": "JUMPDEST"
    },
    "6243": {
      "op": "POP"
    },
    "6244": {
      "op": "MOD"
    },
    "6245": {
      "op": "SWAP1"
    },
    "6246": {
      "jump": "o",
      "op": "JUMP"
    },
    "6247": {
      "op": "JUMPDEST"
    },
    "6248": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "6250": {
      "op": "DUP3"
    },
    "6251": {
      "op": "NOT"
    },
    "6252": {
      "op": "DUP3"
    },
    "6253": {
      "op": "GT"
    },
    "6254": {
      "op": "ISZERO"
    },
    "6255": {
      "op": "PUSH2",
      "value": "0x187A"
    },
    "6258": {
      "op": "JUMPI"
    },
    "6259": {
      "op": "PUSH2",
      "value": "0x187A"
    },
    "6262": {
      "op": "PUSH2",
      "value": "0x17E3"
    },
    "6265": {
      "jump": "i",
      "op": "JUMP"
    },
    "6266": {
      "op": "JUMPDEST"
    },
    "6267": {
      "op": "POP"
    },
    "6268": {
      "op": "ADD"
    },
    "6269": {
      "op": "SWAP1"
    },
    "6270": {
      "jump": "o",
      "op": "JUMP"
    },
    "6271": {
      "op": "JUMPDEST"
    },
    "6272": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "6277": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "6279": {
      "op": "SHL"
    },
    "6280": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "6282": {
      "op": "MSTORE"
    },
    "6283": {
      "op": "PUSH1",
      "value": "0x32"
    },
    "6285": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "6287": {
      "op": "MSTORE"
    },
    "6288": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "6290": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "6292": {
      "op": "REVERT"
    },
    "6293": {
      "op": "JUMPDEST"
    },
    "6294": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "6296": {
      "op": "DUP3"
    },
    "6297": {
      "op": "GT"
    },
    "6298": {
      "op": "ISZERO"
    },
    "6299": {
      "op": "PUSH2",
      "value": "0x780"
    },
    "6302": {
      "op": "JUMPI"
    },
    "6303": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "6305": {
      "op": "DUP2"
    },
    "6306": {
      "op": "DUP2"
    },
    "6307": {
      "op": "MSTORE"
    },
    "6308": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "6310": {
      "op": "DUP2"
    },
    "6311": {
      "op": "KECCAK256"
    },
    "6312": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "6314": {
      "op": "DUP6"
    },
    "6315": {
      "op": "ADD"
    },
    "6316": {
      "op": "PUSH1",
      "value": "0x5"
    },
    "6318": {
      "op": "SHR"
    },
    "6319": {
      "op": "DUP2"
    },
    "6320": {
      "op": "ADD"
    },
    "6321": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "6323": {
      "op": "DUP7"
    },
    "6324": {
      "op": "LT"
    },
    "6325": {
      "op": "ISZERO"
    },
    "6326": {
      "op": "PUSH2",
      "value": "0x18BC"
    },
    "6329": {
      "op": "JUMPI"
    },
    "6330": {
      "op": "POP"
    },
    "6331": {
      "op": "DUP1"
    },
    "6332": {
      "op": "JUMPDEST"
    },
    "6333": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "6335": {
      "op": "DUP6"
    },
    "6336": {
      "op": "ADD"
    },
    "6337": {
      "op": "PUSH1",
      "value": "0x5"
    },
    "6339": {
      "op": "SHR"
    },
    "6340": {
      "op": "DUP3"
    },
    "6341": {
      "op": "ADD"
    },
    "6342": {
      "op": "SWAP2"
    },
    "6343": {
      "op": "POP"
    },
    "6344": {
      "op": "JUMPDEST"
    },
    "6345": {
      "op": "DUP2"
    },
    "6346": {
      "op": "DUP2"
    },
    "6347": {
      "op": "LT"
    },
    "6348": {
      "op": "ISZERO"
    },
    "6349": {
      "op": "PUSH2",
      "value": "0x18DB"
    },
    "6352": {
      "op": "JUMPI"
    },
    "6353": {
      "op": "DUP3"
    },
    "6354": {
      "op": "DUP2"
    },
    "6355": {
      "op": "SSTORE"
    },
    "6356": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6358": {
      "op": "ADD"
    },
    "6359": {
      "op": "PUSH2",
      "value": "0x18C8"
    },
    "6362": {
      "op": "JUMP"
    },
    "6363": {
      "op": "JUMPDEST"
    },
    "6364": {
      "op": "POP"
    },
    "6365": {
      "op": "POP"
    },
    "6366": {
      "op": "POP"
    },
    "6367": {
      "op": "POP"
    },
    "6368": {
      "op": "POP"
    },
    "6369": {
      "op": "POP"
    },
    "6370": {
      "jump": "o",
      "op": "JUMP"
    },
    "6371": {
      "op": "JUMPDEST"
    },
    "6372": {
      "op": "DUP2"
    },
    "6373": {
      "op": "MLOAD"
    },
    "6374": {
      "op": "PUSH8",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "6383": {
      "op": "DUP2"
    },
    "6384": {
      "op": "GT"
    },
    "6385": {
      "op": "ISZERO"
    },
    "6386": {
      "op": "PUSH2",
      "value": "0x18FD"
    },
    "6389": {
      "op": "JUMPI"
    },
    "6390": {
      "op": "PUSH2",
      "value": "0x18FD"
    },
    "6393": {
      "op": "PUSH2",
      "value": "0x14AF"
    },
    "6396": {
      "jump": "i",
      "op": "JUMP"
    },
    "6397": {
      "op": "JUMPDEST"
    },
    "6398": {
      "op": "PUSH2",
      "value": "0x1911"
    },
    "6401": {
      "op": "DUP2"
    },
    "6402": {
      "op": "PUSH2",
      "value": "0x190B"
    },
    "6405": {
      "op": "DUP5"
    },
    "6406": {
      "op": "SLOAD"
    },
    "6407": {
      "op": "PUSH2",
      "value": "0x177A"
    },
    "6410": {
      "jump": "i",
      "op": "JUMP"
    },
    "6411": {
      "op": "JUMPDEST"
    },
    "6412": {
      "op": "DUP5"
    },
    "6413": {
      "op": "PUSH2",
      "value": "0x1895"
    },
    "6416": {
      "jump": "i",
      "op": "JUMP"
    },
    "6417": {
      "op": "JUMPDEST"
    },
    "6418": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "6420": {
      "op": "DUP1"
    },
    "6421": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "6423": {
      "op": "DUP4"
    },
    "6424": {
      "op": "GT"
    },
    "6425": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6427": {
      "op": "DUP2"
    },
    "6428": {
      "op": "EQ"
    },
    "6429": {
      "op": "PUSH2",
      "value": "0x1946"
    },
    "6432": {
      "op": "JUMPI"
    },
    "6433": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "6435": {
      "op": "DUP5"
    },
    "6436": {
      "op": "ISZERO"
    },
    "6437": {
      "op": "PUSH2",
      "value": "0x192E"
    },
    "6440": {
      "op": "JUMPI"
    },
    "6441": {
      "op": "POP"
    },
    "6442": {
      "op": "DUP6"
    },
    "6443": {
      "op": "DUP4"
    },
    "6444": {
      "op": "ADD"
    },
    "6445": {
      "op": "MLOAD"
    },
    "6446": {
      "op": "JUMPDEST"
    },
    "6447": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "6449": {
      "op": "NOT"
    },
    "6450": {
      "op": "PUSH1",
      "value": "0x3"
    },
    "6452": {
      "op": "DUP7"
    },
    "6453": {
      "op": "SWAP1"
    },
    "6454": {
      "op": "SHL"
    },
    "6455": {
      "op": "SHR"
    },
    "6456": {
      "op": "NOT"
    },
    "6457": {
      "op": "AND"
    },
    "6458": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6460": {
      "op": "DUP6"
    },
    "6461": {
      "op": "SWAP1"
    },
    "6462": {
      "op": "SHL"
    },
    "6463": {
      "op": "OR"
    },
    "6464": {
      "op": "DUP6"
    },
    "6465": {
      "op": "SSTORE"
    },
    "6466": {
      "op": "PUSH2",
      "value": "0x18DB"
    },
    "6469": {
      "op": "JUMP"
    },
    "6470": {
      "op": "JUMPDEST"
    },
    "6471": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "6473": {
      "op": "DUP6"
    },
    "6474": {
      "op": "DUP2"
    },
    "6475": {
      "op": "MSTORE"
    },
    "6476": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "6478": {
      "op": "DUP2"
    },
    "6479": {
      "op": "KECCAK256"
    },
    "6480": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "6482": {
      "op": "NOT"
    },
    "6483": {
      "op": "DUP7"
    },
    "6484": {
      "op": "AND"
    },
    "6485": {
      "op": "SWAP2"
    },
    "6486": {
      "op": "JUMPDEST"
    },
    "6487": {
      "op": "DUP3"
    },
    "6488": {
      "op": "DUP2"
    },
    "6489": {
      "op": "LT"
    },
    "6490": {
      "op": "ISZERO"
    },
    "6491": {
      "op": "PUSH2",
      "value": "0x1975"
    },
    "6494": {
      "op": "JUMPI"
    },
    "6495": {
      "op": "DUP9"
    },
    "6496": {
      "op": "DUP7"
    },
    "6497": {
      "op": "ADD"
    },
    "6498": {
      "op": "MLOAD"
    },
    "6499": {
      "op": "DUP3"
    },
    "6500": {
      "op": "SSTORE"
    },
    "6501": {
      "op": "SWAP5"
    },
    "6502": {
      "op": "DUP5"
    },
    "6503": {
      "op": "ADD"
    },
    "6504": {
      "op": "SWAP5"
    },
    "6505": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6507": {
      "op": "SWAP1"
    },
    "6508": {
      "op": "SWAP2"
    },
    "6509": {
      "op": "ADD"
    },
    "6510": {
      "op": "SWAP1"
    },
    "6511": {
      "op": "DUP5"
    },
    "6512": {
      "op": "ADD"
    },
    "6513": {
      "op": "PUSH2",
      "value": "0x1956"
    },
    "6516": {
      "op": "JUMP"
    },
    "6517": {
      "op": "JUMPDEST"
    },
    "6518": {
      "op": "POP"
    },
    "6519": {
      "op": "DUP6"
    },
    "6520": {
      "op": "DUP3"
    },
    "6521": {
      "op": "LT"
    },
    "6522": {
      "op": "ISZERO"
    },
    "6523": {
      "op": "PUSH2",
      "value": "0x1993"
    },
    "6526": {
      "op": "JUMPI"
    },
    "6527": {
      "op": "DUP8"
    },
    "6528": {
      "op": "DUP6"
    },
    "6529": {
      "op": "ADD"
    },
    "6530": {
      "op": "MLOAD"
    },
    "6531": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "6533": {
      "op": "NOT"
    },
    "6534": {
      "op": "PUSH1",
      "value": "0x3"
    },
    "6536": {
      "op": "DUP9"
    },
    "6537": {
      "op": "SWAP1"
    },
    "6538": {
      "op": "SHL"
    },
    "6539": {
      "op": "PUSH1",
      "value": "0xF8"
    },
    "6541": {
      "op": "AND"
    },
    "6542": {
      "op": "SHR"
    },
    "6543": {
      "op": "NOT"
    },
    "6544": {
      "op": "AND"
    },
    "6545": {
      "op": "DUP2"
    },
    "6546": {
      "op": "SSTORE"
    },
    "6547": {
      "op": "JUMPDEST"
    },
    "6548": {
      "op": "POP"
    },
    "6549": {
      "op": "POP"
    },
    "6550": {
      "op": "POP"
    },
    "6551": {
      "op": "POP"
    },
    "6552": {
      "op": "POP"
    },
    "6553": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6555": {
      "op": "SWAP1"
    },
    "6556": {
      "op": "DUP2"
    },
    "6557": {
      "op": "SHL"
    },
    "6558": {
      "op": "ADD"
    },
    "6559": {
      "op": "SWAP1"
    },
    "6560": {
      "op": "SSTORE"
    },
    "6561": {
      "op": "POP"
    },
    "6562": {
      "jump": "o",
      "op": "JUMP"
    }
  },
  "sha1": "b4c12e1c323722af2d784fda50cc880eef6d7a9e",
  "source": "// SPDX-License-Identifier: GPL-3.0\n\n///  _____     ______     ______     ______     ______     ______     _____    \n/// /\\  __-.  /\\  __ \\   /\\  ___\\   /\\  ___\\   /\\  == \\   /\\  ___\\   /\\  __-.  \n/// \\ \\ \\/\\ \\ \\ \\  __ \\  \\ \\ \\____  \\ \\ \\____  \\ \\  __<   \\ \\  __\\   \\ \\ \\/\\ \\ \n///  \\ \\____-  \\ \\_\\ \\_\\  \\ \\_____\\  \\ \\_____\\  \\ \\_\\ \\_\\  \\ \\_____\\  \\ \\____- \n///   \\/____/   \\/_/\\/_/   \\/_____/   \\/_____/   \\/_/ /_/   \\/_____/   \\/____/ \n\npragma solidity ^0.8.0;\n\nimport \"./Soulbound.sol\";\nimport \"./Ownable.sol\";\nimport \"./Allowlist.sol\";\n\n/**\n* @title Soulbound Core Contract.\n* @author Daccred.\n* @dev  Soulbound Core template. This contract aims at a soulbound token with\n*       capped supply, set by the deployer or defaulted to 1000000.\n*       Mints and burns affect the current supply of tokens respectively.\n*/\ncontract SoulboundCore is Ownable, Soulbound, Allowlist {\n    /// @dev Total supply limit set by deployer or defaulted to 1000000.\n    uint256 internal totalSupply;\n    /// @dev    With every issue and revoke, this value\n    ///         increases and reduces.\n    ///         It cannot be GT the TOTAL_SUPPLY.\n    uint256 internal supply;\n\n    /// @dev Emitted when a token is minted from Signature.\n    event IssueWithSignature(address indexed to, uint256 indexed tokenId);\n    /// @dev Emitted when a token is revoked with Signature.\n    event RevokeWithSignature(uint256 indexed tokenId);\n\n    /**\n    * @dev  Security check to require that the address calling a particular\n    *       function is the allowlistOwner.\n    *       \n    * @param _caller Address.\n    */\n    modifier onlyAllowlistOwner(address _caller) {\n        require(_caller == getAllowlistOwner(), \"Not Allowlist Owner!\");\n        _;\n    }\n\n    /// @dev Deploys the 3 contracts inherited by the SoulboundCore.\n    constructor(\n        string memory name, \n        string memory symbol,\n        address _allowlistOwner,\n        uint256 _totalSupply\n    )\n    Soulbound(name, symbol)\n    Allowlist(_allowlistOwner) {\n        if (_totalSupply == 0) {\n            totalSupply = 1e6;\n        } else {\n            totalSupply = _totalSupply;\n        }\n    }\n\n    /**\n    * @dev  Mints a particular quantity of tokens to `to`, \n    *       on the condition that the address has been \n    *       signed by the allowlistOwner off-chain.\n    *       This will emit the {MintSoulboundToken} event\n    *       from the Soulbound.sol.\n    *\n    * @notice Callable by anyone.\n    *\n    * @param addr       Address to mint tokens to.\n    * @param hash       Hashed message by the allowlistOwner.\n    * @param sig        Signature, signed by the allowlistOwner.\n    * @param tokenId    Id of the tokens to mint to the `addr`.\n    * @param tokenURI   URI of the token to be minted.\n    */\n    function issueWithSignature(\n        address addr,\n        bytes32 hash,\n        bytes memory sig,\n        uint256 tokenId,\n        string memory tokenURI\n    ) public\n    {\n        /// @dev Require that the address is not a zero address.\n        require(addr != address(0), \"Mint to zero address.\");\n        /// @dev    Require that the hash is actually 32 [64 characters]\n        ///         in length.\n        require(hash.length == 32, \"Invalid hash.\");\n        /// @dev Require the length of the signature is 65.\n        require(sig.length == 65, \"Invalid signature length\");\n        /// @dev    Verifies that the address was actually signed by the\n        ///         allowlistOwner.\n        require(verifySignature(hash, sig), \"Hash not signed by owner.\");\n        /// @dev    Mint the tokens to address.\n        ///         [Ref Soulbound.sol].\n        issue(addr, tokenId, tokenURI);\n        /// @dev Emit the IssueWithSignature event.\n        emit IssueWithSignature(addr, tokenId);\n    }\n\n    /**\n    * @dev  Revokes the ownership of `tokenId` from the owner.\n    *       The token must exist and the signature must be signed the\n    *       allowlistOwner.\n    *       This emits the {RevokeWithSignature} event.\n    *\n    * @notice Callable by anyone.\n    *\n    * @param hash       Hashed message by the allowlistOwner.\n    * @param sig        Signature, signed by the allowlistOwner.\n    * @param tokenId    Id of the token to revoke.\n    */\n    function revokeWithSignature(\n        bytes32 hash,\n        bytes memory sig,\n        uint256 tokenId\n    ) public\n    {\n        /// @dev Require that the token exists.\n        require(_exists(tokenId), \"Revoke of inexistent token.\");\n        /// @dev    Require that the hash is actually 32 [64 characters]\n        ///         in length.\n        require(hash.length == 32, \"Invalid hash.\");\n        /// @dev Require the length of the signature is 65.\n        require(sig.length == 65, \"Invalid signature length\");\n        /// @dev    Verifies that the address was actually signed by the\n        ///         allowlistOwner.\n        require(verifySignature(hash, sig), \"Hash not signed by owner.\");\n        /// @dev    Mint the tokens to address.\n        ///         [Ref Soulbound.sol].\n        revoke(ownerOf(tokenId), tokenId);\n        /// @dev Emit the RevokeWithSignature event.\n        emit RevokeWithSignature(tokenId);\n    }\n\n    /**\n    * @dev  Allows the `caller` (allowlistOwner) to set the baseURI.\n    *       This is really important when the caller wants to mint\n    *       Multiple tokens with the same base URI.\n    *\n    * @notice   Callable by the deployer of this contract [DaccredDeployer]\n    *           and the allowlistOwner.\n    */\n    function setBaseURI(address caller, string memory _baseURI) \n    public \n    onlyOwner \n    onlyAllowlistOwner(caller)\n    {\n        /// @dev Set baseURI.\n        _setBaseURI(_baseURI);\n    }\n\n    /**\n    * @dev  Using the `tokenId` passed, it generates a `stringified` tokenURI,\n    *       packing the baseURI and the current tokenId.\n    *       Makes use of OpenZeppelin's uint to string function.\n    *\n    * @notice Callable by anyone.\n    *\n    * @param tokenId ID of token whose tokenURI is desired.\n    *\n    * @return _tokenURI TokenURI of the passed tokenId.\n    */\n    function generateTokenURI(uint256 tokenId) \n    public \n    view\n    returns(string memory _tokenURI)\n    {\n        /// @dev Require baseURI length is not currently 0.\n        require(bytes(_getBaseURI()).length != 0, \"Empty baseURI\");\n        /// @dev Return a packed tokenURI string.\n        _tokenURI = string(abi.encodePacked(\n            _getBaseURI(),\n            toString(tokenId)\n        ));\n    }\n\n    /**\n    * @dev Converts a `uint256` to its ASCII `string` decimal representation.\n    *      Copied from OpenZeppelin.\n    */\n    function toString(uint256 value) internal pure returns (string memory) {\n        // Inspired by OraclizeAPI's implementation - MIT licence\n        // https://github.com/oraclize/ethereum-api/blob/b42146b063c7d6ee1358846c198246239e9360e8/oraclizeAPI_0.4.25.sol\n\n        if (value == 0) {\n            return \"0\";\n        }\n        uint256 temp = value;\n        uint256 digits;\n        while (temp != 0) {\n            digits++;\n            temp /= 10;\n        }\n        bytes memory buffer = new bytes(digits);\n        while (value != 0) {\n            digits -= 1;\n            buffer[digits] = bytes1(uint8(48 + uint256(value % 10)));\n            value /= 10;\n        }\n        return string(buffer);\n    }\n\n}\n",
  "sourceMap": "820:6499:4:-:0;;;1806:337;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1988:15;1960:4;1966:6;1960:4;1966:6;4248:5:7;:13;1960:4:4;4248:5:7;:13;:::i;:::-;-1:-1:-1;4267:7:7;:17;4277:7;4267;:17;:::i;:::-;;4174:115;;1245:32:2;1264:12;:10;;;:12;;:::i;:::-;1245:18;:32::i;:::-;-1:-1:-1;;1663:14:0;:32;;-1:-1:-1;;;;;;1663:32:0;-1:-1:-1;;;;;1663:32:0;;;;;;;;;;-1:-1:-1;2019:17:4;;;2015:122:::2;;2066:3;2052:11;:17:::0;2015:122:::2;;;2100:11;:26:::0;;;2015:122:::2;1806:337:::0;;;;820:6499;;2987:87:2;3057:10;;2987:87::o;2757:187::-;2849:6;;;-1:-1:-1;;;;;2865:17:2;;;-1:-1:-1;;;;;;2865:17:2;;;;;;;2897:40;;2849:6;;;2865:17;2849:6;;2897:40;;2830:16;;2897:40;2820:124;2757:187;:::o;14:127:10:-;75:10;70:3;66:20;63:1;56:31;106:4;103:1;96:15;130:4;127:1;120:15;146:885;200:5;253:3;246:4;238:6;234:17;230:27;220:55;;271:1;268;261:12;220:55;294:13;;-1:-1:-1;;;;;356:10:10;;;353:36;;;369:18;;:::i;:::-;444:2;438:9;412:2;498:13;;-1:-1:-1;;494:22:10;;;518:2;490:31;486:40;474:53;;;542:18;;;562:22;;;539:46;536:72;;;588:18;;:::i;:::-;628:10;624:2;617:22;663:2;655:6;648:18;685:4;675:14;;730:3;725:2;720;712:6;708:15;704:24;701:33;698:53;;;747:1;744;737:12;698:53;769:1;760:10;;779:133;793:2;790:1;787:9;779:133;;;881:14;;;877:23;;871:30;850:14;;;846:23;;839:63;804:10;;;;779:133;;;930:2;927:1;924:9;921:80;;;989:1;984:2;979;971:6;967:15;963:24;956:35;921:80;1019:6;146:885;-1:-1:-1;;;;;;146:885:10:o;1036:791::-;1153:6;1161;1169;1177;1230:3;1218:9;1209:7;1205:23;1201:33;1198:53;;;1247:1;1244;1237:12;1198:53;1274:16;;-1:-1:-1;;;;;1339:14:10;;;1336:34;;;1366:1;1363;1356:12;1336:34;1389:61;1442:7;1433:6;1422:9;1418:22;1389:61;:::i;:::-;1379:71;;1496:2;1485:9;1481:18;1475:25;1459:41;;1525:2;1515:8;1512:16;1509:36;;;1541:1;1538;1531:12;1509:36;;1564:63;1619:7;1608:8;1597:9;1593:24;1564:63;:::i;:::-;1670:2;1655:18;;1649:25;1554:73;;-1:-1:-1;1649:25:10;-1:-1:-1;;;;;;1703:31:10;;1693:42;;1683:70;;1749:1;1746;1739:12;1683:70;1817:2;1802:18;;;;1796:25;1036:791;;;;-1:-1:-1;;;1036:791:10:o;1832:380::-;1911:1;1907:12;;;;1954;;;1975:61;;2029:4;2021:6;2017:17;2007:27;;1975:61;2082:2;2074:6;2071:14;2051:18;2048:38;2045:161;;2128:10;2123:3;2119:20;2116:1;2109:31;2163:4;2160:1;2153:15;2191:4;2188:1;2181:15;2045:161;;1832:380;;;:::o;2343:545::-;2445:2;2440:3;2437:11;2434:448;;;2481:1;2506:5;2502:2;2495:17;2551:4;2547:2;2537:19;2621:2;2609:10;2605:19;2602:1;2598:27;2592:4;2588:38;2657:4;2645:10;2642:20;2639:47;;;-1:-1:-1;2680:4:10;2639:47;2735:2;2730:3;2726:12;2723:1;2719:20;2713:4;2709:31;2699:41;;2790:82;2808:2;2801:5;2798:13;2790:82;;;2853:17;;;2834:1;2823:13;2790:82;;;2794:3;;;2434:448;2343:545;;;:::o;3064:1352::-;3184:10;;-1:-1:-1;;;;;3206:30:10;;3203:56;;;3239:18;;:::i;:::-;3268:97;3358:6;3318:38;3350:4;3344:11;3318:38;:::i;:::-;3312:4;3268:97;:::i;:::-;3420:4;;3484:2;3473:14;;3501:1;3496:663;;;;4203:1;4220:6;4217:89;;;-1:-1:-1;4272:19:10;;;4266:26;4217:89;-1:-1:-1;;3021:1:10;3017:11;;;3013:24;3009:29;2999:40;3045:1;3041:11;;;2996:57;4319:81;;3466:944;;3496:663;2290:1;2283:14;;;2327:4;2314:18;;-1:-1:-1;;3532:20:10;;;3650:236;3664:7;3661:1;3658:14;3650:236;;;3753:19;;;3747:26;3732:42;;3845:27;;;;3813:1;3801:14;;;;3680:19;;3650:236;;;3654:3;3914:6;3905:7;3902:19;3899:201;;;3975:19;;;3969:26;-1:-1:-1;;4058:1:10;4054:14;;;4070:3;4050:24;4046:37;4042:42;4027:58;4012:74;;3899:201;-1:-1:-1;;;;;4146:1:10;4130:14;;;4126:22;4113:36;;-1:-1:-1;3064:1352:10:o;:::-;820:6499:4;;;;;;",
  "sourcePath": "contracts/SoulboundCore.sol",
  "type": "contract"
}