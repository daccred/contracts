/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { ethers } from "ethers";
import {
  FactoryOptions,
  HardhatEthersHelpers as HardhatEthersHelpersBase,
} from "@nomiclabs/hardhat-ethers/types";

import * as Contracts from ".";

declare module "hardhat/types/runtime" {
  interface HardhatEthersHelpers extends HardhatEthersHelpersBase {
    getContractFactory(
      name: "Ownable",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.Ownable__factory>;
    getContractFactory(
      name: "ERC721",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ERC721__factory>;
    getContractFactory(
      name: "ERC721URIStorage",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ERC721URIStorage__factory>;
    getContractFactory(
      name: "IERC721Metadata",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IERC721Metadata__factory>;
    getContractFactory(
      name: "IERC721",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IERC721__factory>;
    getContractFactory(
      name: "IERC721Receiver",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IERC721Receiver__factory>;
    getContractFactory(
      name: "ERC165",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ERC165__factory>;
    getContractFactory(
      name: "IERC165",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IERC165__factory>;
    getContractFactory(
      name: "Allowlist",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.Allowlist__factory>;
    getContractFactory(
      name: "ERC721A",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ERC721A__factory>;
    getContractFactory(
      name: "ERC721ExtensionCore",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ERC721ExtensionCore__factory>;
    getContractFactory(
      name: "ERC721ExtensionSignature",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ERC721ExtensionSignature__factory>;
    getContractFactory(
      name: "IAllowlist",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IAllowlist__factory>;
    getContractFactory(
      name: "IERC721A",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IERC721A__factory>;
    getContractFactory(
      name: "IERC721ExtensionCore",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IERC721ExtensionCore__factory>;
    getContractFactory(
      name: "IWithPaidExtension",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IWithPaidExtension__factory>;
    getContractFactory(
      name: "IPOAP",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IPOAP__factory>;
    getContractFactory(
      name: "IWhitelist",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IWhitelist__factory>;
    getContractFactory(
      name: "IWithMerkleProof",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IWithMerkleProof__factory>;
    getContractFactory(
      name: "IWithSignature",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IWithSignature__factory>;
    getContractFactory(
      name: "ERC721ABurnableMock",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ERC721ABurnableMock__factory>;
    getContractFactory(
      name: "ERC721ABurnableStartTokenIdMock",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ERC721ABurnableStartTokenIdMock__factory>;
    getContractFactory(
      name: "ERC721AGasReporterMock",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ERC721AGasReporterMock__factory>;
    getContractFactory(
      name: "ERC721AMock",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ERC721AMock__factory>;
    getContractFactory(
      name: "ERC721AStartTokenIdMock",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ERC721AStartTokenIdMock__factory>;
    getContractFactory(
      name: "ERC721ReceiverMock",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ERC721ReceiverMock__factory>;
    getContractFactory(
      name: "StartTokenIdHelper",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.StartTokenIdHelper__factory>;
    getContractFactory(
      name: "Ownable",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.Ownable__factory>;

    getContractAt(
      name: "Ownable",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.Ownable>;
    getContractAt(
      name: "ERC721",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ERC721>;
    getContractAt(
      name: "ERC721URIStorage",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ERC721URIStorage>;
    getContractAt(
      name: "IERC721Metadata",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IERC721Metadata>;
    getContractAt(
      name: "IERC721",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IERC721>;
    getContractAt(
      name: "IERC721Receiver",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IERC721Receiver>;
    getContractAt(
      name: "ERC165",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ERC165>;
    getContractAt(
      name: "IERC165",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IERC165>;
    getContractAt(
      name: "Allowlist",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.Allowlist>;
    getContractAt(
      name: "ERC721A",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ERC721A>;
    getContractAt(
      name: "ERC721ExtensionCore",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ERC721ExtensionCore>;
    getContractAt(
      name: "ERC721ExtensionSignature",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ERC721ExtensionSignature>;
    getContractAt(
      name: "IAllowlist",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IAllowlist>;
    getContractAt(
      name: "IERC721A",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IERC721A>;
    getContractAt(
      name: "IERC721ExtensionCore",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IERC721ExtensionCore>;
    getContractAt(
      name: "IWithPaidExtension",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IWithPaidExtension>;
    getContractAt(
      name: "IPOAP",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IPOAP>;
    getContractAt(
      name: "IWhitelist",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IWhitelist>;
    getContractAt(
      name: "IWithMerkleProof",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IWithMerkleProof>;
    getContractAt(
      name: "IWithSignature",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.IWithSignature>;
    getContractAt(
      name: "ERC721ABurnableMock",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ERC721ABurnableMock>;
    getContractAt(
      name: "ERC721ABurnableStartTokenIdMock",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ERC721ABurnableStartTokenIdMock>;
    getContractAt(
      name: "ERC721AGasReporterMock",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ERC721AGasReporterMock>;
    getContractAt(
      name: "ERC721AMock",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ERC721AMock>;
    getContractAt(
      name: "ERC721AStartTokenIdMock",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ERC721AStartTokenIdMock>;
    getContractAt(
      name: "ERC721ReceiverMock",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.ERC721ReceiverMock>;
    getContractAt(
      name: "StartTokenIdHelper",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.StartTokenIdHelper>;
    getContractAt(
      name: "Ownable",
      address: string,
      signer?: ethers.Signer
    ): Promise<Contracts.Ownable>;

    // default types
    getContractFactory(
      name: string,
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<ethers.ContractFactory>;
    getContractFactory(
      abi: any[],
      bytecode: ethers.utils.BytesLike,
      signer?: ethers.Signer
    ): Promise<ethers.ContractFactory>;
    getContractAt(
      nameOrAbi: string | any[],
      address: string,
      signer?: ethers.Signer
    ): Promise<ethers.Contract>;
  }
}
