/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../common";
import type {
  ERC721ExtensionCore,
  ERC721ExtensionCoreInterface,
} from "../../contracts/ERC721ExtensionCore";

const _abi = [
  {
    inputs: [
      {
        internalType: "string",
        name: "name",
        type: "string",
      },
      {
        internalType: "string",
        name: "symbol",
        type: "string",
      },
      {
        internalType: "address",
        name: "_devWallet",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "ApprovalCallerNotOwnerNorApproved",
    type: "error",
  },
  {
    inputs: [],
    name: "ApprovalQueryForNonexistentToken",
    type: "error",
  },
  {
    inputs: [],
    name: "ApprovalToCurrentOwner",
    type: "error",
  },
  {
    inputs: [],
    name: "ApproveToCaller",
    type: "error",
  },
  {
    inputs: [],
    name: "BalanceQueryForZeroAddress",
    type: "error",
  },
  {
    inputs: [],
    name: "MintToZeroAddress",
    type: "error",
  },
  {
    inputs: [],
    name: "MintZeroQuantity",
    type: "error",
  },
  {
    inputs: [],
    name: "OwnerQueryForNonexistentToken",
    type: "error",
  },
  {
    inputs: [],
    name: "TransferCallerNotOwnerNorApproved",
    type: "error",
  },
  {
    inputs: [],
    name: "TransferFromIncorrectOwner",
    type: "error",
  },
  {
    inputs: [],
    name: "TransferToNonERC721ReceiverImplementer",
    type: "error",
  },
  {
    inputs: [],
    name: "TransferToZeroAddress",
    type: "error",
  },
  {
    inputs: [],
    name: "URIQueryForNonexistentToken",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "approved",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "ApprovalForAll",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "burn",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "devFee",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "devWallet",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "getApproved",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
    ],
    name: "isApprovedForAll",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "maxSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "tokenReceiver",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "quantity",
        type: "uint256",
      },
    ],
    name: "mint",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "mintFee",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "ownerOf",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "_data",
        type: "bytes",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "setApprovalForAll",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "interfaceId",
        type: "bytes4",
      },
    ],
    name: "supportsInterface",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "tokenURI",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_devFee",
        type: "uint256",
      },
    ],
    name: "updateDevFee",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_devWallet",
        type: "address",
      },
    ],
    name: "updateDevWallet",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_maxSupply",
        type: "uint256",
      },
    ],
    name: "updateMaxSupply",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_mintFee",
        type: "uint256",
      },
    ],
    name: "updateMintFee",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "withDraw",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x60806040526000600a55620f4240600b556096600c553480156200002257600080fd5b5060405162001fbe38038062001fbe8339810160408190526200004591620002c9565b8282818181600290805190602001906200006192919062000156565b5080516200007790600390602084019062000156565b505060008055506200008d915033905062000104565b6001600160a01b038116620000db5760405162461bcd60e51b815260206004820152601060248201526f24b73b30b634b21030b2323932b9b99760811b604482015260640160405180910390fd5b600d80546001600160a01b0319166001600160a01b039290921691909117905550620003939050565b600980546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b828054620001649062000356565b90600052602060002090601f016020900481019282620001885760008555620001d3565b82601f10620001a357805160ff1916838001178555620001d3565b82800160010185558215620001d3579182015b82811115620001d3578251825591602001919060010190620001b6565b50620001e1929150620001e5565b5090565b5b80821115620001e15760008155600101620001e6565b634e487b7160e01b600052604160045260246000fd5b600082601f8301126200022457600080fd5b81516001600160401b0380821115620002415762000241620001fc565b604051601f8301601f19908116603f011681019082821181831017156200026c576200026c620001fc565b816040528381526020925086838588010111156200028957600080fd5b600091505b83821015620002ad57858201830151818301840152908201906200028e565b83821115620002bf5760008385830101525b9695505050505050565b600080600060608486031215620002df57600080fd5b83516001600160401b0380821115620002f757600080fd5b620003058783880162000212565b945060208601519150808211156200031c57600080fd5b506200032b8682870162000212565b604086015190935090506001600160a01b03811681146200034b57600080fd5b809150509250925092565b600181811c908216806200036b57607f821691505b602082108114156200038d57634e487b7160e01b600052602260045260246000fd5b50919050565b611c1b80620003a36000396000f3fe6080604052600436106101b75760003560e01c806370a08231116100ec578063a22cb4651161008a578063d5abeb0111610064578063d5abeb01146104b0578063e985e9c5146104c6578063f103b4331461050f578063f2fde38b1461052f57600080fd5b8063a22cb46514610450578063b88d4fde14610470578063c87b56dd1461049057600080fd5b80638da5cb5b116100c65780638da5cb5b146103dd5780638ea5220f146103fb57806395d89b411461041b57806399729ec11461043057600080fd5b806370a0823114610388578063715018a6146103a857806384017e52146103bd57600080fd5b80631816467f1161015957806342842e0e1161013357806342842e0e1461031257806342966c68146103325780636352211e146103525780636827e7641461037257600080fd5b80631816467f146102bf57806323b872dd146102df57806340c10f19146102ff57600080fd5b8063095ea7b311610195578063095ea7b31461024b5780630fdb1c101461026d57806313966db51461028257806318160ddd146102a657600080fd5b806301ffc9a7146101bc57806306fdde03146101f1578063081812fc14610213575b600080fd5b3480156101c857600080fd5b506101dc6101d736600461178f565b61054f565b60405190151581526020015b60405180910390f35b3480156101fd57600080fd5b506102066105a1565b6040516101e89190611804565b34801561021f57600080fd5b5061023361022e366004611817565b610633565b6040516001600160a01b0390911681526020016101e8565b34801561025757600080fd5b5061026b61026636600461184c565b610677565b005b34801561027957600080fd5b5061026b6106fe565b34801561028e57600080fd5b50610298600a5481565b6040519081526020016101e8565b3480156102b257600080fd5b5060015460005403610298565b3480156102cb57600080fd5b5061026b6102da366004611876565b610742565b3480156102eb57600080fd5b5061026b6102fa366004611891565b6107b9565b61026b61030d36600461184c565b6107c4565b34801561031e57600080fd5b5061026b61032d366004611891565b610924565b34801561033e57600080fd5b5061026b61034d366004611817565b61093f565b34801561035e57600080fd5b5061023361036d366004611817565b61094a565b34801561037e57600080fd5b50610298600c5481565b34801561039457600080fd5b506102986103a3366004611876565b61095c565b3480156103b457600080fd5b5061026b6109ab565b3480156103c957600080fd5b5061026b6103d8366004611817565b6109bf565b3480156103e957600080fd5b506009546001600160a01b0316610233565b34801561040757600080fd5b50600d54610233906001600160a01b031681565b34801561042757600080fd5b506102066109cc565b34801561043c57600080fd5b5061026b61044b366004611817565b6109db565b34801561045c57600080fd5b5061026b61046b3660046118cd565b610a29565b34801561047c57600080fd5b5061026b61048b36600461191f565b610abf565b34801561049c57600080fd5b506102066104ab366004611817565b610b03565b3480156104bc57600080fd5b50610298600b5481565b3480156104d257600080fd5b506101dc6104e13660046119fb565b6001600160a01b03918216600090815260076020908152604080832093909416825291909152205460ff1690565b34801561051b57600080fd5b5061026b61052a366004611817565b610c78565b34801561053b57600080fd5b5061026b61054a366004611876565b610cdc565b60006001600160e01b031982166380ac58cd60e01b148061058057506001600160e01b03198216635b5e139f60e01b145b8061059b57506301ffc9a760e01b6001600160e01b03198316145b92915050565b6060600280546105b090611a2e565b80601f01602080910402602001604051908101604052809291908181526020018280546105dc90611a2e565b80156106295780601f106105fe57610100808354040283529160200191610629565b820191906000526020600020905b81548152906001019060200180831161060c57829003601f168201915b5050505050905090565b600061063e82610d52565b61065b576040516333d1c03960e21b815260040160405180910390fd5b506000908152600660205260409020546001600160a01b031690565b60006106828261094a565b9050806001600160a01b0316836001600160a01b031614156106b75760405163250fdee360e21b815260040160405180910390fd5b336001600160a01b038216146106ee576106d181336104e1565b6106ee576040516367d9dca160e11b815260040160405180910390fd5b6106f9838383610d7d565b505050565b610706610dd9565b6009546040516001600160a01b03909116904780156108fc02916000818181858888f1935050505015801561073f573d6000803e3d6000fd5b50565b61074a610dd9565b6001600160a01b0381166107975760405162461bcd60e51b815260206004820152600f60248201526e496e76616c6964206164647265737360881b60448201526064015b60405180910390fd5b600d80546001600160a01b0319166001600160a01b0392909216919091179055565b6106f9838383610e33565b600a5434101561080f5760405162461bcd60e51b815260206004820152601660248201527524b739bab33334b1b4b2b73a1036b4b73a103332b29760511b604482015260640161078e565b600b54816108206001546000540390565b61082a9190611a7f565b111561086e5760405162461bcd60e51b815260206004820152601360248201527226b0bc1039bab838363c903932b0b1b432b21760691b604482015260640161078e565b6001600160a01b0382166108bc5760405162461bcd60e51b815260206004820152601560248201527426b4b73a103a37903d32b9379030b2323932b9b99760591b604482015260640161078e565b6108c68282611010565b6000612710600c54346108d99190611a97565b6108e39190611acc565b600d546040519192506001600160a01b03169082156108fc029083906000818181858888f1935050505015801561091e573d6000803e3d6000fd5b50505050565b6106f983838360405180602001604052806000815250610abf565b61073f81600161102e565b6000610955826111e3565b5192915050565b60006001600160a01b038216610985576040516323d3ad8160e21b815260040160405180910390fd5b506001600160a01b031660009081526005602052604090205467ffffffffffffffff1690565b6109b3610dd9565b6109bd60006112ff565b565b6109c7610dd9565b600a55565b6060600380546105b090611a2e565b6109e3610dd9565b6127108110610a245760405162461bcd60e51b815260206004820152600d60248201526c496e76616c69642076616c756560981b604482015260640161078e565b600c55565b6001600160a01b038216331415610a535760405163b06307db60e01b815260040160405180910390fd5b3360008181526007602090815260408083206001600160a01b03871680855290835292819020805460ff191686151590811790915590519081529192917f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31910160405180910390a35050565b610aca848484610e33565b6001600160a01b0383163b1561091e57610ae684848484611351565b61091e576040516368d2bf6b60e11b815260040160405180910390fd5b6060610b0e82610d52565b610b725760405162461bcd60e51b815260206004820152602f60248201527f45524337323155524953746f726167653a205552492072656164206f66206e6f60448201526e3732bc34b9ba32b73a103a37b5b2b760891b606482015260840161078e565b60008281526008602052604081208054610b8b90611a2e565b80601f0160208091040260200160405190810160405280929190818152602001828054610bb790611a2e565b8015610c045780601f10610bd957610100808354040283529160200191610c04565b820191906000526020600020905b815481529060010190602001808311610be757829003601f168201915b505050505090506000610c2260408051602081019091526000815290565b9050805160001415610c35575092915050565b815115610c67578082604051602001610c4f929190611ae0565b60405160208183030381529060405292505050919050565b610c7084611448565b949350505050565b610c80610dd9565b600081118015610c965750600154600054038110155b610cd75760405162461bcd60e51b8152602060048201526012602482015271496e76616c6964206d617820737570706c7960701b604482015260640161078e565b600b55565b610ce4610dd9565b6001600160a01b038116610d495760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b606482015260840161078e565b61073f816112ff565b600080548210801561059b575050600090815260046020526040902054600160e01b900460ff161590565b60008281526006602052604080822080546001600160a01b0319166001600160a01b0387811691821790925591518593918516917f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92591a4505050565b6009546001600160a01b031633146109bd5760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015260640161078e565b6000610e3e826111e3565b9050836001600160a01b031681600001516001600160a01b031614610e755760405162a1148160e81b815260040160405180910390fd5b6000336001600160a01b0386161480610e935750610e9385336104e1565b80610eae575033610ea384610633565b6001600160a01b0316145b905080610ece57604051632ce44b5f60e11b815260040160405180910390fd5b6001600160a01b038416610ef557604051633a954ecd60e21b815260040160405180910390fd5b610f0160008487610d7d565b6001600160a01b038581166000908152600560209081526040808320805467ffffffffffffffff1980821667ffffffffffffffff92831660001901831617909255898616808652838620805493841693831660019081018416949094179055898652600490945282852080546001600160e01b031916909417600160a01b42909216919091021783558701808452922080549193909116610fd7576000548214610fd7578054602086015167ffffffffffffffff16600160a01b026001600160e01b03199091166001600160a01b038a16171781555b50505082846001600160a01b0316866001600160a01b0316600080516020611bc683398151915260405160405180910390a45050505050565b61102a8282604051806020016040528060008152506114da565b5050565b6000611039836111e3565b8051909150821561109f576000336001600160a01b0383161480611062575061106282336104e1565b8061107d57503361107286610633565b6001600160a01b0316145b90508061109d57604051632ce44b5f60e11b815260040160405180910390fd5b505b6110ab60008583610d7d565b6001600160a01b0380821660008181526005602090815260408083208054600160801b60001967ffffffffffffffff80841691909101811667ffffffffffffffff198416811783900482166001908101831690930277ffffffffffffffff0000000000000000ffffffffffffffff19909416179290921783558b86526004909452828520805460ff60e01b1942909316600160a01b026001600160e01b03199091169097179690961716600160e01b1785559189018084529220805491949091166111ab5760005482146111ab578054602087015167ffffffffffffffff16600160a01b026001600160e01b03199091166001600160a01b038716171781555b5050604051869250600091506001600160a01b03841690600080516020611bc6833981519152908390a4505060018054810190555050565b6040805160608101825260008082526020820181905291810191909152816000548110156112e657600081815260046020908152604091829020825160608101845290546001600160a01b0381168252600160a01b810467ffffffffffffffff1692820192909252600160e01b90910460ff161515918101829052906112e45780516001600160a01b03161561127a579392505050565b5060001901600081815260046020908152604091829020825160608101845290546001600160a01b038116808352600160a01b820467ffffffffffffffff1693830193909352600160e01b900460ff16151592810192909252156112df579392505050565b61127a565b505b604051636f96cda160e11b815260040160405180910390fd5b600980546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b604051630a85bd0160e11b81526000906001600160a01b0385169063150b7a0290611386903390899088908890600401611b0f565b602060405180830381600087803b1580156113a057600080fd5b505af19250505080156113d0575060408051601f3d908101601f191682019092526113cd91810190611b4c565b60015b61142b573d8080156113fe576040519150601f19603f3d011682016040523d82523d6000602084013e611403565b606091505b508051611423576040516368d2bf6b60e11b815260040160405180910390fd5b805181602001fd5b6001600160e01b031916630a85bd0160e11b149050949350505050565b606061145382610d52565b61147057604051630a14c4b560e41b815260040160405180910390fd5b600061148760408051602081019091526000815290565b90508051600014156114a857604051806020016040528060008152506114d3565b806114b28461167b565b6040516020016114c3929190611ae0565b6040516020818303038152906040525b9392505050565b6000546001600160a01b03841661150357604051622e076360e81b815260040160405180910390fd5b826115215760405163b562e8dd60e01b815260040160405180910390fd5b6001600160a01b038416600081815260056020908152604080832080546fffffffffffffffffffffffffffffffff19811667ffffffffffffffff8083168b0181169182176801000000000000000067ffffffffffffffff1990941690921783900481168b01811690920217909155858452600490925290912080546001600160e01b0319168317600160a01b42909316929092029190911790558190818501903b15611638575b60405182906001600160a01b03881690600090600080516020611bc6833981519152908290a46116016000878480600101955087611351565b61161e576040516368d2bf6b60e11b815260040160405180910390fd5b8082106115c857826000541461163357600080fd5b61166b565b5b6040516001830192906001600160a01b03881690600090600080516020611bc6833981519152908290a4808210611639575b50600090815561091e9085838684565b60608161169f5750506040805180820190915260018152600360fc1b602082015290565b8160005b81156116c957806116b381611b69565b91506116c29050600a83611acc565b91506116a3565b60008167ffffffffffffffff8111156116e4576116e4611909565b6040519080825280601f01601f19166020018201604052801561170e576020820181803683370190505b5090505b8415610c7057611723600183611b84565b9150611730600a86611b9b565b61173b906030611a7f565b60f81b81838151811061175057611750611baf565b60200101906001600160f81b031916908160001a905350611772600a86611acc565b9450611712565b6001600160e01b03198116811461073f57600080fd5b6000602082840312156117a157600080fd5b81356114d381611779565b60005b838110156117c75781810151838201526020016117af565b8381111561091e5750506000910152565b600081518084526117f08160208601602086016117ac565b601f01601f19169290920160200192915050565b6020815260006114d360208301846117d8565b60006020828403121561182957600080fd5b5035919050565b80356001600160a01b038116811461184757600080fd5b919050565b6000806040838503121561185f57600080fd5b61186883611830565b946020939093013593505050565b60006020828403121561188857600080fd5b6114d382611830565b6000806000606084860312156118a657600080fd5b6118af84611830565b92506118bd60208501611830565b9150604084013590509250925092565b600080604083850312156118e057600080fd5b6118e983611830565b9150602083013580151581146118fe57600080fd5b809150509250929050565b634e487b7160e01b600052604160045260246000fd5b6000806000806080858703121561193557600080fd5b61193e85611830565b935061194c60208601611830565b925060408501359150606085013567ffffffffffffffff8082111561197057600080fd5b818701915087601f83011261198457600080fd5b81358181111561199657611996611909565b604051601f8201601f19908116603f011681019083821181831017156119be576119be611909565b816040528281528a60208487010111156119d757600080fd5b82602086016020830137600060208483010152809550505050505092959194509250565b60008060408385031215611a0e57600080fd5b611a1783611830565b9150611a2560208401611830565b90509250929050565b600181811c90821680611a4257607f821691505b60208210811415611a6357634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052601160045260246000fd5b60008219821115611a9257611a92611a69565b500190565b6000816000190483118215151615611ab157611ab1611a69565b500290565b634e487b7160e01b600052601260045260246000fd5b600082611adb57611adb611ab6565b500490565b60008351611af28184602088016117ac565b835190830190611b068183602088016117ac565b01949350505050565b6001600160a01b0385811682528416602082015260408101839052608060608201819052600090611b42908301846117d8565b9695505050505050565b600060208284031215611b5e57600080fd5b81516114d381611779565b6000600019821415611b7d57611b7d611a69565b5060010190565b600082821015611b9657611b96611a69565b500390565b600082611baa57611baa611ab6565b500690565b634e487b7160e01b600052603260045260246000fdfeddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3efa2646970667358221220d61f5b99a9d47c0dee2b21ae3eebb9f44ce605f074eea36e1dc32861db17e3e664736f6c63430008090033";

type ERC721ExtensionCoreConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: ERC721ExtensionCoreConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class ERC721ExtensionCore__factory extends ContractFactory {
  constructor(...args: ERC721ExtensionCoreConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    name: PromiseOrValue<string>,
    symbol: PromiseOrValue<string>,
    _devWallet: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<ERC721ExtensionCore> {
    return super.deploy(
      name,
      symbol,
      _devWallet,
      overrides || {}
    ) as Promise<ERC721ExtensionCore>;
  }
  override getDeployTransaction(
    name: PromiseOrValue<string>,
    symbol: PromiseOrValue<string>,
    _devWallet: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      name,
      symbol,
      _devWallet,
      overrides || {}
    );
  }
  override attach(address: string): ERC721ExtensionCore {
    return super.attach(address) as ERC721ExtensionCore;
  }
  override connect(signer: Signer): ERC721ExtensionCore__factory {
    return super.connect(signer) as ERC721ExtensionCore__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ERC721ExtensionCoreInterface {
    return new utils.Interface(_abi) as ERC721ExtensionCoreInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): ERC721ExtensionCore {
    return new Contract(address, _abi, signerOrProvider) as ERC721ExtensionCore;
  }
}
