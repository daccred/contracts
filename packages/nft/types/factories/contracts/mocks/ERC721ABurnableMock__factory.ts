/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../common";
import type {
  ERC721ABurnableMock,
  ERC721ABurnableMockInterface,
} from "../../../contracts/mocks/ERC721ABurnableMock";

const _abi = [
  {
    inputs: [
      {
        internalType: "string",
        name: "name_",
        type: "string",
      },
      {
        internalType: "string",
        name: "symbol_",
        type: "string",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "ApprovalCallerNotOwnerNorApproved",
    type: "error",
  },
  {
    inputs: [],
    name: "ApprovalQueryForNonexistentToken",
    type: "error",
  },
  {
    inputs: [],
    name: "ApprovalToCurrentOwner",
    type: "error",
  },
  {
    inputs: [],
    name: "ApproveToCaller",
    type: "error",
  },
  {
    inputs: [],
    name: "BalanceQueryForZeroAddress",
    type: "error",
  },
  {
    inputs: [],
    name: "MintToZeroAddress",
    type: "error",
  },
  {
    inputs: [],
    name: "MintZeroQuantity",
    type: "error",
  },
  {
    inputs: [],
    name: "OwnerQueryForNonexistentToken",
    type: "error",
  },
  {
    inputs: [],
    name: "TransferCallerNotOwnerNorApproved",
    type: "error",
  },
  {
    inputs: [],
    name: "TransferFromIncorrectOwner",
    type: "error",
  },
  {
    inputs: [],
    name: "TransferToNonERC721ReceiverImplementer",
    type: "error",
  },
  {
    inputs: [],
    name: "TransferToZeroAddress",
    type: "error",
  },
  {
    inputs: [],
    name: "URIQueryForNonexistentToken",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "approved",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "ApprovalForAll",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "burn",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "exists",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "getApproved",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "index",
        type: "uint256",
      },
    ],
    name: "getOwnershipAt",
    outputs: [
      {
        components: [
          {
            internalType: "address",
            name: "addr",
            type: "address",
          },
          {
            internalType: "uint64",
            name: "startTimestamp",
            type: "uint64",
          },
          {
            internalType: "bool",
            name: "burned",
            type: "bool",
          },
        ],
        internalType: "struct IERC721A.TokenOwnership",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
    ],
    name: "isApprovedForAll",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "ownerOf",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "quantity",
        type: "uint256",
      },
    ],
    name: "safeMint",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "_data",
        type: "bytes",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "setApprovalForAll",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "interfaceId",
        type: "bytes4",
      },
    ],
    name: "supportsInterface",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "tokenURI",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalMinted",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x60806040523480156200001157600080fd5b5060405162001754380380620017548339810160408190526200003491620001e6565b8151829082906200004d90600290602085019062000073565b5080516200006390600390602084019062000073565b5060008055506200028d92505050565b828054620000819062000250565b90600052602060002090601f016020900481019282620000a55760008555620000f0565b82601f10620000c057805160ff1916838001178555620000f0565b82800160010185558215620000f0579182015b82811115620000f0578251825591602001919060010190620000d3565b50620000fe92915062000102565b5090565b5b80821115620000fe576000815560010162000103565b634e487b7160e01b600052604160045260246000fd5b600082601f8301126200014157600080fd5b81516001600160401b03808211156200015e576200015e62000119565b604051601f8301601f19908116603f0116810190828211818310171562000189576200018962000119565b81604052838152602092508683858801011115620001a657600080fd5b600091505b83821015620001ca5785820183015181830184015290820190620001ab565b83821115620001dc5760008385830101525b9695505050505050565b60008060408385031215620001fa57600080fd5b82516001600160401b03808211156200021257600080fd5b62000220868387016200012f565b935060208501519150808211156200023757600080fd5b5062000246858286016200012f565b9150509250929050565b600181811c908216806200026557607f821691505b602082108114156200028757634e487b7160e01b600052602260045260246000fd5b50919050565b6114b7806200029d6000396000f3fe608060405234801561001057600080fd5b50600436106101215760003560e01c80636352211e116100ad578063a2309ff811610071578063a2309ff814610259578063b88d4fde14610261578063c87b56dd14610274578063e985e9c514610287578063f2523633146102c357600080fd5b80636352211e1461020557806370a082311461021857806395d89b411461022b578063a144819414610233578063a22cb4651461024657600080fd5b806318160ddd116100f457806318160ddd146101a357806323b872dd146101b957806342842e0e146101cc57806342966c68146101df5780634f558e79146101f257600080fd5b806301ffc9a71461012657806306fdde031461014e578063081812fc14610163578063095ea7b31461018e575b600080fd5b61013961013436600461104a565b610370565b60405190151581526020015b60405180910390f35b6101566103c2565b60405161014591906110bf565b6101766101713660046110d2565b610454565b6040516001600160a01b039091168152602001610145565b6101a161019c366004611107565b610498565b005b600154600054035b604051908152602001610145565b6101a16101c7366004611131565b61051f565b6101a16101da366004611131565b61052a565b6101a16101ed3660046110d2565b610545565b6101396102003660046110d2565b610553565b6101766102133660046110d2565b61055e565b6101ab61022636600461116d565b610570565b6101566105bf565b6101a1610241366004611107565b6105ce565b6101a1610254366004611188565b6105dc565b6000546101ab565b6101a161026f3660046111da565b610672565b6101566102823660046110d2565b6106bc565b6101396102953660046112b6565b6001600160a01b03918216600090815260076020908152604080832093909416825291909152205460ff1690565b6103396102d13660046110d2565b604080516060808201835260008083526020808401829052928401819052938452600482529282902082519384018352546001600160a01b0381168452600160a01b810467ffffffffffffffff1691840191909152600160e01b900460ff1615159082015290565b6040805182516001600160a01b0316815260208084015167ffffffffffffffff169082015291810151151590820152606001610145565b60006001600160e01b031982166380ac58cd60e01b14806103a157506001600160e01b03198216635b5e139f60e01b145b806103bc57506301ffc9a760e01b6001600160e01b03198316145b92915050565b6060600280546103d1906112e9565b80601f01602080910402602001604051908101604052809291908181526020018280546103fd906112e9565b801561044a5780601f1061041f5761010080835404028352916020019161044a565b820191906000526020600020905b81548152906001019060200180831161042d57829003601f168201915b5050505050905090565b600061045f8261074e565b61047c576040516333d1c03960e21b815260040160405180910390fd5b506000908152600660205260409020546001600160a01b031690565b60006104a38261055e565b9050806001600160a01b0316836001600160a01b031614156104d85760405163250fdee360e21b815260040160405180910390fd5b336001600160a01b0382161461050f576104f28133610295565b61050f576040516367d9dca160e11b815260040160405180910390fd5b61051a838383610779565b505050565b61051a8383836107d5565b61051a83838360405180602001604052806000815250610672565b6105508160016109b2565b50565b60006103bc8261074e565b600061056982610b67565b5192915050565b60006001600160a01b038216610599576040516323d3ad8160e21b815260040160405180910390fd5b506001600160a01b031660009081526005602052604090205467ffffffffffffffff1690565b6060600380546103d1906112e9565b6105d88282610c83565b5050565b6001600160a01b0382163314156106065760405163b06307db60e01b815260040160405180910390fd5b3360008181526007602090815260408083206001600160a01b03871680855290835292819020805460ff191686151590811790915590519081529192917f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31910160405180910390a35050565b61067d8484846107d5565b6001600160a01b0383163b156106b65761069984848484610c9d565b6106b6576040516368d2bf6b60e11b815260040160405180910390fd5b50505050565b60606106c78261074e565b6106e457604051630a14c4b560e41b815260040160405180910390fd5b60006106fb60408051602081019091526000815290565b905080516000141561071c5760405180602001604052806000815250610747565b8061072684610d95565b604051602001610737929190611324565b6040516020818303038152906040525b9392505050565b60008054821080156103bc575050600090815260046020526040902054600160e01b900460ff161590565b60008281526006602052604080822080546001600160a01b0319166001600160a01b0387811691821790925591518593918516917f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92591a4505050565b60006107e082610b67565b9050836001600160a01b031681600001516001600160a01b0316146108175760405162a1148160e81b815260040160405180910390fd5b6000336001600160a01b038616148061083557506108358533610295565b8061085057503361084584610454565b6001600160a01b0316145b90508061087057604051632ce44b5f60e11b815260040160405180910390fd5b6001600160a01b03841661089757604051633a954ecd60e21b815260040160405180910390fd5b6108a360008487610779565b6001600160a01b038581166000908152600560209081526040808320805467ffffffffffffffff1980821667ffffffffffffffff92831660001901831617909255898616808652838620805493841693831660019081018416949094179055898652600490945282852080546001600160e01b031916909417600160a01b42909216919091021783558701808452922080549193909116610979576000548214610979578054602086015167ffffffffffffffff16600160a01b026001600160e01b03199091166001600160a01b038a16171781555b50505082846001600160a01b0316866001600160a01b031660008051602061146283398151915260405160405180910390a45050505050565b60006109bd83610b67565b80519091508215610a23576000336001600160a01b03831614806109e657506109e68233610295565b80610a015750336109f686610454565b6001600160a01b0316145b905080610a2157604051632ce44b5f60e11b815260040160405180910390fd5b505b610a2f60008583610779565b6001600160a01b0380821660008181526005602090815260408083208054600160801b60001967ffffffffffffffff80841691909101811667ffffffffffffffff198416811783900482166001908101831690930277ffffffffffffffff0000000000000000ffffffffffffffff19909416179290921783558b86526004909452828520805460ff60e01b1942909316600160a01b026001600160e01b03199091169097179690961716600160e01b178555918901808452922080549194909116610b2f576000548214610b2f578054602087015167ffffffffffffffff16600160a01b026001600160e01b03199091166001600160a01b038716171781555b5050604051869250600091506001600160a01b03841690600080516020611462833981519152908390a4505060018054810190555050565b604080516060810182526000808252602082018190529181019190915281600054811015610c6a57600081815260046020908152604091829020825160608101845290546001600160a01b0381168252600160a01b810467ffffffffffffffff1692820192909252600160e01b90910460ff16151591810182905290610c685780516001600160a01b031615610bfe579392505050565b5060001901600081815260046020908152604091829020825160608101845290546001600160a01b038116808352600160a01b820467ffffffffffffffff1693830193909352600160e01b900460ff1615159281019290925215610c63579392505050565b610bfe565b505b604051636f96cda160e11b815260040160405180910390fd5b6105d8828260405180602001604052806000815250610e93565b604051630a85bd0160e11b81526000906001600160a01b0385169063150b7a0290610cd2903390899088908890600401611353565b602060405180830381600087803b158015610cec57600080fd5b505af1925050508015610d1c575060408051601f3d908101601f19168201909252610d1991810190611390565b60015b610d77573d808015610d4a576040519150601f19603f3d011682016040523d82523d6000602084013e610d4f565b606091505b508051610d6f576040516368d2bf6b60e11b815260040160405180910390fd5b805181602001fd5b6001600160e01b031916630a85bd0160e11b1490505b949350505050565b606081610db95750506040805180820190915260018152600360fc1b602082015290565b8160005b8115610de35780610dcd816113c3565b9150610ddc9050600a836113f4565b9150610dbd565b60008167ffffffffffffffff811115610dfe57610dfe6111c4565b6040519080825280601f01601f191660200182016040528015610e28576020820181803683370190505b5090505b8415610d8d57610e3d600183611408565b9150610e4a600a8661141f565b610e55906030611433565b60f81b818381518110610e6a57610e6a61144b565b60200101906001600160f81b031916908160001a905350610e8c600a866113f4565b9450610e2c565b6000546001600160a01b038416610ebc57604051622e076360e81b815260040160405180910390fd5b82610eda5760405163b562e8dd60e01b815260040160405180910390fd5b6001600160a01b038416600081815260056020908152604080832080546fffffffffffffffffffffffffffffffff19811667ffffffffffffffff8083168b0181169182176801000000000000000067ffffffffffffffff1990941690921783900481168b01811690920217909155858452600490925290912080546001600160e01b0319168317600160a01b42909316929092029190911790558190818501903b15610ff1575b60405182906001600160a01b03881690600090600080516020611462833981519152908290a4610fba6000878480600101955087610c9d565b610fd7576040516368d2bf6b60e11b815260040160405180910390fd5b808210610f81578260005414610fec57600080fd5b611024565b5b6040516001830192906001600160a01b03881690600090600080516020611462833981519152908290a4808210610ff2575b5060009081556106b69085838684565b6001600160e01b03198116811461055057600080fd5b60006020828403121561105c57600080fd5b813561074781611034565b60005b8381101561108257818101518382015260200161106a565b838111156106b65750506000910152565b600081518084526110ab816020860160208601611067565b601f01601f19169290920160200192915050565b6020815260006107476020830184611093565b6000602082840312156110e457600080fd5b5035919050565b80356001600160a01b038116811461110257600080fd5b919050565b6000806040838503121561111a57600080fd5b611123836110eb565b946020939093013593505050565b60008060006060848603121561114657600080fd5b61114f846110eb565b925061115d602085016110eb565b9150604084013590509250925092565b60006020828403121561117f57600080fd5b610747826110eb565b6000806040838503121561119b57600080fd5b6111a4836110eb565b9150602083013580151581146111b957600080fd5b809150509250929050565b634e487b7160e01b600052604160045260246000fd5b600080600080608085870312156111f057600080fd5b6111f9856110eb565b9350611207602086016110eb565b925060408501359150606085013567ffffffffffffffff8082111561122b57600080fd5b818701915087601f83011261123f57600080fd5b813581811115611251576112516111c4565b604051601f8201601f19908116603f01168101908382118183101715611279576112796111c4565b816040528281528a602084870101111561129257600080fd5b82602086016020830137600060208483010152809550505050505092959194509250565b600080604083850312156112c957600080fd5b6112d2836110eb565b91506112e0602084016110eb565b90509250929050565b600181811c908216806112fd57607f821691505b6020821081141561131e57634e487b7160e01b600052602260045260246000fd5b50919050565b60008351611336818460208801611067565b83519083019061134a818360208801611067565b01949350505050565b6001600160a01b038581168252841660208201526040810183905260806060820181905260009061138690830184611093565b9695505050505050565b6000602082840312156113a257600080fd5b815161074781611034565b634e487b7160e01b600052601160045260246000fd5b60006000198214156113d7576113d76113ad565b5060010190565b634e487b7160e01b600052601260045260246000fd5b600082611403576114036113de565b500490565b60008282101561141a5761141a6113ad565b500390565b60008261142e5761142e6113de565b500690565b60008219821115611446576114466113ad565b500190565b634e487b7160e01b600052603260045260246000fdfeddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3efa26469706673582212209f93a6b649ab59920131a43d7582b9b4eab9187869c2fb152f92be6f08f6203264736f6c63430008090033";

type ERC721ABurnableMockConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: ERC721ABurnableMockConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class ERC721ABurnableMock__factory extends ContractFactory {
  constructor(...args: ERC721ABurnableMockConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    name_: PromiseOrValue<string>,
    symbol_: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<ERC721ABurnableMock> {
    return super.deploy(
      name_,
      symbol_,
      overrides || {}
    ) as Promise<ERC721ABurnableMock>;
  }
  override getDeployTransaction(
    name_: PromiseOrValue<string>,
    symbol_: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(name_, symbol_, overrides || {});
  }
  override attach(address: string): ERC721ABurnableMock {
    return super.attach(address) as ERC721ABurnableMock;
  }
  override connect(signer: Signer): ERC721ABurnableMock__factory {
    return super.connect(signer) as ERC721ABurnableMock__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ERC721ABurnableMockInterface {
    return new utils.Interface(_abi) as ERC721ABurnableMockInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): ERC721ABurnableMock {
    return new Contract(address, _abi, signerOrProvider) as ERC721ABurnableMock;
  }
}
