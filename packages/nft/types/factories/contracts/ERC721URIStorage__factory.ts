/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../common";
import type {
  ERC721URIStorage,
  ERC721URIStorageInterface,
} from "../../contracts/ERC721URIStorage";

const _abi = [
  {
    inputs: [
      {
        internalType: "string",
        name: "name",
        type: "string",
      },
      {
        internalType: "string",
        name: "symbol",
        type: "string",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "ApprovalCallerNotOwnerNorApproved",
    type: "error",
  },
  {
    inputs: [],
    name: "ApprovalQueryForNonexistentToken",
    type: "error",
  },
  {
    inputs: [],
    name: "ApprovalToCurrentOwner",
    type: "error",
  },
  {
    inputs: [],
    name: "ApproveToCaller",
    type: "error",
  },
  {
    inputs: [],
    name: "BalanceQueryForZeroAddress",
    type: "error",
  },
  {
    inputs: [],
    name: "MintToZeroAddress",
    type: "error",
  },
  {
    inputs: [],
    name: "MintZeroQuantity",
    type: "error",
  },
  {
    inputs: [],
    name: "OwnerQueryForNonexistentToken",
    type: "error",
  },
  {
    inputs: [],
    name: "TransferCallerNotOwnerNorApproved",
    type: "error",
  },
  {
    inputs: [],
    name: "TransferFromIncorrectOwner",
    type: "error",
  },
  {
    inputs: [],
    name: "TransferToNonERC721ReceiverImplementer",
    type: "error",
  },
  {
    inputs: [],
    name: "TransferToZeroAddress",
    type: "error",
  },
  {
    inputs: [],
    name: "URIQueryForNonexistentToken",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "approved",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "ApprovalForAll",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "burn",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "getApproved",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
    ],
    name: "isApprovedForAll",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "ownerOf",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "_data",
        type: "bytes",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "setApprovalForAll",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "interfaceId",
        type: "bytes4",
      },
    ],
    name: "supportsInterface",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "tokenURI",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x60806040523480156200001157600080fd5b50604051620015f5380380620015f58339810160408190526200003491620001e6565b8151829082906200004d90600290602085019062000073565b5080516200006390600390602084019062000073565b5060008055506200028d92505050565b828054620000819062000250565b90600052602060002090601f016020900481019282620000a55760008555620000f0565b82601f10620000c057805160ff1916838001178555620000f0565b82800160010185558215620000f0579182015b82811115620000f0578251825591602001919060010190620000d3565b50620000fe92915062000102565b5090565b5b80821115620000fe576000815560010162000103565b634e487b7160e01b600052604160045260246000fd5b600082601f8301126200014157600080fd5b81516001600160401b03808211156200015e576200015e62000119565b604051601f8301601f19908116603f0116810190828211818310171562000189576200018962000119565b81604052838152602092508683858801011115620001a657600080fd5b600091505b83821015620001ca5785820183015181830184015290820190620001ab565b83821115620001dc5760008385830101525b9695505050505050565b60008060408385031215620001fa57600080fd5b82516001600160401b03808211156200021257600080fd5b62000220868387016200012f565b935060208501519150808211156200023757600080fd5b5062000246858286016200012f565b9150509250929050565b600181811c908216806200026557607f821691505b602082108114156200028757634e487b7160e01b600052602260045260246000fd5b50919050565b611358806200029d6000396000f3fe608060405234801561001057600080fd5b50600436106100f55760003560e01c806342966c6811610097578063a22cb46511610066578063a22cb465146101f4578063b88d4fde14610207578063c87b56dd1461021a578063e985e9c51461022d57600080fd5b806342966c68146101b35780636352211e146101c657806370a08231146101d957806395d89b41146101ec57600080fd5b8063095ea7b3116100d3578063095ea7b31461016257806318160ddd1461017757806323b872dd1461018d57806342842e0e146101a057600080fd5b806301ffc9a7146100fa57806306fdde0314610122578063081812fc14610137575b600080fd5b61010d610108366004610f0b565b610269565b60405190151581526020015b60405180910390f35b61012a6102bb565b6040516101199190610f80565b61014a610145366004610f93565b61034d565b6040516001600160a01b039091168152602001610119565b610175610170366004610fc8565b610391565b005b600154600054035b604051908152602001610119565b61017561019b366004610ff2565b610418565b6101756101ae366004610ff2565b610423565b6101756101c1366004610f93565b61043e565b61014a6101d4366004610f93565b61044c565b61017f6101e736600461102e565b61045e565b61012a6104ad565b610175610202366004611049565b6104bc565b61017561021536600461109b565b610552565b61012a610228366004610f93565b61059c565b61010d61023b366004611177565b6001600160a01b03918216600090815260076020908152604080832093909416825291909152205460ff1690565b60006001600160e01b031982166380ac58cd60e01b148061029a57506001600160e01b03198216635b5e139f60e01b145b806102b557506301ffc9a760e01b6001600160e01b03198316145b92915050565b6060600280546102ca906111aa565b80601f01602080910402602001604051908101604052809291908181526020018280546102f6906111aa565b80156103435780601f1061031857610100808354040283529160200191610343565b820191906000526020600020905b81548152906001019060200180831161032657829003601f168201915b5050505050905090565b600061035882610715565b610375576040516333d1c03960e21b815260040160405180910390fd5b506000908152600660205260409020546001600160a01b031690565b600061039c8261044c565b9050806001600160a01b0316836001600160a01b031614156103d15760405163250fdee360e21b815260040160405180910390fd5b336001600160a01b03821614610408576103eb813361023b565b610408576040516367d9dca160e11b815260040160405180910390fd5b610413838383610740565b505050565b61041383838361079c565b61041383838360405180602001604052806000815250610552565b61044981600161098b565b50565b600061045782610b52565b5192915050565b60006001600160a01b038216610487576040516323d3ad8160e21b815260040160405180910390fd5b506001600160a01b031660009081526005602052604090205467ffffffffffffffff1690565b6060600380546102ca906111aa565b6001600160a01b0382163314156104e65760405163b06307db60e01b815260040160405180910390fd5b3360008181526007602090815260408083206001600160a01b03871680855290835292819020805460ff191686151590811790915590519081529192917f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31910160405180910390a35050565b61055d84848461079c565b6001600160a01b0383163b156105965761057984848484610c6e565b610596576040516368d2bf6b60e11b815260040160405180910390fd5b50505050565b60606105a782610715565b61060f5760405162461bcd60e51b815260206004820152602f60248201527f45524337323155524953746f726167653a205552492072656164206f66206e6f60448201526e3732bc34b9ba32b73a103a37b5b2b760891b606482015260840160405180910390fd5b60008281526008602052604081208054610628906111aa565b80601f0160208091040260200160405190810160405280929190818152602001828054610654906111aa565b80156106a15780601f10610676576101008083540402835291602001916106a1565b820191906000526020600020905b81548152906001019060200180831161068457829003601f168201915b5050505050905060006106bf60408051602081019091526000815290565b90508051600014156106d2575092915050565b8151156107045780826040516020016106ec9291906111e5565b60405160208183030381529060405292505050919050565b61070d84610d65565b949350505050565b60008054821080156102b5575050600090815260046020526040902054600160e01b900460ff161590565b60008281526006602052604080822080546001600160a01b0319166001600160a01b0387811691821790925591518593918516917f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92591a4505050565b60006107a782610b52565b9050836001600160a01b031681600001516001600160a01b0316146107de5760405162a1148160e81b815260040160405180910390fd5b6000336001600160a01b03861614806107fc57506107fc853361023b565b8061081757503361080c8461034d565b6001600160a01b0316145b90508061083757604051632ce44b5f60e11b815260040160405180910390fd5b6001600160a01b03841661085e57604051633a954ecd60e21b815260040160405180910390fd5b61086a60008487610740565b6001600160a01b038581166000908152600560209081526040808320805467ffffffffffffffff1980821667ffffffffffffffff92831660001901831617909255898616808652838620805493841693831660019081018416949094179055898652600490945282852080546001600160e01b031916909417600160a01b42909216919091021783558701808452922080549193909116610940576000548214610940578054602086015167ffffffffffffffff16600160a01b026001600160e01b03199091166001600160a01b038a16171781555b50505082846001600160a01b0316866001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef60405160405180910390a45050505050565b600061099683610b52565b805190915082156109fc576000336001600160a01b03831614806109bf57506109bf823361023b565b806109da5750336109cf8661034d565b6001600160a01b0316145b9050806109fa57604051632ce44b5f60e11b815260040160405180910390fd5b505b610a0860008583610740565b6001600160a01b0380821660008181526005602090815260408083208054600160801b60001967ffffffffffffffff80841691909101811667ffffffffffffffff198416811783900482166001908101831690930277ffffffffffffffff0000000000000000ffffffffffffffff19909416179290921783558b86526004909452828520805460ff60e01b1942909316600160a01b026001600160e01b03199091169097179690961716600160e01b178555918901808452922080549194909116610b08576000548214610b08578054602087015167ffffffffffffffff16600160a01b026001600160e01b03199091166001600160a01b038716171781555b5050604051869250600091506001600160a01b038416907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef908390a4505060018054810190555050565b604080516060810182526000808252602082018190529181019190915281600054811015610c5557600081815260046020908152604091829020825160608101845290546001600160a01b0381168252600160a01b810467ffffffffffffffff1692820192909252600160e01b90910460ff16151591810182905290610c535780516001600160a01b031615610be9579392505050565b5060001901600081815260046020908152604091829020825160608101845290546001600160a01b038116808352600160a01b820467ffffffffffffffff1693830193909352600160e01b900460ff1615159281019290925215610c4e579392505050565b610be9565b505b604051636f96cda160e11b815260040160405180910390fd5b604051630a85bd0160e11b81526000906001600160a01b0385169063150b7a0290610ca3903390899088908890600401611214565b602060405180830381600087803b158015610cbd57600080fd5b505af1925050508015610ced575060408051601f3d908101601f19168201909252610cea91810190611251565b60015b610d48573d808015610d1b576040519150601f19603f3d011682016040523d82523d6000602084013e610d20565b606091505b508051610d40576040516368d2bf6b60e11b815260040160405180910390fd5b805181602001fd5b6001600160e01b031916630a85bd0160e11b149050949350505050565b6060610d7082610715565b610d8d57604051630a14c4b560e41b815260040160405180910390fd5b6000610da460408051602081019091526000815290565b9050805160001415610dc55760405180602001604052806000815250610df0565b80610dcf84610df7565b604051602001610de09291906111e5565b6040516020818303038152906040525b9392505050565b606081610e1b5750506040805180820190915260018152600360fc1b602082015290565b8160005b8115610e455780610e2f81611284565b9150610e3e9050600a836112b5565b9150610e1f565b60008167ffffffffffffffff811115610e6057610e60611085565b6040519080825280601f01601f191660200182016040528015610e8a576020820181803683370190505b5090505b841561070d57610e9f6001836112c9565b9150610eac600a866112e0565b610eb79060306112f4565b60f81b818381518110610ecc57610ecc61130c565b60200101906001600160f81b031916908160001a905350610eee600a866112b5565b9450610e8e565b6001600160e01b03198116811461044957600080fd5b600060208284031215610f1d57600080fd5b8135610df081610ef5565b60005b83811015610f43578181015183820152602001610f2b565b838111156105965750506000910152565b60008151808452610f6c816020860160208601610f28565b601f01601f19169290920160200192915050565b602081526000610df06020830184610f54565b600060208284031215610fa557600080fd5b5035919050565b80356001600160a01b0381168114610fc357600080fd5b919050565b60008060408385031215610fdb57600080fd5b610fe483610fac565b946020939093013593505050565b60008060006060848603121561100757600080fd5b61101084610fac565b925061101e60208501610fac565b9150604084013590509250925092565b60006020828403121561104057600080fd5b610df082610fac565b6000806040838503121561105c57600080fd5b61106583610fac565b91506020830135801515811461107a57600080fd5b809150509250929050565b634e487b7160e01b600052604160045260246000fd5b600080600080608085870312156110b157600080fd5b6110ba85610fac565b93506110c860208601610fac565b925060408501359150606085013567ffffffffffffffff808211156110ec57600080fd5b818701915087601f83011261110057600080fd5b81358181111561111257611112611085565b604051601f8201601f19908116603f0116810190838211818310171561113a5761113a611085565b816040528281528a602084870101111561115357600080fd5b82602086016020830137600060208483010152809550505050505092959194509250565b6000806040838503121561118a57600080fd5b61119383610fac565b91506111a160208401610fac565b90509250929050565b600181811c908216806111be57607f821691505b602082108114156111df57634e487b7160e01b600052602260045260246000fd5b50919050565b600083516111f7818460208801610f28565b83519083019061120b818360208801610f28565b01949350505050565b6001600160a01b038581168252841660208201526040810183905260806060820181905260009061124790830184610f54565b9695505050505050565b60006020828403121561126357600080fd5b8151610df081610ef5565b634e487b7160e01b600052601160045260246000fd5b60006000198214156112985761129861126e565b5060010190565b634e487b7160e01b600052601260045260246000fd5b6000826112c4576112c461129f565b500490565b6000828210156112db576112db61126e565b500390565b6000826112ef576112ef61129f565b500690565b600082198211156113075761130761126e565b500190565b634e487b7160e01b600052603260045260246000fdfea264697066735822122007ef5a6a5def072e17bf76543e9c6565b663b74195553c7ec6207ceb075923c564736f6c63430008090033";

type ERC721URIStorageConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: ERC721URIStorageConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class ERC721URIStorage__factory extends ContractFactory {
  constructor(...args: ERC721URIStorageConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    name: PromiseOrValue<string>,
    symbol: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<ERC721URIStorage> {
    return super.deploy(
      name,
      symbol,
      overrides || {}
    ) as Promise<ERC721URIStorage>;
  }
  override getDeployTransaction(
    name: PromiseOrValue<string>,
    symbol: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(name, symbol, overrides || {});
  }
  override attach(address: string): ERC721URIStorage {
    return super.attach(address) as ERC721URIStorage;
  }
  override connect(signer: Signer): ERC721URIStorage__factory {
    return super.connect(signer) as ERC721URIStorage__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ERC721URIStorageInterface {
    return new utils.Interface(_abi) as ERC721URIStorageInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): ERC721URIStorage {
    return new Contract(address, _abi, signerOrProvider) as ERC721URIStorage;
  }
}
